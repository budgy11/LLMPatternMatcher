
<?php
// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $user, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Simple validation
    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all fields!";
        return;
    }

    // Check password match
    if ($password != $confirm_password) {
        echo "Passwords do not match!";
        return;
    }

    // Email validation
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return;
    }

    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $check_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $check_query);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return;
    }

    // Insert user into database
    $insert_query = "INSERT INTO users (username, email, password)
                    VALUES ('$username', '$email', '$hashed_password')";
    
    if (mysqli_query($conn, $insert_query)) {
        echo "Registration successful!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }

    // Close connection
    mysqli_close($conn);
}

// Call the function when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}
?>


<?php
// Database connection
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password, $conn) {
    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        throw new Exception("All fields are required");
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        throw new Exception("Username already exists");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format");
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        throw new Exception("Email already registered");
    }

    // Validate password
    if (strlen($password) < 8) {
        throw new Exception("Password must be at least 8 characters long");
    }

    if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
        throw new Exception("Password can only contain letters and numbers");
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        return true;
    } else {
        throw new Exception("Registration failed. Please try again.");
    }
}

try {
    // Example usage:
    $username = "john_doe";
    $email = "john@example.com";
    $password = "SecurePassword123";

    if (registerUser($username, $email, $password, $conn)) {
        echo "Registration successful!";
        header("Location: login.php"); // Redirect to login page
        exit();
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'user_registration';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Get form values
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];

    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields are required!");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $first_name = mysqli_real_escape_string($conn, $first_name);
    $last_name = mysqli_real_escape_string($conn, $last_name);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = $conn->query($check_username_query);

    if ($result->num_rows > 0) {
        die("Username already exists!");
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($check_email_query);

    if ($result->num_rows > 0) {
        die("Email already exists!");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert new user into database
    $sql = "INSERT INTO users (username, email, password, first_name, last_name) 
            VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name')";

    if ($conn->query($sql)) {
        echo "Registration successful! You can now login.";
    } else {
        die("Error registering user: " . $conn->error);
    }
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create New Account</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="first_name" placeholder="First Name" required><br>
        <input type="text" name="last_name" placeholder="Last Name"><br>
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Register</button>
    </form>
    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Include database configuration file
include 'db_config.php';

function registerUser() {
    $error = array();
    
    // Check if form is submitted
    if (isset($_POST['username'], $_POST['email'], $_POST['password'], $_POST['confirm_password'])) {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $error[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $error[] = "Username must contain only letters, numbers and underscores";
        }

        // Validate email
        if (empty($email)) {
            $error[] = "Email address is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $error[] = "Password is required";
        } elseif ($password != $confirm_password) {
            $error[] = "Passwords do not match";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/", $password)) {
            $error[] = "Password must be at least 8 characters long and contain at least one number, uppercase letter, and lowercase letter";
        }

        // Check if username or email already exists
        if (empty($error)) {
            $query = "SELECT username, email FROM users WHERE username = '$username' OR email = '$email'";
            $result = mysqli_query($GLOBALS['db'], $query);
            
            if (mysqli_num_rows($result) > 0) {
                $row = mysqli_fetch_assoc($result);
                if ($row['username'] == $username) {
                    $error[] = "Username already exists";
                }
                if ($row['email'] == $email) {
                    $error[] = "Email address already exists";
                }
            }
        }

        // If no errors, register the user
        if (empty($error)) {
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
            
            try {
                mysqli_query($GLOBALS['db'], $query);
                echo "<p class='success'>Registration successful! You can now login.</p>";
            } catch (mysqli_sql_exception $e) {
                $error[] = "Error registering user: " . $e->getMessage();
            }
        }
    }

    if (!empty($error)) {
        foreach ($error as $err) {
            echo "<p class='error'>$err</p>";
        }
    }
}

// Call the function
if (isset($_POST['register'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .error { color: red; margin-bottom: 10px; }
        .success { color: green; margin-bottom: 10px; }
        .form-group { margin-bottom: 20px; }
    </style>
</head>
<body>
    <h1>Register Here</h1>
    
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" placeholder="Enter your username...">
        </div>

        <div class="form-group">
            <label for="email">Email Address:</label><br>
            <input type="email" id="email" name="email" placeholder="Enter your email address...">
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" placeholder="Enter your password...">
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm your password...">
        </div>

        <input type="submit" name="register" value="Register">
    </form>
</body>
</html>


<?php
// database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // check if form is submitted
    if (isset($_POST['submit'])) {
        // sanitize input data
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // validate input data
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // check if username already exists
        $check_username = "SELECT * FROM users WHERE username = '$username'";
        $result_username = $conn->query($check_username);

        if ($result_username->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";

        if ($conn->query($sql) === TRUE) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// call the function
registerUser();

// close database connection
$conn->close();
?>


<?php
// database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    if (isset($_POST['submit'])) {
        // sanitize input data
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // validate input data
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // check if username already exists
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result_username = $stmt->get_result();

        if ($result_username->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // prepare and execute the insert statement
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }

        // close statement
        $stmt->close();
    }
}

registerUser();

// close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Get form data
    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Form validation
    if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
        return;
    }

    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }

    // Check if email already exists
    $checkEmail = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmail);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        echo "Email already exists!";
        return;
    }

    // Password hashing
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertUser = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertUser);
    $stmt->bind_param("sss", $name, $email, $hashed_password);

    if ($stmt->execute()) {
        echo "Registration successful! You can now login.";
    } else {
        echo "Error: " . $stmt->error;
    }

    $stmt->close();
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Name: <input type="text" name="name"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Basic validation
        if (empty($name) || empty($email) || empty($password)) {
            die("Please fill in all required fields");
        }

        if ($password !== $confirm_password) {
            die("Passwords do not match");
        }

        // Email already exists check
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() > 0) {
            die("Email is already registered");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        
        try {
            // Execute query
            $stmt->execute([$name, $email, $hashed_password]);
            
            // Set success message
            $_SESSION['message'] = "Registration successful! Please login.";
            header("Location: login.php");
            exit();
        } catch(PDOException $e) {
            die("Error registering user: " . $e->getMessage());
        }
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php
    // Display any error messages from the session
    if (isset($_SESSION['message'])) {
        echo "<p>" . $_SESSION['message'] . "</p>";
        unset($_SESSION['message']);
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label>Name:</label><br>
        <input type="text" name="name" required><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br>

        <label>Password:</label><br>
        <input type="password" name="password" required><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password" required><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username = "root"; // Replace with your database username
$password = ""; // Replace with your database password
$dbname = "user_registration"; // Replace with your database name

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get user input
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate inputs
        $errors = array();

        // Check if all fields are filled
        if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
            array_push($errors, "All fields are required");
        }

        // Validate first name
        if (!preg_match("/^[a-zA-Z-' ]*$/", $firstName)) {
            array_push($errors, "First name must contain only letters and spaces");
        }

        // Validate last name
        if (!preg_match("/^[a-zA-Z-' ]*$/", $lastName)) {
            array_push($errors, "Last name must contain only letters and spaces");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Please enter a valid email address");
        }

        // Check if email already exists
        $checkEmail = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
        if (mysqli_num_rows($checkEmail) > 0) {
            array_push($errors, "Email already exists. Please use another email.");
        }

        // Validate password
        if (strlen($password) < 6) {
            array_push($errors, "Password must be at least 6 characters long");
        }
        if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            array_push($errors, "Password can only contain letters and numbers");
        }

        // If no errors
        if (count($errors) == 0) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $sql = "INSERT INTO users (first_name, last_name, email, password) 
                    VALUES ('$firstName', '$lastName', '$email', '$hashed_password')";

            if (mysqli_query($conn, $sql)) {
                echo "Registration successful!";
                // Redirect to login page after 3 seconds
                header("Refresh:3; url=login.php");
                exit();
            } else {
                array_push($errors, "Error registering user. Please try again later.");
            }
        }

        // Display errors
        foreach ($errors as $error) {
            echo "<div style='color: red; margin-bottom: 5px;'>$error</div>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!-- HTML Registration Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .container {
            width: 400px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        input[type=text], input[type=email], input[type=password] {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <label for="first_name">First Name:</label><br>
            <input type="text" id="first_name" name="first_name"><br>

            <label for="last_name">Last Name:</label><br>
            <input type="text" id="last_name" name="last_name"><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email"><br>

            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password"><br>

            <input type="submit" name="submit" value="Register">
        </form>
    </div>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
// Register function
function registerUser($username, $email, $password) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'my_database';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    
    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        return false;
    }

    // Close connection
    mysqli_close($conn);
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (registerUser($username, $email, $password)) {
        echo "Registration successful!";
    } else {
        echo "Registration failed. Please try again.";
    }
}
?>


<?php
$success = false;
$errors = array();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Required fields
    $username = isset($_POST['username']) ? $_POST['username'] : '';
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';
    $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format!";
    }

    if (!ctype_alnum($username) || strlen($username) < 3 || strlen($username) > 20) {
        $errors[] = "Username must be alphanumeric and between 3-20 characters!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Password requirements (minimum length, at least one uppercase, lowercase, number, and special character)
    if (!preg_match('/^(?=.*\d)(?=.*[A-Za-z])(?=.*[@#$%^&+=]).{8,}$/', $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one number, letter, and special character!";
    }

    // If no errors
    if (empty($errors)) {
        try {
            // Database connection parameters
            $host = 'localhost';
            $db_username = 'root';
            $db_password = '';
            $database = 'my_database';

            // Connect to database
            $conn = new mysqli($host, $db_username, $db_password, $database);

            // Check connection
            if ($conn->connect_error) {
                throw new Exception("Connection failed: " . $conn->connect_error);
            }

            // Prepare and bind
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            
            // Check if username already exists
            $result = $stmt->get_result();
            if ($result->num_rows > 0) {
                throw new Exception("Username already exists!");
            }

            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            
            if ($stmt->execute()) {
                $success = true;
            } else {
                throw new Exception("Registration failed. Please try again.");
            }

        } catch (Exception $e) {
            $errors[] = $e->getMessage();
        }
    }
}
?>

<?php
if ($success) {
    header("Location: login.php");
    exit();
} elseif (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<div style='color: red;'>$error</div><br>";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_users';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, trim($username));
        $email = mysqli_real_escape_string($conn, trim($email));

        // Validate inputs
        if ($username == "" || $email == "" || $password == "") {
            echo "Please fill in all required fields";
            return;
        }

        // Validate username (only letters and numbers)
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            echo "Username must contain only letters, numbers, or underscores.";
            return;
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address";
            return;
        }

        // Check password length
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long.";
            return;
        }

        // Confirm password matches
        if ($password != $confirm_password) {
            echo "Passwords do not match";
            return;
        }

        // Check if username already exists
        $check_username = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            echo "Username already exists. Please choose another username.";
            return;
        }

        // Check if email already exists
        $check_email = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            echo "Email already exists. Please use another email address.";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT, array('cost' => 12));

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            echo "Registration successful! You can now log in.";
            
            // Optionally send confirmation email here
            sendConfirmationEmail($email, $username);
        } else {
            // Error registering user
            echo "Error: " . mysqli_error($conn);
        }

        mysqli_stmt_close($stmt);
    }
}

function sendConfirmationEmail($email, $username) {
    require 'vendor/autoload.php';
    
    $mail = new PHPMailer\PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';  // Replace with your SMTP server
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';  // Your email address
    $mail->Password = 'your_password';          // Your email password
    $mail->SMTPSecure = 'tls';
    $mail->Port = 587;

    $mail->setFrom('your_email@example.com', 'Registration Confirmation');
    $mail->addAddress($email, $username);

    $mail->isHTML(true);
    $mail->Subject = 'Welcome! Confirm your registration';
    $mail->Body    = "Dear $username,<br><br>Thank you for registering with us!<br><br>Your account has been successfully created.<br><br>Best regards,<br>The Team";

    if (!$mail->send()) {
        echo 'Mailer Error: ' . $mail->ErrorInfo;
    } else {
        //echo 'Confirmation email has been sent.';
    }
}

// Close database connection
mysqli_close($conn);
?>



<?php
// Register.php
session_start();
require_once 'Database.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate input
    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
        die("All fields are required!");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Validate username (only letters and numbers)
    if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
        die("Username must contain only letters and numbers!");
    }

    // Sanitize input
    $firstName = htmlspecialchars(trim($firstName));
    $lastName = htmlspecialchars(trim($lastName));
    $email = htmlspecialchars(trim($email));
    $username = htmlspecialchars(trim($username));

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    try {
        $db = new Database();
        $conn = $db->getConnection();

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            die("Username already taken!");
        }

        // Insert new user into the database
        $sql = "INSERT INTO users (first_name, last_name, email, username, password_hash) 
                VALUES (?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$firstName, $lastName, $email, $username, $hashedPassword]);

        // Redirect to login page after successful registration
        header("Location: welcome.php?message=Welcome%20" . $username . "!");
        exit();

    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$db_user = 'root';
$db_password = '';
$db_name = 'user-registration';

// Connect to the database
$conn = mysqli_connect($host, $db_user, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit']) && !empty($_POST)) {
        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, trim($_POST['username']));
        $email = mysqli_real_escape_string($conn, trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check for existing username or email
        $check_user = mysqli_query($conn, "SELECT * FROM users WHERE username='$username' OR email='$email'");
        if (mysqli_num_rows($check_user) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";

        if (mysqli_query($conn, $sql)) {
            // Start session and redirect to welcome page
            $_SESSION['user'] = $username;
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <?php
    if (!isset($_GET['action'])) {
        // Display registration form
        echo '<h1>Register Here</h1>';
        echo '<form action="?action=register" method="POST">';
        echo '<div class="form-group">';
        echo '<label for="username">Username:</label>';
        echo '<input type="text" id="username" name="username" required>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="email">Email:</label>';
        echo '<input type="email" id="email" name="email" required>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="password">Password:</label>';
        echo '<input type="password" id="password" name="password" required>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="confirm_password">Confirm Password:</label>';
        echo '<input type="password" id="confirm_password" name="confirm_password" required>';
        echo '</div>';
        
        echo '<button type="submit" name="submit">Register</button>';
        echo '</form>';
        
        // Display login link
        echo '<p>Already have an account? <a href="login.php">Login here</a></p>';
    } else {
        // Process registration
        registerUser();
    }
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form data
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate input
        $errors = array();

        if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
            $errors[] = "All fields are required!";
        }

        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores!";
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address!";
        }

        if ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match!";
        }

        // Password validation
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long!";
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            $errors[] = "Username already exists!";
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            $errors[] = "Email already exists!";
        }

        // If no errors
        if (empty($errors)) {
            // Sanitize input data
            $username = htmlspecialchars($username, ENT_QUOTES);
            $email = htmlspecialchars($email, ENT_QUOTES);

            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insertQuery);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
            } else {
                die("Error: " . mysqli_error($conn));
            }
        } else {
            foreach ($errors as $error) {
                echo "<p class='error'>" . $error . "</p>";
            }
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $date_of_birth = $_POST['date_of_birth'];
        $terms = isset($_POST['terms']);

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Sanitize input
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $first_name = mysqli_real_escape_string($conn, $first_name);
        $last_name = mysqli_real_escape_string($conn, $last_name);
        $date_of_birth = mysqli_real_escape_string($conn, $date_of_birth);

        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $check_username_query);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $check_email_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already registered!";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name, date_of_birth, terms_accepted)
                VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$date_of_birth', '$terms')";

        if (mysqli_query($conn, $sql)) {
            echo "Registration successful! You can now login.";
            // Redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the registration function
registerUser();

mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Initialize error array
        $errors = array();

        // Validate form fields
        if (empty($firstName) || empty($lastName) || empty($email) || empty($password) || empty($confirmPassword)) {
            $errors[] = "All fields are required";
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Check password length (minimum 8 characters)
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }

        // Check if passwords match
        if ($password != $confirmPassword) {
            $errors[] = "Passwords do not match";
        }

        // If no errors, proceed with registration
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Check if email already exists in database
            $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $checkEmailQuery);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if (mysqli_num_rows($result) > 0) {
                die("Email already exists");
            }

            // Insert new user into database
            $insertQuery = "INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insertQuery);
            mysqli_stmt_bind_param($stmt, "ssss", $firstName, $lastName, $email, $hashedPassword);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                header("Location: registration_success.php");
                exit();
            } else {
                die("Error registering user");
            }
        }

        // Display errors if any
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user-registration';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check for connection errors
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Initialize variables and set default values for error messages
$username = $email = $password = $confirm_password = $full_name = $dob = "";
$errors = array();

// Form submission handling
if (isset($_POST['submit'])) {
    // Get input data from POST
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = sanitizeInput($_POST['full_name']);
    $dob = sanitizeInput($_POST['dob']);

    // Validate input data
    if (empty($username)) {
        array_push($errors, "Username is required");
    }
    if (empty($email)) {
        array_push($errors, "Email is required");
    }
    if (empty($password)) {
        array_push($errors, "Password is required");
    }
    if ($password !== $confirm_password) {
        array_push($errors, "Passwords do not match");
    }

    // Additional validation rules
    if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
        array_push($errors, "Username can only contain letters and numbers");
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        array_push($errors, "Please enter a valid email address");
    }

    // Check password strength
    if (strlen($password) < 8 || 
        !preg_match('/[A-Z]/', $password) ||
        !preg_match('/[a-z]/', $password) ||
        !preg_match('/[0-9]/', $password) ||
        !preg_match('/[^A-Za-z0-9]/', $password)) {
        array_push($errors, "Password must be at least 8 characters and contain: uppercase letter, lowercase letter, number, and special character");
    }

    // If no errors
    if (count($errors) == 0) {
        // Check if username or email already exists in the database
        $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // If username or email already exists
            array_push($errors, "Username or email already exists");
        } else {
            // Proceed to register the user
            $password_hash = password_hash($password, PASSWORD_DEFAULT);
            
            $register_query = "INSERT INTO users (username, email, password, full_name, dob) 
                              VALUES (?, ?, ?, ?, ?)";
            $stmt = $conn->prepare($register_query);
            $stmt->bind_param("sssss", $username, $email, $password_hash, $full_name, $dob);

            if ($stmt->execute()) {
                // Registration successful
                echo "<div class='success'>Registration successful! You can now log in.</div>";
                // Optional: Redirect to login page after some time
                // header("Refresh: 3; url=login.php");
            } else {
                // Error registering the user
                array_push($errors, "Error registering. Please try again.");
            }
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .form-container {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h2 {
            color: #333;
            text-align: center;
        }
        .error {
            color: red;
            margin-bottom: 15px;
        }
        .success {
            color: green;
            margin-bottom: 15px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"],
        input[type="date"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Registration Form</h2>

        <?php 
        // Display error messages
        if (count($errors) > 0) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <div class="form-group">
                <label for="full_name">Full Name:</label>
                <input type="text" id="full_name" name="full_name" required>
            </div>

            <div class="form-group">
                <label for="dob">Date of Birth:</label>
                <input type="date" id="dob" name="dob" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Include database configuration file
include_once('config.php');

function registerUser($username, $email, $password) {
    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        throw new Exception("All fields are required");
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Please enter a valid email address");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Registration failed. Please try again.");
        }
    } catch (Exception $e) {
        // Handle any errors
        die("Error: " . $e->getMessage());
    } finally {
        // Close the statement
        if ($stmt) {
            $stmt->close();
        }
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Sanitize input data
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        if ($password != $confirm_password) {
            throw new Exception("Passwords do not match");
        }

        // Call the registration function
        if (registerUser($username, $email, $password)) {
            echo "Registration successful!";
            header("Location: login.php"); // Redirect to login page
            exit();
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
// config.php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection details
$host = 'localhost';
$db_user = 'root';
$db_pass = '';
$db_name = 'test';

// Create database connection
$conn = new mysqli($host, $db_user, $db_pass, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($name, $email, $password) {
    global $conn;

    // Validate input data
    if (!preg_match("/^[a-zA-Z ]+$/", $name)) {
        return "Invalid name!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Password validation: minimum 8 characters with at least one uppercase letter, one lowercase letter, and one number
    if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/", $password)) {
        return "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number!";
    }

    // Check if email already exists
    $check_email = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $check_email->bind_param("s", $email);
    $check_email->execute();
    $result = $check_email->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $sql = "INSERT INTO users (name, email, hashed_password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $name, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful! You can now log in.";
    } else {
        return "Error registering user: " . $stmt->error;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call the registration function
    $result = registerUser($name, $email, $password);
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$db_name = 'your_database';
$db_user = 'root';
$db_pass = '';

try {
    // Connect to database
    $pdo = new PDO("mysql:host=$host;dbname=$db_name", $db_user, $db_pass);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        $errors = array();

        // Check if fields are empty
        if (empty($username) || empty($email) || empty($password)) {
            $errors[] = "All fields must be filled out.";
        }

        // Validate username length
        if (strlen($username) < 3) {
            $errors[] = "Username must be at least 3 characters long.";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address.";
        }

        // Validate password length
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long.";
        }

        // Check if passwords match
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match.";
        }

        // If no errors, proceed with registration
        if (empty($errors)) {
            // Sanitize inputs
            $username = htmlspecialchars($username);
            $email = htmlspecialchars($email);

            // Check if username or email already exists
            $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->execute([$username, $email]);
            
            if ($stmt->rowCount() > 0) {
                die("Username or email already exists.");
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            // Insert into database
            $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password]);

            // Redirect to login page or dashboard
            header("Location: login.php");
            exit();
        } else {
            foreach ($errors as $error) {
                echo "<p>$error</p>";
            }
        }
    }

    // Display registration form
    ?>
    
    <html>
    <head>
        <title>Registration Page</title>
    </head>
    <body>
        <h1>Create Account</h1>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div>
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div>
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div>
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit">Register</button>
        </form>
    </body>
    </html>

<?php
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function register_user($username, $email, $password) {
    global $conn;

    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    if (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    // Check if username or email already exists
    $check_query = "
        SELECT 
            * 
        FROM 
            users 
        WHERE 
            username = ? OR email = ?
    ";

    $stmt = $conn->prepare($check_query);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username or email already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    $insert_query = "
        INSERT INTO 
            users (username, email, password)
        VALUES (?, ?, ?)
    ";

    $stmt = $conn->prepare($insert_query);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error registering user!";
    }
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = register_user($username, $email, $password);

    if ($result === true) {
        // Registration successful
        header("Location: login.php");
        exit();
    } else {
        // Display error message
        echo "<div style='color:red;'>$result</div>";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];
    $email = $_POST['email'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];

    // Validate inputs
    if (empty($username) || empty($password) || empty($email) || empty($first_name) || empty($last_name)) {
        die("All fields are required!");
    }

    // Sanitize inputs
    $username = htmlspecialchars(strip_tags($username));
    $email = htmlspecialchars(strip_tags($email));
    $first_name = htmlspecialchars(strip_tags($first_name));
    $last_name = htmlspecialchars(strip_tags($last_name));

    // Validate username (only letters and numbers)
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        die("Username contains invalid characters!");
    }

    // Validate password strength
    if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/\d/', $password)) {
        die("Password must be at least 8 characters long and contain both letters and numbers!");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Username already taken!");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, password, email, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("sssss", $username, $hashed_password, $email, $first_name, $last_name);

    if ($stmt->execute()) {
        echo "Registration successful! Welcome, " . $first_name . "!";
    } else {
        die("Error registering user: " . $conn->error);
    }

    // Close statement
    $stmt->close();
}

// Register user when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}

// Close database connection
$conn->close();
?>


<?php
// Include database connection file
require_once('db_connection.php');

function registerUser() {
    // Check if form was submitted with POST method
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {

        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = trim($_POST['first_name']);
        $last_name = trim($_POST['last_name']);

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($first_name) || empty($last_name)) {
            die("Please fill in all required fields.");
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Username already taken. Please choose another.");
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address.");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Email already registered. Please use another.");
        }

        // Validate password requirements
        // At least 8 characters, at least one uppercase letter and a number, one special character
        $passwordPattern = '/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/';

        if (!preg_match($passwordPattern, $password)) {
            die("Password must be at least 8 characters long and contain at least one uppercase letter, a number, and a special character.");
        }

        // Check if password matches confirm password
        if ($password !== $confirm_password) {
            die("Passwords do not match. Please try again.");
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("sssss", $username, $email, $hashedPassword, $first_name, $last_name);

        if ($stmt->execute()) {
            // Send confirmation email
            require_once('PHPMailer/PHPMailer.php');
            require_once('PHPMailer/Exception.php');
            require_once('PHPMailer/OAuth.php');
            require_once('PHPMailer/SMTP.php');

            try {
                $mail = new PHPMailer(true);
                $mail->isSMTP();
                $mail->Host = 'smtp.example.com';
                $mail->SMTPAuth = true;
                $mail->Username = 'your_email@example.com';
                $mail->Password = 'your_password';
                $mail->SMTPSecure = 'tls';
                $mail->Port = 587;

                $mail->setFrom('your_email@example.com', 'Registration Confirmation');
                $mail->addAddress($email);

                $mail->Subject = 'Welcome to Our Site!';
                $mail->Body = "Hello $first_name,

Thank you for registering with us.

Your account has been successfully created.

Best regards,
The Team";

                $mail->send();
            } catch (Exception $e) {
                error_log("Email could not be sent. Error: " . $e->getMessage());
            }

            // Redirect to login page
            header('Location: login.php?registered=success');
            exit;
        } else {
            die("An error occurred while registering your account.");
        }
    }
}

// Call the function
registerUser();
?>


<?php
function register_user($email, $username, $password) {
    // Connect to the database
    require_once('config.php');
    
    // Escape special characters to prevent SQL injection
    $email = mysqli_real_escape_string($conn, trim($email));
    $username = mysqli_real_escape_string($conn, trim($username));
    $password = mysqli_real_escape_string($conn, trim($password));
    
    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $check_email_query);
    
    if (mysqli_num_rows($result) > 0) {
        return "Email already exists!";
    }
    
    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $check_username_query);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists!";
    }
    
    // Hash the password using PHP's built-in password_hash function
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $insert_query = "INSERT INTO users (email, username, hashed_password)
                    VALUES ('$email', '$username', '$hashed_password')";
                    
    if (mysqli_query($conn, $insert_query)) {
        return true;
    } else {
        return "Error registering user: " . mysqli_error($conn);
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection details
$host = 'localhost';
$db_name = 'your_database';
$username = 'root'; // default username for local server
$password = '';     // default password for local server

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to handle user registration
function registerUser($conn, $username, $email, $password, $confirm_password) {
    // Check if username or email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute(array($username));
        $count_username = $stmt->rowCount();

        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute(array($email));
        $count_email = $stmt->rowCount();

        // Check if passwords match
        if ($password != $confirm_password) {
            return "Passwords do not match!";
        }

        // If username or email exists, return appropriate error message
        if ($count_username > 0) {
            return "Username already exists!";
        } elseif ($count_email > 0) {
            return "Email already registered!";
        }

        // Hash the password before storing it
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute(array($username, $email, $hashed_password));

        return "Registration successful! You can now login.";

    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $result = registerUser($conn, $username, $email, $password, $confirm_password);
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register New User</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
function registerUser() {
    // Database connection parameters
    $db_host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $db_name = 'userregistration';

    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {

        // Get and sanitize user inputs
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];
        $firstName = trim($_POST['first_name']);
        $lastName = trim($_POST['last_name']);
        $birthdate = $_POST['birthdate'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
            echo "All fields must be filled out!";
            return;
        }

        if ($password != $confirmPassword) {
            echo "Passwords do not match!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = $conn->query($checkQuery);

        if ($result->num_rows > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Sanitize inputs to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $firstName = mysqli_real_escape_string($conn, $firstName);
        $lastName = mysqli_real_escape_string($conn, $lastName);
        $birthdate = mysqli_real_escape_string($conn, $birthdate);

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user data into the database
        try {
            $sql = "INSERT INTO users (username, email, password, first_name, last_name, birthdate)
                    VALUES ('$username', '$email', '$hashedPassword', '$firstName', '$lastName', '$birthdate')";
            
            if ($conn->query($sql)) {
                echo "Registration successful!";
            } else {
                throw new Exception("Error: " . $sql . "<br>" . $conn->error);
            }
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }

    } else {
        // If form is not submitted, show registration form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF'];?>" method="post">
            Username:<br>
            <input type="text" name="username"><br>
            Email:<br>
            <input type="email" name="email"><br>
            Password:<br>
            <input type="password" name="password"><br>
            Confirm Password:<br>
            <input type="password" name="confirm_password"><br>
            First Name:<br>
            <input type="text" name="first_name"><br>
            Last Name:<br>
            <input type="text" name="last_name"><br>
            Birthdate:<br>
            <input type="date" name="birthdate"><br><br>
            <input type="submit" value="Register">
        </form>
        <?php
    }

    // Close database connection
    $conn->close();
}

// Call the registration function
registerUser();
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

try {
    // Create a database connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values and sanitize them
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    $firstName = htmlspecialchars(trim($_POST['first_name']));
    $lastName = htmlspecialchars(trim($_POST['last_name']));
    $birthDate = $_POST['birth_date'];

    // Initialize error array
    $errors = [];

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    } elseif (strlen($username) < 3 || strlen($username) > 20) {
        $errors[] = "Username must be between 3 and 20 characters long";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    }

    // Validate password
    if (empty($password) || empty($confirmPassword)) {
        $errors[] = "Password and confirm password are required";
    } elseif ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match";
    } elseif (!preg_match("/^(?=.*[a-zA-Z])(?=.*\d).+$/", $password)) {
        $errors[] = "Password must contain at least one letter and one number";
    }

    // Validate name fields
    if (empty($firstName) || empty($lastName)) {
        $errors[] = "First and Last names are required";
    } elseif (!preg_match("/^[a-zA-Z ]+$/", $firstName) || !preg_match("/^[a-zA-Z ]+$/", $lastName)) {
        $errors[] = "Names can only contain letters and spaces";
    }

    // Validate birth date
    if (empty($birthDate)) {
        $errors[] = "Birth date is required";
    } elseif (!preg_match("/^\d{4}-\d{2}-\d{2}$/", $birthDate)) {
        $errors[] = "Please enter a valid date in YYYY-MM-DD format";
    }

    // If there are no errors
    if (empty($errors)) {
        try {
            // Check if username already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                die("Username already exists");
            }

            // Check if email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                die("Email already registered");
            }

            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            // Insert new user into database
            $stmt = $conn->prepare("
                INSERT INTO users (username, email, password, first_name, last_name, birth_date)
                VALUES (?, ?, ?, ?, ?, ?)
            ");
            $stmt->execute([$username, $email, $hashedPassword, $firstName, $lastName, $birthDate]);

            // Redirect to a success page
            header("Location: welcome.php");
            exit();
        } catch(PDOException $e) {
            die("Error registering user: " . $e->getMessage());
        }
    } else {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2 class="text-center mb-4">User Registration</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post" class="needs-validation">
            <div class="row">
                <!-- First Name -->
                <div class="col-md-6 mb-3">
                    <label for="firstName">First Name:</label>
                    <input type="text" class="form-control" id="firstName" name="first_name" required>
                    <div class="invalid-feedback">Please enter your first name.</div>
                </div>

                <!-- Last Name -->
                <div class="col-md-6 mb-3">
                    <label for="lastName">Last Name:</label>
                    <input type="text" class="form-control" id="lastName" name="last_name" required>
                    <div class="invalid-feedback">Please enter your last name.</div>
                </div>

                <!-- Username -->
                <div class="col-md-6 mb-3">
                    <label for="username">Username:</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                    <div class="invalid-feedback">Please enter a username between 3 and 20 characters containing only letters, numbers, or underscores.</div>
                </div>

                <!-- Email -->
                <div class="col-md-6 mb-3">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                    <div class="invalid-feedback">Please enter a valid email address.</div>
                </div>

                <!-- Password -->
                <div class="col-md-6 mb-3">
                    <label for="password">Password:</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                    <div class="invalid-feedback">Please enter a password containing at least one letter and one number.</div>
                </div>

                <!-- Confirm Password -->
                <div class="col-md-6 mb-3">
                    <label for="confirmPassword">Confirm Password:</label>
                    <input type="password" class="form-control" id="confirmPassword" name="confirm_password" required>
                    <div class="invalid-feedback">Passwords do not match.</div>
                </div>

                <!-- Date of Birth -->
                <div class="col-md-6 mb-3">
                    <label for="birthDate">Date of Birth:</label>
                    <input type="date" class="form-control" id="birthDate" name="birth_date" required>
                    <div class="invalid-feedback">Please enter a valid date in YYYY-MM-DD format.</div>
                </div>

                <!-- Submit Button -->
                <div class="col-md-12 mt-4">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
            </div>
        </form>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$db_name = "user_registration";

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function register_user($username, $email, $password, $first_name, $last_name, $date_of_birth) {
    global $conn;

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));
    $first_name = mysqli_real_escape_string($conn, trim($first_name));
    $last_name = mysqli_real_escape_string($conn, trim($last_name));
    $date_of_birth = mysqli_real_escape_string($conn, trim($date_of_birth));

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = $conn->query($check_username_query);
    
    if ($result->num_rows > 0) {
        return "Username already exists. Please choose a different username.";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($check_email_query);
    
    if ($result->num_rows > 0) {
        return "Email already exists. Please use a different email address.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Hash the password using bcrypt
    $password_hash = password_hash($password, PASSWORD_BCRYPT, ["cost" => 12]);

    // Insert user data into database
    $insert_query = "
        INSERT INTO users (
            username,
            email,
            password_hash,
            first_name,
            last_name,
            date_of_birth
        ) VALUES (
            '$username',
            '$email',
            '$password_hash',
            '$first_name',
            '$last_name',
            '$date_of_birth'
        )
    ";

    if ($conn->query($insert_query) === TRUE) {
        return "Registration successful!";
    } else {
        return "Error: " . $conn->error;
    }
}

// Close database connection
$conn->close();

// Example usage:
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $date_of_birth = $_POST['date_of_birth'];

    $result = register_user($username, $email, $password, $first_name, $last_name, $date_of_birth);
    echo $result;
}
?>


<?php
// database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Initialize error array
    $error = array();

    if (isset($_POST['submit'])) {

        // Sanitize and validate input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $error[] = "Username is required";
        } elseif (strlen($username) < 3) {
            $error[] = "Username must be at least 3 characters";
        }

        // Validate email
        if (empty($email)) {
            $error[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error[] = "Invalid email format";
        }

        // Validate password
        if (empty($password) || empty($confirm_password)) {
            $error[] = "Password is required";
        } elseif ($password !== $confirm_password) {
            $error[] = "Passwords do not match";
        } elseif (strlen($password) < 8) {
            $error[] = "Password must be at least 8 characters";
        }

        // Check if there are any errors
        if (!empty($error)) {
            foreach ($error as $key => $value) {
                echo "<div class='alert alert-danger'>$value</div>";
            }
            die();
        }

        // Check if email already exists in database
        $check_email = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "<div class='alert alert-danger'>Email already exists!</div>";
            die();
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password, registration_date)
                VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            // Registration successful
            $_SESSION['user_id'] = $conn->insert_id;
            header('Location: home.php');
            exit();
        } else {
            echo "<div class='alert alert-danger'>Error registering user!</div>";
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();

?>


<?php
// Database connection configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'user_registration';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['submit'])) {
    // Get form values
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Form validation
    $errors = array();

    if (empty($username)) {
        $errors[] = "Username is required";
    }
    if (empty($email)) {
        $errors[] = "Email is required";
    }
    if (empty($password)) {
        $errors[] = "Password is required";
    }

    // Username validation
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Email validation
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    }

    // Password validation (at least 8 characters with letters and numbers)
    if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/", $password)) {
        $errors[] = "Password must be at least 8 characters containing both letters and numbers";
    }

    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username=? OR email=?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            if ($row['username'] == $username) {
                $errors[] = "Username already exists";
            }
            if ($row['email'] == $email) {
                $errors[] = "Email already exists";
            }
        }
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            echo "Registration successful!";
        } else {
            echo "Error: " . $stmt->error;
        }
    } else {
        foreach ($errors as $error) {
            echo "<p>$error</p>";
        }
    }

    // Close statement
    $stmt->close();
}

// Close database connection
$conn->close();
?>


<?php
// Include database connection file
include_once("db_connection.php");

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input data
        if (empty($username) || empty($email) || empty($password)) {
            die("All fields are required!");
        }

        // Sanitize input data
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));

        // Check if passwords match
        if ($password !== $confirm_password) {
            die("Passwords do not match!");
        }

        // Validate email format
        if (!preg_match("/^[^\s@]+@[^\s@]+\.[^\s@]+$/', $email)) {
            die("Invalid email format!");
        }

        // Check username length
        if (strlen($username) < 3) {
            die("Username must be at least 3 characters long!");
        }

        // Check password length
        if (strlen($password) < 6) {
            die("Password must be at least 6 characters long!");
        }

        // Connect to database
        $conn = dbConnection();

        // Check connection
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            die("Username already exists!");
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            die("Email already exists!");
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            header("Location: welcome.php");
            exit();
        } else {
            die("Registration failed: " . mysqli_error($conn));
        }

        // Close database connection
        mysqli_close($conn);
    }
}

// Call the function
registerUser();

?>


<?php
// Connect to the database
$host = 'localhost';
$username_db = 'username';
$password_db = 'password';
$db_name = 'mydatabase';

$conn = mysqli_init();
mysqli_real_connect($conn, $host, $username_db, $password_db, $db_name);

if (mysqli_connect_errno()) {
    die("Failed to connect to MySQL: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
    // Retrieve and sanitize user inputs
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        header("Location: registration.php?error=Please fill in all fields");
        exit();
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: registration.php?error=Invalid email format");
        exit();
    }

    if (strlen($username) < 3 || strlen($username) > 20) {
        header("Location: registration.php?error=Username must be between 3 and 20 characters");
        exit();
    }

    if ($password !== $confirm_password) {
        header("Location: registration.php?error=Passwords do not match");
        exit();
    }

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $check_query);
    mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        header("Location: registration.php?error=Username or email already exists");
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insert_query);
    mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);
    
    if (mysqli_stmt_execute($stmt)) {
        header("Location: welcome.php?username=" . urlencode($username));
        exit();
    } else {
        header("Location: registration.php?error=Registration failed");
        exit();
    }
}

// Close database connection
 mysqli_close($conn);
?>


<?php
// Database connection settings
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitiseInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve form data
    $username = sanitiseInput($_POST['username']);
    $email = sanitiseInput($_POST['email']);
    $password = $_POST['password'];
    
    // Validate username
    if (empty($username)) {
        echo "Username is required";
        exit();
    }
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        echo "Username can only contain letters, numbers, and underscores.";
        exit();
    }
    
    // Validate email
    if (empty($email)) {
        echo "Email is required";
        exit();
    }
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit();
    }
    
    // Validate password
    if (empty($password)) {
        echo "Password is required";
        exit();
    }
    if (strlen($password) < 8) {
        echo "Password must be at least 8 characters long.";
        exit();
    }
    if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
        echo "Password can only contain letters and numbers.";
        exit();
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
    
    // Prepare SQL statement
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('" . mysqli_real_escape_string($conn, $username) . "', '" .
            mysqli_real_escape_string($conn, $email) . "', '" . $hashedPassword . "')";
            
    if ($conn->query($sql) === TRUE) {
        echo "Registration successful! You can now log in.";
        // Redirect to login page after 2 seconds
        header("Refresh: 2; url=login.php");
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($conn, $username, $email, $password) {
    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
    $stmt->bindParam(':username', $username);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    if ($stmt->rowCount() > 0) {
        return "Username or email already exists!";
    }

    // Sanitize inputs
    $username = htmlspecialchars(strip_tags($username));
    $email = htmlspecialchars(strip_tags($email));

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':password', $hashedPassword);

        $stmt->execute();
        return "Registration successful!";
    } catch (PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        die("All fields are required!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Call registration function
    $result = registerUser($conn, $username, $email, $password);
    echo $result;
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['register'])) {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate input data
        $errors = array();
        
        // Check if any fields are empty
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            array_push($errors, "All fields must be filled out");
        }
        
        // Sanitize inputs
        $username = htmlspecialchars(strip_tags($username));
        $email = htmlspecialchars(strip_tags($email));
        
        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsernameQuery);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            array_push($errors, "Username already exists");
        }
        
        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            array_push($errors, "Email already exists");
        }
        
        // Validate password
        if ($password != $confirm_password) {
            array_push($errors, "Passwords do not match");
        } elseif (strlen($password) < 8) {
            array_push($errors, "Password must be at least 8 characters long");
        }
        
        // If no errors, proceed to register
        if (count($errors) == 0) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user into database
            $registerQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($registerQuery);
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            
            if ($stmt->execute()) {
                // Registration successful
                echo "Registration successful! You can now log in.";
            } else {
                array_push($errors, "Error registering user. Please try again.");
            }
        }
        
        // Display errors if any
        foreach ($errors as $error) {
            echo $error . "<br>";
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
require_once 'registration_function.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" name="register" value="Register">
    </form>

<?php
if (isset($_POST['register'])) {
    registerUser();
}
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'registration';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Registration function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate inputs
        $errors = [];
        
        if (empty($username)) {
            $errors[] = "Username is required";
        }
        if (empty($email)) {
            $errors[] = "Email is required";
        }
        if (empty($password) || empty($confirm_password)) {
            $errors[] = "Password is required";
        }
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Email format is invalid";
        }
        
        // Check username length
        if (strlen($username) < 3 || strlen($username) > 50) {
            $errors[] = "Username must be between 3 and 50 characters";
        }
        
        // Check password complexity
        if (strlen($password) < 8 || 
            !preg_match('/[A-Z]/', $password) ||
            !preg_match('/[a-z]/', $password) ||
            !preg_match('/\d/', $password)) {
            $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number";
        }
        
        // If no errors
        if (empty($errors)) {
            // Sanitize inputs
            $username = htmlspecialchars($username);
            $email = htmlspecialchars($email);
            
            // Check if username already exists
            $check_username = "SELECT id FROM users WHERE username = ?";
            $stmt = $conn->prepare($check_username);
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                $errors[] = "Username already exists";
            } else {
                // Hash password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT, [
                    'cost' => 12
                ]);
                
                // Insert user into database
                $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = $conn->prepare($sql);
                $stmt->bind_param("sss", $username, $email, $hashed_password);
                
                if ($stmt->execute()) {
                    echo "Registration successful! Redirecting to login page...";
                    header('Location: login.php');
                    exit();
                } else {
                    $errors[] = "Error registering user. Please try again.";
                }
            }
        }
        
        // Display errors
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .error { color: red; }
    </style>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Register</button>
    </form>
    
    <?php registerUser(); ?>
</body>
</html>


<?php
function registerUser($conn) {
    // Check if form has been submitted
    if (isset($_POST['register'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $errors = array();

        // Validate username
        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            $errors[] = "Username must contain only letters and numbers.";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } else {
            // Check password strength
            if (!preg_match("/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[^./\\]{8,20}$/", $password)) {
                $errors[] = "Password must be 8-20 characters long and contain at least one uppercase letter, one lowercase letter, and one number.";
            }
        }

        // Check if email already exists in the database
        $check_email_query = "SELECT id FROM users WHERE email=?";
        $stmt_check = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt_check, "s", $email);
        mysqli_stmt_execute($stmt_check);
        mysqli_stmt_store_result($stmt_check);

        if (mysqli_stmt_num_rows($stmt_check) > 0) {
            $errors[] = "Email already exists. Please use a different email.";
        }

        // If there are no errors, proceed to register the user
        if (empty($errors)) {
            // Hash the password before storing it in the database
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user data into the database
            $query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $query);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                header('Location: login.php?success=1');
                exit();
            } else {
                // Error occurred while inserting data
                echo "Error: " . mysqli_error($conn);
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$usernameDb = 'root';
$passwordDb = '';
$dbName = 'registration';

// Connect to database
$conn = new mysqli($host, $usernameDb, $passwordDb, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function registerUser($username, $email, $password, $conn) {
    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all fields.";
    }

    // Check if username already exists
    $checkUsername = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $checkUsername->bind_param("s", $username);
    $checkUsername->execute();
    $result = $checkUsername->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists.";
    }

    // Check if email already exists
    $checkEmail = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $checkEmail->bind_param("s", $email);
    $checkEmail->execute();
    $result = $checkEmail->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close statements
    $checkUsername->close();
    $checkEmail->close();
    $stmt->close();
}

// Handle form submission
if (isset($_POST['submit'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    // Call registration function
    $message = registerUser($username, $email, $password, $conn);
    echo $message;
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" placeholder="Enter your username" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" placeholder="Enter your email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" placeholder="Enter your password" required>
        </div>

        <button type="submit" name="submit">Register</button>
    </form>

    <?php
    if (isset($message)) {
        echo "<div class='error'>$message</div>";
    }
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser($username, $email, $password) {
    global $conn;

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);

    if (mysqli_num_rows($result) > 0) {
        return array('success' => false, 'message' => 'Username already exists');
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);

    if (mysqli_num_rows($result) > 0) {
        return array('success' => false, 'message' => 'Email already exists');
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";
    
    if (mysqli_query($conn, $query)) {
        return array('success' => true, 'message' => 'Registration successful');
    } else {
        return array('success' => false, 'message' => 'Error registering user: ' . mysqli_error($conn));
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);

    if ($result['success']) {
        echo "Success: " . $result['message'];
    } else {
        echo "Error: " . $result['message'];
    }
}
?>


function registerUser($username, $email, $password) {
    global $conn;

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    try {
        // Check if username exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return array('success' => false, 'message' => 'Username already exists');
        }

        // Check if email exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return array('success' => false, 'message' => 'Email already exists');
        }

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            return array('success' => true, 'message' => 'Registration successful');
        } else {
            return array('success' => false, 'message' => 'Error registering user: ' . $stmt->error);
        }
    } catch (Exception $e) {
        return array('success' => false, 'message' => 'An error occurred: ' . $e->getMessage());
    }
}


<?php
// Database connection
function connect_db() {
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'user_registration';

    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    return $conn;
}

// Registration function
function register_user() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Sanitize and validate input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = htmlspecialchars(trim($_POST['first_name']));
        $last_name = htmlspecialchars(trim($_POST['last_name']));
        $date_of_birth = $_POST['date_of_birth'];
        $terms = isset($_POST['terms']) ? 1 : 0;

        // Validate username
        if (empty($username) || !preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
            echo "Invalid username. Username can only contain letters, numbers, and underscores.";
            return;
        }

        // Validate email
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format.";
            return;
        }

        // Validate password
        function validate_password($password) {
            if (strlen($password) < 8) {
                return false;
            }
            if (!preg_match('/[A-Z]/', $password)) {
                return false;
            }
            if (!preg_match('/[a-z]/', $password)) {
                return false;
            }
            if (!preg_match('/\d/', $password)) {
                return false;
            }
            if (!preg_match('/[^A-Za-z0-9]/', $password)) {
                return false;
            }
            return true;
        }

        if (empty($password) || $password !== $confirm_password || !validate_password($password)) {
            echo "Passwords do not match or do not meet the requirements.";
            return;
        }

        // Validate names
        if (empty($first_name) || empty($last_name) || 
            !preg_match('/^[A-Za-z]+$/', $first_name) || 
            !preg_match('/^[A-Za-z]+$/', $last_name)) {
            echo "Invalid name format. Names can only contain letters.";
            return;
        }

        // Validate date of birth
        if (empty($date_of_birth) || !strtotime($date_of_birth) || strtotime($date_of_birth) >= time()) {
            echo "Invalid date of birth.";
            return;
        }

        // Check terms agreement
        if ($terms !== 1) {
            echo "You must agree to the terms and conditions.";
            return;
        }

        // Connect to database
        $conn = connect_db();

        // Check if username or email already exists
        $check_query = "SELECT username, email FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username or email already exists.";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $insert_query = "
            INSERT INTO users (
                username,
                email,
                password,
                first_name,
                last_name,
                date_of_birth,
                terms_accepted
            ) VALUES (?, ?, ?, ?, ?, ?, ?)
        ";

        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param(
            "sssssss",
            $username,
            $email,
            $hashed_password,
            $first_name,
            $last_name,
            $date_of_birth,
            $terms
        );

        if ($stmt->execute()) {
            echo "Registration successful!";
        } else {
            echo "Error: " . $stmt->error;
        }

        // Close statement and connection
        $stmt->close();
        $conn->close();
    }
}

// Call the registration function
if (isset($_POST['submit'])) {
    register_user();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"],
        input[type="date"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[type="checkbox"] {
            margin-right: 5px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .success {
            color: green;
            text-align: center;
            margin-top: 20px;
        }
        .error {
            color: red;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>User Registration</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" required>
            </div>

            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" required>
            </div>

            <div class="form-group">
                <label for="date_of_birth">Date of Birth:</label>
                <input type="date" id="date_of_birth" name="date_of_birth" required>
            </div>

            <div class="form-group">
                <label>
                    <input type="checkbox" name="terms" value="1" required> I agree to the terms and conditions
                </label>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbName = "user_registration";

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $email = sanitizeInput($_POST['email']);
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if username is valid
    if (empty($username) || strlen($username) < 3 || strlen($username) > 20) {
        die("Username must be between 3 and 20 characters");
    }

    // Validate password length
    if (strlen($password) < 6) {
        die("Password must be at least 6 characters long");
    }

    // Check if email or username already exists
    $checkQuery = "SELECT * FROM users WHERE email = ? OR username = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $email, $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Email or username already exists");
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Prepare SQL query
    $insertQuery = "INSERT INTO users (email, username, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
    }

    // Bind parameters
    $stmt->bind_param("sss", $email, $username, $hashedPassword);

    // Execute query
    if ($stmt->execute()) {
        echo "Registration successful!";
    } else {
        die("Error registering user: " . $stmt->error);
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input
        $errors = array();

        // Check if username is valid
        if (empty($username) || !preg_match('/^[a-zA-Z0-9]{3,20}$/', $username)) {
            $errors[] = "Username must be between 3 and 20 characters and contain only letters and numbers.";
        }

        // Check if email is valid
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address.";
        } else {
            // Check if email already exists in the database
            $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $checkEmailQuery);
            mysqli_stmt_bind_param($stmt, 's', $email);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if (mysqli_num_rows($result) > 0) {
                $errors[] = "This email is already registered.";
            }
        }

        // Check if password is valid
        if (
            empty($password) ||
            !preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z\d!@#$%^&*()\-+={}]/', $password) ||
            strlen($password) < 8
        ) {
            $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number or special character.";
        }

        // Check if passwords match
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match.";
        }

        // If there are no errors, proceed with registration
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashedPassword);

            if (mysqli_stmt_execute($stmt)) {
                return true;
            } else {
                // Handle database error
                $errors[] = "An error occurred while registering. Please try again later.";
                return false;
            }
        } else {
            // Return errors array
            return $errors;
        }
    }

    // If form is not submitted, redirect or show registration form
    header("Location: register.php");
    exit();
}

// Close database connection
mysqli_close($conn);
?>


<?php
require_once 'registration_function.php';

if (registerUser()) {
    echo "Registration successful! You can now login.";
} else {
    // Handle errors
}
?>


<?php
function registerUser() {
    // Database connection details
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "my_database";

    try {
        // Connect to the database
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Get form data and sanitize it
        $username = htmlspecialchars(trim($_POST['username']));
        $email = strtolower(htmlspecialchars(trim($_POST['email'])));
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate required fields
        if (empty($username) || empty($email) || empty($password)) {
            throw new Exception("All fields are required");
        }

        // Check if password matches confirmation
        if ($password !== $confirmPassword) {
            throw new Exception("Passwords do not match");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check for existing username or email
        $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username or email already exists");
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password, registration_date) 
                        VALUES (?, ?, ?, NOW())";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            return "Registration successful!";
        } else {
            throw new Exception("Error registering user: " . $stmt->error);
        }

    } catch (Exception $e) {
        // Handle errors
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = registerUser();
    if ($result === "Registration successful!") {
        echo $result;
    }
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form data
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));
        $password = trim($password);
        $confirm_password = trim($confirm_password);

        $errors = array();

        // Validate form data
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $errors[] = "All fields must be filled out";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address";
        }

        // Check if username already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Username already exists";
            }
        } catch (PDOException $e) {
            die("Error checking username: " . $e->getMessage());
        }

        // Check if email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Email address already registered";
            }
        } catch (PDOException $e) {
            die("Error checking email: " . $e->getMessage());
        }

        // Check password length
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }

        // Check if passwords match
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // If no errors, proceed with registration
        if (empty($errors)) {
            try {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Prepare SQL statement
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->execute([$username, $email, $hashed_password]);

                // Registration successful
                echo "Registration successful!";
                header("Location: login.php");
                exit();
            } catch (PDOException $e) {
                die("Error registering user: " . $e->getMessage());
            }
        } else {
            foreach ($errors as $error) {
                echo "<div style='color:red'>$error</div><br>";
            }
        }
    }

} catch (PDOException $e) {
    die("Database connection error: " . $e->getMessage());
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password, $conn) {
    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $registerQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($registerQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call the registration function
    $result = registerUser($username, $email, $password, $conn);
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Initialize error array
    $errors = [];

    if (isset($_POST['register'])) {
        // Get form values
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required.";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores.";
        }

        // Check if username exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Username already exists.";
            }
        } catch (mysqli_sql_exception $e) {
            die("Error: " . $e->getMessage());
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required.";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format.";
        }

        // Check if email exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Email already exists.";
            }
        } catch (mysqli_sql_exception $e) {
            die("Error: " . $e->getMessage());
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required.";
        } elseif ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match.";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long.";
        }

        // If no errors, register the user
        if (empty($errors)) {
            try {
                // Hash password
                $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

                // Prepare SQL statement
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->bind_param("sss", $username, $email, $hashedPassword);
                
                if ($stmt->execute()) {
                    header("Location: login.php?success=Registration successful! Please login.");
                    exit();
                } else {
                    die("Error registering user: " . $conn->error);
                }
            } catch (mysqli_sql_exception $e) {
                die("Error: " . $e->getMessage());
            }
        }
    }

    // Close database connection
    $conn->close();

    return $errors;
}

// Call the function and handle errors
$errors = registerUser();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php if (!empty($errors)): ?>
        <div class="error-messages">
            <?php foreach ($errors as $error): ?>
                <p><?php echo $error; ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        <input type="text" name="username" placeholder="Username" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required>
        <button type="submit" name="register">Register</button>
    </form>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password) {
    global $conn;

    try {
        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            throw new Exception("All fields are required!");
        }

        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));

        // Check for existing username or email
        $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username or email already exists!");
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Registration failed. Please try again.");
        }
    } catch (Exception $e) {
        return $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);

    if ($result === true) {
        echo "Registration successful!";
    } else {
        echo $result;
    }
}
?>


<?php
function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else {
            // Check for existing username in database
            $check_username = mysqli_query($conn, "SELECT id FROM users WHERE username='$username'");
            if (mysqli_num_rows($check_username) > 0) {
                $errors[] = "Username already exists";
            }
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        } else {
            // Check for existing email in database
            $check_email = mysqli_query($conn, "SELECT id FROM users WHERE email='$email'");
            if (mysqli_num_rows($check_email) > 0) {
                $errors[] = "Email already exists";
            }
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match("/^[a-zA-Z\d]+$/", $password)) {
            $errors[] = "Password can only contain letters and numbers";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }

        // Confirm password matches
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // If there are errors, display them
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        } else {
            // Hash the password before storing it
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database using prepared statement
            try {
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->bind_param("sss", $username, $email, $hashed_password);
                
                if ($stmt->execute()) {
                    echo "Registration successful!";
                    // Redirect to login page
                    header("Location: login.php");
                    exit();
                } else {
                    echo "<div class='error'>Error registering user. Please try again later.</div>";
                }
            } catch (mysqli_sql_exception $e) {
                echo "<div class='error'>Error: " . $e->getMessage() . "</div>";
            } finally {
                // Close statement
                $stmt->close();
            }
        }
    }
}

// Database connection configuration
$conn = new mysqli('localhost', 'username', 'password', 'database_name');
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
$host = 'localhost';
$username_db = 'root'; // Replace with your database username
$password_db = '';      // Replace with your database password
$dbname = 'mydatabase';  // Replace with your database name

$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Proceed with registration
} else {
    header("Location: registration_form.html");
    exit();
}


$username = htmlspecialchars($_POST['username']);
$email = mysqli_real_escape_string($conn, $_POST['email']);
$password = $_POST['password'];

if (!preg_match("/^[^ ]+@[^ ]+\.[a-zA-Z]{2,4}$/", $email)) {
    // Email is invalid; show error
}


$sql = "SELECT id FROM users WHERE username='$username' OR email='$email'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    // User or email already exists; show error
}


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


$sql = "INSERT INTO users (username, email, password) 
        VALUES ('$username', '$email', '$hashed_password')";

if (mysqli_query($conn, $sql)) {
    // Registration successful; redirect to welcome page
} else {
    // Error occurred; show error message
}


if (mysqli_query($conn, $sql)) {
    header("Location: welcome.php");
    exit();
} else {
    echo "Error: " . mysqli_error($conn);
}

// Close database connection
mysqli_close($conn);


<?php
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    // Validate email
    if (!preg_match("/^[^ ]+@[^ ]+\.[a-zA-Z]{2,4}$/", $email)) {
        die("Invalid email format");
    }

    // Check existing username or email
    $sql = "SELECT id FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        die("Username or email already exists");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, email, password) 
            VALUES ('$username', '$email', '$hashed_password')";

    if (mysqli_query($conn, $sql)) {
        header("Location: welcome.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
} else {
    // If accessed directly without form submission
    header("Location: registration_form.html");
    exit();
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'your_database_username';
$dbPassword = 'your_database_password';
$dbName = 'your_database_name';

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function for user registration
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = htmlspecialchars($_POST['password']);
        
        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }
        
        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            echo "Username must be between 3 and 20 characters!";
            return;
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Check password length
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }
        
        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        
        if ($stmt === false) {
            echo "Database error occurred!";
            return;
        }
        
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
        mysqli_stmt_execute($stmt);
        
        // Check for errors in query execution
        if (mysqli_errno($conn)) {
            echo "Error: " . mysqli_error($conn);
        } else {
            echo "Registration successful! Welcome, " . $username;
            // Redirect to login page or dashboard
            header("Location: welcome.php");
            exit();
        }
        
        mysqli_stmt_close($stmt);
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
include('config.php');

if (isset($_POST['submit'])) {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
        exit;
    }

    // Check username length
    if (strlen($username) < 3 || strlen($username) > 20) {
        echo "Username must be between 3 and 20 characters long.";
        exit;
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        exit;
    }

    // Check password requirements
    if (strlen($password) < 8 || !preg_match('/^[a-zA-Z0-9!@#$%^&*()_+={};":?><~\/., ]+$/', $password)) {
        echo "Password must be at least 8 characters long and contain only letters, numbers, and special characters!";
        exit;
    }

    // Check if passwords match
    if ($password != $confirm_password) {
        echo "Passwords do not match!";
        exit;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Connect to database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            exit;
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already registered!";
            exit;
        }

        // Insert new user into the database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        $stmt->execute();

        echo "Registration successful! You can now <a href='login.php'>login</a>.";

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }

    $conn->close();
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function register_user() {
    global $conn;
    
    // Sanitize and validate input
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    // Check if username or email already exists
    $check_username = "SELECT * FROM users WHERE username = '$username'";
    $result_username = mysqli_query($conn, $check_username);
    
    $check_email = "SELECT * FROM users WHERE email = '$email'";
    $result_email = mysqli_query($conn, $check_email);

    if (mysqli_num_rows($result_username) > 0) {
        echo "Username already exists!";
        return false;
    }

    if (mysqli_num_rows($result_email) > 0) {
        echo "Email already exists!";
        return false;
    }

    // Validate password
    if ($password != $confirm_password) {
        echo "Passwords do not match!";
        return false;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$hashed_password')";

    if (mysqli_query($conn, $sql)) {
        echo "Registration successful! You can now log in.";
        header("Refresh: 2; url=login.php");
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

// Call the registration function when form is submitted
if (isset($_POST['register'])) {
    register_user();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" name="register" value="Register">
    </form>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Include the database configuration file
require_once('config.php');

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $errors = array();
        
        // Required fields check
        $requiredFields = array('username', 'password', 'confirm_password', 'email');
        foreach ($requiredFields as $field) {
            if (empty($_POST[$field])) {
                $errors[] = "The $field field is required.";
            }
        }

        // Email validation
        if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
            $errors[] = 'Please enter a valid email address.';
        }

        // Username already exists check
        $usernameQuery = "SELECT username FROM users WHERE username = ?";
        $stmt = mysqli_prepare($GLOBALS['connection'], $usernameQuery);
        mysqli_stmt_bind_param($stmt, 's', $_POST['username']);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            $errors[] = 'Username already exists. Please choose another.';
        }

        // Password confirmation check
        if ($_POST['password'] !== $_POST['confirm_password']) {
            $errors[] = 'Passwords do not match.';
        }

        // If no errors, proceed to registration
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);

            // Prepare and execute the insert statement
            $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($GLOBALS['connection'], $insertQuery);
            mysqli_stmt_bind_param($stmt, 'sss', $_POST['username'], $_POST['email'], $hashedPassword);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                header("Location: registration_success.php");
                exit();
            } else {
                $errors[] = 'An error occurred during registration. Please try again.';
            }
        }

        // Close the database connection
        mysqli_close($GLOBALS['connection']);
    }

    return $errors;
}

// Call the function and capture any errors
$errors = registerUser();

// Display errors if any
foreach ($errors as $error) {
    echo "<div class='error'>$error</div>";
}
?>


<?php
// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$db_name = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
        return;
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return;
    }

    // Check password match
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $check_username_query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $check_username_query);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return;
    }

    // Check if email already exists
    $check_email_query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Email already registered!";
        return;
    }

    // Insert user into database
    $insert_query = "INSERT INTO users (username, email, password)
                     VALUES ('$username', '$email', '$hashed_password')";
    
    if (mysqli_query($conn, $insert_query)) {
        echo "Registration successful! You can now login.";
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        $_SESSION['message'] = "Username or email already exists!";
        header("Location: messages.php");
        exit();
    }

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $password);

    if (mysqli_stmt_execute($stmt)) {
        $_SESSION['message'] = "Registration successful! Please login.";
        header("Location: messages.php");
        exit();
    } else {
        $_SESSION['message'] = "Error registering user!";
        header("Location: messages.php");
        exit();
    }

    mysqli_close($conn);
}
?>


<?php
$host = 'localhost';
$username = 'root'; // Your database username
$password = ''; // Your database password
$dbname = 'mydatabase'; // Your database name

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Messages</title>
    <style>
        .success { color: green; }
        .error { color: red; }
    </style>
</head>
<body>
    <?php
    if (!empty($_SESSION['message'])) {
        $class = isset($_SESSION['status']) ? $_SESSION['status'] : 'info';
        echo "<div class='$class'>$_SESSION['message']."</div>";
        unset($_SESSION['message']);
        unset($_SESSION['status']);
    }
    ?>
    <a href="register.php">Back to Registration</a>
    <br>
    <a href="login.php">Go to Login</a>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_registration';

$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitize_input($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitize_input($_POST['username']);
    $email = sanitize_input($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate password
    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }

    // Check if password is at least 8 characters
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES (?, ?, ?)";

    if ($stmt = mysqli_prepare($conn, $sql)) {
        // Bind parameters
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        // Execute the statement
        if (!mysqli_stmt_execute($stmt)) {
            die("Error registering user: " . mysqli_error($conn));
        }

        // Close statement
        mysqli_stmt_close($stmt);

        // Redirect to login page after successful registration
        header("Location: login.php");
        exit();
    } else {
        die("Error in database query: " . mysqli_error($conn));
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database connection file
include_once("db_connection.php");

function registerUser($firstName, $lastName, $email, $username, $password) {
    // Sanitize input data
    $firstName = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($firstName)));
    $lastName = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($lastName)));
    $email = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($email)));
    $username = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($username)));
    $password = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($password)));

    // Validate input data
    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check username availability
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($GLOBALS['conn'], $checkUsernameQuery);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists. Please choose a different one.";
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (first_name, last_name, email, username, password)
            VALUES ('$firstName', '$lastName', '$email', '$username', '$hashedPassword')";

    if (mysqli_query($GLOBALS['conn'], $sql)) {
        return "Registration successful! You can now login.";
    } else {
        return "Error: " . mysqli_error($GLOBALS['conn']);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Call registration function
    $result = registerUser($firstName, $lastName, $email, $username, $password);
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        First Name: <input type="text" name="first_name"><br>
        Last Name: <input type="text" name="last_name"><br>
        Email: <input type="email" name="email"><br>
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="checkbox" required> I agree to the terms and conditions<br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Registration function
function registerUser() {
    global $conn;
    
    // Get form data
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = htmlspecialchars($_POST['full_name']);

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "Please fill in all required fields!";
        return;
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return;
    }

    // Check if password and confirm password match
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        echo "Username already exists!";
        return;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password, full_name, created_at)
            VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssss", $username, $email, $hashed_password, $full_name);

    if ($stmt->execute()) {
        // Registration successful
        echo "Registration successful! You can now login.";
        // Optionally redirect to login page
        header("Location: login.php");
    } else {
        // Error occurred
        echo "Error registering user: " . $conn->error;
    }

    $stmt->close();
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 5px;
        }
        a {
            display: block;
            text-align: center;
            margin-top: 20px;
            color: #4CAF50;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post" autocomplete="off">
            <div class="form-group">
                <input type="text" name="full_name" placeholder="Full Name" required>
            </div>
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <input type="email" name="email" placeholder="Email" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>
            <div class="form-group">
                <input type="password" name="confirm_password" placeholder="Confirm Password" required>
            </div>
            <button type="submit">Sign Up</button>
        </form>
        <p>Already have an account? <a href="login.php">Login here</a></p>
        <p>Forgot password? <a href="reset-password.php">Reset password</a></p>
    </div>
</body>
</html>

<?php
// Call registration function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Your database username
$password = ''; // Your database password
$db_name = 'mydatabase'; // Your database name

// Get form data
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Sanitize input data to prevent SQL injection
    $username = trim(htmlspecialchars($username));
    $email = trim(htmlspecialchars($email));

    // Validate input data
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields must be filled out");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Connect to database
    try {
        $conn = new mysqli($host, $username_db, $password_db, $db_name);
        
        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare and bind the statement to check for existing username or email
        $stmt = $conn->prepare("SELECT id FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Username or email already exists");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare and bind the statement to insert new user
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            echo "Registration successful!";
        } else {
            die("Error registering user: " . $conn->error);
        }

        // Close the database connection
        $stmt->close();
        $conn->close();
    } catch (Exception $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    // Get form data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Initialize error array
    $errors = array();

    // Validate form data
    if (empty($username)) {
        $errors[] = "Username is required";
    }
    if (empty($email)) {
        $errors[] = "Email is required";
    }
    if (empty($password)) {
        $errors[] = "Password is required";
    }
    if ($password != $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Check if username or email already exists
    $checkUsernameQuery = "SELECT * FROM users WHERE username LIKE '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Username already exists";
    }

    $checkEmailQuery = "SELECT * FROM users WHERE email LIKE '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Email already exists";
    }

    // If no errors, register the user
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password, registration_date)
                VALUES ('$username', '$email', '$hashed_password', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            $errors[] = "Error registering user: " . mysqli_error($conn);
        }
    }

    // Display errors
    foreach ($errors as $error) {
        echo "<p>$error</p>";
    }
}

// Call the register function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Register.php

include("config/database_config.php");

function registerUser($data) {
    try {
        $username = trim($data['username']);
        $email = trim($data['email']);
        $password = $data['password'];
        $confirm_password = $data['confirm_password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            throw new Exception("All fields are required");
        }

        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            throw new Exception("Username must be between 3 and 20 characters");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check password requirements
        $password_regex = '/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/';
        if (!preg_match($password_regex, $password)) {
            throw new Exception("Password must be at least 8 characters with one uppercase letter, one lowercase letter, and one number");
        }

        // Check password match
        if ($password != $confirm_password) {
            throw new Exception("Passwords do not match");
        }

        // Connect to database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Check if username or email already exists
        $stmt = $conn->prepare("
            SELECT id FROM users 
            WHERE username = ? OR email = ?
        ");
        
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username or email already exists");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT, ['cost' => 12]);

        // Insert user into database
        $stmt = $conn->prepare("
            INSERT INTO users (username, email, password)
            VALUES (?, ?, ?)
        ");
        
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Registration failed. Please try again.");
        }

    } catch (Exception $e) {
        // Log error
        error_log($e->getMessage());
        throw $e;
    }
}

// Example usage:

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $postData = [
        'username' => $_POST['username'],
        'email' => $_POST['email'],
        'password' => $_POST['password'],
        'confirm_password' => $_POST['confirm_password']
    ];

    try {
        if (registerUser($postData)) {
            // Redirect to login page after successful registration
            header("Location: login.php");
            exit();
        }
    } catch (Exception $e) {
        $error = $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error ?></div><br>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>

    <script>
        // Simple client-side validation
        document.querySelector('form').addEventListener('submit', function(e) {
            let inputs = this.querySelectorAll('input');
            
            if (inputs[0].value.trim() === '' || 
                inputs[1].value.trim() === '' ||
                inputs[2].value === '' ||
                inputs[3].value === '') {
                alert('All fields are required!');
                e.preventDefault();
            }
        });
    </script>
</body>
</html>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Database connection parameters
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'my_database';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields!";
    }

    // Validate username
    if (!preg_match("/^[a-zA-Z0-9]+$/", $username)) {
        return "Username must contain only letters and numbers!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    // Check password length (minimum 8 characters)
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    // Confirm password matches
    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already in use!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . $conn->error;
    }

    // Close statement
    $stmt->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = registerUser();
    echo $result;
}
?>


<?php
// Database connection
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'registration';

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register user
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate username
        if (empty($username)) {
            echo "Username is required";
            return false;
        }
        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            echo "Username can only contain letters and numbers";
            return false;
        }
        
        // Validate email
        if (empty($email)) {
            echo "Email is required";
            return false;
        }
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format";
            return false;
        }
        
        // Validate password
        if (empty($password) || empty($confirm_password)) {
            echo "Password is required";
            return false;
        }
        if ($password != $confirm_password) {
            echo "Passwords do not match";
            return false;
        }
        if (!preg_match("/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/", $password)) {
            echo "Password must be at least 8 characters and contain at least one uppercase letter, one number, and one special character";
            return false;
        }
        
        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $check_query);
        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists";
            return false;
        }
        
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
        if (mysqli_query($conn, $insert_query)) {
            echo "Registration successful!";
            header("Location: login.php?message=Registration successful! Please login.");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Page</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>

<?php
// Call the registration function when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "mydatabase";

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Retrieve form data and sanitize inputs
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (strlen($username) > 50) {
            $errors[] = "Username must be less than 50 characters";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        } elseif (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters";
        }

        // Check if username or email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':email', $email);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                $errors[] = "Username or email already exists";
            }
        } catch(PDOException $e) {
            $errors[] = "Error checking user data: " . $e->getMessage();
        }

        // If there are no errors, proceed with registration
        if (empty($errors)) {
            try {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
                $stmt->bindParam(':username', $username);
                $stmt->bindParam(':email', $email);
                $stmt->bindParam(':password', $hashed_password);

                if ($stmt->execute()) {
                    // Registration successful
                    header("Location: welcome.php");
                    exit();
                } else {
                    $errors[] = "Registration failed. Please try again.";
                }
            } catch(PDOException $e) {
                $errors[] = "Error registering user: " . $e->getMessage();
            }
        }

        // Close connection
        $conn = null;
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Display errors if any
if (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<div class='error'>$error</div>";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    // Connect to MySQL database
    $conn = new mysqli($host, $username, $password, $dbname);
    
    // Check if connection was successful
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }
    
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $phone = $_POST['phone'];
    $dob = $_POST['dob'];
    
    // Validate input data
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        throw new Exception("All fields are required!");
    }
    
    if ($password !== $confirmPassword) {
        throw new Exception("Passwords do not match!");
    }
    
    // Sanitize input data
    $username = htmlspecialchars($username);
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    $firstName = htmlspecialchars($firstName);
    $lastName = htmlspecialchars($lastName);
    $phone = htmlspecialchars($phone);
    $dob = htmlspecialchars($dob);
    
    // Hash password for security
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
    
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        throw new Exception("Username already exists!");
    }
    
    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        throw new Exception("Email already exists!");
    }
    
    // Insert user data into database
    $stmt = $conn->prepare("
        INSERT INTO users (
            username, 
            email, 
            password, 
            first_name, 
            last_name, 
            phone_number, 
            date_of_birth
        ) VALUES (?, ?, ?, ?, ?, ?, ?)
    ");
    
    $stmt->bind_param(
        'sssssss',
        $username,
        $email,
        $hashedPassword,
        $firstName,
        $lastName,
        $phone,
        $dob
    );
    
    if ($stmt->execute()) {
        // Registration successful, redirect to login page or show success message
        header("Location: registration_success.php");
        exit();
    } else {
        throw new Exception("Registration failed: " . $stmt->error);
    }
    
} catch (Exception $e) {
    // Display error message
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'registration';

try {
    // Connect to database
    $conn = mysqli_connect($host, $username_db, $password_db, $db_name);
    
    // Set error reporting for database queries
    mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
} catch (Exception $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Registration function
function registerUser($conn, $username, $email, $password) {
    // Check if username already exists
    $checkUsername = mysqli_prepare($conn, "SELECT username FROM users WHERE username = ?");
    mysqli_stmt_bind_param($checkUsername, 's', $username);
    mysqli_stmt_execute($checkUsername);
    
    if (mysqli_stmt_fetch($checkUsername)) {
        return ['error' => 'Username already exists!'];
    }
    
    // Check if email already exists
    $checkEmail = mysqli_prepare($conn, "SELECT email FROM users WHERE email = ?");
    mysqli_stmt_bind_param($checkEmail, 's', $email);
    mysqli_stmt_execute($checkEmail);
    
    if (mysqli_stmt_fetch($checkEmail)) {
        return ['error' => 'Email already exists!'];
    }
    
    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, [
        'cost' => 12,
    ]);
    
    // Insert new user into database
    $insertUser = mysqli_prepare($conn, "INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($insertUser, 'sss', $username, $email, $hashedPassword);
    
    if (!mysqli_stmt_execute($insertUser)) {
        return ['error' => 'Registration failed!'];
    }
    
    // Registration successful
    return ['success' => 'You have been registered successfully!'];
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    
    // Validate username
    if (!preg_match('/^[a-zA-Z0-9]{3,20}$/', $username)) {
        $errors[] = 'Username must be between 3 and 20 characters long and contain only letters and numbers!';
    }
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = 'Please enter a valid email address!';
    }
    
    // Validate password
    if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*()_+}{":?><;\/\-=`~]{8,}$/', $password)) {
        $errors[] = 'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and a special character!';
    }
    
    // If there are errors
    if (isset($errors)) {
        print_r($errors);
    } else {
        // Call registration function
        $result = registerUser($conn, $username, $email, $password);
        
        // Display result
        if (isset($result['error'])) {
            echo $result['error'];
        } elseif (isset($result['success'])) {
            echo $result['success'];
        }
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
function registerUser($username, $email, $password, $confirmPassword) {
    // Database connection parameters
    $servername = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "mydatabase";

    // Create database connection
    $conn = new mysqli($servername, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    $errors = array();

    // Check username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]{3,15}$/", $username)) {
        $errors[] = "Username must be between 3 and 15 characters and contain only letters, numbers, and underscores";
    }

    // Check email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    }

    // Check password
    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match";
    } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/", $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number";
    }

    // If there are no errors
    if (empty($errors)) {
        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // SQL query to insert user data into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";

        // Prepare statement
        $stmt = $conn->prepare($sql);
        if ($stmt === false) {
            die("Error preparing the statement: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        // Execute query
        $result = $stmt->execute();

        if ($result) {
            // Registration successful
            session_start();
            $_SESSION['username'] = $username;
            return "Registration successful! You are now logged in.";
        } else {
            // Check for duplicate username or email
            $error_code = $conn->errno;

            if ($error_code == 1062) { // Duplicate entry
                $errors[] = "Username or email already exists";
            } else {
                $errors[] = "Registration failed. Please try again later.";
            }
        }

        $stmt->close();
    }

    $conn->close();

    return $errors;
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    $result = registerUser($username, $email, $password, $confirmPassword);

    if (is_string($result)) {
        echo $result;
    } else {
        foreach ($result as $error) {
            echo "<p>$error</p>";
        }
    }
}
?>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $agree = isset($_POST['agree']) ? 1 : 0;

    // Initialize error array
    $errors = [];

    // Validate input fields
    if (empty($username)) {
        $errors[] = "Username is required";
    }
    if (empty($email)) {
        $errors[] = "Email is required";
    }
    if (empty($password)) {
        $errors[] = "Password is required";
    }
    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Check username length
    if (strlen($username) < 3) {
        $errors[] = "Username must be at least 3 characters";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Check password strength
    if (!preg_match("/^[a-zA-Z0-9\!\@\#\$\%\&\*\(\)\_\+\-]+$/.", $password)) {
        $errors[] = "Password must contain only letters, numbers, and special characters";
    }
    if (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long";
    }

    // Validate names
    if (!preg_match("/^[a-zA-Z ]+$/.", $first_name)) {
        $errors[] = "First name must contain only letters and spaces";
    }
    if (!preg_match("/^[a-zA-Z ]+$/.", $last_name)) {
        $errors[] = "Last name must contain only letters and spaces";
    }

    // Check agreement
    if ($agree != 1) {
        $errors[] = "You must agree to the terms and conditions";
    }

    if (empty($errors)) {
        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($check_username_query);
        $stmt->execute([$username]);
        $user_count = $stmt->rowCount();

        if ($user_count > 0) {
            echo "Username already exists. Please choose another one.";
        } else {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            try {
                $insert_query = "INSERT INTO users (username, email, password, first_name, last_name) 
                                VALUES (?, ?, ?, ?, ?)";
                $stmt = $conn->prepare($insert_query);
                $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name]);

                // Set success message
                $_SESSION['success'] = "Registration successful! Please login.";
                header("Location: login.php");
                exit();
            } catch (PDOException $e) {
                echo "Error registering user: " . $e->getMessage();
            }
        }
    } else {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>" . $error . "</div>";
        }
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input data
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Password requirements: minimum 8 characters
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters!";
            return;
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        global $conn;

        // Check if username or email already exists
        $check_query = "SELECT id FROM users WHERE username=? OR email=?";
        $stmt = mysqli_prepare($conn, $check_query);
        mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Insert user into the database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
            background-color: #f3f3f3;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            margin-top: 10px;
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit">Register</button>
        </form>
        <?php if (isset($_POST['username'])) { ?>
            <p class="message"><?php echo $message; ?></p>
        <?php } ?>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form data
        $username = $_POST['username'];
        $password = $_POST['password'];
        $email = $_POST['email'];

        // Sanitize the input
        function sanitize($data) {
            return htmlspecialchars(strip_tags(trim($data)));
        }

        $username = sanitize($username);
        $email = sanitize($email);

        // Validate input
        $errors = array();

        if (empty($username)) {
            $errors[] = "Username is required";
        }
        if (empty($password)) {
            $errors[] = "Password is required";
        }
        if (empty($email)) {
            $errors[] = "Email is required";
        }

        // Check username length
        if (strlen($username) < 3) {
            $errors[] = "Username must be at least 3 characters long";
        }

        // Check password strength
        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Check if username already exists
        $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username = '$username'");
        if (mysqli_num_rows($check_username) > 0) {
            $errors[] = "Username already exists";
        }

        // Check if email already exists
        $check_email = mysqli_query($conn, "SELECT email FROM users WHERE email = '$email'");
        if (mysqli_num_rows($check_email) > 0) {
            $errors[] = "Email already exists";
        }

        // If no errors, proceed to register the user
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                echo "Registration successful! You can now login.";
            } else {
                // Error registering user
                echo "Error: Could not register user. Please try again later.";
            }

            mysqli_stmt_close($stmt);
        } else {
            // Output errors
            foreach ($errors as $error) {
                echo $error . "<br>";
            }
        }
    }
}

// Call the function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'user_registration');

// Connect to database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Retrieve input data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    $errors = array();

    if (empty($username) || strlen($username) < 3 || strlen($username) > 20) {
        $errors[] = "Username must be between 3 and 20 characters.";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address.";
    }

    if (empty($password) || strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long.";
    }

    if ($password != $confirm_password) {
        $errors[] = "Passwords do not match.";
    }

    // Check for existing username or email
    if (empty($errors)) {
        $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
        mysqli_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                if ($row['username'] == $username) {
                    $errors[] = "Username already exists.";
                }
                if ($row['email'] == $email) {
                    $errors[] = "Email already registered.";
                }
            }
        }
    }

    // Display errors
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
        exit();
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

    // Insert into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);

    if (mysqli_stmt_execute($stmt)) {
        // Registration successful
        header("Location: login.php?msg=Registration%20successful!&type=success");
        exit();
    } else {
        // Error inserting into database
        echo "<div class='error'>Error registering user. Please try again.</div>";
    }

}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'registration';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if ($username == "" || $email == "" || $password == "" || $confirm_password == "") {
            echo "Please fill in all required fields!";
            return;
        }

        // Check username length
        if (strlen($username) < 3) {
            echo "Username must be at least 3 characters long!";
            return;
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // Check password length
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        // Password must contain at least one uppercase letter, number, and special character
        if (!preg_match("/^[a-zA-Z0-9!@#$%^&*()_+=]{8,}$/", $password)) {
            echo "Password must contain at least one uppercase letter, number, and special character!";
            return;
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Check if username already exists
        $check_username_query = "SELECT username FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
        $result = mysqli_query($conn, $check_username_query);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT email FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
        $result = mysqli_query($conn, $check_email_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already registered!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);

        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful! Please login with your credentials.";
            // Redirect to login page after 3 seconds
            header("Refresh: 3; url=login.php");
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        mysqli_stmt_close($stmt);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

try {
    // Connect to the database
    $conn = mysqli_connect($host, $username_db, $password_db, $db_name);

    if (!$conn) {
        throw new Exception('Connection failed: ' . mysqli_connect_error());
    }

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $errors = array();
        
        // Validate input
        if (!preg_match("/^[a-zA-Z0-9]*$/", $_POST['username'])) {
            $errors[] = "Username can only contain letters and numbers.";
        }
        
        if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address.";
        }
        
        if ($_POST['password'] !== $_POST['confirm_password']) {
            $errors[] = "Passwords do not match.";
        }

        // Check if username already exists
        $username_check_query = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $username_check_query);
        mysqli_stmt_bind_param($stmt, 's', $_POST['username']);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username already exists.";
        }

        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($_POST['password'], PASSWORD_DEFAULT, array('cost' => 12));
            
            // Insert user into database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, 'sss', $_POST['username'], $_POST['email'], $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                header("Location: login.php?success=Registration successful! Please login.");
                exit();
            } else {
                $errors[] = "Registration failed. Please try again.";
            }
        }

        // Close statements and connection
        mysqli_stmt_close($stmt);
    }

} catch (Exception $e) {
    die('Error: ' . $e->getMessage());
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-bottom: 15px;
        }

        .success {
            color: green;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_GET['success'])) {
            echo "<div class='success'>" . $_GET['success'] . "</div>";
        } elseif (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
        ?>

        <h2>Registration Form</h2>
        
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label><br>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label><br>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label><br>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

$servername = "localhost";
$username_db = "root";
$password_db = "your_database_password";
$dbname = "registration";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$errors = array();

if (isset($_POST['submit'])) {
    // Sanitize inputs
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = trim($_POST['password']);
    $confirmPassword = trim($_POST['confirm_password']);

    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    // Password validation (at least 8 characters with at least one special character and number)
    if (!preg_match('/^(?=.*\d)(?=.*[!@#$%^&*()_+}{":?><;~-]).{8,}$/', $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one number and a special character!";
    }

    if ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match!";
    }

    // Check for existing username or email
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            if ($row['username'] == $username) {
                $errors[] = "Username already exists!";
            }
            if ($row['email'] == $email) {
                $errors[] = "Email already registered!";
            }
        }
    }

    if (empty($errors)) {
        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            $_SESSION['success'] = "Registration successful! Please login.";
            header("Location: welcome.php");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again later.";
        }
    }

    // Store errors in session
    if (!empty($errors)) {
        $_SESSION['errors'] = $errors;
        header("Location: registration_form.php");
        exit();
    }
}

$conn->close();
?>


<?php
// Database connection details
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "mydatabase";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user registration
function register_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize and validate input data
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Check if all fields are filled
        if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields must be filled out!";
            return;
        }

        // Validate name (only letters and spaces allowed)
        if (!preg_match("/^[a-zA-Z ]*$/", $name)) {
            echo "Invalid name format!";
            return;
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password length and complexity
        if (strlen($password) < 8 || !preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            echo "Password must be at least 8 characters long and contain only letters and numbers!";
            return;
        }

        // Confirm password matches
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if email already exists in the database
        $check_email_query = "SELECT email FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user data into the database
        $insert_query = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, "sss", $name, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page or dashboard
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    }
}

// Call the registration function
register_user();

// Close database connection
mysqli_close($conn);
?>


<?php
function registerUser($username, $email, $password, $confirmPassword) {
    // Database connection configuration
    require_once 'config.php';

    // Check if all required fields are filled in
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        return "All fields must be filled out!";
    }

    // Validate username
    $min_username_length = 3;
    $max_username_length = 20;

    if (strlen($username) < $min_username_length || strlen($username) > $max_username_length) {
        return "Username must be between $min_username_length and $max_username_length characters!";
    }

    // Check username contains only letters and numbers
    if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
        return "Username can only contain letters and numbers!";
    }

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    // Check password length
    $min_password_length = 6;

    if (strlen($password) < $min_password_length) {
        return "Password must be at least $min_password_length characters!";
    }

    // Check if passwords match
    if ($password !== $confirmPassword) {
        return "Passwords do not match!";
    }

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Check if username already exists in the database
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);

    if (mysqli_num_rows($result) > 0) {
        return "Username is already taken!";
    }

    // Check if email already exists in the database
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);

    if (mysqli_num_rows($result) > 0) {
        return "Email is already registered!";
    }

    // Hash the password before storing it
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    $insertQuery = "INSERT INTO users (username, email, password)
                   VALUES ('$username', '$email', '$hashedPassword')";

    if (!mysqli_query($conn, $insertQuery)) {
        return "Error registering user: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);

    return true;
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    $result = registerUser($username, $email, $password, $confirmPassword);

    if ($result === true) {
        echo "Registration successful!";
        // Redirect to login page or dashboard
    } else {
        echo $result; // Display error message
    }
}
?>


<?php
// Include necessary files
require_once 'database_connection.php';
require_once 'functions.php';

// Function to handle user registration
function registerUser() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $full_name = htmlspecialchars(trim($_POST['full_name']));
        $date_of_birth = $_POST['date_of_birth'];
        $phone_number = htmlspecialchars(trim($_POST['phone_number']));
        $address = htmlspecialchars(trim($_POST['address']));

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            throw new Exception("All fields are required");
        }

        if ($password !== $confirm_password) {
            throw new Exception("Passwords do not match");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check if username already exists
        $query = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username already exists");
        }

        // Check if email already exists
        $query = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already exists");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $query = "INSERT INTO users (username, email, password, full_name, date_of_birth, phone_number, address) 
                  VALUES (?, ?, ?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($query);
        $stmt->bind_param('sssssss', $username, $email, $hashed_password, $full_name, $date_of_birth, $phone_number, $address);

        if (!$stmt->execute()) {
            throw new Exception("Registration failed. Please try again.");
        }

        // Registration successful
        $stmt->close();
        $conn->close();

        // Send welcome email
        sendWelcomeEmail($email, $full_name);

        // Redirect to login page with success message
        header("Location: login.php?success=1");
        exit();
    }
}

// Function to display registration form
function showRegistrationForm() {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="text" name="username" placeholder="Username" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required>
        <input type="text" name="full_name" placeholder="Full Name" required>
        <input type="date" name="date_of_birth" required>
        <input type="tel" name="phone_number" placeholder="Phone Number">
        <textarea name="address" placeholder="Address"></textarea>
        <button type="submit">Register</button>
    </form>
    <?php
}

// Function to send welcome email
function sendWelcomeEmail($email, $full_name) {
    // Configure PHPMailer here
    // You'll need to implement your own email sending logic
}

try {
    registerUser();
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Display registration form if not submitted or registration failed
showRegistrationForm();
?>


<?php
function registerUser($username, $email, $password) {
    // Sanitize input data to prevent SQL injection or XSS attacks
    $username = htmlspecialchars(trim($username));
    $email = htmlspecialchars(trim($email));
    
    // Connect to the database
    $db = new mysqli('localhost', 'root', '', 'mydatabase');
    
    // Check if username or email already exists
    $checkQuery = "SELECT username, email FROM users WHERE username = ? OR email = ?";
    $stmt = $db->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Username or email already exists
        return "Username or email already exists.";
    }
    
    // Hash the password for security
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
    
    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $db->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        // Registration successful
        return true;
    } else {
        // Error occurred during registration
        return "An error occurred while registering. Please try again later.";
    }
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    $result = registerUser($username, $email, $password);
    
    if ($result === true) {
        echo "Registration successful! You can now login.";
    } else {
        echo $result; // Display error message
    }
}
?>


<?php
function registerUser($username, $email, $password) {
    // Database connection parameters
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "mydatabase";

    // Connect to database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    // Check if connection was successful
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize inputs
    $username = htmlspecialchars(strip_tags($username));
    $email = htmlspecialchars(strip_tags($email));
    $password = htmlspecialchars(strip_tags($password));

    // Check if username or email already exists
    $checkQuery = "SELECT id FROM users WHERE username=? OR email=?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Close the statement and connection
        $stmt->close();
        $conn->close();
        return "Username or email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        // Close the statement and connection
        $stmt->close();
        $conn->close();
        return "Registration successful!";
    } else {
        // Close the statement and connection
        $stmt->close();
        $conn->close();
        return "Error registering user!";
    }
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call the registration function
    $result = registerUser($username, $email, $password);

    echo $result;
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // Get and sanitize inputs
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check password strength
        if (strlen($password) < 8 || !preg_match("/[A-Z]/", $password) || !preg_match("/[0-9]/", $password) || !preg_match("/[\W_]/", $password)) {
            throw new Exception("Password must be at least 8 characters long and contain an uppercase letter, a number, and a special character");
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            throw new Exception("Passwords do not match");
        }

        // Prepare the SQL statement with placeholders
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
        $stmt->execute(['username' => $username, 'email' => $email]);

        if ($stmt->rowCount() > 0) {
            throw new Exception("Username or email already exists");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert the new user into the database
        $insert_stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $insert_result = $insert_stmt->execute([
            'username' => $username,
            'email' => $email,
            'password' => $hashed_password
        ]);

        if ($insert_result) {
            // Set session variables or redirect to dashboard
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            header("Location: dashboard.php");
            exit();
        } else {
            throw new Exception("Registration failed. Please try again.");
        }

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Close the database connection
$conn = null;
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Sanitize inputs to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $password = mysqli_real_escape_string($conn, $password);
        
        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields!";
            return;
        }
        
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";
                
        if (mysqli_query($conn, $sql)) {
            echo "Registration successful! You can now login.";
        } else {
            // Check for duplicate email
            if (mysqli_errno($conn) == 1062) {
                echo "Email already exists!";
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }
}

// Call the register function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Configuration file (make sure to create this with your actual database credentials)
require_once 'db_config.php';

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Registration function
function registerUser() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        $errors = array();

        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $errors[] = "All fields are required!";
        }

        // Check username format
        if (!preg_match('/^[a-zA-Z0-9_\-]+$/', $username)) {
            $errors[] = "Username can only contain letters, numbers, underscores, and hyphens!";
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address!";
        }

        // Password requirements (minimum 8 characters, at least one letter, one number, and one special character)
        if (!preg_match('/^(?=.*[a-zA-Z])(?=.*\d)(?=.*[^a-zA-Z\d])/', $password)) {
            $errors[] = "Password must be at least 8 characters long and contain letters, numbers, and special symbols!";
        }

        // Check password match
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match!";
        }

        // If there are no errors, proceed with registration
        if (empty($errors)) {
            try {
                global $db;

                // Sanitize inputs
                $username = mysqli_real_escape_string($db, $username);
                $email = mysqli_real_escape_string($db, $email);

                // Check if username or email already exists
                $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
                $stmt = $db->prepare($checkQuery);
                $stmt->bind_param('ss', $username, $email);
                $stmt->execute();
                $result = $stmt->get_result();

                if ($result->num_rows > 0) {
                    throw new Exception("Username or email already exists!");
                }

                // Hash the password
                $hashedPassword = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

                // Insert user into database
                $insertQuery = "INSERT INTO users (username, email, password, role) VALUES (?, ?, ?, 'user')";
                $stmt = $db->prepare($insertQuery);
                $stmt->bind_param('sss', $username, $email, $hashedPassword);

                if ($stmt->execute()) {
                    // Registration successful
                    $_SESSION['success'] = "Registration successful! Please login.";
                    header("Location: login.php");
                    exit();
                } else {
                    throw new Exception("Error registering user. Please try again.");
                }

            } catch (Exception $e) {
                die("An error occurred: " . $e->getMessage());
            }
        } else {
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>$error</div>";
            }
        }
    }
}

// Display registration form
function displayRegistrationForm() {
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="email"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Register New Account</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm password" required>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>
<?php
}

// Main function call
if (!isset($_SESSION['user_id'])) {
    registerUser();
    displayRegistrationForm();
} else {
    header("Location: dashboard.php");
}
?>


<?php
$host = 'localhost';
$username = 'your_db_username';
$password = 'your_db_password';
$dbname = 'your_database_name';

// Establish database connection
try {
    $db = new mysqli($host, $username, $password, $dbname);
    
    if ($db->connect_error) {
        throw new Exception("Connection failed: " . $db->connect_error);
    }
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

try {
    // Create connection
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize and get user inputs
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        
        $errors = array();
        $is_valid = true;

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
            $is_valid = false;
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
            $is_valid = false;
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
            $is_valid = false;
        }

        // If validation passes
        if ($is_valid) {
            // Check if username already exists
            $check_username_query = "SELECT id FROM users WHERE username = ?";
            $stmt = $conn->prepare($check_username_query);
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Username already exists";
                $is_valid = false;
            }

            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email = ?";
            $stmt = $conn->prepare($check_email_query);
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Email already exists";
                $is_valid = false;
            }

            // If all checks pass, insert new user
            if ($is_valid) {
                // Hash password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert query
                $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = $conn->prepare($insert_query);
                $stmt->bind_param("sss", $username, $email, $hashed_password);

                if ($stmt->execute()) {
                    // Registration successful
                    header('Location: registration_success.php');
                    exit();
                } else {
                    $errors[] = "Error registering user";
                }
            }

            // Close statement
            $stmt->close();
        }

        // Display errors
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>$error</div>";
            }
        }
    }

    // Close connection
    $conn->close();

} catch (mysqli_sql_exception $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            echo "Username must be between 3 and 20 characters!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password length and complexity
        if (strlen($password) < 6 || !preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            echo "Password must be at least 6 characters long and contain only letters and numbers!";
            return;
        }

        // Confirm password match
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Check if email already exists in database
        $check_email_query = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $check_email_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";

        if (mysqli_query($conn, $sql)) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            $_SESSION['logged_in'] = true;

            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Initialize variables
    $error = "";
    $success = "";

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize and validate input data
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $birth_date = $_POST['birth_date'];
        $phone_number = $_POST['phone_number'];

        // Check if all required fields are filled
        if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {
            $error = "All fields are required!";
        } else {
            // Validate password strength
            if (strlen($password) < 8) {
                $error = "Password must be at least 8 characters long!";
            } elseif (!preg_match('/[A-Z]/', $password)) {
                $error = "Password must contain at least one uppercase letter!";
            } elseif (!preg_match('/[0-9]/', $password)) {
                $error = "Password must contain at least one number!";
            } else {
                // Check if password matches confirm password
                if ($password !== $confirm_password) {
                    $error = "Passwords do not match!";
                } else {
                    // Sanitize email and phone number
                    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
                    
                    // Validate phone number format
                    if (!preg_match('/^\+?[0-9]{10,}$/', $phone_number)) {
                        $error = "Invalid phone number format!";
                    } else {
                        // Check if email already exists in database
                        $check_email_query = "SELECT COUNT(*) AS count FROM users WHERE email = ?";
                        $stmt = mysqli_prepare($conn, $check_email_query);
                        mysqli_stmt_bind_param($stmt, "s", $email);
                        mysqli_stmt_execute($stmt);
                        $result = mysqli_stmt_get_result($stmt);
                        $row = mysqli_fetch_assoc($result);

                        if ($row['count'] > 0) {
                            $error = "Email already exists!";
                        } else {
                            // Hash the password
                            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

                            // Insert user data into database
                            $sql = "INSERT INTO users (name, email, password, birth_date, phone_number) 
                                    VALUES (?, ?, ?, ?, ?)";
                            $stmt = mysqli_prepare($conn, $sql);
                            mysqli_stmt_bind_param($stmt, "sssss", $name, $email, $hashed_password, $birth_date, $phone_number);

                            if (mysqli_stmt_execute($stmt)) {
                                $success = "Registration successful! Please login.";
                                // Redirect to login page after 3 seconds
                                header("refresh:3; url=login.php");
                            } else {
                                $error = "Error registering user: " . mysqli_error($conn);
                            }
                        }
                    }
                }
            }
        }
    }

    // Display error or success messages
    if (!empty($error)) {
        echo "<div class='alert alert-danger'>$error</div>";
    }
    if (!empty($success)) {
        echo "<div class='alert alert-success'>$success</div>";
    }
}

// Call the registerUser function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Register user function
function registerUser() {
    global $conn;

    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate all fields are filled out
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "Please fill in all fields";
        return;
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT username FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        echo "Username already exists";
        return;
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT email FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        echo "Email already exists";
        return;
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        return;
    }

    // Validate password length and content
    if (strlen($password) < 6) {
        echo "Password must be at least 6 characters long";
        return;
    }

    if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
        echo "Password can only contain letters and numbers";
        return;
    }

    if ($password !== $confirm_password) {
        echo "Passwords do not match";
        return;
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        echo "Registration successful!";
    } else {
        echo "Error: " . $stmt->error;
    }

    // Close statement
    $stmt->close();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .form-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        input[type=text], input[type=password], input[type=email] {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            display: inline-block;
            border: 1px solid #ccc;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Registration Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username"><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email"><br>

            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password"><br>

            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password"><br>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Define variables and initialize with empty values
$username = $email = $password = $confirm_password = "";
$errors = array();

// Connect to the database
$mysqli = new mysqli("localhost", "username", "password", "database_name");

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize input data
    function sanitizeInput($data) {
        return htmlspecialchars(trim($data));
    }

    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username)) {
        $errors[] = "Username is required";
    }
    if (empty($email)) {
        $errors[] = "Email is required";
    }
    if (empty($password) || empty($confirm_password)) {
        $errors[] = "Password is required";
    }

    // Check password strength
    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Check for existing username and email in the database
    if (empty($errors)) {
        $stmt = $mysqli->prepare("SELECT id FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Check if the existing row is for username or email
            $row = $result->fetch_assoc();
            if ($username == $row['username']) {
                $errors[] = "Username already exists";
            }
            if ($email == $row['email']) {
                $errors[] = "Email already exists";
            }
        }

        $stmt->close();
    }

    // If there are no errors, proceed to registration
    if (empty($errors)) {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $mysqli->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            $errors[] = "An error occurred while registering. Please try again.";
        }

        $stmt->close();
    }
}

// Close database connection
$mysqli->close();

// Display errors if any
if (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<p style='color:red;'>Error: " . $error . "</p><br>";
    }
}
?>


<?php
function registerUser($username, $email, $password) {
    // Database configuration
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "your_database";

    try {
        // Connect to database
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Check for existing email
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        
        if ($stmt->fetch()) {
            throw new Exception("Email already exists.");
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        
        if (!$stmt->execute()) {
            throw new Exception("Registration failed: " . $stmt->error);
        }

        // Close connections
        $stmt->close();
        $conn->close();

        return true; // Registration successful

    } catch (Exception $e) {
        // Handle exceptions and errors
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate inputs here...

    if (registerUser($username, $email, $password)) {
        header("Location: login.php?success=1");
        exit();
    } else {
        echo "Registration failed. Please try again.";
    }
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function for user registration
function registerUser($username, $email, $password, $confirm_password, $pdo) {
    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "All fields must be filled out";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if password and confirm password match
    if ($password !== $confirm_password) {
        return "Passwords do not match";
    }

    // Password requirements: minimum 8 characters including at least one uppercase letter, one lowercase letter, and one number
    if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/', $password)) {
        return "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Check if username already exists in database
    $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    if ($stmt->rowCount() > 0) {
        return "Username already taken";
    }

    // Check if email already exists in database
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->rowCount() > 0) {
        return "Email already registered";
    }

    // Insert new user into the database
    try {
        $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);
        return true;
    } catch (PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = trim($_POST['password']);
    $confirm_password = trim($_POST['confirm_password']);

    // Call registration function
    $result = registerUser($username, $email, $password, $confirm_password, $pdo);

    if ($result === true) {
        // Registration successful, redirect to login page
        header("Location: login.php?message=Registration successful! Please login.");
        exit();
    } else {
        // Display error message
        echo "<script>alert('".$result."');</script>";
    }
}

// Display registration form HTML
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register New Account</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection function
function connect_db() {
    $host = "localhost";
    $username = "root";
    $password = "";
    $dbname = "user_registration";

    // Create connection
    $conn = new mysqli($host, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// User registration function
function user_registration($username, $email, $password) {
    // Sanitize input data
    $username = mysqli_real_escape_string(connect_db(), $username);
    $email = mysqli_real_escape_string(connect_db(), $email);
    $password = mysqli_real_escape_string(connect_db(), $password);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = ?";
    $stmt = connect_db()->prepare($check_username_query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = ?";
    $stmt = connect_db()->prepare($check_email_query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = connect_db()->prepare($insert_query);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close the database connection
    connect_db()->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = user_registration($username, $email, $password);
    echo $result;
}
?>


<?php
// Include database configuration file
include 'dbconfig.php';

function registerUser($username, $email, $password, $confirm_password, $first_name, $last_name) {
    // Check if all required fields are filled out
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($first_name) || empty($last_name)) {
        throw new Exception("All fields must be filled out");
    }

    // Check if password and confirm password match
    if ($password !== $confirm_password) {
        throw new Exception("Passwords do not match");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format");
    }

    // Connect to the database
    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

    // Check for connection errors
    if ($mysqli->connect_error) {
        throw new Exception("Connection failed: " . $mysqli->connect_error);
    }

    try {
        // Prepare and sanitize inputs
        $username = $mysqli->real_escape_string($username);
        $email = $mysqli->real_escape_string($email);
        $password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
        $first_name = $mysqli->real_escape_string($first_name);
        $last_name = $mysqli->real_escape_string($last_name);

        // Check if username already exists
        $stmt = $mysqli->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username already exists");
        }

        // Check if email already exists
        $stmt = $mysqli->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already exists");
        }

        // Insert user into the database
        $stmt = $mysqli->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param('sssss', $username, $email, $password, $first_name, $last_name);

        if ($stmt->execute()) {
            // Start session and set user details
            session_start();
            $_SESSION['username'] = $username;
            $_SESSION['first_name'] = $first_name;
            $_SESSION['last_name'] = $last_name;
            $_SESSION['user_id'] = $mysqli->insert_id;

            // Redirect to dashboard or success page
            header("Location: login_success.php");
            exit();
        } else {
            throw new Exception("Registration failed. Please try again.");
        }

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($mysqli !== null) {
            $mysqli->close();
        }
    }
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        registerUser($_POST['username'], $_POST['email'], $_POST['password'], $_POST['confirm_password'], $_POST['first_name'], $_POST['last_name']);
    } catch (Exception $e) {
        echo $e->getMessage();
    }
}

// HTML form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <h2>Register New User</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        First Name: <input type="text" name="first_name"><br>
        Last Name: <input type="text" name="last_name"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'my_database';

try {
    // Connect to the database using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to register a new user
function registerUser($username, $email, $password, $confirm_password) {
    global $conn;
    
    // Initialize error array
    $errors = array();
    
    // Check if all fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        array_push($errors, "All fields must be filled out");
    }
    
    // Validate username
    if (!preg_match("/^[a-zA-Z0-9_\-]+$/", $username)) {
        array_push($errors, "Username can only contain letters, numbers, underscores, and hyphens");
    } elseif (strlen($username) < 3 || strlen($username) > 20) {
        array_push($errors, "Username must be between 3 and 20 characters long");
    }
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        array_push($errors, "Please enter a valid email address");
    } else {
        // Check if email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute(array($email));
        
        if ($stmt->rowCount() > 0) {
            array_push($errors, "Email is already taken");
        }
    }
    
    // Validate password
    if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/", $password)) {
        array_push($errors, "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number");
    }
    
    // Check if password matches confirm password
    if ($password != $confirm_password) {
        array_push($errors, "Passwords do not match");
    }
    
    // If there are no errors, proceed with registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        try {
            // Insert new user into the database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute(array($username, $email, $hashed_password));
            
            // Registration successful
            return "Registration successful! You can now login.";
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
    
    // Return errors if any
    return $errors;
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Call the registration function
    $result = registerUser($username, $email, $password, $confirm_password);
    
    if (is_array($result)) {
        foreach ($result as $error) {
            echo "<div class='error'>" . $error . "</div>";
        }
    } else {
        echo "<div class='success'>" . $result . "</div>";
    }
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .form-group {
            margin-bottom: 10px;
        }
        
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-top: 10px;
        }
        
        .success {
            color: green;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        <div class="form-group">
            <input type="text" name="username" placeholder="Username" required>
        </div>
        <div class="form-group">
            <input type="email" name="email" placeholder="Email" required>
        </div>
        <div class="form-group">
            <input type="password" name="password" placeholder="Password" required>
        </div>
        <div class="form-group">
            <input type="password" name="confirm_password" placeholder="Confirm Password" required>
        </div>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }
        
        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Check password strength
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }
        
        // Check username already exists
        $checkUsernameQuery = "SELECT username FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsernameQuery);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }
        
        // Check email already exists
        $checkEmailQuery = "SELECT email FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }
        
        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        
        if ($stmt->execute()) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error: " . $stmt->error;
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// Connect to the database
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // Sanitize input
        $username = htmlspecialchars($username);
        $email = htmlspecialchars($email);

        // Password validation
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username already exists
        $check_username = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user into database
        $insert_user = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_user);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user!";
        }
    }
}

// Close database connection
 mysqli_close($conn);
?>


<?php
// Database connection settings
$host = "localhost";
$usernameDb = "root"; // Replace with your database username
$passwordDb = "";     // Replace with your database password
$databaseName = "my_users_db"; // Replace with your database name

// Create a new database connection
$conn = mysqli_connect($host, $usernameDb, $passwordDb, $databaseName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Check if all required fields are filled out
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields must be filled out!";
            return;
        }

        // Validate username
        if (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
            echo "Username can only contain letters, numbers, and underscores!";
            return;
        }
        if (strlen($username) < 4 || strlen($username) > 20) {
            echo "Username must be between 4 and 20 characters long!";
            return;
        }

        // Check for existing username
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // Check for existing email
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Validate password
        if ($password !== $confirmPassword) {
            echo "Passwords do not match!";
            return;
        }
        if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])/', $password)) {
            echo "Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

        if (!mysqli_stmt_execute($stmt)) {
            echo "Error registering user: " . mysqli_error($conn);
            return;
        }

        // Redirect to login page or dashboard
        header("Location: login.php?success=Registration successful!");
        exit();
    }
}

// Call the function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Include the database configuration file
include('config.php');

function registerUser() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Form validation
        $errors = array();
        
        // Check if all fields are filled
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            array_push($errors, "All fields are required");
        }
        
        // Validate username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            array_push($errors, "Username must be between 3 and 20 characters");
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Email is invalid");
        }
        
        // Validate password requirements
        if (strlen($password) < 6 || strlen($password) > 20) {
            array_push($errors, "Password must be between 6 and 20 characters");
        }
        
        if (!preg_match('/[0-9]/', $password)) {
            array_push($errors, "Password must contain at least one number");
        }
        
        // Confirm password matches
        if ($password != $confirm_password) {
            array_push($errors, "Passwords do not match");
        }
        
        // If no errors
        if (empty($errors)) {
            // Sanitize input data
            $username = mysqli_real_escape_string($db, $username);
            $email = mysqli_real_escape_string($db, $email);
            
            // Hash the password
            $password_hash = password_hash($password, PASSWORD_DEFAULT);
            
            // Check if username already exists
            $query = "SELECT * FROM users WHERE username = '$username'";
            $result = mysqli_query($db, $query);
            
            if (mysqli_num_rows($result) > 0) {
                array_push($errors, "Username already taken");
            }
            
            // Check if email already exists
            $query = "SELECT * FROM users WHERE email = '$email'";
            $result = mysqli_query($db, $query);
            
            if (mysqli_num_rows($result) > 0) {
                array_push($errors, "Email already taken");
            }
            
            // If no errors, insert into database
            if (empty($errors)) {
                $query = "INSERT INTO users (username, email, password) 
                          VALUES ('$username', '$email', '$password_hash')";
                
                if (mysqli_query($db, $query)) {
                    echo "<div class='success'>Registration successful! Redirecting to login page...</div>";
                    header("Refresh: 5; url=login.php");
                    exit();
                } else {
                    array_push($errors, "Error registering user. Please try again later.");
                }
            }
        }
    }
    
    // Display errors
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div><br>";
        }
    }
}

// Call the function
registerUser();
?>


<?php
// Database connection settings
$host = "localhost";
$user = "root"; // Replace with your database username
$password = ""; // Replace with your database password
$db_name = "user_registration"; // Replace with your database name

// Connect to the database
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Check if username already exists
    $checkUsername = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $checkUsername->bind_param("s", $username);
    $checkUsername->execute();
    $result = $checkUsername->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $checkEmail = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $checkEmail->bind_param("s", $email);
    $checkEmail->execute();
    $result = $checkEmail->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertUser = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
    $insertUser->bind_param("sss", $username, $email, $hashed_password);
    
    if ($insertUser->execute()) {
        return "Registration successful! You can now login.";
    } else {
        return "Error occurred during registration!";
    }

    // Close statements
    $checkUsername->close();
    $checkEmail->close();
    $insertUser->close();
}

// Create users table if not exists
$sql = "CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL
)";

$conn->query($sql);

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = registerUser();
    echo "<div class='message'>$result</div>";
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        form {
            background-color: #f2f2f2;
            padding: 20px;
            border-radius: 8px;
        }
        .input-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            margin-top: 10px;
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="input-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="input-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="input-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="input-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // Default MySQL username is 'root'
$password = '';     // Password if set

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to register a user
function registerUser($username, $email, $password, $confirm_password) {
    global $conn;

    // Sanitize input data
    $username = htmlspecialchars(strip_tags(trim($username)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $password = trim($password);
    $confirm_password = trim($confirm_password);

    // Check if username already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($row) {
            return "Username already exists!";
        }
    } catch (PDOException $e) {
        die("Error checking username: " . $e->getMessage());
    }

    // Check if email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($row) {
            return "Email already exists!";
        }
    } catch (PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }

    // Check if passwords match
    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, [
        'cost' => 12,
    ]);

    // Prepare the registration query
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);

        return "Registration successful! Please login.";
    } catch (PDOException $e) {
        die("Error registering user: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Call the registration function
    $result = registerUser($username, $email, $password, $confirm_password);
    echo $result;
}
?>


<?php
// Database connection
function db_connect() {
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "users_db";

    // Create connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Sanitize input data
function sanitize($data) {
    $data = trim($data);
    $data = htmlspecialchars($data, ENT_QUOTES);
    $data = strip_tags($data);
    return $data;
}

// Validate and register user
function register_user($username, $email, $password, $confirm_password, $full_name, $dob) {
    // Sanitize inputs
    $username = sanitize($username);
    $email = sanitize($email);
    $full_name = sanitize($full_name);
    $dob = sanitize($dob);

    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($full_name) || empty($dob)) {
        return "Please fill in all required fields.";
    }

    // Validate password strength
    $min_length = 8;
    $uppercase = preg_match('@[A-Z]@', $password);
    $lowercase = preg_match('@[a-z]@', $password);
    $number = preg_match('@[0-9]@', $password);

    if ($uppercase + $lowercase + $number < 2 || strlen($password) < $min_length) {
        return "Password must be at least 8 characters and contain at least two different types of characters (letters, numbers, or special characters).";
    }

    // Check password match
    if ($password !== $confirm_password) {
        return "Passwords do not match.";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Connect to database
    $conn = db_connect();

    // Check if username already exists
    $sql_check_username = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql_check_username);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists.";
    }

    // Check if email already exists
    $sql_check_email = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql_check_email);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists.";
    }

    // Insert new user into database
    $sql_insert_user = "INSERT INTO users (username, email, password, full_name, dob) VALUES (?, ?, ?, ?, ?)";
    $stmt = $conn->prepare($sql_insert_user);
    $stmt->bind_param("sssss", $username, $email, $hashed_password, $full_name, $dob);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = $_POST['full_name'];
    $dob = $_POST['dob'];

    $result = register_user($username, $email, $password, $confirm_password, $full_name, $dob);
    echo $result;
}
?>


<?php
// Include database connection file
include_once("db_connection.php");

if (isset($_POST['submit'])) {
    // Get form values
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $errors = array();

    // Validate inputs
    if (empty($username)) {
        $errors[] = "Username is required";
    }

    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    }

    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Check for existing username or email
    $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $check_query);
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            if ($row['username'] == $username) {
                $errors[] = "Username already exists";
            }
            if ($row['email'] == $email) {
                $errors[] = "Email already exists";
            }
        }
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            $_SESSION['success'] = "You have successfully registered!";
            header("Location: login.php");
            exit();
        } else {
            die("Error registering user: " . mysqli_error($conn));
        }
    } else {
        // Display errors to the user
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type=text], input[type=password], input[type=email] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .alert-danger {
            color: red;
            margin-top: 10px;
            padding: 10px;
            border: 1px solid red;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

try {
    // Create connection
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Function to sanitize input data
    function sanitizeInput($data) {
        $data = trim($data);
        $data = stripslashes($data);
        $data = htmlspecialchars($data);
        return $data;
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get values from POST
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
            throw new Exception("All fields are required!");
        }

        if ($password !== $confirmPassword) {
            throw new Exception("Passwords do not match!");
        }

        if (strlen($password) < 6) {
            throw new Exception("Password must be at least 6 characters long!");
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username already exists!");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already exists!");
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        $result = $stmt->execute();

        if ($result) {
            echo "Registration successful!";
            // You can redirect to login page here
            header("Location: login.php");
            exit();
        } else {
            throw new Exception("Error registering user!");
        }

    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
} finally {
    // Close connection
    if ($conn != null) {
        $conn->close();
    }
}
?>


<?php
function registerUser($data) {
    // Required fields: username, email, password
    $username = $data['username'];
    $email = $data['email'];
    $password = $data['password'];

    // Database connection
    require('db_connection.php');

    // Check if username or email already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return "Username already exists.";
    }

    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return "Email already exists.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (mysqli_stmt_execute($stmt)) {
        // Registration successful
        return true;
    } else {
        // Error occurred
        return "Error: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}
?>


$data = [
    'username' => $_POST['username'],
    'email' => $_POST['email'],
    'password' => $_POST['password']
];

$result = registerUser($data);

if ($result === true) {
    // Registration successful, redirect or show success message
} else {
    // Display error message
    echo $result;
}


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to sanitize input data
    function sanitizeInput($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    // Register user function
    function registerUser($conn, $username, $email, $password) {
        // Check if username is already taken
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->fetch(PDO::FETCH_ASSOC)) {
            return "Username already exists!";
        }

        // Check if email is already registered
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->fetch(PDO::FETCH_ASSOC)) {
            return "Email already registered!";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);

        return "Registration successful!";
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Basic input validation
        $errors = [];
        if (empty($username) || empty($email) || empty($password)) {
            array_push($errors, "All fields are required!");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Invalid email format!");
        }

        if ($password != $confirm_password) {
            array_push($errors, "Passwords do not match!");
        }

        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            array_push($errors, "Username must be between 3 and 20 characters!");
        }

        // Check password strength
        if (strlen($password) < 6) {
            array_push($errors, "Password must be at least 6 characters long!");
        }

        if (!preg_match('/[A-Z]/', $password)) {
            array_push($errors, "Password must contain at least one uppercase letter!");
        }

        if (!preg_match('/\d/', $password)) {
            array_push($errors, "Password must contain at least one number!");
        }

        // If no errors
        if (empty($errors)) {
            $result = registerUser($conn, $username, $email, $password);
            echo $result;
        } else {
            foreach ($errors as $error) {
                echo "<p style='color: red;'>$error</p>";
            }
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Connect to database
$host = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser($username, $email, $password, $conn) {
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $check_query);

    if (mysqli_num_rows($result) > 0) {
        return false; // Username or email already exists
    }

    // Insert user into database
    $query = "INSERT INTO users (username, email, password_hash)
              VALUES ('$username', '$email', '$hashed_password')";
    
    $result = mysqli_query($conn, $query);

    if ($result) {
        return true; // Registration successful
    } else {
        return false; // Error occurred during registration
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if ($password != $confirm_password) {
        echo "Passwords do not match!";
    } else {
        // Attempt registration
        if (registerUser($username, $email, $password, $conn)) {
            echo "Registration successful! You can now log in.";
        } else {
            echo "Registration failed. Please try again.";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .form-group {
            margin-bottom: 10px;
        }
        input[type=text], input[type=email], input[type=password] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method="post">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
        </div>
        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$username = 'root'; // change to your database username
$password = '';     // change to your database password
$dbname = 'user_registration';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function registerUser() {
    global $conn;

    // Get form values
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = htmlspecialchars($_POST['full_name']);

    // Check if all fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($full_name)) {
        header("Location: registration_form.php?error=Please fill in all fields");
        exit();
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: registration_form.php?error=Invalid email format");
        exit();
    }

    // Check if passwords match
    if ($password != $confirm_password) {
        header("Location: registration_form.php?error=Passwords do not match");
        exit();
    }

    // Check if username already exists
    $check_username = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username);
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        header("Location: registration_form.php?error=Username already exists");
        exit();
    }

    // Check if email already exists
    $check_email = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($check_email);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        header("Location: registration_form.php?error=Email already exists");
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert into database
    $sql = "INSERT INTO users (username, email, password, full_name) 
            VALUES (?, ?, ?, ?)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('ssss', $username, $email, $hashed_password, $full_name);

    if ($stmt->execute()) {
        // Registration successful
        header("Location: welcome.php?success=Registration successful");
        exit();
    } else {
        // Error occurred
        header("Location: registration_form.php?error=Registration failed");
        exit();
    }
}

// Process form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration</title>
</head>
<body>
    <?php
    // Display error messages if any
    if (isset($_GET['error'])) {
        echo "<p style='color: red;'>Error: " . $_GET['error'] . "</p>";
    }
    ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        <h2>Registration Form</h2>
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="full_name">Full Name:</label><br>
        <input type="text" id="full_name" name="full_name"><br>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Include database connection file
include('db_connection.php');

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input data
        if (!validateUsername($username)) {
            die("Invalid username");
        }

        if (!validateEmail($email)) {
            die("Invalid email format");
        }

        if (!validatePassword($password)) {
            die("Weak password. Password must be at least 8 characters long and contain at least one uppercase letter, one number, and one special symbol.");
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            die("Username already exists");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            die("Email already registered");
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        try {
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashedPassword]);
            
            // Registration successful
            header('Location: registration_success.php');
            exit();
        } catch (PDOException $e) {
            die("Error registering user: " . $e->getMessage());
        }
    }
}

function validateUsername($username) {
    return preg_match('/^[a-zA-Z0-9]{3,20}$/', $username);
}

function validateEmail($email) {
    return preg_match('/^[^@]+@[^@]+\.[^@]+$/', $email);
}

function validatePassword($password) {
    // Check password strength
    if (strlen($password) < 8) {
        return false;
    }
    if (!preg_match('/[A-Z]/', $password)) { // At least one uppercase letter
        return false;
    }
    if (!preg_match('/\d/', $password)) {     // At least one number
        return false;
    }
    if (!preg_match('/[^a-zA-Z0-9]/', $password)) { // At least one special symbol
        return false;
    }
    return true;
}

// Call the registration function
registerUser();
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'mydatabase';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$ dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Registration function
function registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $date_of_birth) {
    global $conn;

    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields";
    }

    // Validate username
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username can only contain letters, numbers, and underscores";
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    if ($stmt->rowCount() > 0) {
        return "Username already exists";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->rowCount() > 0) {
        return "Email already registered";
    }

    // Validate password
    if ($password != $confirm_password) {
        return "Passwords do not match";
    }

    // Password requirements: at least 8 characters, containing letters and numbers
    if (!preg_match("/^[a-zA-Z0-9!@#$%^&*()_+}{\"':;?~\-]*$/", $password)) {
        return "Password can only contain letters, numbers, and special characters";
    }

    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, date_of_birth) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $date_of_birth]);
        return "Registration successful! You can now login.";
    } catch(PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $date_of_birth = $_POST['date_of_birth'];

    $result = registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $date_of_birth);
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Create Account</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method="post">
            <div class="mb-3">
                <label for="username">Username:</label>
                <input type="text" class="form-control" id="username" name="username">
            </div>
            <div class="mb-3">
                <label for="email">Email:</label>
                <input type="email" class="form-control" id="email" name="email">
            </div>
            <div class="mb-3">
                <label for="password">Password:</label>
                <input type="password" class="form-control" id="password" name="password">
            </div>
            <div class="mb-3">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" class="form-control" id="confirm_password" name="confirm_password">
            </div>
            <div class="mb-3">
                <label for="first_name">First Name:</label>
                <input type="text" class="form-control" id="first_name" name="first_name">
            </div>
            <div class="mb-3">
                <label for="last_name">Last Name:</label>
                <input type="text" class="form-control" id="last_name" name="last_name">
            </div>
            <div class="mb-3">
                <label for="date_of_birth">Date of Birth:</label>
                <input type="date" class="form-control" id="date_of_birth" name="date_of_birth">
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    // Sanitize and validate input data
    function sanitize($data) {
        return htmlspecialchars(trim($data));
    }

    $firstname = sanitize($_POST[' firstname']);
    $lastname = sanitize($_POST[' lastname']);
    $email = sanitize($_POST[' email']);
    $password = $_POST[' password'];
    $confirm_password = $_POST[' confirm_password'];
    $terms = isset($_POST[' terms']);

    // Initialize error array
    $errors = [];

    // Validate firstname and lastname
    if (empty($firstname) || empty($lastname)) {
        $errors[] = "First name and last name are required.";
    } elseif (!preg_match("/^[a-zA-Z ]+$/", $firstname) || !preg_match("/^[a-zA-Z ]+$/", $lastname)) {
        $errors[] = "Names must contain only letters and spaces.";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required.";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format.";
    } else {
        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            $errors[] = "Email already exists.";
        }
    }

    // Validate password
    if (empty($password) || empty($confirm_password)) {
        $errors[] = "Password is required.";
    } elseif ($password !== $confirm_password) {
        $errors[] = "Passwords do not match.";
    } elseif (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long.";
    }

    // Validate terms checkbox
    if (!$terms) {
        $errors[] = "You must accept the Terms and Conditions.";
    }

    // If no errors, proceed with registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $insert_query = "INSERT INTO users (firstname, lastname, email, password) 
                         VALUES (?, ?, ?, ?)";

        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, 'ssss', $ firstname, $lastname, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            $_SESSION['message'] = "Registration successful! Please check your email for verification.";
            header("Location: success.php");
            exit();
        } else {
            die("Error registering user: " . mysqli_error($conn));
        }
    } else {
        // Display errors
        foreach ($errors as $error) {
            echo "<div style='color: red;'>$error</div><br>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
if (isset($_SESSION['message'])) {
    echo "<h2>" . $_SESSION['message'] . "</h2>";
    unset($_SESSION['message']);
}
?>


function sendVerificationEmail($email, $firstname) {
    $to = $email;
    $subject = "Verify Your Email Address";
    $message = "
        <html>
            <head>
                <title>Verify Account</title>
            </head>
            <body>
                <h2>Welcome! Verify Your Account.</h2>
                <p>Please click the following link to verify your account:</p>
                <a href='http://yourwebsite.com/verify.php?email=$email'>Click here to verify</a>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: Your Name <your@email.com>" . "\r
";

    mail($to, $subject, $message, $headers);
}


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['email'])) {
    $email = $_GET['email'];

    // Update user status to verified
    $update_query = "UPDATE users SET is_verified = 1 WHERE email = ?";
    $stmt = mysqli_prepare($conn, $update_query);
    mysqli_stmt_bind_param($stmt, 's', $email);

    if (mysqli_stmt_execute($stmt)) {
        $_SESSION['message'] = "Your account has been verified. You can now login.";
        header("Location: login.php");
        exit();
    } else {
        die("Error verifying user: " . mysqli_error($conn));
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    return mysqli_real_escape_string($GLOBALS['conn'], $data);
}

// Function to validate email
function validateEmail($email) {
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return true;
    } else {
        return false;
    }
}

// Registration function
function registerUser() {
    global $conn;

    // Initialize variables
    $username = "";
    $email = "";
    $password = "";
    $confirm_password = "";

    $errors = array();
    $success = false;

    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get values from form
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            array_push($errors, "Username is required");
        }

        // Validate email
        if (empty($email)) {
            array_push($errors, "Email is required");
        } elseif (!validateEmail($email)) {
            array_push($errors, "Invalid email format");
        }

        // Validate password
        if (empty($password)) {
            array_push($errors, "Password is required");
        } elseif (strlen($password) < 6) {
            array_push($errors, "Password must be at least 6 characters long");
        }

        // Check confirm password
        if ($confirm_password != $password) {
            array_push($errors, "Passwords do not match");
        }

        // If no errors
        if (count($errors) == 0) {

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            try {
                // Check if username already exists
                $check_username_query = "SELECT id FROM users WHERE username = ?";
                $stmt = mysqli_prepare($conn, $check_username_query);
                mysqli_stmt_bind_param($stmt, "s", $username);
                mysqli_stmt_execute($stmt);
                mysqli_stmt_store_result($stmt);

                if (mysqli_stmt_num_rows($stmt) > 0) {
                    array_push($errors, "Username already exists");
                } else {
                    // Check if email already exists
                    $check_email_query = "SELECT id FROM users WHERE email = ?";
                    $stmt = mysqli_prepare($conn, $check_email_query);
                    mysqli_stmt_bind_param($stmt, "s", $email);
                    mysqli_stmt_execute($stmt);
                    mysqli_stmt_store_result($stmt);

                    if (mysqli_stmt_num_rows($stmt) > 0) {
                        array_push($errors, "Email already exists");
                    } else {
                        // Insert into database
                        $query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                        $stmt = mysqli_prepare($conn, $query);
                        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

                        if (mysqli_stmt_execute($stmt)) {
                            $success = true;
                        } else {
                            array_push($errors, "Error registering user");
                        }
                    }
                }

            } catch (Exception $e) {
                array_push($errors, "An error occurred: " . $e->getMessage());
            }

        }

    }

    // Close connection
    mysqli_close($conn);

    return array('errors' => $errors, 'success' => $success);
}

// Call registration function
$result = registerUser();

if ($result['success']) {
    header("Location: welcome.php");
    exit();
} else {
    foreach ($result['errors'] as $error) {
        echo "<div class='error'>$error</div>";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'registration';

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Data validation
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all fields!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, htmlspecialchars($username));
        $email = mysqli_real_escape_string($conn, htmlspecialchars($email));

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, 's', $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        // Close statement
        mysqli_stmt_close($stmt);
    }
}

// Call the function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $firstName = htmlspecialchars(trim($_POST['firstName']));
    $lastName = htmlspecialchars(trim($_POST['lastName']));
    $email = htmlspecialchars(trim(strtolower($_POST['email'])));
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirmPassword'];

    // Validate inputs
    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password) || empty($confirmPassword)) {
        $_SESSION['error'] = "All fields are required!";
        header("Location: register.html");
        exit();
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['error'] = "Invalid email format!";
        header("Location: register.html");
        exit();
    }

    // Check password requirements
    if (strlen($password) < 8 || !preg_match('/^[a-zA-Z0-9]*$/', $password)) {
        $_SESSION['error'] = "Password must be at least 8 characters and contain only letters and numbers!";
        header("Location: register.html");
        exit();
    }

    if ($password !== $confirmPassword) {
        $_SESSION['error'] = "Passwords do not match!";
        header("Location: register.html");
        exit();
    }

    // Check for existing username or email
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username=:username OR email=:email");
        $stmt->execute(['username' => $username, 'email' => $email]);
        if ($stmt->rowCount() > 0) {
            $_SESSION['error'] = "Username or email already exists!";
            header("Location: register.html");
            exit();
        }
    } catch (PDOException $e) {
        die("Error checking user: " . $e->getMessage());
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (firstName, lastName, email, username, password) VALUES (:firstName, :lastName, :email, :username, :password)");
        $result = $stmt->execute([
            'firstName' => $firstName,
            'lastName' => $lastName,
            'email' => $email,
            'username' => $username,
            'password' => $hashedPassword
        ]);

        if ($result) {
            $_SESSION['success'] = "Registration successful! Please login.";
            header("Location: login.html");
            exit();
        } else {
            $_SESSION['error'] = "Error registering user!";
            header("Location: register.html");
            exit();
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }

    // Close connection
    $conn = null;
}
?>


<?php
// Database connection
$host = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    global $conn;
    return mysqli_real_escape_string($conn, trim($data));
}

function registration($formData) {
    // Extract form data
    extract($formData);
    
    // Initialize error array
    $error = array();

    if (empty($username)) {
        $error['username'] = "Username is required";
    } else {
        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            $error['username'] = "Username must be between 3 and 20 characters";
        }
        // Check for invalid characters
        if (!preg_match("/^[a-zA-Z0-9_\-]+$/", $username)) {
            $error['username'] = "Invalid username. Only letters, numbers, underscores and hyphens are allowed.";
        }
    }

    if (empty($email)) {
        $error['email'] = "Email is required";
    } else {
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error['email'] = "Invalid email format";
        }
        // Check if email already exists in database
        $check_email = "SELECT * FROM users WHERE email = '" . sanitizeInput($email) . "'";
        $result = mysqli_query($conn, $check_email);
        if (mysqli_num_rows($result) > 0) {
            $error['email'] = "Email is already taken";
        }
    }

    if (empty($password)) {
        $error['password'] = "Password is required";
    } else {
        // Validate password
        if (strlen($password) < 8) {
            $error['password'] = "Password must be at least 8 characters long";
        }
        // Check for uppercase, lowercase, number and special character
        if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z\d!@#$%^&*()_+}{\"':;?&~,-.<>]*$/", $password)) {
            $error['password'] = "Password must contain at least one uppercase, one lowercase, one number and a special character";
        }
    }

    if (empty($confirm_password)) {
        $error['confirm_password'] = "Confirm password is required";
    } else {
        if ($password !== $confirm_password) {
            $error['confirm_password'] = "Passwords do not match";
        }
    }

    // Validate first name
    if (empty($first_name)) {
        $error['first_name'] = "First Name is required";
    } else {
        if (!preg_match("/^[a-zA-Z-' ]+$/", $first_name)) {
            $error['first_name'] = "Invalid characters in First Name. Only letters, apostrophes and spaces are allowed.";
        }
    }

    // Validate last name
    if (empty($last_name)) {
        $error['last_name'] = "Last Name is required";
    } else {
        if (!preg_match("/^[a-zA-Z-' ]+$/", $last_name)) {
            $error['last_name'] = "Invalid characters in Last Name. Only letters, apostrophes and spaces are allowed.";
        }
    }

    // Validate phone number
    if (empty($phone_number)) {
        $error['phone_number'] = "Phone Number is required";
    } else {
        if (!preg_match("/^[0-9]{10}$/", $phone_number)) {
            $error['phone_number'] = "Invalid Phone Number. Please enter 10 digits only.";
        }
    }

    // Validate date of birth
    if (empty($birthdate)) {
        $error['birthdate'] = "Birthdate is required";
    } else {
        $date = DateTime::createFromFormat('Y-m-d', $birthdate);
        if (!$date || $date->format('Y-m-d') !== $birthdate) {
            $error['birthdate'] = "Invalid date format. Please use YYYY-MM-DD format.";
        }
    }

    // Check for any errors
    if (!empty($error)) {
        return $error;
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert into database
        try {
            $query = "INSERT INTO users (
                username,
                email,
                password_hash,
                first_name,
                last_name,
                phone_number,
                birthdate,
                registration_date,
                user_level
            ) VALUES (
                '" . sanitizeInput($username) . "',
                '" . sanitizeInput($email) . "',
                '" . $hashed_password . "',
                '" . sanitizeInput($first_name) . "',
                '" . sanitizeInput($last_name) . "',
                '" . sanitizeInput($phone_number) . "',
                '" . sanitizeInput($birthdate) . "',
                CURRENT_TIMESTAMP,
                1
            )";

            $result = mysqli_query($conn, $query);
            if (!$result) {
                throw new Exception("Error inserting into database: " . mysqli_error($conn));
            }

            // Return success
            return array(
                'success' => true,
                'username' => $username,
                'email' => $email,
                'first_name' => $first_name,
                'last_name' => $last_name,
                'registration_date' => date('Y-m-d H:i:s')
            );
        } catch (Exception $e) {
            return array(
                'error' => $e->getMessage()
            );
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['register'])) {
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = trim($_POST['password']);

        // Validate inputs
        $errors = array();

        if (empty($username) || empty($email) || empty($password)) {
            $errors[] = "All fields are required!";
        }

        // Check username length and characters
        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            $errors[] = "Username must contain only letters and numbers!";
        } elseif (strlen($username) < 3 || strlen($username) > 20) {
            $errors[] = "Username must be between 3 and 20 characters!";
        }

        // Check email format
        if (!preg_match("/^[^@]+@[^@]+\.[a-zA-Z]{2,}$/", $email)) {
            $errors[] = "Please enter a valid email address!";
        }

        // Check password length
        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long!";
        }

        // If there are no errors
        if (empty($errors)) {
            // Include database configuration
            include("db_config.php");

            // Check if username or email already exists
            $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
            $result = mysqli_query($conn, $checkQuery);

            if (mysqli_num_rows($result) > 0) {
                $errors[] = "Username or email already exists!";
            }

            // If no duplicates found
            if (empty($errors)) {
                // Hash the password
                $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

                // Prepare the data for insertion
                $username = mysqli_real_escape_string($conn, $username);
                $email = mysqli_real_escape_string($conn, $email);

                // Insert into database
                $insertQuery = "INSERT INTO users (username, email, password)
                               VALUES ('$username', '$email', '$hashedPassword')";

                if (!mysqli_query($conn, $insertQuery)) {
                    die("Error registering user: " . mysqli_error($conn));
                }

                // Close the connection
                mysqli_close($conn);

                // Set session and redirect
                $_SESSION['registered'] = true;
                header("Location: welcome.php");
                exit();
            }
        } else {
            foreach ($errors as $error) {
                echo "<p class='error'>$error</p>";
            }
        }

    } elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Handle other POST requests
        return;
    } else {
        // Not a valid request method
        header("HTTP/1.0 403 Forbidden");
        die("Access denied");
    }
}

// Example usage:
if (isset($_POST['register'])) {
    registerUser();
}
?>


<?php
// Database connection settings
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if all fields are filled out
    if (!isset($_POST['username'], $_POST['email'], $_POST['password'], $_POST['confirm_password'])) {
        die("Please fill in all required fields.");
    }

    // Sanitize inputs
    $username = htmlspecialchars(mysqli_real_escape_string($conn, trim($_POST['username'])));
    $email = htmlspecialchars(mysqli_real_escape_string($conn, trim($_POST['email'])));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate password match
    if ($password !== $confirm_password) {
        die("Passwords do not match.");
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Check if username or email already exists
    $check_user_query = "SELECT id FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $check_user_query);

    if (mysqli_num_rows($result) > 0) {
        die("Username or email already exists.");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insert_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";

    if (mysqli_query($conn, $insert_query)) {
        echo "Registration successful! You can now login.";
        session_start();
        $_SESSION['message'] = "Registration successful!";
        header("Location: login.php");
        exit();
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        /* Add some basic styling */
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            cursor: pointer;
            width: 100%;
        }
    </style>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo "<p style='color:green;'>" . $_SESSION['message'] . "</p>";
        unset($_SESSION['message']);
    }
    ?>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .registration-container {
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 400px;
        }

        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error-message {
            color: red;
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="registration-container">
        <?php
        // Database connection parameters
        $host = 'localhost';
        $username_db = 'root';
        $password_db = '';
        $database = 'test';

        // Create database connection
        $conn = new mysqli($host, $username_db, $password_db, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Register user function
        function registerUser() {
            global $conn;

            // Get form data
            $username = isset($_POST['username']) ? $_POST['username'] : '';
            $email = isset($_POST['email']) ? $_POST['email'] : '';
            $password = isset($_POST['password']) ? $_POST['password'] : '';
            $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';

            // Initialize error array
            $errors = [];

            // Check if all fields are filled
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
                $errors[] = "All fields must be filled out.";
            }

            // Validate username
            if (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
                $errors[] = "Username can only contain letters, numbers, and underscores.";
            }
            if (strlen($username) < 3 || strlen($username) > 20) {
                $errors[] = "Username must be between 3 and 20 characters long.";
            }

            // Validate email
            if (!preg_match('/^[^@]+@[^@]+\.[a-zA-Z]+$/', $email)) {
                $errors[] = "Please enter a valid email address.";
            }

            // Validate password
            if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/[0-9]/', $password)) {
                $errors[] = "Password must be at least 8 characters long and contain both letters and numbers.";
            }

            // Check if passwords match
            if ($password !== $confirm_password) {
                $errors[] = "Passwords do not match.";
            }

            // If there are no errors
            if (empty($errors)) {
                // Check if username or email already exists
                $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
                $stmt = $conn->prepare($check_query);
                $stmt->bind_param("ss", $username, $email);
                $stmt->execute();
                $result = $stmt->get_result();

                if ($result->num_rows > 0) {
                    $errors[] = "Username or email already exists.";
                } else {
                    // Hash the password
                    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                    // Insert user into database
                    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                    $stmt = $conn->prepare($insert_query);
                    $stmt->bind_param("sss", $username, $email, $hashed_password);

                    if ($stmt->execute()) {
                        // Registration successful
                        echo "<p style='color: green; text-align: center;'>Registration successful! You can now <a href='login.php'>log in</a>.</p>";
                        exit();
                    } else {
                        $errors[] = "Error registering user. Please try again.";
                    }
                }
            }

            // Display errors
            if (!empty($errors)) {
                foreach ($errors as $error) {
                    echo "<div class='error-message'>$error</div>";
                }
            }
        }

        // Call register function when form is submitted
        if (isset($_POST['submit'])) {
            registerUser();
        }
        ?>

        <h2>Register Account</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username...">
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email...">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password...">
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm your password...">
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
function registerUser($username, $email, $password) {
    // Sanitize inputs
    $username = sanitizeInput($username);
    $email = sanitizeInput($email);
    $password = sanitizeInput($password);

    // Database connection
    try {
        $conn = new PDO("mysql:host=localhost;dbname=your_database", "username", "password");
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }

    // Check if username already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            return "Username already exists!";
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }

    // Check if email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            return "Email already exists!";
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Password requirements (minimum 8 characters, at least one letter and one number)
    if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
        return "Password must be at least 8 characters long and contain at least one letter and one number!";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);
        return "Registration successful!";
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Function to sanitize inputs
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

function registerUser($username, $email, $password, $conn) {
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    if ($stmt->rowCount() > 0) {
        return "Username already exists.";
    }
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }
    
    // Check password length (minimum 8 characters)
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long.";
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);
    
    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    try {
        $stmt->execute([$username, $email, $hashed_password]);
    } catch (PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
    
    // Optionally send confirmation email here
    
    return "Registration successful!";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    $result = registerUser($username, $email, $password, $conn);
    echo $result;
}

$conn = null; // Close database connection
?>


<?php
session_start();
include_once 'config.php';

// Function to handle user registration
function registerUser() {
    try {
        // Database connection using PDO
        $conn = new PDO("mysql:host=$dbHost;dbname=$dbName", $dbUsername, $dbPassword);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Validate and sanitize inputs
            $username = htmlspecialchars(trim($_POST['username']));
            $email = htmlspecialchars(trim($_POST['email']));
            $password = $_POST['password'];
            
            // Check for empty fields
            if (empty($username) || empty($email) || empty($password)) {
                throw new Exception("All fields are required.");
            }
            
            // Check username exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                throw new Exception("Username already exists.");
            }
            
            // Check email exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                throw new Exception("Email already exists.");
            }
            
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashedPassword]);
            
            // Registration successful
            $_SESSION['success'] = "Registration successful!";
            header("Location: login.php");
            exit();
        }
    } catch(PDOException $e) {
        // Handle database errors
        die("ERROR: Could not connect. " . $e->getMessage());
    } catch(Exception $e) {
        // Handle other exceptions
        $_SESSION['error'] = $e->getMessage();
    } finally {
        // Close the connection if it exists
        if (isset($conn)) $conn = null;
    }
}

// Call the function
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

function registerUser() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $username = $_POST['username'];
        $password = $_POST['password'];
        $email = $_POST['email'];
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];

        // Validate input
        if (empty($username) || empty($password) || empty($email) || empty($firstName) || empty($lastName)) {
            die('All fields are required!');
        }

        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));
        $firstName = htmlspecialchars(trim($firstName));
        $lastName = htmlspecialchars(trim($lastName));

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die('Please enter a valid email address!');
        }

        // Check username length
        if (strlen($username) < 3 || strlen($username) > 50) {
            die('Username must be between 3 and 50 characters!');
        }

        // Check password strength
        if (strlen($password) < 6) {
            die('Password must be at least 6 characters long!');
        }

        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        
        if (!$conn) {
            die('Connection failed: ' . mysqli_connect_error());
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            die('Email already exists!');
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name) 
                VALUES (?, ?, ?, ?, ?)";

        $stmt = mysqli_prepare($conn, $sql);
        
        if (!$stmt) {
            die('Error preparing statement: ' . mysqli_error($conn));
        }

        mysqli_stmt_bind_param($stmt, "sssss", $username, $email, $hashedPassword, $firstName, $lastName);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            $_SESSION['username'] = $username;
            header('Location: welcome.php');
            exit();
        } else {
            die('Error registering user: ' . mysqli_error($conn));
        }

        mysqli_close($conn);
    }
}

// Call the function if needed
registerUser();
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$database = "user_registration";
?>


<?php
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate inputs
    if (empty($first_name) || empty($last_name) || empty($email) || empty($username) || empty($password)) {
        die("All fields must be filled out");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check username and email uniqueness
    $conn = new mysqli($host, $username, $password, $database);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email=? OR username=?");
        $stmt->bind_param("ss", $email, $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Email or username already exists");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("sssss", $first_name, $last_name, $email, $username, $hashed_password);
        $stmt->execute();

        // Registration successful
        session_start();
        $_SESSION['user_id'] = $conn->insert_id;
        header("Location: dashboard.php");
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }

    $conn->close();
}
?>


<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}
echo "Welcome to your dashboard!";
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function register_user() {
    global $conn;

    // Sanitize input data
    $username = sanitize_string($_POST['username']);
    $email = sanitize_string($_POST['email']);
    $password = $_POST['password'];

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $check_query);

    if (mysqli_num_rows($result) > 0) {
        die("Username or email already exists");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into the database
    $insert_query = "INSERT INTO users (username, email, password)
                    VALUES ('$username', '$email', '$hashed_password')";

    if (!mysqli_query($conn, $insert_query)) {
        die("Registration failed: " . mysqli_error($conn));
    }

    echo "Registration successful! You can now log in.";
}

// Function to sanitize input strings
function sanitize_string($string) {
    global $conn;
    return mysqli_real_escape_string($conn, trim(strip_tags($string)));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    register_user();
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register user function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form values
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Form validation
        $errors = array();

        if (empty($firstName)) {
            $errors[] = "First name is required";
        }

        if (empty($lastName)) {
            $errors[] = "Last name is required";
        }

        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!preg_match("/^[^\s@]+@[^\s@]+\.[^\s@]+$/", $email)) {
            $errors[] = "Invalid email format";
        }

        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }

        // Check for password strength
        if (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]+$/', $password)) {
            $errors[] = "Password must contain both letters and numbers";
        }

        // If no errors, proceed to registration
        if (empty($errors)) {
            // Sanitize input data
            $firstName = mysqli_real_escape_string($conn, $firstName);
            $lastName = mysqli_real_escape_string($conn, $lastName);
            $email = mysqli_real_escape_string($conn, $email);

            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Check if email already exists
            $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
            $result = mysqli_query($conn, $checkEmailQuery);

            if (mysqli_num_rows($result) > 0) {
                echo "Email already exists. Please use a different email address.";
            } else {
                // Insert user into database
                $registerQuery = "INSERT INTO users (first_name, last_name, email, password)
                                 VALUES ('$firstName', '$lastName', '$email', '$hashedPassword')";

                if (mysqli_query($conn, $registerQuery)) {
                    echo "Registration successful! You can now <a href='login.php'>log in</a>";
                } else {
                    echo "Error registering user: " . mysqli_error($conn);
                }
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}

// Call the registration function
registerUser();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" required>
            </div>

            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" required>
            </div>

            <div class="form-group">
                <label for="email">Email Address:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Include database connection file
include_once("db_connection.php");

function registerUser($username, $email, $password, $confirm_password) {
    // Check if all required fields are filled out
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "All fields must be filled out";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Check if passwords match
    if ($password !== $confirm_password) {
        return "Passwords do not match";
    }

    // Sanitize the inputs to prevent SQL injection and XSS attacks
    $username = mysqli_real_escape_string($db, htmlspecialchars($username));
    $email = mysqli_real_escape_string($db, htmlspecialchars($email));

    // Hash the password using bcrypt
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Check if username already exists in database
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($db, $check_username_query);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username already taken";
    }

    // Check if email already exists in database
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($db, $check_email_query);

    if (mysqli_num_rows($result) > 0) {
        return "Email already registered";
    }

    // Insert the new user into the database
    $insert_user_query = "INSERT INTO users (username, email, password)
                         VALUES ('$username', '$email', '$hashed_password')";

    if (!mysqli_query($db, $insert_user_query)) {
        return "Error registering user: " . mysqli_error($db);
    }

    // Optionally send a confirmation email
    sendConfirmationEmail($email, $username);

    return "Registration successful! Please check your email for confirmation.";
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $result = registerUser($username, $email, $password, $confirm_password);

    if ($result === "Registration successful! Please check your email for confirmation.") {
        // Redirect to login page or show success message
        echo $result;
    } else {
        // Display error message
        echo $result;
    }
}

// Function to send confirmation email (you'll need to implement this)
function sendConfirmationEmail($email, $username) {
    // Implement your email sending logic here
    // This could involve using PHP's mail() function or a third-party library like PHPMailer
}
?>


<?php
$servername = "localhost";
$username_db = "your_database_name";
$password_db = "your_database_password";

// Create connection
$db = mysqli_connect($servername, $username_db, $password_db);

// Check connection
if (!$db) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($conn, $data) {
    // Sanitize input
    $name = htmlspecialchars(trim($data['name']));
    $email = htmlspecialchars(trim(strtolower($data['email'])));
    $password = $data['password'];
    $confirm_password = $data['confirm_password'];

    // Validate required fields
    if (empty($name) || empty($email) || empty($password)) {
        return ['status' => 'error', 'message' => 'All fields are required'];
    }

    // Validate password length
    if (strlen($password) < 6) {
        return ['status' => 'error', 'message' => 'Password must be at least 6 characters long'];
    }

    // Check if passwords match
    if ($password !== $confirm_password) {
        return ['status' => 'error', 'message' => 'Passwords do not match'];
    }

    // Check if email already exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        return ['status' => 'error', 'message' => 'Email already registered'];
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    try {
        $conn->beginTransaction();
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$name, $email, $hashed_password]);
        
        $user_id = $conn->lastInsertId();

        // Optional: Send confirmation email
        if (!sendConfirmationEmail($email)) {
            throw new Exception('Failed to send confirmation email');
        }

        $conn->commit();
        return ['status' => 'success', 'message' => 'Registration successful! Please check your email for confirmation.'];
    } catch(PDOException $e) {
        $conn->rollback();
        return ['status' => 'error', 'message' => 'Database error: ' . $e->getMessage()];
    }
}

function sendConfirmationEmail($email) {
    $to = $email;
    $subject = "Confirm Your Registration";
    $body = "Thank you for registering! Please click the following link to confirm your account: http://example.com/confirm.php?email=" . urlencode($email);
    
    $headers = "From: noreply@example.com\r
";
    $headers .= "Content-Type: text/plain; charset=UTF-8\r
";
    
    return mail($to, $subject, $body, $headers);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $data = [
        'name' => $_POST['name'],
        'email' => $_POST['email'],
        'password' => $_POST['password'],
        'confirm_password' => $_POST['confirm_password']
    ];

    $result = registerUser($conn, $data);
    
    if ($result['status'] == 'success') {
        // Redirect to login page or display success message
        header('Location: login.php?message=' . urlencode($result['message']));
    } else {
        // Display error message
        echo '<div class="error-message">' . $result['message'] . '</div>';
    }
}

// Close database connection
$conn = null;
?>


<?php
function registerUser() {
    // Check if the form has been submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
        $errors = array();
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address";
        }
        
        // Check if email already exists in the database
        // You should add your database connection and query here
        
        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\$%\^&\*])[\w!@#\$%\^&\*]{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, one number, and one special character";
        }
        
        // Validate confirm password
        if (empty($confirm_password)) {
            $errors[] = "Confirm Password is required";
        } elseif ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }
        
        // If there are errors, display them
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>$error</div>";
            }
        } else {
            // No errors; proceed to register the user
            
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert into database
            // Here you would typically connect to your database and execute an INSERT query
            
            // For this example, we'll just simulate a successful registration
            if (true) {  // Replace with actual database insertion logic
                // Set success message
                $_SESSION['success_message'] = "Registration successful! Please login.";
                header('Location: login.php');
                exit();
            } else {
                // Handle database error
                echo "<div class='alert alert-danger'>An error occurred while registering. Please try again later.</div>";
            }
        }
    }
}
?>


<?php
// Database connection parameters
$host = "localhost";
$db_user = "root";
$db_password = "";
$db_name = "user_registration";

// Connect to the database
$conn = new mysqli($host, $db_user, $db_password, $db_name);

// Check for database connection errors
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user registration
function registerUser() {
    global $conn;
    
    // Initialize variables
    $username = $email = $password = "";
    $errors = array();

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize inputs
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm_password']);

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]{3,15}$/", $username)) {
            $errors[] = "Username must be 3 to 15 characters long and can only contain letters, numbers, and underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long";
        }

        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Check database for existing username or email
        if (empty($errors)) {
            $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
            $stmt = $conn->prepare($check_query);
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                while ($row = $result->fetch_assoc()) {
                    if ($row['username'] == $username) {
                        $errors[] = "Username already exists";
                    }
                    if ($row['email'] == $email) {
                        $errors[] = "Email already exists";
                    }
                }
            }
        }

        // If no errors, register the user
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($insert_query);
            $stmt->bind_param("sss", $username, $email, $hashed_password);

            if ($stmt->execute()) {
                echo "Registration successful!";
            } else {
                echo "Error registering user: " . $stmt->error;
            }
        }

        // Close statement
        $stmt->close();
    }

    return $errors;
}

// Call the function
$errors = registerUser();

// Close database connection
$conn->close();
?>


<?php
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'testdb';

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include('config.php');

if (isset($_POST['submit'])) {
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($first_name) || empty($last_name) || empty($username) || empty($email) || empty($password)) {
        die("All fields are required.");
    }

    if ($password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Sanitize inputs
    $first_name = mysqli_real_escape_string($conn, $first_name);
    $last_name = mysqli_real_escape_string($conn, $last_name);
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Check for existing username and email
    try {
        $sql_check_username = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($sql_check_username);
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Username already exists.");
        }

        $sql_check_email = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql_check_email);
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Email already exists.");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user
        $sql_insert = "INSERT INTO users (first_name, last_name, username, email, password) VALUES (?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql_insert);
        $stmt->bind_param('sssss', $first_name, $last_name, $username, $email, $hashed_password);

        if ($stmt->execute()) {
            header("Location: login.php");
            exit();
        } else {
            die("Error registering user.");
        }

    } catch (mysqli_sql_exception $e) {
        die("Database error occurred: " . $e->getMessage());
    }
}

$conn->close();
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "test";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include('db_connection.php');

function registerUser($username, $email, $password, $cpassword) {
    // Check if passwords match
    if ($password !== $cpassword) {
        return false;
    }

    global $conn;

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Check for existing username or email
    $stmt = $conn->prepare("SELECT * FROM users WHERE username=? OR email=?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Close statement and connection
        $stmt->close();
        return false;
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $stmt_insert = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt_insert->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt_insert->execute()) {
        $stmt_insert->close();
        return true;
    } else {
        $stmt_insert->close();
        return false;
    }
}

if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $cpassword = $_POST['cpassword'];

    if (registerUser($username, $email, $password, $cpassword)) {
        header("Location: login.php");
    } else {
        header("Location: register.php?error=Registration failed. Username or email already exists.");
    }
}
?>


<?php

function registerUser($username, $email, $password) {
    // Sanitize input data
    $username = htmlspecialchars($username);
    $email = htmlspecialchars($email);
    $password = htmlspecialchars($password);

    // Database connection parameters
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "user-registration";

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return "Error connecting to the database";
    }

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            if ($row['username'] == $username) {
                return "Username already exists";
            } elseif ($row['email'] == $email) {
                return "Email already exists";
            }
        }
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Prepare the insert statement
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (mysqli_stmt_execute($stmt)) {
        // Registration successful
        return "Registration successful!";
    } else {
        // Error occurred during registration
        return "Error: Could not register. Please try again later.";
    }

    // Close the database connection
    mysqli_close($conn);
}

// Example usage:
// $username = $_POST['username'];
// $email = $_POST['email'];
// $password = $_POST['password'];
// 
// $result = registerUser($username, $email, $password);
// echo $result;

?>


<?php
function registerUser($username, $email, $password, $firstName, $lastName, $birthdate) {
    // Database connection details
    $host = 'localhost';
    $db   = 'your_database_name';
    $user = 'your_username';
    $pass = 'your_password';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$db", $user, $pass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            throw new Exception("All fields are required");
        }

        // Check for valid username format
        if (!preg_match('/^[a-zA-Z0-9_\-]+$/', $username)) {
            throw new Exception("Invalid username format");
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check password strength
        if (strlen($password) < 8 || !preg_match('/[A-Z]/', $password) || !preg_match('/[a-z]/', $password) || !preg_match('/[0-9]/', $password)) {
            throw new Exception("Password must be at least 8 characters and contain uppercase, lowercase, and numeric characters");
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            throw new Exception("Username already exists");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            throw new Exception("Email already exists");
        }

        // Prepare birthdate in YYYY-MM-DD format
        $birthdate = date('Y-m-d', strtotime($birthdate));

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, birthdate) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->execute([$username, $email, $hashedPassword, $firstName, $lastName, $birthdate]);

        // Return true if registration is successful
        return true;

    } catch(PDOException $e) {
        // Handle database errors
        throw new Exception("Database error: " . $e->getMessage());
    }
}

// Example usage:
try {
    $username = "john_doe";
    $email = "john@example.com";
    $password = "StrongPassword123!";
    $firstName = "John";
    $lastName = "Doe";
    $birthdate = "05/15/1980"; // Format: MM/DD/YYYY

    if (registerUser($username, $email, $password, $firstName, $lastName, $birthdate)) {
        echo "Registration successful!";
    }
} catch(Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
// Include necessary files or configurations
require_once('config.php');

function registerUser($username, $email, $password) {
    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields.";
    }

    // Sanitize username and email
    $username = htmlspecialchars(trim($username));
    $email = trim($email);
    
    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Connect to database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return "Username already exists.";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return "Email already exists.";
    }

    // Insert user into the database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (mysqli_stmt_execute($stmt)) {
        // Registration successful
        return true;
    } else {
        // Error occurred during registration
        return "Error registering user. Please try again later.";
    }

    // Close database connection
    mysqli_close($conn);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);

    if ($result === true) {
        // Redirect to login page or dashboard
        header("Location: login.php");
        exit();
    } else {
        // Display error message
        echo "<div class='alert alert-danger'>$result</div>";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new mysqli($host, $username, $password, $dbname);
    
    // Check if connection is successful
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Function to sanitize input data
    function sanitizeInput($data) {
        $data = trim($data);
        $data = htmlspecialchars($data);
        $data = stripslashes($data);
        return $data;
    }

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and store form values
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = sanitizeInput($_POST['first_name']);
        $last_name = sanitizeInput($_POST['last_name']);
        $phone_number = sanitizeInput($_POST['phone_number']);

        // Validate inputs
        if (empty($username) || empty($password)) {
            throw new Exception("Username and password are required");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        if ($password !== $confirm_password) {
            throw new Exception("Passwords do not match");
        }

        // Password requirements
        if (strlen($password) < 6) {
            throw new Exception("Password must be at least 6 characters long");
        }

        // Phone number validation
        if (!preg_match('/^\+?[\d\s()-]+$/',$phone_number)) {
            throw new Exception("Invalid phone number format");
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username already exists");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already exists");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, phone_number) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->bind_param("ssssss", $username, $email, $hashed_password, $first_name, $last_name, $phone_number);

        if ($stmt->execute()) {
            // Registration successful
            header("Location: login.php?success=1");
            exit();
        } else {
            throw new Exception("Registration failed. Please try again.");
        }
    }
} catch (Exception $e) {
    // Handle any errors that occurred
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


<?php
/**
 * User registration script with security measures and validation
 */

// Include database connection file
include 'db_connection.php';

function sanitizeInput($data) {
    /**
     * Sanitizes input data to prevent SQL injection and XSS attacks
     */
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

function validateUsername($username) {
    /**
     * Validates the username format (only letters and numbers)
     * @param string $username The username to validate
     * @return bool Returns true if valid, false otherwise
     */
    return preg_match('/^[a-zA-Z0-9]+$/', $username);
}

function validateEmail($email) {
    /**
     * Validates the email format
     * @param string $email The email to validate
     * @return bool Returns true if valid, false otherwise
     */
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

function validatePassword($password) {
    /**
     * Validates password strength (at least 6 characters, letters and numbers)
     * @param string $password The password to validate
     * @return bool Returns true if valid, false otherwise
     */
    return preg_match('/^(?=.*\d)(?=.*[a-zA-Z]).{6,}$/', $password);
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    $errors = [];

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required!";
    } elseif (!validateUsername($username)) {
        $errors[] = "Username can only contain letters and numbers!";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required!";
    } elseif (!validateEmail($email)) {
        $errors[] = "Invalid email format!";
    }

    // Validate password
    if (empty($password) || empty($confirmPassword)) {
        $errors[] = "Password is required!";
    } elseif ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match!";
    } elseif (!validatePassword($password)) {
        $errors[] = "Password must be at least 6 characters and contain letters and numbers!";
    }

    if (empty($errors)) {
        try {
            // Check if username already exists
            $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->bindParam(1, $username);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {
                die("Username already taken!");
            }

            // Check if email already exists
            $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bindParam(1, $email);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {
                die("Email already registered!");
            }

            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bindParam(1, $username);
            $stmt->bindParam(2, $email);
            $stmt->bindParam(3, $hashedPassword);

            if ($stmt->execute()) {
                // Set session variables
                $_SESSION['user_id'] = $pdo->lastInsertId();
                $_SESSION['username'] = $username;

                // Redirect to dashboard or login page
                header("Location: login.php");
                exit();
            } else {
                throw new Exception("Registration failed!");
            }
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    } else {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div><br>";
        }
    }
}
?>


<?php
// Connect to the database
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        
        // Validate input
        $errors = array();
        
        // Validate username
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores.";
        }
        
        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address.";
        }
        
        // Validate password
        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long.";
        }
        if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            $errors[] = "Password can only contain letters and numbers.";
        }
        
        // If no errors
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));
            
            // Check if username already exists
            $check_username_query = "SELECT id FROM users WHERE username = ?";
            $stmt = mysqli_prepare($conn, $check_username_query);
            mysqli_stmt_bind_param($stmt, 's', $username);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);
            
            if (mysqli_stmt_num_rows($stmt) > 0) {
                echo "Username already exists.";
                return;
            }
            
            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $check_email_query);
            mysqli_stmt_bind_param($stmt, 's', $email);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);
            
            if (mysqli_stmt_num_rows($stmt) > 0) {
                echo "Email already exists.";
                return;
            }
            
            // Insert new user into the database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);
            
            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
                header("Location: login.php");
                exit();
            } else {
                echo "Error registering user.";
            }
        } else {
            foreach ($errors as $error) {
                echo $error . "<br>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a new user
function registerUser($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize input values
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password confirmation
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = $conn->query($checkQuery);

        if ($result->num_rows > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Insert new user into the database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";

        if ($conn->query($sql)) {
            echo "Registration successful! You can now login.";
            // Redirect to login page after registration
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }
    }
}

// Close the database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to validate email format
function validateEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

// Function to generate random token for verification
function generateToken() {
    return bin2hex(random_bytes(16));
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Error handling
    $errors = array();

    if (empty($username) || empty($email) || empty($password)) {
        $errors[] = "All fields are required!";
    }

    if (!validateEmail($email)) {
        $errors[] = "Invalid email format!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    if (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters!";
    }

    // Check if username or email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$username, $email]);
        
        if ($stmt->rowCount() > 0) {
            $errors[] = "Username or email already exists!";
        }
    } catch (PDOException $e) {
        die("Error checking user: " . $e->getMessage());
    }

    // If no errors
    if (empty($errors)) {
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Generate verification token
        $token = generateToken();

        try {
            // Insert user data into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password, verification_token) 
                                  VALUES (?, ?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password, $token]);

            $user_id = $conn->lastInsertId();

            // Send verification email
            $verification_url = "http://your-website.com/verify.php?token=$token&user_id=$user_id";
            
            $headers = "From: your-email@example.com\r
";
            $headers .= "Content-Type: text/html; charset=UTF-8\r
";

            $subject = "Verify Your Account";
            $body = "<h1>Verify Your Account</h1>
                    <p>Please click the following link to verify your account:</p>
                    <a href='$verification_url'>$verification_url</a>";

            if (mail($email, $subject, $body, $headers)) {
                echo "Registration successful! Please check your email to verify your account.";
            } else {
                die("Error sending verification email.");
            }

        } catch (PDOException $e) {
            die("Registration error: " . $e->getMessage());
        }
    } else {
        foreach ($errors as $error) {
            echo "<p>$error</p>";
        }
    }
}

// Close database connection
$conn = null;
?>


<?php
session_start();
require_once('config.php'); // Include your database configuration

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        die('All fields are required');
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die('Invalid email format');
    }

    if ($password !== $confirm_password) {
        die('Passwords do not match');
    }

    // Password complexity check (you can modify this as needed)
    if (strlen($password) < 8) {
        die('Password must be at least 8 characters long');
    }

    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die('Username or email already exists');
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert new user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        // Redirect to a welcome page or login page
        header('Location: welcome.php');
        exit();
    } else {
        die('Registration failed. Please try again later.');
    }

    $stmt->close();
    $conn->close();
}
?>


<?php
// Registration.php

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields are required");
    }

    if ($password != $confirm_password) {
        die("Passwords do not match");
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    try {
        // Database connection
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        if ($stmt->rowCount() > 0) {
            die("Username already exists");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);

        // Close connection
        $conn = null;

        // Redirect to login page or dashboard
        header('Location: welcome.php');
        exit();
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// If accessed directly via GET, show the registration form
else {
?>
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input { width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ddd; }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required>
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>

        <button type="submit" style="background-color: #4CAF50; color: white; padding: 10px 20px;">Register</button>
    </form>
</body>
</html>
<?php
}
?>


<?php
// Database connection helper function
function getDBConnection() {
    $host = 'localhost';
    $user = 'root'; // Replace with your database username
    $password = ''; // Replace with your database password
    $database = 'testdb'; // Replace with your database name

    $conn = new mysqli($host, $user, $password, $database);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    return $conn;
}

// Register user function
function registerUser($userData) {
    // Check required fields are not empty
    if (empty($userData['username']) || empty($userData['email']) || empty($userData['password'])) {
        return array('status' => 'error', 'message' => 'All required fields must be filled out.');
    }

    $conn = getDBConnection();

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param('s', $userData['username']);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return array('status' => 'error', 'message' => 'Username already exists.');
    }

    // Check if email is valid and not already registered
    if (!filter_var($userData['email'], FILTER_VALIDATE_EMAIL)) {
        return array('status' => 'error', 'message' => 'Please enter a valid email address.');
    }

    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $userData['email']);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return array('status' => 'error', 'message' => 'Email is already registered.');
    }

    // Validate password length and complexity
    if (strlen($userData['password']) < 8) {
        return array('status' => 'error', 'message' => 'Password must be at least 8 characters long.');
    }

    if ($userData['password'] !== $userData['confirm_password']) {
        return array('status' => 'error', 'message' => 'Passwords do not match.');
    }

    // Hash the password
    $hashedPassword = password_hash($userData['password'], PASSWORD_DEFAULT);

    // Prepare and execute the insert statement
    $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param('sssss', 
        $userData['username'],
        $userData['email'],
        $hashedPassword,
        $userData['first_name'],
        $userData['last_name']
    );

    if ($stmt->execute()) {
        return array('status' => 'success');
    } else {
        return array('status' => 'error', 'message' => 'Registration failed. Please try again.');
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userData = array(
        'username' => $_POST['username'],
        'email' => $_POST['email'],
        'password' => $_POST['password'],
        'confirm_password' => $_POST['confirm_password'],
        'first_name' => $_POST['first_name'],
        'last_name' => $_POST['last_name']
    );

    $result = registerUser($userData);

    if ($result['status'] == 'success') {
        header("Location: login.php");
        exit();
    } else {
        // Display error message
        echo $result['message'];
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$dbname = 'mydb';    // Change to your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate input
    if (!empty($username) && !empty($email) && !empty($password)) {

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Check for existing username or email
        $checkQuery = "SELECT id FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $checkQuery);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return false;
        }

        // Validate username
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            echo "Invalid username. Only letters, numbers, and underscores are allowed!";
            return false;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return false;
        }

        // Password requirements: at least 8 characters
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return false;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";
        
        if (mysqli_query($conn, $insertQuery)) {
            echo "Registration successful!";
            // Optionally, redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
            return false;
        }
    } else {
        echo "All fields must be filled out!";
        return false;
    }
}

// Call the function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
function registerUser($firstName, $lastName, $email, $password) {
    // Validate inputs
    if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
        return "All fields must be filled out";
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Validate password requirements (at least 8 characters including letters and numbers)
    if (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/', $password)) {
        return "Password must be at least 8 characters and contain both letters and numbers";
    }

    // Database connection
    $dbHost = 'localhost';
    $dbUser = 'root';
    $dbPass = '';
    $dbName = 'test';

    $conn = mysqli_connect($dbHost, $dbUser, $dbPass, $dbName);

    if (!$conn) {
        return "Connection failed: " . mysqli_connect_error();
    }

    // Sanitize inputs
    $firstName = mysqli_real_escape_string($conn, $firstName);
    $lastName = mysqli_real_escape_string($conn, $lastName);
    $email = mysqli_real_escape_string($conn, $email);

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);

    if (mysqli_num_rows($result) > 0) {
        return "Email already registered";
    }

    // Insert new user into database
    $insertQuery = "INSERT INTO users (first_name, last_name, email, password)
                    VALUES ('$firstName', '$lastName', '$email', '$hashedPassword')";

    if (!mysqli_query($conn, $insertQuery)) {
        return "Error: " . mysqli_error($conn);
    }

    // Close connection
    mysqli_close($conn);

    return "Registration successful!";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($firstName, $lastName, $email, $password);
    echo $result;
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input data
    if ($username == '' || $email == '' || $password == '') {
        echo "Please fill in all required fields.";
        exit();
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address.";
        exit();
    }

    // Check password requirements (minimum length of 8 characters)
    if (strlen($password) < 8) {
        echo "Password must be at least 8 characters long.";
        exit();
    }

    // Check if passwords match
    if ($password != $confirm_password) {
        echo "Passwords do not match.";
        exit();
    }

    // Sanitize the input data to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Encrypt the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);
    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists. Please choose a different username.";
        exit();
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);
    if (mysqli_num_rows($result) > 0) {
        echo "Email address already exists. Please use a different email.";
        exit();
    }

    // Insert the new user into the database
    $insertUserQuery = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
    
    if (mysqli_query($conn, $insertUserQuery)) {
        echo "Registration successful! You can now log in.";
    } else {
        echo "Error registering the user: " . mysqli_error($conn);
    }

    // Close the database connection
    mysqli_close($conn);
}

// Display the registration form if not submitted yet
else {
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username"><br><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password"><br><br>

        <label for="confirm_password">Confirm Password:</label>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>

        <input type="submit" name="submit" value="Register">
    </form>
    <?php
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function register_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if ($username == "" || $email == "" || $password == "") {
            die("Please fill in all required fields");
        }

        if (strlen($username) < 3) {
            die("Username must be at least 3 characters long");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address");
        }

        if ($password != $confirm_password) {
            die("Passwords do not match");
        }

        // Check if email already exists
        $check_email_query = "SELECT COUNT(*) as count FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);
        mysqli_stmt_bind_result($stmt, $count);

        if ($count > 0) {
            die("Email already exists");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            header("Location: login.php");
            exit();
        } else {
            die("Registration failed. Please try again.");
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the register function
register_user();
?>


<?php
// Database connection configuration
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

// Create database connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Initialize variables to store input data and error messages
    $errors = array();
    $username = "";
    $email = "";
    $password = "";
    $confirm_password = "";
    $first_name = "";
    $last_name = "";

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate inputs
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm_password']);
        $first_name = htmlspecialchars(trim($_POST['first_name']));
        $last_name = htmlspecialchars(trim($_POST['last_name']));

        // Validate username
        if (strlen($username) < 3 || strlen($username) > 20) {
            array_push($errors, "Username must be between 3 and 20 characters");
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Please enter a valid email address");
        }

        // Validate password
        if (strlen($password) < 8) {
            array_push($errors, "Password must be at least 8 characters long");
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            array_push($errors, "Passwords do not match");
        }

        // Validate name fields
        if (strlen($first_name) < 2 || strlen($last_name) < 2) {
            array_push($errors, "First and last name must be at least 2 characters long");
        }

        // If no errors in validation
        if (count($errors) == 0) {
            try {
                // Check if username or email already exists
                $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
                $stmt->bind_param("ss", $username, $email);
                $stmt->execute();
                $result = $stmt->get_result();

                if ($result->num_rows > 0) {
                    // Check which field already exists
                    $existingUser = $result->fetch_assoc();
                    if ($existingUser['username'] == $username) {
                        array_push($errors, "Username already exists");
                    } else {
                        array_push($errors, "Email already exists");
                    }
                }

                // If no duplicates found
                if (count($errors) == 0) {
                    // Hash password
                    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                    // Prepare the insert statement
                    $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) 
                                          VALUES (?, ?, ?, ?, ?)");
                    
                    // Bind parameters and execute
                    $stmt->bind_param("sssss", $username, $email, $hashed_password, $first_name, $last_name);
                    $stmt->execute();

                    // Check if the registration was successful
                    if ($stmt->affected_rows > 0) {
                        return "Registration successful! Welcome, $first_name!";
                    } else {
                        array_push($errors, "Error registering user");
                    }
                }

            } catch (Exception $e) {
                array_push($errors, "An error occurred: " . $e->getMessage());
            }
        }
    }

    // If there are errors, return them
    if (!empty($errors)) {
        return implode("<br>", $errors);
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include database connection file
include('db_connection.php');

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['register'])) {
        // Sanitize and validate input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        
        // Validate username
        if (empty($username)) {
            echo "Username is required!";
            return;
        }
        if (strlen($username) > 50) {
            echo "Username cannot exceed 50 characters!";
            return;
        }
        
        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Validate password
        if (empty($password)) {
            echo "Password is required!";
            return;
        }
        if (strlen($password) < 6) {
            echo "Password must be at least 6 characters!";
            return;
        }
        
        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, "ss", $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }
        
        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the function
if (isset($_POST['register'])) {
    registerUser();
}
?>


<?php
session_start();

// Database connection
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a user
function register_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {

        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            echo "Username must be between 3 and 20 characters!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check if password matches confirm password
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Check if username already exists
        $check_username = "SELECT username FROM users WHERE username = ?";
        $stmt = $conn->prepare($check_username);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email = "SELECT email FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $insert_user = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insert_user);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            // Generate activation token
            $token = bin2hex(random_bytes(32));
            
            // Insert activation token into database
            $insert_token = "INSERT INTO activation_tokens (user_id, token) VALUES (?, ?)";
            $stmt_token = $conn->prepare($insert_token);
            $stmt_token->bind_param("is", $conn->insert_id, $token);
            $stmt_token->execute();

            // Send confirmation email
            $to = $email;
            $subject = "Confirm your registration";
            $message = "Please click the following link to confirm your registration: http://example.com/activate.php?token=$token";
            $headers = "From: webmaster@example.com";

            if (mail($to, $subject, $message, $headers)) {
                echo "Registration successful! Please check your email to confirm your account.";
            } else {
                echo "Error sending confirmation email!";
            }
        } else {
            echo "Registration failed: " . $conn->error;
        }

        $stmt->close();
    }
}

// Call the register function
if (isset($_POST['submit'])) {
    register_user();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h1>Register</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// Include database connection file
include('db_connection.php');

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $full_name = $_POST['full_name'];

        // Initialize error array
        $errors = array();

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($full_name)) {
            $errors[] = "All fields are required!";
        }

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $check_query);
        
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username or Email already exists!";
        }

        // Validate password
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match!";
        }

        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long!";
        }

        // Check for valid email format
        if (!preg_match("/^[^\s@]+@[^\s@]+\.[^\s@]+$/", $email)) {
            $errors[] = "Invalid email format!";
        }

        // If no errors, proceed to register user
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Prepare the query statement
            $stmt = mysqli_prepare($conn, "INSERT INTO users (username, email, password, full_name) VALUES (?, ?, ?, ?)");
            
            // Bind parameters
            mysqli_stmt_bind_param($stmt, "ssss", $username, $email, $hashed_password, $full_name);
            
            // Execute the statement
            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
                // Redirect to login page after 2 seconds
                header("Refresh: 2; url=login.php");
            } else {
                $errors[] = "Error registering user. Please try again.";
            }

            // Close the statement
            mysqli_stmt_close($stmt);
        }

        // Display errors if any
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<p class='error'>" . htmlspecialchars($error) . "</p>";
            }
        }
    }
}

// Call the function
registerUser();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        // Get user inputs
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all fields";
            return;
        }

        // Check for valid email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format";
            return;
        }

        // Check password strength (at least 8 characters)
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long";
            return;
        }

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username=? OR email=?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username or email already exists";
            return;
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $registerQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($registerQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        
        if ($stmt->execute()) {
            // Registration successful
            echo "Registration successful! You can now login.";
            
            // Start session and store user data
            $_SESSION['id'] = $conn->insert_id;
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or login page
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . $stmt->error;
        }

        // Close statement
        $stmt->close();
    }
}

// CSRF protection token
function generateToken() {
    $_SESSION['token'] = bin2hex(random_bytes(32));
    return $_SESSION['token'];
}
?>


<?php
// Connect to database
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $dbusername, $dbpassword, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm_password']);
        $full_name = trim($_POST['full_name']);
        $date_of_birth = trim($_POST['date_of_birth']);
        $phone_number = trim($_POST['phone_number']);

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Validate username
        if (strlen($username) < 3 || strlen($username) > 20) {
            echo "Username must be between 3 and 20 characters!";
            return;
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Validate password length
        if (strlen($password) < 6) {
            echo "Password must be at least 6 characters long!";
            return;
        }

        // Validate full name
        if (!ctype_alpha(str_replace(' ', $full_name, ''))) {
            echo "Full name can only contain letters and spaces!";
            return;
        }

        // Validate date of birth
        if (strtotime($date_of_birth) === false || strtotime($date_of_birth) >= time()) {
            echo "Invalid date of birth!";
            return;
        }

        // Validate phone number
        $phone_regex = '/^[0-9]{10,12}$/';
        if (!preg_match($phone_regex, $phone_number)) {
            echo "Invalid phone number format!";
            return;
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
        $result = mysqli_query($conn, $checkUsernameQuery);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
        $result = mysqli_query($conn, $checkEmailQuery);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user into database
        $password_hash = password_hash($password, PASSWORD_DEFAULT);
        
        $query = "INSERT INTO users 
                  SET username = '" . mysqli_real_escape_string($conn, $username) . "',
                      email = '" . mysqli_real_escape_string($conn, $email) . "',
                      password = '$password_hash',
                      full_name = '" . mysqli_real_escape_string($conn, $full_name) . "',
                      date_of_birth = '" . mysqli_real_escape_string($conn, $date_of_birth) . "',
                      phone_number = '" . mysqli_real_escape_string($conn, $phone_number) . "'";
        
        if (mysqli_query($conn, $query)) {
            echo "Registration successful!";
            // Redirect to login page after registration
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the register function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to validate user input
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to check if username or email already exists
function isExistingUser($conn, $username, $email) {
    $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE username = ? OR email = ?");
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        return true;
    }
    return false;
}

// Function to register user
function registerUser($conn, $username, $email, $password) {
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Prepare and execute the SQL statement
    try {
        $stmt = mysqli_prepare($conn, "INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
        
        if (mysqli_stmt_execute($stmt)) {
            return true;
        } else {
            throw new Exception("Registration failed. Please try again.");
        }
    } catch (Exception $e) {
        echo $e->getMessage();
        return false;
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input data
    $username = validateInput($_POST['username']);
    $email = validateInput($_POST['email']);
    $password = $_POST['password'];
    
    $errors = array();
    
    // Check if username is empty
    if (empty($username)) {
        $errors[] = "Username is required";
    }
    
    // Check if email is empty or invalid
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }
    
    // Check if password meets requirements
    if (empty($password)) {
        $errors[] = "Password is required";
    } else {
        // Password must be at least 8 characters long and contain letters and numbers
        if (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/', $password)) {
            $errors[] = "Password must be at least 8 characters long and contain both letters and numbers";
        }
    }
    
    // Check if username or email already exists
    if (isExistingUser($conn, $username, $email)) {
        $errors[] = "Username or email already exists";
    }
    
    // If there are errors, display them
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<p style='color: red;'>$error</p>";
        }
    } else {
        // Register the user
        if (registerUser($conn, $username, $email, $password)) {
            // Registration successful
            session_start();
            $_SESSION['username'] = $username;
            header("Location: welcome.php");
            exit();
        } else {
            echo "Registration failed. Please try again.";
        }
    }
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username">
        <br><br>
        Email: <input type="email" name="email">
        <br><br>
        Password: <input type="password" name="password">
        <br><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Include configuration file
include('config.php');

if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all required fields");
    }

    // Check if username already exists
    $check_username_query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $check_username_query);
    if (mysqli_num_rows($result) > 0) {
        die("Username already exists");
    }

    // Check if email already exists
    $check_email_query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $check_email_query);
    if (mysqli_num_rows($result) > 0) {
        die("Email already exists");
    }

    // Hash the password before storing it
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$hashed_password')";

    if (mysqli_query($conn, $sql)) {
        echo "Registration successful! You can now log in.";
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
function register_user($username, $email, $password, $first_name, $last_name, $phone_number) {
    // Database connection parameters
    $db_host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $db_name = 'your_database';

    // Create database connection
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate and sanitize input
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));
    $first_name = mysqli_real_escape_string($conn, trim($first_name));
    $last_name = mysqli_real_escape_string($conn, trim($last_name));
    $phone_number = mysqli_real_escape_string($conn, trim($phone_number));

    // Check if username is already taken
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = $conn->query($check_username_query);

    if ($result->num_rows > 0) {
        return "Username already exists.";
    }

    // Check if email is valid and not already registered
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($check_email_query);

    if ($result->num_rows > 0) {
        return "Email already registered.";
    }

    // Validate password strength
    if (strlen($password) < 6 || !preg_match("/[A-Za-z]/", $password) || !preg_match("/\d/", $password)) {
        return "Password must be at least 6 characters long and contain both letters and numbers.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Check if name fields are valid (only letters)
    if (!preg_match("/^[a-zA-Z]*$/", $first_name) || !preg_match("/^[a-zA-Z]*$/", $last_name)) {
        return "Names must contain only letters.";
    }

    // Validate phone number format
    if (!preg_match("/^\+?\d{8,15}$/", $phone_number)) {
        return "Invalid phone number format.";
    }

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password, first_name, last_name, phone_number) 
            VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$phone_number')";

    if ($conn->query($sql)) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . $conn->error;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
$username = "john_doe";
$email = "john@example.com";
$password = "password123";
$first_name = "John";
$last_name = "Doe";
$phone_number = "+1234567890";

$result = register_user($username, $email, $password, $first_name, $last_name, $phone_number);
echo $result;
?>


<?php
// Database connection settings
$host = "localhost";
$username_db = "root"; // Change this to your database username
$password_db = "";     // Change this to your database password
$dbname = "test";      // Change this to your database name

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitize_input($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Register user function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get form data
        $username = sanitize_input($_POST['username']);
        $email = sanitize_input($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields must be filled out!";
            return;
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check if password matches confirm password
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Check if username or email already exists in the database
        $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Password hashing
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            // Redirect to login page after 3 seconds
            header("Refresh: 3; url=login.php");
        } else {
            echo "Error registering user: " . $conn->error;
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit">Register</button>
        </form>
    </div>

    <?php
    // Call the registration function
    registerUser();
    ?>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Initialize variables and error array
    $errors = [];
    $username = isset($_POST['username']) ? $_POST['username'] : '';
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';
    $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match('/^[a-zA-Z0-9_]*$/', $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Check if username already exists
    $check_username_query = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
    $result_username = mysqli_query($conn, $check_username_query);
    if (mysqli_num_rows($result_username) > 0) {
        $errors[] = "Username already exists";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Check if email already exists
    $check_email_query = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    $result_email = mysqli_query($conn, $check_email_query);
    if (mysqli_num_rows($result_email) > 0) {
        $errors[] = "Email already exists";
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[^]{8,}$/', $password)) {
        $errors[] = "Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number";
    }

    // Confirm password matches
    if ($password != $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password) VALUES ('" . mysqli_real_escape_string($conn, $username) . "', '" . mysqli_real_escape_string($conn, $email) . "', '" . $hashed_password . "')";

        if (mysqli_query($conn, $sql)) {
            echo "<h2>Registration successful!</h2>";
        } else {
            $errors[] = "Error registering user: " . mysqli_error($conn);
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
        .success {
            color: green;
            margin-bottom: 10px;
        }
        .form-group {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <?php
    // Display errors or success message
    if (isset($_POST['submit'])) {
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        } else {
            echo "<div class='success'>Registration successful! You can now <a href='login.php'>log in</a>.</div>";
        }
    }
    ?>

    <!-- Registration form -->
    <h2>Register New Account</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" value="<?php echo isset($_POST['username']) ? $_POST['username'] : ''; ?>">
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" value="<?php echo isset($_POST['email']) ? $_POST['email'] : ''; ?>">
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password">
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password">
        </div>

        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'registration_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration</title>
    <style>
        .container {
            width: 400px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Show error messages if any
        if (isset($_GET['error'])) {
            $error = $_GET['error'];
            echo "<div class='error'>$error</div>";
        }
        ?>

        <h2>Registration Form</h2>
        <form action="register.php" method="POST">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required><br>

            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required><br>

            <label for="first_name">First Name:</label><br>
            <input type="text" id="first_name" name="first_name"><br>

            <label for="last_name">Last Name:</label><br>
            <input type="text" id="last_name" name="last_name"><br>

            <input type="submit" value="Register">
        </form>
    </div>

    <script>
        // Basic client-side validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const password = document.querySelector('#password').value;
            const confirm_password = document.querySelector('#confirm_password').value;

            if (password !== confirm_password) {
                e.preventDefault();
                alert('Passwords do not match!');
            }
        });
    </script>
</body>
</html>

<?php
// register.php - Registration logic

// Include database configuration
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
    $last_name = mysqli_real_escape_string($conn, $_POST['last_name']);

    // Validate input data
    $errors = [];

    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format!";
    }

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = $conn->query($check_username_query);

    if ($result->num_rows > 0) {
        $errors[] = "Username already exists!";
    }

    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name)
                VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name')";

        if ($conn->query($sql) === TRUE) {
            // Registration successful
            header("Location: welcome.php?username=$username");
            exit();
        } else {
            $errors[] = "Error registering user: " . $conn->error;
        }
    }

    // Display errors
    if (!empty($errors)) {
        $error_message = implode('<br>', $errors);
        header("Location: index.php?error=$error_message");
        exit();
    }
}

$conn->close();
?>


<?php
session_start();
require_once 'database_connection.php'; // Include your database connection file

function registerUser() {
    try {
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Check if form data is submitted
            if (!isset($_POST['username'], $_POST['password'])) {
                throw new Exception("Username and password are required");
            }

            $username = htmlspecialchars(trim($_POST['username']));
            $password = $_POST['password'];

            // Validate input lengths
            if (strlen($username) < 3 || strlen($password) < 6) {
                throw new Exception("Username must be at least 3 characters and password must be at least 6 characters");
            }

            // Check if username already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->bind_param('s', $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                throw new Exception("Username already exists");
            }

            // Hash password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            // Insert new user into database
            $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
            $stmt->bind_param('ss', $username, $hashedPassword);
            $stmt->execute();

            // Store user data in session
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $stmt->insert_id;

            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Create database connection
$conn = new mysqli('localhost', 'username', 'password', 'database_name');

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Set character set
$conn->set_charset("utf8");

// Call registration function
registerUser();

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;
    
    // Initialize variables and error array
    $errors = [];
    $username = $email = $password = '';

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        
        // Validate required fields
        if (empty($username)) {
            $errors[] = "Username is required";
        }
        if (empty($email)) {
            $errors[] = "Email is required";
        }
        if (empty($password)) {
            $errors[] = "Password is required";
        }
        
        // Check username length
        if (strlen($username) < 3) {
            $errors[] = "Username must be at least 3 characters long";
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
        
        // Check for existing username or email
        $checkQuery = "SELECT * FROM users WHERE username=? OR email=?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, "ss", $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                if ($row['username'] == $username) {
                    $errors[] = "Username already exists";
                }
                if ($row['email'] == $email) {
                    $errors[] = "Email already exists";
                }
            }
        }
        
        // Validate password
        $passwordRequirements = '/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/';
        if (!preg_match($passwordRequirements, $password)) {
            $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number";
        }
        
        // If no errors, proceed to registration
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
            
            // Insert user into database
            $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insertQuery);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
            
            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
                // Redirect to login page or dashboard
                header("Location: login.php");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again.";
            }
        }
    }
    
    return $errors;
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .error { color: red; margin-bottom: 10px; }
        .container { width: 400px; margin: 0 auto; padding: 20px; }
        input { margin: 5px 0; padding: 8px; }
    </style>
</head>
<body>
    <div class="container">
        <?php
            $errors = registerUser();
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        ?>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <input type="text" name="username" placeholder="Username" required><br>
            <input type="email" name="email" placeholder="Email" required><br>
            <input type="password" name="password" placeholder="Password" required><br>
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Connect to the database
$host = "localhost";
$username_db = "root";
$password_db = "";
$database_name = "user_registration";

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];
    $email = $_POST['email'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];

    // Validate input
    if (empty($username) || empty($password) || empty($email) || empty($first_name) || empty($last_name)) {
        return "All fields must be filled out";
    }

    // Check if username already exists
    $check_query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $check_query);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Password requirements: minimum length and must contain at least one letter and one number
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long";
    }
    if (!preg_match("#[0-9]#", $password)) {
        return "Password must contain at least one number";
    }
    if (!preg_match("#[a-zA-Z]#", $password)) {
        return "Password must contain at least one letter";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, password, email, first_name, last_name) 
            VALUES ('$username', '$hashed_password', '$email', '$first_name', '$last_name')";

    if (mysqli_query($conn, $sql)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $message = registerUser();
            echo "<p>$message</p>";
        }
    ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name"><br>

        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name"><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Initialize variables
$username = "";
$email = "";
$errors = array();

// Registration process
if (isset($_POST['register'])) {

    // Get form values
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate username
    if (empty($username)) {
        array_push($errors, "Username is required");
    }

    // Validate email
    if (empty($email)) {
        array_push($errors, "Email is required");
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        array_push($errors, "Please enter a valid email address");
    }

    // Validate password
    if (empty($password)) {
        array_push($errors, "Password is required");
    } elseif ($password != $confirm_password) {
        array_push($errors, "Passwords do not match");
    }

    // Check if username already exists
    $check_username = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($check_username);
    if ($result->num_rows > 0) {
        array_push($errors, "Username already exists");
    }

    // Check if email already exists
    $check_email = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($check_email);
    if ($result->num_rows > 0) {
        array_push($errors, "Email already exists");
    }

    // If no errors, proceed to registration
    if (count($errors) == 0) {

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $query = "INSERT INTO users (username, email, password) VALUES('$username', '$email', '$hashed_password')";
        
        if ($conn->query($query)) {
            // Registration successful
            $_SESSION['username'] = $username;
            header('location: dashboard.php');
            exit();
        } else {
            array_push($errors, "Error occurred while registering");
        }
    }

    // Close connection
    $conn->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
</head>
<body>
    <?php if (count($errors) > 0) : ?>
        <div class="error_msg">
            <?php foreach ($errors as $error) : ?>
                <p><?php echo $error ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="username" placeholder="Username">
        <input type="email" name="email" placeholder="Email">
        <input type="password" name="password" placeholder="Password">
        <input type="password" name="confirm_password" placeholder="Confirm Password">
        <button type="submit" name="register">Register</button>
    </form>

    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
session_start();
require_once 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $firstName = trim($_POST['first_name']);
    $lastName = trim($_POST['last_name']);
    $email = trim($_POST['email']);
    $username = trim($_POST['username']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Validate input
    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password) || empty($confirmPassword)) {
        die("All fields are required");
    }

    if (!preg_match("/^[a-zA-Z ]*$/", $firstName)) {
        die("First name must contain only letters and spaces");
    }

    if (!preg_match("/^[a-zA-Z ]*$/", $lastName)) {
        die("Last name must contain only letters and spaces");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/\d/', $password)) {
        die("Password must be at least 8 characters long and contain both letters and numbers");
    }

    if ($password !== $confirmPassword) {
        die("Passwords do not match");
    }

    // Check if username already exists
    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            die("Username already exists");
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    try {
        $stmt = $pdo->prepare("INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)");
        $stmt->execute([$firstName, $lastName, $email, $username, $hashedPassword]);
        
        // Set session variables
        $_SESSION['id'] = $pdo->lastInsertId();
        $_SESSION['username'] = $username;
        $_SESSION['registered'] = true;

        header("Location: login.php");
        exit();
    } catch (PDOException $e) {
        die("Registration failed: " . $e->getMessage());
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser() {
    global $conn;

    // Initialize variables
    $errors = [];
    $username = "";
    $email = "";

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get values from form
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $errors[] = "All fields are required";
        }

        // Check if password matches confirm password
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Sanitize inputs to prevent SQL injection and XSS attacks
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Check if username or email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->execute([$username, $email]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Username or email already exists";
            }
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }

        // If there are no errors
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            try {
                // Insert into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->execute([$username, $email, $hashed_password]);

                // Registration successful, redirect to login page or dashboard
                $_SESSION['success'] = "Registration successful! Please login.";
                header("Location: login.php");
                exit();
            } catch (PDOException $e) {
                die("Error: " . $e->getMessage());
            }
        } else {
            // Store errors in session and redirect back to registration page
            $_SESSION['errors'] = $errors;
            header("Location: register.php");
            exit();
        }
    }
}

// Close database connection
$conn = null;

?>


<?php
session_start();

// Display any error messages
if (!empty($_SESSION['errors'])) {
    foreach ($_SESSION['errors'] as $error) {
        echo "<div class='alert alert-danger'>$error</div>";
    }
    unset($_SESSION['errors']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register Page</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="register.php" method="post">
        <input type="text" name="username" placeholder="Enter username" required><br>
        <input type="email" name="email" placeholder="Enter email" required><br>
        <input type="password" name="password" placeholder="Enter password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm password" required><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$user = "root";
$password = "";
$database = "test";

// Create database connection
$conn = mysqli_connect($host, $user, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Initialize error array
    $errors = [];
    $data = [];

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Retrieve and sanitize inputs
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = $_POST['password'];

        // Validate username
        if (empty($username)) {
            $errors['username'] = "Username is required";
        } else if (!preg_match('/^[a-zA-Z0-9]{3,20}$/', $username)) {
            $errors['username'] = "Username must be 3-20 characters long and alphanumeric";
        }

        // Validate email
        if (empty($email)) {
            $errors['email'] = "Email is required";
        } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors['email'] = "Invalid email format";
        } else {
            // Check if email exists in database
            $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE email = ?");
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $errors['email'] = "Email already exists";
            }
            mysqli_stmt_close($stmt);
        }

        // Validate password
        if (empty($password)) {
            $errors['password'] = "Password is required";
        } else if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/', $password)) {
            $errors['password'] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number";
        }

        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Prepare INSERT query
            $stmt = mysqli_prepare($conn, "INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            // Execute the statement
            if (mysqli_stmt_execute($stmt)) {
                $data['status'] = 'success';
                $data['message'] = 'Registration successful!';
            } else {
                $data['status'] = 'error';
                $data['message'] = 'Database error occurred while registering.';
            }

            mysqli_stmt_close($stmt);
        }
    }

    return $data;
}

// Example usage
$result = registerUser();
print_r($result);

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser() {
    global $conn;

    // Initialize variables
    $username = "";
    $email = "";
    $password = "";
    $confirm_password = "";
    $first_name = "";
    $last_name = "";
    $date_of_birth = "";
    $phone_number = "";

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate input data
        $username = mysqli_real_escape_string($conn, trim($_POST['username']));
        $email = mysqli_real_escape_string($conn, trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = mysqli_real_escape_string($conn, trim($_POST['first_name']));
        $last_name = mysqli_real_escape_string($conn, trim($_POST['last_name']));
        $date_of_birth = $_POST['date_of_birth'];
        $phone_number = mysqli_real_escape_string($conn, trim($_POST['phone_number']));

        // Validate username
        if (empty($username)) {
            $error .= "Username is required<br>";
        } elseif (strlen($username) < 5) {
            $error .= "Username must be at least 5 characters<br>";
        }

        // Validate email
        if (empty($email)) {
            $error .= "Email is required<br>";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error .= "Invalid email format<br>";
        }

        // Validate password
        if (empty($password)) {
            $error .= "Password is required<br>";
        } elseif ($password != $confirm_password) {
            $error .= "Passwords do not match<br>";
        }

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $check_query);
        
        if (mysqli_num_rows($result) > 0) {
            if ($username_exists = mysqli_fetch_assoc($result)['username'] == $username) {
                $error .= "Username already exists<br>";
            }
            if ($email_exists = mysqli_fetch_assoc($result)['email'] == $email) {
                $error .= "Email already exists<br>";
            }
        }

        // If no errors
        if (!isset($error)) {
            // Hash the password
            $hashed_password = md5($password); // Note: MD5 is not secure for real applications, use stronger hashing like bcrypt

            // Insert into database
            $insert_query = "INSERT INTO users (username, email, password, first_name, last_name, date_of_birth, phone_number)
                            VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$date_of_birth', '$phone_number')";

            if (mysqli_query($conn, $insert_query)) {
                // Registration successful
                $_SESSION['username'] = $username;
                $_SESSION['user_id'] = mysqli_insert_id($conn);
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error .= "Error registering user: " . mysqli_error($conn);
            }
        }

        // Display errors if any
        if (isset($error)) {
            echo "<div style='color:red'>$error</div>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label>Username:</label><br>
        <input type="text" name="username"><br>

        <label>Email:</label><br>
        <input type="email" name="email"><br>

        <label>Password:</label><br>
        <input type="password" name="password"><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password"><br>

        <label>First Name:</label><br>
        <input type="text" name="first_name"><br>

        <label>Last Name:</label><br>
        <input type="text" name="last_name"><br>

        <label>Date of Birth:</label><br>
        <input type="date" name="date_of_birth"><br>

        <label>Phone Number:</label><br>
        <input type="tel" name="phone_number"><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $phone_number = $_POST['phone_number'];

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "Please fill in all required fields!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username=? OR email=?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password, first_name, last_name, phone_number) VALUES (?, ?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("ssssss", $username, $email, $hashedPassword, $first_name, $last_name, $phone_number);

        if ($stmt->execute()) {
            echo "Registration successful!";
        } else {
            echo "Error: " . $stmt->error;
        }
    }
}

// Call the registration function
registerUser();

$conn->close();
?>


<?php
session_start();
include 'db.php'; // Include your database connection file

function registerUser() {
    $errors = array();

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        try {
            // Validate input
            if (empty($_POST['username'])) {
                $errors[] = "Username is required";
            }
            if (empty($_POST['email'])) {
                $errors[] = "Email is required";
            }
            if (empty($_POST['password'])) {
                $errors[] = "Password is required";
            }
            if ($_POST['password'] !== $_POST['confirm_password']) {
                $errors[] = "Passwords do not match";
            }

            // Check if username already exists
            $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$_POST['username']]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Username already exists";
            }

            // Check if email already exists
            $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$_POST['email']]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Email is already registered";
            }

            // If no errors, proceed to register user
            if (empty($errors)) {
                // Hash password
                $password_hash = password_hash($_POST['password'], PASSWORD_DEFAULT);

                // Insert into database
                $stmt = $pdo->prepare("INSERT INTO users (username, email, password_hash, registered) VALUES (?, ?, ?, NOW())");
                $stmt->execute([$_POST['username'], $_POST['email'], $password_hash]);

                // Return success messages
                return array(
                    'success' => true,
                    'messages' => array(
                        "User registration successful!",
                        "You can now log in with your credentials."
                    )
                );
            }

        } catch (Exception $e) {
            $errors[] = "An error occurred while registering. Please try again later.";
            return array('success' => false, 'errors' => $errors);
        }
    }

    // If no POST request or errors present
    if (!empty($errors)) {
        return array('success' => false, 'errors' => $errors);
    } else {
        return array('success' => false, 'errors' => array("Invalid request"));
    }
}

// Example usage:
$result = registerUser();

if ($result['success']) {
    // Redirect to login page or display success message
    header("Location: login.php?msg=registration_success");
} else {
    // Display errors in the registration form
    print_r($result['errors']);
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Include configuration file
require_once 'config.php';

function registerUser($username, $email, $password) {
    global $conn;

    // Check if username or email already exists
    $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Username or email already exists
        return false;
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Generate verification token
    $verificationToken = bin2hex(random_bytes(32));

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password, verified) VALUES (?, ?, ?, 0)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        // Get user ID
        $userId = $stmt->insert_id;

        // Insert verification token into database
        $tokenInsertQuery = "INSERT INTO email_verification_tokens (user_id, token, created_at) VALUES (?, ?, NOW())";
        $tokenStmt = $conn->prepare($tokenInsertQuery);
        $tokenStmt->bind_param("is", $userId, $verificationToken);

        if ($tokenStmt->execute()) {
            // Send verification email
            $subject = "Verify Your Email Address";
            $message = "Please click the following link to verify your account: http://example.com/verify.php?token=" . $verificationToken;
            $headers = "From: noreply@example.com" . "\r
";
            $headers .= "Content-Type: text/plain; charset=UTF-8";

            if (mail($email, $subject, $message, $headers)) {
                return true;
            } else {
                // Email failed to send
                return false;
            }
        } else {
            // Token insertion failed
            return false;
        }
    } else {
        // Registration failed
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all required fields.";
    } else {
        if (registerUser($username, $email, $password)) {
            echo "Registration successful! Please check your email to verify your account.";
        } else {
            echo "Registration failed. Please try again later.";
        }
    }
}
?>


<?php
session_start();
require_once 'database_connection.php';

function registerUser() {
    $error = '';
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $email = $_POST['email'];
        $phone_number = $_POST['phone_number'];

        // Validate form fields
        if (empty($username) || empty($password) || empty($confirm_password) || empty($email) || empty($phone_number)) {
            $error = "All fields are required!";
        } elseif ($password !== $confirm_password) {
            $error = "Passwords do not match!";
        } else {
            // Check if username already exists
            try {
                $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
                $stmt->execute([$username]);
                if ($stmt->rowCount() > 0) {
                    $error = "Username already taken!";
                } else {
                    // Check if email already exists
                    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
                    $stmt->execute([$email]);
                    if ($stmt->rowCount() > 0) {
                        $error = "Email already registered!";
                    } else {
                        // Hash the password
                        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                        
                        // Prepare user data for insertion
                        $data = [
                            'username' => htmlspecialchars($username),
                            'password' => $hashed_password,
                            'first_name' => htmlspecialchars($first_name),
                            'last_name' => htmlspecialchars($last_name),
                            'email' => htmlspecialchars($email),
                            'phone_number' => htmlspecialchars($phone_number)
                        ];
                        
                        // Insert into database
                        try {
                            $stmt = $pdo->prepare("INSERT INTO users 
                                (username, password, first_name, last_name, email, phone_number) 
                                VALUES (:username, :password, :first_name, :last_name, :email, :phone_number)");
                            $stmt->execute($data);
                            
                            // Registration successful
                            echo "Registration successful! You can now login.";
                        } catch (PDOException $e) {
                            $error = "Error registering user: " . $e->getMessage();
                        }
                    }
                }
            } catch (PDOException $e) {
                $error = "Database error: " . $e->getMessage();
            }
        }
    }

    if (!empty($error)) {
        echo $error;
    }
}

// Call the function
if (isset($_POST['submit'])) {
    registerUser();
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    function registerUser($name, $email, $username, $password) {
        global $conn;

        // Validate input
        if (empty($name) || empty($email) || empty($username) || empty($password)) {
            return "All fields are required!";
        }

        // Sanitize inputs to prevent SQL injection and XSS attacks
        $name = htmlspecialchars(stripslashes(trim($name)));
        $email = htmlspecialchars(stripslashes(trim($email)));
        $username = htmlspecialchars(stripslashes(trim($username)));
        $password = htmlspecialchars(stripslashes(trim($password)));

        // Check if email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            return "Email is already taken!";
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            return "Username is already taken!";
        }

        // Hash the password using a secure method
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert new user into the database
        $stmt = $conn->prepare("INSERT INTO users (name, email, username, password) VALUES (?, ?, ?, ?)");
        $result = $stmt->execute([$name, $email, $username, $hashedPassword]);

        if ($result) {
            return "Registration successful!";
        } else {
            return "Error occurred during registration!";
        }
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Close the database connection
$conn = null;
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get user inputs
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        
        // Validate empty fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields!";
            return;
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Password validation
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }
        
        // Check for existing username or email
        $checkQuery = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
        $result = mysqli_query($conn, $checkQuery);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }
        
        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));
        
        // Insert new user into database
        $insertQuery = "INSERT INTO users (username, email, password) 
                        VALUES ('$username', '$email', '$hashedPassword')";
                        
        if (mysqli_query($conn, $insertQuery)) {
            echo "Registration successful!";
            
            // Redirect to login page after 3 seconds
            header("refresh:3;url=login.php");
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

function registerUser() {
    global $host, $dbname, $username, $password;

    // Get form data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $plainPassword = $_POST['password'];

    // Check if username already exists
    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        if ($stmt->rowCount() > 0) {
            die("Username already exists!");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);

        if ($stmt->rowCount() > 0) {
            die("Email already registered!");
        }

        // Hash the password
        $hashedPassword = password_hash($plainPassword, PASSWORD_DEFAULT, [
            'cost' => 12,
        ]);

        // Insert new user into database
        $stmt = $conn->prepare("
            INSERT INTO users 
            (username, email, password)
            VALUES
            (?, ?, ?)
        ");
        
        if (!$stmt->execute([$username, $email, $hashedPassword])) {
            die("Registration failed!");
        }

        // Redirect to login page after successful registration
        header('Location: login.php');
        exit();

    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// Call the function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
function registerUser($data) {
    // Extract data from $data array
    extract($data);

    // Set error flag
    $error = false;

    // Validate first name
    if (!isset($first_name) || empty($first_name)) {
        return ['success' => false, 'message' => 'First name is required'];
    }

    // Validate last name
    if (!isset($last_name) || empty($last_name)) {
        return ['success' => false, 'message' => 'Last name is required'];
    }

    // Validate email
    if (!isset($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return ['success' => false, 'message' => 'Valid email address is required'];
    }

    // Validate username
    if (!isset($username) || empty($username) || strlen($username) < 3) {
        return ['success' => false, 'message' => 'Username must be at least 3 characters long'];
    }
    if (!preg_match('/^[a-zA-Z0-9_]*$/', $username)) {
        return ['success' => false, 'message' => 'Username can only contain letters, numbers, and underscores'];
    }

    // Validate password
    if (!isset($password) || empty($password) || strlen($password) < 8) {
        return ['success' => false, 'message' => 'Password must be at least 8 characters long'];
    }
    if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]+$/', $password)) {
        return ['success' => false, 'message' => 'Password must contain at least one uppercase letter, one lowercase letter, and a number'];
    }

    // Check if username already exists
    try {
        global $pdo;
        
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        if ($stmt->rowCount() > 0) {
            return ['success' => false, 'message' => 'Username already taken'];
        }
    } catch (PDOException $e) {
        return ['success' => false, 'message' => 'Error checking username. Please try again later'];
    }

    // Check if email already exists
    try {
        $stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() > 0) {
            return ['success' => false, 'message' => 'Email is already registered'];
        }
    } catch (PDOException $e) {
        return ['success' => false, 'message' => 'Error checking email. Please try again later'];
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    try {
        $stmt = $pdo->prepare("INSERT INTO users (first_name, last_name, email, username, password) 
                              VALUES (?, ?, ?, ?, ?)");
        
        $stmt->execute([$first_name, $last_name, $email, $username, $hashed_password]);
        
        return ['success' => true, 'message' => 'Registration successful!'];
    } catch (PDOException $e) {
        return ['success' => false, 'message' => 'Error registering user. Please try again later'];
    }
}
?>


$userData = [
    'first_name' => $_POST['first_name'],
    'last_name'  => $_POST['last_name'],
    'email'      => $_POST['email'],
    'username'   => $_POST['username'],
    'password'   => $_POST['password']
];

$result = registerUser($userData);

if ($result['success']) {
    // Registration successful
    echo $result['message'];
} else {
    // Error occurred
    echo $result['message'];
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Sanitize input data
    $fullname = htmlspecialchars(trim($_POST['fullname']));
    $email = htmlspecialchars(trim($_POST['email']));
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format");
    }

    // Check password match
    if ($password !== $confirm_password) {
        throw new Exception("Passwords do not match");
    }

    // Check username length
    if (strlen($username) < 4 || strlen($username) > 20) {
        throw new Exception("Username must be between 4 and 20 characters");
    }

    // Prepare password for storage
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username already exists");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already exists");
        }

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (fullname, email, username, password) VALUES (?, ?, ?, ?)");
        $stmt->bind_param('ssss', $fullname, $email, $username, $hashed_password);
        
        if ($stmt->execute()) {
            // Registration successful
            header("Location: login.php?success=Registration successful!");
            exit();
        } else {
            throw new Exception("Error registering user");
        }
    } catch (Exception $e) {
        // Display error message
        echo "Error: " . $e->getMessage();
    } finally {
        $stmt->close();
    }
}

// Close database connection
$conn->close();
?>


<?php
// register.php

session_start();

function validateInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Retrieve and sanitize input data
    $username = validateInput($_POST['username']);
    $email = validateInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm-password'];
    $first_name = validateInput($_POST['first-name']);
    $last_name = validateInput($_POST['last-name']);
    $dob = $_POST['dob'];

    // Error array to hold validation errors
    $errors = [];

    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    // Password requirements: at least 8 characters including uppercase, lowercase, number, and special character
    if (strlen($password) < 8 || !preg_match('/[A-Z]/', $password) || !preg_match('/[a-z]/', $password) || !preg_match('/[0-9]/', $password) || !preg_match('/[^A-Za-z0-9]/', $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, lowercase letter, number, and special character!";
    }

    // Connect to the database
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'php_auth';

    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check for existing username or email
    $sql_check = "SELECT id FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $sql_check);
    mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Username or email already exists!";
    }

    // Close the statement
    mysqli_stmt_close($stmt);

    if (empty($errors)) {

        // Sanitize inputs for database insertion
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $first_name = mysqli_real_escape_string($conn, $first_name);
        $last_name = mysqli_real_escape_string($conn, $last_name);

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);

        // Prepare the SQL query to insert user data
        $sql_insert = "INSERT INTO users (username, email, password, first_name, last_name, dob) 
                      VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$dob')";

        if (mysqli_query($conn, $sql_insert)) {
            // Registration successful
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            $_SESSION['first_name'] = $first_name;
            header("Location: welcome.php");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again later!";
            echo "<pre>" . print_r($errors, true) . "</pre>";
        }

    } else {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Retrieve form data
        $name = $_POST['name'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate name
        if (!preg_match("/^[a-zA-Z ]+$/", $name)) {
            die("Invalid name");
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format");
        }

        // Check if email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            die("Email already exists");
        }

        // Validate password
        if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z\d]{8,}$/", $password)) {
            die("Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$name, $email, $hashed_password]);

        // Send confirmation email
        $to = $email;
        $subject = "Registration Confirmation";
        $message = "Thank you for registering! Your account has been created successfully.";
        $headers = "From: registration@example.com" . "\r
" .
                   "Reply-To: registration@example.com" . "\r
" .
                   "X-Mailer: PHP/" . phpversion();

        mail($to, $subject, $message, $headers);

        // Redirect to login page
        header("Location: login.php");
        exit();
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

// Check if form is submitted
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        die("All fields must be filled out");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    try {
        // Prepare to check existing username or email
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Username or email already exists!");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert new user
        $insert_stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $insert_stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($insert_stmt->execute()) {
            // Registration successful
            $_SESSION['user'] = $username;
            header('Location: login.php');
            exit();
        } else {
            die("Error registering user: " . $conn->error);
        }
    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }

} else {
    // If not POST request, redirect to form
    header('Location: registration_form.html');
}
?>



<?php
$servername = "localhost";
$username_db = "root"; // Change as per your setup
$password_db = "";     // Change as per your setup
$dbname = "user_registration";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
function registerUser($username, $email, $password) {
    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'my_database';

    // Create connection
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate username
    if (empty($username)) {
        return "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Invalid username. Only letters, numbers, and underscores are allowed.";
    } elseif (strlen($username) > 255) {
        return "Username too long.";
    }

    // Validate email
    if (empty($email)) {
        return "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already taken";
    }

    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already registered";
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return "Error registering user: " . $conn->error;
    }

    // Close connections
    $stmt->close();
    $conn->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);

    if ($result === true) {
        echo "Registration successful!";
    } else {
        echo "Error: " . $result;
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$database = 'your_database';

$conn = new mysqli($host, $dbUsername, $dbPassword, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get form values
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Initialize error array
    $errors = [];

    // Validate inputs
    if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
        $errors[] = "All fields are required!";
    }

    if ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match!";
    }

    // Email validation
    if (!preg_match('/^[^\s@]+@[^\s@]+\.[^\s@]+$/', $email)) {
        $errors[] = "Invalid email format!";
    }

    if (empty($errors)) {

        // Sanitize inputs
        $firstName = mysqli_real_escape_string($conn, $firstName);
        $lastName = mysqli_real_escape_string($conn, $lastName);
        $email = mysqli_real_escape_string($conn, $email);

        // Password hashing
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        try {

            // Check if email already exists
            $checkEmailQuery = "SELECT id FROM users WHERE email=?";
            $stmt = $conn->prepare($checkEmailQuery);
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                die("Email already exists!");
            }

            // Insert user into database
            $insertUser = "INSERT INTO users (first_name, last_name, email, password) 
                          VALUES (?, ?, ?, ?)";
            
            $stmt = $conn->prepare($insertUser);
            $stmt->bind_param("ssss", $firstName, $lastName, $email, $hashedPassword);

            if ($stmt->execute()) {
                // Generate and store confirmation token
                $token = bin2hex(random_bytes(16));
                $confirmationToken = "INSERT INTO confirmations (user_id, token) 
                                   VALUES (?, ?)";
                
                $tokenStmt = $conn->prepare($confirmationToken);
                $tokenStmt->bind_param("is", $stmt->insert_id, $token);

                if ($tokenStmt->execute()) {
                    // Send confirmation email
                    $to = $email;
                    $subject = "Confirm Your Registration";
                    $headers = "From: your_email@example.com\r
".
                              "Reply-To: your_email@example.com\r
".
                              "X-Mailer: PHP/" . phpversion();

                    $confirmationLink = "http://your_website/confirm.php?token=" . $token;
                    $message = "Please click the following link to confirm your registration:

" .
                               $confirmationLink;

                    if (mail($to, $subject, $message, $headers)) {
                        echo "Registration successful! Check your email for confirmation.";
                    } else {
                        die("Failed to send confirmation email!");
                    }
                } else {
                    die("Error storing confirmation token: " . $conn->error);
                }

            } else {
                die("Error inserting user data: " . $conn->error);
            }

        } catch (Exception $e) {
            die("Error: " . $e->getMessage());
        }
    } else {
        foreach ($errors as $error) {
            echo "<p class='error'>" . $error . "</p>";
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <script>
        function validatePassword() {
            var password = document.getElementById('password').value;
            var confirmPassword = document.getElementById('confirm_password').value;

            if (password != confirmPassword) {
                alert("Passwords do not match!");
                return false;
            }
            return true;
        }
    </script>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post" onsubmit="return validatePassword()">
        <input type="text" name="first_name" placeholder="First Name" required><br>
        <input type="text" name="last_name" placeholder="Last Name" required><br>
        <input type="email" name="email" placeholder="Email Address" required><br>
        <input type="password" id="password" name="password" placeholder="Password" required><br>
        <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: -10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_POST['register'])) {
            // Include database connection file
            include 'db_connect.php';

            $username = htmlspecialchars(trim($_POST['username']));
            $email = htmlspecialchars(trim($_POST['email']));
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            $errors = array();

            // Validate input fields
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
                $errors[] = "All fields are required!";
            }

            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format!";
            }

            // Password validation
            if (strlen($password) < 8) {
                $errors[] = "Password must be at least 8 characters long!";
            }
            if (!preg_match('/[A-Za-z]/', $password)) {
                $errors[] = "Password must contain letters!";
            }
            if (!preg_match('/\d/', $password)) {
                $errors[] = "Password must contain numbers!";
            }

            // Check if password matches
            if ($password !== $confirm_password) {
                $errors[] = "Passwords do not match!";
            }

            if (empty($errors)) {
                try {
                    // Check if username or email already exists
                    $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
                    $stmt = $conn->prepare($checkQuery);
                    $stmt->bind_param("ss", $username, $email);
                    $stmt->execute();
                    $result = $stmt->get_result();

                    if ($result->num_rows > 0) {
                        throw new Exception("Username or email already exists!");
                    }

                    // Hash password
                    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                    // Insert user into database
                    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                    $stmt = $conn->prepare($insertQuery);
                    $stmt->bind_param("sss", $username, $email, $hashed_password);

                    if ($stmt->execute()) {
                        echo "<p>Registration successful! You can now <a href='login.php'>login</a>.</p>";
                    } else {
                        throw new Exception("Error registering user!");
                    }

                } catch (Exception $e) {
                    $errors[] = $e->getMessage();
                }
            }

        } else {
            // If form not submitted
        }

        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
        ?>

        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit" name="register">Register</button>
        </form>
    </div>
</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root"; // Change according to your database username
$password = "";     // Change according to your database password
$db_name = "my_database"; // Change according to your database name

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Get form data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Simple validation
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
        return;
    }
    
    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return;
    }
    
    // Check password length (at least 8 characters)
    if (strlen($password) < 8) {
        echo "Password must be at least 8 characters long!";
        return;
    }
    
    // Check if passwords match
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }
    
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, htmlspecialchars($username));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $password = md5($password); // Hash the password
    
    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username='$username'";
    $result = $conn->query($check_username_query);
    
    if ($result->num_rows > 0) {
        echo "Username already exists!";
        return;
    }
    
    // Insert user into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$password')";
            
    if ($conn->query($sql)) {
        echo "Registration successful! You can now login.";
        // Redirect to login page after 3 seconds
        header("Refresh:3; url=login.php");
    } else {
        echo "Error registering user: " . $conn->error;
    }
}

// Call the register function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .form-group {
            margin-bottom: 10px;
        }
        input {
            width: 300px;
            padding: 8px;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
        .error {
            color: red;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required>
        </div>
        
        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required>
        </div>
        
        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>
        
        <button type="submit">Register</button>
    </form>

    <?php
    if (isset($_GET['error'])) {
        echo "<p class='error'>";
        switch ($_GET['error']) {
            case 'empty':
                echo "All fields are required!";
                break;
            case 'email':
                echo "Invalid email format!";
                break;
            case 'password_length':
                echo "Password must be at least 8 characters long!";
                break;
            case 'password_match':
                echo "Passwords do not match!";
                break;
            case 'username_exists':
                echo "Username already exists!";
                break;
        }
        echo "</p>";
    }
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register user
function registerUser() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if all fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields must be filled out!";
        return;
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return;
    }

    // Check if passwords match
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }

    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        echo "Username or email already exists!";
        return;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt->execute()) {
        echo "Registration successful! You can now login.";
    } else {
        echo "Error registering user: " . $conn->error;
    }

    // Close statement
    $stmt->close();
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php
    // Display any error messages here
    if (!empty($_GET['error'])) {
        echo "<p style='color: red;'>".$_GET['error']."</p>";
    }
    ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection configuration
$host = "localhost";
$db_username = "root";
$db_password = "";
$db_name = "user_registration";

// Create database connection
$conn = new mysqli($host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password, $conn) {
    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields must be filled out";
    }

    // Check for valid email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Sanitize inputs to prevent SQL injection
    $username = $conn->real_escape_string($username);
    $email = $conn->real_escape_string($email);
    $password = $conn->real_escape_string($password);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username_query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($check_email_query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insert_query);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful! You can now log in.";
    } else {
        return "Error: " . $stmt->error;
    }
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call registration function and display result
    $result = registerUser($username, $email, $password, $conn);
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Include database connection file
include("db_connection.php");

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = mysqli_real_escape_string($GLOBALS['conn'], trim($_POST['username']));
        $email = mysqli_real_escape_string($GLOBALS['conn'], trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if (strlen($username) > 50) {
            echo "Username too long!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email=?";
        $stmt = mysqli_prepare($GLOBALS['conn'], $check_email_query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($GLOBALS['conn'], $insert_query);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($GLOBALS['conn']);
        }

        mysqli_stmt_close($stmt);
    }
}

// Call the function when form is submitted
if (isset($_POST['submit'])) {
    registerUser();
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email=?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $registerQuery = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $registerQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page after 3 seconds
            header("Refresh:3; url=login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        // Close statement
        mysqli_stmt_close($stmt);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
require_once 'registration_function.php';
registerUser();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root'; // Your database username
$dbPassword = '';      // Your database password
$dbName = 'user_registration'; // Your database name

// Connect to the database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Registration process
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Initialize variables and set default values for error messages
    $username = $email = $password = $confirmPassword = $firstName = $lastName = '';
    $errors = array();

    // Validate username
    if (empty($_POST['username'])) {
        $errors[] = "Username is required.";
    } else {
        $username = sanitizeInput($_POST['username']);
        if (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores.";
        }
    }

    // Validate email
    if (empty($_POST['email'])) {
        $errors[] = "Email is required.";
    } else {
        $email = sanitizeInput($_POST['email']);
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address.";
        }
    }

    // Validate password
    if (empty($_POST['password']) || empty($_POST['confirmPassword'])) {
        $errors[] = "Password is required.";
    } else {
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirmPassword'];
        if ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match.";
        }
        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long.";
        }
    }

    // Validate first name
    if (empty($_POST['firstName'])) {
        $errors[] = "First name is required.";
    } else {
        $firstName = sanitizeInput($_POST['firstName']);
        if (!preg_match('/^[a-zA-Z\']+$/', $firstName)) {
            $errors[] = "First name can only contain letters and apostrophes.";
        }
    }

    // Validate last name
    if (empty($_POST['lastName'])) {
        $errors[] = "Last name is required.";
    } else {
        $lastName = sanitizeInput($_POST['lastName']);
        if (!preg_match('/^[a-zA-Z\']+$/', $lastName)) {
            $errors[] = "Last name can only contain letters and apostrophes.";
        }
    }

    // If there are no errors, proceed to registration
    if (empty($errors)) {

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Prepare statements for checking existing users
        $checkUsernameStmt = $conn->prepare("SELECT username FROM users WHERE username = ?");
        $checkEmailStmt = $conn->prepare("SELECT email FROM users WHERE email = ?");

        // Bind parameters and execute checks
        $checkUsernameStmt->bind_param("s", $username);
        $checkUsernameStmt->execute();
        $resultUsername = $checkUsernameStmt->get_result();

        $checkEmailStmt->bind_param("s", $email);
        $checkEmailStmt->execute();
        $resultEmail = $checkEmailStmt->get_result();

        // Check if username or email already exists
        if ($resultUsername->num_rows > 0) {
            $errors[] = "Username is already taken.";
        } elseif ($resultEmail->num_rows > 0) {
            $errors[] = "Email is already registered.";
        }

        // If no duplicates, insert new user
        if (empty($errors)) {

            $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");

            if ($stmt === false) {
                die('Prepare failed: ' . htmlspecialchars($conn->error));
            }

            // Bind parameters
            $stmt->bind_param("sssss", $username, $email, $hashedPassword, $firstName, $lastName);

            // Execute the statement
            if (!$stmt->execute()) {
                die('Execute failed: ' . htmlspecialchars($stmt->error));
            }

            // Close statements
            $checkUsernameStmt->close();
            $checkEmailStmt->close();
            $stmt->close();

            // Redirect to success page
            header("Location: registration_success.php?success=1");
            exit();
        } else {
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>$error</div>";
            }
        }

    } else {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }

} // End of POST submission

// Close database connection
$conn->close();
?>


<?php
// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input lengths
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all required fields.");
    }

    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match.");
    }

    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check username availability
    $check_username = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $check_username);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        die("Username already exists.");
    }

    // Check email availability
    $check_email = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $check_email);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        die("Email already exists.");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user
    $insert_user = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insert_user);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

    if (mysqli_stmt_execute($stmt)) {
        // Redirect to success page
        header("Location: welcome.php");
        exit();
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }

    // Close connection
    mysqli_close($conn);
}
?>


<?php
// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate required fields
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all required fields");
    }

    if ($password != $confirm_password) {
        die("Passwords do not match");
    }

    // Database connection
    $db_host = "localhost";
    $db_user = "root";
    $db_pass = "";
    $db_name = "mydatabase";

    $conn = mysqli_connect($db_host, $db_user, $db_pass, $db_name);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $check_query);

    if (mysqli_num_rows($result) > 0) {
        echo "Username or email already exists";
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert user into database
    $insert_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
    
    if (!mysqli_query($conn, $insert_query)) {
        die("Error registering user: " . mysqli_error($conn));
    }

    // Close connection
    mysqli_close($conn);

    // Redirect to login page or dashboard
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register New User</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" placeholder="Enter username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" placeholder="Enter email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" placeholder="Enter password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm password"><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Include database configuration file
include('db_config.php');

function registerUser() {
    // Check if form submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $birthdate = $_POST['birthdate'];

        // Initialize error array
        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]{3,20}$/", $username)) {
            $errors[] = "Username must be 3-20 characters and contain only letters, numbers, and underscores";
        } else {
            // Check if username already exists
            $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE username = ?");
            mysqli_stmt_bind_param($stmt, "s", $username);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $errors[] = "Username already exists";
            }
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        } else {
            // Check if email already exists
            $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE email = ?");
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $errors[] = "Email already exists";
            }
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters";
        }

        // Validate confirm password
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Validate first name and last name
        if (empty($first_name) || empty($last_name)) {
            $errors[] = "First name and Last name are required";
        }

        // Check birthdate format
        if (!empty($birthdate)) {
            if (!preg_match("/^\d{4}-\d{2}-\d{2}$/", $birthdate)) {
                $errors[] = "Invalid date format. Please use YYYY-MM-DD";
            }
        }

        // If no errors, proceed to register the user
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $sql = "INSERT INTO users (username, email, password, first_name, last_name, birthdate) VALUES (?, ?, ?, ?, ?, ?)";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                // Bind variables to the prepared statement as parameters
                mysqli_stmt_bind_param($stmt, "ssssss", $username, $email, $hashed_password, $first_name, $last_name, $birthdate);

                // Execute the statement
                if (mysqli_stmt_execute($stmt)) {
                    echo "Registration successful!";
                    // Redirect to login page or dashboard
                    header("Location: login.php");
                    exit();
                } else {
                    echo "Error registering user. Please try again.";
                }
            }

            // Close statement
            mysqli_stmt_close($stmt);
        } else {
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>$error</div>";
            }
        }

        // Close database connection
        mysqli_close($conn);
    }
}

// Call the registration function
registerUser();
?>


<?php
$host = 'localhost';
$username = 'your_db_username';
$password = 'your_db_password';
$database = 'your_db_name';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
function registerUser($username, $email, $password) {
    // Database connection details
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "mydatabase";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Validate and sanitize input data
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Check if username is already taken
    $checkUsernameQuery = "SELECT username FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists.";
    }

    // Check if email is already registered
    $checkEmailQuery = "SELECT email FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);

    if (mysqli_num_rows($result) > 0) {
        return "Email already registered.";
    }

    // Validate username format
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username contains invalid characters.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Check password length
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) 
            VALUES ('$username', '$email', '$hashedPassword')";

    if (mysqli_query($conn, $sql)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Database configuration
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];

    // Validate form data
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($first_name) || empty($last_name)) {
        echo "All fields are required!";
        return false;
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return false;
    }

    // Password validation
    if ($password != $confirm_password) {
        echo "Passwords do not match!";
        return false;
    }

    // Minimum password length
    if (strlen($password) < 6) {
        echo "Password must be at least 6 characters long!";
        return false;
    }

    // Password must contain at least one special character or number
    if (!preg_match('/[!@#$%^&*()_+\-=\[\]{};":|,.<>?0-9]/', $password)) {
        echo "Password must contain at least one special character or number!";
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    global $conn;
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = password_hash($password, PASSWORD_DEFAULT); // Securely hash the password

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $check_username_query);

    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return false;
    }

    // Insert new user into database
    $sql = "INSERT INTO users (username, email, password, first_name, last_name)
            VALUES ('$username', '$email', '$password', '$first_name', '$last_name')";

    if (mysqli_query($conn, $sql)) {
        // Registration successful
        header("Location: registration_success.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
        return false;
    }
}

// Call the function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
} else {
    // Show registration form
    ?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label>Username:</label>
        <input type="text" name="username" required><br>

        <label>Email:</label>
        <input type="email" name="email" required><br>

        <label>Password:</label>
        <input type="password" name="password" required><br>

        <label>Confirm Password:</label>
        <input type="password" name="confirm_password" required><br>

        <label>First Name:</label>
        <input type="text" name="first_name" required><br>

        <label>Last Name:</label>
        <input type="text" name="last_name" required><br>

        <button type="submit">Register</button>
    </form>
    <?php
}

mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // Default MySQL username is root
$password = ''; // Enter your database password here

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to register a new user
function registerUser($conn) {
    session_start();

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Initialize variables and set error messages array
        $errors = array();
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $date_of_birth = $_POST['date_of_birth'];
        $gender = $_POST['gender'];
        $phone_number = $_POST['phone_number'];
        
        // CSRF token validation
        if (empty($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
            die("Invalid request!");
        }

        // Validate username
        if (strlen($username) < 3 || strlen($username) > 20) {
            $errors['username'] = "Username must be between 3 and 20 characters!";
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors['email'] = "Please enter a valid email address!";
        } else {
            // Check if email already exists in the database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                $errors['email'] = "Email already exists!";
            }
        }

        // Validate password
        if (strlen($password) < 8) {
            $errors['password'] = "Password must be at least 8 characters long!";
        } elseif ($password !== $confirm_password) {
            $errors['confirm_password'] = "Passwords do not match!";
        }

        // Validate first name and last name
        if (!preg_match("/^[a-zA-Z-' ]*$/", $first_name)) {
            $errors['first_name'] = "First name can only contain letters, spaces, apostrophes, and hyphens!";
        }
        if (!preg_match("/^[a-zA-Z-' ]*$/", $last_name)) {
            $errors['last_name'] = "Last name can only contain letters, spaces, apostrophes, and hyphens!";
        }

        // Validate date of birth
        if (empty($date_of_birth)) {
            $errors['date_of_birth'] = "Please enter your date of birth!";
        } else {
            list($year, $month, $day) = explode('-', $date_of_birth);
            $age = date_diff(date_create($date_of_birth), date_create('now'))->y;
            if ($age < 13) {
                $errors['date_of_birth'] = "You must be at least 13 years old to register!";
            }
        }

        // Validate gender
        if (!in_array($gender, array("male", "female"))) {
            $errors['gender'] = "Please select your gender!";
        }

        // Validate phone number
        if (strlen($phone_number) != 10 || !ctype_digit($phone_number)) {
            $errors['phone_number'] = "Please enter a valid 10-digit phone number!";
        }

        // Check terms and conditions agreement
        if (!isset($_POST['terms'])) {
            $errors['terms'] = "You must agree to our terms and conditions!";
        }

        // If no errors, proceed to register the user
        if (empty($errors)) {

            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            try {
                // Insert user into database
                $stmt = $conn->prepare("INSERT INTO users 
                    (username, email, password, first_name, last_name, date_of_birth, gender, phone_number)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?)");

                $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $date_of_birth, $gender, $phone_number]);

                // Set session message
                $_SESSION['message'] = "Registration successful! You can now login.";

                // Redirect to the login page or welcome page
                header("Location: welcome.php");
                exit();
            } catch(PDOException $e) {
                die("Something went wrong. Please try again later.");
            }

        } else {

            // Display errors
            $_SESSION['errors'] = $errors;
            $_SESSION['input_data'] = $_POST; // Store input data to repopulate the form

            // Redirect back to registration page
            header("Location: register.php");
            exit();

        }

    }
}

// Generate CSRF token for security
function generateCsrfToken() {
    if (empty($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    return $_SESSION['csrf_token'];
}
?>


<?php
function registerUser() {
    // Check if form was submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $phone_number = $_POST['phone_number'];
        $address = $_POST['address'];

        // Initialize error array
        $errors = [];

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match('/^[a-zA-Z0-9_]{3,20}$/', $username)) {
            $errors[] = "Username must be between 3 and 20 characters and contain only letters, numbers, and underscores.";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password) || empty($confirm_password)) {
            $errors[] = "Password and confirm password are required";
        } elseif ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        } elseif (!preg_match('/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/', $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one letter and one number.";
        }

        // Validate first name
        if (empty($first_name)) {
            $errors[] = "First name is required";
        } elseif (!preg_match('/^[a-zA-Z ]+$/', $first_name)) {
            $errors[] = "First name can only contain letters and spaces.";
        }

        // Validate last name
        if (empty($last_name)) {
            $errors[] = "Last name is required";
        } elseif (!preg_match('/^[a-zA-Z ]+$/', $last_name)) {
            $errors[] = "Last name can only contain letters and spaces.";
        }

        // Validate phone number
        if (empty($phone_number)) {
            $errors[] = "Phone number is required";
        } elseif (!preg_match('/^\d{10}$/', $phone_number)) {
            $errors[] = "Phone number must be 10 digits.";
        }

        // Validate address
        if (empty($address)) {
            $errors[] = "Address is required";
        }

        // If there are errors, return them
        if (!empty($errors)) {
            return $errors;
        }

        // Connect to database
        $db = mysqli_connect("localhost", "username", "password", "database_name");

        // Check connection
        if (!$db) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare and bind statement
        $stmt = $db->prepare("INSERT INTO users (username, email, password, first_name, last_name, phone_number, address) VALUES (?, ?, ?, ?, ?, ?, ?)");
        $stmt->bind_param("sssssss", $username, $email, $hashed_password, $first_name, $last_name, $phone_number, $address);

        // Execute the statement
        if ($stmt->execute()) {
            // Registration successful
            return true;
        } else {
            // Error occurred
            $errors[] = "Registration failed. Please try again.";
            return $errors;
        }

        // Close database connection
        $db->close();
    }
}
?>


<?php
// Database connection
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser($username, $email, $password) {
    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Sanitize inputs to prevent SQL injection and other attacks
    $username = trim(mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($username))));
    $email = trim(mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($email))));
    $password = trim(mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($password))));

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $registerQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $registerQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (!mysqli_stmt_execute($stmt)) {
        return "Registration failed. Please try again!";
    }

    // Close statement and connection
    mysqli_stmt_close($stmt);
    mysqli_close($conn);

    // Registration successful
    return "Registration successful! You can now log in.";
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Include database connection file
require_once("db_connection.php");

function registerUser($username, $email, $password) {
    global $conn;

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Check if username already exists
    $checkUsername = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsername);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $checkEmail = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmail);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error during registration. Please try again.";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call registerUser function
    $result = registerUser($username, $email, $password);

    if ($result === "Registration successful!") {
        header("Location: login.php?success=1");
        exit();
    } else {
        echo "<script>alert('$result');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        .container {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Form</h1>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit">Register</button>
        </form>
        <p>Already have an account? <a href="login.php">Login here</a></p>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;
    
    // Sanitize input data
    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }
    
    if ($password !== $confirm_password) {
        return "Passwords do not match.";
    }
    
    // Check if username already exists
    $checkUsername = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
    if (mysqli_num_rows($checkUsername) > 0) {
        return "Username already exists. Please choose a different one.";
    }
    
    // Check if email already exists
    $checkEmail = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
    if (mysqli_num_rows($checkEmail) > 0) {
        return "Email is already registered. Please use a different email.";
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";
    
    if (!mysqli_query($conn, $sql)) {
        return "Error registering user: " . mysqli_error($conn);
    }
    
    return "Registration successful! You can now login.";
}

// Function to sanitize input data
function sanitize($data) {
    global $conn;
    return trim(mysqli_real_escape_string($conn, htmlspecialchars($data)));
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = registerUser();
    echo $result;
}
?>


<?php
// Include configuration file
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields are required!");
    }

    // Check username length
    if (strlen($username) < 4 || strlen($username) > 20) {
        die("Username must be between 4 and 20 characters long.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Check if username already exists
    $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    if ($stmt->rowCount() > 0) {
        die("Username already exists!");
    }

    // Check if email already exists
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->rowCount() > 0) {
        die("Email already registered!");
    }

    // Validate password strength
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
    }
    if (!preg_match('/[A-Z]/', $password)) {
        die("Password must contain at least one uppercase letter.");
    }
    if (!preg_match('/[0-9]/', $password)) {
        die("Password must contain at least one number.");
    }

    // Check if passwords match
    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        // Insert new user into database
        $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);

        // Redirect to login page after successful registration
        header("Location: login.php");
        exit();
    } catch(PDOException $e) {
        die("Error registering user: " . $e->getMessage());
    }
}
?>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
?>


<?php
// Initialize session
session_start();

// Security headers
header("X-Frame-Options: DENY");
header("Content-Security-Policy: default-src 'self';");
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1);

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// CSRF token generation on form load
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

$csrfToken = $_SESSION['csrf_token'];

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    $errors = [];

    // Validate inputs
    $username = isset($_POST["username"]) ? trim($_POST["username"]) : '';
    $email = isset($_POST["email"]) ? trim($_POST["email"]) : '';
    $password = isset($_POST["password"]) ? $_POST["password"] : '';
    $confirm_password = isset($_POST["confirm_password"]) ? $_POST["confirm_password"] : '';
    $csrfSubmittedToken = isset($_POST["csrf_token"]) ? $_POST["csrf_token"] : '';

    // Check CSRF token
    if ($csrfSubmittedToken !== $csrfToken) {
        die("Invalid request. Please try again.");
    }

    if (empty($username)) {
        $errors[] = "Username is required.";
    }
    if (empty($email)) {
        $errors[] = "Email is required.";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format.";
    }
    if (empty($password) || strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long.";
    }
    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match.";
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    if (empty($errors)) {
        // Check existing username or email
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt_username = $conn->prepare($checkUsernameQuery);
        $stmt_username->bind_param("s", $username);
        $stmt_username->execute();
        $result_username = $stmt_username->get_result();

        if ($result_username->num_rows > 0) {
            $errors[] = "Username already exists.";
        }

        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt_email = $conn->prepare($checkEmailQuery);
        $stmt_email->bind_param("s", $email);
        $stmt_email->execute();
        $result_email = $stmt_email->get_result();

        if ($result_email->num_rows > 0) {
            $errors[] = "Email already exists.";
        }

        // Insert new user
        if (empty($errors)) {
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt_insert = $conn->prepare($insertQuery);
            $stmt_insert->bind_param("sss", $username, $email, $hashed_password);

            if ($stmt_insert->execute()) {
                // Set session variables
                $_SESSION['user_id'] = $stmt_insert->insert_id;
                $_SESSION['username'] = $username;
                $_SESSION['email'] = $email;

                header("Location: dashboard.php");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again.";
            }
        }

        // Close statements
        $stmt_username->close();
        $stmt_email->close();
        $stmt_insert->close();
    }

    // Close connection
    $conn->close();

    // Display errors if any
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div style='color: red;'>$error</div><br>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="hidden" name="csrf_token" value="<?php echo $csrfToken; ?>">
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($conn, $username, $email, $password, $confirm_password) {
    // Initialize error array
    $errors = array();

    // Validate username
    if (empty($username)) {
        $errors['username'] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors['username'] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors['email'] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors['email'] = "Please enter a valid email address";
    }

    // Validate password
    if (empty($password)) {
        $errors['password'] = "Password is required";
    } elseif (strlen($password) < 8) {
        $errors['password'] = "Password must be at least 8 characters long";
    } elseif (!preg_match("#[A-Z]#", $password)) {
        $errors['password'] = "Password must contain at least one uppercase letter";
    } elseif (!preg_match("#[a-z]#", $password)) {
        $errors['password'] = "Password must contain at least one lowercase letter";
    } elseif (!preg_match("#[0-9]#", $password)) {
        $errors['password'] = "Password must contain at least one number";
    }

    // Confirm password
    if ($confirm_password != $password) {
        $errors['confirm_password'] = "Passwords do not match";
    }

    // Check for existing username and email in database
    if (empty($errors)) {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $errors['existing_user'] = "Username or email already exists";
        }
    }

    // If no errors, proceed to register the user
    if (empty($errors)) {
        // Hash password before storing in database
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, registration_date) VALUES (?, ?, ?, NOW())");
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            return array(
                'success' => true,
                'message' => "Registration successful!"
            );
        } else {
            return array(
                'success' => false,
                'errors' => array('database_error' => "Error registering user")
            );
        }
    } else {
        return array(
            'success' => false,
            'errors' => $errors
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    $result = registerUser($conn, $username, $email, $password, $confirm_password);

    if ($result['success']) {
        echo "Success! User registered.";
    } else {
        print_r($result['errors']);
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include database configuration file
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $errors = array();
    
    // Validate username
    if (empty($_POST['username'])) {
        $errors[] = "Username is required";
    } else {
        $username = $_POST['username'];
        // Check if username already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            $errors[] = "Username already exists";
        }
    }

    // Validate email
    if (empty($_POST['email'])) {
        $errors[] = "Email is required";
    } else {
        $email = $_POST['email'];
        // Check if email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            $errors[] = "Email already exists";
        }
    }

    // Validate password
    if (empty($_POST['password'])) {
        $errors[] = "Password is required";
    } else {
        $password = $_POST['password'];
        // Password strength validation
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }
        if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            $errors[] = "Password can only contain letters and numbers";
        }
    }

    // Validate confirm password
    if (empty($_POST['confirm_password'])) {
        $errors[] = "Confirm password is required";
    } else {
        $confirm_password = $_POST['confirm_password'];
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }
    }

    // Validate first name
    if (empty($_POST['first_name'])) {
        $errors[] = "First name is required";
    } else {
        $first_name = $_POST['first_name'];
        // Simple name validation
        if (!preg_match("/^[a-zA-Z ]*$/", $first_name)) {
            $errors[] = "Invalid first name";
        }
    }

    // Validate last name
    if (empty($_POST['last_name'])) {
        $errors[] = "Last name is required";
    } else {
        $last_name = $_POST['last_name'];
        // Simple name validation
        if (!preg_match("/^[a-zA-Z ]*$/", $last_name)) {
            $errors[] = "Invalid last name";
        }
    }

    // Validate date of birth
    if (empty($_POST['dob'])) {
        $errors[] = "Date of birth is required";
    } else {
        $dob = $_POST['dob'];
        // Convert to SQL date format and validate
        $date = DateTime::createFromFormat('Y-m-d', $dob);
        if ($date === false) {
            $errors[] = "Invalid date format for date of birth";
        }
    }

    // If there are no errors, proceed with registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Prepare and execute the SQL statement to insert user data
            $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, dob) VALUES (?, ?, ?, ?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $dob]);

            // Registration successful
            echo "Registration successful! You can now log in.";
        } catch (PDOException $e) {
            // Error occurred during database insertion
            $errors[] = "An error occurred while registering. Please try again later.";
            echo $e->getMessage();
        }
    } else {
        // Display errors to the user
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
    }

    // Close database connection
    $conn = null;
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'registration';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register user
function register_user() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get user input values
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "Please fill in all fields!";
            return;
        }

        // Check if username already exists
        $check_username = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $check_username);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $check_email);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password length
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters!";
            return;
        }

        // Confirm password match
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Sanitize the inputs
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $password = mysqli_real_escape_string($conn, $password);

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $sql)) {
            echo "Registration successful! Please login.";
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .container {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter Username">
            </div>
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter Email">
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter Password">
            </div>
            <div class="form-group">
                <input type="password" name="confirm_password" placeholder="Confirm Password">
            </div>
            <button type="submit">Register</button>
        </form>
        <p>Already have an account? <a href="login.php">Login here</a></p>
        <p><a href="index.php">Back to Home Page</a></p>
    </div>

    <?php
    // Call the register function
    if (isset($_POST['username'])) {
        register_user();
    }
    ?>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate input
        $error = "";
        
        // Check if username is provided
        if (empty($username)) {
            $error .= "Username is required.<br>";
        } else {
            // Check for invalid characters in username
            if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
                $error .= "Username contains invalid characters.<br>";
            }
        }
        
        // Check if email is provided and valid
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error .= "Valid email is required.<br>";
        } else {
            // Check if email already exists in database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            
            if ($stmt->rowCount() > 0) {
                $error .= "Email already exists.<br>";
            }
        }
        
        // Check password requirements
        if (empty($password)) {
            $error .= "Password is required.<br>";
        } else {
            // Password must be at least 8 characters long and contain at least one special character or number
            if (!preg_match("/^(?=.*[a-zA-Z])(?=.*\d)(?=.*[!@#$%^&*()_+=\-`~{}|:<>?]).{8,}$/", $password)) {
                $error .= "Password must be at least 8 characters long and contain at least one letter, number, and special character.<br>";
            }
        }
        
        // If there are errors, display them
        if ($error != "") {
            echo "<div class='alert alert-danger'>$error</div>";
        } else {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user into database
            try {
                $stmt = $conn->prepare("INSERT INTO users (username, email, password, created_at) VALUES (?, ?, ?, NOW())");
                $stmt->execute([$username, $email, $hashed_password]);
                
                // Registration successful
                echo "<div class='alert alert-success'>Registration successful! You can now login.</div>";
            } catch(PDOException $e) {
                die("Error: " . $e->getMessage());
            }
        }
    }
}

// Close database connection
$conn = null;

?>


<?php
session_start();
// Database configuration
$host = "localhost";
$username_db = "root"; // Change to your database username
$password_db = "";     // Change to your database password
$dbname = "mydatabase"; // Change to your database name

// Function to connect to the database
function db_connect() {
    global $host, $username_db, $password_db, $dbname;
    $conn = new mysqli($host, $username_db, $password_db, $dbname);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Function to register a user
function register_user() {
    global $conn;

    // Check if form is submitted
    if (!isset($_POST['submit'])) {
        return;
    }

    // Initialize variables and error array
    $username = $email = $password = $confirm_password = "";
    $errors = array();

    // Input validation
    if (empty($_POST["username"])) {
        $errors[] = "Username is required";
    } else {
        $username = validate_input($_POST["username"]);
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }
    }

    if (empty($_POST["email"])) {
        $errors[] = "Email is required";
    } else {
        $email = validate_input($_POST["email"]);
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
    }

    if (empty($_POST["password"])) {
        $errors[] = "Password is required";
    } else {
        $password = $_POST["password"];
        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long";
        }
    }

    if (empty($_POST["confirm_password"])) {
        $errors[] = "Confirm password is required";
    } else {
        $confirm_password = $_POST["confirm_password"];
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }
    }

    // Check for existing username or email
    if (empty($errors)) {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $errors[] = "Username or email already exists";
        }
    }

    // Display errors
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
        return;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        $stmt->execute();
        
        // Registration successful
        $_SESSION['registered'] = true;
        header("Location: login.php");
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }

    // Close the statement and connection
    $stmt->close();
}

// Function to sanitize input data
function validate_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Connect to database
$conn = db_connect();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type=text], input[type=password], input[type=email] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
    </style>
</head>
<body>

<?php
if (isset($_SESSION['registered'])) {
    echo "<div style='color:green;'>Registration successful! Please login.</div>";
    session_unset();
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <h2>Register New Account</h2>
    
    <?php register_user(); ?>

    <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>
    </div>

    <div class="form-group">
        <label for="confirm_password">Confirm Password:</label>
        <input type="password" id="confirm_password" name="confirm_password" required>
    </div>

    <button type="submit" name="submit">Register</button>
    
    <p>Already have an account? <a href="login.php">Login here</a></p>
</form>

<?php
// Close the database connection
$conn->close();
?>

</body>
</html>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'user_registration');

function registerUser($full_name, $email, $password) {
    // Connect to the database
    try {
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Validate input
        $full_name = filter_var($full_name, FILTER_SANITIZE_STRING);
        if (empty($full_name)) {
            return "Please enter your full name.";
        }

        $email = filter_var($email, FILTER_VALIDATE_EMAIL);
        if (!$email) {
            return "Please enter a valid email address.";
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Email already exists. Please use a different email address.";
        }

        // Validate password
        $password = filter_var($password, FILTER_SANITIZE_STRING);
        if (strlen($password) < 8) {
            return "Password must be at least 8 characters long.";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (full_name, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $full_name, $email, $hashed_password);

        if ($stmt->execute()) {
            return true;
        } else {
            return "Error registering user: " . $conn->error;
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
// include this file
// $result = registerUser("John Doe", "john@example.com", "securepassword123");
// if ($result === true) {
//     echo "Registration successful!";
// } else {
//     echo $result;
// }

?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Function to validate email format
function validate_email($email) {
    return preg_match("/^[^ \t
\r\0\x0B]+@[a-zA-Z0-9_\-\.]+\.[a-zA-Z]{2,}$/", $email);
}

// Function to validate password strength
function validate_password($password) {
    // At least 8 characters with at least one letter and one number
    return preg_match("/^(?=.*\d)(?=.*[A-Za-z]).{8,}$/", $password);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    $errors = array();
    
    // Retrieve input values
    $username = isset($_POST['username']) ? sanitize($_POST['username']) : '';
    $email = isset($_POST['email']) ? sanitize($_POST['email']) : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';
    $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';
    $full_name = isset($_POST['full_name']) ? sanitize($_POST['full_name']) : '';
    $dob = isset($_POST['dob']) ? sanitize($_POST['dob']) : '';
    $phone_number = isset($_POST['phone_number']) ? sanitize($_POST['phone_number']) : '';
    $address = isset($_POST['address']) ? sanitize($_POST['address']) : '';
    $city = isset($_POST['city']) ? sanitize($_POST['city']) : '';

    // Validate required fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        array_push($errors, "All required fields must be filled out");
    }

    // Validate email format
    if (!validate_email($email)) {
        array_push($errors, "Invalid email format");
    }

    // Validate password strength
    if (!validate_password($password)) {
        array_push($errors, "Password must be at least 8 characters with at least one letter and number");
    }

    // Check if passwords match
    if ($password != $confirm_password) {
        array_push($errors, "Passwords do not match");
    }

    // Check if username already exists
    $check_username_query = "SELECT username FROM users WHERE username=?";
    $stmt = mysqli_prepare($conn, $check_username_query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        array_push($errors, "Username already exists");
    }

    // If no errors, proceed with registration
    if (empty($errors)) {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare SQL statement for insertion
        $insert_query = "
            INSERT INTO users (
                username,
                email,
                password,
                full_name,
                dob,
                phone_number,
                address,
                city
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        ";

        $stmt = mysqli_prepare($conn, $insert_query);
        
        // Bind parameters to the statement
        mysqli_stmt_bind_param(
            $stmt,
            "ssssssss",
            $username,
            $email,
            $hashed_password,
            $full_name,
            $dob,
            $phone_number,
            $address,
            $city
        );

        // Execute the statement
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            header("Location: login.php"); // Redirect to login page after registration
            exit();
        } else {
            array_push($errors, "An error occurred during registration");
        }

    }

}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
</head>
<body>

<?php if (!empty($errors)): ?>
    <div class="error-messages">
        <?php foreach ($errors as $error): ?>
            <p><?php echo $error; ?></p>
        <?php endforeach; ?>
    </div>
<?php endif; ?>

<form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <h2>Registration Form</h2>

    <label for="username">Username:</label><br>
    <input type="text" id="username" name="username" placeholder="Enter your username"><br><br>

    <label for="email">Email:</label><br>
    <input type="email" id="email" name="email" placeholder="Enter your email"><br><br>

    <label for="password">Password:</label><br>
    <input type="password" id="password" name="password" placeholder="Enter password"><br><br>

    <label for="confirm_password">Confirm Password:</label><br>
    <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm password"><br><br>

    <label for="full_name">Full Name:</label><br>
    <input type="text" id="full_name" name="full_name" placeholder="Enter your full name"><br><br>

    <label for="dob">Date of Birth:</label><br>
    <input type="date" id="dob" name="dob"><br><br>

    <label for="phone_number">Phone Number:</label><br>
    <input type="tel" id="phone_number" name="phone_number" placeholder="Enter your phone number"><br><br>

    <label for="address">Address:</label><br>
    <input type="text" id="address" name="address" placeholder="Enter your address"><br><br>

    <label for="city">City:</label><br>
    <input type="text" id="city" name="city" placeholder="Enter your city"><br><br>

    <input type="submit" value="Register">
</form>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// User registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input data
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "Please fill in all required fields!";
            return;
        }

        if (!isValidUsername($username)) {
            echo "Invalid username. Username must be between 3 and 20 characters!";
            return;
        }

        if (!isValidEmail($email)) {
            echo "Invalid email format!";
            return;
        }

        if (!isValidPassword($password, $confirm_password)) {
            echo "Passwords do not match or do not meet the requirements!";
            return;
        }

        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            // You can start a session here or redirect to login page
            echo "Registration successful!";
            
            // Start session
            session_start();
            $_SESSION['user_id'] = mysqli_insert_id($conn);
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            $_SESSION['login_time'] = time();

            header("Location: dashboard.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        // Close statement
        mysqli_stmt_close($stmt);
    }
}

// Validation functions
function isValidUsername($username) {
    return preg_match('/^[a-zA-Z0-9_]+$/', $username) && strlen($username) >= 3 && strlen($username) <= 20;
}

function isValidEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

function isValidPassword($password, $confirm_password) {
    if ($password !== $confirm_password) {
        return false;
    }

    // Password must be at least 8 characters and contain at least one letter and one number
    if (preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*()_+]{8,}$/', $password)) {
        return true;
    }

    return false;
}

// Call registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {

        // Get and sanitize user input
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];

        // Validate username
        if (empty($username)) {
            echo "Username is required!";
            return;
        }
        if (!preg_match("/^[a-zA-Z0-9_]+$/", $username)) {
            echo "Username can only contain letters, numbers, and underscores!";
            return;
        }

        // Validate email
        if (empty($email)) {
            echo "Email is required!";
            return;
        }
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Validate password
        if (empty($password)) {
            echo "Password is required!";
            return;
        }
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }
        if (!preg_match("/[A-Z]/", $password)) {
            echo "Password must contain at least one uppercase letter!";
            return;
        }
        if (!preg_match("/[a-z]/", $password)) {
            echo "Password must contain at least one lowercase letter!";
            return;
        }
        if (!preg_match("/[0-9]/", $password)) {
            echo "Password must contain at least one number!";
            return;
        }
        if (!preg_match("/[\W_]/", $password)) {
            echo "Password must contain at least one special character!";
            return;
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_BCRYPT, array('cost' => 12));

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password, registration_date, last_login) 
                        VALUES (?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";
        
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" placeholder="Enter your username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" placeholder="Enter your email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" placeholder="Enter your password"><br>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

try {
    // Create a connection to the database
    $conn = new mysqli($host, $username, $password, $dbname);

    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate input data
        $fullName = htmlspecialchars(trim($_POST['full_name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        $errors = [];

        // Validate inputs
        if (empty($fullName) || empty($email) || empty($password)) {
            $errors[] = "All fields are required!";
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address!";
        }

        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long!";
        }

        if ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match!";
        }

        // If there are no errors
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

            // Prepare and execute SQL statement with placeholders
            $stmt = $conn->prepare("INSERT INTO users (full_name, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $fullName, $email, $hashedPassword);

            if ($stmt->execute()) {
                // Registration successful
                header("Location: login.php");
                exit();
            } else {
                // Error occurred during registration
                echo "Error: " . $stmt->error;
            }

            $stmt->close();
        }
    }

    // Close the database connection
    $conn->close();
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        h1 {
            color: #333;
            text-align: center;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Page</h1>
        
        <?php if (!empty($errors)): ?>
            <div class="error">
                <?php 
                    foreach ($errors as $error) {
                        echo "<p>" . $error . "</p>";
                    }
                ?>
            </div>
        <?php endif; ?>

        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="full_name">Full Name:</label>
                <input type="text" id="full_name" name="full_name" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit">Register</button>
        </form>

        <p>Already have an account? <a href="login.php">Login here</a></p>
    </div>
</body>
</html>


<?php
// Include database connection
require_once 'db.php';

function registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $dob) {
    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if passwords match
    if ($password !== $confirm_password) {
        return "Passwords do not match";
    }

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($db, $username);
    $email = mysqli_real_escape_string($db, $email);
    $first_name = mysqli_real_escape_string($db, $first_name);
    $last_name = mysqli_real_escape_string($db, $last_name);
    $dob = mysqli_real_escape_string($db, $dob);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($db, $check_username_query);
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($db, $check_email_query);
    if (mysqli_num_rows($result) > 0) {
        return "Email already exists";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password, first_name, last_name, dob)
            VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$dob')";

    if (mysqli_query($db, $sql)) {
        // Registration successful
        return true;
    } else {
        // Error occurred during registration
        return "Error: " . mysqli_error($db);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = trim($_POST['first_name']);
    $last_name = trim($_POST['last_name']);
    $dob = $_POST['dob'];

    $result = registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $dob);

    if ($result === true) {
        // Redirect to login page or dashboard
        header("Location: welcome.php");
        exit();
    } else {
        echo $result;
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'my_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Get user inputs
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all required fields");
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Username already exists");
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Email already exists");
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param('sss', $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        // Registration successful
        header("Location: login.php");
        exit();
    } else {
        die("Error registering user: " . $stmt->error);
    }

    // Close database connection
    $conn->close();
}

// Call the registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$dbname = "test";

// Create database connection
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password) {
    global $conn;

    try {
        // Check if username or email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return array('status' => false, 'message' => 'Username or email already exists');
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        
        if ($stmt->execute()) {
            $user_id = $stmt->insert_id;
            return array('status' => true, 'message' => 'Registration successful!', 'user_id' => $user_id);
        } else {
            return array('status' => false, 'message' => 'Registration failed. Please try again.');
        }
    } catch (Exception $e) {
        return array('status' => false, 'message' => 'Error: ' . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    
    if ($result['status']) {
        // Registration successful
        echo "Welcome, " . $username . "! Your user ID is: " . $result['user_id'];
        // You can redirect to a login page or dashboard here
    } else {
        // Display error message
        echo $result['message'];
    }
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user-registration';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Get form values
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Sanitize input data
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));
    $confirm_password = mysqli_real_escape_string($conn, trim($confirm_password));

    // Validate input data
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("Please fill in all fields");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username_query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $stmt_result = $stmt->get_result();

    if ($stmt_result->num_rows > 0) {
        die("Username already exists");
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($check_email_query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $stmt_result = $stmt->get_result();

    if ($stmt_result->num_rows > 0) {
        die("Email already exists");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insert_query);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        header("Location: registration_success.php");
        exit();
    } else {
        die("Registration failed: " . $conn->error);
    }
}

try {
    registerUser();
} catch (Exception $e) {
    echo "An error occurred: " . $e->getMessage();
}

$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'my_database';

// Connect to MySQL database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get form data
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm-password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            throw new Exception("All fields are required!");
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format!");
        }

        // Password validation
        $min_length = 8;
        if (strlen($password) < $min_length || !preg_match('/[a-zA-Z]/', $password) || !preg_match('/\d/', $password)) {
            throw new Exception("Password must be at least 8 characters long and contain letters and numbers!");
        }

        // Check if passwords match
        if ($password !== $confirm_password) {
            throw new Exception("Passwords do not match!");
        }

        // Check if username or email already exists
        $sql = "SELECT id FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "ss", $username, $email);
        mysqli_stmt_execute($stmt);

        $result = mysqli_stmt_get_result($stmt);
        if (mysqli_num_rows($result) > 0) {
            throw new Exception("Username or email already exists!");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql_insert = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt_insert = mysqli_prepare($conn, $sql_insert);
        mysqli_stmt_bind_param($stmt_insert, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt_insert)) {
            // Registration successful
            $_SESSION['message'] = "Registration successful! Please login.";
            header("Location: login.php");
            exit();
        } else {
            throw new Exception("Error registering user!");
        }
    }
}

// Handle registration process
try {
    registerUser();
} catch (Exception $e) {
    // Display error message
    echo $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        .error { color: red; margin-bottom: 10px; }
    </style>
</head>
<body>
    <h2>Register New Account</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <div>
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" placeholder="Enter username" required>
        </div>
        
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" placeholder="Enter email" required>
        </div>

        <div>
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" placeholder="Enter password" 
                   pattern="(?=.*\d)(?=.*[a-zA-Z]).{8,}" title="Must contain at least 8 characters with letters and numbers!" required>
        </div>

        <div>
            <label for="confirm-password">Confirm Password:</label><br>
            <input type="password" id="confirm-password" name="confirm-password" placeholder="Confirm password" required>
        </div>

        <button type="submit" name="register">Register</button>
    </form>
</body>
</html>


<?php
session_start();

// Database connection parameters
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['register'])) {
    // Get form data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Initialize error array
    $errors = [];

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long";
    } elseif (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
        $errors[] = "Password can only contain letters and numbers";
    }

    // Validate confirm password
    if (empty($confirm_password)) {
        $errors[] = "Confirm password is required";
    } elseif ($password != $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($check_username_query);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists";
            exit();
        }

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email_query);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists";
            exit();
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful! You can now log in.";
        } else {
            echo "Error registering user: " . $conn->error;
        }
    } else {
        foreach ($errors as $error) {
            echo $error . "<br>";
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .registration-container {
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h2 {
            text-align: center;
            color: #333;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .login-link {
            text-align: center;
            margin-top: 20px;
        }
        a {
            color: #4CAF50;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="registration-container">
        <h2>Registration Form</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit" name="register">Register</button>
        </form>

        <div class="login-link">
            Already have an account? <a href="login.php">Login here</a>
        </div>
    </div>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to register a user
    function registerUser($name, $email, $password) {
        global $conn;

        // Validate input data
        if (empty($name) || empty($email) || empty($password)) {
            return "All fields are required!";
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return "Invalid email format!";
        }

        // Password validation (minimum 8 characters with at least one letter and number)
        if (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/', $password)) {
            return "Password must be at least 8 characters long and contain at least one letter and one number!";
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            return "Email already exists!";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into the database
        $stmt = $conn->prepare("INSERT INTO users (name, email, password, registration_date) VALUES (?, ?, ?, NOW())");
        $stmt->bindParam(1, $name);
        $stmt->bindParam(2, $email);
        $stmt->bindParam(3, $hashed_password);

        try {
            $stmt->execute();
            // Set session variables
            $_SESSION['name'] = $name;
            $_SESSION['email'] = $email;
            $_SESSION['registered'] = true;

            return "Registration successful!";
        } catch(PDOException $e) {
            return "Error: " . $e->getMessage();
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Include the registration function
    include('register_function.php');

    // Call the registerUser function and display the result
    $result = registerUser($name, $email, $password);
    echo $result;
}
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if (isset($_POST['submit'])) {
    // Initialize error array
    $errors = array();

    // Required fields check
    if (!$_POST['username'] || !$_POST['email'] || !$_POST['password'] || !$_POST['confirm_password']) {
        $errors[] = "All fields are required.";
    }

    // Username already exists check
    $query = "SELECT username FROM users WHERE username = '" . mysqli_real_escape_string($conn, $_POST['username']) . "'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Username already exists.";
    }

    // Email already exists check
    $query = "SELECT email FROM users WHERE email = '" . mysqli_real_escape_string($conn, $_POST['email']) . "'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Email already exists.";
    }

    // Password validation
    if ($_POST['password'] != $_POST['confirm_password']) {
        $errors[] = "Passwords do not match.";
    }
    if (strlen($_POST['password']) < 8) {
        $errors[] = "Password must be at least 8 characters long.";
    }

    // If no errors, proceed with registration
    if (empty($errors)) {
        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        // Hash password
        $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

        // Insert into database
        $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$password')";
        if (!mysqli_query($conn, $query)) {
            die("Registration failed: " . mysqli_error($conn));
        }

        // Set success message and redirect to login page
        $_SESSION['reg_success'] = true;
        header("Location: login.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
</head>
<body>
    <?php if (isset($_SESSION['reg_success'])) { ?>
        <div style="color: green;">Registration successful! Please login.</div>
    <?php } ?>

    <?php if (!empty($errors)) { ?>
        <?php foreach ($errors as $error) { ?>
            <div style="color: red;"><?php echo $error; ?></div><br>
        <?php } ?>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>

        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$db_name = "user_registration";

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to validate email format
function isValidEmail($email) {
    return preg_match("/^([a-zA-Z0-9_\-\.]+)@((\.[a-zA-Z0-9_\-]+)+)\.([a-zA-Z]{2,4})$/", $email);
}

// Function to validate password (minimum 8 characters with at least one letter and number)
function isValidPassword($password) {
    return preg_match("/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*()_+}{\"':;?<>~`-]{8,}$/", $password);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Initialize error array
    $errors = array();

    // Sanitize and store input values
    $fullName = sanitizeInput($_POST['full_name']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    // Validate full name
    if (empty($fullName)) {
        $errors[] = "Full name is required";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!isValidEmail($email)) {
        $errors[] = "Invalid email format";
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif (!isValidPassword($password)) {
        $errors[] = "Password must be at least 8 characters with at least one letter and number";
    }

    // If no errors, proceed to registration
    if (count($errors) == 0) {
        // Check if email already exists in the database
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $errors[] = "Email already exists. Please use a different email address.";
        } else {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_BCRYPT, array('cost' => 12));

            // Insert new user into database
            $insertQuery = "INSERT INTO users (full_name, email, password) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("sss", $fullName, $email, $hashedPassword);

            if ($stmt->execute()) {
                // Registration successful
                header("Location: registration_success.php");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again later.";
            }
        }

        // Close statements
        $stmt->close();
    }

    // Close database connection
    $conn->close();

    // If errors exist, display them
    if (count($errors) > 0) {
        foreach ($errors as $error) {
            echo "<p class='error'>" . $error . "</p>";
        }
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Function to validate and hash password
function validatePassword($password) {
    // Minimum length check
    if (strlen($password) < 8) {
        throw new Exception("Password must be at least 8 characters long");
    }
    
    // Password complexity check
    if (!preg_match('/[A-Za-z]/', $password)) {
        throw new Exception("Password must contain letters");
    }
    if (!preg_match('/\d/', $password)) {
        throw new Exception("Password must contain numbers");
    }
    if (!preg_match('/[^A-Za-z\d]/', $password)) {
        throw new Exception("Password must contain special characters");
    }
    
    return password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
}

// Function to connect to the database
function connectToDatabase() {
    global $host, $dbname, $username, $password;
    
    try {
        $conn = new mysqli($host, $username, $password, $dbname);
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }
        return $conn;
    } catch (Exception $e) {
        die("Database connection error: " . $e->getMessage());
    }
}

// Function to handle user registration
function handleRegistration() {
    try {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            // Sanitize input data
            $username = sanitizeInput($_POST['username']);
            $email = sanitizeInput($_POST['email']);
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];
            
            // Check if passwords match
            if ($password !== $confirm_password) {
                throw new Exception("Passwords do not match");
            }
            
            // Validate and hash password
            $hashedPassword = validatePassword($password);
            
            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                throw new Exception("Invalid email format");
            }
            
            // Connect to database
            $conn = connectToDatabase();
            
            // Prepare SQL statement with placeholders
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            if (!$stmt) {
                throw new Exception("Prepare failed: " . $conn->error);
            }
            
            // Bind parameters
            $stmt->bind_param("sss", $username, $email, $hashedPassword);
            
            // Execute query
            if ($stmt->execute()) {
                echo "Registration successful! You can now <a href='login.php'>login</a>";
            } else {
                throw new Exception("Registration failed: " . $stmt->error);
            }
            
            // Close statement and connection
            $stmt->close();
            $conn->close();
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Call registration function
handleRegistration();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .registration-container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: -8px;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div class="registration-container">
        <h2>Register New Account</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all fields";
    }

    // Check username format (only letters and numbers)
    if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
        return "Username can only contain letters and numbers";
    }

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Check password requirements (at least 8 characters with letters and numbers)
    if (!(preg_match('/^[a-zA-Z0-9]+$/', $password) && strlen($password) >= 8)) {
        return "Password must be at least 8 characters long and contain only letters and numbers";
    }

    // Check if username or email already exists
    try {
        $stmt = $conn->prepare("SELECT username, email FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Username or email already exists";
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        $stmt->execute();

        // Close statement and connection
        $stmt->close();
        return "Registration successful!";

    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    }
}

// Call registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = registerUser();
    echo $result;
}

$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get form values and sanitize them
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Form validation
    $errors = array();

    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Check if username already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username");
        $stmt->bindParam(':username', $username);
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($row) {
            $errors[] = "Username already exists!";
        }
    } catch (PDOException $e) {
        die("Error checking username: " . $e->getMessage());
    }

    // If no errors, proceed to register
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Insert into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':password', $hashed_password);

            if ($stmt->execute()) {
                echo "Registration successful! You can now login.";
            } else {
                die("Error registering user!");
            }
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    } else {
        // Display errors
        foreach ($errors as $error) {
            echo "<p style='color:red;'>$error</p>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function for user registration
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get input values
        $firstName = sanitizeInput($_POST['first_name']);
        $lastName = sanitizeInput($_POST['last_name']);
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        
        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $checkUsernameQuery);
        
        if (mysqli_num_rows($result) > 0) {
            echo "<p class='error'>Username already exists!</p>";
            return;
        }
        
        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $checkEmailQuery);
        
        if (mysqli_num_rows($result) > 0) {
            echo "<p class='error'>Email already exists!</p>";
            return;
        }
        
        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_BCRYPT);
        
        // Insert user into database
        $insertQuery = "INSERT INTO users (first_name, last_name, username, email, password) 
                        VALUES ('$firstName', '$lastName', '$username', '$email', '$hashedPassword')";
        
        if (mysqli_query($conn, $insertQuery)) {
            echo "<p class='success'>Registration successful! You can now login.</p>";
        } else {
            echo "<p class='error'>Error registering user: " . mysqli_error($conn) . "</p>";
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name" required><br><br>
        
        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name" required><br><br>
        
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Include database connection file
include('db_connection.php');

function registerUser($username, $email, $password) {
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($GLOBALS['conn'], trim($username));
    $email = mysqli_real_escape_string($GLOBALS['conn'], trim($email));
    $password = trim($password);

    // Validate input fields
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($GLOBALS['conn'], $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($GLOBALS['conn'], $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Email already exists";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Validate password requirements
    $minPasswordLength = 8;
    if (strlen($password) < $minPasswordLength) {
        return "Password must be at least " . $minPasswordLength . " characters long";
    }

    if (!preg_match("/[A-Z]/", $password)) {
        return "Password must contain at least one uppercase letter";
    }

    if (!preg_match("/[0-9]/", $password)) {
        return "Password must contain at least one number";
    }

    if (!preg_match("/[^A-Za-z0-9]/", $password)) {
        return "Password must contain at least one special character";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($GLOBALS['conn'], $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (mysqli_stmt_execute($stmt)) {
        // Registration successful
        return true;
    } else {
        // Error occurred during registration
        return "Error registering user. Please try again later";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);

    if ($result === true) {
        // Start session for the new user
        session_start();
        $_SESSION['username'] = $username;
        header("Location: dashboard.php");
        exit();
    } else {
        echo "<p style='color:red'>" . $result . "</p>";
    }
}
?>


<?php
// Database connection
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "mydatabase";

$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Get user input
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $errors = array();

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } else {
        // Check for valid characters in username
        if (!preg_match("/^[a-zA-Z0-9_\-]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, underscores, and hyphens";
        }
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } else {
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address";
        }
    }

    // Validate password
    if (empty($password) || empty($confirm_password)) {
        $errors[] = "Password is required";
    } else {
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Password strength check
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }

        if (!preg_match('/[A-Z]/', $password)) {
            $errors[] = "Password must contain at least one uppercase letter";
        }

        if (!preg_match('/[a-z]/', $password)) {
            $errors[] = "Password must contain at least one lowercase letter";
        }

        if (!preg_match('/[0-9]/', $password)) {
            $errors[] = "Password must contain at least one number";
        }

        if (!preg_match('/[^A-Za-z0-9]/', $password)) {
            $errors[] = "Password must contain at least one special character";
        }
    }

    // If there are errors, display them
    if (count($errors) > 0) {
        foreach ($errors as $error) {
            echo "<div class='error'>" . $error . "</div>";
        }
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password) VALUES 
                ('" . mysqli_real_escape_string($conn, $username) . "',
                 '" . mysqli_real_escape_string($conn, $email) . "',
                 '" . $hashed_password . "')";

        if (mysqli_query($conn, $sql)) {
            // Redirect to login page or dashboard
            header('Location: login.php?success=Registration successful! Please login.');
            exit();
        } else {
            echo "<div class='error'>Error registering user. Please try again later.</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
        .container {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        input {
            display: block;
            margin-bottom: 10px;
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <input type="text" name="username" placeholder="Enter your username" required><br>
            <input type="email" name="email" placeholder="Enter your email" required><br>
            <input type="password" name="password" placeholder="Enter password" required><br>
            <input type="password" name="confirm_password" placeholder="Confirm password" required><br>
            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
// Database connection settings
$host = "localhost";
$user = "root";
$password = "";
$db_name = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Initialize variables
    $name = $email = $username = $password = "";
    $errors = array();

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize and validate inputs
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Validate name
        if (empty($name)) {
            array_push($errors, "Name is required");
        }

        // Validate email
        if (empty($email)) {
            array_push($errors, "Email is required");
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Invalid email format");
        }

        // Validate username
        if (empty($username)) {
            array_push($errors, "Username is required");
        }

        // Validate password
        if (empty($password)) {
            array_push($errors, "Password is required");
        } elseif (strlen($password) < 6) {
            array_push($errors, "Password must be at least 6 characters long");
        }

        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $check_username_query);
        if (mysqli_num_rows($result) > 0) {
            array_push($errors, "Username already exists");
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $check_email_query);
        if (mysqli_num_rows($result) > 0) {
            array_push($errors, "Email already exists");
        }

        // If no errors, proceed to registration
        if (count($errors) == 0) {
            // Hash the password before storing it
            $hashed_password = password_hash($password, PASSWORD_BCRYPT);

            // Insert user into database
            $query = "INSERT INTO users (name, email, username, password)
                      VALUES ('$name', '$email', '$username', '$hashed_password')";
            
            if (mysqli_query($conn, $query)) {
                echo "Registration successful! You can now login.";
                header("Location: login.php");
                exit();
            } else {
                array_push($errors, "Error occurred while registering. Please try again.");
            }
        }
    }

    // Display errors
    if (count($errors) > 0) {
        foreach ($errors as $error) {
            echo "<div style='color: red;'>$error</div>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
function registerUser($username, $email, $password) {
    // Database connection details
    $db_host = 'localhost';
    $db_user = 'root';
    $db_pass = '';
    $db_name = 'your_database';

    // Connect to database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Check for existing username or email
    $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username or email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error: " . $stmt->error;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);

    if ($result === true) {
        echo "Registration successful!";
    } else {
        echo $result;
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // Check password length (minimum 8 characters)
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        // Confirm password matches
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Check if username already exists
        $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
        if (mysqli_num_rows($check_username) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
        if (mysqli_num_rows($check_email) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash password before storing
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";

        if ($conn->query($sql) === TRUE) {
            echo "Registration successful! You can now log in.";
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Registration</title>
</head>
<body>
    <h2>Register New User</h2>
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
// Connect to database
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user inputs
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate inputs
    $error = "";

    // Check username
    if (empty($username)) {
        $error .= "Username is required <br>";
    } elseif (preg_match("/[^a-zA-Z0-9_]/", $username)) {
        $error .= "Username contains invalid characters <br>";
    }

    // Check email
    if (empty($email)) {
        $error .= "Email is required <br>";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error .= "Invalid email format <br>";
    }

    // Check password
    if (empty($password)) {
        $error .= "Password is required";
    } elseif (strlen($password) < 6) {
        $error .= "Password must be at least 6 characters long";
    }

    if ($error != "") {
        echo $error;
    } else {
        // Sanitize inputs
        $username = htmlspecialchars(strip_tags(trim($username)));
        $email = htmlspecialchars(strip_tags(trim($email)));

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $checkQuery);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
        } else {
            // Insert new user into database
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            $insertQuery = "INSERT INTO users (username, email, password)
                            VALUES ('$username', '$email', '$hashed_password')";

            if (mysqli_query($conn, $insertQuery)) {
                echo "Registration successful! You can now log in.";
            } else {
                echo "Error registering user: " . mysqli_error($conn);
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'user_registration';
$username = 'root';
$password = '';

// Connect to database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Register function
function register($name, $email, $password, $confirm_password, $conn) {
    // Validate input fields
    if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->rowCount() > 0) {
        return "Email already registered";
    }

    // Validate password match
    if ($password !== $confirm_password) {
        return "Passwords do not match";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$name, $email, $hashed_password]);
        return "Registration successful!";
    } catch(PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $result = register($name, $email, $password, $confirm_password, $conn);
    echo $result;
}

// Close database connection
$conn = null;
?>


<?php
// Include database configuration file
require_once 'config.php';

function registerUser() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm_password']);

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "Please fill in all required fields!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Database connection
        $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

        // Check for database connection errors
        if ($db->connect_error) {
            die("Connection failed: " . $db->connect_error);
        }

        // Check if username already exists
        $sql = "SELECT id FROM users WHERE username = ?";
        $stmt = $db->prepare($sql);
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            $stmt->close();
            return;
        }

        // Check if email already exists
        $sql = "SELECT id FROM users WHERE email = ?";
        $stmt = $db->prepare($sql);
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            $stmt->close();
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $db->prepare($sql);
        $stmt->bind_param('sss', $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $db->error;
        }

        // Close statement and database connection
        $stmt->close();
        $db->close();
    }
}

// Call the registration function
registerUser();

?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['register'])) {

    // Get user inputs
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm-password'];
    $first_name = $_POST['first-name'];
    $last_name = $_POST['last-name'];

    // Form validation
    $errors = array();

    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if (!preg_match('/^[a-zA-Z0-9]{3,20}$/', $username)) {
        $errors[] = "Username must be between 3 and 20 characters and contain only letters and numbers!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($password != $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Password validation
    if (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long!";
    }

    if (empty($errors)) {

        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
        } else {

            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $check_email_query);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if (mysqli_num_rows($result) > 0) {
                echo "Email already exists!";
            } else {

                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert user into database
                $insert_query = "INSERT INTO users (username, email, password_hash, first_name, last_name, registration_date, last_login) 
                                VALUES (?, ?, ?, ?, ?, NOW(), NOW())";

                $stmt = mysqli_prepare($conn, $insert_query);
                mysqli_stmt_bind_param($stmt, "sssss", $username, $email, $hashed_password, $first_name, $last_name);

                if (mysqli_stmt_execute($stmt)) {
                    echo "Registration successful!";
                } else {
                    echo "Error: " . mysqli_error($conn);
                }
            }
        }

    } else {
        foreach ($errors as $error) {
            echo "<div class='error'>" . $error . "</div>";
        }
    }

}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get form values
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $error = "All fields are required!";
    } else {

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error = "Invalid email format!";
        } else {

            // Check if password and confirm password match
            if ($password != $confirm_password) {
                $error = "Passwords do not match!";
            } else {

                // Password should be at least 8 characters and contain special characters
                if (strlen($password) < 8 || !preg_match('/[^a-zA-Z\d]/', $password)) {
                    $error = "Password must be at least 8 characters long and contain a special character!";
                } else {

                    // Check if username already exists
                    $check_username_query = "SELECT * FROM users WHERE username = ?";
                    $stmt = mysqli_prepare($conn, $check_username_query);
                    mysqli_stmt_bind_param($stmt, "s", $username);
                    mysqli_stmt_execute($stmt);
                    $result = mysqli_stmt_get_result($stmt);

                    if (mysqli_num_rows($result) > 0) {
                        $error = "Username already exists!";
                    } else {

                        // Check if email already exists
                        $check_email_query = "SELECT * FROM users WHERE email = ?";
                        $stmt = mysqli_prepare($conn, $check_email_query);
                        mysqli_stmt_bind_param($stmt, "s", $email);
                        mysqli_stmt_execute($stmt);
                        $result = mysqli_stmt_get_result($stmt);

                        if (mysqli_num_rows($result) > 0) {
                            $error = "Email already exists!";
                        } else {

                            // Hash the password
                            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                            // Insert user into database
                            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                            $stmt = mysqli_prepare($conn, $insert_query);
                            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

                            if (mysqli_stmt_execute($stmt)) {
                                $success = "Registration successful! You can now login.";
                            } else {
                                $error = "Error registering user. Please try again later.";
                            }
                        }
                    }

                    mysqli_stmt_close($stmt);
                }
            }
        }
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .success {
            color: green;
            margin-bottom: 10px;
        }

        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($success)) {
            echo "<div class='success'>$success</div>";
        } elseif (isset($error)) {
            echo "<div class='error'>$error</div>";
        }
        ?>

        <h2>User Registration</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$database = "my_database";

// Create database connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// User registration function
function registerUser() {
    global $conn;
    
    // Get form data
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $birthdate = $_POST['birthdate'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password)) {
        die("All fields are required!");
    }

    // Validate password requirements
    if (!validatePassword($password)) {
        die("Password must be at least 8 characters long and contain both letters and numbers.");
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address!");
    }

    // Check if email already exists in the database
    $check_email = "SELECT id FROM users WHERE email = ?";
    $stmt_check = $conn->prepare($check_email);
    $stmt_check->bind_param("s", $email);
    $stmt_check->execute();
    $result = $stmt_check->get_result();

    if ($result->num_rows > 0) {
        die("Email already exists!");
    }

    // Check if username already exists in the database
    $check_username = "SELECT id FROM users WHERE username = ?";
    $stmt_user = $conn->prepare($check_username);
    $stmt_user->bind_param("s", $username);
    $stmt_user->execute();
    $result_user = $stmt_user->get_result();

    if ($result_user->num_rows > 0) {
        die("Username already exists!");
    }

    // Format birthdate
    if (!empty($birthdate)) {
        list($year, $month, $day) = explode("-", $birthdate);
        $birthdate_formatted = "$year-$month-$day";
    } else {
        $birthdate_formatted = NULL;
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Prepare the SQL statement
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, birthdate) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("ssss", $username, $email, $hashed_password, $birthdate_formatted);
        
        if ($stmt->execute()) {
            // Registration successful
            header("Location: login.php?success=Registration+successful");
            exit();
        } else {
            die("Error registering user. Please try again.");
        }
    } catch (Exception $e) {
        die("An error occurred while processing your request: " . $e->getMessage());
    }
}

// Password validation function
function validatePassword($password) {
    // Minimum 8 characters, at least one letter and one number
    if (preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/', $password)) {
        return true;
    } else {
        return false;
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br><br>
        <input type="email" name="email" placeholder="Email" required><br><br>
        <input type="password" name="password" placeholder="Password" required><br><br>
        <input type="date" name="birthdate"><br><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
        $last_name = mysqli_real_escape_string($conn, $_POST['last_name']);
        $phone_number = mysqli_real_escape_string($conn, $_POST['phone_number']);

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $_SESSION['error'] = "All fields are required";
            header("Location: register.php");
            return;
        }

        if ($password != $confirm_password) {
            $_SESSION['error'] = "Passwords do not match";
            header("Location: register.php");
            return;
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $checkUsernameQuery);
        
        if (mysqli_num_rows($result) > 0) {
            $_SESSION['error'] = "Username already exists";
            header("Location: register.php");
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $checkEmailQuery);
        
        if (mysqli_num_rows($result) > 0) {
            $_SESSION['error'] = "Email already exists";
            header("Location: register.php");
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name, phone_number)
                VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$phone_number')";

        if (mysqli_query($conn, $sql)) {
            $_SESSION['success'] = "Registration successful! Please login.";
            header("Location: login.php");
        } else {
            $_SESSION['error'] = "Error registering user: " . mysqli_error($conn);
            header("Location: register.php");
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .container {
            width: 400px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Form</h1>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" required>
            </div>
            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" required>
            </div>
            <div class="form-group">
                <label for="phone_number">Phone Number:</label>
                <input type="text" id="phone_number" name="phone_number" required>
            </div>
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Initialize variables and set to empty values
    $username = "";
    $email = "";
    $password = "";
    $confirm_password = "";
    
    // Array to hold error messages
    $errors = array();
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate form inputs
        if (empty($username)) {
            array_push($errors, "Username is required");
        }
        if (empty($email)) {
            array_push($errors, "Email is required");
        }
        if (empty($password)) {
            array_push($errors, "Password is required");
        }
        if ($password != $confirm_password) {
            array_push($errors, "Passwords do not match");
        }
        
        // Check if username already exists
        $check_username = mysqli_query($conn, "SELECT * FROM users WHERE username='$username'");
        if (mysqli_num_rows($check_username) > 0) {
            array_push($errors, "Username already exists");
        }
        
        // Check if email already exists
        $check_email = mysqli_query($conn, "SELECT * FROM users WHERE email='$email'");
        if (mysqli_num_rows($check_email) > 0) {
            array_push($errors, "Email already exists");
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Invalid email format");
        }
        
        // Password validation
        if (strlen($password) < 8) {
            array_push($errors, "Password must be at least 8 characters");
        }
        
        // If no errors
        if (count($errors) == 0) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            
            if ($stmt->execute()) {
                echo "Registration successful!";
            } else {
                array_push($errors, "Error registering user");
            }
        }
    }
    
    // Display errors
    foreach ($errors as $error) {
        echo "<p class='error'>" . $error . "</p>";
    }
}

// Call the registration function
if (isset($_POST['register'])) {
    registerUser();
}
?>


<?php
// Database connection parameters
$host = "localhost";
$db_username = "root";
$db_password = "";
$db_name = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Get form data
    $first_name = htmlspecialchars($_POST['first_name']);
    $last_name = htmlspecialchars($_POST['last_name']);
    $email = htmlspecialchars($_POST['email']);
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];
    
    // Validate input fields
    if (empty($first_name) || empty($last_name) || empty($email) || empty($username) || empty($password)) {
        echo "All fields must be filled out!";
        return;
    }

    if (strlen($first_name) < 2 || strlen($last_name) < 2) {
        echo "Name must be at least 2 characters long!";
        return;
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        return;
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT username FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return;
    }

    // Check password strength
    if (strlen($password) < 6) {
        echo "Password must be at least 6 characters long!";
        return;
    }

    if (!preg_match("#[A-Z]#", $password)) {
        echo "Password must contain at least one uppercase letter!";
        return;
    }

    if (!preg_match("#[0-9]#", $password)) {
        echo "Password must contain at least one number!";
        return;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $registerQuery = "INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $registerQuery);
    mysqli_stmt_bind_param($stmt, "sssss", $first_name, $last_name, $email, $username, $hashed_password);

    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful!";
        // Redirect to login page after 3 seconds
        header("refresh:3; url=login.php");
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }

    mysqli_close($conn);
}

// Display registration form
function displayForm() {
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .form-container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Registration Form</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" id="registrationForm">
            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" required>
            </div>

            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit" name="register">Register</button>
        </form>
    </div>
</body>
</html>
<?php
}

// Check if form is submitted and process registration
if (isset($_POST['register'])) {
    registerUser();
} else {
    displayForm();
}
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to register a user
    function registerUser($conn) {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Sanitize and validate input
            $username = htmlspecialchars(trim($_POST['username']));
            $email = htmlspecialchars(trim($_POST['email']));
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            // Check if all fields are filled in
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
                throw new Exception("All fields must be filled in");
            }

            // Validate username length
            if (strlen($username) < 3 || strlen($username) > 50) {
                throw new Exception("Username must be between 3 and 50 characters");
            }

            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                throw new Exception("Invalid email format");
            }

            // Check if passwords match
            if ($password !== $confirm_password) {
                throw new Exception("Passwords do not match");
            }

            // Minimum password length check
            if (strlen($password) < 6) {
                throw new Exception("Password must be at least 6 characters long");
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Check if username already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                throw new Exception("Username already exists");
            }

            // Check if email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                throw new Exception("Email already registered");
            }

            // Insert new user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password]);

            // Redirect to login page after successful registration
            header("Location: login.php?success=1");
            exit();
        }
    }

    // Call the registerUser function
    registerUser($conn);

} catch (Exception $e) {
    // Display error message
    echo "Error: " . $e->getMessage();
}
?>


<?php
// Database connection
$host = "localhost";
$db_username = "root";
$db_password = "";
$db_name = "user_registration";

$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

// Registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get user inputs
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else {
            // Check for valid username format (letters, numbers, underscores and hyphens only)
            if (!preg_match("/^[a-zA-Z0-9_\-]*$/", $username)) {
                $errors[] = "Username can only contain letters, numbers, underscores and hyphens";
            }
            // Check if username already exists
            $check_username_query = "SELECT id FROM users WHERE username = ?";
            $stmt = mysqli_prepare($conn, $check_username_query);
            mysqli_stmt_bind_param($stmt, "s", $username);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $errors[] = "Username already exists";
            }
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } else {
            // Check if valid email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format";
            }
            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $check_email_query);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $errors[] = "Email already exists";
            }
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } else {
            // Password must be at least 8 characters long
            if (strlen($password) < 8) {
                $errors[] = "Password must be at least 8 characters long";
            }
            // Check password strength (at least one uppercase, lowercase, number and special character)
            if (!preg_match("/^(?=.*\d)(?=.*[A-Za-z])(?=.*\W).{8,}$/", $password)) {
                $errors[] = "Password must contain at least one number, one letter, one special character, and be at least 8 characters long";
            }
            // Check if password matches confirm password
            if ($password !== $confirm_password) {
                $errors[] = "Passwords do not match";
            }
        }

        // Check terms checkbox
        if (!isset($_POST['terms'])) {
            $errors[] = "You must agree to the terms and conditions";
        }

        // If no errors, register user
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful! You can now login.";
                // Redirect to login page after 3 seconds
                header("Refresh: 3; url=login.php");
            } else {
                echo "Error registering user: " . mysqli_error($conn);
            }
        } else {
            foreach ($errors as $error) {
                echo "<div class='error'>" . $error . "</div><br>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Include database connection file
include('db_connection.php');

function registerUser($username, $email, $password) {
    try {
        // Check if username is valid
        if (!preg_match("/^[a-zA-Z0-9_\-]+$/", $username)) {
            throw new Exception("Invalid username format");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check password requirements (at least 8 characters with letters and numbers)
        if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/", $password)) {
            throw new Exception("Password must be at least 8 characters long and contain both letters and numbers");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username already exists");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already registered");
        }

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        $stmt->execute();

        return true;

    } catch (Exception $e) {
        // Display error message
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (registerUser($username, $email, $password)) {
        // Registration successful
        header("Location: welcome.php");
        exit();
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_user = 'root';
$db_pass = '';
$db_name = 'registration';

// Connect to database
$conn = new mysqli($host, $db_user, $db_pass, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all required fields");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $check_username = "SELECT id FROM users WHERE username = '$username'";
    $result = $conn->query($check_username);
    
    if ($result->num_rows > 0) {
        die("Username already exists");
    }

    // Check if email already exists
    $check_email = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($check_email);

    if ($result->num_rows > 0) {
        die("Email already exists");
    }

    // Insert user data into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$hashed_password')";

    if ($conn->query($sql)) {
        // Set cookies
        setcookie('username', $username, time() + 3600);
        setcookie('email', $email, time() + 3600);

        // Redirect to success page
        header("Location: login.php");
        die();
    } else {
        die("Error registering user: " . $conn->error);
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$db_user = 'root';
$db_password = '';
$db_name = 'my_database';

// Connect to database
$conn = new mysqli($host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function registerUser($username, $email, $password, $conn) {
    // Check if username already exists
    $check_username = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($check_username);

    if ($result->num_rows > 0) {
        die("Username already exists!");
    }

    // Check if email already exists
    $check_email = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($check_email);

    if ($result->num_rows > 0) {
        die("Email already exists!");
    }

    // Validate password strength
    if (!preg_match("#^(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$#", $password)) {
        die("Password must be at least 8 characters and contain uppercase letters and numbers!");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password_hash) 
            VALUES ('$username', '$email', '$hashed_password')";

    if ($conn->query($sql) === TRUE) {
        echo "Registration successful!";
        header("Location: login.php"); // Redirect to login page
        exit();
    } else {
        die("Error: " . $sql . "<br>" . $conn->error);
    }
}

// Handle form submission
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Simple input validation
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all fields!");
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Call registration function
    registerUser($username, $email, $password, $conn);
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h1>Register Here</h1>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser($username, $email, $password, $conn) {
    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $checkQuery);

    if (mysqli_num_rows($result) > 0) {
        return "Username or email already exists";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";
    
    if (mysqli_query($conn, $insertQuery)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password, $conn);

    if ($result === "Registration successful!") {
        // Redirect to login page or dashboard
        header("Location: login.php");
        exit();
    } else {
        echo $result;
    }
}

mysqli_close($conn);
?>


<?php
// register.php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $errors = array();
    
    // Required fields check
    if (empty($_POST['username']) || empty($_POST['email']) || empty($_POST['password']) || empty($_POST['confirm_password'])) {
        $errors[] = "All fields are required!";
    }
    
    // Email validation
    if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format!";
    }
    
    // Password validation
    if (strlen($_POST['password']) < 8) {
        $errors[] = "Password must be at least 8 characters long!";
    }
    if (!preg_match('/^[a-zA-Z0-9]+$/', $_POST['username'])) {
        $errors[] = "Username can only contain letters and numbers!";
    }
    if ($_POST['password'] != $_POST['confirm_password']) {
        $errors[] = "Passwords do not match!";
    }
    
    // Database connection
    $db_username = 'root';
    $db_password = '';
    $db_name = 'test_db';
    $db_host = 'localhost';
    
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Check if username or email already exists
    $username = $_POST['username'];
    $email = $_POST['email'];
    
    $sql = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Username or email already exists!";
    }
    
    // If no errors, register the user
    if (empty($errors)) {
        $password_hash = password_hash($_POST['password'], PASSWORD_DEFAULT);
        
        $sql_insert = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt_insert = mysqli_prepare($conn, $sql_insert);
        mysqli_stmt_bind_param($stmt_insert, "sss", $username, $email, $password_hash);
        
        if (mysqli_stmt_execute($stmt_insert)) {
            // Registration successful
            header("Location: welcome.php");
            exit();
        } else {
            $errors[] = "Error registering user!";
        }
    }
    
    mysqli_close($conn);
}

// Display registration form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
</head>
<body>
    <?php if (!empty($errors)): ?>
        <div class="error-messages">
            <?php foreach ($errors as $error): ?>
                <p><?php echo htmlspecialchars($error); ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>
        
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>
        
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>
        
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "myDB";

$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Register user function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get values from the form
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Sanitize input data
        $username = htmlspecialchars($username);
        $email = htmlspecialchars($email);
        $password = htmlspecialchars($password);
        $confirm_password = htmlspecialchars($confirm_password);
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            header("Location: registration.php?error=Please fill in all fields");
            exit();
        }
        
        if ($password !== $confirm_password) {
            header("Location: registration.php?error=Passwords do not match");
            exit();
        }
        
        // Check if username already exists
        $check_username = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($check_username);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            header("Location: registration.php?error=Username already exists");
            exit();
        }
        
        // Check if email already exists
        $check_email = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            header("Location: registration.php?error=Email already exists");
            exit();
        }
        
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            // Registration successful
            header("Location: login.php?success=Registration successful. Please login.");
            exit();
        } else {
            // Error registering user
            header("Location: registration.php?error=Error registering user");
            exit();
        }
    }
}

// Close the database connection
$conn->close();

?>


<?php
// Connect to database
$host = "localhost";
$dbusername = "root";
$dbpassword = "";
$dbname = "mydatabase";

$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Initialize variables and set to empty by default
    $username = "";
    $email = "";
    $password = "";
    $confirm_password = "";

    // Set error flags
    $error_username = false;
    $error_email = false;
    $error_password = false;
    $error_confirm_password = false;

    // Check if username is set and not empty
    if (isset($_POST['username'])) {
        $username = $_POST['username'];
        if ($username === "") {
            $error_username = true;
        } else {
            // Validate username format (letters and numbers only)
            if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {
                $error_username = true;
            }
        }
    }

    // Check if email is set and not empty
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        if ($email === "") {
            $error_email = true;
        } else {
            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $error_email = true;
            }
        }
    }

    // Check password and confirm password
    if (isset($_POST['password'])) {
        $password = $_POST['password'];
        if ($password === "") {
            $error_password = true;
        } else {
            // Minimum 6 characters
            if (strlen($password) < 6) {
                $error_password = true;
            }
        }
    }

    if (isset($_POST['confirm_password'])) {
        $confirm_password = $_POST['confirm_password'];
        if ($confirm_password === "") {
            $error_confirm_password = true;
        } else {
            // Passwords must match
            if ($password !== $confirm_password) {
                $error_confirm_password = true;
            }
        }
    }

    // If all validations pass
    if (!$error_username && !$error_email && !$error_password && !$error_confirm_password) {
        // Check if username or email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                // User already exists
                echo "Username or email already exists.";
            } else {
                // Generate unique user ID
                $user_id = uniqid('', true);

                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert into database
                $stmt = $conn->prepare("INSERT INTO users (id, username, email, password) VALUES (?, ?, ?, ?)");
                $stmt->bind_param("ssss", $user_id, $username, $email, $hashed_password);
                $stmt->execute();

                // Close statement and connection
                $stmt->close();
                $conn->close();

                // Redirect to login page or dashboard
                header('Location: login.php?registered=success');
                exit;
            }
        } catch (mysqli_sql_exception $e) {
            echo "Error: " . $e->getMessage();
        }
    } else {
        // Handle errors
        if ($error_username) {
            echo "Username is invalid.";
        }
        if ($error_email) {
            echo "Email is invalid or already taken.";
        }
        if ($error_password) {
            echo "Password must be at least 6 characters.";
        }
        if ($error_confirm_password) {
            echo "Passwords do not match.";
        }
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    // Initialize variables and error array
    $errors = [];
    $username = $email = $password = '';

    // Sanitize inputs
    function sanitize($data) {
        return htmlspecialchars(mysqli_real_escape_string($conn, trim($data)));
    }

    if (empty($_POST['username'])) {
        $errors[] = "Username is required";
    } else {
        $username = sanitize($_POST['username']);
        if (strlen($username) > 20) {
            $errors[] = "Username must be less than or equal to 20 characters";
        }
    }

    if (empty($_POST['email'])) {
        $errors[] = "Email is required";
    } else {
        $email = sanitize($_POST['email']);
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
    }

    if (empty($_POST['password'])) {
        $errors[] = "Password is required";
    } else {
        $password = $_POST['password'];
        // Password strength check
        if (strlen($password) < 6 || !preg_match('/[A-Z]/', $password) || !preg_match('/\d/', $password)) {
            $errors[] = "Password must be at least 6 characters long and contain an uppercase letter and a number";
        }
    }

    // Check for existing username or email
    if (empty($errors)) {
        $stmt_check = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ? OR email = ?");
        mysqli_stmt_bind_param($stmt_check, "ss", $username, $email);
        mysqli_stmt_execute($stmt_check);
        $result = mysqli_stmt_get_result($stmt_check);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username or email already exists";
        }
    }

    // Process registration if no errors
    if (empty($errors)) {
        $password_hashed = password_hash($password, PASSWORD_DEFAULT);
        $stmt_insert = mysqli_prepare($conn, "INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        mysqli_stmt_bind_param($stmt_insert, "sss", $username, $email, $password_hashed);

        if (mysqli_stmt_execute($stmt_insert)) {
            echo "Registration successful!";
            header("Refresh: 2; url=login.php");
            exit();
        } else {
            die("Error: " . mysqli_error($conn));
        }
    } else {
        foreach ($errors as $error) {
            echo "<div style='color: red;'>$error</div><br>";
        }
    }

    // Close statements
    if (isset($stmt_check)) mysqli_stmt_close($stmt_check);
    if (isset($stmt_insert)) mysqli_stmt_close($stmt_insert);
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'testdb';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Basic validation
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields.";
            return false;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match.";
            return false;
        }

        // Sanitize input data
        $username = mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($username)));
        $email = mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($email)));

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
        $result = mysqli_query($conn, $check_query);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists.";
            return false;
        }

        // Insert new user into the database
        $insert_query = "INSERT INTO users (username, email, password)
                         VALUES ('$username', '$email', '$hashed_password')";

        if (mysqli_query($conn, $insert_query)) {
            echo "Registration successful!";
            // Redirect to login page after registration
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
            return false;
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!-- HTML form for registration -->
<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Create Account</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


// Use prepared statements to prevent SQL injection
$stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
$stmt->bind_param("sss", $username, $email, $hashed_password);
$stmt->execute();


<?php
// Database connection
$host = 'localhost';
$dbname = 'mydatabase';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Registration function
function registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $conn) {
    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "All fields are required!";
    }

    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        return "Email already exists!";
    }

    // Sanitize input data
    $username = htmlspecialchars(trim($username));
    $email = htmlspecialchars(trim($email));
    $first_name = htmlspecialchars(trim($first_name));
    $last_name = htmlspecialchars(trim($last_name));

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name]);

        return "Registration successful! You can now login.";
    } catch(PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Call the registration function
    $result = registerUser($_POST['username'], $_POST['email'], $_POST['password'], $_POST['confirm_password'], $_POST['first_name'], $_POST['last_name'], $conn);

    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .container {
            width: 400px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f9f9f9;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }

        button:hover {
            background-color: #45a049;
        }

        .message {
            color: red;
            font-size: 12px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <input type="text" id="username" name="username" placeholder="Enter username" required>
                <span class="message"><?php if (isset($result)) { echo $result; } ?></span>
            </div>

            <div class="form-group">
                <input type="email" id="email" name="email" placeholder="Enter email" required>
            </div>

            <div class="form-group">
                <input type="password" id="password" name="password" placeholder="Enter password" required>
            </div>

            <div class="form-group">
                <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm password" required>
            </div>

            <div class="form-group">
                <input type="text" id="first_name" name="first_name" placeholder="Enter first name" required>
            </div>

            <div class="form-group">
                <input type="text" id="last_name" name="last_name" placeholder="Enter last name" required>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $db_username, $db_password, $db_name);

// Check if connection is successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all required fields.";
        return;
    }
    
    if ($password !== $confirm_password) {
        echo "Passwords do not match.";
        return;
    }
    
    // Check if username already exists
    $check_username = "SELECT * FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        echo "Username already exists. Please choose a different username.";
        return;
    }
    
    // Check if email already exists
    $check_email = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($check_email);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        echo "Email already registered. Please use a different email.";
        return;
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $insert_user = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insert_user);
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt->execute()) {
        echo "Registration successful! You can now login.";
        // Redirect to login page
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user. Please try again later.";
    }
}

// Close database connection
$conn->close();
?>



<?php
// Include necessary files
include('config.php');

function registerUser($fullName, $email, $username, $password) {
    global $conn;

    // Validate input
    if (empty($fullName) || empty($email) || empty($username) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Check for invalid characters in fullName
    if (!preg_match("/^[a-zA-Z-' ]*$/", $fullName)) {
        return "Full Name must only contain letters, spaces, and apostrophes";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if email already exists
    $checkEmail = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $checkEmail->bind_param("s", $email);
    $checkEmail->execute();
    $result = $checkEmail->get_result();
    
    if ($result->num_rows > 0) {
        return "Email already exists";
    }

    // Validate username format
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username must only contain letters, numbers, and underscores";
    }

    // Check if username already exists
    $checkUsername = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $checkUsername->bind_param("s", $username);
    $checkUsername->execute();
    $result = $checkUsername->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists";
    }

    // Validate password requirements
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long";
    }

    // Check for uppercase letter
    if (!preg_match("/[A-Z]/", $password)) {
        return "Password must contain at least one uppercase letter";
    }

    // Check for lowercase letter
    if (!preg_match("/[a-z]/", $password)) {
        return "Password must contain at least one lowercase letter";
    }

    // Check for number
    if (!preg_match("/[0-9]/", $password)) {
        return "Password must contain at least one number";
    }

    // Check for special character
    if (!preg_match("/[^A-Za-z0-9]/", $password)) {
        return "Password must contain at least one special character";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (full_name, email, username, password) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("ssss", $fullName, $email, $username, $hashedPassword);
    
    if ($stmt->execute()) {
        // Registration successful
        return "Registration successful! Please login.";
    } else {
        return "Error registering user. Please try again later.";
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    // Create a new PDO instance
    $pdo = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// CSRF token
if (!isset($_SESSION['token'])) {
    $_SESSION['token'] = bin2hex(random_bytes(32));
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Registration function
function registerUser($pdo, $username, $email, $password) {
    try {
        // Check if username is already taken
        $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        if ($stmt->rowCount() > 0) {
            return "Username already exists!";
        }

        // Check if email is already registered
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);

        if ($stmt->rowCount() > 0) {
            return "Email already registered!";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $stmt = $pdo->prepare("INSERT INTO users (username, email, password, created_at) VALUES (?, ?, ?, NOW())");
        $stmt->execute([$username, $email, $hashed_password]);

        return "Registration successful!";
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Verify CSRF token
    if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['token']) {
        die("Security error. Please try again.");
    }

    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input
    $errors = array();

    if (empty($username) || empty($email) || empty($password)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long!";
    }

    if (empty($errors)) {
        // Call registration function
        $result = registerUser($pdo, $username, $email, $password);
        echo $result;
    } else {
        foreach ($errors as $error) {
            echo $error . "<br>";
        }
    }
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create an Account</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
        <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['token']; ?>">
        
        <label>Username:</label><br>
        <input type="text" name="username" required><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br>

        <label>Password:</label><br>
        <input type="password" name="password" required><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password" required><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get input values
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate inputs
    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
        die("Please fill in all required fields.");
    }

    // Sanitize inputs
    $firstName = htmlspecialchars(strip_tags(trim($firstName)));
    $lastName = htmlspecialchars(strip_tags(trim($lastName)));
    $email = htmlspecialchars(strtolower(trim($email)));
    $username = htmlspecialchars(strip_tags(trim($username)));

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Check if username and email already exist in the database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
        $stmt->execute(array(':username' => $username, ':email' => $email));
        
        if ($stmt->rowCount() > 0) {
            die("Username or email already exists.");
        }
    } catch(PDOException $e) {
        echo "Error checking user: " . $e->getMessage();
    }

    // Validate password requirements
    if (strlen($password) < 8 || !preg_match('/[a-zA-Z]/', $password) || !preg_match('/\d/', $password)) {
        die("Password must be at least 8 characters long and contain at least one letter and one number.");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, username, password) 
                               VALUES (:firstName, :lastName, :email, :username, :password)");
        
        $stmt->execute(array(
            ':firstName' => $firstName,
            ':lastName' => $lastName,
            ':email' => $email,
            ':username' => $username,
            ':password' => $hashed_password
        ));
        
        // Redirect to success page
        header("Location: registration_success.php");
    } catch(PDOException $e) {
        echo "Error registering user: " . $e->getMessage();
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['register'])) {
    // Sanitize inputs
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = htmlspecialchars(trim($_POST['first_name']));
    $last_name = htmlspecialchars(trim($_POST['last_name']));

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        die("Please fill in all required fields.");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match.");
    }

    // Check password strength
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Check for existing username or email
    $sql = "SELECT id FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        die("Username or email already exists.");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, email, password, first_name, last_name) 
            VALUES (?, ?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sssss", $username, $email, $hashed_password, $first_name, $last_name);

    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful!";
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }
}

// Close connection
mysqli_close($conn);
?>


<?php
// Include configuration file
include('config.php');

// Function for user registration
function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all fields";
            return;
        }

        // Sanitize inputs to prevent SQL injection
        $username = htmlspecialchars($username);
        $email = htmlspecialchars($email);
        
        // Password hashing
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($GLOBALS['conn'], $check_username_query);
        mysqli_stmt_bind_param($stmt, 's', $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($GLOBALS['conn'], $check_email_query);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists";
            return;
        }

        // Insert new user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($GLOBALS['conn'], $insert_query);
        mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful! Welcome, $username!";
        } else {
            echo "Error registering user: " . mysqli_error($GLOBALS['conn']);
        }

        // Close database connection
        mysqli_close($GLOBALS['conn']);
    }
}

// Display registration form
echo '
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register New User</h2>
    <form method="post" action="">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Register">
    </form>

    Already have an account? <a href="login.php">Login here</a>
</body>
</html>';
?>



<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'your_username';
$password_db = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "Please fill in all fields!";
            return;
        }

        // Check username format
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            echo "Username can only contain letters, numbers, and underscores!";
            return;
        }

        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        // Check password requirements
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        if (!preg_match("#[A-Z]#", $password)) {
            echo "Password must contain at least one uppercase letter!";
            return;
        }

        if (!preg_match("#[0-9]#", $password)) {
            echo "Password must contain at least one number!";
            return;
        }

        if (!preg_match("#[!@#$%^&*()_+}{\":;'?/>#<,.-]#", $password)) {
            echo "Password must contain at least one special character!";
            return;
        }

        // Check password match
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, [
            'cost' => 12,
            'salt' => mysqli_real_escape_string($conn, mt_rand())
        ]);

        // Check if username already exists
        $stmt = $conn->prepare("SELECT username FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already taken!";
            return;
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT email FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already registered!";
            return;
        }

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            // Redirect to login page after 2 seconds
            header("Refresh: 2; url=login.php");
        } else {
            echo "Error registering user!";
        }

        // Close statement
        $stmt->close();
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';      // Replace with your database password
$dbname = 'user_registration';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
function register_user($conn, $username, $email, $password) {
    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields must be filled out.";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists.";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close statements
    $stmt->close();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Confirm password match
    if ($password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Call registration function
    $result = register_user($conn, $username, $email, $password);
    echo $result;
}

// Close connection
$conn->close();
?>


<?php
// Include database configuration file
include('db-config.php');

function registerUser($username, $email, $password) {
    global $conn;

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $checkQuery);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username or email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user data into database
    $query = "INSERT INTO users (username, email, password) 
              VALUES ('$username', '$email', '$hashedPassword')";

    if (mysqli_query($conn, $query)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        echo "All fields are required!";
    } else {
        $result = registerUser($username, $email, $password);
        echo $result;
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include database configuration file
include('db_config.php');

function registerUser() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $error = array();

        // Get user inputs
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Sanitize input data
        $username = htmlspecialchars(trim(stripslashes($username)));
        $email = htmlspecialchars(trim(stripslashes($email)));

        // Validate username
        if (empty($username)) {
            $error['username'] = "Username is required";
        } else if (!preg_match("/^[a-zA-Z ]+$/", $username)) {
            $error['username'] = "Username must contain only letters and spaces";
        }

        // Validate email
        if (empty($email)) {
            $error['email'] = "Email is required";
        } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error['email'] = "Please enter a valid email address";
        }

        // Validate password
        if (empty($password)) {
            $error['password'] = "Password is required";
        } else if ($password !== $confirm_password) {
            $error['password'] = "Passwords do not match";
        } else if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
            $error['password'] = "Password must be at least 8 characters and contain both letters and numbers";
        }

        // If no errors
        if (empty($error)) {
            try {
                // Check if username or email already exists
                $stmt = $pdo->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
                $stmt->bindParam(':username', $username);
                $stmt->bindParam(':email', $email);
                $stmt->execute();
                
                if ($stmt->rowCount() > 0) {
                    throw new Exception("Username or Email already exists.");
                }

                // Hash password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert into database
                $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
                $stmt->bindParam(':username', $username);
                $stmt->bindParam(':email', $email);
                $stmt->bindParam(':password', $hashed_password);

                // Execute the query
                if ($stmt->execute()) {
                    // Registration successful
                    header("Location: login.php?success=Registration successful! Please login.");
                    exit();
                } else {
                    throw new Exception("Error registering user. Please try again.");
                }
            } catch (Exception $e) {
                // Display error message
                echo "Error: " . $e->getMessage();
            }
        } else {
            // Display validation errors
            print_r($error);
        }
    }
}

// Call the function
registerUser();
?>


<?php
// Database connection
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        header("Location: registration.php?error=Please fill in all required fields");
        return;
    }

    if ($password !== $confirm_password) {
        header("Location: registration.php?error=Passwords do not match");
        return;
    }

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $check_username_query);
    
    if (mysqli_num_rows($result) > 0) {
        header("Location: registration.php?error=Username already exists");
        return;
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);
    
    if (mysqli_num_rows($result) > 0) {
        header("Location: registration.php?error=Email already exists");
        return;
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
    
    if (mysqli_query($conn, $query)) {
        header("Location: registration.php?success=Registration successful");
    } else {
        header("Location: registration.php?error=Error registering user");
    }
}

// Call registration function when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php 
    // Display messages based on query parameters
    if (isset($_GET['success'])) {
        echo "<p style='color:green'>$_GET[success]</p>";
    } elseif (isset($_GET['error'])) {
        echo "<p style='color:red'>$_GET[error]</p>";
    }
    ?>

    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Register</button>
    </form>

    <a href="login.php">Already have an account? Login here!</a>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$ dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Registration function
function registerUser($firstName, $lastName, $email, $password, $confirmPassword) {
    global $conn;

    // Validate input fields
    if(empty($firstName) || empty($lastName) || empty($email) || empty($password) || empty($confirmPassword)) {
        return "All fields are required!";
    }

    // Check email format
    if(!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    // Check password requirements (minimum 8 characters, at least one uppercase letter, one lowercase letter, and one number)
    $passwordRegex = '/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/';
    if(!preg_match($passwordRegex, $password)) {
        return "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number!";
    }

    // Check password match
    if($password != $confirmPassword) {
        return "Passwords do not match!";
    }

    // Check if email already exists in the database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if($stmt->rowCount() > 0) {
            return "Email already exists!";
        }
    } catch (PDOException $e) {
        return "Error checking email: " . $e->getMessage();
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)");
        $stmt->execute([$firstName, $lastName, $email, $hashedPassword]);

        return "Registration successful! Please check your email for confirmation.";
    } catch (PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Call the registration function when form is submitted
if(isset($_POST['register'])) {
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    $result = registerUser($firstName, $lastName, $email, $password, $confirmPassword);
    
    if(str_contains($result, "Registration successful")) {
        // Send confirmation email
        $to = $email;
        $subject = "Confirm Your Registration";
        $message = "Thank you for registering! Please confirm your email address.";
        $headers = "From: registration@example.com";

        mail($to, $subject, $message, $headers);

        header("Location: confirmation.php");
    } else {
        // Display error message
        session_start();
        $_SESSION['error'] = $result;
        header("Location: register.php");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all required fields.";
        return false;
    }

    if ($password !== $confirm_password) {
        echo "Passwords do not match.";
        return false;
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists.";
        return false;
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);

    if (mysqli_num_rows($result) > 0) {
        echo "Email already exists.";
        return false;
    }

    // Hash password before storing
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

    // Insert user data into database
    $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";
    
    if (mysqli_query($conn, $query)) {
        echo "Registration successful! You can now login.";
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
        return false;
    }
}

// Call the registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password match
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Sanitize input
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $check_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";

        if (mysqli_query($conn, $insert_query)) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);

// Call registration function
registerUser();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Connect to the database
$host = "localhost";
$username = "root";
$password = "";
$db_name = "my_database";

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user inputs
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate name
    if (empty($name)) {
        $error[] = "Name is required";
    } elseif (!preg_match("/^[a-zA-Z ]+$/", $name)) {
        $error[] = "Invalid name. Only letters and spaces allowed.";
    }

    // Validate email
    if (empty($email)) {
        $error[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error[] = "Invalid email format";
    } else {
        // Check if email already exists in the database
        $sql_email_check = "SELECT id FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
        $result_email_check = mysqli_query($conn, $sql_email_check);
        if (mysqli_num_rows($result_email_check) > 0) {
            $error[] = "Email already exists";
        }
    }

    // Validate password
    if (empty($password)) {
        $error[] = "Password is required";
    } elseif (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
        $error[] = "Invalid password. Must be at least 8 characters and contain both letters and numbers.";
    }

    // If no errors, proceed to registration
    if (empty($error)) {
        // Sanitize inputs
        $name_sanitized = mysqli_real_escape_string($conn, $name);
        $email-sanitized = mysqli_real_escape_string($conn, $email);
        // Hash the password
        $password_hashed = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql_register = "INSERT INTO users (name, email, password) VALUES ('$name_sanitized', '$email-sanitized', '$password_hashed')";
        
        if (mysqli_query($conn, $sql_register)) {
            // Registration successful
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <?php foreach ($error as $err) { ?>
            <p style="color: red;"><?php echo $err; ?></p>
        <?php } ?>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Name: <input type="text" name="name" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {

        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm-password'];
        $first_name = $_POST['first-name'];
        $last_name = $_POST['last-name'];
        $birthdate = $_POST['birthdate'];

        // Initialize error array
        $errors = array();

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $errors[] = "All fields are required";
        }

        // Check if username already exists
        $check_username = "SELECT id FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $check_username);
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username already exists";
        }

        // Check if email already exists
        $check_email = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $check_email);
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email already exists";
        }

        // Validate password match
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate birthdate is not in the future
        if (strtotime($birthdate) > time()) {
            $errors[] = "Birthdate cannot be in the future";
        }

        // If no errors, proceed to registration
        if (empty($errors)) {

            // Sanitize inputs
            $username = mysqli_real_escape_string($conn, $username);
            $email = mysqli_real_escape_string($conn, $email);
            $password = mysqli_real_escape_string($conn, password_hash($password, PASSWORD_DEFAULT));
            $first_name = mysqli_real_escape_string($conn, $first_name);
            $last_name = mysqli_real_escape_string($conn, $last_name);
            $birthdate = mysqli_real_escape_string($conn, $birthdate);

            // Insert into database
            $sql = "INSERT INTO users (username, email, password, first_name, last_name, birthdate) 
                    VALUES ('$username', '$email', '$password', '$first_name', '$last_name', '$birthdate')";

            if (mysqli_query($conn, $sql)) {
                // Registration successful
                header("Location: registration_success.php");
                exit();
            } else {
                die("Registration failed: " . mysqli_error($conn));
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <?php registerUser(); ?>

    <!-- Registration Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <h2>Create Account</h2>

        <div>
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required>
        </div>

        <div>
            <label for="confirm-password">Confirm Password:</label><br>
            <input type="password" id="confirm-password" name="confirm-password" required>
        </div>

        <div>
            <label for="first-name">First Name:</label><br>
            <input type="text" id="first-name" name="first-name">
        </div>

        <div>
            <label for="last-name">Last Name:</label><br>
            <input type="text" id="last-name" name="last-name">
        </div>

        <div>
            <label for="birthdate">Date of Birth:</label><br>
            <input type="date" id="birthdate" name="birthdate">
        </div>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $errors = array();

    if (empty($username) || empty($email) || empty($password)) {
        $errors[] = "All fields are required";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/\d/', $password)) {
        $errors[] = "Password must be at least 8 characters and contain letters and numbers";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Check if username or email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
        $stmt->execute(array(':username' => $username, ':email' => $email));
        if ($stmt->rowCount() > 0) {
            $errors[] = "Username or email already exists";
        }
    } catch (PDOException $e) {
        die("Error checking user existence: " . $e->getMessage());
    }

    // If no errors, proceed to register
    if (empty($errors)) {
        try {
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) 
                                  VALUES (:username, :email, :password)");
            $stmt->execute(array(
                ':username' => $username,
                ':email' => $email,
                ':password' => $hashed_password
            ));

            // Registration successful, redirect to login page
            header("Location: login.php");
            exit();
        } catch (PDOException $e) {
            die("Error registering user: " . $e->getMessage());
        }
    } else {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
    }
}
?>

<!-- HTML Registration Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password) {
    global $conn;

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = $conn->query($checkUsernameQuery);
    
    if ($result->num_rows > 0) {
        return "Username already taken. Please choose a different one.";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($checkEmailQuery);
    
    if ($result->num_rows > 0) {
        return "Email is already registered. Please use a different email.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$hashedPassword')";

    if ($conn->query($sql) === TRUE) {
        return "Registration successful!";
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// register.php

session_start();
header("Cache-Control: no-cache, must-revalidate");
header("Pragma: no-cache");

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Initialize error array
$errors = array();

// Check if form is submitted
if (isset($_POST)) {

    // Get and sanitize input values
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Validate password
    if (empty($password) || strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long";
    } elseif (!preg_match("/^[a-zA-Z0-9!@#\$%\^&*()_+]*$/", $password)) {
        $errors[] = "Password can only contain letters, numbers, and special characters";
    }

    // Validate confirm password
    if ($confirm_password != $password) {
        $errors[] = "Passwords do not match";
    }

    // If no errors, proceed with registration
    if (empty($errors)) {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $check_username_query);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username already exists";
        }

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $check_email_query);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email already registered";
        }

        // If no duplicates found, insert new user into database
        if (empty($errors)) {

            $insert_query = "INSERT INTO users (username, email, password)
                            VALUES ('$username', '$email', '$hashed_password')";

            if (mysqli_query($conn, $insert_query)) {
                header("Location: login.php?success=Registration successful! Please login.");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again later.";
            }
        }

    }

    // If errors occurred, display them
    if (!empty($errors)) {
        $error_message = implode("<br>", $errors);
        header("Location: registration.php?error=$error_message");
        exit();
    }

}

// Close database connection
mysqli_close($conn);

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_registration';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Check for connection errors
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to validate email format
function validateEmail($email) {
    return preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email);
}

// Function to validate password requirements (minimum 8 characters, at least one letter and number)
function validatePassword($password) {
    return preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*()_+}{":;?><~`\-|]{8,}$/', $password);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    
    // Validate inputs
    if (empty($name) || empty($email) || empty($password)) {
        echo "All fields are required!";
    } else if (!validateEmail($email)) {
        echo "Please enter a valid email address!";
    } else if (!validatePassword($password)) {
        echo "Password must be at least 8 characters and contain at least one letter and number!";
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Check if user already exists
        $checkQuery = "SELECT id FROM users WHERE email=?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
        } else {
            // Insert new user into database
            $insertQuery = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insertQuery);
            mysqli_stmt_bind_param($stmt, 'sss', $name, $email, $hashed_password);
            
            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful! Please login.";
                // Redirect to login page after 2 seconds
                header("Refresh: 2; url=login.php");
            } else {
                echo "Error registering user: " . mysqli_error($conn);
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Connect to the database
require_once "dbconfig.php";

function registerUser() {
    try {
        // Extract and sanitize form data
        $username = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($_POST['username'])));
        $email = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($_POST['email'])));
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate username
        if (empty($username) || !preg_match('/^[a-zA-Z0-9]+$', $username) || strlen($username) < 3 || strlen($username) > 20) {
            throw new Exception("Username must be between 3 and 20 characters, containing only letters and numbers.");
        }

        // Validate email
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Please enter a valid email address.");
        }

        // Validate password
        $minPasswordLength = 8;
        if (empty($password) || strlen($password) < $minPasswordLength || !$confirmPassword || $password !== $confirmPassword) {
            throw new Exception("Passwords do not match or are too short. Minimum length is " . $minPasswordLength . " characters.");
        }

        // Check for existing username or email
        $query = "SELECT id FROM users WHERE username = ? OR email = ?";
        $stmt = $GLOBALS['conn']->prepare($query);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username or email already exists.");
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $GLOBALS['conn']->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        
        if (!$stmt->execute()) {
            throw new Exception("Registration failed. Please try again.");
        }

        return "Registration successful! You can now log in.";

    } catch (Exception $e) {
        return $e->getMessage();
    }
}

// Call the function when form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $result = registerUser();
    echo $result;
}
?>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to validate and register user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get input values
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Check if all fields are filled
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields must be filled!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password length and strength
        $min_length = 8;
        if (strlen($password) < $min_length) {
            echo "Password must be at least $min_length characters long!";
            return;
        }

        // Check if password matches confirm password
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $check_query);
        mysqli_stmt_bind_param($stmt, "ss", $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Insert new user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }

        mysqli_stmt_close($stmt);
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sanitizeInput($data) {
    // Sanitize input to prevent SQL injection and XSS attacks
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    
    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $stmt->store_result();
    
    if ($stmt->num_rows > 0) {
        echo "Username already exists!";
        exit();
    }
    
    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $stmt->store_result();
    
    if ($stmt->num_rows > 0) {
        echo "Email already exists!";
        exit();
    }
    
    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $sql = "INSERT INTO users (username, email, password_hash)
            VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        echo "Registration successful!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Sanitize input data
        $username = htmlspecialchars(trim(strtolower($_POST['username'])));
        $email = htmlspecialchars(trim(strtolower($_POST['email'])));
        $password = $_POST['password'];
        
        // Validate username
        if (!preg_match("/^[a-zA-Z0-9_\-]+$/", $username)) {
            echo "Invalid username! Only letters, numbers, underscores and hyphens are allowed.";
            return;
        }

        // Validate email format
        if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            echo "Invalid email format!";
            return;
        }

        // Validate password
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }
        if (!preg_match("/[A-Z]/", $password)) {
            echo "Password must contain at least one uppercase letter!";
            return;
        }
        if (!preg_match("/[0-9]/", $password)) {
            echo "Password must contain at least one number!";
            return;
        }

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashedPassword);

        try {
            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                echo "Registration successful! Please login.";
                header("Location: login.php");
                exit();
            } else {
                // Error inserting into database
                throw new Exception("Error registering user: " . mysqli_error($conn));
            }
        } catch (Exception $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        Username: <input type="text" name="username" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

function registerUser($data) {
    global $conn;
    
    // Sanitize input data
    $username = htmlspecialchars_decode(trim($data['username']));
    $email = htmlspecialchars_decode(trim($data['email']));
    $password = htmlspecialchars_decode(trim($data['password']));
    $confirm_password = htmlspecialchars_decode(trim($data['confirm_password']));

    try {
        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            throw new Exception("All fields are required");
        }

        // Validate username length
        if (strlen($username) < 3) {
            throw new Exception("Username must be at least 3 characters long");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Validate password length and match confirmation
        if (strlen($password) < 6 || strlen($password) > 20) {
            throw new Exception("Password must be between 6 and 20 characters long");
        }
        
        if ($password !== $confirm_password) {
            throw new Exception("Passwords do not match");
        }

        // Sanitize email
        $email = mysqli_real_escape_string($conn, $email);

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check for existing username or email
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$username, $email]);
        
        if ($stmt->rowCount() > 0) {
            throw new Exception("Username or email already exists");
        }

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);

        // Get the new user's ID
        $user_id = $conn->lastInsertId();

        // Send confirmation email
        sendConfirmationEmail($email, $username);

        // Set session variables
        $_SESSION['id'] = $user_id;
        $_SESSION['username'] = $username;
        $_SESSION['email'] = $email;

        return true;

    } catch(PDOException $e) {
        throw new Exception("Database error: " . $e->getMessage());
    }
}

function sendConfirmationEmail($to, $username) {
    // Email configuration
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/SMTP.php';
    require 'PHPMailer/Exception.php';

    try {
        $mail = new PHPMailer(true);
        
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        // Recipients
        $mail->setFrom('your_email@example.com', 'Registration Confirmation');
        $mail->addAddress($to);

        // Content
        $mail->isHTML(true);
        $mail->Subject = 'Welcome to Our Site!';
        $mail->Body    = "Hello $username,<br><br>Thank you for registering with us. Click the link below to confirm your email:<br>
                          <a href='http://example.com/confirm.php?email=$to'>Confirm Email</a>";
        $mail->AltBody = "Hello $username, Thank you for registering with us.";

        $mail->send();
    } catch (Exception $e) {
        echo "Email could not be sent. Mailer Error: {$mail->ErrorInfo}";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST)) {
        try {
            if (registerUser($_POST)) {
                // Redirect to dashboard or confirmation page
                header('Location: dashboard.php');
                exit();
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}
?>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

function registerUser() {
    $error = "";
    
    if (isset($_POST['submit'])) {
        // Retrieve form data
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm_password']);
        $first_name = trim($_POST['first_name']);
        $last_name = trim($_POST['last_name']);

        // Validate form data
        if ($username == "" || $email == "" || $password == "") {
            $error .= "All fields are required! <br>";
        }

        // Password validation
        if (strlen($password) < 6) {
            $error .= "Password must be at least 6 characters long! <br>";
        }
        if (!preg_match("/[A-Za-z]/", $password)) {
            $error .= "Password must contain letters! <br>";
        }
        if (!preg_match("/[0-9]/", $password)) {
            $error .= "Password must contain numbers! <br>";
        }

        // Check if password matches confirm password
        if ($password != $confirm_password) {
            $error .= "Passwords do not match! <br>";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error .= "Please enter a valid email address! <br>";
        }

        // Check if username already exists
        $stmt = $GLOBALS['conn']->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error .= "Username already exists! <br>";
        }

        // Check if email already exists
        $stmt = $GLOBALS['conn']->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error .= "Email already exists! <br>";
        }

        // If no errors, proceed to register the user
        if ($error == "") {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $stmt = $GLOBALS['conn']->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
            $stmt->bind_param('sssss', $username, $email, $hashed_password, $first_name, $last_name);

            if ($stmt->execute()) {
                // Registration successful
                $_SESSION['message'] = "You have successfully registered!";
                header("location: welcome.php");
                exit();
            } else {
                $error .= "Registration failed. Please try again later! <br>";
            }
        }

        // Close statement
        $stmt->close();
    }

    return $error;
}

// Call the function
$errors = registerUser();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if ($errors != "") { ?>
            <div class="error"><?php echo $errors; ?></div>
        <?php } ?>

        <h2>Registration Form</h2>

        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username">
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password">
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm your password">
            </div>

            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" placeholder="Enter your first name">
            </div>

            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" placeholder="Enter your last name">
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
function registerUser($username, $email, $password, $confirm_password) {
    // Sanitize inputs to prevent SQL injection and XSS attacks
    $username = htmlspecialchars(mysqli_real_escape_string($conn, $username));
    $email = htmlspecialchars(mysqli_real_escape_string($conn, $email));
    $password = htmlspecialchars(mysqli_real_escape_string($conn, $password));
    $confirm_password = htmlspecialchars(mysqli_real_escape_string($conn, $confirm_password));

    // Check if password and confirm password match
    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Database connection
    $servername = "localhost";
    $dbusername = "root";  // Change to your database username
    $dbpassword = "";      // Change to your database password
    $dbname = "myDB";      // Change to your database name

    try {
        $conn = new mysqli($servername, $dbusername, $dbpassword, $dbname);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsernameQuery);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Username already exists!";
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Email already exists!";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            return "Registration successful!";
        } else {
            return "Error: " . $stmt->error;
        }

    } catch (Exception $e) {
        // Handle any exceptions
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $result = registerUser($username, $email, $password, $confirm_password);
    echo $result;
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'user-registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize_input($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Registration function
function register_user() {
    global $conn;

    if (isset($_POST['submit'])) {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm-password'];

        // Validate inputs
        $errors = array();

        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            $errors[] = "Username can only contain letters and numbers";
        }

        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 8 || !preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            $errors[] = "Password must be at least 8 characters and contain only letters and numbers";
        }

        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Check if username or email already exists
        try {
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Username already exists";
            }

            $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Email already exists";
            }

            // If no errors, register user
            if (empty($errors)) {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->bind_param("sss", $username, $email, $hashed_password);
                
                if ($stmt->execute()) {
                    header("Location: login.php");
                    exit();
                } else {
                    throw new Exception("Error registering user");
                }
            }

        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }

    }
}

// Call registration function
register_user();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button[type="submit"]:hover {
            background-color: #45a049;
        }
        .error-message {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (!empty($errors)) { ?>
            <?php foreach ($errors as $error) { ?>
                <div class="error-message"><?php echo $error; ?></div><br>
            <?php } ?>
        <?php } ?>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm-password">Confirm Password:</label>
                <input type="password" id="confirm-password" name="confirm-password" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = htmlspecialchars($_POST['first_name']);
        $last_name = htmlspecialchars($_POST['last_name']);

        // Validate required fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        // Check password match
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $check_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $insert_query = "INSERT INTO users (username, email, password, first_name, last_name)
                         VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name')";

        if (mysqli_query($conn, $insert_query)) {
            echo "Registration successful!";
            // You can redirect to login page here
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the function if form is submitted
if (isset($_POST['register'])) {
    registerUser();
}
?>


<?php
session_start();

// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user input
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "Please fill in all fields";
    } else {
        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format";
        } else {
            // Check username length and characters
            if (strlen($username) < 3 || strlen($username) > 20) {
                echo "Username must be between 3 and 20 characters";
            } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
                echo "Username can only contain letters, numbers, and underscores";
            } else {
                // Check if username already exists
                $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
                if (mysqli_num_rows($check_username) > 0) {
                    echo "Username already exists";
                } else {
                    // Check password strength
                    if ($password !== $confirm_password) {
                        echo "Passwords do not match";
                    } elseif (strlen($password) < 8) {
                        echo "Password must be at least 8 characters long";
                    } elseif (!preg_match("#[A-Z]#", $password)) {
                        echo "Password must contain at least one uppercase letter";
                    } elseif (!preg_match("#[0-9]#", $password)) {
                        echo "Password must contain at least one number";
                    } elseif (!preg_match("#[!@#$%^&*()_+}{\":;'?/>.<,]#", $password)) {
                        echo "Password must contain at least one special character";
                    } else {
                        // Hash password
                        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                        // Insert into database
                        $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
                        
                        if (mysqli_query($conn, $sql)) {
                            echo "Registration successful!";
                            header("Location: login.php");
                            exit();
                        } else {
                            echo "Error: " . mysqli_error($conn);
                        }
                    }
                }
            }
        }
    }
} else {
    // Show registration form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <label>Username:</label><br>
        <input type="text" name="username"><br><br>

        <label>Email:</label><br>
        <input type="email" name="email"><br><br>

        <label>Password:</label><br>
        <input type="password" name="password"><br><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password"><br><br>

        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>
<?php
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$dbHost = 'localhost';
$dbUser = 'root';
$dbPass = '';
$dbName = 'user_registration';

// Connect to the database
$conn = mysqli_connect($dbHost, $dbUser, $dbPass, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
    } else {
        // Check if username already exists
        $checkUsernameQuery = "SELECT username FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
        } else {
            // Check if email already exists
            $checkEmailQuery = "SELECT email FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $checkEmailQuery);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if (mysqli_num_rows($result) > 0) {
                echo "Email already exists!";
            } else {
                // Check password length and strength
                if (strlen($password) < 8) {
                    echo "Password must be at least 8 characters!";
                } elseif (!preg_match("#[A-Z]#", $password)) {
                    echo "Password must contain at least one uppercase letter!";
                } elseif (!preg_match("#[a-z]#", $password)) {
                    echo "Password must contain at least one lowercase letter!";
                } elseif (!preg_match("#[0-9]#", $password)) {
                    echo "Password must contain at least one number!";
                } else {
                    // Check if passwords match
                    if ($password != $confirm_password) {
                        echo "Passwords do not match!";
                    } else {
                        // Hash the password
                        $hashedPassword = md5($password);

                        // Insert user data into database
                        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                        $stmt = mysqli_prepare($conn, $insertQuery);
                        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
                        
                        if (mysqli_stmt_execute($stmt)) {
                            echo "Registration successful!";
                            header("Location: login.php");
                            exit();
                        } else {
                            echo "Error registering user: " . mysqli_error($conn);
                        }
                    }
                }
            }
        }
    }
}

// Close the database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Create database connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Initialize variables
    $error = false;
    $first_name = "";
    $last_name = "";
    $email = "";
    $password = "";

    if (isset($_POST['register'])) {
        // Get form values
        $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
        $last_name = mysqli_real_escape_string($conn, $_POST['last_name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Validate name fields
        if (!preg_match("/^[a-zA-Z-' ]*$/", $first_name)) {
            $error = true;
            $name_error = "Please enter a valid first name";
        }

        if (!preg_match("/^[a-zA-Z-' ]*$/", $last_name)) {
            $error = true;
            $surname_error = "Please enter a valid last name";
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error = true;
            $email_error = "Please enter a valid email address";
        }

        // Check if email already exists in database
        $check_email_query = "SELECT * FROM users WHERE email='$email'";
        $result = $conn->query($check_email_query);
        
        if ($result->num_rows > 0) {
            $error = true;
            $email_error = "Email address already exists";
        }

        // Validate password
        if (strlen($password) < 8) {
            $error = true;
            $password_error = "Password must be at least 8 characters long";
        }

        // Check for uppercase, lowercase, numbers, and special characters
        if (!preg_match("/[A-Z]/", $password)) {
            $error = true;
            $password_error .= "<br>Password must contain at least one uppercase letter";
        }

        if (!preg_match("/[a-z]/", $password)) {
            $error = true;
            $password_error .= "<br>Password must contain at least one lowercase letter";
        }

        if (!preg_match("/[0-9]/", $password)) {
            $error = true;
            $password_error .= "<br>Password must contain at least one number";
        }

        if (!preg_match("/[^A-Za-z0-9]/", $password)) {
            $error = true;
            $password_error .= "<br>Password must contain at least one special character";
        }

        // If no errors, register the user
        if (!$error) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

            // Insert into database
            $sql = "INSERT INTO users (first_name, last_name, email, password)
                    VALUES ('$first_name', '$last_name', '$email', '$hashed_password')";
            
            if ($conn->query($sql) === TRUE) {
                // Set session variables
                $_SESSION['registered'] = true;
                $_SESSION['username'] = $first_name;

                // Redirect to success page
                header("Location: login.php");
                exit();
            } else {
                echo "Error: " . $sql . "<br>" . $conn->error;
            }
        }
    }

    // Close database connection
    $conn->close();

    // Display registration form
    include 'registration_form.html';
}

// Call the function
if (isset($_POST['register'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration</title>
</head>
<body>
    <?php
        if (isset($_SESSION['registered'])) {
            echo "<h2>Welcome " . $_SESSION['username'] . "! Registration successful!</h2>";
            header("Location: login.php");
            exit();
        } else {
            // Display registration form
    ?>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="first_name">First Name:</label>
        <input type="text" name="first_name" id="first_name">
        <?php if (isset($name_error)) { echo "<span style='color:red;'>$name_error</span>"; } ?>

        <br>

        <label for="last_name">Last Name:</label>
        <input type="text" name="last_name" id="last_name">
        <?php if (isset($surname_error)) { echo "<span style='color:red;'>$surname_error</span>"; } ?>

        <br>

        <label for="email">Email:</label>
        <input type="email" name="email" id="email">
        <?php if (isset($email_error)) { echo "<span style='color:red;'>$email_error</span>"; } ?>

        <br>

        <label for="password">Password:</label>
        <input type="password" name="password" id="password">
        <?php if (isset($password_error)) { echo "<span style='color:red;'>$password_error</span>"; } ?>

        <br>

        <button type="submit" name="register">Register</button>
    </form>

<?php } ?>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($data) {
    global $conn;

    // Sanitize input data
    $username = htmlspecialchars(trim($data['username']));
    $email = htmlspecialchars(trim($data['email']));
    $password = trim($data['password']);
    $confirm_password = trim($data['confirm_password']);
    $security_question = isset($data['security_question']) ? htmlspecialchars(trim($data['security_question'])) : '';
    $security_answer = isset($data['security_answer']) ? htmlspecialchars(trim($data['security_answer'])) : '';

    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields";
    }

    // Validate username format
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username can only contain letters, numbers and underscores!";
    }

    // Check email format validity
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Password validation
    if (strlen($password) < 6) {
        return "Password must be at least 6 characters long";
    }

    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Check if username already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            return "Username already taken. Please choose another one.";
        }
    } catch(PDOException $e) {
        die("Error checking username: " . $e->getMessage());
    }

    // Check if email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            return "Email already registered. Please use another email.";
        }
    } catch(PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Prepare SQL statement for registration
    try {
        $stmt = $conn->prepare("
            INSERT INTO users 
            (username, email, password, security_question, security_answer)
            VALUES (?, ?, ?, ?, ?)
        ");
        $stmt->execute([$username, $email, $hashed_password, $security_question, $security_answer]);
        
        // Set session variables
        $_SESSION['username'] = $username;
        $_SESSION['user_id'] = $conn->lastInsertId();
        
        return true; // Registration successful
    } catch(PDOException $e) {
        die("Registration error: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['username'], $_POST['email'], $_POST['password'], $_POST['confirm_password'])) {
        $result = registerUser($_POST);
        
        if ($result === true) {
            header("Location: login.php");
            exit();
        } else {
            echo "<div class='error'>$result</div>";
        }
    }
}
?>


<?php
// Database connection
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser($username, $email, $password, $conn) {
    // Validate inputs
    if (!validateUsername($username)) {
        return "Invalid username";
    }
    
    if (!validateEmail($email)) {
        return "Invalid email";
    }
    
    if (!validatePassword($password)) {
        return "Invalid password";
    }

    // Check if user already exists
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return "Email already exists";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
    
    if (mysqli_execute($stmt)) {
        return "Registration successful";
    } else {
        return "Error registering user";
    }
}

// Validation functions
function validateUsername($username) {
    // Username must be between 3 and 20 characters
    return strlen($username) >= 3 && strlen($username) <= 20;
}

function validateEmail($email) {
    // Email must contain @ and .
    return strpos($email, '@') !== false && strpos($email, '.') !== false;
}

function validatePassword($password) {
    // Password must be at least 8 characters long
    if (strlen($password) < 8) {
        return false;
    }
    
    // Password must contain at least one letter and one number
    $has_letter = preg_match('/[a-zA-Z]/', $password);
    $has_number = preg_match('/[0-9]/', $password);
    
    return $has_letter && $has_number;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password != $confirm_password) {
        echo "Passwords do not match";
    } else {
        $result = registerUser($username, $email, $password, $conn);
        echo $result;
    }
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to the database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password, $confirm_password, $full_name, $conn) {
    // Sanitize inputs to prevent SQL injection and XSS attacks
    $username = htmlspecialchars(strip_tags($username));
    $email = htmlspecialchars(strip_tags($email));
    $password = htmlspecialchars(strip_tags($password));
    $confirm_password = htmlspecialchars(strip_tags($confirm_password));
    $full_name = htmlspecialchars(strip_tags($full_name));

    // Validate inputs
    if ($username == "" || $email == "" || $password == "" || $confirm_password == "" || $full_name == "") {
        return "Please fill in all required fields";
    }

    if (strlen($username) < 3) {
        return "Username must be at least 3 characters long";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    if ($password !== $confirm_password) {
        return "Passwords do not match";
    }

    if (strlen($password) < 6) {
        return "Password must be at least 6 characters long";
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password, full_name) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("ssss", $username, $email, $hashed_password, $full_name);
    
    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $conn->error;
    }
}

// Example usage
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = $_POST['full_name'];

    $result = registerUser($username, $email, $password, $confirm_password, $full_name, $conn);
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Include necessary headers
header('Content-Type: text/html; charset=utf-8');
session_start();

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user inputs
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm-password'];

    // Initialize error array
    $errors = array();

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required.";
    } else {
        // Check for invalid characters in username
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores.";
        }
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required.";
    } else {
        // Check if email format is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format.";
        }
    }

    // Validate password
    if (empty($password) || empty($confirm_password)) {
        $errors[] = "Password and confirm password are required.";
    } else {
        // Check if passwords match
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match.";
        }
        // Check password strength
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long.";
        }
    }

    // If there are no errors, proceed with registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = md5($password); // Note: MD5 is not secure for production use; consider using bcrypt or PHP's password_hash()

        // Insert user into database
        $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $query)) {
            // Registration successful
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            
            // Redirect to dashboard or another page
            header("Location: thank_you.php");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again.";
            echo "<script>alert('".implode(', ', $errors)."');</script>";
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <!-- Include CSS for styling -->
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ddd;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error-message {
            color: red;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    
    <?php if (!empty($errors)): ?>
        <div class="error-messages">
            <?php foreach ($errors as $error): ?>
                <p class="error-message"><?php echo $error; ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required>
        </div>

        <div class="form-group">
            <label for="confirm-password">Confirm Password:</label><br>
            <input type="password" id="confirm-password" name="confirm-password" required>
        </div>

        <button type="submit" name="submit">Register</button>
    </form>

    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Connect to database
require_once 'db_connection.php';

function registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $birthdate) {
    // Sanitize input
    $username = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($username)));
    $email = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($email)));
    $first_name = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($first_name)));
    $last_name = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($last_name)));

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "All fields must be filled out";
    }

    if (strlen($username) < 3 || strlen($username) > 50) {
        return "Username must be between 3 and 50 characters";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    if ($password !== $confirm_password) {
        return "Passwords do not match";
    }

    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long";
    }

    // Check if username or email already exists
    $check_query = "SELECT id FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($GLOBALS['conn'], $check_query);

    if (mysqli_num_rows($result) > 0) {
        return "Username or email already exists";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert user into database
    try {
        $stmt = $GLOBALS['conn']->prepare("INSERT INTO users (username, email, password, first_name, last_name, birthdate) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->bind_param('ssssss', $username, $email, $hashed_password, $first_name, $last_name, $birthdate);

        if ($stmt->execute()) {
            return "Registration successful!";
        } else {
            return "Error registering user: " . $stmt->error;
        }
    } catch (mysqli_sql_exception $e) {
        return "Database error: " . $e->getMessage();
    }
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $birthdate = $_POST['birthdate'];

    // Register user
    $result = registerUser($username, $email, $password, $confirm_password, $first_name, $last_name, $birthdate);

    if (strpos($result, 'Error') === false) {
        // Registration successful
        session_start();
        $_SESSION['message'] = $result;
        header("Location: login.php");
        exit();
    } else {
        // Display error message
        echo "<script type='text/javascript'>alert('$result');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <input type="text" name="first_name" placeholder="First Name" required><br>
        <input type="text" name="last_name" placeholder="Last Name" required><br>
        <input type="date" name="birthdate" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function register_user() {
    global $conn;

    // Check if form was submitted
    if (isset($_POST['submit'])) {
        // Get form data
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input
        $errors = array();

        if (empty($username)) {
            $errors[] = "Username is required";
        }

        if (empty($email)) {
            $errors[] = "Email is required";
        }

        if (empty($password)) {
            $errors[] = "Password is required";
        }

        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            $errors[] = "Username already exists";
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            $errors[] = "Email already exists";
        }

        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
                // Redirect to login page or dashboard
                header("Location: login.php");
                exit();
            } else {
                die("Error registering user: " . mysqli_error($conn));
            }
        } else {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
register_user();
?>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form values
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);
        $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
        $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
        $last_name = mysqli_real_escape_string($conn, $_POST['last_name']);
        $date_of_birth = mysqli_real_escape_string($conn, $_POST['date_of_birth']);

        // Validate input
        $errors = array();

        if (empty($username)) {
            array_push($errors, "Username is required");
        }
        if (empty($email)) {
            array_push($errors, "Email is required");
        }
        if (empty($password)) {
            array_push($errors, "Password is required");
        }
        if ($password != $confirm_password) {
            array_push($errors, "Passwords do not match");
        }

        // Check if username already exists
        $username_check = mysqli_query($conn, "SELECT * FROM users WHERE username='$username'");
        if (mysqli_num_rows($username_check) > 0) {
            array_push($errors, "Username already exists");
        }

        // Check if email already exists
        $email_check = mysqli_query($conn, "SELECT * FROM users WHERE email='$email'");
        if (mysqli_num_rows($email_check) > 0) {
            array_push($errors, "Email already registered");
        }

        // If no errors, proceed to register the user
        if (count($errors) == 0) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $query = "INSERT INTO users (username, email, password, first_name, last_name, date_of_birth) VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$date_of_birth')";
            
            if (mysqli_query($conn, $query)) {
                // Registration successful
                $_SESSION['username'] = $username;
                $_SESSION['email'] = $email;
                header("location: dashboard.php");
                exit();
            } else {
                array_push($errors, "Registration failed. Please try again.");
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <style>
        .error { color: red; margin-bottom: 10px; }
        .container {
            width: 400px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .form-group { margin-bottom: 15px; }
        input { width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px; }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Display errors if any
        if (isset($_POST['submit'])) {
            registerUser();
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
        ?>

        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <h2>Register</h2>
            
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" required>
            </div>

            <div class="form-group">
                <input type="email" name="email" placeholder="Email" required>
            </div>

            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>

            <div class="form-group">
                <input type="password" name="confirm_password" placeholder="Confirm Password" required>
            </div>

            <div class="form-group">
                <input type="text" name="first_name" placeholder="First Name" required>
            </div>

            <div class="form-group">
                <input type="text" name="last_name" placeholder="Last Name" required>
            </div>

            <div class="form-group">
                <input type="date" name="date_of_birth" placeholder="Date of Birth" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Assuming you have a database connection established
require_once('db_connection.php');

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['register'])) {
        $errors = array();
        
        // Get form data
        $username = mysqli_real_escape_string($GLOBALS['conn'], $_POST['username']);
        $email = mysqli_real_escape_string($GLOBALS['conn'], $_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = mysqli_real_escape_string($GLOBALS['conn'], $_POST['first_name']);
        $last_name = mysqli_real_escape_string($GLOBALS['conn'], $_POST['last_name']);
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else {
            // Check for valid username format (letters and numbers only)
            if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
                $errors[] = "Username can only contain letters and numbers";
            }
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } else {
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format";
            }
        }
        
        // Validate password
        if (empty($password) || empty($confirm_password)) {
            $errors[] = "Password and Confirm Password are required";
        } else {
            if ($password !== $confirm_password) {
                $errors[] = "Passwords do not match";
            }
            
            // Check password strength
            if (!preg_match("/^.*(?=.{8,})(?=.*\d)(?=.*[a-zA-Z]).*$/", $password)) {
                $errors[] = "Password must be at least 8 characters and contain at least one number and one letter";
            }
        }
        
        // Validate names
        if (empty($first_name) || empty($last_name)) {
            $errors[] = "First and Last Name are required";
        } else {
            // Check for valid name format (letters only)
            if (!preg_match("/^[a-zA-Z]*$/", $first_name) || !preg_match("/^[a-zA-Z]*$/", $last_name)) {
                $errors[] = "Names can only contain letters";
            }
        }
        
        // Check if username or email already exists
        $checkUsernameQuery = "SELECT username FROM users WHERE username = '$username'";
        $checkEmailQuery = "SELECT email FROM users WHERE email = '$email'";
        
        $result_username = mysqli_query($GLOBALS['conn'], $checkUsernameQuery);
        $result_email = mysqli_query($GLOBALS['conn'], $checkEmailQuery);
        
        if (mysqli_num_rows($result_username) > 0) {
            $errors[] = "Username already exists";
        }
        
        if (mysqli_num_rows($result_email) > 0) {
            $errors[] = "Email already exists";
        }
        
        // If no errors, proceed to register
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user into database
            $query = "INSERT INTO users (username, email, password, first_name, last_name) 
                      VALUES (?, ?, ?, ?, ?)";
            
            if ($stmt = mysqli_prepare($GLOBALS['conn'], $query)) {
                // Bind parameters
                mysqli_stmt_bind_param($stmt, "sssss", $username, $email, $hashed_password, $first_name, $last_name);
                
                // Execute the statement
                if (mysqli_stmt_execute($stmt)) {
                    echo "Registration successful! <a href='login.php'>Go to login page</a>";
                    exit();
                } else {
                    die("Something went wrong. Please try again later.");
                }
            } else {
                die("Something went wrong. Please try again later.");
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}

// Call the function
registerUser();
?>


<?php
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Include database connection file
include("db_connect.php");

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['register'])) {
        $username = mysqli_real_escape_string($GLOBALS['connection'], htmlspecialchars(trim($_POST['username'])));
        $email = mysqli_real_escape_string($GLOBALS['connection'], htmlspecialchars(trim(filter_var($_POST['email'], FILTER_VALIDATE_EMAIL))));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields!";
            return false;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return false;
        }

        if (strlen($password) < 6) {
            echo "Password must be at least 6 characters long!";
            return false;
        }

        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username = ?";
        $stmt = $GLOBALS['connection']->prepare($check_username_query);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return false;
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email = ?";
        $stmt = $GLOBALS['connection']->prepare($check_email_query);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return false;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into the database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $GLOBALS['connection']->prepare($insert_query);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            // Registration successful
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user. Please try again later!";
            return false;
        }
    }
}

// Call the function
registerUser();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f0f0f0;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit" name="register">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
    die();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Check if all fields are filled in
    if (empty($name) || empty($email) || empty($password) || empty($confirmPassword)) {
        die("All fields must be filled in.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Check password length
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    // Check if passwords match
    if ($password !== $confirmPassword) {
        die("Passwords do not match.");
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    // Check if user already exists in database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $result = $stmt->fetch();

        if ($result) {
            die("User with this email already exists.");
        }

        // Insert new user into the database
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$name, $email, $hashedPassword]);

        // Generate verification token and send confirmation email
        $verificationToken = bin2hex(random_bytes(16));
        
        try {
            $mail = new PHPMailer();
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com';
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';
            $mail->SMTPSecure = 'tls';
            $mail->Port = 587;

            $mail->setFrom('your_email@example.com', 'Registration Confirmation');
            $mail->addAddress($email);
            $mail->Subject = 'Verify your email address';

            $verificationLink = "http://$_SERVER[HTTP_HOST]/verify.php?token=$verificationToken";
            $body = "Please click the following link to verify your account: $verificationLink";

            $mail->Body = $body;
            $mail->send();

            // Store verification token in database
            $stmt = $conn->prepare("UPDATE users SET verification_token = ? WHERE email = ?");
            $stmt->execute([$verificationToken, $email]);

            echo "Registration successful! Please check your email to verify your account.";
        } catch (Exception $e) {
            die("Error sending confirmation email: " . $e->getMessage());
        }
    } catch(PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Name: <input type="text" name="name" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser($username, $email, $password, $conn) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, trim($username));
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $checkQuery);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username or email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password)
                    VALUES ('$username', '$email', '$hashedPassword')";

    if (mysqli_query($conn, $insertQuery)) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password, $conn);

    if (strpos($result, 'Registration successful!') !== false) {
        // Redirect to login page or dashboard
        header("Location: login.php");
        exit();
    } else {
        echo $result;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Registration function
function registerUser($username, $email, $password, $conn) {
    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);
    
    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Username already exists!";
    }
    
    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);
    
    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Email already exists!";
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
    
    if (!mysqli_stmt_execute($stmt)) {
        return "Registration failed. Please try again.";
    }
    
    return "Registration successful!";
}

// Process registration form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate input data
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
    } else if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        echo "Username must contain only letters, numbers, and underscores!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
    } else if ($password != $confirm_password) {
        echo "Passwords do not match!";
    } else if (strlen($password) < 8 || !preg_match("/[A-Za-z]/", $password) || !preg_match("/[0-9]/", $password)) {
        echo "Password must be at least 8 characters and contain both letters and numbers!";
    } else {
        // Register the user
        $result = registerUser($username, $email, $password, $conn);
        echo $result;
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .success {
            color: green;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <h2>User Registration</h2>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required placeholder="Enter username (only letters, numbers and underscores)">
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required placeholder="Enter your email">
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required placeholder="Enter password (at least 8 characters, letters and numbers)">
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password" required placeholder="Confirm your password">
        </div>

        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>


<?php
// Initialize session and error reporting
session_start();
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Database configuration
$servername = "localhost";
$username_db = "your_username";
$password_db = "your_password";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $errors = array();

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long!";
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $errors[] = "Username already exists!";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $errors[] = "Email already registered!";
    }

    // If no errors, proceed to register
    if (empty($errors)) {
        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);
        
        if ($stmt->execute()) {
            // Registration successful
            $_SESSION['success'] = "Registration successful! Please login.";
            header("Location: login.php");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again!";
        }
    }

    return $errors;
}

// Register the user if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $errors = registerUser();
}
?>


<?php if (isset($errors) && !empty($errors)): ?>
    <?php foreach ($errors as $error): ?>
        <div class="error"><?php echo $error; ?></div>
    <?php endforeach; ?>
<?php endif; ?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($email, $password, $firstName, $lastName) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);
    $firstName = mysqli_real_escape_string($conn, $firstName);
    $lastName = mysqli_real_escape_string($conn, $lastName);

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($checkEmailQuery);
    
    if ($result->num_rows > 0) {
        return "Email already exists";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $sql = "INSERT INTO users (email, password, first_name, last_name)
            VALUES ('$email', '$hashedPassword', '$firstName', '$lastName')";

    if ($conn->query($sql) === TRUE) {
        return "Registration successful! You can now login.";
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Example usage:
if (isset($_POST['submit'])) {
    try {
        // Get form data
        $email = $_POST['email'];
        $password = $_POST['password'];
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];

        // Validate input
        if (empty($email) || empty($password) || empty($firstName) || empty($lastName)) {
            throw new Exception("All fields are required");
        }

        // Call registration function
        $result = registerUser($email, $password, $firstName, $lastName);
        echo $result;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

$conn->close();
?>


<?php
function registerUser($username, $email, $password) {
    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'mydatabase';

    // Create database connection
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    // Check for connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    $username = trim($username);
    $email = trim($email);
    $password = trim($password);

    // Check username validity
    if (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    // Check password validity
    if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/\d/', $password)) {
        return "Password must be at least 8 characters long and contain letters and numbers.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Prepare SQL query to check for existing username or email
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if the existing entry is for username or email
        $existingUser = $result->fetch_assoc();
        if ($existingUser['username'] == $username) {
            return "Username already exists.";
        } else {
            return "Email already registered.";
        }
    }

    // Insert new user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    $result = $stmt->execute();

    if ($result) {
        // Return success message
        return [
            'status' => 'success',
            'message' => 'Registration successful!',
            'user' => [
                'username' => $username,
                'email' => $email
            ]
        ];
    } else {
        return "Error registering user. Please try again later.";
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    
    if (is_array($result) && isset($result['status']) && $result['status'] == 'success') {
        // Handle successful registration
        echo json_encode($result);
    } else {
        // Handle error
        http_response_code(400);
        echo json_encode(['error' => $result]);
    }
}
?>


<?php

// Step 1: Create HTML Form for Registration
// This is a simple HTML form that collects user details.

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration</title>
</head>
<body>
    <h2>Registration Page</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        Username: <input type="text" name="username"><br>
        E-mail: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>

<?php

// Step 2: Validate User Input Data
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if all fields are filled
    if (empty($username) || empty($email) || empty($password)) {
        die("All fields must be filled out");
    }

    // Validate username length
    if (strlen($username) < 3) {
        die("Username must be at least 3 characters long");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check password and confirm match
    if ($password != $confirm_password) {
        die("Passwords do not match");
    }
}

// Step 3: Sanitize Input Data
function sanitizeInput($data) {
    $data = htmlspecialchars(strip_tags($data));
    return $data;
}

$username = sanitizeInput($username);
$email = sanitizeInput($email);

// Step 4: Hash Password for Security
$hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

// Step 5: Connect to Database
include 'db_config.php';

$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Step 6: Insert User into Database
$sql = "INSERT INTO users (username, email, password)
VALUES (?, ?, ?)";

$stmt = $conn->prepare($sql);
$stmt->bind_param("sss", $username, $email, $hashed_password);

if ($stmt->execute()) {
    // Registration successful, send confirmation email
    $to = $email;
    $subject = "Registration Confirmation";
    $message = "Thank you for registering! Your account has been successfully created.";
    $headers = "From: registration@example.com" . "\r
" .
               "CC: example@example.com";

    mail($to, $subject, $message, $headers);

    echo "<br><div style='color:green'>Registration successful. Please check your email for confirmation.</div>";
} else {
    echo "<br><div style='color:red'>Error: " . $stmt->error . "</div>";
}

$stmt->close();
$conn->close();

?>

</body>
</html>

<?php

// Helper Functions
function checkingUsernameExists($username) {
    include 'db_config.php';
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    
    $sql = "SELECT username FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return true;
    } else {
        return false;
    }
}

function checkingEmailExists($email) {
    include 'db_config.php';
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    
    $sql = "SELECT email FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return true;
    } else {
        return false;
    }
}

?>


<?php
session_start();
include_once 'db_connection.php';

function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Validation functions here...

?>


function validateUsername($username) {
    if (empty($username)) {
        throw new Exception("Username is required");
    }
    if (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
        throw new Exception("Username can only contain letters, numbers, and underscores");
    }
    return true;
}

function validateEmail($email) {
    if (empty($email)) {
        throw new Exception("Email is required");
    }
    if (!preg_match('/^[a-zA-Z0-9_\-\.]+@[a-zA-Z0-9_\-\.]+\.[a-zA-Z]{2,}$/', $email)) {
        throw new Exception("Invalid email format");
    }
    return true;
}

function validatePassword($password) {
    if (empty($password)) {
        throw new Exception("Password is required");
    }
    if (strlen($password) < 8) {
        throw new Exception("Password must be at least 8 characters long");
    }
    if (!preg_match('/^[a-zA-Z0-9]+$/', $password)) {
        throw new Exception("Password can only contain letters and numbers");
    }
    return true;
}

function validateConfirmPassword($password, $confirm_password) {
    if ($password !== $confirm_password) {
        throw new Exception("Passwords do not match");
    }
    return true;
}

function validateName($name) {
    if (empty($name)) {
        throw new Exception("Name is required");
    }
    if (!preg_match('/^[a-zA-Z]+$/', $name)) {
        throw new Exception("Name can only contain letters");
    }
    return true;
}


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        $username = validateInput($_POST['username']);
        $email = validateInput($_POST['email']);
        $password = validateInput($_POST['password']);
        $confirm_password = validateInput($_POST['confirm_password']);
        $first_name = validateInput($_POST['first_name']);
        $last_name = validateInput($_POST['last_name']);

        // Validate each input
        validateUsername($username);
        validateEmail($email);
        validatePassword($password);
        validateConfirmPassword($password, $confirm_password);
        validateName($first_name);
        validateName($last_name);

        // Check if username or email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username=? OR email=?");
        $stmt->bind_param('ss', $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Username or Email already exists.");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Generate activation code
        $activation_code = bin2hex(random_bytes(16));

        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, activation_code) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->bind_param('ssssss', $username, $email, $hashed_password, $first_name, $last_name, $activation_code);
        if (!$stmt->execute()) {
            throw new Exception("Error registering user. Please try again.");
        }

        // Send activation email
        $to = $email;
        $subject = "Activate Your Account";
        $message = "Please click this link to activate your account: http://your-site.com/activate.php?code=" . $activation_code;
        $headers = "From: noreply@your-site.com";

        if (!mail($to, $subject, $message, $headers)) {
            throw new Exception("Failed to send activation email. Please contact support.");
        }

        // Set success message
        $_SESSION['message'] = "Registration successful! Check your email for activation.";
        header("Location: confirmation.php");
        exit();

    } catch (Exception $e) {
        $_SESSION['error'] = $e->getMessage();
        header("Location: registration.php");
        exit();
    }
}


<?php
$host = "localhost";
$usernameDB = "root";
$passwordDB = "";
$dbname = "test";

$conn = new mysqli($host, $usernameDB, $passwordDB, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include_once 'db_connection.php';

if (isset($_GET['code'])) {
    $activation_code = $_GET['code'];
    $stmt = $conn->prepare("SELECT id FROM users WHERE activation_code=? AND activated=0");
    $stmt->bind_param('s', $activation_code);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user_id = $result->fetch_assoc()['id'];
        // Update user to activated
        $stmtUpdate = $conn->prepare("UPDATE users SET activated=1 WHERE id=?");
        $stmtUpdate->bind_param('i', $user_id);
        if ($stmtUpdate->execute()) {
            $_SESSION['message'] = "Your account has been successfully activated!";
            header("Location: login.php");
            exit();
        } else {
            die("Error activating your account.");
        }
    } else {
        die("Invalid activation link or already activated.");
    }
}
?>


<?php
session_start();
if (!isset($_SESSION['message'])) {
    header("Location: registration.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Confirmation Page</title>
</head>
<body>
    <?php if (isset($_SESSION['message'])) { ?>
        <p><?php echo $_SESSION['message']; ?></p>
        <?php unset($_SESSION['message']); ?>
    <?php } ?>
    <a href="login.php">Login Here</a>
</body>
</html>


<?php
session_start();
include_once 'db_connection.php';

if (isset($_POST['submit'])) {
    $email = validateInput($_POST['email']);
    $password = $_POST['password'];

    // Validate email and password
    if (!preg_match('/^[a-zA-Z0-9_\-\.]+@[a-zA-Z0-9_\-\.]+\.[a-zA-Z]{2,}$/', $email)) {
        $_SESSION['error'] = "Invalid email format";
        header("Location: login.php");
        exit();
    }

    if (empty($password)) {
        $_SESSION['error'] = "Password is required";
        header("Location: login.php");
        exit();
    }

    // Check user in database
    $stmt = $conn->prepare("SELECT id, password FROM users WHERE email=? AND activated=1");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        if (password_verify($password, $user_data['password'])) {
            $_SESSION['id'] = $user_data['id'];
            header("Location: dashboard.php");
            exit();
        } else {
            $_SESSION['error'] = "Incorrect password";
            header("Location: login.php");
            exit();
        }
    } else {
        $_SESSION['error'] = "Email not found or account not activated";
        header("Location: login.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <p class="error"><?php echo $_SESSION['error']; ?></p>
    <?php unset($_SESSION['error']); } ?>
    <h2>Login Here</h2>
    <form action="login.php" method="POST">
        <input type="email" name="email" placeholder="Email..." required>
        <input type="password" name="password" placeholder="Password..." required>
        <button type="submit" name="submit">Login</button>
    </form>
    <p>Don't have an account? <a href="registration.php">Register Here</a></p>
</body>
</html>


<?php
// Database connection file (db_connect.php)
require_once("db_connect.php");

function registerUser($firstName, $lastName, $email, $username, $password) {
    // Sanitize inputs to prevent XSS attacks
    $firstName = htmlspecialchars($firstName);
    $lastName = htmlspecialchars($lastName);
    $email = htmlspecialchars($email);
    $username = htmlspecialchars($username);

    // Check if all fields are filled out
    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
        return "Please fill in all required fields.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Check password strength (at least 8 characters with at least one uppercase letter, lowercase letter, and number)
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long.";
    }
    if (!preg_match('/[A-Z]/', $password)) {
        return "Password must contain at least one uppercase letter.";
    }
    if (!preg_match('/[a-z]/', $password)) {
        return "Password must contain at least one lowercase letter.";
    }
    if (!preg_match('/\d/', $password)) {
        return "Password must contain at least one number.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists in the database
    $checkUsernameQuery = "SELECT COUNT(*) AS count FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);

    if ($row['count'] > 0) {
        return "Username already exists. Please choose another username.";
    }

    // Insert user into database
    $insertQuery = "INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sssss", $firstName, $lastName, $email, $username, $hashedPassword);

    if (!mysqli_stmt_execute($stmt)) {
        return "Registration failed. Please try again later.";
    }

    // Registration successful
    return "Registration successful! You can now login with your credentials.";

}

// Close database connection
mysqli_close($conn);
?>



<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'registration';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Registration function
function registerUser($firstName, $lastName, $email, $password, $conn) {
    // Validate input data
    if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Sanitize input data
    $firstName = sanitizeInput($firstName);
    $lastName = sanitizeInput($lastName);
    $email = sanitizeInput($email);

    // Check if email already exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Check password strength
    if (!preg_match("/^(?=.*\d)(?=.*[@#$%^&+=])(?=.*[a-z])(?=.*[A-Z]).{8,}$/", $password)) {
        return "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("ssss", $firstName, $lastName, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . $conn->error;
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call registration function
    $result = registerUser($firstName, $lastName, $email, $password, $conn);
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Include necessary files or configurations
require_once('config.php');

function registerUser() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = htmlspecialchars(trim($_POST['first_name']));
        $last_name = htmlspecialchars(trim($_POST['last_name']));
        $phone_number = htmlspecialchars(trim($_POST['phone_number']));

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            die("All fields are required!");
        }

        if ($password !== $confirm_password) {
            die("Passwords do not match!");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format!");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Database connection
        try {
            $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
            
            if ($conn->connect_error) {
                die("Connection failed: " . $conn->connect_error);
            }

            // Check if username or email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                die("Username or email already exists!");
            }

            // Insert user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, phone_number) VALUES (?, ?, ?, ?, ?, ?)");
            $stmt->bind_param("ssssss", $username, $email, $hashed_password, $first_name, $last_name, $phone_number);

            if ($stmt->execute()) {
                // Redirect to welcome page or login page
                header("Location: welcome.php");
                exit();
            } else {
                die("Registration failed. Please try again.");
            }

        } catch (Exception $e) {
            die("Error: " . $e->getMessage());
        } finally {
            if ($conn) {
                $conn->close();
            }
        }
    }
}

// Display registration form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <input type="text" name="first_name" placeholder="First Name" required><br>
        <input type="text" name="last_name" placeholder="Last Name" required><br>
        <input type="tel" name="phone_number" placeholder="Phone Number" pattern="[0-9]{10}" required><br>
        <button type="submit">Register</button>
    </form>

    <?php
    // Call the registration function
    registerUser();
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($username, $email, $password) {
    global $conn;

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Check username length
    if (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Check password strength
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    // Check for existing username or email
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
    $stmt->execute([$username, $email]);
    if ($stmt->rowCount() > 0) {
        return "Username or email already exists!";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (id, username, email, password) VALUES (?, ?, ?, ?)");
        $userId = uniqid();
        $stmt->execute([$userId, $username, $email, $hashed_password]);

        // Log registration attempt
        $logStmt = $conn->prepare("INSERT INTO logs (user_id, action, timestamp) VALUES (?, 'registered', NOW())");
        $logStmt->execute([$userId]);

        return "Registration successful!";
    } catch(PDOException $e) {
        error_log("Registration error: " . $e->getMessage());
        return "An error occurred during registration. Please try again later.";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    
    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
function registerUser($username, $email, $password) {
    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'mydatabase';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate inputs
        if (!isset($username) || !isset($email) || !isset($password)) {
            return "All fields are required!";
        }

        // Check username length
        if (strlen($username) < 3 || strlen($username) > 20) {
            return "Username must be between 3 and 20 characters!";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return "Invalid email format!";
        }

        // Check password strength (at least 8 characters)
        if (strlen($password) < 8) {
            return "Password must be at least 8 characters long!";
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            return "Username already exists!";
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            return "Email already registered!";
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashedPassword]);

        return "Registration successful!";

    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Include database connection file
include 'db_connection.php';

function registerUser($username, $password, $email) {
    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, htmlspecialchars($username));
    $password = mysqli_real_escape_string($conn, htmlspecialchars($password));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $check_username_query);
    
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $check_email_query);

    if (mysqli_num_rows($result) > 0) {
        return "Email already exists";
    }

    // Validate username length
    if (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters";
    }

    // Validate password strength
    if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/', $password)) {
        return "Password must contain at least 8 characters with at least one number, one lowercase letter, and one uppercase letter";
    }

    // Validate email format
    if (!preg_match('/^[^\s@]+@[^\s@]+\.[^\s@]+$/', $email)) {
        return "Invalid email format";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insert_query = "INSERT INTO users (username, password, email) VALUES ('$username', '$hashed_password', '$email')";
    
    if (!mysqli_query($conn, $insert_query)) {
        return "Registration failed. Please try again later.";
    }

    // Close database connection
    mysqli_close($conn);

    // Redirect to login page or dashboard
    header("Location: login.php?registered=success");
    exit();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    $email = $_POST['email'];

    // Call the registration function
    $result = registerUser($username, $password, $email);

    if ($result != "Registration successful!") {
        echo $result;
    }
}
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include necessary functions
require_once('config.php');

function registerUser($username, $email, $password) {
    global $db;
    
    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $db->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return false; // Username or email already exists
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $db->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    $stmt->execute();
    
    return true; // Registration successful
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }

    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long!");
    }

    // Call the registration function
    if (registerUser($username, $email, $password)) {
        header('Location: login.php?success=registered');
        exit();
    } else {
        echo "Registration failed. Username or email already exists.";
    }
}
?>


<?php
$db_host = 'localhost';
$db_user = 'your_username';
$db_pass = 'your_password';
$db_name = 'your_database';

// Create database connection
$db = new mysqli($db_host, $db_user, $db_pass, $db_name);

if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
}
?>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get form data
    $first_name = trim($_POST['first_name']);
    $last_name = trim($_POST['last_name']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];

    // Validate inputs
    if (empty($first_name) || empty($last_name) || empty($email) || empty($password)) {
        echo "Please fill in all fields.";
        exit();
    }

    // Email validation
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address.";
        exit();
    }

    // Password validation (minimum 8 characters with letters and numbers)
    if (!preg_match('/^[a-zA-Z0-9_]{8,}$/', $password)) {
        echo "Password must be at least 8 characters long and contain only letters and numbers.";
        exit();
    }

    // Sanitize inputs
    $first_name = htmlspecialchars($first_name);
    $last_name = htmlspecialchars($last_name);
    $email = mysqli_real_escape_string($conn, $email);

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Check if email already exists in database
    $check_email_query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);
    if (mysqli_num_rows($result) > 0) {
        echo "Email already exists.";
        exit();
    }

    // Insert user into database
    $sql = "INSERT INTO users (first_name, last_name, email, password)
            VALUES ('$first_name', '$last_name', '$email', '$hashed_password')";

    if (mysqli_query($conn, $sql)) {
        // Redirect to login page or dashboard
        header("Location: welcome.php?success=Registration successful!");
        exit();
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name"><br>

        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>


<?php
// Configuration
$host = "localhost";
$username_db = "root"; // your MySQL username
$password_db = "";     // your MySQL password
$db_name = "testdb";   // your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize and validate input data
    function sanitizeInput($data) {
        return htmlspecialchars(trim($data));
    }

    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Validate username
    if (empty($username)) {
        die("Username is required");
    }
    if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
        die("Only letters and numbers are allowed in the username");
    }

    // Validate email
    if (empty($email)) {
        die("Email is required");
    }
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Validate password
    if (empty($password) || empty($confirmPassword)) {
        die("Password and confirm password are required");
    }
    if ($password !== $confirmPassword) {
        die("Passwords do not match");
    }

    if (strlen($password) < 6) {
        die("Password must be at least 6 characters");
    }

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        if (mysqli_num_rows($result) > 0) {
            die("Username or email already exists");
        }
    } else {
        die("Error checking existing users: " . mysqli_error($conn));
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (mysqli_stmt_execute($stmt)) {
        // Registration successful
        header("Location: login.php");
        exit();
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }

    mysqli_close($conn);
}

// This is the registration form HTML
?>
<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($name, $email, $password, $conn) {
    // Validate input
    if (empty($name) || empty($email) || empty($password)) {
        throw new Exception("All fields are required");
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format");
    }

    // Sanitize input
    $name = htmlspecialchars(strip_tags($name));
    $email = trim(strtolower($email));

    // Password must be at least 8 characters and contain letters and numbers
    if (!preg_match('/^(?=.*[a-zA-Z])(?=.*\d)[a-zA-Z\d]{8,}$/', $password)) {
        throw new Exception("Password must be at least 8 characters and contain both letters and numbers");
    }

    // Check if email already exists in database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            throw new Exception("Email already exists");
        }
    } catch(PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$name, $email, $hashedPassword]);
        return true;
    } catch(PDOException $e) {
        die("Error registering user: " . $e->getMessage());
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // Get input values
        $name = $_POST['name'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Register user
        if (registerUser($name, $email, $password, $conn)) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        }
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <script>
        // Add JavaScript validation here if desired
    </script>
</head>
<body>
    <h2>Register</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Name: <input type="text" name="name"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// User registration function
function register_user($conn, $user_data) {
    try {
        // Extract user data
        extract($user_data);
        
        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            throw new Exception("All fields are required");
        }
        
        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $password = mysqli_real_escape_string($conn, $password);
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }
        
        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($check_username_query);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            throw new Exception("Username already exists");
        }
        
        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email_query);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            throw new Exception("Email already exists");
        }
        
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $register_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($register_query);
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Registration failed: " . $stmt->error);
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_data = [
        'username' => $_POST['username'],
        'email' => $_POST['email'],
        'password' => $_POST['password']
    ];
    
    if (register_user($conn, $user_data)) {
        echo "Registration successful!";
        // Redirect to login page or dashboard
    }
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_registration";

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Initialize an array for error messages
    $errors = array();
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get user inputs
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $date_of_birth = $_POST['date_of_birth'];
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else {
            // Check for valid characters and length
            if (!preg_match("/^[a-zA-Z0-9]*$/", $username) || strlen($username) < 2 || strlen($username) > 20) {
                $errors[] = "Username must be between 2 and 20 characters and contain only letters and numbers";
            }
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } else {
            // Check for valid email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format";
            }
        }
        
        // Validate password
        if (empty($password) || empty($confirm_password)) {
            $errors[] = "Password is required";
        } else {
            if ($password !== $confirm_password) {
                $errors[] = "Passwords do not match";
            }
            // Check for strong password criteria
            if (!preg_match("/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[\w@#$%^&+=]{8,}$/", $password)) {
                $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and a special character";
            }
        }
        
        // Validate first name
        if (empty($first_name)) {
            $errors[] = "First name is required";
        } else {
            // Check for valid characters and length
            if (!preg_match("/^[a-zA-Z]*$/", $first_name) || strlen($first_name) < 2 || strlen($first_name) > 50) {
                $errors[] = "First name must be between 2 and 50 characters and contain only letters";
            }
        }
        
        // Validate last name
        if (empty($last_name)) {
            $errors[] = "Last name is required";
        } else {
            // Check for valid characters and length
            if (!preg_match("/^[a-zA-Z]*$/", $last_name) || strlen($last_name) < 2 || strlen($last_name) > 50) {
                $errors[] = "Last name must be between 2 and 50 characters and contain only letters";
            }
        }
        
        // Validate date of birth
        if (empty($date_of_birth)) {
            $errors[] = "Date of Birth is required";
        } else {
            // Check for valid date format
            if (!preg_match("/^(\d{4}-\d{2}-\d{2})$/", $date_of_birth) || strtotime($date_of_birth) > time()) {
                $errors[] = "Invalid date of birth. Must be in YYYY-MM-DD format and not a future date";
            }
        }
        
        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username=? OR email=?";
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Check if username already exists
            $row = $result->fetch_assoc();
            if ($row['username'] == $username) {
                $errors[] = "Username already exists";
            }
            // Check if email already exists
            if ($row['email'] == $email) {
                $errors[] = "Email already exists";
            }
        }
        
        // If no errors, proceed to register the user
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert into database
            $register_query = "INSERT INTO users (username, email, password, first_name, last_name, date_of_birth) VALUES (?, ?, ?, ?, ?, ?)";
            $stmt = $conn->prepare($register_query);
            $stmt->bind_param("ssssss", $username, $email, $hashed_password, $first_name, $last_name, $date_of_birth);
            
            if ($stmt->execute()) {
                // Registration successful
                header("Location: welcome.php?success=1");
                exit();
            } else {
                $errors[] = "Error occurred while registering user";
            }
        }
    }
    
    return $errors;
}

// Close database connection
$conn->close();

?>


<?php
session_start();
include('db_connect.php'); // Include your database connection file

if (isset($_POST['submit'])) {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $birthdate = $_POST['birthdate'];

    // Validate form data
    $errors = [];

    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    // Check username length and characters
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username) || strlen($username) < 5) {
        $errors[] = "Username must be at least 5 characters and contain only letters, numbers, and underscores!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    // Check password requirements
    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }
    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long!";
    }

    // Validate names
    if (!preg_match("/^[a-zA-Z]*$/", $first_name) || !preg_match("/^[a-zA-Z]*$/", $last_name)) {
        $errors[] = "Names can only contain letters!";
    }

    // Check birthdate format
    if (strtotime($birthdate) === false) {
        $errors[] = "Please enter a valid birthdate in YYYY-MM-DD format!";
    }

    // If no errors, proceed with registration
    if (empty($errors)) {
        // Sanitize input data
        $username = htmlspecialchars($username);
        $email = htmlspecialchars($email);
        $first_name = htmlspecialchars($first_name);
        $last_name = htmlspecialchars($last_name);
        $birthdate = htmlspecialchars($birthdate);

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($conn, $check_query);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username or email already exists!";
        }

        // If still no errors, insert into database
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            // Insert user data into the database
            $sql = "INSERT INTO users 
                    (username, email, password, first_name, last_name, birthdate) 
                    VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$birthdate')";

            if (mysqli_query($conn, $sql)) {
                // Registration successful
                $_SESSION['success'] = "You have successfully registered!";
                header("Location: registration_success.php");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again later.";
                echo mysqli_error($conn);
            }
        }
    }

    // If there are errors, store them in session and redirect back to registration form
    if (!empty($errors)) {
        $_SESSION['errors'] = $errors;
        header("Location: registration_form.php");
        exit();
    }
}
?>


<?php
// Database connection settings
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a user
function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if ($username == "" || $email == "" || $password == "" || $confirm_password == "") {
            echo "All fields are required!";
            return;
        }

        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            echo "Username must contain only letters and numbers!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Password requirements
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        if (!preg_match("/[A-Z]/", $password)) {
            echo "Password must contain at least one uppercase letter!";
            return;
        }

        if (!preg_match("/[a-z]/", $password)) {
            echo "Password must contain at least one lowercase letter!";
            return;
        }

        if (!preg_match("/\d/", $password)) {
            echo "Password must contain at least one number!";
            return;
        }

        // Check if username or email already exists
        global $conn;
        $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $check_query);
        mysqli_stmt_bind_param($stmt, 'ss', $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        $error = "All fields are required!";
        header("Location: registration.php?error=$error");
        exit();
    }

    // Check password length
    if (strlen($password) < 6) {
        $error = "Password must be at least 6 characters long!";
        header("Location: registration.php?error=$error");
        exit();
    }

    // Check if passwords match
    if ($password != $confirm_password) {
        $error = "Passwords do not match!";
        header("Location: registration.php?error=$error");
        exit();
    }

    // Sanitize input data to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $check_query);

    if (mysqli_num_rows($result) > 0) {
        $error = "Username or email already exists!";
        header("Location: registration.php?error=$error");
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user data into database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$hashed_password')";

    if (mysqli_query($conn, $sql)) {
        $_SESSION['username'] = $username;
        header("Location: welcome.php");
        exit();
    } else {
        $error = "Error registering user!";
        header("Location: registration.php?error=$error");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register user function
function registerUser() {
    global $conn;
    
    // Initialize error array
    $errors = array();
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
            $errors[] = "Username can only contain letters, numbers and underscores";
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
        
        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/', $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one letter and one number";
        }
        
        // Confirm password matches
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }
        
        // If no errors, proceed to registration
        if (empty($errors)) {
            // Sanitize input
            $username = mysqli_real_escape_string($conn, $username);
            $email = mysqli_real_escape_string($conn, $email);
            
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Check if username already exists
            $check_username_query = "SELECT id FROM users WHERE username='$username'";
            $result = mysqli_query($conn, $check_username_query);
            if (mysqli_num_rows($result) > 0) {
                $errors[] = "Username already exists";
            }
            
            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email='$email'";
            $result = mysqli_query($conn, $check_email_query);
            if (mysqli_num_rows($result) > 0) {
                $errors[] = "Email already exists";
            }
            
            // If no duplicates, proceed to insert
            if (empty($errors)) {
                $sql = "INSERT INTO users (username, email, password)
                        VALUES ('$username', '$email', '$hashed_password')";
                if (mysqli_query($conn, $sql)) {
                    header("Location: registration_success.php");
                    exit();
                } else {
                    echo "Error: " . mysqli_error($conn);
                }
            }
        }
    }
    
    // Display errors
    foreach ($errors as $error) {
        echo "<p class='error'>" . $error . "</p>";
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Database configuration
require_once 'db_config.php';

function registerUser() {
    try {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $username = trim($_POST['username']);
            $email = trim($_POST['email']);
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            // Validate inputs
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
                throw new Exception("All fields are required");
            }

            // Sanitize inputs
            $username = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars($username));
            $email = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars($email));

            // Validate username (only letters and numbers)
            if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {
                throw new Exception("Username must contain only letters and numbers");
            }

            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                throw new Exception("Invalid email format");
            }

            // Check if username already exists
            $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
            $stmt = $GLOBALS['conn']->prepare($checkUsernameQuery);
            $stmt->bind_param('s', $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                throw new Exception("Username already exists");
            }

            // Check if email already exists
            $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
            $stmt = $GLOBALS['conn']->prepare($checkEmailQuery);
            $stmt->bind_param('s', $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                throw new Exception("Email already registered");
            }

            // Validate password
            if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/[0-9]/', $password)) {
                throw new Exception("Password must be at least 8 characters long and contain both letters and numbers");
            }

            if ($password !== $confirm_password) {
                throw new Exception("Passwords do not match");
            }

            // Hash password
            $hashed_password = password_hash($password, PASSWORD_BCRYPT, array('cost' => 12));

            // Insert user into database
            $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = $GLOBALS['conn']->prepare($insertQuery);
            $stmt->bind_param('sss', $username, $email, $hashed_password);

            if (!$stmt->execute()) {
                throw new Exception("Registration failed. Please try again.");
            }

            // Set session variables
            $_SESSION['user_id'] = $stmt->insert_id;
            $_SESSION['username'] = $username;

            // Close statement and connection
            $stmt->close();
            
            return true;
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if (isset($_POST['submit'])) {
    if (registerUser()) {
        header("Location: dashboard.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration</title>
</head>
<body>
    <h2>Register New User</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

// Database connection
include 'db_connection.php';

// Generate CSRF token
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

$error = '';
$success = false;

if (isset($_POST['submit'])) {
    // Get form data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Check CSRF token
    if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        $error .= "Invalid request. Please try again.<br>";
        header("Location: registration.php");
        exit();
    }

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $error .= "All fields are required!<br>";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error .= "Invalid email format!<br>";
    }

    // Check password requirements (minimum 8 characters)
    if ($password !== $confirm_password) {
        $error .= "Passwords do not match!<br>";
    } elseif (strlen($password) < 8) {
        $error .= "Password must be at least 8 characters long!<br>";
    }

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $check_username_query);
    if (mysqli_num_rows($result) > 0) {
        $error .= "Username already taken!<br>";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $check_email_query);
    if (mysqli_num_rows($result) > 0) {
        $error .= "Email already registered!<br>";
    }

    // If no errors, proceed with registration
    if ($error === '') {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user data into database
        $register_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $register_query)) {
            $success = true;
            header("Location: login.php");
            exit();
        } else {
            $error .= "Error registering user: " . mysqli_error($conn);
        }
    }

    // Unset CSRF token after use
    unset($_SESSION['csrf_token']);
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php if ($success) { ?>
        <p>Registration successful! Please login.</p>
    <?php } else { ?>
        <?php if (!empty($error)) { ?>
            <div style="color: red;"><?php echo $error ?></div>
        <?php } ?>

        <form action="<?php echo $_SERVER['PHP_SELF'] ?>" method="post">
            <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
            
            Username: <br>
            <input type="text" name="username"><br><br>
            
            Email: <br>
            <input type="email" name="email"><br><br>
            
            Password: <br>
            <input type="password" name="password"><br><br>
            
            Confirm Password: <br>
            <input type="password" name="confirm_password"><br><br>
            
            <input type="submit" name="submit" value="Register">
        </form>
    <?php } ?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form data
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields!";
            return;
        }
        
        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Check if username already exists
        $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
        if (mysqli_num_rows($check_username) > 0) {
            echo "Username already exists!";
            return;
        }
        
        // Check if email already exists
        $check_email = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
        if (mysqli_num_rows($check_email) > 0) {
            echo "Email already exists!";
            return;
        }
        
        // Hash the password
        $password_hash = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert new user into database
        $sql = "INSERT INTO users (username, email, password_hash)
                VALUES ('$username', '$email', '$password_hash')";
        
        if (mysqli_query($conn, $sql)) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
if (isset($_POST['submit'])) {
    registerUser();
}
?>


<?php
function registerUser($username, $email, $password, $firstName = "", $lastName = "") {
    // Check if required fields are provided
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Connect to the database
    $mysqli = new mysqli("localhost", "username", "password", "database_name");

    // Check for connection errors
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    try {
        // Check if username already exists
        $stmt = $mysqli->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Username already exists.";
        }

        // Check if email already exists
        $stmt = $mysqli->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Email already exists.";
        }

        // Validate password strength
        if (strlen($password) < 6) {
            return "Password must be at least 6 characters long.";
        }

        if (!preg_match("/^[a-zA-Z\d]+$/", $password)) {
            return "Password must contain only letters and numbers.";
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $mysqli->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("sssss", $username, $email, $hashedPassword, $firstName, $lastName);

        if ($stmt->execute()) {
            return "Registration successful!";
        } else {
            return "Error registering user: " . $mysqli->error;
        }

    } catch (Exception $e) {
        return "An error occurred during registration: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($mysqli !== null) {
            $mysqli->close();
        }
    }
}
?>


$username = $_POST['username'];
$email = $_POST['email'];
$password = $_POST['password'];
$firstName = $_POST['first_name'];
$lastName = $_POST['last_name'];

$result = registerUser($username, $email, $password, $firstName, $lastName);
echo $result;


<?php
// Include database configuration file
include("config.php");

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return false;
        }

        // Check if username already exists in the database
        $check_username = mysqli_query($GLOBALS['mysqli'], "SELECT username FROM users WHERE username='$username'");
        if (mysqli_num_rows($check_username) > 0) {
            echo "Username already exists!";
            return false;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return false;
        }

        // Check password length and complexity
        if (strlen($password) < 6 || strlen($username) < 3) {
            echo "Username must be at least 3 characters and password must be at least 6 characters!";
            return false;
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return false;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Insert user into database
        $query = "INSERT INTO users (username, email, password) 
                VALUES ('$username', '$email', '$hashed_password')";
        
        if (!mysqli_query($GLOBALS['mysqli'], $query)) {
            die("Error: " . mysqli_error($GLOBALS['mysqli']));
        }

        // Registration successful, redirect to login page
        header("Location: login.php?success=Registration successful!");
        exit();
    }
}

// Call the function when form is submitted
if (isset($_POST['submit'])) {
    registerUser();
}
?>


<?php
function registerUser($username, $email, $password) {
    // Connect to the database
    $db = mysqli_connect('localhost', 'username', 'password', 'database_name');
    
    // Check connection
    if (!$db) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize input
    $username = trim(htmlspecialchars($username));
    $email = trim(htmlspecialchars($email));
    $password = htmlspecialchars($password);
    
    // Validate username
    if (empty($username)) {
        return "Username is required";
    }
    if (!preg_match('/^[a-zA-Z0-9_]*$/', $username)) {
        return "Username can only contain letters, numbers, and underscores";
    }
    if (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters long";
    }
    
    // Validate email
    if (empty($email)) {
        return "Email is required";
    }
    if (!preg_match('/^[^@]+@[^@]+\.[a-zA-Z]{2,}$/', $email)) {
        return "Invalid email format";
    }
    
    // Validate password
    if (empty($password)) {
        return "Password is required";
    }
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long";
    }
    if (!preg_match('/[A-Z]/', $password) || !preg_match('/\d/', $password) || !preg_match('/[^A-Za-z0-9]/', $password)) {
        return "Password must contain at least one uppercase letter, one number, and a special character";
    }
    
    // Check if username already exists
    $stmt = mysqli_prepare($db, "SELECT * FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, 's', $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists";
    }
    
    // Check if email already exists
    $stmt = mysqli_prepare($db, "SELECT * FROM users WHERE email = ?");
    mysqli_stmt_bind_param($stmt, 's', $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    if (mysqli_num_rows($result) > 0) {
        return "Email already exists";
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $user_id = uniqid();
    $created_at = date('Y-m-d H:i:s');
    
    $stmt = mysqli_prepare($db, "INSERT INTO users (user_id, username, email, password, created_at) VALUES (?, ?, ?, ?, ?)");
    mysqli_stmt_bind_param($stmt, 'sssss', $user_id, $username, $email, $hashed_password, $created_at);
    
    if (mysqli_stmt_execute($stmt)) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . mysqli_error($db);
    }
    
    // Close database connection
    mysqli_close($db);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


function register($username, $email, $password) {
    // Check if inputs are provided
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields must be filled out.";
    }

    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // Hash password
        $password_hash = password_hash($password, PASSWORD_DEFAULT);

        // Prepare statements using prepared queries to prevent SQL injection

        // Check for existing username
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Username already exists.";
        }

        // Check for existing email
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Email is already in use.";
        }

        // Insert new user
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $password_hash);

        if ($stmt->execute()) {
            return "Registration successful!";
        } else {
            return "Registration failed. Please try again.";
        }

    } catch (mysqli_sql_exception $e) {
        // Handle database errors
        return "An error occurred during registration. Please try again later.";
    } finally {
        // Close statements and connection
        if ($stmt) {
            $stmt->close();
        }
        if ($conn) {
            $conn->close();
        }
    }
}


if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = register($username, $email, $password);
    echo $result;
}


<?php
function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = trim($_POST['username']);
        $password = trim($_POST['password']);
        $firstName = trim($_POST['first_name']);
        $lastName = trim($_POST['last_name']);
        $email = trim($_POST['email']);

        // Validate inputs
        if (empty($username) || empty($password)) {
            die("Username and password are required.");
        }

        if (strlen($password) < 8) {
            die("Password must be at least 8 characters long.");
        }

        // Sanitize input to prevent SQL injection
        $username = htmlspecialchars(mysqli_real_escape_string($conn, $username));
        $firstName = htmlspecialchars(mysqli_real_escape_string($conn, $firstName));
        $lastName = htmlspecialchars(mysqli_real_escape_string($conn, $last_name));
        $email = htmlspecialchars(mysqli_real_escape_string($conn, $email));

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Connect to database
        include_once "db_connection.php"; // Include your database connection file

        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $checkUsernameQuery);
        
        if (mysqli_num_rows($result) > 0) {
            die("Username already exists.");
        }

        // Insert user into database
        $sql = "INSERT INTO users (username, password, first_name, last_name, email)
                VALUES ('$username', '$hashedPassword', '$firstName', '$lastName', '$email')";

        if (mysqli_query($conn, $sql)) {
            echo "Registration successful!";
            // You can redirect to login page or dashboard here
        } else {
            die("Error: " . mysqli_error($conn));
        }

        // Close database connection
        mysqli_close($conn);
    }
}

// Call the function if this script is executed directly
if (basename($_SERVER['PHP_SELF']) == basename(__FILE__)) {
    registerUser();
}
?>


<?php
// Include database configuration file
include 'config.php';

// Function to handle user registration
function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));
        $password = htmlspecialchars(trim($password));
        $confirm_password = htmlspecialchars(trim($confirm_password));

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            return "All fields are required!";
        }

        // Check if username already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Username already exists!";
        }

        // Check if email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "Email already exists!";
        }

        // Check if password and confirm password match
        if ($password != $confirm_password) {
            return "Passwords do not match!";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into the database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            return "Registration successful! Please login.";
        } else {
            return "Error registering user. Please try again later.";
        }

        // Close database connection
        $conn->close();
    }
}

// Call the registration function and display messages
$message = registerUser();
echo $message;
?>


<?php
$servername = "localhost";
$username_db = "root"; // Your database username
$password_db = "";     // Your database password
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // Change to your database username
$password = '';     // Change to your database password

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($username, $email, $password, $conn) {
    // Validate inputs
    if (!validateInput($username, $email, $password)) {
        return false;
    }

    // Check if email already exists in database
    if (emailExists($email, $conn)) {
        return false;
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Prepare and execute the query
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':password', $hashedPassword);

        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function validateInput($username, $email, $password) {
    // Check if any of the fields are empty
    if (empty($username) || empty($email) || empty($password)) {
        return false;
    }

    // Validate username
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return false;
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return false;
    }

    // Password must be at least 8 characters long and contain at least one number and special character
    if (!preg_match('/^(?=.*\d)(?=.*[!@#$%^&*()_+}{":?><;~-]).{8,}$/', $password)) {
        return false;
    }

    return true;
}

function emailExists($email, $conn) {
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (registerUser($username, $email, $password, $conn)) {
        echo "Registration successful!";
        header("Location: login.php"); // Redirect to login page
    } else {
        echo "Registration failed. Please try again.";
    }
}

?>


<?php
// Include database connection file
require_once "db.php";

function registerUser($username, $email, $password) {
    // Validate input data
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Check username format
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username contains invalid characters!";
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Check password requirements (at least 8 characters, including uppercase and lowercase letters)
    if (!(strlen($password) >= 8 && preg_match("/[a-z]/", $password) && preg_match("/[A-Z]/", $password))) {
        return "Password must be at least 8 characters long with both uppercase and lowercase letters!";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        // Prepare SQL query to check if username or email already exists
        $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$username, $email]);
        
        if ($stmt->rowCount() > 0) {
            return "Username or email already exists!";
        }

        // Insert new user into database
        $insertStmt = $pdo->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
        $result = $insertStmt->execute([$username, $email, $hashed_password]);

        if ($result) {
            return true; // Registration successful
        } else {
            return "Registration failed!";
        }
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    $result = registerUser($username, $email, $password);
    
    if ($result === true) {
        echo "Registration successful!";
    } else {
        echo $result;
    }
}
?>


<?php
session_start();
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = mysqli_real_escape_string($conn, trim($_POST['first_name']));
    $last_name = mysqli_real_escape_string($conn, trim($_POST['last_name']));
    $phone_number = mysqli_real_escape_string($conn, trim($_POST['phone_number']));

    // Validation
    $errors = [];
    
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password) ||
        empty($first_name) || empty($last_name) || empty($phone_number)) {
        $errors[] = "All fields are required";
    }

    // Username validation
    if (strlen($username) < 3 || strlen($username) > 20) {
        $errors[] = "Username must be between 3 and 20 characters long";
    }

    // Email validation
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    } else {
        // Check if email already exists in the database
        $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $checkEmailQuery);
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email is already registered";
        }
    }

    // Password validation
    if (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long";
    } elseif ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Phone number validation
    if (!preg_match('/^[0-9]{10}$/', $phone_number)) {
        $errors[] = "Phone number must be exactly 10 digits";
    }

    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name, phone_number) 
                VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$phone_number')";
        
        if ($conn->query($sql)) {
            // Redirect to login page
            header("Location: login.php");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again.";
            echo "<pre>" . print_r($errors, true) . "</pre>";
        }
    } else {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div><br />";
        }
    }

    mysqli_close($conn);
}
?>


<?php
$host = "localhost";
$username = "root"; // Change to your database username
$password = "";      // Change to your database password
$dbname = "yourdb";  // Replace with your database name

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $first_name = htmlspecialchars(trim($_POST['first_name']));
    $last_name = htmlspecialchars(trim($_POST['last_name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($first_name) || empty($last_name) || empty($email) || empty($username) || empty($password)) {
        $_SESSION['message'] = "All fields are required!";
        header("Location: registration.php");
        exit();
    }

    if ($password !== $confirm_password) {
        $_SESSION['message'] = "Passwords do not match!";
        header("Location: registration.php");
        exit();
    }

    // Check for existing username
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $_SESSION['message'] = "Username already exists!";
        header("Location: registration.php");
        exit();
    }

    // Check for existing email
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $_SESSION['message'] = "Email already exists!";
        header("Location: registration.php");
        exit();
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT, ['cost' => 12]);

    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param('sssss', $first_name, $last_name, $email, $username, $hashed_password);

    if ($stmt->execute()) {
        $_SESSION['message'] = "Registration successful! You can now login.";
        header("Location: registration.php");
        exit();
    } else {
        $_SESSION['message'] = "Error registering user!";
        header("Location: registration.php");
        exit();
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include necessary files
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$user = 'root';
$password = '';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to validate email
function validateEmail($email) {
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return true;
    } else {
        return false;
    }
}

// Function to validate username
function validateUsername($username) {
    // Username can contain letters, numbers, underscores and hyphens
    if (preg_match("/^[a-zA-Z0-9_\-]+$/", $username)) {
        return true;
    } else {
        return false;
    }
}

// Function to validate password
function validatePassword($password) {
    // Password must be at least 8 characters long and contain at least one uppercase, lowercase letter, number and special character
    if (preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\W_]).{8,}$/", $password)) {
        return true;
    } else {
        return false;
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Initialize variables and set default values
    $email = $username = $password = "";
    $error_message = array();

    // Get input values
    $email = sanitize($_POST['email']);
    $username = sanitize($_POST['username']);
    $password = $_POST['password'];

    // Validate email
    if (empty($email)) {
        $error_message[] = "Email is required";
    } else if (!validateEmail($email)) {
        $error_message[] = "Invalid email format";
    }

    // Validate username
    if (empty($username)) {
        $error_message[] = "Username is required";
    } else if (!validateUsername($username)) {
        $error_message[] = "Invalid username. Username can only contain letters, numbers, underscores and hyphens.";
    }

    // Validate password
    if (empty($password)) {
        $error_message[] = "Password is required";
    } else if (!validatePassword($password)) {
        $error_message[] = "Password must be at least 8 characters long and contain at least one uppercase, lowercase letter, number and special character.";
    }

    // If there are no errors
    if (empty($error_message)) {

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        if ($stmt->rowCount() > 0) {
            $error_message[] = "Username already exists";
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() > 0) {
            $error_message[] = "Email already registered";
        }

        // If no errors, proceed to registration
        if (empty($error_message)) {

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            try {
                $stmt = $conn->prepare("INSERT INTO users (email, username, password) VALUES (?, ?, ?)");
                $stmt->execute([$email, $username, $hashed_password]);

                // Set success message and redirect to login page
                $_SESSION['success_message'] = "Registration successful! Please login with your credentials.";
                header("Location: login.php");
                exit();
            } catch(PDOException $e) {
                die("Error registering user: " . $e->getMessage());
            }
        }
    }

    // If there are errors, display them
    if (!empty($error_message)) {
        $_SESSION['error_messages'] = $error_message;
        header("Location: registration.php");
        exit();
    }
}
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Sanitize and validate input data
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate required fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check password length
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);
        
        if (!$hashed_password) {
            die("Failed to hash password.");
        }

        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            echo "Error: " . $stmt->error;
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'user_registration';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Function to validate email uniqueness
function emailExists($conn, $email) {
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    return $stmt->rowCount() > 0;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Initialize error array
    $errors = array();

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Check for existing email
    if (emailExists($conn, $email)) {
        $errors[] = "Email already exists. Please use a different email address.";
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/", $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number";
    }

    // If no errors
    if (empty($errors)) {
        try {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Prepare SQL statement
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password]);

            // Redirect to login page after successful registration
            header("Location: login.php?message=Registration%20successful.%20Please%20login.");
            exit();
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    } else {
        // Store errors in session and redirect back to registration form
        $_SESSION['errors'] = $errors;
        header("Location: register.php");
        exit();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Check email format
        if (!preg_match("/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/", $email)) {
            echo "Invalid email format.";
            return;
        }
        
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));
        
        global $conn;
        
        try {
            // Check if username already exists
            $check_username = mysqli_real_escape_string($conn, $username);
            $query = "SELECT * FROM users WHERE username = '$check_username'";
            $result = mysqli_query($conn, $query);
            
            if (mysqli_num_rows($result) > 0) {
                echo "Username already exists.";
                return;
            }
            
            // Check if email already exists
            $check_email = mysqli_real_escape_string($conn, $email);
            $query = "SELECT * FROM users WHERE email = '$check_email'";
            $result = mysqli_query($conn, $query);
            
            if (mysqli_num_rows($result) > 0) {
                echo "Email already exists.";
                return;
            }
            
            // Insert user into database
            $query = "INSERT INTO users (username, email, password)
                      VALUES ('$check_username', '$check_email', '$hashed_password')";
            $result = mysqli_query($conn, $query);
            
            if ($result) {
                echo "Registration successful!";
                header("Location: welcome.php");
                exit();
            } else {
                echo "Error registering user.";
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}

// Call the registration function
registerUser();

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

try {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate inputs
        $name = trim(mysqli_real_escape_string($conn, $_POST['name']));
        $email = trim(mysqli_real_escape_string($conn, strtolower($_POST['email'])));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm-password'];

        if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {
            throw new Exception("All fields are required!");
        }

        // Validate email format
        if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            throw new Exception("Invalid email format!");
        }

        // Validate password requirements
        if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || 
            !preg_match('/\d/', $password) || !preg_match('/[^A-Za-z\d]/', $password)) {
            throw new Exception("Password must be at least 8 characters, containing letters, numbers, and special characters!");
        }

        // Check if passwords match
        if ($password !== $confirm_password) {
            throw new Exception("Passwords do not match!");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Check for existing email
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            throw new Exception("Email already exists. Please use a different email.");
        }

        // Insert user data into the database
        $insertQuery = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $name, $email, $hashed_password);

        if (!mysqli_stmt_execute($stmt)) {
            throw new Exception("Registration failed. Please try again.");
        }

        // Registration successful
        header("Location: registration_success.php");
        exit();
    }
} catch (Exception $e) {
    die("Error: " . htmlspecialchars($e->getMessage()));
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields are required!");
    }

    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        die("Username can only contain letters, numbers, and underscores!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Password requirements
    if (strlen($password) < 8 || !preg_match('/[A-Z]/', $password) || 
        !preg_match('/[0-9]/', $password) || !preg_match('/[^A-Za-z0-9]/', $password)) {
        die("Password must be at least 8 characters and contain:
            - At least one uppercase letter
            - At least one number
            - At least one special character");
    }

    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Username or email already exists!");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        $stmt->execute();
        
        echo "Registration successful! <a href='login.php'>Click here to login</a>";
    } catch (Exception $e) {
        die("Error registering user: " . $e->getMessage());
    }

    $stmt->close();
}

// Close database connection
$conn->close();
?>


<?php
session_start();
include("db_connection.php");

try {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        throw new Exception("All fields are required!");
    }

    if ($password !== $confirm_password) {
        throw new Exception("Passwords do not match!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format!");
    }

    // Prepare and execute SQL to check existing users
    $stmt = $conn->prepare("SELECT id FROM users WHERE username=? OR email=?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        throw new Exception("Username or email already exists!");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    $stmt->execute();

    // Start session
    $_SESSION['id'] = $stmt->insert_id;
    $_SESSION['username'] = $username;
    $_SESSION['logged_in'] = true;

    header("Location: welcome.php");
} catch (Exception $e) {
    $error = urlencode($e->getMessage());
    header("Location: register.html?error=$error");
}

$conn->close();
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to handle user registration
    function registerUser($first_name, $last_name, $email, $password, $conn) {
        // Sanitize inputs
        $first_name = htmlspecialchars(strip_tags(trim($first_name)));
        $last_name = htmlspecialchars(strip_tags(trim($last_name)));
        $email = htmlspecialchars(strip_tags(trim($email)));
        $password = trim($password);

        // Validate inputs
        if (empty($first_name) || empty($last_name) || empty($email) || empty($password)) {
            throw new Exception("All fields are required");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Email is invalid");
        }

        if (strlen($password) < 6) {
            throw new Exception("Password must be at least 6 characters");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            throw new Exception("Email already exists");
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)");
        $stmt->execute([$first_name, $last_name, $email, $hashed_password]);

        // Get the new user ID
        $user_id = $conn->lastInsertId();

        // Set session variables
        $_SESSION['id'] = $user_id;
        $_SESSION['first_name'] = $first_name;
        $_SESSION['last_name'] = $last_name;

        return true;
    }

    // Handle form submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        try {
            registerUser($_POST['first_name'], $_POST['last_name'], $_POST['email'], $_POST['password'], $conn);
            header("Location: dashboard.php");
            exit();
        } catch (Exception $e) {
            // Set error message in session
            $_SESSION['messages'] = array('error' => $e->getMessage());
            header("Location: register.php");
            exit();
        }
    }

} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration file
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $date_of_birth = $_POST['date_of_birth'];

    // Initialize error array
    $errors = [];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    // Check username length
    if (strlen($username) < 4) {
        $errors[] = "Username must be at least 4 characters long!";
    }

    // Check password length and complexity
    if (strlen($password) < 8 || !preg_match('/[A-Za-z]/', $password) || !preg_match('/[0-9]/', $password)) {
        $errors[] = "Password must be at least 8 characters long and contain both letters and numbers!";
    }

    // Check if password matches confirm password
    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    // Validate date of birth format
    if (!preg_match('/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/', $date_of_birth)) {
        $errors[] = "Please enter a valid date of birth!";
    }

    // If there are no errors
    if (empty($errors)) {
        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $first_name = mysqli_real_escape_string($conn, $first_name);
        $last_name = mysqli_real_escape_string($conn, $last_name);

        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, 's', $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username already exists!";
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email already registered!";
        }

        // If no errors after checks
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $insert_query = "
                INSERT INTO users (
                    username,
                    email,
                    password,
                    first_name,
                    last_name,
                    date_of_birth
                ) VALUES (?, ?, ?, ?, ?, ?)
            ";

            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, 'ssssss', $username, $email, $hashed_password, $first_name, $last_name, $date_of_birth);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                echo "Registration successful!";
                header("Location: login.php");
                exit();
            } else {
                // Error inserting into database
                $errors[] = "An error occurred while registering. Please try again later.";
            }
        }
    }

    // Close database connection
    mysqli_close($conn);

    // Display errors if any
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <!-- Add Bootstrap CSS for styling -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Registration Form</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <div class="mb-3">
                <label for="username">Username:</label>
                <input type="text" name="username" id="username" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="email">Email:</label>
                <input type="email" name="email" id="email" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="password">Password:</label>
                <input type="password" name="password" id="password" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" name="confirm_password" id="confirm_password" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="first_name">First Name:</label>
                <input type="text" name="first_name" id="first_name" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="last_name">Last Name:</label>
                <input type="text" name="last_name" id="last_name" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="date_of_birth">Date of Birth (YYYY-MM-DD):</label>
                <input type="text" name="date_of_birth" id="date_of_birth" class="form-control" required pattern="[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])">
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>

    <!-- Add Bootstrap JS and Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
</body>
</html>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$user_name = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $user_name, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Handle registration form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form values
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
        exit();
    }

    // Check username length
    if (strlen($username) < 3 || strlen($username) > 20) {
        echo "Username must be between 3 and 20 characters!";
        exit();
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address!";
        exit();
    }

    // Check password requirements
    if (strlen($password) < 8 || !preg_match('/^[a-zA-Z0-9!@#$%^&*()_+}{":;\'?/<>,.]+$/', $password)) {
        echo "Password must be at least 8 characters and contain only letters, numbers, and special characters!";
        exit();
    }

    // Check password match
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        exit();
    }

    // Encrypt password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $check_query);

    if (mysqli_num_rows($result) > 0) {
        echo "Username or email already exists!";
        exit();
    }

    // Insert new user into the database
    $insert_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
    
    if (mysqli_query($conn, $insert_query)) {
        // Set session variables
        $_SESSION['username'] = $username;
        $_SESSION['email'] = $email;

        // Redirect to welcome page
        header("Location: welcome.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h2 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm your password" required>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function register_user($username, $email, $password, $confirm_password) {
    global $conn;

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "All fields are required!";
    }

    // Check if username contains only letters and numbers
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username can only contain letters, numbers, and underscores!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    // Check if password matches confirm password
    if ($password !== $confirm_password) {
        return "Passwords do not match!";
    }

    // Password requirements: at least 8 characters, containing letters and numbers
    if (!preg_match("/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/", $password)) {
        return "Password must be at least 8 characters long and contain both letters and numbers!";
    }

    // Check if username already exists
    $check_username_query = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $check_username_query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $check_email_query = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $check_email_query);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insert_query);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
    mysqli_stmt_execute($stmt);

    // Check if registration was successful
    if (mysqli_stmt_affected_rows($stmt) > 0) {
        return "Registration successful!";
    } else {
        return "Registration failed!";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Call the register_user function
    $result = register_user($username, $email, $password, $confirm_password);
    echo $result;
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new mysqli($host, $username, $password, $dbname);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    if (isset($_POST['submit'])) {
        // Sanitize and validate input
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Check if all fields are filled
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "Please fill in all required fields!";
            exit;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            exit;
        }

        // Check if password and confirm password match
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            exit;
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            exit;
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already registered!";
            exit;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            echo "Registration successful! You can now login.";
            // Redirect to login page after 3 seconds
            header("Refresh: 3; url=login.php");
            exit;
        } else {
            echo "Error registering user: " . $conn->error;
            exit;
        }

    }
} catch (Exception $e) {
    die('An error occurred: ' . $e->getMessage());
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br>

        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));
    $password = $_POST['password'];
    
    // Validate username
    if (empty($username) || strlen($username) < 3 || strlen($username) > 20) {
        die("Username must be between 3 and 20 characters");
    }
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address");
    }
    
    // Validate password
    if (empty($password) || strlen($password) < 6) {
        die("Password must be at least 6 characters long");
    }
    
    // Check if username already exists
    $checkUsernameQuery = "SELECT username FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        die("Username already exists. Please choose a different username.");
    }
    
    // Check if email already exists
    $checkEmailQuery = "SELECT email FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        die("Email already exists. Please use a different email address.");
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        echo "Registration successful!";
        // Redirect to login page after 2 seconds
        header("Refresh: 2; url=login.php");
    } else {
        die("Error registering user: " . $conn->error);
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include necessary files and set up database connection
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Function for user registration
function registerUser() {
    global $conn;

    // Initialize variables
    $username = $email = $password = "";
    $errors = array();

    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Retrieve and sanitize input values
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            array_push($errors, "Username is required");
        } else {
            // Check for valid characters in username
            if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
                array_push($errors, "Username can only contain letters, numbers, and underscores");
            }
        }

        // Validate email
        if (empty($email)) {
            array_push($errors, "Email is required");
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Please enter a valid email address");
        }

        // Validate password
        if ($password !== $confirm_password) {
            array_push($errors, "Passwords do not match");
        }
        if (empty($password)) {
            array_push($errors, "Password is required");
        } else {
            // Check for minimum length, uppercase, lowercase, number, and special character
            if (!preg_match('/^(?=.*\d)(?=.*[A-Za-z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$/', $password)) {
                array_push($errors, "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, a number, and a special character");
            }
        }

        // Check if username or email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            array_push($errors, "Username or email already exists");
        }

        // If no errors, proceed to register the user
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            // Insert into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);

            if ($stmt->execute()) {
                echo "Registration successful! You can now log in.";
            } else {
                array_push($errors, "Error occurred during registration");
            }
        }

        // Close statement
        $stmt->close();
    }
}

// Call the register function
registerUser();

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'username';
$password = 'password';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $password, $email, $first_name, $last_name, $birthdate) {
    global $conn;
    
    // Validate inputs
    $errors = array();
    
    // Check if username is valid (only letters and numbers)
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores.";
    }
    
    // Check if password is strong enough
    if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/", $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.";
    }
    
    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address.";
    }
    
    // Check if first name is valid (only letters)
    if (!preg_match("/^[a-zA-Z]*$/", $first_name)) {
        $errors[] = "First name can only contain letters.";
    }
    
    // Check if last name is valid (only letters)
    if (!preg_match("/^[a-zA-Z]*$/", $last_name)) {
        $errors[] = "Last name can only contain letters.";
    }
    
    // Check if birthdate is valid
    $birthdate_timestamp = strtotime($birthdate);
    if ($birthdate_timestamp === false) {
        $errors[] = "Please enter a valid birthdate.";
    } else {
        $birthdate = date("Y-m-d", $birthdate_timestamp);
    }
    
    // If there are errors, return them
    if (!empty($errors)) {
        return array(
            'status' => 'error',
            'errors' => $errors
        );
    }
    
    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $errors[] = "Username or email already exists.";
        return array(
            'status' => 'error',
            'errors' => $errors
        );
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, password, email, first_name, last_name, birthdate, registration_date) VALUES (?, ?, ?, ?, ?, ?, NOW())");
    $stmt->bind_param("ssssss", $username, $hashed_password, $email, $first_name, $last_name, $birthdate);
    
    if ($stmt->execute()) {
        return array(
            'status' => 'success',
            'message' => "Registration successful!"
        );
    } else {
        return array(
            'status' => 'error',
            'errors' => array("An error occurred while registering the user.")
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    $email = $_POST['email'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $birthdate = $_POST['birthdate'];
    
    $result = registerUser($username, $password, $email, $first_name, $last_name, $birthdate);
    
    if ($result['status'] == 'success') {
        echo "Success: " . $result['message'];
    } else {
        foreach ($result['errors'] as $error) {
            echo $error . "<br>";
        }
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

try {
    // Create database connection
    $conn = new mysqli($host, $username_db, $password_db, $db_name);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize user input
        $username = $conn->real_escape_string(trim($_POST['username']));
        $email = $conn->real_escape_string(trim($_POST['email']));
        $password = $conn->real_escape_string(trim($_POST['password']));
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            die("All fields are required!");
        }
        
        // Check email format
        if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            die("Invalid email format!");
        }
        
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);
        
        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            // Redirect to login page after successful registration
            header("Location: login.php?success=Registration successful! Please login.");
            exit();
        } else {
            die("Error registering user: " . $conn->error);
        }
    }
    
} catch (Exception $e) {
    // Handle any exceptions
    echo "An error occurred: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>



<?php
// Database connection details
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'user-registration');

function registerUser($username, $email, $password, $confirmPassword) {
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string(getConnection(), $username);
    $email = mysqli_real_escape_string(getConnection(), $email);
    
    // Check for empty fields
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        return false;
    }
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return false;
    }
    
    // Check if passwords match
    if ($password !== $confirmPassword) {
        return false;
    }
    
    // Check if email already exists in the database
    $checkEmailQuery = "SELECT id FROM users WHERE email=?";
    $stmt = getConnection()->prepare($checkEmailQuery);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return false;
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $insertUserQuery = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = getConnection()->prepare($insertUserQuery);
    $stmt->bind_param('sss', $username, $email, $hashedPassword);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

function getConnection() {
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm-password'];
    
    if (registerUser($username, $email, $password, $confirmPassword)) {
        echo "Registration successful!";
    } else {
        echo "Registration failed. Please check your details.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm-password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'mydatabase';
$user = 'username';
$password = 'password';

try {
    // Create connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];
        $firstName = htmlspecialchars(trim($_POST['first_name']));
        $lastName = htmlspecialchars(trim($_POST['last_name']));
        $birthday = $_POST['birthday'];

        // Initialize error array
        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match('/^[a-zA-Z]+$/', $username)) {
            $errors[] = "Username must contain only letters";
        } elseif (strlen($username) < 3 || strlen($username) > 20) {
            $errors[] = "Username must be between 3 and 20 characters";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Check if email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            $errors[] = "Email is already registered";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        } elseif (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#$%^&+=])/', $password)) {
            $errors[] = "Password must contain at least one uppercase, lowercase letter, number, and special character";
        }

        // Check if password matches confirm password
        if ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match";
        }

        // Validate first name
        if (empty($firstName)) {
            $errors[] = "First name is required";
        } elseif (!preg_match('/^[a-zA-Z]+$/', $firstName)) {
            $errors[] = "First name must contain only letters";
        }

        // Validate last name
        if (empty($lastName)) {
            $errors[] = "Last name is required";
        } elseif (!preg_match('/^[a-zA-Z]+$/', $lastName)) {
            $errors[] = "Last name must contain only letters";
        }

        // Validate birthday
        if (empty($birthday)) {
            $errors[] = "Birthday is required";
        } else {
            $date = DateTime::createFromFormat('Y-m-d', $birthday);
            if (!$date || $date->format('Y-m-d') !== $birthday) {
                $errors[] = "Invalid birthday format. Please use YYYY-MM-DD.";
            }
        }

        // If no errors, proceed to registration
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            try {
                // Insert user into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, birthday) VALUES (?, ?, ?, ?, ?, ?)");
                $stmt->execute([$username, $email, $hashedPassword, $firstName, $lastName, $birthday]);

                // Registration successful
                echo "Registration successful!";
            } catch (PDOException $e) {
                // Handle database errors
                echo "Error: " . $e->getMessage();
            }
        } else {
            // Display validation errors
            foreach ($errors as $error) {
                echo $error . "<br>";
            }
        }
    }
} catch (PDOException $e) {
    // Handle connection errors
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
include('config.php');

function registerUser($username, $email, $password, $confirm_password, $first_name, $last_name) {
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);
    $confirm_password = mysqli_real_escape_string($conn, $confirm_password);
    $first_name = mysqli_real_escape_string($conn, $first_name);
    $last_name = mysqli_real_escape_string($conn, $last_name);

    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields";
    }

    // Check if password matches confirm password
    if ($password != $confirm_password) {
        return "Passwords do not match";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if username already exists
    $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
    if (mysqli_num_rows($check_username) > 0) {
        return "Username already exists";
    }

    // Check if email already exists
    $check_email = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
    if (mysqli_num_rows($check_email) > 0) {
        return "Email already registered";
    }

    // Hash the password before storing it
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Insert new user into database
    $query = "INSERT INTO users (username, email, password, first_name, last_name) 
              VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name')";
    
    if (!mysqli_query($conn, $query)) {
        return "Registration failed. Please try again later.";
    }

    // Registration successful
    return "Registration successful! You can now login.";
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = registerUser(
        $_POST['username'],
        $_POST['email'],
        $_POST['password'],
        $_POST['confirm_password'],
        $_POST['first_name'],
        $_POST['last_name']
    );
    
    echo $result;
}
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Registration function
function registerUser($conn) {
    // Get form data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = sanitizeInput($_POST['first_name']);
    $last_name = sanitizeInput($_POST['last_name']);
    $phone_number = sanitizeInput($_POST['phone_number']);
    $date_of_birth = $_POST['date_of_birth'];

    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields must be filled out");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match");
    }

    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $check_query);

    if (mysqli_num_rows($result) > 0) {
        die("Username or email already exists");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users 
            (username, email, password, first_name, last_name, phone_number, date_of_birth) 
            VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$phone_number', '$date_of_birth')";

    if (mysqli_query($conn, $sql)) {
        // Registration successful
        header("Location: login.php?success=Registration successful! Please login.");
        exit();
    } else {
        die("Error: " . mysqli_error($conn));
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser($conn);
} else {
    // Display registration form
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label>Username:</label><br>
        <input type="text" name="username"><br>

        <label>Email:</label><br>
        <input type="email" name="email"><br>

        <label>Password:</label><br>
        <input type="password" name="password"><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password"><br>

        <label>First Name:</label><br>
        <input type="text" name="first_name"><br>

        <label>Last Name:</label><br>
        <input type="text" name="last_name"><br>

        <label>Phone Number:</label><br>
        <input type="tel" name="phone_number"><br>

        <label>Date of Birth:</label><br>
        <input type="date" name="date_of_birth"><br>

        <input type="submit" value="Register">
    </form>
    <?php
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration file
include('db_config.php');

function registerUser($username, $password, $email) {
    // Check if username is already taken
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($this->conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return false; // Username already exists
    }

    // Check if email is already taken
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($this->conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return false; // Email already exists
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, password, email) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($this->conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $hashedPassword, $email);

    if (mysqli_stmt_execute($stmt)) {
        return true; // Registration successful
    } else {
        return false; //Registration failed
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    $email = $_POST['email'];

    if (registerUser($username, $password, $email)) {
        echo "Registration successful!";
        // Redirect to login page or dashboard
        header("Location: login.php");
        exit();
    } else {
        echo "Registration failed. Please try again.";
    }
}
?>


<?php
function registerUser($username, $email, $password) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "root", "", "mydatabase");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = password_hash($password, PASSWORD_DEFAULT); // Hash the password
    
    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return array("success" => false, "message" => "All fields are required.");
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return array("success" => false, "message" => "Please enter a valid email address.");
    }
    
    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
    $result = mysqli_query($conn, $checkQuery);
    
    if (mysqli_num_rows($result) > 0) {
        return array("success" => false, "message" => "Username or email already exists.");
    }
    
    // Insert new user into the database
    $insertQuery = "INSERT INTO users (username, email, password)
                   VALUES ('$username', '$email', '$password')";
    
    if (mysqli_query($conn, $insertQuery)) {
        return array("success" => true, "message" => "Registration successful!");
    } else {
        return array("success" => false, "message" => "Error: " . mysqli_error($conn));
    }
    
    // Close the database connection
    mysqli_close($conn);
}
?>


// Example usage:
$username = $_POST['username'];
$email = $_POST['email'];
$password = $_POST['password'];

$result = registerUser($username, $email, $password);

if ($result["success"]) {
    echo "Success! " . $result["message"];
} else {
    echo "Error: " . $result["message"];
}


<?php
function registerUser($username, $email, $password) {
    // Create connection
    try {
        $conn = new mysqli("localhost", "root", "", "mydatabase");
        
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }
        
        // Sanitize inputs
        $username = $conn->real_escape_string($username);
        $email = $conn->real_escape_string($email);
        $password = password_hash($password, PASSWORD_DEFAULT); // Hash the password
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            return array("success" => false, "message" => "All fields are required.");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return array("success" => false, "message" => "Please enter a valid email address.");
        }
        
        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            return array("success" => false, "message" => "Username or email already exists.");
        }
        
        // Insert new user into the database
        $insertQuery = "INSERT INTO users (username, email, password)
                       VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $password);
        
        if ($stmt->execute()) {
            return array("success" => true, "message" => "Registration successful!");
        } else {
            return array("success" => false, "message" => "Error: " . $conn->error);
        }
    } catch (Exception $e) {
        return array("success" => false, "message" => $e->getMessage());
    } finally {
        // Close the database connection
        if ($conn) {
            $conn->close();
        }
    }
}
?>


<?php
session_start();

// Include database configuration file
require_once 'includes/config.php';
require_once 'includes/header.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $errors = array();
    
    // Validate full name
    if (empty($_POST['full_name'])) {
        $errors[] = "Full name is required";
    } else {
        $full_name = $_POST['full_name'];
        // Check if name contains only letters and spaces
        if (!preg_match("/^[a-zA-Z ]+$/", $full_name)) {
            $errors[] = "Full name must contain only letters and spaces";
        }
    }

    // Validate email
    if (empty($_POST['email'])) {
        $errors[] = "Email is required";
    } else {
        $email = $_POST['email'];
        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
    }

    // Validate password
    if (empty($_POST['password'])) {
        $errors[] = "Password is required";
    } else {
        $password = $_POST['password'];
        // Check if password meets criteria: at least 8 characters, contains uppercase, lowercase, numbers and special characters
        if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters long and contain uppercase, lowercase, numbers, and special characters";
        }
    }

    // If no errors
    if (empty($errors)) {
        // Sanitize inputs
        $full_name = mysqli_real_escape_string($conn, $full_name);
        $email = mysqli_real_escape_string($conn, $email);
        $password_hash = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $check_email_query);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email is already registered";
        } else {
            // Insert user into the database
            $query = "INSERT INTO users (full_name, email, password) VALUES ('$full_name', '$email', '$password_hash')";
            if (mysqli_query($conn, $query)) {
                // Registration successful
                header("Location: login.php");
                exit();
            } else {
                // Error occurred
                $errors[] = "Error registering user. Please try again.";
            }
        }
    }

    // Close database connection
    mysqli_close($conn);
}

// Include footer file
require_once 'includes/footer.php';
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration</title>
    <!-- Add your CSS styles here -->
</head>
<body>
    <?php if (!empty($errors)) { ?>
        <div class="alert alert-danger">
            <?php foreach ($errors as $error) { ?>
                <p><?php echo $error; ?></p>
            <?php } ?>
        </div>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="full_name">Full Name:</label>
            <input type="text" id="full_name" name="full_name" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
        </div>

        <button type="submit" class="btn btn-primary">Register</button>
    </form>
</body>
</html>


<?php
session_start();

// Database connection
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "registration";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to validate input data
function test_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get form values
    $username = test_input($_POST['username']);
    $email = test_input($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate username
    if (empty($username)) {
        $error_msg .= "Username is required<br>";
    } else {
        // Check if username already exists
        $check_username_sql = "SELECT id FROM users WHERE username=?";
        $stmt = $conn->prepare($check_username_sql);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error_msg .= "Username already exists<br>";
        }
    }

    // Validate email
    if (empty($email)) {
        $error_msg .= "Email is required<br>";
    } else {
        // Check if email format is valid
        if (!preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)+$/i", $email)) {
            $error_msg .= "Invalid email format<br>";
        } else {
            // Check if email already exists
            $check_email_sql = "SELECT id FROM users WHERE email=?";
            $stmt = $conn->prepare($check_email_sql);
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $error_msg .= "Email already exists<br>";
            }
        }
    }

    // Validate password
    if (empty($password)) {
        $error_msg .= "Password is required<br>";
    } else {
        // Password must be at least 8 characters long and contain both letters and numbers
        if (!preg_match("/^[a-zA-Z0-9]{8,}$/", $password)) {
            $error_msg .= "Password must be at least 8 characters and contain only letters and numbers<br>";
        } else if ($password != $confirm_password) {
            $error_msg .= "Passwords do not match<br>";
        }
    }

    // If there are no errors
    if (empty($error_msg)) {

        // Hash the password using bcrypt
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            
            // Optionally, you can redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    } else {
        echo "<div class='alert alert-danger'>" . $error_msg . "</div>";
    }

}

// Close database connection
$conn->close();

?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser($conn) {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get user inputs
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            throw new Exception("All fields are required!");
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            throw new Exception("Username already exists!");
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            throw new Exception("Email already exists!");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format!");
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            header("Location: registration_success.php");
            exit();
        } else {
            throw new Exception("Registration failed: " . mysqli_error($conn));
        }
    }
}

try {
    registerUser($conn);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root'; // Replace with your database username
$password_db = '';     // Replace with your database password
$db_name = 'testdb';   // Replace with your database name

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve and sanitize input data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = trim($_POST['first_name']);
    $last_name = trim($_POST['last_name']);
    $date_of_birth = trim($_POST['date_of_birth']);

    // Initialize error array
    $errors = [];

    // Validate username
    if (empty($username) || strlen($username) < 3 || strlen($username) > 20) {
        $errors[] = "Username must be between 3 and 20 characters long.";
    }

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address.";
    }

    // Validate password
    if (empty($password) || strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long.";
    }
    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match.";
    }

    // Validate names
    if (empty($first_name)) {
        $errors[] = "First name is required.";
    }
    if (empty($last_name)) {
        $errors[] = "Last name is required.";
    }

    // Validate date of birth
    if (!preg_match('/^\d{4}-\d{2}-\d{2}$/', $date_of_birth)) {
        $errors[] = "Please enter a valid date of birth in YYYY-MM-DD format.";
    }

    // If there are errors, display them and redirect back to registration form
    if (!empty($errors)) {
        $error_message = implode("<br>", $errors);
        header("Location: registration_form.html?error=$error_message");
        exit();
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Prepare SQL statement to prevent SQL injection
            $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, date_of_birth) 
                                  VALUES (?, ?, ?, ?, ?, ?)");
            
            if (!$stmt) {
                throw new Exception($conn->error);
            }

            // Bind parameters to the statement
            $stmt->bind_param("ssssss", $username, $email, $hashed_password, $first_name, $last_name, $date_of_birth);

            // Check for duplicate username or email
            $check_username = $conn->prepare("SELECT id FROM users WHERE username=?");
            $check_username->bind_param("s", $username);
            $check_username->execute();
            if ($check_username->fetch()) {
                throw new Exception("Username already exists.");
            }

            $check_email = $conn->prepare("SELECT id FROM users WHERE email=?");
            $check_email->bind_param("s", $email);
            $check_email->execute();
            if ($check_email->fetch()) {
                throw new Exception("Email already registered.");
            }

            // Execute the insert statement
            $stmt->execute();

            // Check for errors during insertion
            if ($stmt->affected_rows === 1) {
                header("Location: welcome.php?username=$username");
                exit();
            } else {
                throw new Exception("Error registering user. Please try again.");
            }
        } catch (Exception $e) {
            $error_message = $e->getMessage();
            header("Location: registration_form.html?error=$error_message");
            exit();
        } finally {
            // Close database connections
            if ($stmt) {
                $stmt->close();
            }
            $conn->close();
        }
    }
}
?>


<?php
if (isset($_GET['username'])) {
    $username = $_GET['username'];
    echo "<h1>Welcome, $username!</h1>";
} else {
    echo "<h1>Registration Successful</h1>";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function for user registration
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $firstName = sanitizeInput($_POST['first_name']);
        $lastName = sanitizeInput($_POST['last_name']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate input
        $errors = array();

        if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
            $errors[] = "All fields are required!";
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format!";
        }

        if ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match!";
        }

        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long!";
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $errors[] = "Email already exists!";
        }

        // If no errors, register the user
        if (empty($errors)) {
            // Hash password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $insertQuery = "INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("ssss", $firstName, $lastName, $email, $hashedPassword);

            if ($stmt->execute()) {
                echo "Registration successful!";
                // Optionally redirect to login page
                header('Location: login.php');
                exit();
            } else {
                $errors[] = "Error registering user!";
            }
        }

        // Display errors
        foreach ($errors as $error) {
            echo "<div class='error'>" . $error . "</div><br>";
        }
    }
}

// Close database connection
$conn->close();

?>


<?php
require_once 'database_connection.php';
registerUser();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields";
            return;
        }
        
        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            echo "Username already exists";
            return;
        }
        
        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            echo "Email already exists";
            return;
        }
        
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            echo "Registration successful! You can now login.";
            // Optionally redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = "localhost";
$username = "root"; // Change to your database username
$password = "";      // Change to your database password
$database = "user_registration";

// Connect to MySQL database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to validate and register user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields.";
            return false;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match.";
            return false;
        }

        // Check username and email format
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            echo "Username can only contain letters, numbers, and underscores.";
            return false;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address.";
            return false;
        }

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username or email already exists.";
            return false;
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            // Set session variables
            $_SESSION['user_id'] = $conn->insert_id;
            header("Location: dashboard.php"); // Redirect to dashboard
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
            return false;
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Registration</title>
    <script type="text/javascript">
        function validateForm() {
            var username = document.forms["regForm"]["username"].value;
            var email = document.forms["regForm"]["email"].value;
            var password = document.forms["regForm"]["password"].value;
            var confirm_password = document.forms["regForm"]["confirm_password"].value;

            if (username == "" || email == "" || password == "") {
                alert("Please fill in all required fields.");
                return false;
            }

            if (password != confirm_password) {
                alert("Passwords do not match.");
                return false;
            }

            // Basic username and email validation
            var usernameRegex = /^[a-zA-Z0-9_]*$/;
            if (!username.match(usernameRegex)) {
                alert("Username can only contain letters, numbers, and underscores.");
                return false;
            }

            var emailRegex = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;
            if (!email.match(emailRegex)) {
                alert("Please enter a valid email address.");
                return false;
            }

            return true;
        }
    </script>
</head>
<body>
    <h1>User Registration</h1>
    <form name="regForm" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post" onsubmit="return validateForm()">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Register</button>
    </form>

    <?php
    if (isset($_SESSION['user_id'])) {
        echo "Registration successful! Welcome to your dashboard.";
    }
    ?>
</body>
</html>


<?php
// Include database configuration file
include('config.php');

// Initialize variables
$username = $email = $password = "";
$errors = array();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    function sanitizeInput($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    // Validate and store username
    if (empty($_POST["username"])) {
        $errors[] = "Username is required";
    } else {
        $username = sanitizeInput($_POST["username"]);
        // Check if username contains only letters and numbers
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }
    }

    // Validate and store email
    if (empty($_POST["email"])) {
        $errors[] = "Email is required";
    } else {
        $email = sanitizeInput($_POST["email"]);
        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
    }

    // Validate and store password
    if (empty($_POST["password"])) {
        $errors[] = "Password is required";
    } else {
        $password = $_POST["password"];
        // Check if password meets criteria (minimum 8 characters, at least one letter and number)
        if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters long and contain both letters and numbers";
        }
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        // Hash the password before storing it
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare SQL query
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        
        try {
            // Use prepared statement to prevent SQL injection
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("sss", $username, $email, $hashed_password);

            if ($stmt->execute()) {
                // Registration successful
                header("Location: login.php?success=1");
                exit();
            } else {
                // Error registering user
                $errors[] = "Error registering user. Please try again later.";
            }
        } catch (Exception $e) {
            // Handle any exceptions
            $errors[] = "Error: " . $e->getMessage();
        }
    }

    // Close statement and connection
    if ($stmt) {
        $stmt->close();
    }
    $conn->close();
}
?>


<?php
// Include necessary files and set session
session_start();
include('db.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Function to validate and sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    
    // Validation errors array
    $errors = array();
    
    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } else if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username contains invalid characters";
    }
    
    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }
    
    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } else if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{6,}$/", $password)) {
        $errors[] = "Password must be at least 6 characters long and contain both letters and numbers";
    }
    
    // Check for existing username or email
    if (empty($errors)) {
        $sql = "SELECT id FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($db, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username or email already exists";
        }
    }
    
    // If no errors, proceed with registration
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert into database
        $sql = "INSERT INTO users (username, email, password) 
                VALUES ('$username', '$email', '$hashed_password')";
                
        if (mysqli_query($db, $sql)) {
            // Set session variables and redirect to dashboard
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            header("Location: welcome.php");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again later.";
        }
    }
    
    // Display errors if any
    foreach ($errors as $error) {
        echo "<div class='error'>$error</div>";
    }
}
?>


<?php
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

$db = mysqli_connect($host, $username, $password, $db_name);

if (!$db) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    function registerUser($conn) {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Get form values and sanitize them
            $username = htmlspecialchars(trim($_POST['username']));
            $email = htmlspecialchars(trim($_POST['email']));
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            // Validate input fields
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
                throw new Exception("All fields are required");
            }

            if ($password !== $confirm_password) {
                throw new Exception("Passwords do not match");
            }

            // Check username length
            if (strlen($username) < 3) {
                throw new Exception("Username must be at least 3 characters long");
            }

            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                throw new Exception("Invalid email format");
            }

            // Check if username already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                throw new Exception("Username already exists");
            }

            // Check if email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                throw new Exception("Email already registered");
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_BCRYPT);

            // Insert user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password]);

            // Return success message
            return "Registration successful! You can now login.";
        }
    }

    try {
        $message = registerUser($conn);
        echo "<div class='success'>$message</div>";
    } catch (Exception $e) {
        echo "<div class='error'>" . $e->getMessage() . "</div>";
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

function registerUser($username, $email, $password, $conn) {
    // Validate username
    if (empty($username)) {
        return "Username is required!";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username can only contain letters, numbers, and underscores!";
    } elseif (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters long!";
    }

    // Validate email
    if (empty($email)) {
        return "Email is required!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    // Validate password
    if (strlen($password) < 6) {
        return "Password must be at least 6 characters long!";
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    if ($stmt->rowCount() > 0) {
        return "Username already taken!";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        return "Email already registered!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);
        
        return array(
            "success" => true,
            "message" => "Registration successful!",
            "user" => array(
                "id" => $conn->lastInsertId(),
                "username" => $username,
                "email" => $email
            )
        );
    } catch (PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Register the user
    $result = registerUser($username, $email, $password, $conn);

    if (is_array($result)) {
        echo json_encode($result);
    } else {
        echo json_encode(array("success" => false, "message" => $result));
    }
}
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = htmlspecialchars(trim($data));
    return $data;
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user inputs
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate password confirmation
    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Check for empty fields
    if (empty($name) || empty($email) || empty($username) || empty($password)) {
        die("All fields must be filled out!");
    }

    // Password minimum length check
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long!");
    }

    // Encrypt password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check for existing username or email
    $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $check_query);
    
    if (mysqli_num_rows($result) > 0) {
        die("Username or email already exists!");
    }

    // Insert user into database
    $insert_query = "INSERT INTO users (name, email, username, password)
                    VALUES ('$name', '$email', '$username', '$hashed_password')";

    if (!mysqli_query($conn, $insert_query)) {
        die("Error: " . mysqli_error($conn));
    }

    // Redirect to login page after successful registration
    header("Location: login.php");
    exit();
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbUsername = 'root'; // Change this according to your database username
$dbPassword = '';      // Change this according to your database password
$dbName = 'user_registration';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

if (isset($_POST['submit'])) {
    // Initialize variables
    $errors = array();

    // Get form data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = htmlspecialchars(trim($_POST['first_name']));
    $last_name = htmlspecialchars(trim($_POST['last_name']));
    $birthdate = date('Y-m-d', strtotime($_POST['birthdate']));
    $phone_number = htmlspecialchars(trim($_POST['phone_number']));

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } else if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    } else {
        // Check if email already exists in the database
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Email already exists";
            }
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } else if (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/", $password)) {
        $errors[] = "Password must be at least 8 characters long and contain both letters and numbers";
    }

    // Validate confirm password
    if (empty($confirm_password)) {
        $errors[] = "Confirm Password is required";
    } else if ($password != $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Check for empty fields in additional information
    if (empty($first_name)) {
        $errors[] = "First name is required";
    }
    if (empty($last_name)) {
        $errors[] = "Last name is required";
    }
    if (empty($phone_number)) {
        $errors[] = "Phone number is required";
    }

    // If no errors, proceed with registration
    if (empty($errors)) {
        try {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Prepare and execute the SQL statement
            $stmt = $conn->prepare("INSERT INTO users 
                (username, email, password, first_name, last_name, birthdate, phone_number) 
                VALUES (?, ?, ?, ?, ?, ?, ?)");

            $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $birthdate, $phone_number]);

            // Redirect to the welcome page
            header("Location: welcome.php");
            exit();
        } catch(PDOException $e) {
            echo "Error registering user: " . $e->getMessage();
        }
    }

} else {
    // If form is not submitted, redirect or show registration form
    include_once 'register_form.html';
}

// Close database connection
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Check if form was submitted
    if (isset($_POST['submit'])) {
        // Sanitize and validate input data
        $username = htmlspecialchars(trim(stripslashes($_POST['username'])));
        $email = htmlspecialchars(trim(stripslashes($_POST['email'])));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            echo "Username is required";
            return false;
        }

        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            echo "Username can only contain letters and numbers";
            return false;
        }

        if (strlen($username) < 3 || strlen($username) > 20) {
            echo "Username must be between 3 and 20 characters long";
            return false;
        }

        // Validate email
        if (empty($email)) {
            echo "Email is required";
            return false;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format";
            return false;
        }

        // Validate password
        if (empty($password) || empty($confirm_password)) {
            echo "Password and Confirm Password are required";
            return false;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match";
            return false;
        }

        if (strlen($password) < 6) {
            echo "Password must be at least 6 characters long";
            return false;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Check if username already exists
            $stmt = $conn->prepare("SELECT username FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                echo "Username already exists";
                return false;
            }

            // Check if email already exists
            $stmt = $conn->prepare("SELECT email FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                echo "Email already exists";
                return false;
            }

            // Insert new user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            $stmt->execute();

            echo "Registration successful!";
        } catch (Exception $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Call the function
registerUser();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function register_user() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $errors = array();

        // Get user inputs
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } else if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Check for existing username or email
        if (empty($errors)) {
            $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
            $stmt = mysqli_prepare($conn, $check_query);
            mysqli_stmt_bind_param($stmt, "ss", $username, $email);

            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if (mysqli_num_rows($result) > 0) {
                $errors[] = "Username or email already exists";
            }
        }

        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
                return true;
            } else {
                $errors[] = "Error occurred while registering. Please try again.";
                return false;
            }
        }

        // Display errors
        foreach ($errors as $error) {
            echo $error . "<br>";
        }

    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'user_registration';

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        // Sanitize and validate input data
        $username = mysqli_real_escape_string($conn, trim($_POST['username']));
        $email = mysqli_real_escape_string($conn, trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $error[] = "Username is required!";
        } elseif (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
            $error[] = "Username can only contain letters, numbers, and underscores!";
        } elseif (strlen($username) < 5 || strlen($username) > 20) {
            $error[] = "Username must be between 5 and 20 characters!";
        }

        // Validate email
        if (empty($email)) {
            $error[] = "Email is required!";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error[] = "Please enter a valid email address!";
        }

        // Validate password
        if (empty($password) || empty($confirm_password)) {
            $error[] = "Password is required!";
        } elseif ($password !== $confirm_password) {
            $error[] = "Passwords do not match!";
        } elseif (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/', $password)) {
            $error[] = "Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number!";
        }

        // If there are errors
        if (!empty($error)) {
            foreach ($error as $errors) {
                echo "<div class='alert alert-danger'>" . $errors . "</div>";
            }
        } else {
            // Check if username or email already exists
            $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
            $result = mysqli_query($conn, $check_query);

            if (mysqli_num_rows($result) > 0) {
                echo "<div class='alert alert-danger'>";
                if (mysqli_num_rows(mysqli_query($conn, "SELECT * FROM users WHERE username='$username'")) > 0) {
                    echo "Username already exists!";
                }
                if (mysqli_num_rows(mysqli_query($conn, "SELECT * FROM users WHERE email='$email'")) > 0) {
                    echo "Email already exists!";
                }
                echo "</div>";
            } else {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert user into database
                $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = mysqli_prepare($conn, $sql);
                mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
                
                if (mysqli_stmt_execute($stmt)) {
                    echo "<div class='alert alert-success'>
                            Registration successful! You can now login.
                          </div>";
                    // Redirect after registration
                    header("Refresh: 2; url=login.php");
                } else {
                    echo "Error: " . mysqli_error($conn);
                }
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection parameters
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Register function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Initialize error array
        $errors = [];
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
        
        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number";
        }
        
        // Check if there are any errors
        if (!empty($errors)) {
            // Store errors in session
            $_SESSION['registration_errors'] = $errors;
            header("Location: registration.php");
            exit();
        } else {
            // Check if username already exists
            try {
                $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
                $stmt->execute([$username]);
                $result = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if ($result) {
                    $_SESSION['registration_errors'] = ["Username already exists"];
                    header("Location: registration.php");
                    exit();
                }
            } catch(PDOException $e) {
                die("Error checking username: " . $e->getMessage());
            }
            
            // Check if email already exists
            try {
                $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
                $stmt->execute([$email]);
                $result = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if ($result) {
                    $_SESSION['registration_errors'] = ["Email already exists"];
                    header("Location: registration.php");
                    exit();
                }
            } catch(PDOException $e) {
                die("Error checking email: " . $e->getMessage());
            }
            
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert new user into database
            try {
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->execute([$username, $email, $hashed_password]);
                
                $_SESSION['success_message'] = "Registration successful! Please login.";
                header("Location: login.php");
                exit();
            } catch(PDOException $e) {
                die("Error registering user: " . $e->getMessage());
            }
        }
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    
    // Validate input data
    $errors = array();
    
    if (empty($username) || empty($email) || empty($password)) {
        $errors[] = "All fields are required!";
    }
    
    // Check username length
    if (strlen($username) < 4) {
        $errors[] = "Username must be at least 4 characters!";
    }
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format!";
    }
    
    // Check password strength
    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters!";
    }
    
    // If there are no errors
    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        try {
            // Prepare the SQL statement to check if username or email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->execute([$username, $email]);
            
            // Check if username or email already exists
            if ($stmt->rowCount() > 0) {
                die("Username or email already exists!");
            }
            
            // Prepare the SQL statement to insert new user data
            $insertStmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $insertStmt->execute([$username, $email, $hashed_password]);
            
            // Redirect to a success page or dashboard
            header("Location: welcome.php");
            exit();
        } catch(PDOException $e) {
            die("Error occurred while registering user: " . $e->getMessage());
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <?php if (!empty($errors)) { ?>
        <?php foreach ($errors as $error) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>

        <input type="submit" value="Register">
    </form>

    <p>Already have an account? <a href="login.php">Login here</a></p>
    <p>Forgot password? <a href="forgot-password.php">Reset password</a></p>
</body>
</html>


<?php
// Connect to the database
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Register user function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form values
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if ($username == "" || $email == "" || $password == "" || $confirm_password == "") {
            echo "All fields are required!";
            return;
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsernameQuery);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }

        // Validate password
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            echo "Registration successful!";
            // You can redirect to login page here
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }

        $stmt->close();
    }
}

// Call the function
registerUser();

$conn->close();
?>


<?php
// Configuration file for database connection
include('db_config.php');

function registerUser() {
    $errors = array();
    
    if (isset($_POST['submit'])) {
        // Retrieve form data
        $firstName = mysqli_real_escape_string($GLOBALS['conn'], $_POST['first_name']);
        $lastName = mysqli_real_escape_string($GLOBALS['conn'], $_POST['last_name']);
        $email = mysqli_real_escape_string($GLOBALS['conn'], $_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate input fields
        if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
            array_push($errors, "All fields are required");
        }

        // Check for valid email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Invalid email format");
        }

        // Check password requirements
        $passwordLength = strlen($password);
        if ($passwordLength < 8) {
            array_push($errors, "Password must be at least 8 characters long");
        }
        
        // Check for matching passwords
        if ($password !== $confirmPassword) {
            array_push($errors, "Passwords do not match");
        }

        // If no errors, proceed to register user
        if (count($errors) == 0) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Check for existing email in database
            $checkEmailQuery = "SELECT id FROM users WHERE email=?";
            $stmt = $GLOBALS['conn']->prepare($checkEmailQuery);
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                array_push($errors, "Email already exists");
            } else {
                // Insert new user into database
                try {
                    $insertQuery = "INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)";
                    $stmt = $GLOBALS['conn']->prepare($insertQuery);
                    $stmt->bind_param("ssss", $firstName, $lastName, $email, $hashedPassword);
                    $stmt->execute();

                    // Check if registration was successful
                    if ($stmt->affected_rows > 0) {
                        header("Location: registration_success.php");
                        exit();
                    } else {
                        array_push($errors, "Registration failed. Please try again.");
                    }
                } catch (Exception $e) {
                    array_push($errors, "An error occurred: " . $e->getMessage());
                }
            }

            // Close statement
            $stmt->close();
        }
    }

    return $errors;
}

// Include the form HTML
include('registration_form.php');
?>


<?php
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get user inputs
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Initialize error array
        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        } else {
            // Check if email already exists in database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bindParam(1, $email);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {
                $errors[] = "Email already registered";
            }
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one letter and one number";
        }

        // Validate confirm password
        if (empty($confirm_password)) {
            $errors[] = "Confirm password is required";
        } elseif ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // If no errors, proceed to registration
        if (count($errors) == 0) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            try {
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->bindParam(1, $username);
                $stmt->bindParam(2, $email);
                $stmt->bindParam(3, $hashed_password);

                $stmt->execute();

                // Redirect to login page or display success message
                echo "Registration successful! Please login.";
            } catch (PDOException $e) {
                echo "Error registering user: " . $e->getMessage();
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<p>$error</p>";
            }
        }
    }

} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to sanitize input
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to validate email
function validateEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

// Function to check if username exists
function usernameExists($conn, $username) {
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    return $stmt->rowCount() > 0;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get and sanitize input values
    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = sanitize($_POST['first_name']);
    $last_name = sanitize($_POST['last_name']);
    $dob = $_POST['dob'];
    $phone_number = sanitize($_POST['phone_number']);
    $address = sanitize($_POST['address']);

    // Initialize error array
    $errors = [];

    // Validate input fields
    if (empty($username)) {
        $errors[] = "Username is required";
    }

    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!validateEmail($email)) {
        $errors[] = "Invalid email format";
    }

    if (empty($password)) {
        $errors[] = "Password is required";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    if (usernameExists($conn, $username)) {
        $errors[] = "Username already exists";
    }

    // If no errors
    if (empty($errors)) {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare and execute SQL statement to insert user data
        try {
            $stmt = $conn->prepare("INSERT INTO users 
                (username, email, password, first_name, last_name, dob, phone_number, address)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $dob, $phone_number, $address]);

            // Redirect to dashboard or login page
            header("Location: dashboard.php");
            exit();

        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }

    }

}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0 auto;
            padding: 20px;
            max-width: 500px;
        }
        .container {
            border: 1px solid #ccc;
            padding: 20px;
            margin-top: 20px;
        }
        input[type="text"], input[type="email"], input[type="password"], input[type="tel"] {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            display: block;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
        ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <h2>Registration Form</h2>
            <input type="text" placeholder="Enter your username..." name="username" required>
            <input type="email" placeholder="Enter your email..." name="email" required>
            <input type="password" placeholder="Enter your password..." name="password" required>
            <input type="password" placeholder="Confirm password..." name="confirm_password" required>
            <input type="text" placeholder="Enter your first name..." name="first_name">
            <input type="text" placeholder="Enter your last name..." name="last_name">
            <input type="date" name="dob">
            <input type="tel" placeholder="Enter your phone number..." name="phone_number">
            <textarea rows="5" placeholder="Enter your address..." name="address"></textarea>
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Include necessary files (e.g., database connection)
include('database.php');

function registerUser($username, $email, $password, $confirm_password) {
    // Validate inputs
    if ($username == "" || $email == "" || $password == "") {
        return "Please fill in all required fields.";
    }

    // Check username format (only letters and numbers)
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username can only contain letters, numbers, and underscores.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    // Check password strength (minimum 8 characters, at least one letter and number)
    if (strlen($password) < 8 || !preg_match('/[a-zA-Z]/', $password) || !preg_match('/\d/', $password)) {
        return "Password must be at least 8 characters long and contain letters and numbers.";
    }

    // Check password confirmation
    if ($password != $confirm_password) {
        return "Passwords do not match.";
    }

    // Connect to database
    global $conn;

    try {
        // Prepare the query with placeholders
        $stmt = $conn->prepare("SELECT username, email FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        
        // Get result
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            return "Username or email already exists.";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $insert_stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $insert_stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($insert_stmt->execute()) {
            return "Registration successful!";
        } else {
            return "Error registering user. Please try again.";
        }
    } catch (Exception $e) {
        // Handle any exceptions
        return "An error occurred: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = trim($_POST['username']);
    $email = trim(strtolower($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Call the registration function
    $message = registerUser($username, $email, $password, $confirm_password);

    if ($message == "Registration successful!") {
        // Redirect to login page or show success message
        header("Location: login.php");
        exit();
    } else {
        // Display error message
        echo "<script>alert('$message');</script>";
    }
}
?>

<!-- HTML registration form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .registration-form {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="registration-form">
        <h2>Registration Form</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>

            <div class="form-group">
                <input type="checkbox" name="agree_terms" id="agree_terms" required>
                <label for="agree_terms">I agree to the terms and conditions</label>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Include database configuration file
require_once 'db_config.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['submit'])) {
    // Initialize variables and set default error message
    $username = $email = $password = "";
    $error_msg = "";

    // Check if all required fields are filled
    if (empty($_POST["username"]) || empty($_POST["email"]) || empty($_POST["password"]) || empty($_POST["confirm_password"])) {
        $error_msg .= "All fields must be filled out. <br>";
    }

    // Validate email format
    if (!filter_var($_POST["email"], FILTER_VALIDATE_EMAIL)) {
        $error_msg .= "Invalid email format. <br>";
    }

    // Sanitize inputs to remove unwanted characters
    function sanitize($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Check password length and match
    if (strlen($password) < 6 || $password !== $confirm_password) {
        $error_msg .= "Password must be at least 6 characters and match the confirmation. <br>";
    }

    // If there are errors, display them
    if ($error_msg !== "") {
        echo "<div style='color:red'>$error_msg</div>";
    } else {
        try {
            // Prepare SQL query to check for existing username or email
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->bind_param('ss', $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                echo "Username or email already exists.";
            } else {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert new user into database
                $stmt_insert = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt_insert->bind_param('sss', $username, $email, $hashed_password);
                
                if ($stmt_insert->execute()) {
                    echo "Registration successful!";
                } else {
                    echo "Error registering user: " . $conn->error;
                }
            }

            // Close statements
            $stmt->close();
            $stmt_insert->close();
        } catch (Exception $e) {
            echo "An error occurred: " . $e->getMessage();
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
</head>
<body>
    <h2>Register New Account</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "database_name";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
    $last_name = mysqli_real_escape_string($conn, $_POST['last_name']);
    $phone_number = mysqli_real_escape_string($conn, $_POST['phone_number']);

    // Input validation
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("Please fill in all required fields");
    }

    if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
        die("Username can only contain letters and numbers");
    }

    if (strlen($username) < 3 || strlen($username) > 20) {
        die("Username must be between 3 and 20 characters");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match");
    }

    if (strlen($password) < 8 || !preg_match("/[A-Z]/", $password) || !preg_match("/[a-z]/", $password) || !preg_match("/[0-9]/", $password) || !preg_match("/[^A-Za-z0-9]/", $password)) {
        die("Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, one number, and one special character");
    }

    if (strlen($first_name) < 2 || strlen($last_name) < 2) {
        die("First and last names must be at least 2 characters long");
    }

    if (!preg_match("/^[0-9]{10}$/", $phone_number)) {
        die("Please enter a valid phone number (10 digits)");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ["cost" => 12]);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $check_username_query);
    if (mysqli_num_rows($result) > 0) {
        die("Username already exists");
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);
    if (mysqli_num_rows($result) > 0) {
        die("Email already exists");
    }

    // Insert user into database
    $insert_query = "INSERT INTO users (username, email, password, first_name, last_name, phone_number)
                    VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$phone_number')";

    if (mysqli_query($conn, $insert_query)) {
        echo "Registration successful! You can now log in.";
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br>

        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name" required><br>

        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name" required><br>

        <label for="phone_number">Phone Number:</label><br>
        <input type="tel" id="phone_number" name="phone_number" pattern="[0-9]{10}" required><br>

        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$ dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to register a user
function registerUser($username, $email, $password, $confirmPassword, $firstName, $lastName, $dob, $termsAccepted, $conn) {
    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword) || empty($firstName) || empty($lastName) || empty($dob)) {
        return "Please fill in all required fields";
    }

    // Validate password and confirm password match
    if ($password !== $confirmPassword) {
        return "Passwords do not match";
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    if ($stmt->rowCount() > 0) {
        return "Username already exists. Please choose a different username.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->rowCount() > 0) {
        return "Email address already registered. Please use a different email.";
    }

    // Validate date of birth is not in the future
    $today = date('Y-m-d');
    if ($dob > $today) {
        return "Date of birth cannot be in the future";
    }

    // Check if terms are accepted
    if (!$termsAccepted) {
        return "Please accept our Terms and Conditions to continue";
    }

    // Hash password for security
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user data into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name, date_of_birth) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->execute([$username, $email, $hashedPassword, $firstName, $lastName, $dob]);
        
        // Return success message
        return "Registration successful! You can now login with your credentials.";
    } catch (PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $dob = $_POST['dob'];
    $termsAccepted = isset($_POST['terms']) ? 1 : 0;

    // Call registration function
    $result = registerUser($username, $email, $password, $confirmPassword, $firstName, $lastName, $dob, $termsAccepted, $conn);

    if (strpos($result, 'Registration successful') !== false) {
        // Redirect to login page or show success message
        echo "<script>alert('".$result."'); window.location.href='login.php';</script>";
    } else {
        // Show error message
        echo "<script>alert('".$result."');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name"><br>

        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name"><br>

        <label for="dob">Date of Birth:</label><br>
        <input type="date" id="dob" name="dob"><br>

        <label>
            <input type="checkbox" id="terms" name="terms">
            Accept Terms and Conditions
        </label><br>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Include database configuration file
include 'config.php';

function registerUser() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate input data
        if (empty($username) || empty($email) || empty($password)) {
            die("Please fill in all required fields");
        }
        
        // Check username length
        if (strlen($username) > 50) {
            die("Username must be less than 50 characters");
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format");
        }
        
        // Sanitize input data to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        
        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $checkUsernameQuery);
        
        if (mysqli_num_rows($result) > 0) {
            die("Username already exists");
        }
        
        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $checkEmailQuery);
        
        if (mysqli_num_rows($result) > 0) {
            die("Email already registered");
        }
        
        // Hash password before storing
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashedPassword')";
        
        if (mysqli_query($conn, $sql)) {
            // Registration successful
            echo "Registration successful! You can now login.";
            header("Location: login.php");
            exit();
        } else {
            // Error occurred
            die("Error registering user: " . mysqli_error($conn));
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "testdb";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Initialize variables and set default values
$username = $email = $first_name = $last_name = "";
$errors = array();

// Check if form is submitted
if (isset($_POST['submit'])) {

    // Sanitize and store input data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = strtolower(htmlspecialchars(trim($_POST['email'])));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = htmlspecialchars(trim($_POST['first_name']));
    $last_name = htmlspecialchars(trim($_POST['last_name']));

    // Validate username
    if (!validateUsername($username)) {
        $errors[] = "Username must be between 3-20 characters and contain only letters, numbers, underscores, or dots.";
    }

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address.";
    }

    // Check for existing username or email in database
    $checkQuery = "SELECT id FROM users WHERE username=? OR email=?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ss", $username, $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        $errors[] = "Username or email already exists.";
    }

    // Validate password
    if (!validatePassword($password)) {
        $errors[] = "Password must be at least 6 characters long, containing at least one uppercase letter, lowercase letter, number, and special character.";
    } elseif ($password != $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Validate names
    if (strlen($first_name) < 2 || !preg_match("/^[a-zA-Z ]+$/", $first_name)) {
        $errors[] = "First name must be at least 2 characters and contain only letters.";
    }
    if (strlen($last_name) < 2 || !preg_match("/^[a-zA-Z ]+$/", $last_name)) {
        $errors[] = "Last name must be at least 2 characters and contain only letters.";
    }

    // If no errors, proceed to registration
    if (empty($errors)) {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Insert into database
        $insertQuery = "INSERT INTO users (username, email, first_name, last_name, password_hash) VALUES (?, ?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sssss", $username, $email, $first_name, $last_name, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            header("Location: login.php?success=Registered successfully");
            exit();
        } else {
            $errors[] = "Error registering user. Please try again.";
        }
    }

} 

// Close the database connection
mysqli_close($conn);

// Display errors if any
if (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<div style='color: red;'>$error</div>";
    }
}

// Validation functions
function validateUsername($username) {
    return preg_match('/^[a-zA-Z0-9_.]{3,20}$/', $username);
}

function validatePassword($password) {
    if (strlen($password) < 6) {
        return false;
    }

    // Check for at least one uppercase letter
    if (!preg_match('/[A-Z]/', $password)) {
        return false;
    }

    // Check for at least one lowercase letter
    if (!preg_match('/[a-z]/', $password)) {
        return false;
    }

    // Check for at least one number
    if (!preg_match('/\d/', $password)) {
        return false;
    }

    // Check for at least one special character
    if (!preg_match('/[^A-Za-z\d]/', $password)) {
        return false;
    }

    return true;
}
?>


<?php
class UserRegistration {
    private $db;
    private $errors = array();
    private $data = array();

    public function __construct($host, $username, $password, $dbname) {
        try {
            $this->db = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
            $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }

    public function register($username, $email, $password, $confirm_password) {
        // Store user data
        $this->data = [
            'username' => $username,
            'email' => $email,
            'password' => $password,
            'confirm_password' => $confirm_password
        ];

        // Validate input
        if (!$this->validateInput()) {
            return false;
        }

        // Check if username or email already exists
        if ($this->isUsernameExists() || $this->isEmailExists()) {
            return false;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Insert user into database
            $stmt = $this->db->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
            $stmt->execute([
                'username' => $username,
                'email' => $email,
                'password' => $hashed_password
            ]);

            // Registration successful
            return true;
        } catch (PDOException $e) {
            die("Registration failed: " . $e->getMessage());
        }
    }

    private function validateInput() {
        // Validate username
        if (empty($this->data['username']) || !preg_match("/^[a-zA-Z0-9_]{3,20}$/", $this->data['username'])) {
            $this->errors[] = "Username must be 3-20 characters and can contain letters, numbers, and underscores.";
        }

        // Validate email
        if (empty($this->data['email']) || !filter_var($this->data['email'], FILTER_VALIDATE_EMAIL)) {
            $this->errors[] = "Please enter a valid email address.";
        }

        // Validate password
        if (empty($this->data['password']) || !preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])[\w\d!@#$%^&*()]{8,}$/", $this->data['password'])) {
            $this->errors[] = "Password must be at least 8 characters and contain:
                - At least one uppercase letter
                - At least one lowercase letter
                - At least one number
                - At least one special character (!@#$%^&*())";
        }

        // Check password match
        if ($this->data['password'] !== $this->data['confirm_password']) {
            $this->errors[] = "Passwords do not match.";
        }

        return empty($this->errors);
    }

    private function isUsernameExists() {
        try {
            $stmt = $this->db->prepare("SELECT id FROM users WHERE username = :username");
            $stmt->execute(['username' => $this->data['username']]);
            
            if ($stmt->rowCount() > 0) {
                $this->errors[] = "Username already exists.";
                return true;
            }
        } catch (PDOException $e) {
            die("Error checking username: " . $e->getMessage());
        }

        return false;
    }

    private function isEmailExists() {
        try {
            $stmt = $this->db->prepare("SELECT id FROM users WHERE email = :email");
            $stmt->execute(['email' => $this->data['email']]);
            
            if ($stmt->rowCount() > 0) {
                $this->errors[] = "Email already exists.";
                return true;
            }
        } catch (PDOException $e) {
            die("Error checking email: " . $e->getMessage());
        }

        return false;
    }

    public function getErrors() {
        return $this->errors;
    }
}

// Example usage:
try {
    // Initialize registration class
    $registration = new UserRegistration('localhost', 'root', '', 'your_database');

    // Get form data
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Attempt registration
        if ($registration->register($username, $email, $password, $confirm_password)) {
            header("Location: login.php");
            exit();
        } else {
            $errors = $registration->getErrors();
            foreach ($errors as $error) {
                echo "<p style='color:red;'>$error</p>";
            }
        }
    }

} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root'; // Change this to your database username
$password = '';      // Change this to your database password
$db_name = 'user_registration';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session initialization
session_start();

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user inputs
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = sanitizeInput($_POST['full_name']);
    $date_of_birth = $_POST['date_of_birth'];

    // Validate inputs
    $errors = array();

    if (empty($username)) {
        $errors[] = "Username is required";
    }

    if (empty($email)) {
        $errors[] = "Email is required";
    }

    if (empty($password)) {
        $errors[] = "Password is required";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Check password strength
    if (!preg_match("/^[a-zA-Z0-9\!\@\#\$\%\&\*\(\)\_\+]+$/', $password)) {
        $errors[] = "Password can only contain letters, numbers, and special characters (!@#$%^&*()+)";
    }

    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // If there are no errors
    if (empty($errors)) {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare SQL statement to check if username or email already exists
        $stmt_check = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt_check->bind_param("ss", $username, $email);
        $stmt_check->execute();
        $result_check = $stmt_check->get_result();

        if ($result_check->num_rows > 0) {
            $errors[] = "Username or email already exists";
        } else {

            // Prepare SQL statement to insert new user
            $stmt = $conn->prepare("INSERT INTO users (username, email, password, full_name, date_of_birth) VALUES (?, ?, ?, ?, ?)");
            $stmt->bind_param("sssss", $username, $email, $hashed_password, $full_name, $date_of_birth);

            if ($stmt->execute()) {
                // Registration successful
                $_SESSION['username'] = $username;
                header("Location: welcome.php");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again.";
            }
        }

    }

}

// Close the database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<?php
if (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<div class='error'>$error</div>";
    }
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label>Username:</label><br>
    <input type="text" name="username"><br>

    <label>Email:</label><br>
    <input type="email" name="email"><br>

    <label>Password:</label><br>
    <input type="password" name="password"><br>

    <label>Confirm Password:</label><br>
    <input type="password" name="confirm_password"><br>

    <label>Full Name:</label><br>
    <input type="text" name="full_name"><br>

    <label>Date of Birth:</label><br>
    <input type="date" name="date_of_birth"><br>

    <input type="submit" value="Register">
</form>

<p>Already have an account? <a href="login.php">Login here</a></p>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Initialize variables
$username = "";
$email = "";
$password = "";
$errors = array();

// Form submission handler
if (isset($_POST['submit'])) {

    // Get form values
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Validate input fields
    if (empty($username)) {
        array_push($errors, "Username is required");
    }
    if (empty($email)) {
        array_push($errors, "Email is required");
    }
    if (empty($password)) {
        array_push($errors, "Password is required");
    }
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        array_push($errors, "Invalid email format");
    }

    // Check if username or email already exists
    $check_username = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($check_username);
    if ($result->num_rows > 0) {
        array_push($errors, "Username already exists");
    }

    $check_email = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($check_email);
    if ($result->num_rows > 0) {
        array_push($errors, "Email already exists");
    }

    // If no errors
    if (count($errors) == 0) {

        // Hash password before storing in database
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into the database
        $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";

        if ($conn->query($sql) === TRUE) {
            echo "Registration successful! <a href='login.php'>Login here</a>";
        } else {
            array_push($errors, "Error: " . $sql . "<br>" . $conn->error);
        }
    }

    // Display errors
    foreach ($errors as $error) {
        echo "<div class='error'>" . $error . "</div>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user inputs
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields are required!");
    }

    // Check if password matches confirm password
    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }

    // Sanitize username and email
    $username = sanitizeInput($username);
    $email = sanitizeInput($email);

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $check_username_query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        die("Username already exists!");
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $check_email_query);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        die("Email already exists!");
    }

    // Insert new user into the database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insert_query);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful!";
        // You can redirect to a welcome page here
        header("Location: welcome.php");
        exit();
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }

    // Close the statement and connection
    mysqli_stmt_close($stmt);
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Register function
function registerUser($conn) {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form values
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Form validation
        $errors = array();

        if (empty($username)) {
            $errors[] = "Username is required";
        }
        if (empty($email)) {
            $errors[] = "Email is required";
        }
        if (empty($password)) {
            $errors[] = "Password is required";
        }
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            $errors[] = "Email already exists in our database";
        }

        // If no errors, proceed to registration
        if (empty($errors)) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Generate verification token
            $verification_token = bin2hex(random_bytes(16));

            // Insert user into database
            try {
                $stmt = $conn->prepare("INSERT INTO users (username, email, password, verification_token) VALUES (?, ?, ?, ?)");
                $stmt->execute([$username, $email, $hashed_password, $verification_token]);

                // Send confirmation email
                $to = $email;
                $subject = "Confirm Your Email";
                $message = "Please click the following link to verify your account: http://example.com/verify.php?token=" . $verification_token;
                $headers = "From: noreply@example.com" . "\r
";
                mail($to, $subject, $message, $headers);

                // Set success message
                $_SESSION['success'] = "Registration successful! Please check your email to verify your account.";
                header("Location: login.php");
                exit();
            } catch(PDOException $e) {
                die('Error: ' . $e->getMessage());
            }
        } else {
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>" . $error . "</div>";
            }
        }
    }
}

// Call the register function
if (isset($_POST['submit'])) {
    registerUser($conn);
}
?>


<?php
session_start();
require_once 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    try {
        // Verify user
        $stmt = $conn->prepare("UPDATE users SET verified=1 WHERE verification_token = ?");
        $stmt->execute([$token]);
        
        // Set success message
        $_SESSION['success'] = "Your email has been verified!";
        header("Location: login.php");
        exit();
    } catch(PDOException $e) {
        die('Error: ' . $e->getMessage());
    }
} else {
    echo "Invalid verification link.";
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    // Get form data
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        die("All fields are required!");
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Check password match
    if ($password !== $confirmPassword) {
        die("Passwords do not match.");
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($GLOBALS['conn'], $username);
    $email = mysqli_real_escape_string($GLOBALS['conn'], $email);

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Username already exists.");
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Email already exists.");
    }

    // Insert new user into the database
    $insertUserQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertUserQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        // Registration successful
        header("Location: login.php");
        exit();
    } else {
        die("Error registering user: " . $conn->error);
    }
}

// Call the registration function
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $errors = array();

        // Get user inputs
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z]*$/", $username)) {
            $errors[] = "Username must contain only letters";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long";
        }

        // Check for existing username or email
        $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = $conn->query($checkQuery);
        
        if ($result->num_rows > 0) {
            $errors[] = "Username or email already exists";
        }

        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

            // Insert user into database
            $insertQuery = "INSERT INTO users (username, email, password) 
                            VALUES ('$username', '$email', '$hashedPassword')";
            
            if ($conn->query($insertQuery)) {
                echo "Registration successful!";
                header("Location: login.php");
                exit();
            } else {
                $errors[] = "Error registering user";
            }
        }

        // Display errors
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .error { color: red; margin-bottom: 5px; }
        .register-form { width: 300px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; }
    </style>
</head>
<body>
    <div class="register-form">
        <h2>Register</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="username" placeholder="Username" required><br><br>
            <input type="email" name="email" placeholder="Email" required><br><br>
            <input type="password" name="password" placeholder="Password" required><br><br>
            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection parameters
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function register_user() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get user input data
        $username = $_POST['username'];
        $password = $_POST['password'];
        $email = $_POST['email'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        
        // Initialize error array
        $errors = array();
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else {
            // Check for valid characters and length
            if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
                $errors[] = "Username can only contain letters, numbers, and underscores";
            }
            if (strlen($username) < 3 || strlen($username) > 20) {
                $errors[] = "Username must be between 3 and 20 characters long";
            }
        }
        
        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } else {
            // Check for valid password strength
            if (!preg_match("/^[a-zA-Z0-9!@#$%^&*()]*$/", $password)) {
                $errors[] = "Password can only contain letters, numbers, and special characters (!@#$%^&*)";
            }
            if (strlen($password) < 6 || strlen($password) > 20) {
                $errors[] = "Password must be between 6 and 20 characters long";
            }
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } else {
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format";
            }
        }
        
        // Check for existing username or email in database
        if (count($errors) == 0) {
            $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
            $stmt = $conn->prepare($check_query);
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                // Check if username or email already exists
                $row = $result->fetch_assoc();
                if ($row['username'] == $username) {
                    $errors[] = "Username already taken";
                }
                if ($row['email'] == $email) {
                    $errors[] = "Email already registered";
                }
            }
        }
        
        // If there are no errors, register the user
        if (count($errors) == 0) {
            // Hash password before storing in database
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user data into database
            $insert_query = "INSERT INTO users (username, password, email, first_name, last_name) VALUES (?, ?, ?, ?, ?)";
            $stmt = $conn->prepare($insert_query);
            $stmt->bind_param("sssss", $username, $hashed_password, $email, $first_name, $last_name);
            
            if ($stmt->execute()) {
                // Registration successful
                echo "User registered successfully!";
            } else {
                // Error occurred during registration
                $errors[] = "An error occurred while registering. Please try again later.";
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo $error . "<br>";
            }
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // Default MySQL username
$password = '';     // Your MySQL password

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate input fields
    if (empty($username) || empty($email) || empty($password)) {
        die('Please fill in all required fields');
    }
    
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username");
    $stmt->execute([':username' => $username]);
    
    if ($stmt->rowCount() > 0) {
        die('Username already taken. Please choose another one.');
    }
    
    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->execute([':email' => $email]);
    
    if ($stmt->rowCount() > 0) {
        die('Email already registered. Please use another email.');
    }
    
    // Check password length
    if (strlen($password) < 6) {
        die('Password must be at least 6 characters long');
    }
    
    // Confirm password matches
    if ($password != $confirm_password) {
        die('Passwords do not match');
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT, ['cost' => 12]);
    
    // Insert user into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $stmt->execute([
            ':username' => $username,
            ':email' => $email,
            ':password' => $hashed_password
        ]);
        
        // Registration successful
        echo 'Registration successful! You can now login.';
    } catch(PDOException $e) {
        die('Error registering user: ' . $e->getMessage());
    }
}

// Close database connection
$conn = null;
?>


<?php
// Error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Initialize variables
$error_message = "";
$success_message = "";

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get form data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['psw'];
    $confirm_password = $_POST['psw-repeat'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $error_message .= "All fields are required.<br>";
    }

    // Check username length
    if (strlen($username) < 3 || strlen($username) > 20) {
        $error_message .= "Username must be between 3 and 20 characters.<br>";
    }

    // Validate username format
    if (!preg_match("/^[a-zA-Z0-9_\-]+$/", $username)) {
        $error_message .= "Username contains invalid characters. Only letters, numbers, underscores, and hyphens are allowed.<br>";
    }

    // Check if username already exists
    $check_username_query = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
    $result = mysqli_query($conn, $check_username_query);

    if (mysqli_num_rows($result) > 0) {
        $error_message .= "Username already exists. Please choose a different one.<br>";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error_message .= "Invalid email format.<br>";
    }

    // Check if email already exists
    $check_email_query = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    $result = mysqli_query($conn, $check_email_query);

    if (mysqli_num_rows($result) > 0) {
        $error_message .= "Email already exists. Please use a different email address.<br>";
    }

    // Validate password
    if ($password !== $confirm_password) {
        $error_message .= "Passwords do not match.<br>";
    }

    // Check password length
    if (strlen($password) < 8) {
        $error_message .= "Password must be at least 8 characters long.<br>";
    }

    // If no errors, proceed to registration
    if ($error_message == "") {

        // Hash the password for security
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user data into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('" . mysqli_real_escape_string($conn, $username) . "', '" .
                mysqli_real_escape_string($conn, $email) . "', '" . $hashed_password . "')";

        if (mysqli_query($conn, $sql)) {
            $success_message = "Registration successful! You can now login.";
            // Redirect to login page after 3 seconds
            header("refresh:3;url=login.php");
        } else {
            $error_message .= "Error registering user. Please try again.<br>";
        }
    }

}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Result</title>
</head>
<body>
    <?php if ($error_message != "") { ?>
        <div class="error">
            <?php echo $error_message; ?>
        </div>
    <?php } ?>

    <?php if ($success_message != "") { ?>
        <div class="success">
            <?php echo $success_message; ?>
        </div>
    <?php } ?>

</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to sanitize input data
    function sanitize($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    // User registration function
    function registerUser($conn) {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $username = sanitize($_POST['username']);
            $email = sanitize($_POST['email']);
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];
            $first_name = sanitize($_POST['first_name']);
            $last_name = sanitize($_POST['last_name']);

            // Validate input data
            $errors = array();
            
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($first_name) || empty($last_name)) {
                $errors[] = "All fields are required!";
            }

            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format!";
            }

            if ($password !== $confirm_password) {
                $errors[] = "Passwords do not match!";
            }

            // Password validation: minimum 8 characters, at least one letter and one number
            if (strlen($password) < 8 || !preg_match('/[a-zA-Z]/', $password) || !preg_match('/\d/', $password)) {
                $errors[] = "Password must be at least 8 characters long and contain at least one letter and one number!";
            }

            // Check if username or email already exists
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
            $stmt->execute(array(':username' => $username, ':email' => $email));
            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($row) {
                if ($row['username'] == $username) {
                    $errors[] = "Username already exists!";
                }
                if ($row['email'] == $email) {
                    $errors[] = "Email already registered!";
                }
            }

            // If there are errors, display them
            if (!empty($errors)) {
                foreach ($errors as $error) {
                    echo "<div class='error'>$error</div>";
                }
                return;
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            try {
                // Insert new user into the database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (:username, :email, :password, :first_name, :last_name)");
                $stmt->execute(array(
                    ':username' => $username,
                    ':email' => $email,
                    ':password' => $hashed_password,
                    ':first_name' => $first_name,
                    ':last_name' => $last_name
                ));

                // Registration successful, log in the user
                $_SESSION['user_id'] = $conn->lastInsertId();
                header("Location: dashboard.php");
                exit();

            } catch(PDOException $e) {
                echo "Error registering user: " . $e->getMessage();
            }
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Call the registration function
registerUser($conn);
?>


<?php
function registerUser($username, $email, $password, $confirm_password) {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate and sanitize input data
        $errors = array();

        // Check if all required fields are filled out
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            return "All fields must be filled out";
        }

        // Sanitize username
        $username = mysqli_real_escape_string($conn, trim($username));

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return "Invalid email format";
        }
        $email = mysqli_real_escape_string($conn, $email);

        // Check password length (minimum 8 characters)
        if (strlen($password) < 8) {
            return "Password must be at least 8 characters long";
        }

        // Check if password matches confirm password
        if ($password !== $confirm_password) {
            return "Passwords do not match";
        }

        // Hash the password for security
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Connect to database
        $conn = mysqli_connect("localhost", "username", "password", "database_name");

        // Check connection
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Check if username already exists
        $check_username_query = "SELECT username FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $check_username_query);
        if (mysqli_num_rows($result) > 0) {
            return "Username already exists";
        }

        // Check if email already exists
        $check_email_query = "SELECT email FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $check_email_query);
        if (mysqli_num_rows($result) > 0) {
            return "Email already exists";
        }

        // Insert new user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $sql)) {
            return "Registration successful!";
        } else {
            return "Error: " . mysqli_error($conn);
        }

        // Close database connection
        mysqli_close($conn);
    }
}
?>


<?php
// Database connection details
$host = "localhost";
$dbUsername = "root"; // Replace with your database username
$dbPassword = "";     // Replace with your database password
$dbName = "user_registration"; // Replace with your database name

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Initialize variables
    $username = "";
    $email = "";
    $password = "";
    $confirmPassword = "";
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];
        
        // Check if all fields are filled
        if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
            echo "All fields must be filled out!";
            return;
        }
        
        // Validate email format
        if (!preg_match("/^[^\s@]+@[^\s@]+\.[^\s@]+$/.", $email)) {
            echo "Invalid email format!";
            return;
        }
        
        // Check if password and confirm password match
        if ($password != $confirmPassword) {
            echo "Passwords do not match!";
            return;
        }
        
        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }
        
        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }
        
        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
        
        if (mysqli_stmt_execute($stmt)) {
            // Registration successful
            session_start();
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $email;
            
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database connection file
include("db_connection.php");

function registerUser($email, $username, $password) {
    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }
    
    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        return "Username and password cannot be empty";
    }

    // Check if username already exists in the database
    $check_username = mysqli_query($db_connection, "SELECT username FROM users WHERE username = '" . mysqli_real_escape_string($db_connection, $username) . "'");
    if (mysqli_num_rows($check_username) > 0) {
        return "Username already exists";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into the database
    $sql = "INSERT INTO users (email, username, password) 
            VALUES ('" . mysqli_real_escape_string($db_connection, $email) . "', '" . mysqli_real_escape_string($db_connection, $username) . "', '$hashed_password')";
            
    if (mysqli_query($db_connection, $sql)) {
        // Registration successful
        return "success";
    } else {
        // Error occurred during registration
        return "Error: " . mysqli_error($db_connection);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $result = registerUser($email, $username, $password);
    
    if ($result === "success") {
        // Redirect to login page or dashboard
        header("Location: login.php");
        exit();
    } else {
        echo $result;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "GET") { ?>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            Email: <input type="email" name="email"><br>
            Username: <input type="text" name="username"><br>
            Password: <input type="password" name="password"><br>
            <input type="submit" value="Register">
        </form>
    <?php } ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    $errors = array();

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // Validate password
    if (empty($password) || empty($confirm_password)) {
        $errors[] = "Password is required";
    } elseif ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    } elseif (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*()_+}{\":;?><~`-]{8,}$/", $password)) {
        $errors[] = "Password must be at least 8 characters long and contain at least one number and one letter";
    }

    if (empty($errors)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        try {
            // Prepare the SQL statement
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
            $stmt->execute([
                'username' => $username,
                'email' => $email,
                'password' => $hashed_password
            ]);

            // Registration successful
            header('Location: login.php');
            exit();
        } catch(PDOException $e) {
            die("Error registering user: " . $e->getMessage());
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
</head>
<body>
    <?php if (!empty($errors)): ?>
        <div style="color: red;">
            <?php foreach ($errors as $error): ?>
                <p><?php echo $error; ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Database connection
    include("db_connection.php");

    // Validate username
    if (empty($username)) {
        $error = "Username is required!";
    } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        $error = "Username can only contain letters, numbers, and underscores!";
    } else {
        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error = "Username already exists!";
        }
    }

    // Validate email
    if (empty($email)) {
        $error = "Email is required!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format!";
    } else {
        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error = "Email already exists!";
        }
    }

    // Validate password
    if (empty($password)) {
        $error = "Password is required!";
    } elseif (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
        $error = "Password must be at least 8 characters and contain at least one number and one letter!";
    }

    // Confirm password match
    if ($password !== $confirm_password) {
        $error = "Passwords do not match!";
    }

    // If no error, proceed to registration
    if (!isset($error)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            // Registration successful
            header("Location: login.php?success=Registration successful! Please login.");
            exit();
        } else {
            $error = "Error registering user!";
        }
    }

    // Close database connection
    $conn->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Register</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username:<br>
        <input type="text" name="username"><br>

        Email:<br>
        <input type="email" name="email"><br>

        Password:<br>
        <input type="password" name="password"><br>

        Confirm Password:<br>
        <input type="password" name="confirm_password"><br>

        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Include database connection file
include("config.php");

function registerUser() {
    try {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {

            $username = $_POST['username'];
            $email = $_POST['email'];
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];
            $first_name = $_POST['first_name'];
            $last_name = $_POST['last_name'];
            $phone_number = $_POST['phone_number'];

            // Validate inputs
            if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
                throw new Exception("All fields are required");
            }

            // Check password match
            if ($password != $confirm_password) {
                throw new Exception("Passwords do not match");
            }

            // Validate username length
            if (strlen($username) < 3 || strlen($username) > 20) {
                throw new Exception("Username must be between 3 and 20 characters");
            }

            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                throw new Exception("Invalid email format");
            }

            // Validate phone number format (assuming international format)
            $phoneRegex = '/^\+?[0-9]{1,3}?[0-9]{9,15}$/';
            if (!preg_match($phoneRegex, $phone_number)) {
                throw new Exception("Invalid phone number format");
            }

            // Check if username already exists
            $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
            $stmt = $conn->prepare($checkUsernameQuery);
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                throw new Exception("Username already exists");
            }

            // Check if email already exists
            $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
            $stmt = $conn->prepare($checkEmailQuery);
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                throw new Exception("Email already exists");
            }

            // Hash password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Generate unique user ID
            $user_id = uniqid('USR');

            // Insert into database
            $insertQuery = "INSERT INTO users (user_id, username, email, password, first_name, last_name, phone_number) 
                            VALUES (?, ?, ?, ?, ?, ?, ?)";

            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("sssssss", $user_id, $username, $email, $hashedPassword, $first_name, $last_name, $phone_number);

            if ($stmt->execute()) {
                return "Registration successful!";
            } else {
                throw new Exception("Registration failed. Please try again.");
            }

        }
    } catch (Exception $e) {
        // Handle any errors
        die("Error: " . $e->getMessage());
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    function registerUser($data) {
        global $pdo;
        
        // Extract data from POST request
        $username = htmlspecialchars(trim($data['username']));
        $email = htmlspecialchars(trim($data['email']));
        $password = $data['password'];
        $confirm_password = $data['confirm_password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            return "All fields are required!";
        }

        // Check username length
        if (strlen($username) < 5 || strlen($username) > 20) {
            return "Username must be between 5 and 20 characters!";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return "Please enter a valid email address!";
        }

        // Check password requirements
        $uppercase = preg_match('@[A-Z]@', $password);
        $lowercase = preg_match('@[a-z]@', $password);
        $number_or_special = preg_match('@[0-9\!\@\#\$%\^&*\(\)\-_+=]@', $password);

        if (!$uppercase || !$lowercase || !$number_or_special) {
            return "Password must contain at least one uppercase letter, one lowercase letter, and one number or special character!";
        }

        if (strlen($password) < 8) {
            return "Password must be at least 8 characters long!";
        }

        // Check password confirmation
        if ($password !== $confirm_password) {
            return "Passwords do not match!";
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Check if username or email already exists
        try {
            $stmt = $pdo->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':email', $email);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                return "Username or email already exists!";
            }

            // Insert new user into the database
            $insertStmt = $pdo->prepare("INSERT INTO users (username, email, password, role) 
                                      VALUES (:username, :email, :password, 'user')");
            $insertStmt->bindParam(':username', $username);
            $insertStmt->bindParam(':email', $email);
            $insertStmt->bindParam(':password', $hashed_password);
            $insertStmt->execute();

            return "Registration successful!";

        } catch (PDOException $e) {
            // Handle any database errors
            return "Error registering user: " . $e->getMessage();
        }
    }

} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = registerUser($_POST);
    echo $result;
}
?>


<?php
session_start();
include('config.php'); // Include your database configuration file

// Check if form is submitted
if (isset($_POST['submit'])) {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Initialize an array to store error messages
    $errors = [];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    // Check if username already exists
    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $row = $stmt->fetch();
        
        if ($row) {
            $errors[] = "Username already exists!";
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }

    // Check if email already exists
    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $row = $stmt->fetch();
        
        if ($row) {
            $errors[] = "Email already exists!";
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        try {
            // Hash the password using bcrypt
            $hashed_password = password_hash($password, PASSWORD_BCRYPT);

            // Insert new user into database
            $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password]);

            // Registration successful
            $_SESSION['success'] = "Registration successful! Please login.";
            header("Location: login.php");
            exit();
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    }

    // If errors exist, store them in session and redirect back
    if (!empty($errors)) {
        $_SESSION['errors'] = $errors;
        header("Location: register.php");
        exit();
    }
}

// If form is not submitted, redirect to registration page
header("Location: register.php");
exit();
?>


<?php
// Function to handle user registration
function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $errors = array(); // Initialize errors array

        // Validate username
        $username = trim($_POST['username']);
        if (empty($username) || strlen($username) < 2 || strlen($username) > 20) {
            $errors[] = "Username must be between 2 and 20 characters long.";
        }

        // Validate email
        $email = trim($_POST['email']);
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address.";
        }

        // Validate password
        $password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm_password']);

        if (empty($password) || empty($confirm_password)) {
            $errors[] = "Password is required.";
        } elseif ($password !== $confirm_password) {
            $errors[] = "Passwords do not match.";
        } elseif (strlen($password) < 8 || strlen($password) > 20) {
            $errors[] = "Password must be between 8 and 20 characters long.";
        }

        // Validate date of birth
        $dob = $_POST['dob'];
        if (empty($dob)) {
            $errors[] = "Date of birth is required.";
        } else {
            // Check if the date is valid
            $dateObject = DateTime::createFromFormat('Y-m-d', $dob);
            if (!$dateObject || $dateObject->format('Y-m-d') !== $dob) {
                $errors[] = "Please enter a valid date of birth.";
            } else {
                // Calculate age based on the date of birth
                $today = new DateTime();
                $age = $today->diff($dateObject)->y;

                if ($age < 13) {
                    $errors[] = "You must be at least 13 years old to register.";
                }
            }
        }

        // If there are no errors, proceed with registration
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Here you would typically connect to your database and insert the user data
            // For security reasons, make sure to use prepared statements or parameterized queries

            // After successful registration, redirect to login page
            header("Location: login.php");
            exit();
        } else {
            // Display errors to the user
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}

// Call the function
registerUser();

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser($username, $email, $password, $firstName, $lastName, $birthdate, $conn) {
    // Sanitize inputs
    $username = htmlspecialchars(strip_tags($username));
    $email = htmlspecialchars(strip_tags($email));
    $password = password_hash($password, PASSWORD_DEFAULT);
    $firstName = htmlspecialchars(strip_tags($firstName));
    $lastName = htmlspecialchars(strip_tags($lastName));
    $birthdate = htmlspecialchars(strip_tags($birthdate));

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $checkQuery);

    if (mysqli_num_rows($result) > 0) {
        return false; // Username or email already exists
    }

    // Insert user data into database
    $sql = "INSERT INTO users (username, password, email, first_name, last_name, birthdate)
            VALUES ('$username', '$password', '$email', '$firstName', '$lastName', '$birthdate')";

    if (mysqli_query($conn, $sql)) {
        return true; // Registration successful
    } else {
        return false; // Error in registration
    }
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get form values
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $birthdate = $_POST['birthdate'];

    // Validate form inputs
    if (empty($username) || empty($email) || empty($password) || empty($firstName) || empty($lastName)) {
        echo "Please fill in all required fields";
        exit();
    }

    if ($password !== $confirmPassword) {
        echo "Passwords do not match";
        exit();
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit();
    }

    // Register user
    if (registerUser($username, $email, $password, $firstName, $lastName, $birthdate, $conn)) {
        echo "Registration successful! You can now login.";
        header("Location: login.php");
        exit();
    } else {
        echo "Registration failed. Please try again later.";
    }
}

mysqli_close($conn);
?>


function register_user($username, $email, $password) {
    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields must be filled out.";
    }

    // Check username validity
    if (!ctype_alnum($username)) {
        return "Username must contain only letters and numbers.";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    // Password requirements: at least 8 characters with letters and numbers
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long.";
    }

    if (!preg_match('/^[a-zA-Z0-9]*$/', $password)) {
        return "Password must contain only letters and numbers.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        // Database connection settings
        $host = 'localhost';
        $db_name = 'your_database_name';
        $username_db = 'your_username';
        $password_db = 'your_password';

        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username_db, $password_db);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if username or email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$username, $email]);
        
        if ($stmt->rowCount() > 0) {
            return "Username or email already exists.";
        }

        // Insert new user into the database
        $insert_stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
        $insert_result = $insert_stmt->execute([$username, $email, $hashed_password]);

        if ($insert_result) {
            return true; // Registration successful
        } else {
            return "Registration failed. Please try again later.";
        }

    } catch (PDOException $e) {
        echo "Connection failed: " . $e->getMessage();
        return false;
    }
}


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = register_user($username, $email, $password);

    if ($result === true) {
        echo "Registration successful!";
    } else {
        echo $result; // Display error message
    }
}


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Registration function
function registerUser($username, $email, $password, $firstName, $lastName, $conn) {
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists.";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists.";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("sssss", $username, $email, $hashedPassword, $firstName, $lastName);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }
}

// Process registration form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    $firstName = sanitizeInput($_POST['first_name']);
    $lastName = sanitizeInput($_POST['last_name']);

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        echo "All fields are required!";
    } else if ($password != $confirmPassword) {
        echo "Passwords do not match!";
    } else {
        // Call registration function
        $result = registerUser($username, $email, $password, $firstName, $lastName, $conn);
        echo $result;
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .error { color: #ff0000; }
        .success { color: #00ff00; }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name"><br>

        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name"><br>

        <input type="checkbox" name="agree_terms"> I agree to the terms and conditions<br><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user registration
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Sanitize inputs
        $username = htmlspecialchars(strip_tags($username));
        $email = htmlspecialchars(strip_tags($email));

        // Check if username already exists
        $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
        if (mysqli_num_rows($check_username) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
        if (mysqli_num_rows($check_email) > 0) {
            echo "Email already registered!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password)
                VALUES ('$username', '$email', '$hashed_password')";

        if (mysqli_query($conn, $sql)) {
            echo "Registration successful!";
            // Redirect to login page after 3 seconds
            header("Refresh: 3; url=login.php");
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Register">
    </form>

    <?php
    // Call the registration function
    if (isset($_POST['submit'])) {
        registerUser();
    }
    ?>
</body>
</html>


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $first_name = sanitize($_POST['first_name']);
        $last_name = sanitize($_POST['last_name']);
        $email = sanitize($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $date_of_birth = sanitize($_POST['date_of_birth']);

        // Initialize error array
        $errors = [];

        // Validate first name and last name (only letters)
        if (!preg_match("/^[a-zA-Z]+$/", $first_name) || !preg_match("/^[a-zA-Z]+$/", $last_name)) {
            $errors[] = "Only letters are allowed in the name fields!";
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format!";
        }

        // Password validation
        if (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long!";
        }
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match!";
        }

        // Check age (at least 18 years old)
        $birth_date = new DateTime($date_of_birth);
        $today = new DateTime('now');
        $age = $birth_date->diff($today)->y;

        if ($age < 18) {
            $errors[] = "You must be at least 18 years old to register!";
        }

        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Check if email already exists in database
            $check_email = mysqli_query($conn, "SELECT id FROM users WHERE email='$email'");
            if (mysqli_num_rows($check_email) > 0) {
                $errors[] = "Email already exists!";
            } else {
                // Insert user data into database
                $query = "INSERT INTO users (first_name, last_name, email, password, date_of_birth)
                          VALUES ('$first_name', '$last_name', '$email', '$hashed_password', '$date_of_birth')";
                if (!mysqli_query($conn, $query)) {
                    $errors[] = "Error registering user. Please try again!";
                } else {
                    // Registration successful
                    $_SESSION['user'] = $first_name;
                    header("Location: welcome.php");
                    exit();
                }
            }
        }

        // Display errors if any
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<p class='error'>$error</p>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input data
    if (empty($first_name) || empty($last_name) || empty($email) || empty($username) || empty($password) || empty($confirm_password)) {
        die("All fields are required!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    if (strlen($password) < 6) {
        die("Password must be at least 6 characters long!");
    }

    // Sanitize input data
    $first_name = htmlspecialchars($first_name);
    $last_name = htmlspecialchars($last_name);
    $email = htmlspecialchars($email);
    $username = htmlspecialchars($username);

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Connect to database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $check_username_query);
    mysqli_stmt_bind_param($stmt, 's', $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        die("Username already exists!");
    }

    // Insert user data into database
    $sql = "INSERT INTO users (first_name, last_name, email, username, password)
            VALUES (?, ?, ?, ?, ?)";

    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'sssss', $first_name, $last_name, $email, $username, $hashed_password);

    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful! Please login.";
        header("Location: login.php");
        exit();
    } else {
        die("Error registering user: " . mysqli_error($conn));
    }

    // Close database connection
    mysqli_close($conn);
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
session_start();
include_once 'includes/header.php';
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <!-- Include CSS files -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <?php
            // Include the database configuration file
            include_once 'db_connect.php';

            if (isset($_POST['register'])) {
                // Get form data
                $username = trim($_POST['username']);
                $email = trim($_POST['email']);
                $password = $_POST['password'];
                $confirm_password = $_POST['confirm_password'];
                $first_name = trim($_POST['first_name']);
                $last_name = trim($_POST['last_name']);
                $dob = $_POST['dob'];

                // Initialize an array to hold error messages
                $errors = array();

                // Validate input fields
                if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($first_name) || empty($last_name) || empty($dob)) {
                    $errors[] = "All fields are required!";
                }

                // Check username length and format
                if (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
                    $errors[] = "Username can only contain letters, numbers, and underscores!";
                }
                if (strlen($username) < 3 || strlen($username) > 20) {
                    $errors[] = "Username must be between 3 and 20 characters long!";
                }

                // Validate email format
                if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                    $errors[] = "Please enter a valid email address!";
                }

                // Check password requirements
                if (strlen($password) < 8 || !preg_match('/[A-Z]/', $password) || !preg_match('/[0-9]/', $password) || !preg_match('/[^A-Za-z0-9]/', $password)) {
                    $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one number, and a special character!";
                }
                if ($password !== $confirm_password) {
                    $errors[] = "Passwords do not match!";
                }

                // Validate name fields
                if (!preg_match('/^[a-zA-Z ]+$/', $first_name)) {
                    $errors[] = "First name can only contain letters and spaces!";
                }
                if (!preg_match('/^[a-zA-Z ]+$/', $last_name)) {
                    $errors[] = "Last name can only contain letters and spaces!";
                }

                // Validate date of birth
                $dob_timestamp = strtotime($dob);
                if (!$dob_timestamp) {
                    $errors[] = "Please enter a valid date of birth!";
                }
                $today = time();
                if ($dob_timestamp >= $today) {
                    $errors[] = "Date of birth must be in the past!";
                }

                // If there are no errors
                if (empty($errors)) {
                    // Check if username or email already exists
                    $check_query = "SELECT id FROM users WHERE username = ? OR email = ?";
                    $stmt = $conn->prepare($check_query);
                    $stmt->bind_param("ss", $username, $email);
                    $stmt->execute();
                    $result = $stmt->get_result();

                    if ($result->num_rows > 0) {
                        $errors[] = "Username or email already exists!";
                    } else {
                        // Hash the password
                        $hashed_password = password_hash($password, PASSWORD_BCRYPT, array('cost' => 12));

                        // Prepare and execute the insert statement
                        $insert_query = "INSERT INTO users (username, email, password, first_name, last_name, dob) 
                                       VALUES (?, ?, ?, ?, ?, ?)";
                        $stmt = $conn->prepare($insert_query);
                        $stmt->bind_param("ssssss", $username, $email, $hashed_password, $first_name, $last_name, $dob);

                        if ($stmt->execute()) {
                            // Registration successful
                            echo "<div class='alert alert-success'>Registration successful! You can now <a href='login.php' class='alert-link'>log in</a>.</div>";
                            exit();
                        } else {
                            // Error occurred during registration
                            $errors[] = "An error occurred. Please try again later!";
                        }
                    }

                    $stmt->close();
                }

                // Close database connection
                $conn->close();

                // Display errors if any
                if (!empty($errors)) {
                    foreach ($errors as $error) {
                        echo "<div class='alert alert-danger'>$error</div>";
                    }
                }
            }
        ?>

        <!-- Registration Form -->
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <h2 class="text-center mb-4">User Registration</h2>
            <div class="form-group">
                <label>Username:</label>
                <input type="text" name="username" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <div class="form-group">
                <label>Email:</label>
                <input type="email" name="email" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <div class="form-group">
                <label>Password:</label>
                <input type="password" name="password" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <div class="form-group">
                <label>Confirm Password:</label>
                <input type="password" name="confirm_password" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <div class="form-group">
                <label>First Name:</label>
                <input type="text" name="first_name" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <div class="form-group">
                <label>Last Name:</label>
                <input type="text" name="last_name" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <div class="form-group">
                <label>Date of Birth:</label>
                <input type="date" name="dob" class="form-control <?php if (isset($errors) && !empty($errors)) { echo 'is-invalid'; } ?>" required>
            </div>

            <button type="submit" name="register" class="btn btn-primary">Register</button>
        </form>
    </div>

    <!-- Include JS files -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get and sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    
    $error_msg = "";
    $success_msg = "";

    // Validate name
    if (empty($name) || !preg_match('/^[a-zA-Z]+$/', $name)) {
        $error_msg .= "Please enter a valid name!<br>";
    }

    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error_msg .= "Please enter a valid email address!<br>";
    } else {
        // Check if email already exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        if ($stmt->rowCount() > 0) {
            $error_msg .= "Email already exists!<br>";
        }
    }

    // Validate password
    if (empty($password)) {
        $error_msg .= "Please enter a password!<br>";
    } else {
        if (strlen($password) < 8 || !preg_match('/[0-9]/', $password) || !preg_match('/[a-zA-Z]/', $password)) {
            $error_msg .= "Password must be at least 8 characters long and contain both letters and numbers!<br>";
        }
    }

    // If no errors, proceed to registration
    if (empty($error_msg)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user data into database
        try {
            $stmt = $conn->prepare("INSERT INTO users(name, email, password) VALUES(:name, :email, :password)");
            $stmt->execute([
                'name' => $name,
                'email' => $email,
                'password' => $hashed_password
            ]);
            
            // Set success message and redirect after 2 seconds
            $success_msg = "Registration successful! Redirecting to login page...";
            header("Refresh: 2; url=login.php");
        } catch(PDOException $e) {
            $error_msg .= "Error registering user: " . $e->getMessage() . "<br>";
        }
    }
}

// Close database connection
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user-registration';

try {
    // Connect to the database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate inputs
        $isValid = true;
        
        // Username validation
        if (empty($username)) {
            $error_msg .= "Username is required.<br>";
            $isValid = false;
        } else {
            // Check for valid characters in username (letters, numbers, and underscores)
            if (!preg_match("/^[a-zA-Z0-9_\.]*$/", $username)) {
                $error_msg .= "Invalid username. Only letters, numbers, underscores, and periods are allowed.<br>";
                $isValid = false;
            }
        }
        
        // Email validation
        if (empty($email)) {
            $error_msg .= "Email is required.<br>";
            $isValid = false;
        } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error_msg .= "Invalid email format.<br>";
            $isValid = false;
        }
        
        // Password validation
        if (empty($password)) {
            $error_msg .= "Password is required.<br>";
            $isValid = false;
        } else {
            // Check password strength
            if (!preg_match("#^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])#",$password) || strlen($password) < 8) {
                $error_msg .= "Password must be at least 8 characters long and contain at least one uppercase letter, lowercase letter, number, and special character.<br>";
                $isValid = false;
            }
        }
        
        // If all validations passed
        if ($isValid) {
            // Check if username or email already exists in database
            $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
            $stmt = $conn->prepare($checkQuery);
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                $error_msg .= "Username or email already exists.";
                $isValid = false;
            } else {
                // Hash the password
                $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
                
                // Insert user into database
                $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = $conn->prepare($insertQuery);
                $stmt->bind_param("sss", $username, $email, $hashedPassword);
                
                if ($stmt->execute()) {
                    echo "<p class='success'>Registration successful! You can now login.</p>";
                } else {
                    $error_msg .= "Error registering user: " . $conn->error;
                }
            }
        }
    }
    
    // Close the database connection
    $conn->close();
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}
?>

<!-- HTML registration form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .success {
            color: green;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <?php if (!empty($error_msg)) { ?>
        <div class="error"><?php echo $error_msg; ?></div><br>
    <?php } ?>

    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br><br>
        
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
function registerUser() {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Check if username already exists
        $checkUsernameQuery = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists.";
            return;
        }
        
        // Check if email already exists
        $checkEmailQuery = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists.";
            return;
        }
        
        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page or dashboard
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user.";
        }
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Call the function if needed
if (isset($_POST['submit'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>
        
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>
        
        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbName = "user_registration";

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser($username, $email, $password, $confirm_password) {
    global $conn;

    // Validate input
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        throw new Exception("All fields are required");
    }

    // Check username length
    if (strlen($username) < 3) {
        throw new Exception("Username must be at least 3 characters long");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Please enter a valid email address");
    }

    // Check password requirements (at least 8 characters, letters and numbers)
    if (!preg_match("/^[a-zA-Z0-9]*$/", $password) || strlen($password) < 8) {
        throw new Exception("Password must be at least 8 characters long and contain only letters and numbers");
    }

    // Check password confirmation
    if ($password != $confirm_password) {
        throw new Exception("Passwords do not match");
    }

    // Sanitize input
    $username = htmlspecialchars($username);
    $email = htmlspecialchars($email);

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        throw new Exception("Username or email already exists");
    }

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        // Registration successful
        header("Location: login.php");
        exit();
    } else {
        throw new Exception("Registration failed. Please try again later.");
    }
}

try {
    // Example usage:
    if (isset($_POST['register'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        registerUser($username, $email, $password, $confirm_password);
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Simple validation
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email_query);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insert_query = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("sss", $name, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
            // Redirect to login page or welcome page
            header("Location: welcome.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }

        $stmt->close();
    }
}

// Call the registration function
registerUser();

// Close database connection
$conn->close();
?>


<?php
// Function to handle user registration
function registerUser($username, $email, $password) {
    // Database connection details
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "user_registration";

    // Connect to database
    $conn = new mysqli($host, $db_username, $db_password, $database);

    // Check if connection is successful
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate and sanitize inputs
    $username = mysqli_real_escape_string($conn, $trim(username));
    $email = mysqli_real_escape_string($conn, trim(email));
    $password = mysqli_real_escape_string($conn, trim(password));

    // Check if username is already taken
    $sql_username_check = "SELECT COUNT(*) AS num FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql_username_check);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();

    if ($row['num'] > 0) {
        return "Username already exists. Please try a different username.";
    }

    // Check if email is already registered
    $sql_email_check = "SELECT COUNT(*) AS num FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql_email_check);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();

    if ($row['num'] > 0) {
        return "Email already registered. Please use a different email.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $sql_insert = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql_insert);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Database configuration
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all required fields";
        exit();
    }
    
    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit();
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        echo "Username already exists";
        exit();
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        echo "Email already exists";
        exit();
    }

    // Password validation
    $min_length = 8;
    if (strlen($password) < $min_length) {
        echo "Password must be at least $min_length characters long";
        exit();
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        $stmt->execute();
        
        echo "Registration successful!";
        
        // Redirect to login page or dashboard
        header("Location: welcome.php");
        exit();
    } catch (mysqli_sql_exception $e) {
        echo "Error registering user: " . $e->getMessage();
    }
}

// Close database connection
$conn->close();

?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'userregistration';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    // Database connection inside the function
    global $conn;

    // Check if username is unique
    $checkUsernameQuery = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return;
    }

    // Check if email is unique
    $checkEmailQuery = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Email already exists!";
        return;
    }

    // Validate password strength
    if (!preg_match("/^[a-zA-Z0-9]+$/", $username)) {
        echo "Username must contain only letters and numbers!";
        return;
    }

    if (strlen($password) < 8) {
        echo "Password must be at least 8 characters long!";
        return;
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password)
                   VALUES ('$username', '$email', '$hashedPassword')";

    if (mysqli_query($conn, $insertQuery)) {
        echo "Registration successful!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .success, .error {
            padding: 15px;
            margin-top: 20px;
            border-radius: 4px;
        }
        
        .success {
            background-color: #dff0d8;
            color: #3c763d;
        }
        
        .error {
            background-color: #f2dede;
            color: #a94442;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Form</h1>
        
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username..." required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email..." required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password..." required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = htmlspecialchars($_POST['first_name']);
        $last_name = htmlspecialchars($_POST['last_name']);

        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $_SESSION['error'] = "All fields are required!";
            header("Location: registration_form.php");
            return;
        }

        if ($password !== $confirm_password) {
            $_SESSION['error'] = "Passwords do not match!";
            header("Location: registration_form.php");
            return;
        }

        // Check if username already exists
        $check_username = "SELECT * FROM users WHERE username = '$username'";
        $result_username = mysqli_query($conn, $check_username);

        if (mysqli_num_rows($result_username) > 0) {
            $_SESSION['error'] = "Username already exists!";
            header("Location: registration_form.php");
            return;
        }

        // Check if email already exists
        $check_email = "SELECT * FROM users WHERE email = '$email'";
        $result_email = mysqli_query($conn, $check_email);

        if (mysqli_num_rows($result_email) > 0) {
            $_SESSION['error'] = "Email already exists!";
            header("Location: registration_form.php");
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name) 
                VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name')";

        if (mysqli_query($conn, $sql)) {
            $_SESSION['success'] = "Registration successful!";
            header("Location: welcome.php");
            exit();
        } else {
            $_SESSION['error'] = "Error registering user: " . mysqli_error($conn);
            header("Location: registration_form.php");
            return;
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'registration';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = mysqli_real_escape_string($GLOBALS['conn'], $data);
    return $data;
}

// Registration function
function registerUser() {
    // Get form data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields.";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }

    if ($password !== $confirm_password) {
        return "Passwords do not match.";
    }

    // Password requirements: at least 8 characters with letters and numbers
    if (strlen($password) < 8 || !preg_match('/^[a-zA-Z0-9]+$/', $password)) {
        return "Password must be at least 8 characters long and contain only letters and numbers.";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $check_username = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists.";
    }

    // Check if email already exists
    $check_email = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($check_email);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists.";
    }

    // Insert new user into database
    $insert_user = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insert_user);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . $conn->error;
    }
}

// Close database connection
$conn->close();

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = registerUser();
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Include database connection file
include_once("db_connection.php");

// Function for user registration
function registerUser() {
    // Check if form was submitted
    if (isset($_POST['submit'])) {
        $username = mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $_POST['username']);
        $email = mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $_POST['first_name']);
        $last_name = mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $_POST['last_name']);
        $birthdate = mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $_POST['birthdate']);

        // Validate username
        if (empty($username) || !preg_match('/^[a-zA-Z0-9_]*$/', $username)) {
            echo "Invalid username. Username can only contain letters, numbers, and underscores.";
            return;
        }

        // Check for existing username
        $check_username = mysqli_query($GLOBALS["___mysqli_ston"], "SELECT username FROM users WHERE username='$username'");
        if (mysqli_num_rows($check_username) > 0) {
            echo "Username already exists. Please choose another username.";
            return;
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format.";
            return;
        }

        // Check for existing email
        $check_email = mysqli_query($GLOBALS["___mysqli_ston"], "SELECT email FROM users WHERE email='$email'");
        if (mysqli_num_rows($check_email) > 0) {
            echo "Email already exists. Please use another email address.";
            return;
        }

        // Validate password
        if ($password != $confirm_password) {
            echo "Passwords do not match.";
            return;
        }
        
        if (strlen($password) < 6) {
            echo "Password must be at least 6 characters long.";
            return;
        }

        // Password hashing
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Validate name fields
        if (!preg_match('/^[a-zA-Z]*$/', $first_name) || empty($first_name)) {
            echo "Invalid first name. First name can only contain letters.";
            return;
        }

        if (!preg_match('/^[a-zA-Z]*$/', $last_name) || empty($last_name)) {
            echo "Invalid last name. Last name can only contain letters.";
            return;
        }

        // Validate birthdate
        if (!preg_match('/^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/', $birthdate)) {
            echo "Invalid date format. Please use YYYY-MM-DD.";
            return;
        }

        // Insert into database
        $query = "INSERT INTO users (username, email, password, first_name, last_name, birthdate)
                  VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$birthdate')";

        if (!mysqli_query($GLOBALS["___mysqli_ston"], $query)) {
            die('Error: ' . mysqli_error($GLOBALS["___mysqli_ston"]));
        }

        // Registration successful
        echo "Registration completed successfully!";
    }
}

// Call the function
if (isset($_POST['submit'])) {
    registerUser();
}
?>


<?php
// Include database connection file
include('connection.php');

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];
        $email = $_POST['email'];
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Validate password strength (minimum 8 characters with at least one uppercase letter and number)
        $passwordRegex = '/^(?=.*\d)(?=.*[A-Z])[a-zA-Z\d]{8,}$/';
        if (!preg_match($passwordRegex, $password)) {
            echo "Password must be at least 8 characters long and contain at least one uppercase letter and one number!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Check if username or email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                echo "Username or email already exists!";
                return;
            }

            // Insert new user into the database
            $stmt = $conn->prepare("INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)");
            $stmt->bind_param("sssss", $firstName, $lastName, $email, $username, $hashedPassword);
            $stmt->execute();

            // Close statement and connection
            $stmt->close();
            
            // Redirect to login page or dashboard
            header('Location: welcome.php');
            exit();
        } catch (mysqli_sql_exception $e) {
            echo "Error registering user: " . $e->getMessage();
        }
    }
}

// Call the function
registerUser();

// Close database connection
$conn->close();
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database $dbname :" . $e->getMessage());
}

// Registration function
function registerUser($conn) {
    // Check if form was submitted
    if (isset($_POST['submit'])) {
        $errors = array();
        
        // Sanitize and validate inputs
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        } else {
            // Check if email already exists in database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                $errors[] = "Email is already registered";
            }
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        } elseif (!preg_match("#[A-Z]#", $password)) {
            $errors[] = "Password must contain at least one uppercase letter";
        } elseif (!preg_match("#[a-z]#", $password)) {
            $errors[] = "Password must contain at least one lowercase letter";
        } elseif (!preg_match("#[0-9]#", $password)) {
            $errors[] = "Password must contain at least one number";
        }

        // Confirm password matches
        if ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // If there are errors, display them
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        } else {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            try {
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->execute([$username, $email, $hashed_password]);
                
                echo "<div class='success'>Registration successful! You can now login.</div>";
            } catch(PDOException $e) {
                die("Error registering user: " . $e->getMessage());
            }
        }
    }
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <style>
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" placeholder="Enter your username"><br><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" placeholder="Enter your email"><br><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" placeholder="Enter password"><br><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm password"><br><br>

        <button type="submit" name="submit">Register</button>
    </form>
    
    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>

<?php
// Call the registration function
registerUser($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'my_database';
$username = 'root';
$password = '';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Initialize variables and set default error message
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm-password'];
        $first_name = $_POST['first-name'];
        $last_name = $_POST['last-name'];
        $phone = $_POST['phone'];
        $error = "";

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || 
            empty($confirm_password) || empty($first_name) || empty($last_name)) {
            $error = "All fields are required";
            return;
        }

        // Check password length and strength
        if (strlen($password) < 8) {
            $error = "Password must be at least 8 characters long";
            return;
        }

        // Check if passwords match
        if ($password !== $confirm_password) {
            $error = "Passwords do not match";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error = "Invalid email format";
            return;
        }

        // Check username already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                $error = "Username already exists. Please choose another.";
                return;
            }
        } catch (PDOException $e) {
            die("Error checking username: " . $e->getMessage());
        }

        // Check email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                $error = "Email already registered. Please use another email.";
                return;
            }
        } catch (PDOException $e) {
            die("Error checking email: " . $e->getMessage());
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);

        // Insert new user into database
        try {
            $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash, first_name, last_name, phone) 
                                   VALUES (?, ?, ?, ?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $phone]);
            
            // Registration successful
            echo "Registration successful!";
        } catch (PDOException $e) {
            die("Error registering user: " . $e->getMessage());
        }
    }
}

// Call the registration function
registerUser($conn);

// Close database connection
$conn = null;
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "user_registration";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $pass = $_POST['password'];
    $error = "";

    // Validate name
    if (empty($name)) {
        $error .= "Name is required<br>";
    }

    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        if (empty($email)) {
            $error .= "Email is required<br>";
        } else {
            $error .= "Invalid email format<br>";
        }
    }

    // Validate password
    if (empty($pass) || strlen($pass) < 8) {
        $error .= "Password must be at least 8 characters long<br>";
    } elseif (!preg_match('/[A-Z]/', $pass)) {
        $error .= "Password must contain an uppercase letter<br>";
    } elseif (!preg_match('/[a-z]/', $pass)) {
        $error .= "Password must contain a lowercase letter<br>";
    } elseif (!preg_match('/\d/', $pass)) {
        $error .= "Password must contain a number<br>";
    }

    if ($error != "") {
        header("Location: index.php?error=" . urlencode($error));
        exit();
    }

    // Check email uniqueness
    $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE email = ?");
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        header("Location: index.php?error=Email%20already%20exists");
        exit();
    }

    // Hash password
    $hashedPass = password_hash($pass, PASSWORD_DEFAULT);

    // Insert into database
    $stmt = mysqli_prepare($conn, "INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($stmt, "sss", $name, $email, $hashedPass);
    
    if (mysqli_stmt_execute($stmt)) {
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

mysqli_close($conn);
?>


<?php
// Include database configuration file
include 'config.php';

function registerUser($username, $email, $password) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert user data into the database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);

    if (mysqli_stmt_execute($stmt)) {
        return "Registration successful!";
    } else {
        return "Registration failed. Please try again.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Basic input validation
    if (empty($username) || empty($email) || empty($password)) {
        echo "All fields are required!";
    } else {
        $result = registerUser($username, $email, $password);
        echo $result;
    }
}
?>


  <?php
  $conn = mysqli_connect('localhost', 'username', 'password', 'database_name');
  if (!$conn) {
      die("Connection failed: " . mysqli_connect_error());
  }
  ?>
  

- Always use HTTPS in production environments to encrypt data transmission.

- Consider adding additional validation (e.g., email format check, password strength requirements).

- You might want to add more user fields (e.g., first name, last name) depending on your application's needs.

**Example HTML Form:**



<?php
// Database connection settings
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Initialize error array
        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username contains invalid characters";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Check if email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute(array($email));
            if ($stmt->rowCount() > 0) {
                $errors[] = "Email already registered";
            }
        } catch (PDOException $e) {
            die("Error checking email: " . $e->getMessage());
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, one number, and one special character";
        } elseif ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // If there are no errors
        if (empty($errors)) {
            try {
                // Hash password
                $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

                // Insert user into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->execute(array($username, $email, $hashedPassword));

                // Registration successful
                $_SESSION['success'] = "Registration successful! Please login.";
                header("Location: login.php");
                exit();
            } catch (PDOException $e) {
                die("Error registering user: " . $e->getMessage());
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get form data
$name = $_POST['name'];
$email = $_POST['email'];
$username = $_POST['username'];
$password = $_POST['password'];
$confirm_password = $_POST['confirm_password'];

$errors = array();

// Basic validation
if (empty($name) || empty($email) || empty($password)) {
    $errors[] = "All fields are required!";
}

if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    $errors[] = "Invalid email format!";
}

if ($password !== $confirm_password) {
    $errors[] = "Passwords do not match!";
}

// Check if username or email already exists
$sql_check = "SELECT id FROM users WHERE email = ? OR username = ?";
$stmt_check = mysqli_prepare($conn, $sql_check);
mysqli_stmt_bind_param($stmt_check, "ss", $email, $username);
mysqli_stmt_execute($stmt_check);
$result_check = mysqli_stmt_get_result($stmt_check);

if (mysqli_num_rows($result_check) > 0) {
    $errors[] = "Email or username already exists!";
}

// If no errors
if (empty($errors)) {
    // Hash password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);
    
    // Insert into database
    $sql_insert = "INSERT INTO users (name, email, username, password) VALUES (?, ?, ?, ?)";
    $stmt_insert = mysqli_prepare($conn, $sql_insert);
    mysqli_stmt_bind_param($stmt_insert, "ssss", $name, $email, $username, $hashed_password);
    
    if (mysqli_stmt_execute($stmt_insert)) {
        // Registration successful
        $_SESSION['success'] = "Registration successful! You can now login.";
        header("Location: register.php");
        exit();
    } else {
        $errors[] = "Error registering user. Please try again later.";
    }
}

// If errors occurred
if (!empty($errors)) {
    foreach ($errors as $error) {
        $_SESSION['error'] .= $error . "<br>";
    }
    header("Location: register.php");
    exit();
}
?>


<?php
function registerUser($username, $email, $password) {
    // Configuration
    $host = 'localhost';
    $db_name = 'your_database_name';
    $db_user = 'your_username';
    $db_pass = 'your_password';

    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    if (strlen($username) < 3) {
        return "Username must be at least 3 characters!";
    }

    if (strlen($password) < 6) {
        return "Password must be at least 6 characters!";
    }

    // Connect to database
    $conn = new mysqli($host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize input
    $username = $conn->real_escape_string($username);
    $email = $conn->real_escape_string($email);

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Prepare SQL statement
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    
    if ($stmt === false) {
        die("Prepare failed: " . $conn->error);
    }

    // Bind parameters
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    // Check for duplicate username or email
    $checkQuery = "SELECT id FROM users WHERE username = ? OR email = ?";
    $checkStmt = $conn->prepare($checkQuery);
    
    if ($checkStmt === false) {
        die("Prepare failed: " . $conn->error);
    }

    $checkStmt->bind_param("ss", $username, $email);
    $checkStmt->execute();
    $result = $checkStmt->get_result();

    if ($result->num_rows > 0) {
        return "Username or email already exists!";
    }

    // Execute the insert statement
    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close database connections
    $checkStmt->close();
    $stmt->close();
    $conn->close();
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Connect to the database
include_once 'config.php';

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        $errors = array();

        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            array_push($errors, "All fields are required");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            array_push($errors, "Email is invalid");
        }

        if (strlen($username) < 3 || strlen($username) > 20) {
            array_push($errors, "Username must be between 3 and 20 characters");
        }

        if ($password !== $confirm_password) {
            array_push($errors, "Passwords do not match");
        }

        // Check if username or email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->bind_param('ss', $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                array_push($errors, "Username or email already exists");
            }

            // If no errors, proceed to insert into database
            if (empty($errors)) {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert user into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password, created_at) VALUES (?, ?, ?, NOW())");
                $stmt->bind_param('sss', $username, $email, $hashed_password);
                
                if ($stmt->execute()) {
                    header("Location: login.php?success=Registration successful! Please login.");
                    exit();
                } else {
                    array_push($errors, "Error registering user. Please try again.");
                }
            }

        } catch (Exception $e) {
            die('Could not connect: ' . $e->getMessage());
        }
    }
}

// Call the function
registerUser();

?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$db_name = "your_database";

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
function register_user($username, $email, $password) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'mydatabase';

    // Connect to database
    $conn = new mysqli($host, $db_username, $db_password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    if (empty($username) || empty($email) || empty($password)) {
        die("All fields are required");
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check password requirements (minimum 8 characters with at least one letter and one number)
    if (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/', $password)) {
        die("Password must be at least 8 characters long and contain both letters and numbers");
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $check_username_query = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username_query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Username already exists");
    }

    // Insert new user into the database
    $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insert_query);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        echo "Registration successful! You can now login.";
    } else {
        die("Error registering user: " . $conn->error);
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    register_user($_POST['username'], $_POST['email'], $_POST['password']);
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'user_registration';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

// Register function
function register() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validation errors array
        $errors = array();

        // Check if username is empty
        if (empty($username)) {
            $errors[] = "Username is required";
        }

        // Check if email is empty
        if (empty($email)) {
            $errors[] = "Email is required";
        }

        // Check if password is empty
        if (empty($password)) {
            $errors[] = "Password is required";
        }

        // Check if confirm_password matches password
        if ($confirm_password != $password) {
            $errors[] = "Passwords do not match";
        }

        // If no errors, proceed to register the user
        if (count($errors) == 0) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Check if username already exists
            $check_username_query = "SELECT username FROM users WHERE username=?";
            $stmt = $conn->prepare($check_username_query);
            $stmt->bind_param('s', $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Username already exists";
            }

            // Check if email already exists
            $check_email_query = "SELECT email FROM users WHERE email=?";
            $stmt = $conn->prepare($check_email_query);
            $stmt->bind_param('s', $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Email already exists";
            }

            // If no errors, insert into database
            if (count($errors) == 0) {
                $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = $conn->prepare($insert_query);
                $stmt->bind_param('sss', $username, $email, $hashed_password);

                if ($stmt->execute()) {
                    // Registration successful
                    $_SESSION['success'] = "Registration successful! Please login.";
                    header("Location: registration_success.php");
                    exit();
                } else {
                    // Error inserting into database
                    $errors[] = "An error occurred while registering. Please try again later.";
                }
            }

            // Close statement
            $stmt->close();
        }

        // Store errors in session and redirect back to registration form
        if (count($errors) > 0) {
            $_SESSION['errors'] = $errors;
            header("Location: registration_form.php");
            exit();
        }
    }
}

// Call the register function
if (isset($_POST['register'])) {
    register();
}
?>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
</head>
<body>
    <?php
    if (isset($_SESSION['errors'])) {
        foreach ($_SESSION['errors'] as $error) {
            echo "<p style='color: red;'>$error</p>";
        }
        unset($_SESSION['errors']);
    }
    ?>

    <form action="registration.php" method="POST">
        <label>Username:</label>
        <input type="text" name="username" required><br>

        <label>Email:</label>
        <input type="email" name="email" required><br>

        <label>Password:</label>
        <input type="password" name="password" required><br>

        <label>Confirm Password:</label>
        <input type="password" name="confirm_password" required><br>

        <input type="submit" name="register" value="Register">
    </form>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_registration';

$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;
    
    // Get form data
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all required fields";
        return;
    }
    
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }
    
    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return;
    }
    
    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Email already exists!";
        return;
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert new user into the database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful! You can now login.";
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    
    <!-- Registration form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
// Include database configuration file
include('config.php');

// Set default error message variable
$error = "";

if (isset($_POST['submit'])) {
    // Get form values
    $username = mysqli_real_escape_string($db, $_POST['username']);
    $email = mysqli_real_escape_string($db, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if all required fields are filled out
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $error = "Please fill in all required fields!";
    } else {
        // Validate username length (between 3 and 20 characters)
        if (strlen($username) < 3 || strlen($username) > 20) {
            $error = "Username must be between 3 and 20 characters!";
        }
        // Check email format
        elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error = "Invalid email format!";
        }
        // Password validation (minimum 6 characters)
        elseif (strlen($password) < 6) {
            $error = "Password must be at least 6 characters!";
        }
        // Check if password and confirm password match
        elseif ($password !== $confirm_password) {
            $error = "Passwords do not match!";
        } else {
            // Check if username already exists in the database
            $check_username_query = "SELECT id FROM users WHERE username = '$username'";
            $result = mysqli_query($db, $check_username_query);
            
            if (mysqli_num_rows($result) > 0) {
                $error = "Username already taken!";
            } else {
                // Check if email already exists in the database
                $check_email_query = "SELECT id FROM users WHERE email = '$email'";
                $result = mysqli_query($db, $check_email_query);
                
                if (mysqli_num_rows($result) > 0) {
                    $error = "Email already registered!";
                } else {
                    // Hash the password
                    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                    // Insert user into the database
                    $insert_query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
                    if (mysqli_query($db, $insert_query)) {
                        // Registration successful
                        $_SESSION['registered'] = true;
                        header("Location: registration_success.php");
                        exit();
                    } else {
                        $error = "Registration failed. Please try again later!";
                    }
                }
            }
        }
    }

    if ($error) {
        echo "<div class='error'>$error</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register Page</title>
</head>
<body>
    <h2>Create Account</h2>

    <?php
    if (isset($error)) {
        echo "<div style='color: red;'>" . $error . "</div>";
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        <label>Username:</label><br>
        <input type="text" name="username" value="<?php if (isset($username)) echo $username; ?>"><br>

        <label>Email:</label><br>
        <input type="email" name="email" value="<?php if (isset($email)) echo $email; ?>"><br>

        <label>Password:</label><br>
        <input type="password" name="password"><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password"><br>

        <input type="submit" name="submit" value="Register">
    </form>

    <p>Already have an account? <a href="login.php">Login here</a>.</p>
</body>
</html>


<?php
// Database connection
$host = "localhost";
$username_db = "root"; // Change to your database username
$password_db = "";     // Change to your database password
$db_name = "testdb";   // Change to your database name

$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function register_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form data
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Sanitize inputs to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);
        $password = mysqli_real_escape_string($conn, $password);

        // Check if username or email already exists
        $check_query = "SELECT COUNT(*) FROM users WHERE username='$username' OR email='$email'";
        $result = $conn->query($check_query);
        
        if ($result->fetch_row()[0] > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
        
        if ($conn->query($sql) === TRUE) {
            echo "Registration successful!";
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Enter username" required><br><br>
        <input type="email" name="email" placeholder="Enter email" required><br><br>
        <input type="password" name="password" placeholder="Enter password" required><br><br>
        <button type="submit" name="submit">Register</button>
    </form>
</body>
</html>

<?php
// Call the registration function
register_user();
?>


<?php
session_start();
include("config.php"); // Include your database configuration file

// Function for user registration
function registerUser() {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = htmlspecialchars($_POST['first_name']);
        $last_name = htmlspecialchars($_POST['last_name']);

        // Validate input fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password) || empty($first_name) || empty($last_name)) {
            echo "All fields are required!";
            return;
        }

        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            echo "Username must contain only letters and numbers!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        if (strlen($password) < 6) {
            echo "Password must be at least 6 characters!";
            return;
        }

        // Check if username already exists
        $sql = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $sql = "SELECT * FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password, first_name, last_name) VALUES (?, ?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "sssss", $username, $email, $hashed_password, $first_name, $last_name);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            header("Location: login.php"); // Redirect to login page after registration
            exit();
        } else {
            echo "Error registering user!";
        }
    }
}

// Display registration form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: #f2f2f2;
            padding: 20px;
            border-radius: 5px;
        }
        form {
            display: flex;
            flex-direction: column;
        }
        input[type=text], input[type=email], input[type=password] {
            margin: 10px 0;
            padding: 10px;
            box-sizing: border-box;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 10px;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Register</h2>
        <?php
        if ($_SERVER["REQUEST_METHOD"] == "GET") {
            // Display registration form
            ?>
            <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
                <input type="text" placeholder="Enter username" name="username" required><br>
                <input type="email" placeholder="Enter email" name="email" required><br>
                <input type="password" placeholder="Enter password" name="password" required><br>
                <input type="password" placeholder="Confirm password" name="confirm_password" required><br>
                <input type="text" placeholder="First Name" name="first_name" required><br>
                <input type="text" placeholder="Last Name" name="last_name" required><br>
                <button type="submit">Register</button>
            </form>
            <?php
        }
        ?>

        <!-- Display any error messages -->
        <?php if (isset($_SESSION['error'])) { ?>
            <p style="color: red;"><?php echo $_SESSION['error']; ?></p>
        <?php } ?>

    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $agree_terms = isset($_POST['agree_terms']) ? 1 : 0;

    // Form validation
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
        return;
    }

    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        return;
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists!";
        return;
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        echo "Email already exists!";
        return;
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $registerQuery = "INSERT INTO users (username, email, password, agree_terms) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $registerQuery);
    mysqli_stmt_bind_param($stmt, "sssi", $username, $email, $hashed_password, $agree_terms);

    if (mysqli_stmt_execute($stmt)) {
        // Send welcome email
        sendWelcomeEmail($email, $username);
        
        echo "Registration successful!";
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

// Function to send welcome email
function sendWelcomeEmail($email, $username) {
    $to = $email;
    $subject = "Welcome to our website!";
    $message = "Dear $username,

Thank you for registering with us. Welcome aboard!";
    $headers = "From: registration@yourwebsite.com" . "\r
";

    mail($to, $subject, $message, $headers);
}

// Close database connection
mysqli_close($conn);

// Call register function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
session_start();

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "user_registration";

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if all required fields are filled out
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "Please fill in all fields!";
    } else {
        // Validate password strength
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
        } elseif (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
        } else {
            // Check if username already exists
            $check_username = mysqli_query($conn, "SELECT username FROM users WHERE username='$username'");
            if (mysqli_num_rows($check_username) > 0) {
                echo "Username already exists!";
            } else {
                // Check if email already exists
                $check_email = mysqli_query($conn, "SELECT email FROM users WHERE email='$email'");
                if (mysqli_num_rows($check_email) > 0) {
                    echo "Email already exists!";
                } else {
                    // Hash the password before storing it
                    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                    // Insert user data into the database
                    $sql = "INSERT INTO users (username, email, password)
                            VALUES ('$username', '$email', '$hashed_password')";

                    if (mysqli_query($conn, $sql)) {
                        echo "Registration successful!";
                        header("Location: login.php");
                        exit();
                    } else {
                        echo "Error registering user: " . mysqli_error($conn);
                    }
                }
            }
        }
    }
}
?>


<?php
// Include database configuration file
include('dbconfig.php');

// Define variables to store form data
$username = "";
$email = "";
$password = "";

// Define error messages
$error_username = "";
$error_email = "";
$error_password = "";
$registration_success = false;

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process registration data

    // Validate username
    if (empty($_POST["username"])) {
        $error_username = "Username is required";
    } else {
        $username = htmlspecialchars(trim($_POST["username"]));
        
        // Check if username contains only letters and numbers
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $error_username = "Username can only contain letters, numbers, and underscores";
        }
    }

    // Validate email
    if (empty($_POST["email"])) {
        $error_email = "Email is required";
    } else {
        $email = htmlspecialchars(trim($_POST["email"]));
        
        // Check if email format is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error_email = "Invalid email format";
        }
    }

    // Validate password
    if (empty($_POST["password"])) {
        $error_password = "Password is required";
    } else {
        $password = $_POST["password"];
        
        // Check if password meets requirements
        if (strlen($password) < 6) {
            $error_password = "Password must be at least 6 characters long";
        }
        if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            $error_password = "Password can only contain letters and numbers";
        }
    }

    // If no errors, proceed with registration
    if ($error_username == "" && $error_email == "" && $error_password == "") {
        // Check if username or email already exists in the database
        $check_query = "SELECT * FROM users WHERE username=? OR email=?";
        $stmt = mysqli_prepare($conn, $check_query);
        mysqli_stmt_bind_param($stmt, "ss", $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            // User already exists
            if ($row = mysqli_fetch_assoc($result)) {
                if ($row['username'] == $username) {
                    $error_username = "Username already exists";
                }
                if ($row['email'] == $email) {
                    $error_email = "Email already exists";
                }
            }
        } else {
            // Proceed to register the new user
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert into database
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
            
            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                $registration_success = true;
            } else {
                // Error occurred during registration
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .error { color: red; margin-top: 5px; }
        .success { color: green; margin-top: 5px; }
    </style>
</head>
<body>
    <?php if ($registration_success) { ?>
        <div class="success">
            Registration successful! You can now <a href="login.php">log in</a>.
        </div>
    <?php } else { ?>
        <h2>Registration Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" value="<?php echo $username; ?>"><br>
            <div class="error"><?php echo $error_username; ?></div>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" value="<?php echo $email; ?>"><br>
            <div class="error"><?php echo $error_email; ?></div>

            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password"><br>
            <div class="error"><?php echo $error_password; ?></div>

            <input type="submit" value="Register">
        </form>
    <?php } ?>

    <p>Already have an account? <a href="login.php">Login here</a>.</p>
</body>
</html>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'user_registration';

// Connect to the database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Register function
function registerUser($username, $email, $password, $confirm_password, $conn) {
    // Check if all required fields are filled
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        return "Please fill in all required fields.";
    }

    // Validate username
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username can only contain letters, numbers, and underscores.";
    }
    if (strlen($username) < 3 || strlen($username) > 20) {
        return "Username must be between 3 and 20 characters long.";
    }

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    // Check if password matches confirm password
    if ($password != $confirm_password) {
        return "Passwords do not match.";
    }

    // Password requirements: at least 8 characters with letters and numbers
    if (!preg_match("/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/", $password)) {
        return "Password must be at least 8 characters long and contain both letters and numbers.";
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists. Please choose a different one.";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists. Please use a different email address.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt->execute()) {
        return "Registration successful! You can now login.";
    } else {
        return "Error registering user. Please try again later.";
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Call the registration function
    $result = registerUser($username, $email, $password, $confirm_password, $conn);

    // Display result
    if (strpos($result, "Registration successful") !== false) {
        header("Location: welcome.php");
        exit();
    } else {
        echo "<script>alert('" . $result . "');</script>";
    }
}

// Close database connection
$conn->close();
?>


<?php
function registerUser($username, $email, $password, $confirmPassword, $firstName, $lastName) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Check if all required fields are filled out
    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword)) {
        return "All fields must be filled out";
    }
    
    // Validate password and confirm password match
    if ($password != $confirmPassword) {
        return "Passwords do not match";
    }
    
    // Check password length
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long";
    }
    
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $firstName = mysqli_real_escape_string($conn, $firstName);
    $lastName = mysqli_real_escape_string($conn, $lastName);
    
    // Check if username already exists
    $sql = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);
    if (mysqli_num_rows($result) > 0) {
        return "Username already exists";
    }
    
    // Check if email already exists
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    if (mysqli_num_rows($result) > 0) {
        return "Email already exists";
    }
    
    // Validate email format
    if (!preg_match("/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/", $email)) {
        return "Invalid email format";
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $sql = "INSERT INTO users (username, email, password, first_name, last_name) 
            VALUES ('$username', '$email', '$hashedPassword', '$firstName', '$lastName')";
            
    if (mysqli_query($conn, $sql)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}
?>


// Example usage:
$username = $_POST['username'];
$email = $_POST['email'];
$password = $_POST['password'];
$confirmPassword = $_POST['confirm_password'];
$firstName = $_POST['first_name'];
$lastName = $_POST['last_name'];

$result = registerUser($username, $email, $password, $confirmPassword, $firstName, $lastName);
echo $result;


<?php
// Database connection settings
$host = "localhost";
$username_db = "your_username";
$password_db = "your_password";
$db_name = "your_database";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function for user registration
function registerUser() {
    global $conn;

    // Check if form was submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, $username);
        $email = mysqli_real_escape_string($conn, $email);

        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $check_username_query);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $check_email_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $query)) {
            echo "Registration successful! You can now login.";
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
</head>
<body>
    <h2>Register Here</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br>

        <input type="submit" name="submit" value="Register">
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
// Include database configuration file
include('config.php');

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        $errors = array();

        // Check if username is empty or contains special characters
        if (empty($username) || preg_match('/[^a-zA-Z0-9]/', $username)) {
            $errors[] = "Username must contain only letters and numbers!";
        }

        // Check if email is valid
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format!";
        } else {
            // Check if email already exists in database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bind_param('s', $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Email already exists!";
            }
        }

        // Check password requirements
        if (empty($password)) {
            $errors[] = "Password cannot be empty!";
        } elseif (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z])(?=.*[\W_])/', $password) || strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long and contain letters, numbers, and special characters!";
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match!";
        }

        // If no errors, proceed to register the user
        if (empty($errors)) {
            try {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Insert user into database
                $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                $stmt->bind_param('sss', $username, $email, $hashed_password);
                $stmt->execute();

                // Registration successful
                $_SESSION['message'] = "Registration successful! Please login.";
                header('Location: login.php');
                exit();
            } catch (Exception $e) {
                // Error handling
                echo "Error: " . $e->getMessage();
            }
        }

        // Close database connection
        $conn->close();
    }
}

// Call the function if form is submitted
if (isset($_POST['submit'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_POST['submit']) && !empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
        ?>

        <h2>Register Account</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter username" required>
            </div>
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter email" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter password" required>
            </div>
            <div class="form-group">
                <input type="password" name="confirm_password" placeholder="Confirm password" required>
            </div>
            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection parameters
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'test';

$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve and sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    $firstName = mysqli_real_escape_string($conn, $_POST['first_name']);
    $lastName = mysqli_real_escape_string($conn, $_POST['last_name']);
    $termsChecked = isset($_POST['terms']);

    // Initialize error array
    $errors = [];

    if (empty($username) || empty($email) || empty($password) || empty($confirmPassword) || empty($firstName) || empty($lastName)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    // Check username existence
    $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $checkUsernameQuery);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Username already exists!";
    }

    // Check email existence
    $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $checkEmailQuery);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Email is already registered!";
    }

    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long!";
    }

    if ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match!";
    }

    if (!$termsChecked) {
        $errors[] = "You must agree to the terms of service!";
    }

    // If no errors, proceed to registration
    if (empty($errors)) {
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        $regDate = date('Y-m-d H:i:s');

        $insertQuery = "INSERT INTO users (username, password, first_name, last_name, email, reg_date) 
                        VALUES ('$username', '$hashedPassword', '$firstName', '$lastName', '$email', '$regDate')";

        if (mysqli_query($conn, $insertQuery)) {
            header("Location: welcome.php?success=1");
            exit();
        } else {
            $errors[] = "Registration failed. Please try again!";
            echo mysqli_error($conn);
        }
    }

    // Close connection
    mysqli_close($conn);

    // Display errors if any
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div><br>";
        }
    }
}
?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$database = "user-registration";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize user input
function sanitize($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES);
    return $data;
}

// Register function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['register'])) {
        // Sanitize user inputs
        $username = sanitize($_POST['username']);
        $email = sanitize($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Check if all fields are filled out
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields must be filled out!";
            return;
        }

        // Check if password matches confirm password
        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare and execute the SQL statement to insert user data
        try {
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            
            if ($stmt->execute()) {
                echo "Registration successful!";
                // Redirect to login page or dashboard
                header("Location: login.php");
            } else {
                echo "Error registering user: " . mysqli_error($conn);
            }
        } catch (mysqli_sql_exception $e) {
            echo "An error occurred: " . $e->getMessage();
        }

        $stmt->close();
    }
}

// Call the registration function
registerUser();

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_registration';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Function to validate and register user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match('/^[a-zA-Z0-9_]*$/', $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif ($password !== $confirmPassword) {
            $errors[] = "Passwords do not match";
        } elseif (!preg_match('/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/', $password)) {
            $errors[] = "Password must be at least 8 characters and contain at least one number and one letter";
        }

        // If no errors
        if (empty($errors)) {

            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

            // Insert into database
            $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";

            if ($conn->query($sql)) {
                // Registration successful
                header("Location: login.php?success=Registration successful! Please login.");
                exit();
            } else {
                die("Error registering user: " . $conn->error);
            }

        } else {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        }
    }
}

// Close database connection
$conn->close();

?>


<?php
// Import required functions
require_once 'password_hash.php';

function registerUser($name, $email, $password) {
    // Database connection parameters
    $db_host = 'localhost';
    $db_user = 'root';
    $db_pass = '';
    $db_name = 'mydatabase';

    try {
        // Validate input
        if (empty($name) || empty($email) || empty($password)) {
            throw new Exception("All fields are required!");
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format!");
        }

        // Minimum password length check
        if (strlen($password) < 8) {
            throw new Exception("Password must be at least 8 characters long!");
        }

        // Connect to database
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("Email already exists!");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $name, $email, $hashed_password);
        $result = $stmt->execute();

        if ($result === false) {
            throw new Exception("Registration failed: " . $stmt->error);
        }

        // Close connections
        $stmt->close();
        $conn->close();

        return [
            'success' => true,
            'message' => "Registration successful! Welcome, $name!"
        ];

    } catch (Exception $e) {
        return [
            'success' => false,
            'errors' => [$e->getMessage()]
        ];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($name, $email, $password);

    if ($result['success']) {
        // Redirect to login page or dashboard
        header("Location: login.php");
    } else {
        // Display errors
        print_r($result['errors']);
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
    } else {
        // Check username format
        if (!preg_match("/^[a-zA-Z0-9_.+-]+$/", $username)) {
            echo "Username contains invalid characters!";
        } else {
            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                echo "Invalid email format!";
            } else {
                // Check password requirements
                if (strlen($password) < 8 || !preg_match("/[A-Za-z]/", $password) || !preg_match("/\d/", $password) || !preg_match("/[^A-Za-z\d]/", $password)) {
                    echo "Password must be at least 8 characters and contain letters, numbers, and special characters!";
                } else if ($password !== $confirm_password) {
                    echo "Passwords do not match!";
                } else {
                    // Check if username already exists
                    $checkUsernameQuery = "SELECT * FROM users WHERE username = '$username'";
                    $result = $conn->query($checkUsernameQuery);

                    if ($result->num_rows > 0) {
                        echo "Username already exists!";
                    } else {
                        // Hash password
                        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                        
                        // Insert user into database
                        $sql = "INSERT INTO users (username, email, password)
                                VALUES ('$username', '$email', '$hashed_password')";
                        
                        if ($conn->query($sql)) {
                            echo "Registration successful!";
                        } else {
                            echo "Error: " . $sql . "<br>" . $conn->error;
                        }
                    }
                }
            }
        }
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Registration</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$database = "my_database";

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user inputs
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    
    // Validate input fields
    if (empty($username) || empty($email) || empty($password)) {
        die("All fields are required");
    }
    
    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $checkQuery);
    
    if (mysqli_num_rows($result) > 0) {
        die("Username or email already exists");
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password)
                    VALUES ('$username', '$email', '$hashedPassword')";
    
    if (!mysqli_query($conn, $insertQuery)) {
        die("Error registering user: " . mysqli_error($conn));
    }
    
    // Registration successful
    echo "User registered successfully!";
    
    // Redirect to login page after 2 seconds
    header("refresh:2; url=login.php");
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_registration";

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get form values
    $firstName = sanitizeInput($_POST['first_name']);
    $lastName = sanitizeInput($_POST['last_name']);
    $email = sanitizeInput($_POST['email']);
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Form validation
    $errors = array();

    if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
        $errors[] = "All fields are required";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long";
    }

    if ($password !== $confirmPassword) {
        $errors[] = "Passwords do not match";
    }

    // Check username and email uniqueness
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $errors[] = "Username already exists";
    }

    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $errors[] = "Email already registered";
    }

    // If no errors, proceed to registration
    if (empty($errors)) {

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user data into database
        $sql = "INSERT INTO users (first_name, last_name, email, username, password) 
                VALUES (?, ?, ?, ?, ?)";

        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sssss", $firstName, $lastName, $email, $username, $hashedPassword);

        if ($stmt->execute()) {
            echo "Registration successful! You can now <a href='login.php'>log in</a>";
        } else {
            die("Error: " . $sql . "<br>" . $conn->error);
        }

    } else {

        // Display errors
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }

}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = "localhost";
$username_db = "username";
$password_db = "password";
$db_name = "mydatabase";

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check for database connection errors
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Initialize error array
    $errors = array();

    if (isset($_POST['register'])) {
        // Escape and trim the input values
        $username = mysqli_real_escape_string($conn, trim($_POST['username']));
        $email = mysqli_real_escape_string($conn, trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = mysqli_real_escape_string($conn, trim($_POST['first_name']));
        $last_name = mysqli_real_escape_string($conn, trim($_POST['last_name']));

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]{3,20}$/", $username)) {
            $errors[] = "Username must be between 3 and 20 characters long and contain only letters, numbers, or underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            $errors[] = "Please enter a valid email address";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match("/^.{6,}$/", $password)) {
            $errors[] = "Password must be at least 6 characters long";
        }

        // Check if passwords match
        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Validate first name and last name
        if (empty($first_name)) {
            $errors[] = "First name is required";
        }
        if (empty($last_name)) {
            $errors[] = "Last name is required";
        }

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username LIKE ? OR email LIKE ?";
        $stmt_check = $conn->prepare($check_query);
        $stmt_check->bind_param("ss", $username, $email);
        $stmt_check->execute();
        $result = $stmt_check->get_result();

        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                if ($row['username'] == $username) {
                    $errors[] = "Username already exists";
                }
                if ($row['email'] == $email) {
                    $errors[] = "Email already exists";
                }
            }
        }

        // If no errors, proceed to register the user
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $query = "INSERT INTO users (username, email, password, first_name, last_name) 
                      VALUES (?, ?, ?, ?, ?)";
            
            $stmt_insert = $conn->prepare($query);
            $stmt_insert->bind_param("sssss", $username, $email, $hashed_password, $first_name, $last_name);

            if ($stmt_insert->execute()) {
                // Registration successful
                header("Location: welcome.php?success=1");
                exit();
            } else {
                $errors[] = "There was a problem registering your account. Please try again later.";
            }

            // Close the statement
            $stmt_insert->close();
        }

        // Close the check statement
        $stmt_check->close();
    }

    // Close database connection
    $conn->close();

    return $errors;
}

// Call the function
$errors = registerUser();
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection

function registerUser() {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($_POST['username'])));
        $email = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars(trim($_POST['email'])));
        $password1 = $_POST['password1'];
        $password2 = $_POST['password2'];

        if (empty($username) || empty($email) || empty($password1) || empty($password2)) {
            $_SESSION['error'] = "All fields are required!";
            header("Location: register.php");
            return false;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $_SESSION['error'] = "Please enter a valid email address!";
            header("Location: register.php");
            return false;
        }

        if ($password1 !== $password2) {
            $_SESSION['error'] = "Passwords do not match!";
            header("Location: register.php");
            return false;
        }

        if (strlen($password1) < 6) {
            $_SESSION['error'] = "Password must be at least 6 characters!";
            header("Location: register.php");
            return false;
        }

        $checkUsernameQuery = "SELECT id FROM users WHERE username = '$username'";
        $result = mysqli_query($GLOBALS['conn'], $checkUsernameQuery);

        if (mysqli_num_rows($result) > 0) {
            $_SESSION['error'] = "Username already exists!";
            header("Location: register.php");
            return false;
        }

        $checkEmailQuery = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($GLOBALS['conn'], $checkEmailQuery);

        if (mysqli_num_rows($result) > 0) {
            $_SESSION['error'] = "Email already exists!";
            header("Location: register.php");
            return false;
        }

        $hashedPassword = password_hash($password1, PASSWORD_DEFAULT);
        $insertQuery = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')";

        if (mysqli_query($GLOBALS['conn'], $insertQuery)) {
            $_SESSION['success'] = "Registration successful! Please login.";
            header("Location: login.php");
            return true;
        } else {
            $_SESSION['error'] = "Error registering. Please try again later!";
            header("Location: register.php");
            return false;
        }
    }
}

// Call the function
registerUser();
?>


<?php
$host = "localhost";
$usernameDB = "root";
$passwordDB = "";
$dbname = "your_database";

$conn = mysqli_connect($host, $usernameDB, $passwordDB, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));

        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param('sss', $username, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error: " . $stmt->error;
        }

        // Close statement
        $stmt->close();
    }
}

// Call the function when form is submitted
if (isset($_POST['submit'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection
$host = "localhost";
$username = "root"; // your database username
$password = "";     // your database password
$dbname = "testdb";  // your database name

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $error = array();

    // Clean and validate input data
    function clean($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    $username = clean($_POST['username']);
    $email = clean($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = clean($_POST['first_name']);
    $last_name = clean($_POST['last_name']);
    $dob = clean($_POST['dob']);
    $phone_number = clean($_POST['phone_number']);
    $address = clean($_POST['address']);

    // Check for empty fields
    if ($username == "" || $email == "" || $password == "" || $confirm_password == "") {
        $error[] = "All fields must be filled out!";
    }

    // Validate password
    if (strlen($password) < 8) {
        $error[] = "Password must be at least 8 characters long!";
    }

    if (!preg_match("#[A-Z]#", $password)) {
        $error[] = "Password must contain at least one uppercase letter!";
    }

    if (!preg_match("#[a-z]#", $password)) {
        $error[] = "Password must contain at least one lowercase letter!";
    }

    if (!preg_match("#[0-9]#", $password)) {
        $error[] = "Password must contain at least one number!";
    }

    // Check password match
    if ($password != $confirm_password) {
        $error[] = "Passwords do not match!";
    }

    // Check username already exists
    $sql_username = "SELECT id FROM users WHERE username = ?";
    $stmt_username = $conn->prepare($sql_username);
    $stmt_username->bind_param("s", $username);
    $stmt_username->execute();
    $result_username = $stmt_username->get_result();

    if ($result_username->num_rows > 0) {
        $error[] = "Username already exists!";
    }

    // Check email already exists
    $sql_email = "SELECT id FROM users WHERE email = ?";
    $stmt_email = $conn->prepare($sql_email);
    $stmt_email->bind_param("s", $email);
    $stmt_email->execute();
    $result_email = $stmt_email->get_result();

    if ($result_email->num_rows > 0) {
        $error[] = "Email already exists!";
    }

    // If no errors
    if (empty($error)) {
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $sql_insert = "INSERT INTO users (username, email, password, first_name, last_name, dob, phone_number, address) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        $stmt_insert = $conn->prepare($sql_insert);
        $stmt_insert->bind_param("ssssssss", $username, $email, $hashed_password, $first_name, $last_name, $dob, $phone_number, $address);

        if ($stmt_insert->execute()) {
            echo "Registration successful!";
            // Optionally redirect to login page
            header("Refresh: 3; url=login.php");
        } else {
            die("Error registering user: " . $conn->error);
        }
    } else {
        foreach ($error as $err) {
            echo "<div class='alert alert-danger'>$err</div>";
        }
    }

    // Close statements
    $stmt_username->close();
    $stmt_email->close();
    $stmt_insert->close();
}

// Close connection
$conn->close();
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2 class="mb-4">Registration Form</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <div class="row">
                <!-- Username -->
                <div class="col-md-6 mb-3">
                    <label for="username" class="form-label">Username:</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                </div>

                <!-- Email -->
                <div class="col-md-6 mb-3">
                    <label for="email" class="form-label">Email address:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>

                <!-- Password -->
                <div class="col-md-6 mb-3">
                    <label for="password" class="form-label">Password:</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                </div>

                <!-- Confirm Password -->
                <div class="col-md-6 mb-3">
                    <label for="confirm_password" class="form-label">Confirm Password:</label>
                    <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                </div>

                <!-- First Name -->
                <div class="col-md-6 mb-3">
                    <label for="first_name" class="form-label">First Name:</label>
                    <input type="text" class="form-control" id="first_name" name="first_name" required>
                </div>

                <!-- Last Name -->
                <div class="col-md-6 mb-3">
                    <label for="last_name" class="form-label">Last Name:</label>
                    <input type="text" class="form-control" id="last_name" name="last_name" required>
                </div>

                <!-- Date of Birth -->
                <div class="col-md-6 mb-3">
                    <label for="dob" class="form-label">Date of Birth:</label>
                    <input type="date" class="form-control" id="dob" name="dob" required>
                </div>

                <!-- Phone Number -->
                <div class="col-md-6 mb-3">
                    <label for="phone_number" class="form-label">Phone Number:</label>
                    <input type="tel" class="form-control" id="phone_number" name="phone_number" required>
                </div>

                <!-- Address -->
                <div class="col-md-12 mb-3">
                    <label for="address" class="form-label">Address:</label>
                    <textarea class="form-control" id="address" name="address" rows="3" required></textarea>
                </div>

                <!-- Submit Button -->
                <div class="col-md-12 mt-4">
                    <button type="submit" name="submit" class="btn btn-primary">Register</button>
                </div>
            </div>
        </form>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitize_input($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

function register_user($username, $email, $password, $conn) {
    // Sanitize inputs
    $username = sanitize_input($username);
    $email = sanitize_input($email);
    $password = sanitize_input($password);

    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Check if email already exists
    $check_email_query = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $check_email_query);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) > 0) {
        return "Email already exists. Please use a different email address.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $register_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $register_query);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

    if (mysqli_stmt_execute($stmt)) {
        return "Registration successful! You can now login.";
    } else {
        return "Error registering user: " . mysqli_error($conn);
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call the registration function
    $result = register_user($username, $email, $password, $conn);
    echo $result;
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbName = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user inputs and sanitize them
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Check if user already exists
    $checkQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        die("User already exists. Please login.");
    }
    
    // Insert new user into the database
    $sql = "INSERT INTO users (username, email, password_hash)
            VALUES (?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
    
    if (mysqli_stmt_execute($stmt)) {
        // Registration successful, redirect to login page
        header("Location: login.php?success=1");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "your_database";

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function register_user($username, $email, $password, $confirm_password, $full_name, $dob, $address) {
    global $conn;
    
    // Error array to store validation errors
    $errors = [];
    
    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } else {
        // Check for invalid characters
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }
        if (strlen($username) < 3 || strlen($username) > 20) {
            $errors[] = "Username must be between 3 and 20 characters";
        }
    }
    
    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } else {
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }
        // Check if email already exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $errors[] = "Email already exists";
        }
    }
    
    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } else {
        // Password must be at least 8 characters long
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters";
        }
        
        // Check for uppercase letter
        if (!preg_match('/[A-Z]/', $password)) {
            $errors[] = "Password must contain at least one uppercase letter";
        }
        
        // Check for lowercase letter
        if (!preg_match('/[a-z]/', $password)) {
            $errors[] = "Password must contain at least one lowercase letter";
        }
        
        // Check for number
        if (!preg_match('/\d/', $password)) {
            $errors[] = "Password must contain at least one number";
        }
        
        // Check for special character
        if (!preg_match('/[^A-Za-z\d]/', $password)) {
            $errors[] = "Password must contain at least one special character";
        }
    }
    
    // Validate confirm password
    if ($confirm_password != $password) {
        $errors[] = "Passwords do not match";
    }
    
    // Validate full name
    if (empty($full_name)) {
        $errors[] = "Full name is required";
    } else {
        // Check for at least two names
        $names = explode(" ", $full_name);
        if (count($names) < 2) {
            $errors[] = "Please enter your full name (first and last name)";
        }
    }
    
    // Validate date of birth
    if (empty($dob)) {
        $errors[] = "Date of birth is required";
    } else {
        // Check if the age is at least 13 years old
        $today = new DateTime();
        $birth_date = new DateTime($dob);
        
        $age = $today->diff($birth_date)->y;
        
        if ($age < 13) {
            $errors[] = "You must be at least 13 years old to register";
        }
    }
    
    // Validate address
    if (!empty($address)) {
        // Address should not be too short
        if (strlen($address) < 5) {
            $errors[] = "Address is invalid or too short";
        }
    }
    
    // If there are errors, return them
    if (!empty($errors)) {
        return [
            'success' => false,
            'errors' => $errors
        ];
    }
    
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $username);
    $email = mysqli_real_escape_string($conn, $email);
    $full_name = mysqli_real_escape_string($conn, $full_name);
    $dob = mysqli_real_escape_string($conn, $dob);
    $address = mysqli_real_escape_string($conn, $address);
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_BCRYPT);
    
    // Insert user into database
    $sql = "INSERT INTO users (username, email, password, full_name, dob, address) 
            VALUES (?, ?, ?, ?, ?, ?)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssssss", $username, $email, $hashed_password, $full_name, $dob, $address);
    
    if ($stmt->execute()) {
        return [
            'success' => true,
            'message' => "Registration successful!"
        ];
    } else {
        return [
            'success' => false,
            'errors' => ["An error occurred during registration"]
        ];
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = $_POST['full_name'];
    $dob = $_POST['dob'];
    $address = $_POST['address'];
    
    $result = register_user($username, $email, $password, $confirm_password, $full_name, $dob, $address);
    
    if ($result['success']) {
        echo "Success: " . $result['message'];
    } else {
        foreach ($result['errors'] as $error) {
            echo "Error: " . $error . "<br>";
        }
    }
}
?>


<?php
// Database connection configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'user_registration');

// Connect to the database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get user inputs
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = trim($_POST['password']);
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all required fields!";
            return;
        }
        
        // Sanitize email
        $email = filter_var($email, FILTER_VALIDATE_EMAIL);
        
        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, "ss", $username, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }
        
        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password, role)
                       VALUES (?, ?, ?, 'user')";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful! Redirecting to login page...";
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

try {
    registerUser();
} catch (Exception $e) {
    echo "An error occurred: " . $e->getMessage();
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "user_registration";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $birthdate = $_POST['birthdate'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "Please fill in all required fields";
        return;
    }

    if ($password !== $confirm_password) {
        echo "Passwords do not match";
        return;
    }

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsernameQuery);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        echo "Username already exists";
        return;
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $checkEmailQuery);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        echo "Email already exists";
        return;
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $insertQuery = "INSERT INTO users (username, email, password, first_name, last_name, birthdate) 
                    VALUES (?, ?, ?, ?, ?, ?)";

    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "ssssss", $username, $email, $hashed_password, $first_name, $last_name, $birthdate);

    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }

    // Close statement
    mysqli_stmt_close($stmt);
}

// Call the registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'user_registration');

// Connect to the database
$connection = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check if the form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and store user inputs
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];
    
    // Validate input fields
    $errors = array();
    
    if (empty($username) || strlen($username) < 3) {
        $errors[] = "Username must be at least 3 characters long!";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }
    
    if (empty($password)) {
        $errors[] = "Password is required!";
    } else {
        // Check password strength
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long!";
        }
        
        if (!ctype_upper(str_replace(array(' ', '-'), '', $username))) {
            $errors[] = "Username must contain uppercase letters!";
        }
        
        if (!preg_match('#[0-9]#', $password)) {
            $errors[] = "Password must contain at least one number!";
        }
        
        if (!preg_match('#[!@#$%^&*()]#', $password)) {
            $errors[] = "Password must contain at least one special character!";
        }
    }
    
    // If there are errors, display them
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    } else {
        // Sanitize data before storing in database
        $username = mysqli_real_escape_string($connection, $username);
        $email = mysqli_real_escape_string($connection, $email);
        
        // Hash the password using bcrypt
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);
        
        // Check if username already exists
        $check_username_query = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($connection, $check_username_query);
        
        if (mysqli_num_rows($result) > 0) {
            echo "<div class='alert alert-danger'>Username already exists!</div>";
        } else {
            // Check if email already exists
            $check_email_query = "SELECT * FROM users WHERE email = '$email'";
            $result = mysqli_query($connection, $check_email_query);
            
            if (mysqli_num_rows($result) > 0) {
                echo "<div class='alert alert-danger'>Email already exists!</div>";
            } else {
                // Insert new user into the database
                $insert_query = "INSERT INTO users (username, email, password) 
                                VALUES ('$username', '$email', '$hashed_password')";
                
                if (mysqli_query($connection, $insert_query)) {
                    echo "<div class='alert alert-success'>Registration successful! You can now login.</div>";
                } else {
                    echo "<div class='alert alert-danger'>Error registering user!</div>";
                }
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Registration</title>
    <style>
        .form-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .alert {
            padding: 10px;
            margin-bottom: 20px;
            border-radius: 4px;
        }
        
        .alert-danger {
            background-color: #f2d6d7;
            color: #a94442;
            border-color: #ebccd1;
        }
        
        .alert-success {
            background-color: #dff0d8;
            color: #3c763d;
            border-color: #bce8b5;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Registration Form</h2>
        <form action="" method="POST">
            <input type="text" name="username" placeholder="Enter your username..." required><br><br>
            <input type="email" name="email" placeholder="Enter your email..." required><br><br>
            <input type="password" name="password" placeholder="Enter your password..." required><br><br>
            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
function registerUser($username, $email, $password) {
    // Database connection parameters
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "my_database";

    // Connect to the database
    $conn = new mysqli($host, $db_username, $db_password, $database);

    // Check for connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    $username = htmlspecialchars(trim($username));
    $email = htmlspecialchars(trim($email));
    $password = trim($password);

    // Basic input validation
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Validate username format
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username contains invalid characters!";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Check if username already exists
    $check_username = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($check_username);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $check_email = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($check_email);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Validate password requirements
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
        return "Password contains invalid characters!";
    }

    if (!preg_match('/[A-Za-z]/', $password)) {
        return "Password must contain letters!";
    }

    if (!preg_match('/[0-9]/', $password)) {
        return "Password must contain numbers!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into the database
    $insert_user = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insert_user);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . $stmt->error;
    }

    // Close the database connection
    $conn->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Database configuration
$host = "localhost";
$db_username = "root"; // Change to your database username
$db_password = "";     // Change to your database password
$db_name = "test_db";  // Change to your database name

// Connect to the database
$conn = new mysqli($host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get form data
        $username = $_POST['username'];
        $password = $_POST['password'];
        $email = $_POST['email'];
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];

        // Validate input fields
        if (empty($username) || empty($password) || empty($email)) {
            die("Please fill in all required fields.");
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsernameQuery);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            die("Username already exists.");
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, password, email, first_name, last_name)
                        VALUES (?, ?, ?, ?, ?)";
        
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param("sssss", $username, $hashedPassword, $email, $firstName, $lastName);

        if ($stmt->execute()) {
            header("Location: login.php");
            exit();
        } else {
            die("Error registering user.");
        }

    }
}

// Call the registration function
registerUser();

// Close database connection
$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Function to sanitize input data
    function sanitize($data) {
        return htmlspecialchars(trim($data));
    }

    // Get user inputs
    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $agree_terms = isset($_POST['agree']);

    // Initialize error array
    $errors = array();

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if (strlen($username) < 3) {
        $errors[] = "Username must be at least 3 characters long!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    if (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long!";
    }

    if (!$agree_terms) {
        $errors[] = "You must agree to the terms and conditions!";
    }

    // Check if username or email already exists
    if (empty($errors)) {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $errors[] = "Username or email already exists!";
        }
    }

    // If no errors, register the user
    if (empty($errors)) {
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            echo "Registration successful! You can now login.";
        } else {
            $errors[] = "Error registering user. Please try again!";
        }
    }

    // Close statement
    $stmt->close();
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <?php if (isset($errors)) { ?>
            <?php foreach ($errors as $error) { ?>
                <div class="alert alert-danger mt-3"><?php echo $error; ?></div>
            <?php } ?>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post" class="bg-white p-5 rounded shadow">
            <h2 class="text-center mb-4">Registration Form</h2>

            <div class="mb-3">
                <label for="username" class="form-label">Username:</label>
                <input type="text" class="form-control" id="username" name="username" required>
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <input type="email" class="form-control" id="email" name="email" required>
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <input type="password" class="form-control" id="password" name="password" required>
            </div>

            <div class="mb-3">
                <label for="confirm_password" class="form-label">Confirm Password:</label>
                <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
            </div>

            <div class="mb-3 form-check">
                <input type="checkbox" class="form-check-input" id="agree" name="agree" required>
                <label class="form-check-label" for="agree">I agree to the terms and conditions</label>
            </div>

            <button type="submit" class="btn btn-primary w-100">Register</button>
        </form>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $message = "All fields are required!";
    } else if (!validateUsername($username)) {
        $message = "Invalid username. Only letters, numbers, underscores, and hyphens are allowed.";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $message = "Invalid email format!";
    } else if ($password !== $confirm_password) {
        $message = "Passwords do not match!";
    } else if (!validatePassword($password)) {
        $message = "Password must be at least 8 characters long and contain letters and numbers.";
    } else {
        try {
            // Check for existing username or email
            $stmt = $conn->prepare("SELECT * FROM users WHERE username=:username OR email=:email");
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':email', $email);
            $stmt->execute();
            
            if ($stmt->rowCount() > 0) {
                throw new Exception("Username or email already exists.");
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert into database
            $insertStmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
            $insertStmt->bindParam(':username', $username);
            $insertStmt->bindParam(':email', $email);
            $insertStmt->bindParam(':password', $hashed_password);

            if ($insertStmt->execute()) {
                $message = "Registration successful! You can now login.";
            } else {
                throw new Exception("Error registering user.");
            }
        } catch (Exception $e) {
            $message = $e->getMessage();
        }
    }

    echo "<script>alert('$message');</script>";
}
$conn = null;

function validateUsername($username) {
    return preg_match("/^[a-zA-Z0-9_\-]*$/", $username);
}

function validatePassword($password) {
    if (strlen($password) < 8) return false;
    if (!preg_match("#[A-Za-z]#", $password)) return false;
    if (!preg_match("#[0-9]#", $password)) return false;
    return true;
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // default username for local development
$password = '';      // default password for local development

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
function registerUser() {
    // Database connection (replace with your actual connection)
    $conn = mysqli_connect("localhost", "username", "password", "database");

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $error = false;

        // Sanitize and validate input data
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate username
        if (empty($username)) {
            $error = true;
            $error_message .= "Username is required.<br>";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $error = true;
            $error_message .= "Username contains invalid characters.<br>";
        } elseif (strlen($username) < 3 || strlen($username) > 20) {
            $error = true;
            $error_message .= "Username must be between 3 and 20 characters long.<br>";
        }

        // Validate email
        if (empty($email)) {
            $error = true;
            $error_message .= "Email is required.<br>";
        } elseif (!preg_match("/^[a-zA-Z0-9_\.\-]+@[a-zA-Z0-9\-]+\.[a-zA-Z]{2,4}$/", $email)) {
            $error = true;
            $error_message .= "Invalid email format.<br>";
        }

        // Validate password
        if (empty($password) || empty($confirm_password)) {
            $error = true;
            $error_message .= "Password is required.<br>";
        } elseif ($password !== $confirm_password) {
            $error = true;
            $error_message .= "Passwords do not match.<br>";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])/u", $password)) {
            $error = true;
            $error_message .= "Password must contain at least one uppercase letter, one lowercase letter, one number, and a special character.<br>";
        } elseif (strlen($password) < 8) {
            $error = true;
            $error_message .= "Password must be at least 8 characters long.<br>";
        }

        // If no errors
        if (!$error) {
            // Check if username already exists
            $check_username_query = "SELECT id FROM users WHERE username = ?";
            $stmt = mysqli_prepare($conn, $check_username_query);
            mysqli_stmt_bind_param($stmt, "s", $username);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $error = true;
                $error_message .= "Username already exists.<br>";
            }

            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $check_email_query);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                $error = true;
                $error_message .= "Email already exists.<br>";
            }

            // Close the prepared statements
            mysqli_stmt_close($stmt);
        }

        // If no errors, insert into database
        if (!$error) {
            // Hash password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

            // Insert user data into table
            $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insert_query);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                echo "Registration successful! You can now <a href='login.php'>login</a>.";
                
                // Optional: Log the registration attempt
                log_registration_attempt('success', $username);
                
                // Redirect after success
                header("Location: login.php");
                exit();
            } else {
                // Error in inserting data
                $error = true;
                $error_message .= "Error registering. Please try again later.<br>";
            }
        }

        // Close the prepared statement
        mysqli_stmt_close($stmt);

        if ($error) {
            echo "<div class='alert alert-danger'>" . $error_message . "</div>";
            
            // Optional: Log registration attempt with errors
            log_registration_attempt('failed', $username, $error_message);
        }

    } else {
        // Form not submitted yet
        header("Location: register.php");
        exit();
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
registerUser();

// Optional function to log registration attempts
function log_registration_attempt($status, $username, $error_message = '') {
    $log_file = 'registration_log.txt';
    
    $log_entry = date('Y-m-d H:i:s') . " - Status: " . $status;
    if ($username) {
        $log_entry .= " - Username: " . htmlspecialchars($username);
    }
    if ($error_message) {
        $log_entry .= " - Error: " . htmlspecialchars($error_message);
    }
    $log_entry .= "
";

    file_put_contents($log_file, $log_entry, FILE_APPEND | LOCK_EX);
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get and sanitize input data
    function sanitize($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $first_name = sanitize($_POST['first_name']);
    $last_name = sanitize($_POST['last_name']);

    // Validate inputs
    $errors = array();

    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format!";
    }

    if ($password !== $confirm_password) {
        $errors[] = "Passwords do not match!";
    }

    if (strlen($password) < 6) {
        $errors[] = "Password must be at least 6 characters long!";
    }

    if (!isset($_POST['agree'])) {
        $errors[] = "You must agree to the terms and conditions!";
    }

    // If there are errors, display them
    if (count($errors) > 0) {
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
    } else {
        // Proceed with registration

        // Check if username already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            if ($stmt->rowCount() > 0) {
                die("Username already exists!");
            }
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }

        // Check if email already exists
        try {
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->rowCount() > 0) {
                die("Email already registered!");
            }
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }

        // Generate activation token
        $activation_token = bin2hex(random_bytes(16));

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert into database
        try {
            $stmt = $conn->prepare("
                INSERT INTO users 
                (username, email, password, first_name, last_name, activation_token, is_active)
                VALUES (?, ?, ?, ?, ?, ?, 0)
            ");
            $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name, $activation_token]);

            // Send activation email
            $to = $email;
            $subject = "Account Activation";
            $message = "
                <html>
                    <head>
                        <title>Activate your account</title>
                    </head>
                    <body>
                        <p>Please click the following link to activate your account:</p>
                        <a href='http://example.com/activate.php?token=$activation_token'>Activate Now</a>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: admin@example.com";

            mail($to, $subject, $message, $headers);

            // Redirect to success page
            header("Location: registration_success.php");
            exit();
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h1>Create Account</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>

        <label for="first_name">First Name:</label><br>
        <input type="text" id="first_name" name="first_name"><br>

        <label for="last_name">Last Name:</label><br>
        <input type="text" id="last_name" name="last_name"><br>

        <input type="checkbox" id="agree" name="agree">
        <label for="agree">I agree to the terms and conditions</label><br>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Connect to database (same as above)
require_once 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    try {
        $stmt = $conn->prepare("SELECT id, username FROM users WHERE activation_token = ? AND is_active = 0");
        $stmt->execute([$token]);
        if ($stmt->rowCount() == 1) {
            list($user_id, $username) = $stmt->fetch(PDO::FETCH_NUM);

            // Activate the user
            $update_stmt = $conn->prepare("UPDATE users SET is_active = 1, activation_token = NULL WHERE id = ?");
            $update_stmt->execute([$user_id]);

            echo "Account activated successfully!";
            exit();
        } else {
            die("Invalid or expired activation link.");
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
} else {
    die("No activation token provided.");
}
?>


<?php
session_start();
// Database configuration
$host = "localhost";
$username = "root"; // database username
$password = ""; // database password
$database = "mydb"; // database name

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Registration function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars(filter_var($_POST['email'], FILTER_SANITIZE_STRING));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        $first_name = htmlspecialchars($_POST['first_name']);
        $last_name = htmlspecialchars($_POST['last_name']);

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if ($password != $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsernameQuery);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmailQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);

        // Insert user into database
        try {
            $insertQuery = "INSERT INTO users (username, email, password, first_name, last_name) 
                            VALUES (?, ?, ?, ?, ?)";
            
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("sssss", $username, $email, $hashed_password, $first_name, $last_name);

            if ($stmt->execute()) {
                // Registration successful
                $_SESSION['username'] = $username;
                header("Location: welcome.php");
                exit();
            } else {
                echo "Error registering user!";
            }
        } catch (Exception $e) {
            echo "An error occurred: " . $e->getMessage();
        }
    }
}

// Close database connection
$conn->close();
?>

<!-- HTML registration form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here:</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br><br>
        <input type="email" name="email" placeholder="Email" required><br><br>
        <input type="password" name="password" placeholder="Password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br><br>
        <input type="text" name="first_name" placeholder="First Name" required><br><br>
        <input type="text" name="last_name" placeholder="Last Name" required><br><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>

<?php
// Call the registration function
registerUser();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'registration_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize input data
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields must be filled out!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($password !== $confirmPassword) {
            echo "Passwords do not match!";
            return;
        }

        // Check if username already exists
        $checkUsername = "SELECT id FROM users WHERE username = ?";
        $stmt = $conn->prepare($checkUsername);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $checkEmail = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($checkEmail);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $username, $email, $hashedPassword);

        if ($stmt->execute()) {
            echo "Registration successful!";
            // You can redirect to login page here
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Email: <input type="email" name="email"><br><br>
        Password: <input type="password" name="password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>

// Call the registration function
<?php
registerUser();
?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_registration';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// User registration function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Sanitize input
        $username = mysqli_real_escape_string($conn, trim($username));
        $email = mysqli_real_escape_string($conn, trim($email));
        $password = mysqli_real_escape_string($conn, trim($password));
        
        // Validate input
        if (empty($username) || empty($email) || empty($password)) {
            echo "Please fill in all fields!";
            return;
        }
        
        // Check if username already exists
        $check_username_query = "SELECT username FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }
        
        // Check if email already exists
        $check_email_query = "SELECT email FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Password validation
        $min_length = 8;
        if (strlen($password) < $min_length) {
            echo "Password must be at least 8 characters long!";
            return;
        }
        
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Display registration form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <style>
        .container {
            width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f2f2f2;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="email"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Register Here</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="username">Username:</label><br>
                <input type="text" id="username" name="username" required><br>
            </div>
            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required><br>
            </div>
            <div class="form-group">
                <label for="password">Password:</label><br>
                <input type="password" id="password" name="password" required><br>
            </div>
            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
function registerUser($username, $email, $password) {
    // Sanitize inputs to prevent SQL injection
    $username = htmlspecialchars(trim($username));
    $email = htmlspecialchars(trim($email));
    $password = trim($password);

    // Check if all required fields are filled out
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields must be filled out";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Create a connection to the database
    $conn = new mysqli('localhost', 'username', 'password', 'database_name');

    // Check for connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Hash the password securely
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Check if username or email already exists in database
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if the username already exists
        while ($row = $result->fetch_assoc()) {
            if ($row['username'] == $username) {
                return "Username already exists";
            } else if ($row['email'] == $email) {
                return "Email already in use";
            }
        }
    }

    // Insert the new user into the database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        // Registration successful
        return "Registration successful!";
    } else {
        // Error occurred during registration
        return "Error: " . $stmt->error;
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($username, $email, $password);
    echo $result;
}
?>


<?php
// Database configuration
require_once 'db_config.php';

function registerUser() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize input data
        $username = sanitizeInput($username);
        $email = sanitizeInput($email);
        $password = sanitizeInput($password);

        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
            $errors[] = "Username can only contain letters, numbers, and underscores";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (strlen($password) < 6) {
            $errors[] = "Password must be at least 6 characters long";
        } elseif (!preg_match('/^[a-zA-Z0-9]+$/', $password)) {
            $errors[] = "Password can only contain letters and numbers";
        }

        // If there are errors, display them
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        try {
            // Check if username or email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                echo "<div class='error'>Username or email already exists</div>";
                return;
            }

            // Insert new user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            $stmt->execute();

            if ($stmt->affected_rows > 0) {
                echo "<div class='success'>Registration successful! You can now login.</div>";
                // Redirect to login page after some seconds
                header("Refresh: 2; url=login.php");
            } else {
                echo "<div class='error'>Error registering user</div>";
            }
        } catch (Exception $e) {
            echo "<div class='error'>An error occurred: " . $e->getMessage() . "</div>";
        }
    }
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($strip_tags($data)));
}

// Close database connection
$conn->close();
?>



<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Registration function
function registerUser($username, $email, $password, $conn) {
    // Validate inputs
    if (empty($username) || empty($email) || empty($password)) {
        return "All fields are required!";
    }

    // Check if username already exists
    $checkUsername = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $checkUsername);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        return "Username already exists!";
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Check password strength
    if (strlen($password) < 8) {
        return "Password must be at least 8 characters long!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

    if (mysqli_execute($stmt)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $result = registerUser($username, $email, $password, $conn);

    if (strpos($result, 'successful') !== false) {
        header("Location: welcome.php");
        exit();
    } else {
        echo $result;
    }
}

mysqli_close($conn);
?>

<!-- Registration Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Here</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$"><br>

        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';      // Replace with your database password
$dbname = 'mydatabase'; // Replace with your database name

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to validate email format
function isValidEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

// Function to validate password strength
function isValidPassword($password) {
    // At least 8 characters long and contains at least one letter and one number
    return preg_match('/^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*()_+}{":;?><~\-|=]{8,}$/', $password);
}

// Function to handle registration
function registerUser($username, $email, $password) {
    global $conn;

    // Check if username already exists
    $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($checkUsernameQuery);
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return 'Username already exists.';
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return 'Email already exists.';
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert new user into database
    $registerQuery = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($registerQuery);
    $stmt->bind_param('sss', $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return 'Registration successful!';
    } else {
        return 'Error registering user: ' . $stmt->error;
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get input data
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Initialize errors array
    $errors = [];

    // Validate username
    if (empty($username)) {
        $errors[] = 'Username is required.';
    } elseif (!preg_match('/^[a-zA-Z0-9_]*$/', $username)) {
        $errors[] = 'Username can only contain letters, numbers, and underscores.';
    }

    // Validate email
    if (empty($email)) {
        $errors[] = 'Email is required.';
    } elseif (!isValidEmail($email)) {
        $errors[] = 'Invalid email format.';
    }

    // Validate password
    if (empty($password)) {
        $errors[] = 'Password is required.';
    } else {
        if ($password !== $confirmPassword) {
            $errors[] = 'Passwords do not match.';
        } elseif (!isValidPassword($password)) {
            $errors[] = 'Password must be at least 8 characters long and contain at least one letter and one number.';
        }
    }

    // If there are errors, display them
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    } else {
        // Register the user
        $result = registerUser($username, $email, $password);
        echo "<div class='alert alert-success'>$result</div>";
    }

    // Close statement and connection
    $stmt->close();
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize inputs
        $firstname = htmlspecialchars(trim($_POST['firstname']));
        $lastname = htmlspecialchars(trim($_POST['lastname']));
        $email = htmlspecialchars(trim($_POST['email']));
        $username = htmlspecialchars(trim($_POST['username']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        if (empty($firstname) || empty($lastname) || empty($email) || empty($username) || empty($password)) {
            echo "Please fill in all required fields!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username already exists
        $check_username_query = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
            return;
        }

        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user into database
        $insert_query = "
            INSERT INTO users 
            SET firstname = ?, 
                lastname = ?,
                email = ?,
                username = ?,
                password = ?
        ";

        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, "sssss", $firstname, $lastname, $email, $username, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful! You can now login.";
            // Redirect to login page after 2 seconds
            header("Refresh:2; url=login.php");
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Connect to the database
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

// Check for database connection errors
if ($mysqli->connect_errno) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Register function
function register_user() {
    global $mysqli;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Get form values
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Sanitize input data
        $first_name = sanitize($first_name);
        $last_name = sanitize($last_name);
        $email = sanitize($email);

        // Validate input data
        if (empty($first_name) || empty($last_name) || empty($email) || empty($password)) {
            die("All fields are required!");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address!");
        }

        if ($password !== $confirm_password) {
            die("Passwords do not match!");
        }

        // Check password length
        if (strlen($password) < 8) {
            die("Password must be at least 8 characters long!");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare SQL statement to insert user into database
        $stmt = $mysqli->prepare("INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)");
        
        if (!$stmt) {
            die("Prepare failed: " . $mysqli->error);
        }

        // Bind parameters
        $stmt->bind_param("ssss", $first_name, $last_name, $email, $hashed_password);

        // Execute the statement
        if ($stmt->execute()) {
            echo "Registration successful!";
            // Redirect to login page or dashboard after some seconds
            header("Refresh: 2; url=login.php");
        } else {
            die("Error registering user: " . $mysqli->error);
        }

        // Close the statement
        $stmt->close();
    }
}

// Call the register function
register_user();

// Close database connection
$mysqli->close();
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Register function
function registerUser() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $email = htmlspecialchars(trim($_POST['email']));
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        // Validate input
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }
        
        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }
        
        // Password requirements: minimum 8 characters with at least one special character and number
        if (strlen($password) < 8 || !preg_match("/[0-9]/", $password) || !preg_match("/[^a-zA-Z0-9]/", $password)) {
            echo "Password must be at least 8 characters long, contain a number, and a special character!";
            return;
        }
        
        // Check if username already exists
        $check_username = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($check_username);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            echo "Username already exists!";
            return;
        }
        
        // Check if email already exists
        $check_email = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            echo "Email already exists!";
            return;
        }
        
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Insert user into database
        $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $username, $email, $hashed_password);
        
        if ($stmt->execute()) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Call the registration function
try {
    registerUser();
} catch (Exception $e) {
    echo 'Caught exception: ',  $e->getMessage(), "
";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Form</title>
    <style>
        .container {
            width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f3f3f3;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .input-group {
            margin-bottom: 15px;
        }
        
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="input-group">
                <input type="text" name="username" placeholder="Enter your username" required pattern="[a-zA-Z0-9 ]+">
            </div>
            <div class="input-group">
                <input type="email" name="email" placeholder="Enter your email" required>
            </div>
            <div class="input-group">
                <input type="password" name="password" placeholder="Enter your password" required pattern="[a-zA-Z0-9!@#$%^&*()]{8,}">
            </div>
            <div class="input-group">
                <input type="password" name="confirm_password" placeholder="Confirm password" required pattern="[a-zA-Z0-9!@#$%^&*()]{8,}">
            </div>
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Function to handle user registration
function registerUser($username, $email, $password, $confirm_password) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $dbname = 'mydatabase';

    try {
        // Create a new PDO instance
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate inputs
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            throw new Exception("All fields are required!");
        }

        // Check if password matches confirm password
        if ($password !== $confirm_password) {
            throw new Exception("Passwords do not match!");
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format!");
        }

        // Sanitize inputs
        $username = htmlspecialchars(strip_tags(trim($username)));
        $email = htmlspecialchars(strip_tags(trim($email)));

        // Password requirements: at least 8 characters with one uppercase and one special character
        if (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*()_+}{":?><;\/?~\-|=]{8,}$/', $password)) {
            throw new Exception("Password must be at least 8 characters and contain one uppercase letter and a special character!");
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            throw new Exception("Username already exists!");
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            throw new Exception("Email already registered!");
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_BCRYPT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);

        // Close connection
        $conn = null;

        return true; // Registration successful

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } catch(Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        if (registerUser($_POST['username'], $_POST['email'], $_POST['password'], $_POST['confirm_password'])) {
            echo "Registration successful!";
            // Redirect to login page
            header("Location: login.php");
            exit();
        }
    } catch(Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'registration_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;

    // Initialize variables
    $errors = [];
    $full_name = '';
    $email = '';
    $password = '';

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get user input
        $full_name = $_POST['full_name'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate inputs
        if (empty($full_name)) {
            $errors[] = "Full name is required";
        } elseif (!preg_match("/^[a-zA-Z ]+$/", $full_name)) {
            $errors[] = "Full name can only contain letters and spaces";
        }

        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        } else {
            // Check if email already exists in database
            $check_email_query = "SELECT id FROM users WHERE email=?";
            $stmt = $conn->prepare($check_email_query);
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $errors[] = "Email already exists";
            }
        }

        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif (!preg_match("/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/", $password)) {
            $errors[] = "Password must be at least 8 characters and contain letters and numbers";
        }

        // If no errors, proceed to registration
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

            // Insert into database
            $sql = "INSERT INTO users (full_name, email, password) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("sss", $full_name, $email, $hashed_password);

            if ($stmt->execute()) {
                // Registration successful
                header("Location: registration_success.php?message=Registration+successful");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again.";
            }
        }
    }

    // Close statement and connection
    if (isset($stmt)) {
        $stmt->close();
    }
}

// Call the function when form is submitted
if (isset($_POST['submit'])) {
    registerUser();
}
?>


<?php
$message = isset($_GET['message']) ? $_GET['message'] : '';
if ($message) {
    echo "<h1>$message</h1>";
}
?>


<?php
// Include the configuration file
include("config.php");

// Function to handle user registration
function registerUser() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Initialize error array
        $errors = array();

        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } elseif (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username contains invalid characters. Only letters, numbers and underscores are allowed.";
        }

        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } elseif ($password !== $confirm_password) {
            $errors[] = "Passwords do not match";
        } elseif (!preg_match("/^.*(?=.{8,})(?=.*\d)(?=.*[a-zA-Z])(?=.*[!@#$%^&*()_+=]).*$/", $password)) {
            $errors[] = "Password must be at least 8 characters long and contain at least one letter, one number, and one special character";
        }

        // Check if username or email already exists
        $stmt = $GLOBALS['conn']->prepare("SELECT id FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                if ($row['username'] == $username) {
                    $errors[] = "Username already exists";
                }
                if ($row['email'] == $email) {
                    $errors[] = "Email already exists";
                }
            }
        }

        // If there are no errors, proceed to register the user
        if (empty($errors)) {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_BCRYPT);

            // Insert into database
            $stmt = $GLOBALS['conn']->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $username, $email, $hashed_password);
            if ($stmt->execute()) {
                // Registration successful
                header("Location: welcome.php?success=Registration completed successfully");
                exit();
            } else {
                die("An error occurred while registering. Please try again later.");
            }
        } else {
            // Display errors
            foreach ($errors as $error) {
                echo "<p class='error'>$error</p>";
            }
        }

        $stmt->close();
    }
}

// Call the registration function
registerUser();

// Close database connection
$conn->close();
?>


<?php
// Database connection constants
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'mydatabase');

// Connect to the database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function for user registration
function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get form values
        $firstName = $_POST['first_name'];
        $lastName = $_POST['last_name'];
        $email = $_POST['email'];
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input data
        if (empty($firstName) || empty($lastName) || empty($email) || empty($username) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Check for valid email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        // Check username length and characters
        if (strlen($username) < 3 || preg_match('/[^a-zA-Z0-9_]/', $username)) {
            echo "Username must be at least 3 characters long and contain only letters, numbers, or underscores!";
            return;
        }

        // Password validation
        if (strlen($password) < 8 ||
            !preg_match('/[A-Z]/', $password) ||
            !preg_match('/[0-9]/', $password) ||
            !preg_match('/[^a-zA-Z0-9]/', $password)) {
            echo "Password must be at least 8 characters long and contain at least one uppercase letter, one number, and one special character!";
            return;
        }

        // Check if user already exists
        $checkQuery = "SELECT * FROM users WHERE email = ? OR username = ?";
        $stmt = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmt, "ss", $email, $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            echo "Email or username already exists!";
            return;
        }

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insertQuery = "INSERT INTO users (first_name, last_name, email, username, password) VALUES (?, ?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmt, "sssss", $firstName, $lastName, $email, $username, $hashedPassword);

        if (mysqli_stmt_execute($stmt)) {
            echo "Registration successful!";
            // Redirect to login page or dashboard
            header('Location: login.php');
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }
}

// Call the registration function
registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        $errors = array();
        
        // Validate username
        if (empty($username)) {
            $errors[] = "Username is required";
        } else {
            // Check for invalid characters
            if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
                $errors[] = "Username can only contain letters and numbers";
            }
        }
        
        // Validate email
        if (empty($email)) {
            $errors[] = "Email is required";
        } else {
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format";
            } else {
                // Check if email already exists in database
                $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
                $stmt = mysqli_prepare($conn, $checkEmailQuery);
                mysqli_stmt_bind_param($stmt, "s", $email);
                mysqli_stmt_execute($stmt);
                mysqli_stmt_store_result($stmt);
                if (mysqli_stmt_num_rows($stmt) > 0) {
                    $errors[] = "Email already exists";
                }
            }
        }
        
        // Validate password
        if (empty($password)) {
            $errors[] = "Password is required";
        } else {
            if (strlen($password) < 8) {
                $errors[] = "Password must be at least 8 characters long";
            } else {
                // Check for at least one letter and one number
                if (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
                    $errors[] = "Password can only contain letters and numbers";
                }
            }
        }
        
        if (empty($errors)) {
            // Hash password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user into database
            $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insertQuery);
            mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashedPassword);
            
            if (mysqli_stmt_execute($stmt)) {
                echo "Registration successful!";
                // Redirect to login page
                header("Location: login.php");
                exit();
            } else {
                $errors[] = "Error registering user. Please try again.";
            }
        } else {
            foreach ($errors as $error) {
                echo "<div class='error'>" . $error . "</div>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register user
function registerUser($conn, $username, $email, $password) {
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Validate username, email, and password
    if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
        return "Username contains invalid characters!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    if (strlen($password) < 8 || !preg_match("/[A-Za-z]/", $password) || !preg_match("/\d/", $password)) {
        return "Password must be at least 8 characters and contain letters and numbers!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt->execute()) {
        // Start session and redirect to dashboard
        session_start();
        $_SESSION['registered'] = true;
        header("Location: welcome.php");
        exit();
    } else {
        return "Registration failed! Please try again.";
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = registerUser($conn, $username, $email, $password);

    if (is_string($result)) {
        echo "<div class='error'>" . $result . "</div>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Configuration file (config.php)
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();

require_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = $_POST['full_name'];

    // Initialize error array
    $errors = [];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        $errors[] = "All fields are required";
    }

    // Check if username already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$username]);
        if ($stmt->rowCount() > 0) {
            $errors[] = "Username already exists";
        }
    } catch(PDOException $e) {
        die("Error checking username: " . $e->getMessage());
    }

    // Check if email already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            $errors[] = "Email already registered";
        }
    } catch(PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }

    // Validate password
    if (strlen($password) < 8) {
        $errors[] = "Password must be at least 8 characters long";
    }

    if ($password != $confirm_password) {
        $errors[] = "Passwords do not match";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    // If no errors
    if (empty($errors)) {
        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $email = htmlspecialchars(trim($email));
        $full_name = htmlspecialchars(trim($full_name));

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            // Insert into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password, full_name) VALUES (?, ?, ?, ?)");
            $stmt->execute([$username, $email, $hashed_password, $full_name]);

            // Redirect to confirmation page
            header("Location: registration_success.php");
            exit();
        } catch(PDOException $e) {
            die("Registration error: " . $e->getMessage());
        }
    }

    // If errors exist, display them
    if (!empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    }
}
?>


<?php
// Database connection
$host = "localhost";
$username = "root"; // Change to your database username
$password = "";     // Change to your database password
$dbname = "registration_db"; // Change to your database name

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate empty fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "<script>alert('All fields are required!');</script>";
    } else {
        // Check password match
        if ($password != $confirm_password) {
            echo "<script>alert('Passwords do not match!');</script>";
        } else {
            // Email validation
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                echo "<script>alert('Please enter a valid email address!');</script>";
            } else {
                // Check if username already exists
                $checkUsername = "SELECT * FROM users WHERE username='$username'";
                $result = mysqli_query($conn, $checkUsername);
                
                if (mysqli_num_rows($result) > 0) {
                    echo "<script>alert('Username already exists!');</script>";
                } else {
                    // Check if email already exists
                    $checkEmail = "SELECT * FROM users WHERE email='$email'";
                    $result = mysqli_query($conn, $checkEmail);

                    if (mysqli_num_rows($result) > 0) {
                        echo "<script>alert('Email already exists!');</script>";
                    } else {
                        // Hash password before storing
                        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                        
                        // Insert into database
                        $sql = "INSERT INTO users (username, email, password)
                                VALUES ('$username', '$email', '$hashed_password')";
                        
                        if (mysqli_query($conn, $sql)) {
                            echo "<script>alert('Registration successful!');</script>";
                            header("Refresh:0");
                        } else {
                            echo "<script>alert('Error: " . mysqli_error($conn) . "');</script>";
                        }
                    }
                }
            }
        }
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: -10px;
        }
    </style>
</head>
<body>
    <h2>Registration Page</h2>
    
    <!-- Registration Form -->
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username"><br>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email"><br>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password"><br>
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password"><br>
        </div>

        <button type="submit">Register</button>
    </form>

    <p>Already have an account? <a href="#">Login here</a></p>
</body>
</html>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'test';

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
function registerUser($username, $email, $password, $conn) {
    // Check if username is already taken
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        throw new Exception("Username already exists.");
    }
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format.");
    }
    
    // Check if email is already registered
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        throw new Exception("Email already exists.");
    }
    
    // Hash the password
    $password_hash = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $password_hash);
    
    if (!$stmt->execute()) {
        throw new Exception("Registration failed: " . $stmt->error);
    }
    
    return true;
}
?>


<?php
require_once 'database_connection.php';
require_once 'functions.php';

try {
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        registerUser($username, $email, $password, $conn);
        echo "Registration successful!";
    }
} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'user_registration');

// Connect to database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to validate and register user
function registerUser() {
    global $conn;

    // Get form data
    $username = isset($_POST['username']) ? sanitize($_POST['username']) : '';
    $email = isset($_POST['email']) ? sanitize($_POST['email']) : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';
    $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';

    // Initialize errors array
    $errors = [];

    // Validate username
    if (empty($username)) {
        $errors[] = "Username is required";
    } elseif (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
        $errors[] = "Username can only contain letters, numbers, and underscores";
    }

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    } else {
        // Check if email already exists
        $check_email_query = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $check_email_query);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email already exists";
        }
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required";
    } elseif ($password !== $confirm_password) {
        $errors[] = "Passwords do not match";
    } elseif (!preg_match('/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/', $password)) {
        $errors[] = "Password must be at least 8 characters and contain at least one letter and one number";
    }

    // If there are errors
    if (count($errors) > 0) {
        foreach ($errors as $error) {
            echo "<div class='alert alert-danger'>$error</div>";
        }
    } else {
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $insert_query);
        mysqli_stmt_bind_param($stmt, 'sss', $username, $email, $hashed_password);

        if (mysqli_stmt_execute($stmt)) {
            echo "<div class='alert alert-success'>Registration successful! Please login to continue.</div>";
            // Redirect to login page after 3 seconds
            header("Refresh: 3; url=login.php");
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    }

    // Close statement
    mysqli_stmt_close($stmt);
}

// Call the registration function if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    registerUser();
}
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "test";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user inputs
    $username = sanitizeInput($_POST['username']);
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate input fields
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        echo "All fields are required!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
    } else if ($password != $confirm_password) {
        echo "Passwords do not match!";
    } else {

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username already exists
        $check_username_query = "SELECT username FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $check_username_query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) > 0) {
            echo "Username already exists!";
        } else {

            // Check if email already exists
            $check_email_query = "SELECT email FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $check_email_query);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            mysqli_stmt_store_result($stmt);

            if (mysqli_stmt_num_rows($stmt) > 0) {
                echo "Email already exists!";
            } else {

                // Insert new user into database
                $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = mysqli_prepare($conn, $insert_query);
                mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);

                if (mysqli_stmt_execute($stmt)) {
                    echo "Registration successful! You can now login.";
                } else {
                    echo "Error registering user: " . mysqli_error($conn);
                }
            }
        }

        // Close statements
        mysqli_stmt_close($stmt);
    }

    // Close database connection
    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create Account</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br>

        <input type="submit" value="Register">
    </form>

    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $fullname = $_POST['fullname'];
        $email = $_POST['email'];
        $pass = $_POST['password'];

        // Validate inputs
        $errors = array();
        
        if (!validateFullName($fullname)) {
            $errors[] = "Please enter a valid full name!";
        }
        
        if (!validateEmail($email)) {
            $errors[] = "Please enter a valid email address!";
        }
        
        if (!validatePassword($pass)) {
            $errors[] = "Please enter a valid password! (Minimum 8 characters, at least one letter and one number)";
        }

        // Check if any errors
        if (count($errors) == 0) {
            // Hash the password
            $hash_pass = password_hash($pass, PASSWORD_DEFAULT);
            
            // Check if email already exists
            $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
            $stmt->bindParam(':email', $email);
            $stmt->execute();
            
            if ($stmt->rowCount() > 0) {
                echo "Email already exists!";
            } else {
                // Insert new user
                $stmt = $conn->prepare("INSERT INTO users (fullname, email, password) VALUES (:fullname, :email, :password)");
                $stmt->bindParam(':fullname', $fullname);
                $stmt->bindParam(':email', $email);
                $stmt->bindParam(':password', $hash_pass);
                
                if ($stmt->execute()) {
                    echo "Registration successful!";
                } else {
                    echo "Error registering user!";
                }
            }
        } else {
            foreach ($errors as $error) {
                echo $error . "<br>";
            }
        }
    }
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Validation functions

function validateFullName($name) {
    // Name should be at least 2 characters and contain only letters and spaces
    if (strlen($name) < 2 || strlen($name) > 50) {
        return false;
    }
    
    if (!preg_match("/^[a-zA-Z ]+$/", $name)) {
        return false;
    }
    
    return true;
}

function validateEmail($email) {
    // Email validation using regex
    if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@((\.[a-zA-Z0-9_\-\.]+)+)$/", $email)) {
        return false;
    }
    
    return true;
}

function validatePassword($pass) {
    // Password validation: at least 8 characters, contains letters and numbers
    if (strlen($pass) < 8) {
        return false;
    }
    
    if (!preg_match("#^[a-zA-Z0-9]*$#", $pass)) {
        return false;
    }
    
    if (!preg_match('#[a-zA-Z]#', $pass) || !preg_match('#[0-9]#', $pass)) {
        return false;
    }
    
    return true;
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to register a new user
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = htmlspecialchars($_POST['username']);
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate inputs
        $errors = [];
        $success = false;

        if (empty($username) || !preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            $errors[] = "Username is invalid!";
        }

        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Email is invalid!";
        }

        if (empty($password)) {
            $errors[] = "Password cannot be empty!";
        } elseif (!preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            $errors[] = "Password is invalid!";
        }

        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match!";
        }

        // If there are no errors
        if (empty($errors)) {
            // Check if username or email already exists
            $check_username = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
            $result_username = mysqli_query($conn, $check_username);
            
            $check_email = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
            $result_email = mysqli_query($conn, $check_email);

            if (mysqli_num_rows($result_username) > 0 || mysqli_num_rows($result_email) > 0) {
                $errors[] = "Username or email already exists!";
            } else {
                // Hash the password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                
                // Insert into database
                $sql = "INSERT INTO users (username, email, password)
                        VALUES ('" . mysqli_real_escape_string($conn, $username) . "', '" . mysqli_real_escape_string($conn, $email) . "', '" . $hashed_password . "')";
                
                if (mysqli_query($conn, $sql)) {
                    $success = true;
                    // Redirect to login page or dashboard
                    header("Location: login.php?success=Registration successful");
                    exit();
                } else {
                    $errors[] = "Error registering user: " . mysqli_error($conn);
                }
            }
        }

        if (!empty($errors)) {
            // Display error messages
            foreach ($errors as $error) {
                echo "<div class='alert alert-danger'>$error</div>";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a connection to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($formData, $conn) {
    // Extract form data
    $data = [
        'username' => trim($formData['username']),
        'email' => trim($formData['email']),
        'password' => trim($formData['password']),
        'first_name' => trim($formData['first_name']),
        'last_name' => trim($formData['last_name']),
        'birthdate' => $formData['birthdate']
    ];

    // Validate input
    if (empty($data['username']) || empty($data['email']) || empty($data['password'])) {
        return ['status' => 400, 'message' => 'Please fill in all required fields'];
    }

    if (strlen($data['username']) < 3) {
        return ['status' => 400, 'message' => 'Username must be at least 3 characters long'];
    }

    if (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
        return ['status' => 400, 'message' => 'Please enter a valid email address'];
    }

    if (strlen($data['password']) < 6) {
        return ['status' => 400, 'message' => 'Password must be at least 6 characters long'];
    }

    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
    $stmt->bindParam(':username', $data['username']);
    $stmt->bindParam(':email', $data['email']);
    $stmt->execute();

    if ($stmt->rowCount() > 0) {
        return ['status' => 400, 'message' => 'Username or email already exists'];
    }

    // Prepare the data for insertion
    $hashedPassword = password_hash($data['password'], PASSWORD_DEFAULT);
    
    try {
        $stmt = $conn->prepare("
            INSERT INTO users (
                username,
                email,
                password,
                first_name,
                last_name,
                birthdate
            ) VALUES (
                :username,
                :email,
                :password,
                :first_name,
                :last_name,
                :birthdate
            )
        ");
        
        $stmt->bindParam(':username', $data['username']);
        $stmt->bindParam(':email', $data['email']);
        $stmt->bindParam(':password', $hashedPassword);
        $stmt->bindParam(':first_name', $data['first_name']);
        $stmt->bindParam(':last_name', $data['last_name']);
        $stmt->bindParam(':birthdate', $data['birthdate']);
        
        if ($stmt->execute()) {
            // Return success response
            return [
                'status' => 200,
                'message' => 'Registration successful!',
                'user_data' => [
                    'username' => $data['username'],
                    'email' => $data['email'],
                    'first_name' => $data['first_name'],
                    'last_name' => $data['last_name'],
                    'birthdate' => $data['birthdate']
                ]
            ];
        } else {
            return ['status' => 500, 'message' => 'Registration failed. Please try again.'];
        }
    } catch(PDOException $e) {
        return ['status' => 500, 'message' => 'An error occurred: ' . $e->getMessage()];
    }
}

// Example usage:
$formData = [
    'username' => 'example_user',
    'email' => 'user@example.com',
    'password' => 'secure_password123',
    'first_name' => 'John',
    'last_name' => 'Doe',
    'birthdate' => '1990-01-01'
];

$result = registerUser($formData, $conn);
echo json_encode($result);

// Don't forget to close the database connection
$conn = null;
?>


<?php
// Include database connection file
require_once("db_connection.php");

function registerUser() {
    // Check if form submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $errors = array();
        
        // Sanitize input data
        $firstname = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars($_POST[' firstname']));
        $lastname = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars($_POST[' lastname']));
        $email = mysqli_real_escape_string($GLOBALS['conn'], htmlspecialchars($_POST[' email']));
        $password = $_POST[' password'];
        $confirmpassword = $_POST[' confirm_password'];
        
        // Validate input data
        if (empty($firstname)) {
            $errors[] = "First name is required";
        }
        
        if (empty($lastname)) {
            $errors[] = "Last name is required";
        }
        
        if (empty($email)) {
            $errors[] = "Email is required";
        } else {
            // Check if email already exists
            $check_email_query = "SELECT id FROM users WHERE email = '$email'";
            $result = mysqli_query($GLOBALS['conn'], $check_email_query);
            if (mysqli_num_rows($result) > 0) {
                $errors[] = "Email already exists";
            }
        }
        
        if (empty($password)) {
            $errors[] = "Password is required";
        } else {
            // Validate password length
            if (strlen($password) < 6) {
                $errors[] = "Password must be at least 6 characters";
            }
            
            // Check if password matches confirm password
            if ($password != $confirmpassword) {
                $errors[] = "Passwords do not match";
            }
        }
        
        if (empty($errors)) {
            try {
                // Hash the password before storing in database
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                
                // Insert user into database
                $insert_query = "INSERT INTO users (first_name, last_name, email, password) 
                               VALUES ('$firstname', '$lastname', '$email', '$hashed_password')";
                               
                if (mysqli_query($GLOBALS['conn'], $insert_query)) {
                    echo "Registration successful! You can now login.";
                } else {
                    die("Error: " . mysqli_error($GLOBALS['conn']));
                }
            } catch (Exception $e) {
                die("Error: " . $e->getMessage());
            }
        } else {
            foreach ($errors as $error) {
                echo "<p class='error'>$error</p>";
            }
        }
    }
}

// Call the function
registerUser();

// Close database connection
mysqli_close($GLOBALS['conn']);
?>


<?php
session_start();
require_once 'db.php'; // Database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $full_name = trim($_POST['full_name']);
    $date_of_birth = $_POST['date_of_birth'];
    $phone_number = trim($_POST['phone_number']);

    // Input validation
    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
        die("All fields are required!");
    }

    if (strlen($password) < 6) {
        die("Password must be at least 6 characters long!");
    }

    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Email validation
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Phone number validation (simple check)
    if (!preg_match('/^\+?[0-9]{10,}$/', $phone_number)) {
        die("Invalid phone number format!");
    }

    // Check if username already exists
    try {
        $stmt = $pdo->prepare('SELECT id FROM users WHERE username = ?');
        $stmt->execute([$username]);
        if ($stmt->fetch()) {
            die("Username already exists!");
        }
    } catch (PDOException $e) {
        die("Error checking username: " . $e->getMessage());
    }

    // Check if email already exists
    try {
        $stmt = $pdo->prepare('SELECT id FROM users WHERE email = ?');
        $stmt->execute([$email]);
        if ($stmt->fetch()) {
            die("Email already registered!");
        }
    } catch (PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    try {
        $stmt = $pdo->prepare('INSERT INTO users SET 
            username = ?,
            email = ?,
            password = ?,
            full_name = ?,
            date_of_birth = ?,
            phone_number = ?');
        
        $result = $stmt->execute([
            $username,
            $email,
            $hashed_password,
            $full_name,
            $date_of_birth,
            $phone_number
        ]);

        if ($result) {
            header('Location: welcome.php');
            exit();
        }
    } catch (PDOException $e) {
        die("Registration error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required pattern="[a-zA-Z0-9_]{3,15}">
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,}">
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>

        <div class="form-group">
            <label for="full_name">Full Name:</label><br>
            <input type="text" id="full_name" name="full_name" required>
        </div>

        <div class="form-group">
            <label for="date_of_birth">Date of Birth:</label><br>
            <input type="date" id="date_of_birth" name="date_of_birth" required>
        </div>

        <div class="form-group">
            <label for="phone_number">Phone Number:</label><br>
            <input type="tel" id="phone_number" name="phone_number" pattern="[0-9]{10}" required>
        </div>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root'; // Change according to your database username
$password = '';      // Change according to your database password
$db_name = 'registration_db'; // Change according to your database name

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser() {
    global $conn;

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input fields
        if (empty($username) || empty($email) || empty($password)) {
            echo "All fields are required!";
            return;
        }

        // Sanitize input data
        $username = mysqli_real_escape_string($conn, htmlspecialchars($username));
        $email = mysqli_real_escape_string($conn, htmlspecialchars($email));

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if username or email already exists
        $checkQuery = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
        $result = mysqli_query($conn, $checkQuery);
        
        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists!";
            return;
        }

        // Insert user into database
        $insertQuery = "INSERT INTO users (username, email, password) 
                        VALUES ('$username', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $insertQuery)) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Create users table if it doesn't exist
createUsersTable();

function createUsersTable() {
    global $conn;
    
    $tableQuery = "CREATE TABLE IF NOT EXISTS users (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    username VARCHAR(50) NOT NULL UNIQUE,
                    email VARCHAR(100) NOT NULL UNIQUE,
                    password VARCHAR(255) NOT NULL
                  )";
    
    mysqli_query($conn, $tableQuery);
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        h1 {
            color: #333;
            text-align: center;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
        }
        
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .message {
            margin-top: 10px;
            padding: 8px;
            font-weight: bold;
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Form</h1>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username">
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email address">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password">
            </div>

            <button type="submit">Register</button>
        </form>
        
        <?php
        if (isset($_POST['username']) && isset($_POST['email']) && isset($_POST['password'])) {
            registerUser();
        }
        ?>
    </div>
</body>
</html>


<?php
// registration.php

// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'user_registration';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Registration function
function registerUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get input values
        $name = sanitizeInput($_POST['name']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate name
        if (empty($name)) {
            echo "Name is required";
            return;
        }
        if (!preg_match("/^[a-zA-Z ]*$/", $name)) {
            echo "Invalid name. Only letters and spaces allowed.";
            return;
        }

        // Validate email
        if (empty($email)) {
            echo "Email is required";
            return;
        }
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format";
            return;
        }

        // Check if email already exists
        $check_email = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($check_email);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "Email already exists";
            return;
        }

        // Validate password
        if (empty($password)) {
            echo "Password is required";
            return;
        }
        if ($password !== $confirm_password) {
            echo "Passwords do not match";
            return;
        }

        // Password requirements: at least 8 characters, containing letters, numbers, and special characters
        if (!preg_match("/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/", $password)) {
            echo "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.";
            return;
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $sql = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $name, $email, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful! You can now log in.";
            // Optionally, redirect to login page here
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . $conn->error;
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .error {
            color: red;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required><br>
            </div>

            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required><br>
            </div>

            <div class="form-group">
                <label for="password">Password:</label><br>
                <input type="password" id="password" name="password" required><br>
            </div>

            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label><br>
                <input type="password" id="confirm_password" name="confirm_password" required><br>
            </div>

            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Include necessary files
require_once 'config.php'; // Database configuration file

function registerUser() {
    $errors = array();
    
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $username = trim($_POST['username']);
        $password = $_POST['password'];
        $email = trim($_POST['email']);
        $first_name = trim($_POST['first_name']);
        $last_name = trim($_POST['last_name']);
        $dob = $_POST['dob'];
        
        // Validate form data
        if (empty($username) || empty($password) || empty($email) || empty($first_name) || empty($last_name) || empty($dob)) {
            $errors[] = "All fields are required!";
        }
        
        // Check username length
        if (strlen($username) < 3) {
            $errors[] = "Username must be at least 3 characters long!";
        }
        
        // Check password strength
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long!";
        }
        
        // Email validation
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Please enter a valid email address!";
        }
        
        // Check if username already exists
        $checkUsernameQuery = "SELECT id FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $checkUsernameQuery);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Username already exists!";
        }
        
        // Check if email already exists
        $checkEmailQuery = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $checkEmailQuery);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            $errors[] = "Email already exists!";
        }
        
        // If no errors
        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
            
            // Prepare the SQL statement
            $sql = "INSERT INTO users 
                    SET username = ?, 
                        password = ?, 
                        email = ?,
                        first_name = ?,
                        last_name = ?,
                        dob = ?";
                        
            $stmt = mysqli_prepare($conn, $sql);
            
            // Bind parameters
            $dobFormatted = date('Y-m-d', strtotime($dob)); // Format date for database
            
            mysqli_stmt_bind_param($stmt, "ssssss", 
                                  $username, 
                                  $hashedPassword,
                                  $email,
                                  $first_name,
                                  $last_name,
                                  $dobFormatted);
            
            // Execute the query
            if (mysqli_stmt_execute($stmt)) {
                // Registration successful
                header("Location: login.php");
                exit();
            } else {
                $errors[] = "Registration failed. Please try again!";
            }
        }
    }
    
    return $errors;
}

// Call the function
$errors = registerUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "registration";

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function for user registration
function registerUser() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate form data
    if (empty($username) || empty($email) || empty($password)) {
        echo "Please fill in all required fields";
        return false;
    }
    
    if ($password != $confirm_password) {
        echo "Passwords do not match";
        return false;
    }
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        return false;
    }
    
    // Check if username already exists
    $check_username = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($check_username);
    
    if ($result->num_rows > 0) {
        echo "Username already exists. Please choose a different one.";
        return false;
    }
    
    // Check if email already exists
    $check_email = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($check_email);
    
    if ($result->num_rows > 0) {
        echo "Email already registered. Please use a different email.";
        return false;
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));
    
    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt->execute()) {
        echo "Registration successful! You can now login.";
        header("Location: welcome.php");
        exit();
    } else {
        echo "Error registering user: " . $conn->error;
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        
        .registration-container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .hint {
            color: #666;
            font-size: 0.8em;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="registration-container">
        <h2>Register New User</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
                <div class="hint">Please enter a valid email address</div>
            </div>
            
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
                <div class="hint">Minimum 8 characters, include letters and numbers</div>
            </div>
            
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>

<?php
// Call the registration function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    registerUser();
}
?>


<?php
session_start();
include 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Error messages array
    $errors = array();
    
    // Validate username
    if (empty($username)) {
        $errors[] = 'Username is required';
    } elseif (!preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
        $errors[] = 'Username can only contain letters, numbers, and underscores';
    }
    
    // Validate email
    if (empty($email)) {
        $errors[] = 'Email is required';
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = 'Please enter a valid email address';
    }
    
    // Validate password
    if (empty($password)) {
        $errors[] = 'Password is required';
    } elseif (strlen($password) < 6) {
        $errors[] = 'Password must be at least 6 characters long';
    } elseif (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/', $password)) {
        $errors[] = 'Password must contain at least one uppercase letter, one lowercase letter, and one number';
    }
    
    // Validate confirm password
    if (empty($confirm_password) || $password != $confirm_password) {
        $errors[] = 'Passwords do not match';
    }
    
    // If there are no errors
    if (empty($errors)) {
        // Check if username or email already exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param('ss', $username, $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Username or email already exists
            $errors[] = 'Username or email is already taken';
        } else {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Insert user into database
            $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
            $stmt->bind_param('sss', $username, $email, $hashed_password);
            $result = $stmt->execute();
            
            if ($result) {
                // Registration successful
                $_SESSION['username'] = $username;
                header("Location: welcome.php");
                exit();
            } else {
                $errors[] = 'Registration failed. Please try again later.';
            }
        }
        
        $stmt->close();
    }
    
    $conn->close();
}
?>


<?php
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "database_name";

$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include configuration file
include('config.php');

function registerUser($username, $email, $password) {
    // Check if username is valid (only letters and numbers, 3-20 characters)
    if (!preg_match('/^[a-zA-Z0-9]{3,20}$/', $username)) {
        return "Username must be between 3 and 20 characters and contain only letters and numbers!";
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address!";
    }

    // Check if password is valid (at least 6 characters)
    if (strlen($password) < 6) {
        return "Password must be at least 6 characters long!";
    }

    // Check if username or email already exists
    $checkQuery = "SELECT id FROM users WHERE username = '$username' OR email = '$email'";
    
    if ($result = mysqli_query($GLOBALS['conn'], $checkQuery)) {
        if (mysqli_num_rows($result) > 0) {
            return "Username or email already exists!";
        }
    }

    // Sanitize input data
    $username = mysqli_real_escape_string($GLOBALS['conn'], $username);
    $email = mysqli_real_escape_string($GLOBALS['conn'], $email);
    $password = password_hash($password, PASSWORD_BCRYPT); // Hash the password

    // Insert user into database
    $query = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$password')";
    
    if (mysqli_query($GLOBALS['conn'], $query)) {
        return true; // Registration successful
    } else {
        return "Error registering user: " . mysqli_error($GLOBALS['conn']);
    }
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call registration function
    $result = registerUser($username, $email, $password);

    if ($result === true) {
        // Registration successful - start session and redirect
        session_start();
        $_SESSION['username'] = $username;
        header("Location: dashboard.php");
    } else {
        // Display error message
        echo $result;
    }
}
?>


<?php
// Connect to the database
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function registerUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form data
        $name = $_POST['name'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input
        if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {
            echo "All fields are required!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($password !== $confirm_password) {
            echo "Passwords do not match!";
            return;
        }

        // Sanitize inputs
        $name = htmlspecialchars(strip_tags($name));
        $email = htmlspecialchars(strip_tags($email));

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Check if email already exists in the database
        global $conn;
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            echo "Email already exists!";
            return;
        }

        // Insert user into the database
        $sql = "INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$hashed_password')";
        
        if (mysqli_query($conn, $sql)) {
            // Set session variables
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = mysqli_insert_id($conn);
            $_SESSION['email'] = $email;

            // Redirect to login page after successful registration
            header("Location: login.php?success=Your account has been successfully created!");
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form values
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Form validation
        $errors = array();

        if (empty($username)) {
            $errors[] = "Username is required";
        }

        if (empty($email)) {
            $errors[] = "Email is required";
        }

        if (empty($password)) {
            $errors[] = "Password is required";
        }

        if ($password != $confirm_password) {
            $errors[] = "Passwords do not match";
        }

        // Check username length
        if (strlen($username) < 4) {
            $errors[] = "Username must be at least 4 characters long";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format";
        }

        // Check password strength
        if (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long";
        }

        // If there are no errors
        if (empty($errors)) {
            // Check if username or email already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            $stmt->execute([$username, $email]);
            
            if ($stmt->rowCount() > 0) {
                die("Username or email already exists");
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Generate verification token
            $verification_token = bin2hex(random_bytes(16));

            // Insert user into database
            $stmt = $conn->prepare("
                INSERT INTO users (
                    username,
                    email,
                    password,
                    verification_token,
                    created_at
                ) VALUES (?, ?, ?, ?, NOW())
            ");
            $stmt->execute([$username, $email, $hashed_password, $verification_token]);

            // Get user ID
            $user_id = $conn->lastInsertId();

            // Send verification email
            $subject = "Confirm your registration";
            $body = "Please click the following link to verify your account: http://your-site.com/verify.php?token=$verification_token";

            $headers = "From: no-reply@your-site.com\r
";
            $headers .= "Content-Type: text/html; charset=UTF-8\r
";

            if (mail($email, $subject, $body, $headers)) {
                echo "Registration successful! Please check your email to verify your account.";
            } else {
                die("Error sending verification email");
            }

        } else {
            // Output errors
            foreach ($errors as $error) {
                echo $error . "<br>";
            }
        }

    }

} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'user_database';
$username = 'root';
$password = '';

try {
    // Create a database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to register a user
    function registerUser($conn) {
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Sanitize input data
            $full_name = htmlspecialchars(trim($_POST['full_name']));
            $email = htmlspecialchars(trim($_POST['email']));
            $username = htmlspecialchars(trim($_POST['username']));
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            // Validate input data
            $errors = array();

            if (empty($full_name)) {
                $errors[] = "Full name is required";
            }

            if (empty($email)) {
                $errors[] = "Email is required";
            } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = "Invalid email format";
            }

            if (empty($username)) {
                $errors[] = "Username is required";
            }

            if (empty($password)) {
                $errors[] = "Password is required";
            } elseif (!preg_match('/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,}$/', $password)) {
                $errors[] = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and a special character";
            }

            if ($password != $confirm_password) {
                $errors[] = "Passwords do not match";
            }

            // If there are errors
            if (!empty($errors)) {
                foreach ($errors as $error) {
                    echo "<div class='error'>$error</div>";
                }
                return;
            }

            // Check if user already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email OR username = :username");
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':username', $username);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                echo "<div class='error'>User with this email or username already exists</div>";
                return;
            }

            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Insert user into database
            $stmt = $conn->prepare("INSERT INTO users (full_name, email, username, password) VALUES (:full_name, :email, :username, :password)");
            $stmt->bindParam(':full_name', $full_name);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':password', $hashed_password);

            try {
                $stmt->execute();
                // Registration successful
                echo "<div class='success'>Registration successful! Please login.</div>";
                header("Location: login.php");
                exit();
            } catch (PDOException $e) {
                echo "<div class='error'>Error registering user: " . $e->getMessage() . "</div>";
            }
        }
    }

    // Call the registration function
    registerUser($conn);

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
        .success {
            color: green;
            margin-bottom: 10px;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Registration Form</h1>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <input type="text" placeholder="Full Name" name="full_name" required><br>
            <input type="email" placeholder="Email" name="email" required><br>
            <input type="text" placeholder="Username" name="username" required><br>
            <input type="password" placeholder="Password" name="password" required><br>
            <input type="password" placeholder="Confirm Password" name="confirm_password" required><br>
            <button type="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'user_registration';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to validate user registration
function registerUser($username, $email, $password, $conn) {
    // Check if username already exists
    $sql = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user!";
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get input values
    $username = sanitize($_POST['username']);
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate password confirmation
    if ($password !== $confirm_password) {
        echo "Passwords do not match!";
        exit();
    }

    // Call registration function
    $result = registerUser($username, $email, $password, $conn);
    echo $result;
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 300px;
            padding: 10px;
            border: 1px solid #ddd;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            cursor: pointer;
            width: 300px;
        }
        button:hover {
            opacity: 0.8;
        }
    </style>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required>
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection using PDO
try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function registerUser($username, $email, $password, $pdo) {
    // Check if username already exists
    $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    if ($stmt->rowCount() > 0) {
        return "Username already exists!";
    }

    // Check if email already exists
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);

    if ($stmt->rowCount() > 0) {
        return "Email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    try {
        $stmt = $pdo->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashedPassword]);

        return "Registration successful!";
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];

    // Validate username
    if (!ctype_alnum($username) || strlen($username) < 3 || strlen($username) > 20) {
        die("Username must be alphanumeric and between 3-20 characters!");
    }

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Validate password
    if (strlen($password) < 8 || !preg_match('/[a-zA-Z]/', $password) || !preg_match('/\d/', $password)) {
        die("Password must be at least 8 characters long and contain letters and numbers!");
    }

    // Register user
    $result = registerUser($username, $email, $password, $pdo);
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h2>Register Here</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password" required>
        </div>

        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Include database configuration
include("config.php");

function registerUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $error = "";

        // Validate input fields
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Check if all required fields are filled
        if (empty($username) || empty($email) || empty($password)) {
            $error = "All fields must be filled out!";
            echo "<script>alert('$error'); window.location.href='register.php';</script>";
            exit();
        }

        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

        // Check if connection was successful
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Check if username already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error = "Username already exists!";
            echo "<script>alert('$error'); window.location.href='register.php';</script>";
            exit();
        }

        // Check if email already exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $error = "Email already exists!";
            echo "<script>alert('$error'); window.location.href='register.php';</script>";
            exit();
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert user into database
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $username, $email, $hashed_password);

        if ($stmt->execute()) {
            // Registration successful
            $_SESSION['username'] = $username;
            header("Location: dashboard.php");
            exit();
        } else {
            // Error registering user
            $error = "Error registering user!";
            echo "<script>alert('$error'); window.location.href='register.php';</script>";
            exit();
        }

        // Close database connection
        $conn->close();
    }
}

// Call the function
if (isset($_POST['submit'])) {
    registerUser();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registration Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit" name="submit">Register</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'user_registration';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function registerUser() {
    global $conn;
    
    // Initialize variables
    $error = "";
    $username = "";
    $email = "";
    $password = "";

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        function sanitizeInput($data) {
            return htmlspecialchars(trim(mysqli_real_escape_string($conn, $data)));
        }

        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate required fields
        if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {
            $error = "All fields are required!";
        } else {
            // Check if email is valid
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $error = "Invalid email format!";
            }

            // Check password length
            if (strlen($password) < 8) {
                $error = "Password must be at least 8 characters!";
            }

            // Check if passwords match
            if ($password !== $confirm_password) {
                $error = "Passwords do not match!";
            }

            // Validate username and email are unique
            $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
            $stmt = $conn->prepare($check_query);
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                while ($row = $result->fetch_assoc()) {
                    if ($row['username'] == $username) {
                        $error .= "Username already exists! ";
                    }
                    if ($row['email'] == $email) {
                        $error .= "Email already registered!";
                    }
                }
            }

            // If no errors, proceed with registration
            if (empty($error)) {
                // Hash password
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);

                // Prepare the SQL statement
                $insert_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                $stmt = $conn->prepare($insert_query);
                $stmt->bind_param("sss", $username, $email, $hashed_password);

                if ($stmt->execute()) {
                    // Registration successful
                    echo "Registration successful! You can now login.";
                } else {
                    $error = "Error occurred while registering. Please try again later!";
                }
            }
        }
    }

    return $error;
}

// Call the registration function
$error_message = registerUser();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <!-- Add Content Security Policy header -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' https: 'unsafe-inline'; style-src 'self' https: 'unsafe-inline'; img-src 'self' https:;">
    <!-- Add X-Content-Type-Options header -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff">
</head>
<body>
    <?php if (!empty($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <!-- Add CAPTCHA for security -->
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label>Username:</label><br>
            <input type="text" name="username">
        </div>

        <div>
            <label>Email:</label><br>
            <input type="email" name="email">
        </div>

        <div>
            <label>Password:</label><br>
            <input type="password" name="password">
        </div>

        <div>
            <label>Confirm Password:</label><br>
            <input type="password" name="confirm_password">
        </div>

        <!-- Add CAPTCHA input -->
        <div>
            <img src="captcha.php" alt="CAPTCHA Image">
            <br>
            <label>Enter the code above:</label><br>
            <input type="text" name="captcha_code">
        </div>

        <button type="submit">Register</button>
    </form>

    <!-- Verify CAPTCHA -->
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $entered_captcha = sanitizeInput($_POST['captcha_code']);
        $stored_captcha = $_SESSION['captcha'];
        
        if ($entered_captcha !== $stored_captcha) {
            $error_message = "Invalid CAPTCHA code!";
            // Handle error
        }
    }
    ?>
</body>
</html>


<?php
// Include necessary files
include('db.php');

// Function for user registration
function registerUser() {
    // Check if form is submitted
    if (isset($_POST['register'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        // Validate input fields
        if ($username == "" || $email == "" || $password == "" || $confirm_password == "") {
            echo "Please fill in all required fields";
            return;
        }

        // Check username format (only letters and numbers)
        if (!preg_match("/^[a-zA-Z0-9_]*$/", $username)) {
            echo "Username can only contain letters, numbers, and underscores.";
            return;
        }

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address";
            return;
        }

        // Check password length and format (at least 8 characters, one uppercase letter, one number)
        $uppercase = preg_match('@[A-Z]@', $password);
        $number = preg_match('@[0-9]@', $password);

        if (!$uppercase || !$number || strlen($password) < 8) {
            echo "Password must be at least 8 characters long and contain at least one uppercase letter and one number.";
            return;
        }

        // Check password match
        if ($password != $confirm_password) {
            echo "Passwords do not match";
            return;
        }

        // Escape special characters
        $username = mysqli_real_escape_string($db, $username);
        $email = mysqli_real_escape_string($db, $email);
        $password = mysqli_real_escape_string($db, $password);

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT, array('cost' => 12));

        // Check if username or email already exists
        $check_query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
        $result = mysqli_query($db, $check_query);

        if (mysqli_num_rows($result) > 0) {
            echo "Username or email already exists";
            return;
        }

        // Insert new user into the database
        $insert_query = "INSERT INTO users (username, email, password)
                         VALUES ('$username', '$email', '$hashed_password')";

        if (mysqli_query($db, $insert_query)) {
            // Registration successful
            $_SESSION['success'] = "You have successfully registered!";
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user. Please try again.";
        }
    }
}

// Handle registration process based on request method
switch ($_SERVER['REQUEST_METHOD']) {
    case 'GET':
        // Show registration form
        include('registration_form.php');
        break;

    case 'POST':
        registerUser();
        break;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <div class="error"><?php echo $_SESSION['error']; ?></div>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        <label>Username:</label><br>
        <input type="text" name="username" required><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br>

        <label>Password:</label><br>
        <input type="password" name="password" required><br>

        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password" required><br>

        <input type="submit" name="register" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'user_registration';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Register function
function registerUser($username, $email, $password, $conn) {
    // Sanitize inputs
    $username = sanitizeInput($username);
    $email = sanitizeInput($email);
    
    // Check if username or email already exists
    $check_query = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($check_query);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Username or email already exists
        return ["status" => "error", "message" => "Username or email already exists."];
    }
    
    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert new user into database
    $register_query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($register_query);
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    
    if ($stmt->execute()) {
        return ["status" => "success", "message" => "Registration successful!"];
    } else {
        return ["status" => "error", "message" => "Error registering user."];
    }
}

// Handle registration form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];
        
        // Validate inputs
        if (empty($username) || empty($email) || empty($password)) {
            throw new Exception("All fields are required.");
        }
        
        if (!preg_match("/^[a-zA-Z0-9]*$/", $username)) {
            throw new Exception("Username must contain only letters and numbers.");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format.");
        }
        
        if (strlen($password) < 8 || !preg_match("/^[a-zA-Z0-9]*$/", $password)) {
            throw new Exception("Password must be at least 8 characters and contain only letters and numbers.");
        }
        
        // Register user
        $result = registerUser($username, $email, $password, $conn);
        
        if ($result["status"] == "success") {
            header("Location: login.php");
            exit();
        } else {
            throw new Exception($result["message"]);
        }
    } catch (Exception $e) {
        // Handle errors
        http_response_code(400);
        die(json_encode(["error" => $e->getMessage()]));
    }
}

// Close database connection
$conn->close();
?>

