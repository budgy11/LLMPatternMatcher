{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function using PHP. This function will handle the form submission, validate user input, and insert new users into a database.\n\n**Function Code:**\n```php\nfunction register_user($username, $email, $password) {\n  // Database connection settings\n  $db_host = 'localhost';\n  $db_username = 'your_db_username';\n  $db_password = 'your_db_password';\n  $db_name = 'your_db_name';\n\n  // Create a new database connection\n  try {\n    $conn = new PDO('mysql:host=' . $db_host . ';dbname=' . $db_name, $db_username, $db_password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare and execute the INSERT query\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    if ($stmt->execute()) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (PDOException $e) {\n    echo 'Error: ' . $e->getMessage();\n    return false;\n  }\n}\n```\n**Example Usage:**\n```php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get form data\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  // Validate user input\n  if (empty($username) || empty($email) || empty($password)) {\n    echo 'Error: All fields are required.';\n  } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo 'Error: Invalid email address.';\n  } else {\n    // Hash password for security\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Call the register_user function\n    if (register_user($username, $email, $hashed_password)) {\n      echo 'User registered successfully!';\n    } else {\n      echo 'Error: Unable to register user.';\n    }\n  }\n}\n```\n**HTML Form Example:**\n```html\n<form action=\"\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" value=\"Register\">\n</form>\n```\nNote: This is a basic example and you should consider implementing additional security measures, such as password hashing and salting, and email verification. Additionally, this code assumes that the `users` table exists in your database with the correct column names.", "code_blocks": ["```php\nfunction register_user($username, $email, $password) {\n  // Database connection settings\n  $db_host = 'localhost';\n  $db_username = 'your_db_username';\n  $db_password = 'your_db_password';\n  $db_name = 'your_db_name';\n\n  // Create a new database connection\n  try {\n    $conn = new PDO('mysql:host=' . $db_host . ';dbname=' . $db_name, $db_username, $db_password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare and execute the INSERT query\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    if ($stmt->execute()) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (PDOException $e) {\n    echo 'Error: ' . $e->getMessage();\n    return false;\n  }\n}\n```", "```php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get form data\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  // Validate user input\n  if (empty($username) || empty($email) || empty($password)) {\n    echo 'Error: All fields are required.';\n  } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo 'Error: Invalid email address.';\n  } else {\n    // Hash password for security\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Call the register_user function\n    if (register_user($username, $email, $hashed_password)) {\n      echo 'User registered successfully!';\n    } else {\n      echo 'Error: Unable to register user.';\n    }\n  }\n}\n```", null]}
