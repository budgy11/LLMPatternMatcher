{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a user registration function written in PHP. This function includes input validation, password hashing, and database interaction.\n\n### Database Schema\n\nAssuming you have a MySQL database with the following schema:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password VARCHAR(255) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### PHP Function\n\n```php\n<?php\n\n// Define database connection settings\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database_name\";\n\n// Create a PDO object for database interaction\nfunction db_connect() {\n  try {\n    $conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);\n    // Set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n    return $conn;\n  } catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n    die();\n  }\n}\n\n// User registration function\nfunction register_user($username, $email, $password) {\n  try {\n    // Connect to the database\n    $conn = db_connect();\n\n    // Hash the password using bcrypt\n    $hashed_password = password_hash($password, PASSWORD_BCRYPT);\n\n    // Prepare and execute the SQL query\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(\":username\", $username);\n    $stmt->bindParam(\":email\", $email);\n    $stmt->bindParam(\":password\", $hashed_password);\n\n    // Execute the query and get the result\n    $result = $stmt->execute();\n\n    if ($result) {\n      return true;\n    } else {\n      throw new Exception(\"Registration failed\");\n    }\n\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\nif (!empty($username) && !empty($email) && !empty($password)) {\n  if (register_user($username, $email, $password)) {\n    echo \"User registered successfully!\";\n  } else {\n    echo \"Registration failed. Please try again.\";\n  }\n} else {\n  echo \"Please fill in all fields.\";\n}\n\n?>\n```\n\n### Notes\n\n* This example uses a simple PDO connection and prepared statements for database interaction.\n* The password is hashed using bcrypt, which is a secure way to store passwords.\n* Input validation is minimal; you should add additional checks (e.g., email format) depending on your requirements.\n* Make sure to replace the placeholder database connection settings with your actual credentials.", "code_blocks": [null, "```php\n<?php\n\n// Define database connection settings\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database_name\";\n\n// Create a PDO object for database interaction\nfunction db_connect() {\n  try {\n    $conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);\n    // Set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n    return $conn;\n  } catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n    die();\n  }\n}\n\n// User registration function\nfunction register_user($username, $email, $password) {\n  try {\n    // Connect to the database\n    $conn = db_connect();\n\n    // Hash the password using bcrypt\n    $hashed_password = password_hash($password, PASSWORD_BCRYPT);\n\n    // Prepare and execute the SQL query\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(\":username\", $username);\n    $stmt->bindParam(\":email\", $email);\n    $stmt->bindParam(\":password\", $hashed_password);\n\n    // Execute the query and get the result\n    $result = $stmt->execute();\n\n    if ($result) {\n      return true;\n    } else {\n      throw new Exception(\"Registration failed\");\n    }\n\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\nif (!empty($username) && !empty($email) && !empty($password)) {\n  if (register_user($username, $email, $password)) {\n    echo \"User registered successfully!\";\n  } else {\n    echo \"Registration failed. Please try again.\";\n  }\n} else {\n  echo \"Please fill in all fields.\";\n}\n\n?>\n```"]}
