{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of how you can create a simple user registration system in PHP. This system will handle the following:\n\n- User registration\n- Email verification (sent when user registers)\n- Password hashing for secure storage\n- Error handling and feedback on registration form\n\n**Note:** For security reasons, this code uses prepared statements to prevent SQL injection attacks.\n\n### **Database Setup**\n\nCreate a database table named `users` with the following schema:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    verified TINYINT(1) DEFAULT 0,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### **Registration Form**\n\nCreate an HTML form to handle user registration:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Register</title>\n</head>\n<body>\n    <form action=\"register.php\" method=\"POST\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required>\n\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" required>\n\n        <button type=\"submit\">Register</button>\n    </form>\n\n    <?php if (isset($_GET['error'])) : ?>\n        <p style=\"color: red;\"><?php echo $_GET['error']; ?></p>\n    <?php endif; ?>\n\n    <?php if (isset($_GET['success'])) : ?>\n        <p style=\"color: green;\"><?php echo $_GET['success']; ?></p>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### **Registration Script**\n\nCreate a PHP file named `register.php` to handle user registration:\n\n```php\n<?php\n\n// Configuration for database connection\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Create a connection to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get POST data from registration form\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n// Hash password for secure storage\n$password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n// Prepare SQL statement to insert user into database\n$stmt = $conn->prepare(\"INSERT INTO users (email, password_hash) VALUES (?, ?)\");\n\n// Bind parameters to prevent SQL injection attacks\n$stmt->bind_param('ss', $email, $password_hash);\n\n// Execute the prepared statement\n$stmt->execute();\n\n// Get the last inserted ID\n$user_id = $conn->insert_id;\n\n// Generate a verification token and store it in the database\n$token = bin2hex(random_bytes(16));\n$conn->query(\"UPDATE users SET verification_token = '$token' WHERE id = '$user_id'\");\n\n// Send email to user with verification link\n$subject = \"Verify Your Email\";\n$message = \"\n    <p>Hello $email,</p>\n    <p>Click the following link to verify your email address:</p>\n    <a href='verify.php?token=$token'>Verify</a>\n\n\";\n$headers[] = 'From: admin@example.com';\n$headers[] = 'Content-Type: text/html; charset=UTF-8';\n\nmail($email, $subject, $message, implode(\"\\r\\n\", $headers));\n\n// Redirect user to a success page\nheader(\"Location: register_success.php\");\nexit;\n\n// Close the database connection\n$conn->close();\n\n?>\n```\n\n### **Verification Script**\n\nCreate a PHP file named `verify.php` to handle email verification:\n\n```php\n<?php\n\n// Configuration for database connection\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Create a connection to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get GET data from verification link\n$token = $_GET['token'];\n\n// Prepare SQL statement to update user's verified status in database\n$stmt = $conn->prepare(\"UPDATE users SET verified = 1 WHERE verification_token = '$token'\");\n\n// Execute the prepared statement\n$stmt->execute();\n\n// Close the database connection\n$conn->close();\n\n?>\n```\n\nThis is a basic example of how you can create a user registration system using PHP. Make sure to replace `your_host`, `your_username`, `your_password`, and `your_database` with your actual database credentials.\n\n**Security Note:** Always use prepared statements and parameterized queries to prevent SQL injection attacks. Additionally, never store plaintext passwords in your database. Use password hashing functions like `password_hash()` to securely store passwords.", "code_blocks": [null, null, "```php\n<?php\n\n// Configuration for database connection\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Create a connection to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get POST data from registration form\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n// Hash password for secure storage\n$password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n// Prepare SQL statement to insert user into database\n$stmt = $conn->prepare(\"INSERT INTO users (email, password_hash) VALUES (?, ?)\");\n\n// Bind parameters to prevent SQL injection attacks\n$stmt->bind_param('ss', $email, $password_hash);\n\n// Execute the prepared statement\n$stmt->execute();\n\n// Get the last inserted ID\n$user_id = $conn->insert_id;\n\n// Generate a verification token and store it in the database\n$token = bin2hex(random_bytes(16));\n$conn->query(\"UPDATE users SET verification_token = '$token' WHERE id = '$user_id'\");\n\n// Send email to user with verification link\n$subject = \"Verify Your Email\";\n$message = \"\n    <p>Hello $email,</p>\n    <p>Click the following link to verify your email address:</p>\n    <a href='verify.php?token=$token'>Verify</a>\n\n\";\n$headers[] = 'From: admin@example.com';\n$headers[] = 'Content-Type: text/html; charset=UTF-8';\n\nmail($email, $subject, $message, implode(\"\\r\\n\", $headers));\n\n// Redirect user to a success page\nheader(\"Location: register_success.php\");\nexit;\n\n// Close the database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n// Configuration for database connection\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Create a connection to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get GET data from verification link\n$token = $_GET['token'];\n\n// Prepare SQL statement to update user's verified status in database\n$stmt = $conn->prepare(\"UPDATE users SET verified = 1 WHERE verification_token = '$token'\");\n\n// Execute the prepared statement\n$stmt->execute();\n\n// Close the database connection\n$conn->close();\n\n?>\n```"]}
