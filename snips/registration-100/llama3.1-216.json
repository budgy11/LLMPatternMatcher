{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP that includes input validation, password hashing, and email verification.\n\n### Code\n```php\nfunction register_user($name, $email, $password) {\n  // Validate input\n  if (empty($name) || empty($email) || empty($password)) {\n    return array('error' => 'Please fill in all fields');\n  }\n\n  // Check for valid email format\n  if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/', $email)) {\n    return array('error' => 'Invalid email address');\n  }\n\n  // Hash password\n  $hashed_password = hash('sha256', $password);\n\n  // Check if user already exists\n  try {\n    $db->query(\"SELECT * FROM users WHERE email = :email\", array(':email' => $email));\n    if ($db->fetch()) {\n      return array('error' => 'User already exists');\n    }\n  } catch (PDOException $e) {\n    // Handle database connection error\n    echo \"Error: \" . $e->getMessage();\n    exit;\n  }\n\n  // Insert new user into database\n  try {\n    $db->query(\"INSERT INTO users SET name = :name, email = :email, password = :password\", array(':name' => $name, ':email' => $email, ':password' => $hashed_password));\n  } catch (PDOException $e) {\n    // Handle database connection error\n    echo \"Error: \" . $e->getMessage();\n    exit;\n  }\n\n  // Send email verification link to user\n  try {\n    $verification_link = 'http://example.com/verify.php?email=' . urlencode($email);\n    mail($email, 'Email Verification', 'Please click on this link to verify your email: ' . $verification_link, 'From: example@example.com');\n  } catch (Exception $e) {\n    // Handle email sending error\n    echo \"Error: \" . $e->getMessage();\n    exit;\n  }\n\n  return array('success' => true);\n}\n```\n### Explanation\n\nThis function takes in three parameters: `$name`, `$email`, and `$password`. It checks for empty input fields, validates the email format, hashes the password using SHA-256, and checks if a user with the same email address already exists. If all checks pass, it inserts the new user into the database and sends an email verification link to the user.\n\n### Example Usage\n```php\n$user_data = register_user('John Doe', 'john.doe@example.com', 'mysecretpassword');\nif ($user_data['success']) {\n  echo \"User registered successfully!\";\n} else {\n  echo \"Error: \" . $user_data['error'];\n}\n```\nRemember to adjust the database query and email verification link according to your specific application requirements.", "code_blocks": ["```php\nfunction register_user($name, $email, $password) {\n  // Validate input\n  if (empty($name) || empty($email) || empty($password)) {\n    return array('error' => 'Please fill in all fields');\n  }\n\n  // Check for valid email format\n  if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/', $email)) {\n    return array('error' => 'Invalid email address');\n  }\n\n  // Hash password\n  $hashed_password = hash('sha256', $password);\n\n  // Check if user already exists\n  try {\n    $db->query(\"SELECT * FROM users WHERE email = :email\", array(':email' => $email));\n    if ($db->fetch()) {\n      return array('error' => 'User already exists');\n    }\n  } catch (PDOException $e) {\n    // Handle database connection error\n    echo \"Error: \" . $e->getMessage();\n    exit;\n  }\n\n  // Insert new user into database\n  try {\n    $db->query(\"INSERT INTO users SET name = :name, email = :email, password = :password\", array(':name' => $name, ':email' => $email, ':password' => $hashed_password));\n  } catch (PDOException $e) {\n    // Handle database connection error\n    echo \"Error: \" . $e->getMessage();\n    exit;\n  }\n\n  // Send email verification link to user\n  try {\n    $verification_link = 'http://example.com/verify.php?email=' . urlencode($email);\n    mail($email, 'Email Verification', 'Please click on this link to verify your email: ' . $verification_link, 'From: example@example.com');\n  } catch (Exception $e) {\n    // Handle email sending error\n    echo \"Error: \" . $e->getMessage();\n    exit;\n  }\n\n  return array('success' => true);\n}\n```", "```php\n$user_data = register_user('John Doe', 'john.doe@example.com', 'mysecretpassword');\nif ($user_data['success']) {\n  echo \"User registered successfully!\";\n} else {\n  echo \"Error: \" . $user_data['error'];\n}\n```"]}
