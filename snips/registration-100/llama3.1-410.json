{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a simple user registration function in PHP:\n\n**Note:** This code assumes that you are using a MySQL database to store the user data. You will need to modify it to fit your specific needs.\n\n```php\n<?php\n\n// Define the database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a function to register a new user\nfunction register_user($username, $email, $password) {\n  // Connect to the database\n  try {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Check if the user already exists\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username OR email = :email');\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    $user_count = $stmt->rowCount();\n\n    if ($user_count > 0) {\n      return array('error' => 'User already exists.');\n    }\n\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert the new user into the database\n    $insert_stmt = $conn->prepare('INSERT INTO users (username, email, password) VALUES (:username, :email, :password)');\n    $insert_stmt->bindParam(':username', $username);\n    $insert_stmt->bindParam(':email', $email);\n    $insert_stmt->bindParam(':password', $hashed_password);\n    $insert_stmt->execute();\n\n    // Return a success message\n    return array('success' => 'User registered successfully.');\n\n  } catch (PDOException $e) {\n    echo 'Error: ' . $e->getMessage();\n  }\n}\n\n// Example usage:\n$username = 'john_doe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\n$result = register_user($username, $email, $password);\n\nif ($result['error']) {\n  echo '<p>' . $result['error'] . '</p>';\n} elseif ($result['success']) {\n  echo '<p>' . $result['success'] . '</p>';\n}\n\n?>\n```\n\nThis code defines a `register_user` function that takes three arguments: `$username`, `$email`, and `$password`. It uses PDO to connect to the database, check if the user already exists, hash the password using `password_hash()`, and insert the new user into the database. If an error occurs during the process, it is caught and displayed on the screen.\n\n**Note:** This code assumes that you have a `users` table in your database with columns for `username`, `email`, and `password`. You will need to modify the SQL queries to fit your specific needs.\n\nAlso, remember to replace the placeholders (`$host`, `$dbname`, `$username`, `$password`) with your actual database connection settings.", "code_blocks": ["```php\n<?php\n\n// Define the database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a function to register a new user\nfunction register_user($username, $email, $password) {\n  // Connect to the database\n  try {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Check if the user already exists\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username OR email = :email');\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    $user_count = $stmt->rowCount();\n\n    if ($user_count > 0) {\n      return array('error' => 'User already exists.');\n    }\n\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert the new user into the database\n    $insert_stmt = $conn->prepare('INSERT INTO users (username, email, password) VALUES (:username, :email, :password)');\n    $insert_stmt->bindParam(':username', $username);\n    $insert_stmt->bindParam(':email', $email);\n    $insert_stmt->bindParam(':password', $hashed_password);\n    $insert_stmt->execute();\n\n    // Return a success message\n    return array('success' => 'User registered successfully.');\n\n  } catch (PDOException $e) {\n    echo 'Error: ' . $e->getMessage();\n  }\n}\n\n// Example usage:\n$username = 'john_doe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\n$result = register_user($username, $email, $password);\n\nif ($result['error']) {\n  echo '<p>' . $result['error'] . '</p>';\n} elseif ($result['success']) {\n  echo '<p>' . $result['success'] . '</p>';\n}\n\n?>\n```"]}
