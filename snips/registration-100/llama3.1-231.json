{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a simple user registration function in PHP:\n\n```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'users';\n\nfunction registerUser($firstName, $lastName, $email, $password) {\n  // Create connection to database\n  $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n  \n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  \n  // Check for existing user with the same email\n  $sql = \"SELECT * FROM users WHERE email='$email'\";\n  $result = $conn->query($sql);\n  \n  if ($result->num_rows > 0) {\n    return array('status' => 'error', 'message' => 'User already exists');\n  }\n  \n  // Hash the password\n  $hashedPassword = hash('sha256', $password);\n  \n  // Insert new user into database\n  $sql = \"INSERT INTO users (firstName, lastName, email, password)\n          VALUES ('$firstName', '$lastName', '$email', '$hashedPassword')\";\n  if ($conn->query($sql) === TRUE) {\n    return array('status' => 'success', 'message' => 'User created successfully');\n  } else {\n    return array('status' => 'error', 'message' => 'Error creating user: ' . $conn->error);\n  }\n  \n  // Close database connection\n  $conn->close();\n}\n\n// Example usage:\n$registrationData = array(\n  'firstName' => 'John',\n  'lastName' => 'Doe',\n  'email' => 'john@example.com',\n  'password' => 'password123'\n);\n\n$result = registerUser($registrationData['firstName'], $registrationData['lastName'], $registrationData['email'], $registrationData['password']);\n\nif ($result['status'] == 'success') {\n  echo \"Registration successful: \" . $result['message'];\n} elseif ($result['status'] == 'error') {\n  echo \"Error registering user: \" . $result['message'];\n}\n\n?>\n```\n\n**Note:** This example uses a simple SHA256 hashing algorithm to store the password in the database. However, for security reasons, it's recommended to use a more secure method like bcrypt or Argon2.\n\nAlso note that this is just a basic example and you should consider implementing additional features such as:\n\n*   Password strength validation\n*   Email verification (send a confirmation email after registration)\n*   User data validation (e.g., checking for empty fields, etc.)\n*   Error handling and logging\n\n**Additional steps:**\n\n1.  Create the `users` table in your database with columns for `id`, `firstName`, `lastName`, `email`, `password`.\n2.  Make sure to replace the placeholders (`$dbHost`, `$dbUsername`, `$dbPassword`, `$dbName`) with your actual database connection settings.\n3.  This example does not handle exceptions, so consider adding try-catch blocks to improve error handling.\n4.  If you're using a framework or library like Laravel or CodeIgniter, you might need to adjust this code accordingly.\n\nAlways keep security best practices in mind when implementing user registration and login functionality!", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'users';\n\nfunction registerUser($firstName, $lastName, $email, $password) {\n  // Create connection to database\n  $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n  \n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  \n  // Check for existing user with the same email\n  $sql = \"SELECT * FROM users WHERE email='$email'\";\n  $result = $conn->query($sql);\n  \n  if ($result->num_rows > 0) {\n    return array('status' => 'error', 'message' => 'User already exists');\n  }\n  \n  // Hash the password\n  $hashedPassword = hash('sha256', $password);\n  \n  // Insert new user into database\n  $sql = \"INSERT INTO users (firstName, lastName, email, password)\n          VALUES ('$firstName', '$lastName', '$email', '$hashedPassword')\";\n  if ($conn->query($sql) === TRUE) {\n    return array('status' => 'success', 'message' => 'User created successfully');\n  } else {\n    return array('status' => 'error', 'message' => 'Error creating user: ' . $conn->error);\n  }\n  \n  // Close database connection\n  $conn->close();\n}\n\n// Example usage:\n$registrationData = array(\n  'firstName' => 'John',\n  'lastName' => 'Doe',\n  'email' => 'john@example.com',\n  'password' => 'password123'\n);\n\n$result = registerUser($registrationData['firstName'], $registrationData['lastName'], $registrationData['email'], $registrationData['password']);\n\nif ($result['status'] == 'success') {\n  echo \"Registration successful: \" . $result['message'];\n} elseif ($result['status'] == 'error') {\n  echo \"Error registering user: \" . $result['message'];\n}\n\n?>\n```"]}
