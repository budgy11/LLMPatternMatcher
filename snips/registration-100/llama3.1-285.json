{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP, including input validation and error handling.\n\n### Code\n```php\nfunction registerUser($username, $email, $password) {\n    // Input Validation\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    if (!preg_match(\"/^[a-zA-Z0-9_]+$/\", $username)) {\n        throw new Exception(\"Username can only contain alphanumeric characters and underscores.\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Password Validation\n    if (strlen($password) < 8 || !preg_match(\"/[a-zA-Z]/\", $password) || !preg_match(\"/\\d/\", $password)) {\n        throw new Exception(\"Password must be at least 8 characters, contain at least one letter and one number.\");\n    }\n\n    // Database Connection (Replace with your own database connection)\n    $db = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\n    if (!$db) {\n        throw new Exception(\"Failed to connect to database: \" . mysqli_error($db));\n    }\n\n    try {\n        // Insert user into database\n        $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n        $stmt = mysqli_prepare($db, $query);\n        mysqli_stmt_bind_param($stmt, \"sss\", $username, $email, password_hash($password, PASSWORD_DEFAULT));\n        mysqli_stmt_execute($stmt);\n\n        if (!mysqli_stmt_affected_rows($stmt)) {\n            throw new Exception(\"Failed to insert user into database.\");\n        }\n\n        // Return true on successful registration\n        return true;\n    } catch (Exception $e) {\n        // Rollback changes if an error occurs\n        mysqli_rollback($db);\n        throw $e;\n    }\n}\n\n// Example usage:\ntry {\n    registerUser(\"johnDoe\", \"johndoe@example.com\", \"password123\");\n    echo \"User registered successfully!\";\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n```\n### Explanation\n\n1. **Input Validation**: The function checks if the input fields are not empty and contains only valid characters for the username.\n2. **Password Validation**: The function checks if the password is at least 8 characters long, contains at least one letter and one number.\n3. **Database Connection**: The function connects to a database (Replace with your own database connection).\n4. **User Registration**: The function inserts the new user into the database using prepared statements.\n\nNote that this example uses `mysqli` for database connections. You may want to use PDO or another library depending on your project requirements.\n\n### Advice\n\n* Always validate input data and check for errors when interacting with databases.\n* Use prepared statements to prevent SQL injection attacks.\n* Store passwords securely using password hashing functions (e.g., `password_hash`).\n* Consider implementing additional security measures, such as email verification and password reset mechanisms.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Input Validation\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    if (!preg_match(\"/^[a-zA-Z0-9_]+$/\", $username)) {\n        throw new Exception(\"Username can only contain alphanumeric characters and underscores.\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Password Validation\n    if (strlen($password) < 8 || !preg_match(\"/[a-zA-Z]/\", $password) || !preg_match(\"/\\d/\", $password)) {\n        throw new Exception(\"Password must be at least 8 characters, contain at least one letter and one number.\");\n    }\n\n    // Database Connection (Replace with your own database connection)\n    $db = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\n    if (!$db) {\n        throw new Exception(\"Failed to connect to database: \" . mysqli_error($db));\n    }\n\n    try {\n        // Insert user into database\n        $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n        $stmt = mysqli_prepare($db, $query);\n        mysqli_stmt_bind_param($stmt, \"sss\", $username, $email, password_hash($password, PASSWORD_DEFAULT));\n        mysqli_stmt_execute($stmt);\n\n        if (!mysqli_stmt_affected_rows($stmt)) {\n            throw new Exception(\"Failed to insert user into database.\");\n        }\n\n        // Return true on successful registration\n        return true;\n    } catch (Exception $e) {\n        // Rollback changes if an error occurs\n        mysqli_rollback($db);\n        throw $e;\n    }\n}\n\n// Example usage:\ntry {\n    registerUser(\"johnDoe\", \"johndoe@example.com\", \"password123\");\n    echo \"User registered successfully!\";\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n```"]}
