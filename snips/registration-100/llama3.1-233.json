{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a user registration function in PHP that includes validation and password hashing:\n```php\n// config.php (database connection settings)\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'users';\n\n// Register User Function\nfunction register_user($data) {\n    // Extract data from the request\n    $username = $data['username'];\n    $email = $data['email'];\n    $password = $data['password'];\n    $confirm_password = $data['confirm_password'];\n\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'Please fill out all fields');\n    }\n\n    if ($password !== $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Check for existing user\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = mysqli_query($GLOBALS['db'], $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Username already taken');\n    }\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users SET username = '$username', email = '$email', password = '$hashed_password'\";\n    if (mysqli_query($GLOBALS['db'], $query)) {\n        return array('success' => 'User created successfully');\n    } else {\n        return array('error' => 'Error creating user');\n    }\n}\n\n// Example usage\n$data = array(\n    'username' => 'john_doe',\n    'email' => 'johndoe@example.com',\n    'password' => 'password123',\n    'confirm_password' => 'password123'\n);\n$result = register_user($data);\n\nif ($result['success']) {\n    echo \"User created successfully!\";\n} elseif ($result['error']) {\n    echo $result['error'];\n}\n```\n**Note:**\n\n* This example uses the `mysqli` extension for database interactions. Make sure to replace the placeholder values in `config.php` with your actual database connection settings.\n* Passwords are hashed using the `password_hash()` function, which is a recommended practice for password storage.\n* The registration process includes basic validation checks (e.g., empty fields, matching passwords). You may want to add additional checks or error handling depending on your specific requirements.\n\nThis code should be placed in a PHP file that connects to the database and defines the `register_user()` function. Call this function with an array containing the user's data as shown in the example usage section.", "code_blocks": ["```php\n// config.php (database connection settings)\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'users';\n\n// Register User Function\nfunction register_user($data) {\n    // Extract data from the request\n    $username = $data['username'];\n    $email = $data['email'];\n    $password = $data['password'];\n    $confirm_password = $data['confirm_password'];\n\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'Please fill out all fields');\n    }\n\n    if ($password !== $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Check for existing user\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = mysqli_query($GLOBALS['db'], $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Username already taken');\n    }\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users SET username = '$username', email = '$email', password = '$hashed_password'\";\n    if (mysqli_query($GLOBALS['db'], $query)) {\n        return array('success' => 'User created successfully');\n    } else {\n        return array('error' => 'Error creating user');\n    }\n}\n\n// Example usage\n$data = array(\n    'username' => 'john_doe',\n    'email' => 'johndoe@example.com',\n    'password' => 'password123',\n    'confirm_password' => 'password123'\n);\n$result = register_user($data);\n\nif ($result['success']) {\n    echo \"User created successfully!\";\n} elseif ($result['error']) {\n    echo $result['error'];\n}\n```"]}
