{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function that includes input validation and password hashing using the `password_hash` function.\n\n```php\nfunction registerUser($name, $email, $password) {\n    // Input Validation\n    if (empty($name)) {\n        throw new Exception(\"Name cannot be empty.\");\n    }\n    \n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n    \n    if (strlen($password) < 8) {\n        throw new Exception(\"Password must be at least 8 characters long.\");\n    }\n\n    // Connect to database\n    $mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n    // Check connection\n    if ($mysqli->connect_errno) {\n        throw new Exception(\"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error);\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Create SQL query\n    $query = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n\n    // Prepare and execute query\n    $stmt = $mysqli->prepare($query);\n    if (!$stmt) {\n        throw new Exception(\"Failed to prepare statement: (\" . $mysqli->errno . \") \" . $mysqli->error);\n    }\n\n    $stmt->bind_param(\"sss\", $name, $email, $hashedPassword);\n\n    if (!$stmt->execute()) {\n        throw new Exception(\"Failed to execute query: (\" . $mysqli->errno . \") \" . $mysqli->error);\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $mysqli->close();\n\n    return true;\n}\n```\n\n**Usage Example**\n-----------------\n\n```php\ntry {\n    registerUser('John Doe', 'john@example.com', 'password123');\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage() . \"\\n\";\n}\n```\n\nNote that this example assumes you have the following:\n\n* A MySQL database with a `users` table containing columns for `name`, `email`, and `password`.\n* The necessary PHP extensions (`mysqli`) installed.\n* The password hashing library (`password_hash`) available.\n\n**Best Practices**\n\n* This function performs input validation to ensure the data is correct before attempting to insert it into the database.\n* Passwords are hashed using a secure algorithm (in this case, `password_hash`) and stored securely in the database.\n* Error handling is implemented using exceptions, making it easy to catch and display errors to the user.", "code_blocks": ["```php\nfunction registerUser($name, $email, $password) {\n    // Input Validation\n    if (empty($name)) {\n        throw new Exception(\"Name cannot be empty.\");\n    }\n    \n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n    \n    if (strlen($password) < 8) {\n        throw new Exception(\"Password must be at least 8 characters long.\");\n    }\n\n    // Connect to database\n    $mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n    // Check connection\n    if ($mysqli->connect_errno) {\n        throw new Exception(\"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error);\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Create SQL query\n    $query = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n\n    // Prepare and execute query\n    $stmt = $mysqli->prepare($query);\n    if (!$stmt) {\n        throw new Exception(\"Failed to prepare statement: (\" . $mysqli->errno . \") \" . $mysqli->error);\n    }\n\n    $stmt->bind_param(\"sss\", $name, $email, $hashedPassword);\n\n    if (!$stmt->execute()) {\n        throw new Exception(\"Failed to execute query: (\" . $mysqli->errno . \") \" . $mysqli->error);\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $mysqli->close();\n\n    return true;\n}\n```", "```php\ntry {\n    registerUser('John Doe', 'john@example.com', 'password123');\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage() . \"\\n\";\n}\n```"]}
