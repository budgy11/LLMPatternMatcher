{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a simple user registration function in PHP:\n\n```php\n<?php\n\n// Function to register new user\nfunction register_user($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array(\"error\" => \"Please fill out all fields\");\n    }\n\n    try {\n        // Hash password for security\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n        // Connect to database\n        $db = new PDO('mysql:host=localhost;dbname=database_name', 'username', 'password');\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Prepare SQL statement\n        $stmt = $db->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(\":username\", $username);\n        $stmt->bindParam(\":email\", $email);\n        $stmt->bindParam(\":password\", $hashed_password);\n\n        // Execute SQL statement\n        if ($stmt->execute()) {\n            return array(\"success\" => \"User registered successfully\");\n        } else {\n            throw new Exception(\"Failed to register user\");\n        }\n\n    } catch (PDOException $e) {\n        return array(\"error\" => \"Database error: \" . $e->getMessage());\n    }\n}\n\n// Example usage\n$username = \"exampleuser\";\n$email = \"example@example.com\";\n$password = \"password123\";\n\n$result = register_user($username, $email, $password);\n\nif ($result[\"success\"]) {\n    echo \"User registered successfully!\";\n} elseif ($result[\"error\"]) {\n    echo \"Error: \" . $result[\"error\"];\n}\n```\n\nThis function takes three parameters:\n\n* `$username`: The username chosen by the user\n* `$email`: The email address of the user\n* `$password`: The password chosen by the user\n\nThe function first validates that all fields are filled out. If any field is empty, it returns an error message.\n\nNext, it hashes the password using `password_hash` to secure it against password cracking attacks.\n\nThen, it connects to a MySQL database and prepares a SQL statement to insert the new user into the `users` table. The password is bound as a parameter to prevent SQL injection.\n\nIf the insertion is successful, it returns a success message; otherwise, it catches any exceptions that occur during database operations and returns an error message.\n\nNote: You should replace `'database_name'`, `'username'`, and `'password'` with your actual database credentials. Also, make sure you have the `PDO` extension installed in PHP.", "code_blocks": ["```php\n<?php\n\n// Function to register new user\nfunction register_user($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array(\"error\" => \"Please fill out all fields\");\n    }\n\n    try {\n        // Hash password for security\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n        // Connect to database\n        $db = new PDO('mysql:host=localhost;dbname=database_name', 'username', 'password');\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Prepare SQL statement\n        $stmt = $db->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(\":username\", $username);\n        $stmt->bindParam(\":email\", $email);\n        $stmt->bindParam(\":password\", $hashed_password);\n\n        // Execute SQL statement\n        if ($stmt->execute()) {\n            return array(\"success\" => \"User registered successfully\");\n        } else {\n            throw new Exception(\"Failed to register user\");\n        }\n\n    } catch (PDOException $e) {\n        return array(\"error\" => \"Database error: \" . $e->getMessage());\n    }\n}\n\n// Example usage\n$username = \"exampleuser\";\n$email = \"example@example.com\";\n$password = \"password123\";\n\n$result = register_user($username, $email, $password);\n\nif ($result[\"success\"]) {\n    echo \"User registered successfully!\";\n} elseif ($result[\"error\"]) {\n    echo \"Error: \" . $result[\"error\"];\n}\n```"]}
