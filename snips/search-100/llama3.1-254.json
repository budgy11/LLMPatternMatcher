{"prompt": "Create a search bar using php", "llm_output": "Here is an example of how to create a simple search bar using PHP:\n\n**index.php**\n```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Search Bar</title>\n  <style>\n    #search-box {\n      width: 300px;\n      height: 30px;\n      padding: 10px;\n      font-size: 16px;\n    }\n  </style>\n</head>\n<body>\n  <h1>Search Bar</h1>\n  <form action=\"search.php\" method=\"get\">\n    <input type=\"text\" id=\"search-box\" name=\"search_term\" placeholder=\"Search...\">\n    <button type=\"submit\">Search</button>\n  </form>\n\n  <?php if (isset($_GET['search_term'])) { ?>\n    <p>Results for: <?= $_GET['search_term'] ?></p>\n    <!-- Display search results here -->\n  <?php } ?>\n</body>\n</html>\n```\n**search.php**\n```php\n<?php\n  // Connect to database (assuming MySQL)\n  $conn = mysqli_connect('localhost', 'username', 'password', 'database');\n\n  // Check connection\n  if (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n  }\n\n  // Get search term from URL parameter\n  $search_term = $_GET['search_term'];\n\n  // Query database for matching records\n  $query = \"SELECT * FROM table_name WHERE column_name LIKE '%$search_term%'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    // Display search results\n    while ($row = mysqli_fetch_assoc($result)) {\n      echo \"<p>Result: \" . $row['column_name'] . \"</p>\";\n    }\n  } else {\n    echo \"<p>No results found.</p>\";\n  }\n\n  // Close database connection\n  mysqli_close($conn);\n?>\n```\n**How it works**\n\n1. The user enters a search term in the `search-box` input field and submits the form.\n2. The form sends a GET request to `search.php` with the search term as a parameter (`?search_term=search_term`).\n3. In `search.php`, we connect to the database using PHP's MySQLi extension.\n4. We query the database for matching records using the LIKE operator and the `%` wildcard.\n5. If there are results, we display them on the page.\n6. Finally, we close the database connection.\n\n**Note**\n\n* This is a simple example and you should take measures to prevent SQL injection attacks by using prepared statements or parameterized queries.\n* You will need to replace `table_name`, `column_name` with your actual table and column names.\n* This example assumes a MySQL database, but you can adapt it to other databases as needed.\n\nI hope this helps! Let me know if you have any questions.", "code_blocks": ["```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Search Bar</title>\n  <style>\n    #search-box {\n      width: 300px;\n      height: 30px;\n      padding: 10px;\n      font-size: 16px;\n    }\n  </style>\n</head>\n<body>\n  <h1>Search Bar</h1>\n  <form action=\"search.php\" method=\"get\">\n    <input type=\"text\" id=\"search-box\" name=\"search_term\" placeholder=\"Search...\">\n    <button type=\"submit\">Search</button>\n  </form>\n\n  <?php if (isset($_GET['search_term'])) { ?>\n    <p>Results for: <?= $_GET['search_term'] ?></p>\n    <!-- Display search results here -->\n  <?php } ?>\n</body>\n</html>\n```", "```php\n<?php\n  // Connect to database (assuming MySQL)\n  $conn = mysqli_connect('localhost', 'username', 'password', 'database');\n\n  // Check connection\n  if (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n  }\n\n  // Get search term from URL parameter\n  $search_term = $_GET['search_term'];\n\n  // Query database for matching records\n  $query = \"SELECT * FROM table_name WHERE column_name LIKE '%$search_term%'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    // Display search results\n    while ($row = mysqli_fetch_assoc($result)) {\n      echo \"<p>Result: \" . $row['column_name'] . \"</p>\";\n    }\n  } else {\n    echo \"<p>No results found.</p>\";\n  }\n\n  // Close database connection\n  mysqli_close($conn);\n?>\n```"]}
