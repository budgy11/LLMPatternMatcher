{"prompt": "Create a search bar using php", "llm_output": "Here is an example of how to create a simple search bar using PHP:\n\n**search.php**\n```php\n<?php\n// Connect to database (assuming MySQL)\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// If form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n\n    // Get search query from form\n    $search_query = $_POST['search'];\n\n    // Prepare SQL query to search database\n    $query = \"SELECT * FROM table_name WHERE column_name LIKE '%$search_query%'\";\n\n    // Execute query and fetch results\n    $result = mysqli_query($conn, $query);\n    $rows = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n        $rows[] = $row;\n    }\n\n    // Close connection\n    mysqli_close($conn);\n\n    // Display search results\n    echo \"<h2>Search Results:</h2>\";\n    foreach ($rows as $row) {\n        echo \"<p>\" . $row['column_name'] . \"</p>\";\n    }\n} else {\n    ?>\n    <form action=\"<?php echo $_SERVER[\"PHP_SELF\"]; ?>\" method=\"post\">\n        <input type=\"text\" name=\"search\" placeholder=\"Search...\">\n        <button type=\"submit\">Search</button>\n    </form>\n    <?php\n}\n?>\n```\n**How it works:**\n\n1. The script connects to a MySQL database using the `mysqli` extension.\n2. If the form is submitted (i.e., when the user clicks the \"Search\" button), the script extracts the search query from the form data and prepares an SQL query to search the database for matching records.\n3. The script executes the query and fetches the results, storing them in an array called `$rows`.\n4. The script displays the search results by iterating over the `$rows` array and echoing each result.\n\n**Note:**\n\n* This is a simple example and you should consider implementing security measures to prevent SQL injection attacks (e.g., using prepared statements).\n* You will need to replace `table_name`, `column_name`, and other placeholders with your actual database table and column names.\n* This script assumes that the search query is case-sensitive; if you want to make it case-insensitive, you can modify the SQL query to use the `LOWER()` function.\n\n**Example Use Case:**\n\nSuppose you have a table called `products` with columns `name`, `description`, etc. You can create an HTML form with a text input and submit button:\n```html\n<form action=\"search.php\" method=\"post\">\n    <input type=\"text\" name=\"search\" placeholder=\"Search for products...\">\n    <button type=\"submit\">Search</button>\n</form>\n```\nWhen the user submits the form, the `search.php` script will execute and display the search results.", "code_blocks": ["```php\n<?php\n// Connect to database (assuming MySQL)\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// If form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n\n    // Get search query from form\n    $search_query = $_POST['search'];\n\n    // Prepare SQL query to search database\n    $query = \"SELECT * FROM table_name WHERE column_name LIKE '%$search_query%'\";\n\n    // Execute query and fetch results\n    $result = mysqli_query($conn, $query);\n    $rows = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n        $rows[] = $row;\n    }\n\n    // Close connection\n    mysqli_close($conn);\n\n    // Display search results\n    echo \"<h2>Search Results:</h2>\";\n    foreach ($rows as $row) {\n        echo \"<p>\" . $row['column_name'] . \"</p>\";\n    }\n} else {\n    ?>\n    <form action=\"<?php echo $_SERVER[\"PHP_SELF\"]; ?>\" method=\"post\">\n        <input type=\"text\" name=\"search\" placeholder=\"Search...\">\n        <button type=\"submit\">Search</button>\n    </form>\n    <?php\n}\n?>\n```", null]}
