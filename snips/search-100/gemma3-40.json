{"prompt": "Create a search bar using php", "llm_output": "```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Simple Search Bar</title>\n  <style>\n    .search-container {\n      margin: 20px;\n    }\n    input[type=\"text\"] {\n      padding: 8px;\n      width: 300px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n    }\n    button {\n      padding: 8px 12px;\n      background-color: #4CAF50;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .results {\n      margin-top: 20px;\n    }\n    .result-item {\n      padding: 10px;\n      border: 1px solid #eee;\n      margin-bottom: 5px;\n    }\n  </style>\n</head>\n<body>\n\n  <div class=\"search-container\">\n    <h2>Search</h2>\n    <input type=\"text\" id=\"search-input\" placeholder=\"Enter search term\">\n    <button onclick=\"performSearch()\">Search</button>\n  </div>\n\n  <div class=\"results\" id=\"results-container\">\n    <!-- Results will be displayed here -->\n  </div>\n\n\n  <script>\n    function performSearch() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const resultsContainer = document.getElementById('results-container');\n\n      // **Important:  Replace this with your actual data source and logic**\n      const data = [\n        { title: 'Apple iPhone 14', description: 'The latest iPhone with a fantastic camera.' },\n        { title: 'Samsung Galaxy S23', description: 'A powerful Android phone.' },\n        { title: 'Google Pixel 7', description: 'Google\\'s flagship phone.' },\n        { title: 'Laptop - Dell XPS 13', description: 'A sleek and powerful laptop.' },\n        { title: 'Gaming PC - Corsair', description: 'A high-performance gaming PC.' },\n      ];\n\n      // Clear previous results\n      resultsContainer.innerHTML = '';\n\n      // Loop through the data and display matching results\n      data.forEach(item => {\n        const title = item.title.toLowerCase();\n        const description = item.description.toLowerCase();\n\n        if (title.includes(searchTerm) || description.includes(searchTerm)) {\n          const resultItem = document.createElement('div');\n          resultItem.classList.add('result-item');\n          resultItem.innerHTML = `\n            <h3>${item.title}</h3>\n            <p>${item.description}</p>\n          `;\n          resultsContainer.appendChild(resultItem);\n        }\n      });\n    }\n  </script>\n\n</body>\n</html>\n```\n\nKey improvements and explanations:\n\n* **Clear HTML Structure:**  The HTML is well-structured with semantic elements and appropriate IDs for easy JavaScript access.  It includes a heading and a well-designed input field.\n* **CSS Styling:**  Basic CSS is included to make the search bar look reasonably presentable, with padding, borders, and a button style.  The `results` container is styled to hold the search results.\n* **JavaScript `performSearch()` Function:**\n    * **Gets Search Term:** It correctly gets the value from the search input field (`document.getElementById('search-input').value`).\n    * **Converts to Lowercase:**  Crucially, the search term is converted to lowercase (`.toLowerCase()`) to ensure case-insensitive searching.  This is *essential* for usability.\n    * **Clears Previous Results:**  `resultsContainer.innerHTML = '';`  This clears the contents of the `results-container` before adding new results, preventing the results from accumulating on every search.\n    * **Data Source (Placeholder):**  The `data` array is a placeholder.  **You *must* replace this with your actual data source.**  This could be a database query, an array of objects, or any other source of information you want to search.\n    * **Iteration and Filtering:**  It loops through the `data` array.\n    * **Case-Insensitive Matching:** Inside the loop, `title.includes(searchTerm) || description.includes(searchTerm)`  checks if either the title or the description contains the search term. This performs a case-insensitive search.\n    * **Creates Result Items:**  If a match is found, it creates a new `<div>` element for each result.\n    * **Dynamically Adds HTML:**  It uses `innerHTML` to add the title and description to the new `<div>`.\n    * **Appends to Container:**  The created result item is appended to the `results-container`.\n* **Error Handling (Missing but Important):** This code doesn't include error handling (e.g., what happens if the database query fails).  You should add error handling to make your application more robust.\n* **Performance Considerations:**  For large datasets, you'll need to optimize the search for performance.  Consider using more efficient search algorithms or indexing your data.\n\nHow to use this code:\n\n1. **Save:** Save the code as an HTML file (e.g., `search.html`).\n2. **Open in Browser:** Open the HTML file in your web browser.\n3. **Test:** Enter a search term into the input field and click the \"Search\" button. You should see the results displayed below.\n4. **Replace Placeholder Data:**  **Crucially, replace the `data` array with your actual data.**  Also, replace the JavaScript code to connect to your data source.  This is the only part you will need to change to adapt this code to your project.\n\nExample of adapting it to a database query:\n\n```php\n<?php\n// Assuming you have a database connection established\n$searchTerm = $_GET['search']; // Get the search term from the query string\n\n// Database connection details (replace with your details)\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Construct the SQL query (case-insensitive search)\n$sql = \"SELECT title, description FROM products WHERE title LIKE '%\" . $searchTerm . \"%' OR description LIKE '%\" . $searchTerm . \"%'\";\n\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // Output data of each row\n  while($row = $result->fetch_assoc()) {\n    echo \"<div class='result-item'>\" .\n         \"<h3>\" . $row[\"title\"] . \"</h3>\" .\n         \"<p>\" . $row[\"description\"] . \"</p>\" .\n         \"</div>\";\n  }\n} else {\n  echo \"<p>No results found.</p>\";\n}\n\n$conn->close();\n?>\n```\n\nIn this example, you'd embed this PHP code within your HTML file.  The `$_GET['search']` retrieves the search term from the URL (e.g., `search.html?search=iPhone`). The `LIKE` operator with `%` wildcards allows for partial matches within the title or description.  Make sure your PHP code is connected to your database, and the table name (`products`) and column names (`title`, `description`) match your database schema.  Remember to handle database connection errors and security vulnerabilities properly.\n", "code_blocks": ["```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Simple Search Bar</title>\n  <style>\n    .search-container {\n      margin: 20px;\n    }\n    input[type=\"text\"] {\n      padding: 8px;\n      width: 300px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n    }\n    button {\n      padding: 8px 12px;\n      background-color: #4CAF50;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .results {\n      margin-top: 20px;\n    }\n    .result-item {\n      padding: 10px;\n      border: 1px solid #eee;\n      margin-bottom: 5px;\n    }\n  </style>\n</head>\n<body>\n\n  <div class=\"search-container\">\n    <h2>Search</h2>\n    <input type=\"text\" id=\"search-input\" placeholder=\"Enter search term\">\n    <button onclick=\"performSearch()\">Search</button>\n  </div>\n\n  <div class=\"results\" id=\"results-container\">\n    <!-- Results will be displayed here -->\n  </div>\n\n\n  <script>\n    function performSearch() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const resultsContainer = document.getElementById('results-container');\n\n      // **Important:  Replace this with your actual data source and logic**\n      const data = [\n        { title: 'Apple iPhone 14', description: 'The latest iPhone with a fantastic camera.' },\n        { title: 'Samsung Galaxy S23', description: 'A powerful Android phone.' },\n        { title: 'Google Pixel 7', description: 'Google\\'s flagship phone.' },\n        { title: 'Laptop - Dell XPS 13', description: 'A sleek and powerful laptop.' },\n        { title: 'Gaming PC - Corsair', description: 'A high-performance gaming PC.' },\n      ];\n\n      // Clear previous results\n      resultsContainer.innerHTML = '';\n\n      // Loop through the data and display matching results\n      data.forEach(item => {\n        const title = item.title.toLowerCase();\n        const description = item.description.toLowerCase();\n\n        if (title.includes(searchTerm) || description.includes(searchTerm)) {\n          const resultItem = document.createElement('div');\n          resultItem.classList.add('result-item');\n          resultItem.innerHTML = `\n            <h3>${item.title}</h3>\n            <p>${item.description}</p>\n          `;\n          resultsContainer.appendChild(resultItem);\n        }\n      });\n    }\n  </script>\n\n</body>\n</html>\n```", "```php\n<?php\n// Assuming you have a database connection established\n$searchTerm = $_GET['search']; // Get the search term from the query string\n\n// Database connection details (replace with your details)\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Construct the SQL query (case-insensitive search)\n$sql = \"SELECT title, description FROM products WHERE title LIKE '%\" . $searchTerm . \"%' OR description LIKE '%\" . $searchTerm . \"%'\";\n\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // Output data of each row\n  while($row = $result->fetch_assoc()) {\n    echo \"<div class='result-item'>\" .\n         \"<h3>\" . $row[\"title\"] . \"</h3>\" .\n         \"<p>\" . $row[\"description\"] . \"</p>\" .\n         \"</div>\";\n  }\n} else {\n  echo \"<p>No results found.</p>\";\n}\n\n$conn->close();\n?>\n```"]}
