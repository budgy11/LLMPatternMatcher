{"prompt": "Create a search bar using php", "llm_output": "Here is an example of how you can create a basic search bar using PHP:\n\n**index.php**\n```php\n<?php\n// Connect to database (replace with your own connection settings)\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"database\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get search query from form submission\nif (isset($_GET['search'])) {\n    $search_query = $_GET['search'];\n} else {\n    // If no search query, display default message\n    echo '<h1>Search for products</h1>';\n}\n\n// Query database to retrieve matching results\n$sql = \"SELECT * FROM products WHERE name LIKE '%$search_query%'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Output data of each row\n    echo '<table><tr><th>Name</th><th>Price</th></tr>';\n    while($row = $result->fetch_assoc()) {\n        echo \"<tr><td>\" . $row[\"name\"] . \"</td><td>\" . $row[\"price\"] . \"</td></tr>\";\n    }\n    echo '</table>';\n} else {\n    echo \"0 results\";\n}\n\n// Close database connection\n$conn->close();\n?>\n```\n\n**search.html**\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Search Bar</title>\n</head>\n<body>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"get\">\n    <input type=\"text\" name=\"search\" placeholder=\"Search for products...\">\n    <button type=\"submit\">Search</button>\n</form>\n\n<?php include 'index.php'; ?>\n\n</body>\n</html>\n```\n\n**Explanation**\n\n*   The PHP script above connects to a MySQL database, retrieves the search query from the form submission, and queries the database to retrieve matching results.\n*   In this example, we assume that you have a `products` table with columns `name` and `price`.\n*   When the form is submitted, the script sends a GET request to itself (`$_SERVER['PHP_SELF']`) and includes the search query in the URL.\n*   The PHP script then queries the database using the search query as a LIKE operator on the `name` column.\n\n**Note**: This is a basic example. In a real-world application, you should consider security measures such as escaping user input to prevent SQL injection attacks.\n\nYou can replace the connection settings and table name with your own configuration.\n\nTo run this code:\n\n1.  Create an HTML file named `search.html` in the same directory.\n2.  Create a PHP file named `index.php` in the same directory, and copy the above code into it.\n3.  Open `search.html` in your web browser to display the search bar.\n\n**Remember**: You should never store sensitive data (like database credentials) directly in the code. Always consider security best practices when developing a web application.", "code_blocks": ["```php\n<?php\n// Connect to database (replace with your own connection settings)\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"database\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get search query from form submission\nif (isset($_GET['search'])) {\n    $search_query = $_GET['search'];\n} else {\n    // If no search query, display default message\n    echo '<h1>Search for products</h1>';\n}\n\n// Query database to retrieve matching results\n$sql = \"SELECT * FROM products WHERE name LIKE '%$search_query%'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Output data of each row\n    echo '<table><tr><th>Name</th><th>Price</th></tr>';\n    while($row = $result->fetch_assoc()) {\n        echo \"<tr><td>\" . $row[\"name\"] . \"</td><td>\" . $row[\"price\"] . \"</td></tr>\";\n    }\n    echo '</table>';\n} else {\n    echo \"0 results\";\n}\n\n// Close database connection\n$conn->close();\n?>\n```", null]}
