{"prompt": "Create a search bar using php", "llm_output": "Here's an example of how you can create a simple search bar using PHP. In this example, we'll be using HTML for the form and PHP to handle the search query.\n\n### index.php\n```php\n<?php\n// Connect to database (assuming MySQL)\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Search Bar</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <input type=\"text\" id=\"search-term\" name=\"search-term\" placeholder=\"Search...\">\n    <button type=\"submit\">Search</button>\n</form>\n\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $searchTerm = $_POST['search-term'];\n\n    // Prepare SQL query\n    $sql = \"SELECT * FROM your_table WHERE column_name LIKE '%$searchTerm%'\";\n\n    // Execute query\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"Result: \" . $row[\"column_name\"] . \"<br>\";\n        }\n    } else {\n        echo \"No results found.\";\n    }\n\n    // Close connection\n    $conn->close();\n}\n?>\n\n</body>\n</html>\n```\n\n### How to use:\n\n1. Replace `\"your_username\"`, `\"your_password\"`, and `\"your_database\"` with your actual MySQL credentials.\n2. Replace `\"your_table\"` and `\"column_name\"` with the name of the table and column you want to search in.\n3. Save this code as `index.php`.\n4. Open `index.php` in a web browser.\n5. Type something into the search bar and click the \"Search\" button.\n\nNote: This is a basic example. In a real-world application, you should use prepared statements instead of concatenating user input directly into SQL queries to prevent SQL injection attacks.\n\n### Prepared Statements:\n\nHere's an updated version using prepared statements:\n```php\n<?php\n// ...\n\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $searchTerm = $_POST['search-term'];\n\n    // Prepare SQL query with prepared statement\n    $stmt = $conn->prepare(\"SELECT * FROM your_table WHERE column_name LIKE ?\");\n    $stmt->bind_param(\"s\", $searchTerm);\n\n    // Execute query\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"Result: \" . $row[\"column_name\"] . \"<br>\";\n        }\n    } else {\n        echo \"No results found.\";\n    }\n\n    // Close prepared statement and connection\n    $stmt->close();\n    $conn->close();\n}\n?>\n```\n\nThis is a more secure way to handle user input, but it requires more code.", "code_blocks": ["```php\n<?php\n// Connect to database (assuming MySQL)\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Search Bar</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <input type=\"text\" id=\"search-term\" name=\"search-term\" placeholder=\"Search...\">\n    <button type=\"submit\">Search</button>\n</form>\n\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $searchTerm = $_POST['search-term'];\n\n    // Prepare SQL query\n    $sql = \"SELECT * FROM your_table WHERE column_name LIKE '%$searchTerm%'\";\n\n    // Execute query\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"Result: \" . $row[\"column_name\"] . \"<br>\";\n        }\n    } else {\n        echo \"No results found.\";\n    }\n\n    // Close connection\n    $conn->close();\n}\n?>\n\n</body>\n</html>\n```", "```php\n<?php\n// ...\n\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $searchTerm = $_POST['search-term'];\n\n    // Prepare SQL query with prepared statement\n    $stmt = $conn->prepare(\"SELECT * FROM your_table WHERE column_name LIKE ?\");\n    $stmt->bind_param(\"s\", $searchTerm);\n\n    // Execute query\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"Result: \" . $row[\"column_name\"] . \"<br>\";\n        }\n    } else {\n        echo \"No results found.\";\n    }\n\n    // Close prepared statement and connection\n    $stmt->close();\n    $conn->close();\n}\n?>\n```"]}
