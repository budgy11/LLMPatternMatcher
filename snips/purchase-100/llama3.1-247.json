{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Database Structure**\n\nFirst, let's create the database structure for this example. We'll need two tables: `products` and `orders`.\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  order_date DATE,\n  total DECIMAL(10,2),\n  status ENUM('pending', 'shipped', 'delivered')\n);\n```\n\n**PHP Code**\n\nNext, let's create the PHP code for the purchase functionality.\n\n```php\n// config.php: database configuration file\n<?php\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database_name';\n\n// Create a connection to the database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n\n// functions.php: functions for purchase functionality\n<?php\nfunction getProducts() {\n  global $conn;\n  $query = \"SELECT * FROM products\";\n  $result = $conn->query($query);\n  return $result->fetch_all(MYSQLI_ASSOC);\n}\n\nfunction addOrder($data) {\n  global $conn;\n  $query = \"INSERT INTO orders (customer_name, order_date, total, status)\n            VALUES ('$data[customer_name]', NOW(), '$data[total]', 'pending')\";\n  $conn->query($query);\n}\n\nfunction updateOrderStatus($id, $status) {\n  global $conn;\n  $query = \"UPDATE orders SET status = '$status' WHERE id = '$id'\";\n  $conn->query($query);\n}\n?>\n\n// index.php: main script for purchase functionality\n<?php\nrequire_once 'config.php';\nrequire_once 'functions.php';\n\n// Get products from database\n$products = getProducts();\n\n// Process form submission (if any)\nif (isset($_POST['submit'])) {\n  // Validate form data\n  if (!empty($_POST['customer_name']) && !empty($_POST['product_id']) && !empty($_POST['quantity'])) {\n    // Calculate total cost\n    $total = $_POST['price'] * $_POST['quantity'];\n\n    // Add order to database\n    addOrder([\n      'customer_name' => $_POST['customer_name'],\n      'total' => $total,\n    ]);\n\n    // Update product stock (not implemented in this example)\n  } else {\n    echo \"Error: Invalid form submission.\";\n  }\n}\n\n// Display products and form\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Functionality</title>\n</head>\n<body>\n  <h1>Products:</h1>\n  <ul>\n    <?php foreach ($products as $product) : ?>\n      <li><?php echo $product['name']; ?> (<?php echo $product['price']; ?>)</li>\n    <?php endforeach; ?>\n  </ul>\n\n  <form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n    <label for=\"product_id\">Product ID:</label>\n    <select id=\"product_id\" name=\"product_id\">\n      <?php foreach ($products as $product) : ?>\n        <option value=\"<?php echo $product['id']; ?>\"><?php echo $product['name']; ?></option>\n      <?php endforeach; ?>\n    </select><br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n    <button type=\"submit\" name=\"submit\">Place Order</button>\n  </form>\n\n  <?php if (isset($_POST['submit'])) : ?>\n    <p>Order placed successfully!</p>\n  <?php endif; ?>\n</body>\n</html>\n```\n\n**How it Works**\n\n1. The database structure consists of two tables: `products` and `orders`. The `products` table stores information about available products, while the `orders` table stores information about each order placed.\n2. The PHP code uses a database connection to interact with the database. It defines three functions: `getProducts()` retrieves all products from the database; `addOrder()` adds a new order to the database; and `updateOrderStatus()` updates the status of an existing order in the database.\n3. On the client-side, we have an HTML form that allows users to select a product and enter their customer name and quantity.\n4. When the user submits the form, the PHP script validates the input data and calculates the total cost based on the selected product's price and the entered quantity.\n5. If the validation is successful, the PHP script adds a new order to the database using the `addOrder()` function.\n\n**Note**: This example assumes that you have already created a database with the specified structure and have replaced placeholders (`your_username`, `your_password`, etc.) with actual values in your configuration file.\n\nPlease let me know if you'd like me to explain any part of this code further!", "code_blocks": [null, "```php\n// config.php: database configuration file\n<?php\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database_name';\n\n// Create a connection to the database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n\n// functions.php: functions for purchase functionality\n<?php\nfunction getProducts() {\n  global $conn;\n  $query = \"SELECT * FROM products\";\n  $result = $conn->query($query);\n  return $result->fetch_all(MYSQLI_ASSOC);\n}\n\nfunction addOrder($data) {\n  global $conn;\n  $query = \"INSERT INTO orders (customer_name, order_date, total, status)\n            VALUES ('$data[customer_name]', NOW(), '$data[total]', 'pending')\";\n  $conn->query($query);\n}\n\nfunction updateOrderStatus($id, $status) {\n  global $conn;\n  $query = \"UPDATE orders SET status = '$status' WHERE id = '$id'\";\n  $conn->query($query);\n}\n?>\n\n// index.php: main script for purchase functionality\n<?php\nrequire_once 'config.php';\nrequire_once 'functions.php';\n\n// Get products from database\n$products = getProducts();\n\n// Process form submission (if any)\nif (isset($_POST['submit'])) {\n  // Validate form data\n  if (!empty($_POST['customer_name']) && !empty($_POST['product_id']) && !empty($_POST['quantity'])) {\n    // Calculate total cost\n    $total = $_POST['price'] * $_POST['quantity'];\n\n    // Add order to database\n    addOrder([\n      'customer_name' => $_POST['customer_name'],\n      'total' => $total,\n    ]);\n\n    // Update product stock (not implemented in this example)\n  } else {\n    echo \"Error: Invalid form submission.\";\n  }\n}\n\n// Display products and form\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Functionality</title>\n</head>\n<body>\n  <h1>Products:</h1>\n  <ul>\n    <?php foreach ($products as $product) : ?>\n      <li><?php echo $product['name']; ?> (<?php echo $product['price']; ?>)</li>\n    <?php endforeach; ?>\n  </ul>\n\n  <form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n    <label for=\"product_id\">Product ID:</label>\n    <select id=\"product_id\" name=\"product_id\">\n      <?php foreach ($products as $product) : ?>\n        <option value=\"<?php echo $product['id']; ?>\"><?php echo $product['name']; ?></option>\n      <?php endforeach; ?>\n    </select><br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n    <button type=\"submit\" name=\"submit\">Place Order</button>\n  </form>\n\n  <?php if (isset($_POST['submit'])) : ?>\n    <p>Order placed successfully!</p>\n  <?php endif; ?>\n</body>\n</html>\n```"]}
