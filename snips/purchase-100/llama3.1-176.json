{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including form validation and database interaction:\n\n**Database Setup**\n\nFirst, you'll need to set up a database table for storing purchases. Here's an example schema:\n```sql\nCREATE TABLE purchases (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  product_id INT NOT NULL,\n  quantity INT NOT NULL,\n  total DECIMAL(10,2) NOT NULL DEFAULT 0.00,\n  status VARCHAR(50) NOT NULL DEFAULT 'pending',\n  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n```\n**PHP Code**\n\nCreate a new PHP file (e.g., `purchase.php`) and add the following code:\n```php\n<?php\n\n// Include configuration and database connection\nrequire_once 'config.php';\nrequire_once 'db.php';\n\n// Set default values for form fields\n$productId = $_POST['product_id'] ?? '';\n$quantity = $_POST['quantity'] ?? 0;\n$userEmail = $_POST['email'] ?? '';\n\n// Validate form input\nif (!empty($productId) && !empty($userEmail)) {\n    if (ctype_digit($productId)) {\n        $productId = intval($productId);\n    } else {\n        echo 'Invalid product ID.';\n        return;\n    }\n\n    if ($quantity > 0) {\n        // Check if user is logged in\n        if (!isset($_SESSION['user_id'])) {\n            echo 'Please log in to make a purchase.';\n            return;\n        }\n    } else {\n        echo 'Quantity must be greater than zero.';\n        return;\n    }\n} else {\n    echo 'Please enter product ID and email.';\n    return;\n}\n\n// Get product details\n$product = get_product($productId);\nif (!$product) {\n    echo 'Product not found.';\n    return;\n}\n\n// Check if user has sufficient balance (optional)\nif (!isset($_SESSION['balance']) || $_SESSION['balance'] < $product['price'] * $quantity) {\n    echo 'Insufficient balance.';\n    return;\n}\n\n// Calculate total\n$total = $product['price'] * $quantity;\n\n// Create new purchase record\n$purchase = array(\n    'user_id' => $_SESSION['user_id'],\n    'product_id' => $productId,\n    'quantity' => $quantity,\n    'total' => $total,\n    'status' => 'pending'\n);\n\ninsert_purchase($purchase);\necho 'Purchase successful!';\n```\n**HTML Form**\n\nCreate an HTML form for users to submit their purchase information:\n```html\n<form action=\"purchase.php\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <button type=\"submit\">Make Purchase</button>\n</form>\n```\n**Additional Functions**\n\nYou'll also need to create the following functions:\n\n```php\nfunction get_product($id) {\n  $query = \"SELECT * FROM products WHERE id = '$id'\";\n  $result = mysqli_query($conn, $query);\n  if ($row = mysqli_fetch_assoc($result)) {\n    return $row;\n  } else {\n    return false;\n  }\n}\n\nfunction insert_purchase($purchase) {\n  $query = \"INSERT INTO purchases SET \";\n  foreach ($purchase as $key => $value) {\n    $query .= \"$key = '$value', \";\n  }\n  $query = rtrim($query, ', ');\n  mysqli_query($conn, $query);\n}\n```\n**Notes**\n\n* This example uses a simple form validation and database interaction. You may want to add additional security measures (e.g., sanitizing input data) and error handling.\n* The `get_product` function assumes that the product ID is an integer. You may need to modify this depending on your specific use case.\n* The `insert_purchase` function uses a simple SQL query to insert new records into the `purchases` table. You may want to add additional validation or error handling for this operation.\n\nThis example should give you a basic starting point for creating a purchase functionality using PHP.", "code_blocks": [null, "```php\n<?php\n\n// Include configuration and database connection\nrequire_once 'config.php';\nrequire_once 'db.php';\n\n// Set default values for form fields\n$productId = $_POST['product_id'] ?? '';\n$quantity = $_POST['quantity'] ?? 0;\n$userEmail = $_POST['email'] ?? '';\n\n// Validate form input\nif (!empty($productId) && !empty($userEmail)) {\n    if (ctype_digit($productId)) {\n        $productId = intval($productId);\n    } else {\n        echo 'Invalid product ID.';\n        return;\n    }\n\n    if ($quantity > 0) {\n        // Check if user is logged in\n        if (!isset($_SESSION['user_id'])) {\n            echo 'Please log in to make a purchase.';\n            return;\n        }\n    } else {\n        echo 'Quantity must be greater than zero.';\n        return;\n    }\n} else {\n    echo 'Please enter product ID and email.';\n    return;\n}\n\n// Get product details\n$product = get_product($productId);\nif (!$product) {\n    echo 'Product not found.';\n    return;\n}\n\n// Check if user has sufficient balance (optional)\nif (!isset($_SESSION['balance']) || $_SESSION['balance'] < $product['price'] * $quantity) {\n    echo 'Insufficient balance.';\n    return;\n}\n\n// Calculate total\n$total = $product['price'] * $quantity;\n\n// Create new purchase record\n$purchase = array(\n    'user_id' => $_SESSION['user_id'],\n    'product_id' => $productId,\n    'quantity' => $quantity,\n    'total' => $total,\n    'status' => 'pending'\n);\n\ninsert_purchase($purchase);\necho 'Purchase successful!';\n```", null, "```php\nfunction get_product($id) {\n  $query = \"SELECT * FROM products WHERE id = '$id'\";\n  $result = mysqli_query($conn, $query);\n  if ($row = mysqli_fetch_assoc($result)) {\n    return $row;\n  } else {\n    return false;\n  }\n}\n\nfunction insert_purchase($purchase) {\n  $query = \"INSERT INTO purchases SET \";\n  foreach ($purchase as $key => $value) {\n    $query .= \"$key = '$value', \";\n  }\n  $query = rtrim($query, ', ');\n  mysqli_query($conn, $query);\n}\n```"]}
