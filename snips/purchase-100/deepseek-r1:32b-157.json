{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this.\n\nFirst, I should consider the basic components involved in a purchase process. There's the product catalog, where users can see items available for purchase. Each product needs an ID, name, description, and price. Then, there's the shopping cart where users add items they want to buy. The cart should allow adding, removing, and updating quantities of products.\n\nNext, I need a checkout process. This involves calculating the total cost, including any applicable taxes or discounts. Users should be able to enter their shipping and payment information securely. After that, processing the payment is crucial, which might involve integrating with a payment gateway like PayPal or Stripe. Finally, confirming the purchase and providing an order receipt is necessary.\n\nI'll start by setting up the database tables. I'll need a 'products' table with columns for product ID, name, description, price, and stock quantity. Then, an 'orders' table to store order details like order ID, user ID, total amount, payment method, status, and timestamps for when the order was placed and completed.\n\nFor the shopping cart functionality, I can use PHP sessions since they allow storing data temporarily on the server side associated with a user's session. When a user adds a product, it will be stored in the session under a 'cart' key. This way, the cart persists as long as the user is browsing without logging out.\n\nIn the index.php file, I'll display all products from the database. Each product will have an \"Add to Cart\" button that sends a POST request with the product ID and quantity. The server-side script (add_to_cart.php) will handle adding this information to the session.\n\nThe shopping cart page (shopping_cart.php) will retrieve the cart data from the session and display each item, allowing users to update quantities or remove items. Each change will trigger an AJAX call to update_cart.php, which modifies the session without needing a full page refresh.\n\nFor checkout, I'll create a form in checkout.php that collects user details like name, email, address, city, state, ZIP code, and phone number. The payment processing (process_payment.php) will simulate accepting a payment method by checking if it's set and then proceed to finalize the order.\n\nFinalizing the order involves inserting into the 'orders' table with the provided details and generating an order ID. Then, each item in the cart is inserted into an 'order_items' table, which links orders to products. After this, the shopping cart session is cleared.\n\nThe thank you page (thank_you.php) will display a confirmation message along with the order ID and total amount, giving users peace of mind that their purchase was successful.\n\nSecurity considerations include using prepared statements in database queries to prevent SQL injection. I should also validate all user inputs to ensure data integrity and sanitize outputs to avoid XSS attacks.\n\nIn terms of error handling, each script should check for required parameters and handle cases where expected data isn't present. For example, if the cart is empty when trying to checkout, an appropriate message should be shown.\n\nTesting each part step by step is important. I'll start by adding products to the database, then test adding them to the cart, updating quantities, removing items, proceeding through checkout, and ensuring orders are correctly recorded in the database.\n\nI also need to consider user authentication, but since it's beyond the current scope, placeholders for user details are used. In a real application, integrating with a user login system would be necessary.\n\nOverall, this structure should provide a basic yet functional purchase process using PHP, covering all essential steps from product display to order confirmation.\n</think>\n\nHere's an example of how you can create a purchase functionality using PHP:\n\n### Step 1: Set up the database tables\n\nFirst, you'll need to set up your database with tables for products and orders.\n\n```sql\n-- Create products table\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2),\n    stock INT\n);\n\n-- Create orders table\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50),\n    status ENUM('pending', 'completed'),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- Create order_items table (to store items in an order)\nCREATE TABLE order_items (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### Step 2: Create the product catalog page\n\n```php\n<?php\n// index.php - Product Catalog Page\n\n// Database connection\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Fetch products from database\n$stmt = $conn->query('SELECT * FROM products');\n$products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Catalog</title>\n    <style>\n        /* Add your CSS styles here */\n    </style>\n</head>\n<body>\n    <h1>Product Catalog</h1>\n    \n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock']; ?>\" placeholder=\"Quantity\" required>\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n\n    <a href=\"shopping_cart.php\">Go to Shopping Cart</a>\n</body>\n</html>\n```\n\n### Step 3: Create the add to cart functionality\n\n```php\n<?php\n// add_to_cart.php\n\nsession_start();\n\n$product_id = $_POST['product_id'];\n$quantity = $_POST['quantity'];\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\nif (isset($_SESSION['cart'][$product_id])) {\n    $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n} else {\n    // Fetch product details from database\n    $conn = new PDO(\"mysql:host=localhost;dbname=your_database_name\", \"root\", \"\");\n    $stmt = $conn->prepare('SELECT * FROM products WHERE id = ?');\n    $stmt->execute([$product_id]);\n    $product = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    $_SESSION['cart'][$product_id] = array(\n        'name' => $product['name'],\n        'price' => $product['price'],\n        'quantity' => $quantity\n    );\n}\n\nheader(\"Location: \" . $_SERVER['HTTP_REFERER']);\nexit();\n```\n\n### Step 4: Create the shopping cart page\n\n```php\n<?php\n// shopping_cart.php\n\nsession_start();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php foreach ($_SESSION['cart'] as $id => $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td><input type=\"number\" id=\"quantity_<?php echo $id; ?>\" value=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                    <td>\n                        <button onclick=\"updateQuantity(<?php echo $id; ?>, '<?php echo $item['name']; ?>')\">Update</button>\n                        <a href=\"remove_from_cart.php?id=<?php echo $id; ?>\">Remove</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n\n            <tr>\n                <th colspan=\"3\">Total:</th>\n                <td>$<?php \n                    $total = 0;\n                    foreach ($_SESSION['cart'] as $item) {\n                        $total += $item['price'] * $item['quantity'];\n                    }\n                    echo number_format($total, 2); \n                ?></td>\n            </tr>\n        </table>\n\n        <script>\n            function updateQuantity(productId, productName) {\n                var quantity = document.getElementById('quantity_' + productId).value;\n                if (quantity > 0) {\n                    // Use AJAX to send the updated quantity\n                    var xmlhttp = new XMLHttpRequest();\n                    xmlhttp.onreadystatechange = function() {\n                        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n                            window.location.reload();\n                        }\n                    };\n                    xmlhttp.open(\"POST\", \"update_cart.php\", true);\n                    xmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n                    xmlhttp.send(\"id=\" + productId + \"&quantity=\" + quantity);\n                } else {\n                    alert(\"Quantity must be at least 1!\");\n                }\n            }\n        </script>\n\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n\n    <a href=\"<?php echo isset($_SESSION['cart']) && !empty($_SESSION['cart']) ? 'checkout.php' : 'index.php'; ?>\">Continue Shopping</a>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <a href=\"checkout.php\">Checkout</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\n### Step 5: Create the update cart functionality\n\n```php\n<?php\n// update_cart.php\n\nsession_start();\n\nif (isset($_POST['id']) && isset($_POST['quantity'])) {\n    $id = $_POST['id'];\n    $quantity = $_POST['quantity'];\n\n    if (!empty($quantity) && $quantity > 0) {\n        if (isset($_SESSION['cart'][$id])) {\n            $_SESSION['cart'][$id]['quantity'] = $quantity;\n        }\n    } else {\n        unset($_SESSION['cart'][$id]);\n    }\n\n    // You can return a JSON response or just reload the page\n    echo \"success\";\n} else {\n    echo \"error\";\n}\n```\n\n### Step 6: Create the remove from cart functionality\n\n```php\n<?php\n// remove_from_cart.php\n\nsession_start();\n\nif (isset($_GET['id'])) {\n    $id = $_GET['id'];\n    if (isset($_SESSION['cart'][$id])) {\n        unset($_SESSION['cart'][$id]);\n    }\n}\n\nheader(\"Location: shopping_cart.php\");\nexit();\n```\n\n### Step 7: Create the checkout page\n\n```php\n<?php\n// checkout.php\n\nsession_start();\n\nif (!empty($_SESSION['cart'])) {\n    $total = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n} else {\n    header(\"Location: index.php\");\n    exit();\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n\n    <?php if (!empty($_SESSION['cart'])): ?>\n\n        <form action=\"process_payment.php\" method=\"post\">\n            <div>\n                <h2>Billing Information</h2>\n                <input type=\"text\" name=\"name\" placeholder=\"Full Name\" required>\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required>\n                <input type=\"tel\" name=\"phone\" placeholder=\"Phone Number\">\n                \n                <h3>Shipping Address</h3>\n                <input type=\"text\" name=\"address\" placeholder=\"Street Address\" required>\n                <input type=\"text\" name=\"city\" placeholder=\"City\" required>\n                <input type=\"text\" name=\"state\" placeholder=\"State\" required>\n                <input type=\"zip\" name=\"zipcode\" placeholder=\"Zip Code\" required>\n\n                <h3>Payment Information</h3>\n                <div>\n                    <label><input type=\"radio\" name=\"payment_method\" value=\"credit_card\" checked>Credit Card</label>\n                    <label><input type=\"radio\" name=\"payment_method\" value=\"paypal\">PayPal</label>\n                </div>\n\n                <!-- Add credit card fields here -->\n                <?php if (isset($_GET['error'])): ?>\n                    <p style=\"color: red;\"><?php echo $_GET['error']; ?></p>\n                <?php endif; ?>\n\n                <input type=\"hidden\" name=\"total\" value=\"<?php echo $total; ?>\">\n                <button type=\"submit\">Complete Purchase</button>\n            </div>\n        </form>\n\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n        <a href=\"index.php\">Continue Shopping</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\n### Step 8: Create the payment processing script\n\n```php\n<?php\n// process_payment.php\n\nsession_start();\n\nif (isset($_POST['total']) && !empty($_SESSION['cart'])) {\n\n    // Calculate total amount\n    $total = $_POST['total'];\n\n    // Validate form inputs\n    if (!isset($_POST['name'], $_POST['email'], $_POST['address'], $_POST['city'], $_POST['state'], $_POST['zipcode'])) {\n        header(\"Location: checkout.php?error=Please fill in all required fields\");\n        exit();\n    }\n\n    // Simulate payment processing (replace with actual payment gateway integration)\n    $payment_method = $_POST['payment_method'];\n    \n    if ($payment_method == 'credit_card') {\n        // Validate credit card information\n        // ...\n    } elseif ($payment_method == 'paypal') {\n        // Redirect to PayPal or process through their API\n        // ...\n    }\n\n    // For this example, assume payment is successful\n\n    // Save order to database\n    $conn = new PDO(\"mysql:host=localhost;dbname=your_database_name\", \"root\", \"\");\n    \n    try {\n        // Start transaction\n        $conn->beginTransaction();\n\n        // Insert into orders table\n        $stmt = $conn->prepare('INSERT INTO orders (user_id, total_amount, payment_method, status) VALUES (?, ?, ?, ?)');\n        $order_id = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 0;\n        $result = $stmt->execute([$order_id, $total, $payment_method, 'completed']);\n\n        // Get the new order ID\n        $last_order_id = $conn->lastInsertId();\n\n        // Insert each item into order_items table\n        foreach ($_SESSION['cart'] as $product) {\n            $stmt = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)');\n            $result = $stmt->execute([$last_order_id, $product['id'], $product['quantity'], $product['price']]);\n        }\n\n        // Commit transaction\n        $conn->commit();\n\n        // Clear the cart\n        unset($_SESSION['cart']);\n\n        header(\"Location: thank_you.php?order_id=\" . $last_order_id);\n    } catch (PDOException $e) {\n        // Rollback transaction in case of error\n        $conn->rollBack();\n        echo \"Error processing your order: \" . $e->getMessage();\n    }\n} else {\n    header(\"Location: index.php\");\n}\n```\n\n### Step 9: Create the thank you page\n\n```php\n<?php\n// thank_you.php\n\nsession_start();\n\n$order_id = $_GET['order_id'] ?? null;\n$total = isset($_SESSION['cart']) ? array_sum(array_map(function($item) { return $item['price'] * $item['quantity']; }, $_SESSION['cart'])) : 0;\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Thank You</title>\n</head>\n<body>\n    <h1>Thank You for Your Order!</h1>\n    \n    <?php if ($order_id && isset($_GET['total'])): ?>\n        <p>Your order ID is: <?php echo $order_id; ?></p>\n        <p>Total amount: $<?php echo number_format($total, 2); ?></p>\n        <p>We will send you an email confirmation shortly.</p>\n    <?php else: ?>\n        <p>There was an error processing your order. Please try again.</p>\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\nThis is a basic implementation of a purchase functionality using PHP. You would need to:\n\n1. Add proper user authentication\n2. Implement actual payment gateway integration (e.g., PayPal, Stripe)\n3. Add more error handling and validation\n4. Include CSRF protection\n5. Add proper security measures\n6. Implement email notifications\n7. Add more features based on your specific requirements\n\nRemember to secure your application by:\n- Sanitizing all user inputs\n- Using prepared statements for database queries\n- Encrypting sensitive data\n- Using HTTPS\n- Adding CSRF tokens\n- Implementing rate limiting and other security measures", "code_blocks": [null, "```php\n<?php\n// index.php - Product Catalog Page\n\n// Database connection\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Fetch products from database\n$stmt = $conn->query('SELECT * FROM products');\n$products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Catalog</title>\n    <style>\n        /* Add your CSS styles here */\n    </style>\n</head>\n<body>\n    <h1>Product Catalog</h1>\n    \n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock']; ?>\" placeholder=\"Quantity\" required>\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n\n    <a href=\"shopping_cart.php\">Go to Shopping Cart</a>\n</body>\n</html>\n```", "```php\n<?php\n// add_to_cart.php\n\nsession_start();\n\n$product_id = $_POST['product_id'];\n$quantity = $_POST['quantity'];\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\nif (isset($_SESSION['cart'][$product_id])) {\n    $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n} else {\n    // Fetch product details from database\n    $conn = new PDO(\"mysql:host=localhost;dbname=your_database_name\", \"root\", \"\");\n    $stmt = $conn->prepare('SELECT * FROM products WHERE id = ?');\n    $stmt->execute([$product_id]);\n    $product = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    $_SESSION['cart'][$product_id] = array(\n        'name' => $product['name'],\n        'price' => $product['price'],\n        'quantity' => $quantity\n    );\n}\n\nheader(\"Location: \" . $_SERVER['HTTP_REFERER']);\nexit();\n```", "```php\n<?php\n// shopping_cart.php\n\nsession_start();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php foreach ($_SESSION['cart'] as $id => $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td><input type=\"number\" id=\"quantity_<?php echo $id; ?>\" value=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                    <td>\n                        <button onclick=\"updateQuantity(<?php echo $id; ?>, '<?php echo $item['name']; ?>')\">Update</button>\n                        <a href=\"remove_from_cart.php?id=<?php echo $id; ?>\">Remove</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n\n            <tr>\n                <th colspan=\"3\">Total:</th>\n                <td>$<?php \n                    $total = 0;\n                    foreach ($_SESSION['cart'] as $item) {\n                        $total += $item['price'] * $item['quantity'];\n                    }\n                    echo number_format($total, 2); \n                ?></td>\n            </tr>\n        </table>\n\n        <script>\n            function updateQuantity(productId, productName) {\n                var quantity = document.getElementById('quantity_' + productId).value;\n                if (quantity > 0) {\n                    // Use AJAX to send the updated quantity\n                    var xmlhttp = new XMLHttpRequest();\n                    xmlhttp.onreadystatechange = function() {\n                        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n                            window.location.reload();\n                        }\n                    };\n                    xmlhttp.open(\"POST\", \"update_cart.php\", true);\n                    xmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n                    xmlhttp.send(\"id=\" + productId + \"&quantity=\" + quantity);\n                } else {\n                    alert(\"Quantity must be at least 1!\");\n                }\n            }\n        </script>\n\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n\n    <a href=\"<?php echo isset($_SESSION['cart']) && !empty($_SESSION['cart']) ? 'checkout.php' : 'index.php'; ?>\">Continue Shopping</a>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <a href=\"checkout.php\">Checkout</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```", "```php\n<?php\n// update_cart.php\n\nsession_start();\n\nif (isset($_POST['id']) && isset($_POST['quantity'])) {\n    $id = $_POST['id'];\n    $quantity = $_POST['quantity'];\n\n    if (!empty($quantity) && $quantity > 0) {\n        if (isset($_SESSION['cart'][$id])) {\n            $_SESSION['cart'][$id]['quantity'] = $quantity;\n        }\n    } else {\n        unset($_SESSION['cart'][$id]);\n    }\n\n    // You can return a JSON response or just reload the page\n    echo \"success\";\n} else {\n    echo \"error\";\n}\n```", "```php\n<?php\n// remove_from_cart.php\n\nsession_start();\n\nif (isset($_GET['id'])) {\n    $id = $_GET['id'];\n    if (isset($_SESSION['cart'][$id])) {\n        unset($_SESSION['cart'][$id]);\n    }\n}\n\nheader(\"Location: shopping_cart.php\");\nexit();\n```", "```php\n<?php\n// checkout.php\n\nsession_start();\n\nif (!empty($_SESSION['cart'])) {\n    $total = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n} else {\n    header(\"Location: index.php\");\n    exit();\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n\n    <?php if (!empty($_SESSION['cart'])): ?>\n\n        <form action=\"process_payment.php\" method=\"post\">\n            <div>\n                <h2>Billing Information</h2>\n                <input type=\"text\" name=\"name\" placeholder=\"Full Name\" required>\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required>\n                <input type=\"tel\" name=\"phone\" placeholder=\"Phone Number\">\n                \n                <h3>Shipping Address</h3>\n                <input type=\"text\" name=\"address\" placeholder=\"Street Address\" required>\n                <input type=\"text\" name=\"city\" placeholder=\"City\" required>\n                <input type=\"text\" name=\"state\" placeholder=\"State\" required>\n                <input type=\"zip\" name=\"zipcode\" placeholder=\"Zip Code\" required>\n\n                <h3>Payment Information</h3>\n                <div>\n                    <label><input type=\"radio\" name=\"payment_method\" value=\"credit_card\" checked>Credit Card</label>\n                    <label><input type=\"radio\" name=\"payment_method\" value=\"paypal\">PayPal</label>\n                </div>\n\n                <!-- Add credit card fields here -->\n                <?php if (isset($_GET['error'])): ?>\n                    <p style=\"color: red;\"><?php echo $_GET['error']; ?></p>\n                <?php endif; ?>\n\n                <input type=\"hidden\" name=\"total\" value=\"<?php echo $total; ?>\">\n                <button type=\"submit\">Complete Purchase</button>\n            </div>\n        </form>\n\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n        <a href=\"index.php\">Continue Shopping</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```", "```php\n<?php\n// process_payment.php\n\nsession_start();\n\nif (isset($_POST['total']) && !empty($_SESSION['cart'])) {\n\n    // Calculate total amount\n    $total = $_POST['total'];\n\n    // Validate form inputs\n    if (!isset($_POST['name'], $_POST['email'], $_POST['address'], $_POST['city'], $_POST['state'], $_POST['zipcode'])) {\n        header(\"Location: checkout.php?error=Please fill in all required fields\");\n        exit();\n    }\n\n    // Simulate payment processing (replace with actual payment gateway integration)\n    $payment_method = $_POST['payment_method'];\n    \n    if ($payment_method == 'credit_card') {\n        // Validate credit card information\n        // ...\n    } elseif ($payment_method == 'paypal') {\n        // Redirect to PayPal or process through their API\n        // ...\n    }\n\n    // For this example, assume payment is successful\n\n    // Save order to database\n    $conn = new PDO(\"mysql:host=localhost;dbname=your_database_name\", \"root\", \"\");\n    \n    try {\n        // Start transaction\n        $conn->beginTransaction();\n\n        // Insert into orders table\n        $stmt = $conn->prepare('INSERT INTO orders (user_id, total_amount, payment_method, status) VALUES (?, ?, ?, ?)');\n        $order_id = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 0;\n        $result = $stmt->execute([$order_id, $total, $payment_method, 'completed']);\n\n        // Get the new order ID\n        $last_order_id = $conn->lastInsertId();\n\n        // Insert each item into order_items table\n        foreach ($_SESSION['cart'] as $product) {\n            $stmt = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)');\n            $result = $stmt->execute([$last_order_id, $product['id'], $product['quantity'], $product['price']]);\n        }\n\n        // Commit transaction\n        $conn->commit();\n\n        // Clear the cart\n        unset($_SESSION['cart']);\n\n        header(\"Location: thank_you.php?order_id=\" . $last_order_id);\n    } catch (PDOException $e) {\n        // Rollback transaction in case of error\n        $conn->rollBack();\n        echo \"Error processing your order: \" . $e->getMessage();\n    }\n} else {\n    header(\"Location: index.php\");\n}\n```", "```php\n<?php\n// thank_you.php\n\nsession_start();\n\n$order_id = $_GET['order_id'] ?? null;\n$total = isset($_SESSION['cart']) ? array_sum(array_map(function($item) { return $item['price'] * $item['quantity']; }, $_SESSION['cart'])) : 0;\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Thank You</title>\n</head>\n<body>\n    <h1>Thank You for Your Order!</h1>\n    \n    <?php if ($order_id && isset($_GET['total'])): ?>\n        <p>Your order ID is: <?php echo $order_id; ?></p>\n        <p>Total amount: $<?php echo number_format($total, 2); ?></p>\n        <p>We will send you an email confirmation shortly.</p>\n    <?php else: ?>\n        <p>There was an error processing your order. Please try again.</p>\n    <?php endif; ?>\n\n</body>\n</html>\n```"]}
