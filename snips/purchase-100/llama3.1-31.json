{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a simple purchase cart functionality in PHP:\n\n**cart.php**\n```php\n<?php\n\n// Initialize session\nsession_start();\n\n// Check if cart is empty\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addItemToCart($productId, $productName, $price) {\n    // Get current quantity of product in cart\n    $quantity = isset($_SESSION['cart'][$productId]) ? $_SESSION['cart'][$productId]['quantity'] : 0;\n    \n    // Update quantity of product in cart\n    $_SESSION['cart'][$productId] = array(\n        'name' => $productName,\n        'price' => $price,\n        'quantity' => $quantity + 1\n    );\n}\n\n// Function to update quantity of item in cart\nfunction updateItemInCart($productId, $newQuantity) {\n    // Update quantity of product in cart\n    $_SESSION['cart'][$productId]['quantity'] = $newQuantity;\n}\n\n// Function to remove item from cart\nfunction removeItemFromCart($productId) {\n    // Remove product from cart\n    unset($_SESSION['cart'][$productId]);\n}\n\n// Function to calculate total cost of items in cart\nfunction calculateTotalCost() {\n    // Initialize total cost\n    $totalCost = 0;\n    \n    // Loop through each item in cart\n    foreach ($_SESSION['cart'] as $item) {\n        // Add product price times quantity to total cost\n        $totalCost += $item['price'] * $item['quantity'];\n    }\n    \n    return $totalCost;\n}\n\n// Function to display contents of cart\nfunction displayCart() {\n    // Get current cart contents\n    $cartContents = $_SESSION['cart'];\n    \n    // Display cart contents\n    echo \"Cart Contents:\\n\";\n    foreach ($cartContents as $productId => $item) {\n        echo \"$item[name] x $item[quantity] = $\" . number_format($item['price'] * $item['quantity'], 2) . \"\\n\";\n    }\n    \n    // Display total cost\n    echo \"Total Cost: $\" . number_format(calculateTotalCost(), 2) . \"\\n\\n\";\n}\n\n// Add item to cart if form submitted\nif (isset($_POST['add'])) {\n    addItemToCart($_POST['productId'], $_POST['productName'], $_POST['price']);\n} elseif (isset($_POST['update'])) {\n    updateItemInCart($_POST['productId'], $_POST['newQuantity']);\n} elseif (isset($_POST['remove'])) {\n    removeItemFromCart($_POST['productId']);\n}\n\n// Display cart contents\ndisplayCart();\n\n?>\n```\n**cart-form.html**\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Shopping Cart</title>\n</head>\n<body>\n\n<form action=\"cart.php\" method=\"post\">\n    <label for=\"productId\">Product ID:</label>\n    <input type=\"text\" id=\"productId\" name=\"productId\"><br><br>\n    <label for=\"productName\">Product Name:</label>\n    <input type=\"text\" id=\"productName\" name=\"productName\"><br><br>\n    <label for=\"price\">Price:</label>\n    <input type=\"number\" step=\".01\" id=\"price\" name=\"price\"><br><br>\n    <button type=\"submit\" name=\"add\">Add to Cart</button>\n</form>\n\n<form action=\"cart.php\" method=\"post\">\n    <label for=\"productIdUpdate\">Product ID:</label>\n    <input type=\"text\" id=\"productIdUpdate\" name=\"productIdUpdate\"><br><br>\n    <label for=\"newQuantity\">New Quantity:</label>\n    <input type=\"number\" step=\".01\" id=\"newQuantity\" name=\"newQuantity\"><br><br>\n    <button type=\"submit\" name=\"update\">Update Quantity</button>\n</form>\n\n<form action=\"cart.php\" method=\"post\">\n    <label for=\"productIdRemove\">Product ID:</label>\n    <input type=\"text\" id=\"productIdRemove\" name=\"productIdRemove\"><br><br>\n    <button type=\"submit\" name=\"remove\">Remove from Cart</button>\n</form>\n\n<!-- Display cart contents -->\n<?php displayCart(); ?>\n\n</body>\n</html>\n```\nThis code provides a basic shopping cart functionality that allows users to add, update, and remove items from their cart. The `cart.php` file handles all the logic for adding, updating, and removing items from the cart, while the `cart-form.html` file provides the HTML form for submitting requests to the server.\n\nTo use this code, simply create two files: `cart.php` and `cart-form.html`, and upload them to your web server. Open `cart-form.html` in a web browser to access the shopping cart interface.\n\nNote that this is a very basic implementation of a shopping cart and does not include any error checking or validation. You may want to add additional features, such as displaying item quantities, allowing users to edit product names and prices, and implementing payment processing.", "code_blocks": ["```php\n<?php\n\n// Initialize session\nsession_start();\n\n// Check if cart is empty\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addItemToCart($productId, $productName, $price) {\n    // Get current quantity of product in cart\n    $quantity = isset($_SESSION['cart'][$productId]) ? $_SESSION['cart'][$productId]['quantity'] : 0;\n    \n    // Update quantity of product in cart\n    $_SESSION['cart'][$productId] = array(\n        'name' => $productName,\n        'price' => $price,\n        'quantity' => $quantity + 1\n    );\n}\n\n// Function to update quantity of item in cart\nfunction updateItemInCart($productId, $newQuantity) {\n    // Update quantity of product in cart\n    $_SESSION['cart'][$productId]['quantity'] = $newQuantity;\n}\n\n// Function to remove item from cart\nfunction removeItemFromCart($productId) {\n    // Remove product from cart\n    unset($_SESSION['cart'][$productId]);\n}\n\n// Function to calculate total cost of items in cart\nfunction calculateTotalCost() {\n    // Initialize total cost\n    $totalCost = 0;\n    \n    // Loop through each item in cart\n    foreach ($_SESSION['cart'] as $item) {\n        // Add product price times quantity to total cost\n        $totalCost += $item['price'] * $item['quantity'];\n    }\n    \n    return $totalCost;\n}\n\n// Function to display contents of cart\nfunction displayCart() {\n    // Get current cart contents\n    $cartContents = $_SESSION['cart'];\n    \n    // Display cart contents\n    echo \"Cart Contents:\\n\";\n    foreach ($cartContents as $productId => $item) {\n        echo \"$item[name] x $item[quantity] = $\" . number_format($item['price'] * $item['quantity'], 2) . \"\\n\";\n    }\n    \n    // Display total cost\n    echo \"Total Cost: $\" . number_format(calculateTotalCost(), 2) . \"\\n\\n\";\n}\n\n// Add item to cart if form submitted\nif (isset($_POST['add'])) {\n    addItemToCart($_POST['productId'], $_POST['productName'], $_POST['price']);\n} elseif (isset($_POST['update'])) {\n    updateItemInCart($_POST['productId'], $_POST['newQuantity']);\n} elseif (isset($_POST['remove'])) {\n    removeItemFromCart($_POST['productId']);\n}\n\n// Display cart contents\ndisplayCart();\n\n?>\n```", null]}
