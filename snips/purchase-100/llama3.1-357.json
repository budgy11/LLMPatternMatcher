{"prompt": "Create a purchase functionality using php", "llm_output": "**Purchase Functionality in PHP**\n=====================================\n\nIn this example, we will create a simple purchase functionality using PHP. We will include user authentication, product listing, and order processing.\n\n**Database Schema**\n-------------------\n\nWe assume you have the following database schema:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  total DECIMAL(10,2) NOT NULL,\n  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT NOT NULL,\n  product_id INT NOT NULL,\n  quantity INT NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**Models**\n----------\n\nWe will create the following models:\n\n```php\n// user.php\nclass User {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function login($username, $password) {\n    $stmt = $this->db->prepare(\"SELECT * FROM users WHERE username=:username AND password=:password\");\n    $stmt->execute(array('username' => $username, 'password' => $password));\n    return $stmt->fetch();\n  }\n}\n\n// product.php\nclass Product {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function getAll() {\n    $stmt = $this->db->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    return $stmt->fetchAll();\n  }\n}\n\n// order.php\nclass Order {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function create($user_id, $products) {\n    $total = 0;\n    foreach ($products as $product) {\n      $total += $product['price'] * $product['quantity'];\n    }\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, total) VALUES (:user_id, :total)\");\n    $stmt->execute(array('user_id' => $user_id, 'total' => $total));\n    $order_id = $this->db->lastInsertId();\n    foreach ($products as $product) {\n      $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:order_id, :product_id, :quantity)\");\n      $stmt->execute(array('order_id' => $order_id, 'product_id' => $product['id'], 'quantity' => $product['quantity']));\n    }\n  }\n\n  public function getOrderByUser($user_id) {\n    $stmt = $this->db->prepare(\"SELECT * FROM orders WHERE user_id=:user_id\");\n    $stmt->execute(array('user_id' => $user_id));\n    return $stmt->fetch();\n  }\n}\n```\n\n**Controllers**\n-------------\n\nWe will create the following controllers:\n\n```php\n// login.php\nclass LoginController {\n  private $user;\n\n  public function __construct($user) {\n    $this->user = $user;\n  }\n\n  public function handleRequest() {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    $user = $this->user->login($username, $password);\n    if ($user) {\n      // login successful\n      session_start();\n      $_SESSION['user_id'] = $user['id'];\n      header('Location: /products');\n      exit;\n    } else {\n      // login failed\n      echo 'Invalid username or password';\n    }\n  }\n}\n\n// products.php\nclass ProductsController {\n  private $product;\n\n  public function __construct($product) {\n    $this->product = $product;\n  }\n\n  public function handleRequest() {\n    $products = $this->product->getAll();\n    include_once 'views/products.php';\n  }\n}\n\n// checkout.php\nclass CheckoutController {\n  private $order;\n\n  public function __construct($order) {\n    $this->order = $order;\n  }\n\n  public function handleRequest() {\n    if (isset($_SESSION['user_id'])) {\n      // user is logged in\n      $products = array();\n      foreach ($_POST['products'] as $product) {\n        $products[] = array(\n          'id' => $product,\n          'price' => $_POST['prices'][$product],\n          'quantity' => $_POST['quantities'][$product]\n        );\n      }\n      $this->order->create($_SESSION['user_id'], $products);\n      header('Location: /orders');\n      exit;\n    } else {\n      // user is not logged in\n      echo 'Please login to checkout';\n    }\n  }\n}\n```\n\n**Views**\n--------\n\nWe will create the following views:\n\n```php\n// products.php\n<h1>Products</h1>\n<ul>\n  <?php foreach ($products as $product): ?>\n    <li>\n      <?= $product['name'] ?> (<?= $product['price'] ?>)\n      <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"id[]\" value=\"<?= $product['id'] ?>\">\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" name=\"quantities[<?= $product['id'] ?>]\">\n        <button type=\"submit\">Add to Cart</button>\n      </form>\n    </li>\n  <?php endforeach; ?>\n</ul>\n\n// orders.php\n<h1>Orders</h1>\n<ul>\n  <?php foreach ($order_items as $item): ?>\n    <li>\n      <?= $item['product_name'] ?> (<?= $item['price'] * $item['quantity'] ?>)\n    </li>\n  <?php endforeach; ?>\n</ul>\n```\n\n**Routes**\n----------\n\nWe will create the following routes:\n\n```php\n// routes.php\n$routes = array(\n  '/' => 'products',\n  '/login' => 'login',\n  '/checkout' => 'checkout'\n);\n```\n\n**Main File**\n-------------\n\nWe will create a main file that includes all the files and sets up the database connection.\n\n```php\n// index.php\nrequire_once 'models/user.php';\nrequire_once 'models/product.php';\nrequire_once 'models/order.php';\n\n$user = new User($db);\n$product = new Product($db);\n$order = new Order($db);\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n  $loginController = new LoginController($user);\n  $loginController->handleRequest();\n} elseif (isset($_GET['action']) && $_GET['action'] == 'products') {\n  $productsController = new ProductsController($product);\n  $productsController->handleRequest();\n} elseif (isset($_POST['id'])) {\n  $checkoutController = new CheckoutController($order);\n  $checkoutController->handleRequest();\n}\n```\n\nThis is a basic example of how you can create a purchase functionality using PHP. You will need to modify the code to fit your specific needs and add more features as required.\n\n**Security Note**\n----------------\n\nPlease note that this is a basic example and does not include any security measures, such as password hashing or CSRF protection. In a real-world application, you should always prioritize security and follow best practices to protect user data and prevent common web vulnerabilities.", "code_blocks": [null, "```php\n// user.php\nclass User {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function login($username, $password) {\n    $stmt = $this->db->prepare(\"SELECT * FROM users WHERE username=:username AND password=:password\");\n    $stmt->execute(array('username' => $username, 'password' => $password));\n    return $stmt->fetch();\n  }\n}\n\n// product.php\nclass Product {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function getAll() {\n    $stmt = $this->db->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    return $stmt->fetchAll();\n  }\n}\n\n// order.php\nclass Order {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function create($user_id, $products) {\n    $total = 0;\n    foreach ($products as $product) {\n      $total += $product['price'] * $product['quantity'];\n    }\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, total) VALUES (:user_id, :total)\");\n    $stmt->execute(array('user_id' => $user_id, 'total' => $total));\n    $order_id = $this->db->lastInsertId();\n    foreach ($products as $product) {\n      $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:order_id, :product_id, :quantity)\");\n      $stmt->execute(array('order_id' => $order_id, 'product_id' => $product['id'], 'quantity' => $product['quantity']));\n    }\n  }\n\n  public function getOrderByUser($user_id) {\n    $stmt = $this->db->prepare(\"SELECT * FROM orders WHERE user_id=:user_id\");\n    $stmt->execute(array('user_id' => $user_id));\n    return $stmt->fetch();\n  }\n}\n```", "```php\n// login.php\nclass LoginController {\n  private $user;\n\n  public function __construct($user) {\n    $this->user = $user;\n  }\n\n  public function handleRequest() {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    $user = $this->user->login($username, $password);\n    if ($user) {\n      // login successful\n      session_start();\n      $_SESSION['user_id'] = $user['id'];\n      header('Location: /products');\n      exit;\n    } else {\n      // login failed\n      echo 'Invalid username or password';\n    }\n  }\n}\n\n// products.php\nclass ProductsController {\n  private $product;\n\n  public function __construct($product) {\n    $this->product = $product;\n  }\n\n  public function handleRequest() {\n    $products = $this->product->getAll();\n    include_once 'views/products.php';\n  }\n}\n\n// checkout.php\nclass CheckoutController {\n  private $order;\n\n  public function __construct($order) {\n    $this->order = $order;\n  }\n\n  public function handleRequest() {\n    if (isset($_SESSION['user_id'])) {\n      // user is logged in\n      $products = array();\n      foreach ($_POST['products'] as $product) {\n        $products[] = array(\n          'id' => $product,\n          'price' => $_POST['prices'][$product],\n          'quantity' => $_POST['quantities'][$product]\n        );\n      }\n      $this->order->create($_SESSION['user_id'], $products);\n      header('Location: /orders');\n      exit;\n    } else {\n      // user is not logged in\n      echo 'Please login to checkout';\n    }\n  }\n}\n```", "```php\n// products.php\n<h1>Products</h1>\n<ul>\n  <?php foreach ($products as $product): ?>\n    <li>\n      <?= $product['name'] ?> (<?= $product['price'] ?>)\n      <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"id[]\" value=\"<?= $product['id'] ?>\">\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" name=\"quantities[<?= $product['id'] ?>]\">\n        <button type=\"submit\">Add to Cart</button>\n      </form>\n    </li>\n  <?php endforeach; ?>\n</ul>\n\n// orders.php\n<h1>Orders</h1>\n<ul>\n  <?php foreach ($order_items as $item): ?>\n    <li>\n      <?= $item['product_name'] ?> (<?= $item['price'] * $item['quantity'] ?>)\n    </li>\n  <?php endforeach; ?>\n</ul>\n```", "```php\n// routes.php\n$routes = array(\n  '/' => 'products',\n  '/login' => 'login',\n  '/checkout' => 'checkout'\n);\n```", "```php\n// index.php\nrequire_once 'models/user.php';\nrequire_once 'models/product.php';\nrequire_once 'models/order.php';\n\n$user = new User($db);\n$product = new Product($db);\n$order = new Order($db);\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n  $loginController = new LoginController($user);\n  $loginController->handleRequest();\n} elseif (isset($_GET['action']) && $_GET['action'] == 'products') {\n  $productsController = new ProductsController($product);\n  $productsController->handleRequest();\n} elseif (isset($_POST['id'])) {\n  $checkoutController = new CheckoutController($order);\n  $checkoutController->handleRequest();\n}\n```"]}
