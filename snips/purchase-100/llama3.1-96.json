{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here's an example of how you can implement a basic purchase cart functionality using PHP. This example includes the following features:\n\n1.  Adding items to the cart\n2.  Removing items from the cart\n3.  Updating the quantity of items in the cart\n4.  Calculating the total cost of the items in the cart\n\n**cart.php**\n\n```php\n<?php\n\nclass Cart {\n    private $items;\n\n    function __construct() {\n        $this->items = array();\n    }\n\n    // Add an item to the cart with a specific quantity\n    function add_item($product_id, $quantity) {\n        if (array_key_exists($product_id, $this->items)) {\n            $this->items[$product_id]['quantity'] += $quantity;\n        } else {\n            $this->items[$product_id] = array(\n                'product_name' => $_SESSION['products'][$product_id]['name'],\n                'price' => $_SESSION['products'][$product_id]['price'],\n                'quantity' => $quantity\n            );\n        }\n    }\n\n    // Remove an item from the cart\n    function remove_item($product_id) {\n        if (array_key_exists($product_id, $this->items)) {\n            unset($this->items[$product_id]);\n        }\n    }\n\n    // Update the quantity of an item in the cart\n    function update_quantity($product_id, $quantity) {\n        if (array_key_exists($product_id, $this->items)) {\n            $this->items[$product_id]['quantity'] = max(1, min($quantity, 1000));\n        }\n    }\n\n    // Calculate the total cost of items in the cart\n    function calculate_total() {\n        $total = 0;\n        foreach ($this->items as $item) {\n            $total += $item['price'] * $item['quantity'];\n        }\n        return $total;\n    }\n\n    // Display the contents of the cart\n    function display_cart() {\n        ?>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price per unit</th>\n                <th>Total Price</th>\n            </tr>\n        <?php\n        foreach ($this->items as $item) { ?>\n            <tr>\n                <td><?= $item['product_name'] ?></td>\n                <td><?= $item['quantity'] ?></td>\n                <td><?= number_format($item['price'], 2) ?></td>\n                <td><?= number_format($item['price'] * $item['quantity'], 2) ?></td>\n            </tr>\n        <?php } ?>\n            <tr>\n                <th>Total</th>\n                <th colspan=\"3\"><?= number_format($this->calculate_total(), 2) ?></th>\n            </tr>\n        </table>\n        <?php\n    }\n}\n\n// Initialize the cart and display it\n$cart = new Cart();\nif (isset($_SESSION['products'])) {\n    $cart->display_cart();\n}\n?>\n```\n\n**index.php**\n\n```php\n<?php\nrequire_once 'cart.php';\n\n// Mock products data\n$_SESSION['products'] = array(\n    1 => array('name' => 'Product 1', 'price' => 9.99),\n    2 => array('name' => 'Product 2', 'price' => 19.99)\n);\n\n// Handle form submission to add items to the cart\nif (isset($_POST['add'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    $cart->add_item($product_id, $quantity);\n}\n\n// Display the cart and forms to add or remove items\n?>\n<form action=\"\" method=\"post\">\n    <select name=\"product_id\" id=\"product-id\">\n        <?php foreach ($_SESSION['products'] as $id => $product) { ?>\n            <option value=\"<?= $id ?>\"><?= $product['name'] ?></option>\n        <?php } ?>\n    </select>\n    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"1000\">\n    <button type=\"submit\" name=\"add\">Add to Cart</button>\n</form>\n\n<?= $cart->display_cart() ?>\n\n<form action=\"\" method=\"post\">\n    <select name=\"product_id\" id=\"remove-product-id\">\n        <?php foreach ($cart->items as $id => $item) { ?>\n            <option value=\"<?= $id ?>\"><?= $item['product_name'] ?></option>\n        <?php } ?>\n    </select>\n    <button type=\"submit\" name=\"remove\">Remove from Cart</button>\n</form>\n\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"update_product_id\" value=\"\">\n    <input type=\"number\" name=\"new_quantity\" min=\"1\" max=\"1000\">\n    <button type=\"submit\" name=\"update\">Update Quantity</button>\n</form>\n```\n\nThis example demonstrates how you can implement a basic purchase cart functionality using PHP. It includes the following features:\n\n*   The ability to add products to the cart with specific quantities\n*   The ability to remove products from the cart\n*   The ability to update the quantity of products in the cart\n*   The calculation of the total cost of items in the cart\n\nPlease note that this is a simplified example and you should consider implementing additional features such as:\n\n*   Authentication and authorization\n*   Secure payment processing\n*   Error handling and logging\n*   Data validation and sanitization\n*   Caching and performance optimization", "code_blocks": ["```php\n<?php\n\nclass Cart {\n    private $items;\n\n    function __construct() {\n        $this->items = array();\n    }\n\n    // Add an item to the cart with a specific quantity\n    function add_item($product_id, $quantity) {\n        if (array_key_exists($product_id, $this->items)) {\n            $this->items[$product_id]['quantity'] += $quantity;\n        } else {\n            $this->items[$product_id] = array(\n                'product_name' => $_SESSION['products'][$product_id]['name'],\n                'price' => $_SESSION['products'][$product_id]['price'],\n                'quantity' => $quantity\n            );\n        }\n    }\n\n    // Remove an item from the cart\n    function remove_item($product_id) {\n        if (array_key_exists($product_id, $this->items)) {\n            unset($this->items[$product_id]);\n        }\n    }\n\n    // Update the quantity of an item in the cart\n    function update_quantity($product_id, $quantity) {\n        if (array_key_exists($product_id, $this->items)) {\n            $this->items[$product_id]['quantity'] = max(1, min($quantity, 1000));\n        }\n    }\n\n    // Calculate the total cost of items in the cart\n    function calculate_total() {\n        $total = 0;\n        foreach ($this->items as $item) {\n            $total += $item['price'] * $item['quantity'];\n        }\n        return $total;\n    }\n\n    // Display the contents of the cart\n    function display_cart() {\n        ?>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price per unit</th>\n                <th>Total Price</th>\n            </tr>\n        <?php\n        foreach ($this->items as $item) { ?>\n            <tr>\n                <td><?= $item['product_name'] ?></td>\n                <td><?= $item['quantity'] ?></td>\n                <td><?= number_format($item['price'], 2) ?></td>\n                <td><?= number_format($item['price'] * $item['quantity'], 2) ?></td>\n            </tr>\n        <?php } ?>\n            <tr>\n                <th>Total</th>\n                <th colspan=\"3\"><?= number_format($this->calculate_total(), 2) ?></th>\n            </tr>\n        </table>\n        <?php\n    }\n}\n\n// Initialize the cart and display it\n$cart = new Cart();\nif (isset($_SESSION['products'])) {\n    $cart->display_cart();\n}\n?>\n```", "```php\n<?php\nrequire_once 'cart.php';\n\n// Mock products data\n$_SESSION['products'] = array(\n    1 => array('name' => 'Product 1', 'price' => 9.99),\n    2 => array('name' => 'Product 2', 'price' => 19.99)\n);\n\n// Handle form submission to add items to the cart\nif (isset($_POST['add'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    $cart->add_item($product_id, $quantity);\n}\n\n// Display the cart and forms to add or remove items\n?>\n<form action=\"\" method=\"post\">\n    <select name=\"product_id\" id=\"product-id\">\n        <?php foreach ($_SESSION['products'] as $id => $product) { ?>\n            <option value=\"<?= $id ?>\"><?= $product['name'] ?></option>\n        <?php } ?>\n    </select>\n    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"1000\">\n    <button type=\"submit\" name=\"add\">Add to Cart</button>\n</form>\n\n<?= $cart->display_cart() ?>\n\n<form action=\"\" method=\"post\">\n    <select name=\"product_id\" id=\"remove-product-id\">\n        <?php foreach ($cart->items as $id => $item) { ?>\n            <option value=\"<?= $id ?>\"><?= $item['product_name'] ?></option>\n        <?php } ?>\n    </select>\n    <button type=\"submit\" name=\"remove\">Remove from Cart</button>\n</form>\n\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"update_product_id\" value=\"\">\n    <input type=\"number\" name=\"new_quantity\" min=\"1\" max=\"1000\">\n    <button type=\"submit\" name=\"update\">Update Quantity</button>\n</form>\n```"]}
