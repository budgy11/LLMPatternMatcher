{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP. This code includes the following features:\n\n1. User login and registration\n2. Viewing products and adding to cart\n3. Viewing cart contents and updating quantities\n4. Checking out and making a payment (using Stripe for payment processing)\n\n**Note:** This is just an example, you should adjust it according to your specific requirements and database schema.\n\n**Files:**\n\n1. `config.php`: Database connection settings\n2. `login.php`: User login functionality\n3. `register.php`: User registration functionality\n4. `products.php`: Displaying products and adding to cart\n5. `cart.php`: Viewing cart contents and updating quantities\n6. `checkout.php`: Checking out and making a payment\n\n**config.php**\n```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_database_username';\n$password = 'your_database_password';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n```\n**login.php**\n```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n        $user = $stmt->fetch();\n        if (password_verify($password, $user['password'])) {\n            // Login successful\n            $_SESSION['user_id'] = $user['id'];\n            header('Location: products.php');\n            exit;\n        }\n    } else {\n        echo 'Invalid email or password';\n    }\n}\n?>\n```\n**register.php**\n```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    $query = \"INSERT INTO users (email, password) VALUES (:email, :password)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashed_password);\n    $stmt->execute();\n\n    echo 'Registration successful';\n}\n?>\n```\n**products.php**\n```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\n$query = \"SELECT * FROM products\";\n$stmt = $conn->prepare($query);\n$stmt->execute();\n$products = $stmt->fetchAll();\n\nif (isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Add product to cart\n    $cart_query = \"INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)\";\n    $cart_stmt = $conn->prepare($cart_query);\n    $cart_stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $cart_stmt->bindParam(':product_id', $product_id);\n    $cart_stmt->bindParam(':quantity', $quantity);\n    $cart_stmt->execute();\n}\n\n?>\n\n<!-- Display products -->\n<h1>Products</h1>\n<ul>\n    <?php foreach ($products as $product) { ?>\n        <li>\n            <a href=\"#\" class=\"add_to_cart\" data-product-id=\"<?php echo $product['id']; ?>\">\n                <?php echo $product['name']; ?>\n            </a>\n            <span>Price: <?php echo $product['price']; ?></span>\n        </li>\n    <?php } ?>\n</ul>\n\n<!-- Cart form -->\n<form action=\"cart.php\" method=\"post\">\n    <input type=\"hidden\" name=\"add_to_cart\" value=\"1\">\n    <!-- Product ID and quantity fields will be generated dynamically -->\n</form>\n```\n**cart.php**\n```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\n$query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n$stmt = $conn->prepare($query);\n$stmt->bindParam(':user_id', $_SESSION['user_id']);\n$stmt->execute();\n$cart_contents = $stmt->fetchAll();\n\nif (isset($_POST['update_cart'])) {\n    // Update cart quantities\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    $query = \"UPDATE cart SET quantity = :quantity WHERE product_id = :product_id AND user_id = :user_id\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->execute();\n}\n\n?>\n\n<!-- Display cart contents -->\n<h1>Cart Contents</h1>\n<ul>\n    <?php foreach ($cart_contents as $item) { ?>\n        <li>\n            <span><?php echo $item['name']; ?></span>\n            <input type=\"number\" name=\"quantity\" value=\"<?php echo $item['quantity']; ?>\">\n            <button class=\"update_cart\" data-product-id=\"<?php echo $item['product_id']; ?>\">Update</button>\n        </li>\n    <?php } ?>\n</ul>\n\n<!-- Update cart form -->\n<form action=\"cart.php\" method=\"post\">\n    <!-- Product ID and quantity fields will be generated dynamically -->\n    <input type=\"hidden\" name=\"update_cart\" value=\"1\">\n</form>\n```\n**checkout.php**\n```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\n// Stripe API settings\n$stripe_secret_key = 'your_stripe_secret_key';\n$stripe_publishable_key = 'your_stripe_publishable_key';\n\nif (isset($_POST['place_order'])) {\n    // Get cart contents\n    $cart_query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n    $stmt = $conn->prepare($cart_query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->execute();\n    $cart_contents = $stmt->fetchAll();\n\n    // Calculate total\n    $total = 0;\n    foreach ($cart_contents as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n\n    // Charge customer using Stripe API\n    $stripe_charges_api_key = 'your_stripe_charges_api_key';\n    $charge = \\Stripe\\Charge::create([\n        'amount' => $total,\n        'currency' => 'usd',\n        'source' => $_POST['token'],\n    ]);\n\n    // Update cart status to paid\n    foreach ($cart_contents as $item) {\n        $update_query = \"UPDATE cart SET status = :status WHERE product_id = :product_id AND user_id = :user_id\";\n        $stmt = $conn->prepare($update_query);\n        $stmt->bindParam(':user_id', $_SESSION['user_id']);\n        $stmt->bindParam(':product_id', $item['product_id']);\n        $stmt->bindParam(':status', 'paid');\n        $stmt->execute();\n    }\n}\n\n?>\n\n<!-- Stripe payment form -->\n<form action=\"checkout.php\" method=\"post\">\n    <input type=\"hidden\" name=\"place_order\" value=\"1\">\n    <!-- Token generated by Stripe will be passed here -->\n</form>\n```\nThis is a basic example, you should adjust it according to your specific requirements and database schema.\n\n**Note:** This code uses the `Stripe` API for payment processing. You need to replace the placeholders with your actual Stripe API keys.\n\nAlso, this is just an example, you should ensure that all input fields are sanitized and validated properly to prevent SQL injection attacks.\n\nPlease let me know if you have any questions or need further assistance!", "code_blocks": ["```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_database_username';\n$password = 'your_database_password';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n```", "```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n        $user = $stmt->fetch();\n        if (password_verify($password, $user['password'])) {\n            // Login successful\n            $_SESSION['user_id'] = $user['id'];\n            header('Location: products.php');\n            exit;\n        }\n    } else {\n        echo 'Invalid email or password';\n    }\n}\n?>\n```", "```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    $query = \"INSERT INTO users (email, password) VALUES (:email, :password)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashed_password);\n    $stmt->execute();\n\n    echo 'Registration successful';\n}\n?>\n```", "```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\n$query = \"SELECT * FROM products\";\n$stmt = $conn->prepare($query);\n$stmt->execute();\n$products = $stmt->fetchAll();\n\nif (isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Add product to cart\n    $cart_query = \"INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)\";\n    $cart_stmt = $conn->prepare($cart_query);\n    $cart_stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $cart_stmt->bindParam(':product_id', $product_id);\n    $cart_stmt->bindParam(':quantity', $quantity);\n    $cart_stmt->execute();\n}\n\n?>\n\n<!-- Display products -->\n<h1>Products</h1>\n<ul>\n    <?php foreach ($products as $product) { ?>\n        <li>\n            <a href=\"#\" class=\"add_to_cart\" data-product-id=\"<?php echo $product['id']; ?>\">\n                <?php echo $product['name']; ?>\n            </a>\n            <span>Price: <?php echo $product['price']; ?></span>\n        </li>\n    <?php } ?>\n</ul>\n\n<!-- Cart form -->\n<form action=\"cart.php\" method=\"post\">\n    <input type=\"hidden\" name=\"add_to_cart\" value=\"1\">\n    <!-- Product ID and quantity fields will be generated dynamically -->\n</form>\n```", "```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\n$query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n$stmt = $conn->prepare($query);\n$stmt->bindParam(':user_id', $_SESSION['user_id']);\n$stmt->execute();\n$cart_contents = $stmt->fetchAll();\n\nif (isset($_POST['update_cart'])) {\n    // Update cart quantities\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    $query = \"UPDATE cart SET quantity = :quantity WHERE product_id = :product_id AND user_id = :user_id\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->execute();\n}\n\n?>\n\n<!-- Display cart contents -->\n<h1>Cart Contents</h1>\n<ul>\n    <?php foreach ($cart_contents as $item) { ?>\n        <li>\n            <span><?php echo $item['name']; ?></span>\n            <input type=\"number\" name=\"quantity\" value=\"<?php echo $item['quantity']; ?>\">\n            <button class=\"update_cart\" data-product-id=\"<?php echo $item['product_id']; ?>\">Update</button>\n        </li>\n    <?php } ?>\n</ul>\n\n<!-- Update cart form -->\n<form action=\"cart.php\" method=\"post\">\n    <!-- Product ID and quantity fields will be generated dynamically -->\n    <input type=\"hidden\" name=\"update_cart\" value=\"1\">\n</form>\n```", "```php\n<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nrequire_once 'config.php';\n\n// Stripe API settings\n$stripe_secret_key = 'your_stripe_secret_key';\n$stripe_publishable_key = 'your_stripe_publishable_key';\n\nif (isset($_POST['place_order'])) {\n    // Get cart contents\n    $cart_query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n    $stmt = $conn->prepare($cart_query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->execute();\n    $cart_contents = $stmt->fetchAll();\n\n    // Calculate total\n    $total = 0;\n    foreach ($cart_contents as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n\n    // Charge customer using Stripe API\n    $stripe_charges_api_key = 'your_stripe_charges_api_key';\n    $charge = \\Stripe\\Charge::create([\n        'amount' => $total,\n        'currency' => 'usd',\n        'source' => $_POST['token'],\n    ]);\n\n    // Update cart status to paid\n    foreach ($cart_contents as $item) {\n        $update_query = \"UPDATE cart SET status = :status WHERE product_id = :product_id AND user_id = :user_id\";\n        $stmt = $conn->prepare($update_query);\n        $stmt->bindParam(':user_id', $_SESSION['user_id']);\n        $stmt->bindParam(':product_id', $item['product_id']);\n        $stmt->bindParam(':status', 'paid');\n        $stmt->execute();\n    }\n}\n\n?>\n\n<!-- Stripe payment form -->\n<form action=\"checkout.php\" method=\"post\">\n    <input type=\"hidden\" name=\"place_order\" value=\"1\">\n    <!-- Token generated by Stripe will be passed here -->\n</form>\n```"]}
