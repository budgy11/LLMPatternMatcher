{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a simple purchase functionality in PHP:\n\n**Note:** This is a basic example and does not include any error handling or security measures that would be required for a real-world application.\n\n**Database Schema:**\n\nFor this example, we will assume the following database schema:\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  order_date DATE,\n  total DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n**PHP Code:**\n\n```php\n// Connect to the database\n$mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Function to add a product to the cart\nfunction add_product_to_cart($product_id, $quantity) {\n  global $mysqli;\n  $query = \"INSERT INTO order_items (order_id, product_id, quantity)\n            VALUES (NULL, ?, ?)\";\n  $stmt = $mysqli->prepare($query);\n  $stmt->bind_param(\"ii\", $product_id, $quantity);\n  $result = $stmt->execute();\n  if ($result) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to checkout\nfunction checkout() {\n  global $mysqli;\n  // Get the cart contents\n  $query = \"SELECT oi.order_id, p.name, oi.quantity\n            FROM order_items oi\n            INNER JOIN products p ON oi.product_id = p.id\";\n  $stmt = $mysqli->prepare($query);\n  $result = $stmt->execute();\n  $cart_contents = array();\n  while ($row = $stmt->get_result()->fetch_assoc()) {\n    $cart_contents[] = array(\n      \"order_id\" => $row[\"order_id\"],\n      \"name\" => $row[\"name\"],\n      \"quantity\" => $row[\"quantity\"]\n    );\n  }\n\n  // Create a new order\n  $query = \"INSERT INTO orders (customer_name, order_date, total)\n            VALUES (?, ?, ?)\";\n  $stmt = $mysqli->prepare($query);\n  $stmt->bind_param(\"sss\", $_SESSION[\"username\"], date(\"Y-m-d\"), array_sum(array_column($cart_contents, \"quantity\")) * array_sum(array_column($cart_contents, \"quantity\")));\n  $result = $stmt->execute();\n  if ($result) {\n    // Assign the order ID to each item in the cart\n    foreach ($cart_contents as &$item) {\n      $query = \"UPDATE order_items SET order_id = ?\n                WHERE id = ?\";\n      $stmt = $mysqli->prepare($query);\n      $stmt->bind_param(\"ii\", $item[\"order_id\"], $item[\"id\"]);\n      $result = $stmt->execute();\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to purchase a product\nfunction purchase_product($product_id, $quantity) {\n  global $mysqli;\n  // Add the product to the cart\n  if (add_product_to_cart($product_id, $quantity)) {\n    // Proceed to checkout\n    if (checkout()) {\n      return true; // Order created successfully\n    } else {\n      return false; // Error creating order\n    }\n  } else {\n    return false; // Error adding product to cart\n  }\n}\n```\n**Example Use Case:**\n\n```php\n// Assume we have a user logged in with the username \"john\"\n$_SESSION[\"username\"] = \"john\";\n\n// Purchase a product\n$purchased = purchase_product(1, 2); // Product ID 1, quantity 2\n\nif ($purchased) {\n  echo \"Order created successfully!\";\n} else {\n  echo \"Error creating order.\";\n}\n```\nThis code assumes that the user is logged in and has a session with their username. It uses prepared statements to prevent SQL injection attacks.\n\nNote: This is just an example, you should adjust it according to your database schema and requirements. Also, this code does not include any error handling or security measures that would be required for a real-world application.", "code_blocks": [null, "```php\n// Connect to the database\n$mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Function to add a product to the cart\nfunction add_product_to_cart($product_id, $quantity) {\n  global $mysqli;\n  $query = \"INSERT INTO order_items (order_id, product_id, quantity)\n            VALUES (NULL, ?, ?)\";\n  $stmt = $mysqli->prepare($query);\n  $stmt->bind_param(\"ii\", $product_id, $quantity);\n  $result = $stmt->execute();\n  if ($result) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to checkout\nfunction checkout() {\n  global $mysqli;\n  // Get the cart contents\n  $query = \"SELECT oi.order_id, p.name, oi.quantity\n            FROM order_items oi\n            INNER JOIN products p ON oi.product_id = p.id\";\n  $stmt = $mysqli->prepare($query);\n  $result = $stmt->execute();\n  $cart_contents = array();\n  while ($row = $stmt->get_result()->fetch_assoc()) {\n    $cart_contents[] = array(\n      \"order_id\" => $row[\"order_id\"],\n      \"name\" => $row[\"name\"],\n      \"quantity\" => $row[\"quantity\"]\n    );\n  }\n\n  // Create a new order\n  $query = \"INSERT INTO orders (customer_name, order_date, total)\n            VALUES (?, ?, ?)\";\n  $stmt = $mysqli->prepare($query);\n  $stmt->bind_param(\"sss\", $_SESSION[\"username\"], date(\"Y-m-d\"), array_sum(array_column($cart_contents, \"quantity\")) * array_sum(array_column($cart_contents, \"quantity\")));\n  $result = $stmt->execute();\n  if ($result) {\n    // Assign the order ID to each item in the cart\n    foreach ($cart_contents as &$item) {\n      $query = \"UPDATE order_items SET order_id = ?\n                WHERE id = ?\";\n      $stmt = $mysqli->prepare($query);\n      $stmt->bind_param(\"ii\", $item[\"order_id\"], $item[\"id\"]);\n      $result = $stmt->execute();\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to purchase a product\nfunction purchase_product($product_id, $quantity) {\n  global $mysqli;\n  // Add the product to the cart\n  if (add_product_to_cart($product_id, $quantity)) {\n    // Proceed to checkout\n    if (checkout()) {\n      return true; // Order created successfully\n    } else {\n      return false; // Error creating order\n    }\n  } else {\n    return false; // Error adding product to cart\n  }\n}\n```", "```php\n// Assume we have a user logged in with the username \"john\"\n$_SESSION[\"username\"] = \"john\";\n\n// Purchase a product\n$purchased = purchase_product(1, 2); // Product ID 1, quantity 2\n\nif ($purchased) {\n  echo \"Order created successfully!\";\n} else {\n  echo \"Error creating order.\";\n}\n```"]}
