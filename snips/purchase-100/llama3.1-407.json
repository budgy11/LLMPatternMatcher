{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a basic purchase functionality using PHP. This will involve creating forms to input order information, calculating the total cost, and updating a database with the new order.\n\n**Database Schema**\n\nLet's assume we have a simple database schema with two tables: `orders` and `products`.\n\n```sql\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    total DECIMAL(10,2)\n);\n\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10,2)\n);\n```\n\n**PHP Code**\n\nWe'll create a `purchase.php` file that will handle the purchase functionality.\n\n```php\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to calculate total cost\nfunction calculateTotalCost($products) {\n    $total = 0;\n    foreach ($products as $product) {\n        $total += $product['price'] * $product['quantity'];\n    }\n    return $total;\n}\n\n// Function to insert new order into database\nfunction insertOrder($customerName, $email, $products) {\n    // Calculate total cost\n    $totalCost = calculateTotalCost($products);\n\n    // Insert new order into database\n    $sql = \"INSERT INTO orders (customer_name, email, total) VALUES ('$customerName', '$email', '$totalCost')\";\n    if ($conn->query($sql) === TRUE) {\n        echo \"Order inserted successfully!\";\n    } else {\n        echo \"Error: \" . $sql . \"<br>\" . $conn->error;\n    }\n}\n\n// Function to get products from database\nfunction getProducts() {\n    $sql = \"SELECT * FROM products\";\n    return $conn->query($sql)->fetch_all(MYSQLI_ASSOC);\n}\n\n// Get products from database\n$products = getProducts();\n\n?>\n\n<!-- Display products and form -->\n<h1>Purchase Products</h1>\n\n<form action=\"\" method=\"post\">\n    <?php foreach ($products as $product): ?>\n        <p>\n            <?= $product['name'] ?> (<?= $product['price'] ?>)\n            <input type=\"number\" name=\"quantity[]\" value=\"1\">\n            <button type=\"button\" onclick=\"addProduct(<?= $product['id'] ?>)\">Add to Cart</button>\n        </p>\n    <?php endforeach; ?>\n    <h2>Total: <?= calculateTotalCost($products) ?></h2>\n    <input type=\"hidden\" name=\"customer_name\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\">\n    <button type=\"submit\">Purchase</button>\n</form>\n\n<script>\nfunction addProduct(id) {\n    // Get the current cart quantity\n    var cart = <?= json_encode($products) ?>;\n    for (var i = 0; i < cart.length; i++) {\n        if (cart[i].id == id) {\n            cart[i].quantity++;\n            break;\n        }\n    }\n    \n    // Update total cost\n    var totalCost = calculateTotalCost(cart);\n    \n    // Display updated quantity and total cost\n    document.getElementById(\"total\").innerHTML = \"Total: \" + totalCost;\n}\n</script>\n```\n\n**How it Works**\n\n1. The `purchase.php` file connects to the database using PHP's built-in `mysqli` extension.\n2. It defines three functions: `calculateTotalCost`, which calculates the total cost of an order; `insertOrder`, which inserts a new order into the database; and `getProducts`, which retrieves all products from the database.\n3. The page displays each product with its price, along with a quantity input field and an \"Add to Cart\" button. When clicked, this button calls the `addProduct` function in JavaScript, which updates the cart quantity for that specific product.\n4. As each product is added to the cart, the total cost is automatically updated using the `calculateTotalCost` function.\n5. Once all products have been selected and the total cost has been calculated, the user can submit the form, which triggers the `insertOrder` function to insert a new order into the database.\n\nNote that this is just a basic example and may require modifications to fit your specific needs. You should also ensure proper security measures are in place to prevent SQL injection attacks.", "code_blocks": [null, "```php\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to calculate total cost\nfunction calculateTotalCost($products) {\n    $total = 0;\n    foreach ($products as $product) {\n        $total += $product['price'] * $product['quantity'];\n    }\n    return $total;\n}\n\n// Function to insert new order into database\nfunction insertOrder($customerName, $email, $products) {\n    // Calculate total cost\n    $totalCost = calculateTotalCost($products);\n\n    // Insert new order into database\n    $sql = \"INSERT INTO orders (customer_name, email, total) VALUES ('$customerName', '$email', '$totalCost')\";\n    if ($conn->query($sql) === TRUE) {\n        echo \"Order inserted successfully!\";\n    } else {\n        echo \"Error: \" . $sql . \"<br>\" . $conn->error;\n    }\n}\n\n// Function to get products from database\nfunction getProducts() {\n    $sql = \"SELECT * FROM products\";\n    return $conn->query($sql)->fetch_all(MYSQLI_ASSOC);\n}\n\n// Get products from database\n$products = getProducts();\n\n?>\n\n<!-- Display products and form -->\n<h1>Purchase Products</h1>\n\n<form action=\"\" method=\"post\">\n    <?php foreach ($products as $product): ?>\n        <p>\n            <?= $product['name'] ?> (<?= $product['price'] ?>)\n            <input type=\"number\" name=\"quantity[]\" value=\"1\">\n            <button type=\"button\" onclick=\"addProduct(<?= $product['id'] ?>)\">Add to Cart</button>\n        </p>\n    <?php endforeach; ?>\n    <h2>Total: <?= calculateTotalCost($products) ?></h2>\n    <input type=\"hidden\" name=\"customer_name\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\">\n    <button type=\"submit\">Purchase</button>\n</form>\n\n<script>\nfunction addProduct(id) {\n    // Get the current cart quantity\n    var cart = <?= json_encode($products) ?>;\n    for (var i = 0; i < cart.length; i++) {\n        if (cart[i].id == id) {\n            cart[i].quantity++;\n            break;\n        }\n    }\n    \n    // Update total cost\n    var totalCost = calculateTotalCost(cart);\n    \n    // Display updated quantity and total cost\n    document.getElementById(\"total\").innerHTML = \"Total: \" + totalCost;\n}\n</script>\n```"]}
