{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP that includes user authentication and cart management. This example uses sessions to store the user's cart and authentication details.\n\n**Note:** This is a simplified example for demonstration purposes only. In a real-world application, you would want to add more features such as payment gateway integration, order tracking, and error handling.\n\n**Database Schema:**\n\nCreate the following tables in your database:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE carts (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT\n);\n```\n\n**PHP Code:**\n\n```php\n<?php\n\n// Configuration file\nrequire_once 'config.php';\n\n// Function to authenticate a user\nfunction authenticateUser($username, $password) {\n    global $db;\n    \n    // Query database for username and password\n    $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    \n    // Check if user exists\n    if ($stmt->rowCount() > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to add product to cart\nfunction addToCart($productId, $userId) {\n    global $db;\n    \n    // Query database for existing cart entry\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id AND product_id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId);\n    $stmt->bindParam(':product_id', $productId);\n    $stmt->execute();\n    \n    // Check if cart entry already exists\n    if ($stmt->rowCount() > 0) {\n        return true; // Product is already in cart\n    } else {\n        // Insert new cart entry\n        $query = \"INSERT INTO carts (user_id, product_id) VALUES (:user_id, :product_id)\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->execute();\n        \n        return true; // Product added to cart\n    }\n}\n\n// Function to remove product from cart\nfunction removeFromCart($productId, $userId) {\n    global $db;\n    \n    // Query database for existing cart entry\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id AND product_id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId);\n    $stmt->bindParam(':product_id', $productId);\n    $stmt->execute();\n    \n    // Check if cart entry exists\n    if ($stmt->rowCount() > 0) {\n        // Delete cart entry\n        $query = \"DELETE FROM carts WHERE user_id = :user_id AND product_id = :product_id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->execute();\n        \n        return true; // Product removed from cart\n    } else {\n        return false; // Product not found in cart\n    }\n}\n\n// Function to purchase products in cart\nfunction purchaseProducts() {\n    global $db;\n    \n    // Get user ID and cart contents\n    $userId = $_SESSION['user_id'];\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId);\n    $stmt->execute();\n    \n    // Process each product in cart\n    foreach ($stmt as $product) {\n        // Update product stock levels (simulated for simplicity)\n        $query = \"UPDATE products SET stock_level = stock_level - 1 WHERE id = :id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':id', $product['product_id']);\n        $stmt->execute();\n        \n        // Remove product from cart\n        removeFromCart($product['product_id'], $userId);\n    }\n}\n\n// Check for user authentication\nif (isset($_SESSION['user_id'])) {\n    // User is authenticated, allow them to view their cart\n    echo \"Welcome, \" . $_SESSION['username'] . \"! Your cart contains:<br>\";\n    \n    // Get products in cart and display them\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->execute();\n    \n    foreach ($stmt as $product) {\n        echo $product['name'] . \" (ID: \" . $product['id'] . \") - Price: $\" . number_format($product['price'], 2) . \"<br>\";\n    }\n    \n    // Allow user to purchase products in cart\n    if (isset($_POST['purchase'])) {\n        purchaseProducts();\n        echo \"Order processed successfully!\";\n    }\n} else {\n    // User is not authenticated, prompt them to log in\n    echo \"You must log in to view your cart. Please click the link below to log in:<br>\";\n    \n    // Provide login form\n    if (isset($_POST['login'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n        \n        // Attempt to authenticate user\n        if (authenticateUser($username, $password)) {\n            // User authenticated successfully, log them in\n            $_SESSION['user_id'] = getUserIdByUsername($username);\n            $_SESSION['username'] = $username;\n            \n            echo \"You are now logged in!\";\n        } else {\n            echo \"Invalid username or password.\";\n        }\n    }\n}\n\n// Function to retrieve user ID by username (simplified)\nfunction getUserIdByUsername($username) {\n    global $db;\n    \n    // Query database for user ID\n    $query = \"SELECT * FROM users WHERE username = :username\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    \n    return $stmt->fetchColumn('id');\n}\n\n?>\n```\n\n**HTML Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase Functionality Example</title>\n</head>\n<body>\n    \n    <!-- Display cart contents -->\n    <?php if (isset($_SESSION['user_id'])) { ?>\n        <h1>Your Cart:</h1>\n        <form action=\"\" method=\"post\">\n            <input type=\"submit\" name=\"purchase\" value=\"Purchase Products in Cart\"/>\n        </form>\n        \n        <!-- Display products in cart -->\n        <?php foreach ($products as $product) { ?>\n            <p><?= $product['name'] ?> (ID: <?= $product['id'] ?>) - Price: $$<?= number_format($product['price'], 2) ?></p>\n        <?php } ?>\n    <?php } else { ?>\n        \n        <!-- Provide login form -->\n        <h1>Login:</h1>\n        <form action=\"\" method=\"post\">\n            <label for=\"username\">Username:</label>\n            <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n            <input type=\"submit\" name=\"login\" value=\"Login\">\n        </form>\n    <?php } ?>\n    \n</body>\n</html>\n```\n\nThis example demonstrates basic user authentication and cart management using PHP. However, this is a simplified example for demonstration purposes only and should not be used in production without proper error handling and security measures.\n\nIn a real-world application, you would want to add more features such as:\n\n*   Payment gateway integration (e.g., PayPal, Stripe)\n*   Order tracking and status updates\n*   Error handling and logging\n*   Security measures (e.g., encryption, secure password storage)\n*   User registration and account management\n\nRemember to always follow best practices for coding security and maintainability.", "code_blocks": [null, "```php\n<?php\n\n// Configuration file\nrequire_once 'config.php';\n\n// Function to authenticate a user\nfunction authenticateUser($username, $password) {\n    global $db;\n    \n    // Query database for username and password\n    $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    \n    // Check if user exists\n    if ($stmt->rowCount() > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to add product to cart\nfunction addToCart($productId, $userId) {\n    global $db;\n    \n    // Query database for existing cart entry\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id AND product_id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId);\n    $stmt->bindParam(':product_id', $productId);\n    $stmt->execute();\n    \n    // Check if cart entry already exists\n    if ($stmt->rowCount() > 0) {\n        return true; // Product is already in cart\n    } else {\n        // Insert new cart entry\n        $query = \"INSERT INTO carts (user_id, product_id) VALUES (:user_id, :product_id)\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->execute();\n        \n        return true; // Product added to cart\n    }\n}\n\n// Function to remove product from cart\nfunction removeFromCart($productId, $userId) {\n    global $db;\n    \n    // Query database for existing cart entry\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id AND product_id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId);\n    $stmt->bindParam(':product_id', $productId);\n    $stmt->execute();\n    \n    // Check if cart entry exists\n    if ($stmt->rowCount() > 0) {\n        // Delete cart entry\n        $query = \"DELETE FROM carts WHERE user_id = :user_id AND product_id = :product_id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->execute();\n        \n        return true; // Product removed from cart\n    } else {\n        return false; // Product not found in cart\n    }\n}\n\n// Function to purchase products in cart\nfunction purchaseProducts() {\n    global $db;\n    \n    // Get user ID and cart contents\n    $userId = $_SESSION['user_id'];\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId);\n    $stmt->execute();\n    \n    // Process each product in cart\n    foreach ($stmt as $product) {\n        // Update product stock levels (simulated for simplicity)\n        $query = \"UPDATE products SET stock_level = stock_level - 1 WHERE id = :id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':id', $product['product_id']);\n        $stmt->execute();\n        \n        // Remove product from cart\n        removeFromCart($product['product_id'], $userId);\n    }\n}\n\n// Check for user authentication\nif (isset($_SESSION['user_id'])) {\n    // User is authenticated, allow them to view their cart\n    echo \"Welcome, \" . $_SESSION['username'] . \"! Your cart contains:<br>\";\n    \n    // Get products in cart and display them\n    $query = \"SELECT * FROM carts WHERE user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->execute();\n    \n    foreach ($stmt as $product) {\n        echo $product['name'] . \" (ID: \" . $product['id'] . \") - Price: $\" . number_format($product['price'], 2) . \"<br>\";\n    }\n    \n    // Allow user to purchase products in cart\n    if (isset($_POST['purchase'])) {\n        purchaseProducts();\n        echo \"Order processed successfully!\";\n    }\n} else {\n    // User is not authenticated, prompt them to log in\n    echo \"You must log in to view your cart. Please click the link below to log in:<br>\";\n    \n    // Provide login form\n    if (isset($_POST['login'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n        \n        // Attempt to authenticate user\n        if (authenticateUser($username, $password)) {\n            // User authenticated successfully, log them in\n            $_SESSION['user_id'] = getUserIdByUsername($username);\n            $_SESSION['username'] = $username;\n            \n            echo \"You are now logged in!\";\n        } else {\n            echo \"Invalid username or password.\";\n        }\n    }\n}\n\n// Function to retrieve user ID by username (simplified)\nfunction getUserIdByUsername($username) {\n    global $db;\n    \n    // Query database for user ID\n    $query = \"SELECT * FROM users WHERE username = :username\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    \n    return $stmt->fetchColumn('id');\n}\n\n?>\n```", null]}
