{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality in PHP, including the following features:\n\n* User registration and login\n* Product listing and details\n* Adding products to cart\n* Viewing cart contents\n* Checking out with payment processing (simulated)\n\n**Note:** This is a simplified example for demonstration purposes only. You should not use this code as-is in production without proper security measures, such as encryption, input validation, and error handling.\n\n**Database schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(50),\n  password VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(100),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE cart (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_id INT\n);\n```\n**PHP Code:**\n\n**`config.php`:**\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'store';\n$username = 'root';\n$password = '';\n\n// Set timezone\ndate_default_timezone_set('UTC');\n\n?>\n```\n\n**`register.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Hash password (using md5 for simplicity)\n  $hashedPassword = md5($password);\n\n  $sql = \"INSERT INTO users (username, password) VALUES (:username, :password)\";\n  $stmt = $pdo->prepare($sql);\n  $stmt->execute([':username' => $username, ':password' => $hashedPassword]);\n\n  header('Location: login.php');\n  exit;\n}\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Register</title>\n</head>\n<body>\n\n<h1>Register</h1>\n\n<form method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\">Register</button>\n</form>\n\n</body>\n</html>\n```\n\n**`login.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Hash password (using md5 for simplicity)\n  $hashedPassword = md5($password);\n\n  $sql = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n  $stmt = $pdo->prepare($sql);\n  $stmt->execute([':username' => $username, ':password' => $hashedPassword]);\n\n  $user = $stmt->fetch();\n\n  if ($user) {\n    $_SESSION['logged_in'] = true;\n    header('Location: products.php');\n    exit;\n  } else {\n    echo 'Invalid username or password';\n  }\n}\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Login</title>\n</head>\n<body>\n\n<h1>Login</h1>\n\n<form method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\">Login</button>\n</form>\n\n</body>\n</html>\n```\n\n**`products.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\n\n$sql = \"SELECT * FROM products\";\n$stmt = $pdo->prepare($sql);\n$stmt->execute();\n\n$products = $stmt->fetchAll();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Products</title>\n</head>\n<body>\n\n<h1>Products</h1>\n\n<ul>\n  <?php foreach ($products as $product) { ?>\n    <li>\n      <?= $product['name'] ?> (<?= $product['price'] ?>)\n      <button onclick=\"addProduct(<?= $product['id'] ?>)\">Add to Cart</button>\n    </li>\n  <?php } ?>\n</ul>\n\n<script>\nfunction addProduct(id) {\n  var cart = JSON.parse(localStorage.getItem('cart')) || [];\n  cart.push({ id: id });\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n</script>\n\n</body>\n</html>\n```\n\n**`cart.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $product_id = $_POST['product_id'];\n\n  // Simulate payment processing (in a real app, you'd use a payment gateway)\n  echo \"Payment processed successfully!\";\n}\n\n$sql = \"SELECT * FROM cart WHERE user_id = :user_id\";\n$stmt = $pdo->prepare($sql);\n$stmt->execute([':user_id' => $_SESSION['logged_in']]);\n\n$cart = $stmt->fetchAll();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Cart</title>\n</head>\n<body>\n\n<h1>Cart</h1>\n\n<ul>\n  <?php foreach ($cart as $item) { ?>\n    <li>\n      <?= $item['product_id'] ?> (<?= $product['price'] ?>)\n      <button onclick=\"removeItem(<?= $item['id'] ?>)\">Remove from Cart</button>\n    </li>\n  <?php } ?>\n</ul>\n\n<form method=\"post\">\n  <label for=\"product_id\">Product ID:</label>\n  <input type=\"text\" name=\"product_id\"><br><br>\n  <button type=\"submit\">Checkout</button>\n</form>\n\n<script>\nfunction removeItem(id) {\n  var cart = JSON.parse(localStorage.getItem('cart')) || [];\n  cart.splice(cart.findIndex(item => item.id === id), 1);\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n</script>\n\n</body>\n</html>\n```\n\nThis example demonstrates a basic purchase functionality, including user registration and login, product listing, adding products to cart, viewing cart contents, and checking out with simulated payment processing. Note that this is a simplified example and you should not use it as-is in production without proper security measures.\n\n**Commit message:**\n`feat: added purchase functionality using PHP`\n\nThis commit message follows the conventional commit format, indicating that the changes introduce a new feature (purchase functionality) using PHP code.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'store';\n$username = 'root';\n$password = '';\n\n// Set timezone\ndate_default_timezone_set('UTC');\n\n?>\n```", "```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Hash password (using md5 for simplicity)\n  $hashedPassword = md5($password);\n\n  $sql = \"INSERT INTO users (username, password) VALUES (:username, :password)\";\n  $stmt = $pdo->prepare($sql);\n  $stmt->execute([':username' => $username, ':password' => $hashedPassword]);\n\n  header('Location: login.php');\n  exit;\n}\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Register</title>\n</head>\n<body>\n\n<h1>Register</h1>\n\n<form method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\">Register</button>\n</form>\n\n</body>\n</html>\n```", "```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Hash password (using md5 for simplicity)\n  $hashedPassword = md5($password);\n\n  $sql = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n  $stmt = $pdo->prepare($sql);\n  $stmt->execute([':username' => $username, ':password' => $hashedPassword]);\n\n  $user = $stmt->fetch();\n\n  if ($user) {\n    $_SESSION['logged_in'] = true;\n    header('Location: products.php');\n    exit;\n  } else {\n    echo 'Invalid username or password';\n  }\n}\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Login</title>\n</head>\n<body>\n\n<h1>Login</h1>\n\n<form method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\">Login</button>\n</form>\n\n</body>\n</html>\n```", "```php\n<?php\n\nrequire_once 'config.php';\n\n$sql = \"SELECT * FROM products\";\n$stmt = $pdo->prepare($sql);\n$stmt->execute();\n\n$products = $stmt->fetchAll();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Products</title>\n</head>\n<body>\n\n<h1>Products</h1>\n\n<ul>\n  <?php foreach ($products as $product) { ?>\n    <li>\n      <?= $product['name'] ?> (<?= $product['price'] ?>)\n      <button onclick=\"addProduct(<?= $product['id'] ?>)\">Add to Cart</button>\n    </li>\n  <?php } ?>\n</ul>\n\n<script>\nfunction addProduct(id) {\n  var cart = JSON.parse(localStorage.getItem('cart')) || [];\n  cart.push({ id: id });\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n</script>\n\n</body>\n</html>\n```", "```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $product_id = $_POST['product_id'];\n\n  // Simulate payment processing (in a real app, you'd use a payment gateway)\n  echo \"Payment processed successfully!\";\n}\n\n$sql = \"SELECT * FROM cart WHERE user_id = :user_id\";\n$stmt = $pdo->prepare($sql);\n$stmt->execute([':user_id' => $_SESSION['logged_in']]);\n\n$cart = $stmt->fetchAll();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Cart</title>\n</head>\n<body>\n\n<h1>Cart</h1>\n\n<ul>\n  <?php foreach ($cart as $item) { ?>\n    <li>\n      <?= $item['product_id'] ?> (<?= $product['price'] ?>)\n      <button onclick=\"removeItem(<?= $item['id'] ?>)\">Remove from Cart</button>\n    </li>\n  <?php } ?>\n</ul>\n\n<form method=\"post\">\n  <label for=\"product_id\">Product ID:</label>\n  <input type=\"text\" name=\"product_id\"><br><br>\n  <button type=\"submit\">Checkout</button>\n</form>\n\n<script>\nfunction removeItem(id) {\n  var cart = JSON.parse(localStorage.getItem('cart')) || [];\n  cart.splice(cart.findIndex(item => item.id === id), 1);\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n</script>\n\n</body>\n</html>\n```"]}
