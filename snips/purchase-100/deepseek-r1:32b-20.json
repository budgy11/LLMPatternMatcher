{"prompt": "Create a purchase cart functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase cart functionality using PHP. Let me think about how to approach this.\n\nFirst, I know that a shopping cart allows users to add products and manage them before checkout. So, the main features should include adding items, viewing the cart, updating quantities, and deleting items.\n\nI'll start by setting up the database. I'll need two tables: one for products and another for the cart. The products table will have details like id, name, price, description, and image path. The cart table will track each user's items with their session ID or user ID, product ID, quantity, and timestamps.\n\nNext, I should create a configuration file to connect to the database. This keeps things organized and makes it easier to change settings later.\n\nNow, for the functions. I'll need CRUD operations: add, read, update, delete. Adding items will check if an item is already in the cart; if so, it updates the quantity. Reading will fetch all items in the user's cart. Updating allows changing quantities, and deleting removes items.\n\nHandling sessions is important. Since users can be anonymous, using session IDs makes sense. I'll start a session at the beginning of each script to ensure the session ID is available for database operations.\n\nFor the front end, I'll create an index page listing all products with add buttons. The cart page will display selected items and options to update or delete them. I should use HTML forms for submitting quantities and handle errors gracefully, like when a user tries to update without entering a number.\n\nSecurity is a concern. I need to prevent SQL injection by using prepared statements in my queries. Also, ensuring that form inputs are validated before processing can help avoid issues.\n\nTesting each part as I go will be crucial. For example, after setting up the product table, I'll test adding products and displaying them on the index page. Then, I'll check if items are correctly added to the cart, quantities update properly, and deletions work without errors.\n\nI should also consider user experience. Clear messages when items are added or removed, and ensuring that the cart updates reflect changes immediately can enhance usability.\n\nFinally, I'll outline how to use the system: installing dependencies like Bootstrap for styling, setting up the database, creating product entries, and then accessing the application through a browser. This ensures others can replicate the setup easily.\n\nThroughout this process, I need to make sure that all parts are integrated smoothly. For example, when a user adds an item from the index page, it should reflect in their cart without issues. Handling edge cases, like trying to add a product not present in the database, is also important to prevent errors.\n\nI might encounter challenges, such as session management across pages or ensuring that the cart persists correctly. Testing each function step by step will help identify and fix these issues early on.\n\nIn summary, my approach involves setting up the database structure, creating essential functions for cart operations, designing user interfaces for adding and managing items, ensuring security measures are in place, and thoroughly testing each component to ensure everything works together seamlessly.\n</think>\n\nHere is a comprehensive example of how to create a purchase cart functionality using PHP:\n\n### Step 1: Set Up Database\n\nCreate two tables in your database: one for products and one for the shopping cart.\n\n```sql\nCREATE TABLE `products` (\n    `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n    `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\n    `price` decimal(8,2) unsigned NOT NULL DEFAULT '0.00',\n    `description` text COLLATE utf8_unicode_ci,\n    `image` varchar(255) COLLATE utf8_unicode_ci,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;\n\nCREATE TABLE `cart` (\n    `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n    `session_id` char(36) NOT NULL,\n    `product_id` int(10) unsigned NOT NULL,\n    `quantity` int(10) unsigned NOT NULL DEFAULT '1',\n    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    PRIMARY KEY (`id`),\n    KEY `products_id_idx` (`product_id`),\n    CONSTRAINT `cart_ibfk_1` FOREIGN KEY (`product_id`) REFERENCES `products` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;\n```\n\n### Step 2: Create a Database Configuration File\n\nCreate a file named `config.php`:\n\n```php\n<?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"shopping_cart\";\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    // Set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n```\n\n### Step 3: Create Functions for Cart Operations\n\nCreate a file named `functions.php`:\n\n```php\n<?php\nrequire_once 'config.php';\n\n// Add product to cart\nfunction add_to_cart($product_id, $quantity = 1) {\n    global $conn;\n    \n    session_start();\n    $session_id = session_id();\n\n    try {\n        // Check if the item already exists in the cart\n        $stmt = $conn->prepare(\"SELECT * FROM cart WHERE product_id = ? AND session_id = ?\");\n        $stmt->execute([$product_id, $session_id]);\n        \n        if ($stmt->rowCount() > 0) {\n            // Update quantity\n            $currentQuantity = $stmt->fetch()['quantity'];\n            $newQuantity = $currentQuantity + $quantity;\n            update_cart_item($product_id, $session_id, $newQuantity);\n        } else {\n            // Insert new item\n            $stmt = $conn->prepare(\"INSERT INTO cart (session_id, product_id, quantity) VALUES (?, ?, ?)\");\n            $stmt->execute([$session_id, $product_id, $quantity]);\n        }\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n\n// Update quantity of a product in the cart\nfunction update_cart_item($product_id, $session_id, $new_quantity) {\n    global $conn;\n    \n    try {\n        $stmt = $conn->prepare(\"UPDATE cart SET quantity = ? WHERE product_id = ? AND session_id = ?\");\n        $stmt->execute([$new_quantity, $product_id, $session_id]);\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n\n// Get all items from the cart\nfunction get_cart_items() {\n    global $conn;\n    \n    session_start();\n    $session_id = session_id();\n\n    try {\n        $stmt = $conn->prepare(\"SELECT c.*, p.name, p.price, p.image FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?\");\n        $stmt->execute([$session_id]);\n        \n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n\n// Delete an item from the cart\nfunction delete_cart_item($item_id) {\n    global $conn;\n    \n    try {\n        $stmt = $conn->prepare(\"DELETE FROM cart WHERE id = ?\");\n        $stmt->execute([$item_id]);\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n?>\n```\n\n### Step 4: Create Product Display Page (index.php)\n\n```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    <h1>Products</h1>\n    \n    <?php\n    $stmt = $conn->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n    \n    foreach ($products as $product) {\n        echo \"\n            <div class='col-md-4'>\n                <div class='thumbnail'>\n                    <img src='{$product['image']}' alt='{$product['name']}'>\n                    <div class='caption'>\n                        <h3>{$product['name']}</h3>\n                        <p>{$product['description']}</p>\n                        <p>\\${$product['price']}</p>\n                        <a href='?action=add&id={$product['id']}' class='btn btn-primary'>Add to Cart</a>\n                    </div>\n                </div>\n            </div>\";\n    }\n    ?>\n\n    <br><br>\n    <a href=\"cart.php\" class=\"btn btn-success\">View Cart</a>\n</div>\n\n<?php\nif (isset($_GET['action']) && $_GET['action'] == 'add' && isset($_GET['id'])) {\n    add_to_cart($_GET['id'], 1);\n}\n?>\n\n</body>\n</html>\n```\n\n### Step 5: Create Cart Page (cart.php)\n\n```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    <h1>Your Shopping Cart</h1>\n    \n    <?php\n    $cart_items = get_cart_items();\n    \n    if (count($cart_items) > 0) {\n        echo \"\n            <table class='table table-bordered'>\n                <thead>\n                    <tr>\n                        <th>Product Name</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\";\n        \n        $total = 0;\n        foreach ($cart_items as $item) {\n            $product_price = $item['price'];\n            $total += $product_price * $item['quantity'];\n            \n            echo \"\n                <tr>\n                    <td>{$item['name']}</td>\n                    <td>\\${$item['price']}</td>\n                    <td>\n                        <form method='post' action='update_cart.php'>\n                            <input type='hidden' name='id' value='{$item['id']}'>\n                            <input type='number' name='quantity' min='1' value='{$item['quantity']}' style='width: 50px;'>\n                            <button type='submit' class='btn btn-default'>Update</button>\n                        </form>\n                    </td>\n                    <td>\\${$product_price * $item['quantity']}</td>\n                    <td>\n                        <a href='delete_cart.php?id={$item['id']}' class='btn btn-danger'>Delete</a>\n                    </td>\n                </tr>\";\n        }\n        \n        echo \"\n                </tbody>\n                <tfoot>\n                    <tr>\n                        <td colspan='4' style='text-align: right;'>Total:</td>\n                        <td>\\${$total}</td>\n                    </tr>\n                </tfoot>\n            </table>\";\n    } else {\n        echo \"<p>Your cart is empty!</p>\";\n    }\n    ?>\n    \n    <?php\n    if (count($cart_items) > 0) {\n        echo \"<a href='checkout.php' class='btn btn-success'>Checkout</a>\";\n    }\n    ?>\n    \n    <br><br>\n    <a href=\"index.php\" class=\"btn btn-primary\">Continue Shopping</a>\n</div>\n\n</body>\n</html>\n```\n\n### Step 6: Create Update Cart Page (update_cart.php)\n\n```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    if (isset($_POST['id']) && isset($_POST['quantity'])) {\n        $item_id = $_POST['id'];\n        $new_quantity = $_POST['quantity'];\n        \n        update_cart_item($item_id, session_id(), $new_quantity);\n    }\n    \n    header(\"Location: cart.php\");\n    exit();\n}\n?>\n```\n\n### Step 7: Create Delete Cart Page (delete_cart.php)\n\n```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n\nif (isset($_GET['id'])) {\n    delete_cart_item($_GET['id']);\n}\n\nheader(\"Location: cart.php\");\nexit();\n?>\n```\n\n### Step 8: Create Checkout Page (checkout.php)\n\n```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    <h1>Checkout</h1>\n    \n    <?php\n    $cart_items = get_cart_items();\n    if (count($cart_items) == 0) {\n        header(\"Location: index.php\");\n        exit();\n    }\n    \n    echo \"\n        <div class='col-md-6'>\n            <h3>Shipping Information</h3>\n            <form action='process_checkout.php' method='post'>\n                <div class='form-group'>\n                    <label>Name:</label>\n                    <input type='text' name='name' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>Address:</label>\n                    <input type='text' name='address' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>City:</label>\n                    <input type='text' name='city' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>State:</label>\n                    <input type='text' name='state' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>Zip Code:</label>\n                    <input type='number' name='zip_code' class='form-control' required>\n                </div>\n                <button type='submit' class='btn btn-success'>Complete Checkout</button>\n            </form>\n        </div>\n    \";\n    ?>\n    \n    <div class='col-md-6'>\n        <h3>Order Summary</h3>\n        <?php\n        $total = 0;\n        foreach ($cart_items as $item) {\n            $product_price = $item['price'];\n            $total += $product_price * $item['quantity'];\n            \n            echo \"\n                <div class='row'>\n                    <div class='col-md-8'>{$item['name']}</div>\n                    <div class='col-md-4'>\\${$product_price * $item['quantity']}</div>\n                </div>\";\n        }\n        ?>\n        \n        <div class='row total'>\n            <div class='col-md-8' style='text-align: right;'><strong>Total:</strong></div>\n            <div class='col-md-4'><strong>\\${$total}</strong></div>\n        </div>\n    </div>\n\n</div>\n\n</body>\n</html>\n```\n\n### Step 9: Create Process Checkout Page (process_checkout.php)\n\n```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $name = $_POST['name'];\n    $address = $_POST['address'];\n    $city = $_POST['city'];\n    $state = $_POST['state'];\n    $zip_code = $_POST['zip_code'];\n    \n    // Here you would typically process the payment and save the order\n    // For this example, we'll just empty the cart and display a success message\n    \n    // Empty the cart\n    $session_id = session_id();\n    try {\n        $stmt = $conn->prepare(\"DELETE FROM cart WHERE session_id = ?\");\n        $stmt->execute([$session_id]);\n        \n        echo \"<h1>Thank you for your order!</h1>\";\n        echo \"<p>Your order has been processed successfully.</p>\";\n        echo \"<a href='index.php' class='btn btn-primary'>Continue Shopping</a>\";\n    } catch(PDOException $e) {\n        die(\"Error processing your order: \" . $e->getMessage());\n    }\n}\n?>\n```\n\n### How to Use:\n\n1. First, create a database named `shopping_cart` and run the SQL queries to create tables.\n2. Add some products to the `products` table using PHPMyAdmin or any other database management tool.\n3. Upload all these files to your web server (Apache with PHP installed).\n4. Visit `index.php` in your browser.\n\nThis is a basic implementation of a shopping cart system. You can extend it further by adding features like user authentication, payment processing, order history, etc.\n\nNote: Make sure to secure your application properly in production, including using HTTPS and implementing proper security measures against SQL injection (though we're using prepared statements here), XSS attacks, etc.", "code_blocks": [null, "```php\n<?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"shopping_cart\";\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    // Set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\n// Add product to cart\nfunction add_to_cart($product_id, $quantity = 1) {\n    global $conn;\n    \n    session_start();\n    $session_id = session_id();\n\n    try {\n        // Check if the item already exists in the cart\n        $stmt = $conn->prepare(\"SELECT * FROM cart WHERE product_id = ? AND session_id = ?\");\n        $stmt->execute([$product_id, $session_id]);\n        \n        if ($stmt->rowCount() > 0) {\n            // Update quantity\n            $currentQuantity = $stmt->fetch()['quantity'];\n            $newQuantity = $currentQuantity + $quantity;\n            update_cart_item($product_id, $session_id, $newQuantity);\n        } else {\n            // Insert new item\n            $stmt = $conn->prepare(\"INSERT INTO cart (session_id, product_id, quantity) VALUES (?, ?, ?)\");\n            $stmt->execute([$session_id, $product_id, $quantity]);\n        }\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n\n// Update quantity of a product in the cart\nfunction update_cart_item($product_id, $session_id, $new_quantity) {\n    global $conn;\n    \n    try {\n        $stmt = $conn->prepare(\"UPDATE cart SET quantity = ? WHERE product_id = ? AND session_id = ?\");\n        $stmt->execute([$new_quantity, $product_id, $session_id]);\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n\n// Get all items from the cart\nfunction get_cart_items() {\n    global $conn;\n    \n    session_start();\n    $session_id = session_id();\n\n    try {\n        $stmt = $conn->prepare(\"SELECT c.*, p.name, p.price, p.image FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?\");\n        $stmt->execute([$session_id]);\n        \n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n\n// Delete an item from the cart\nfunction delete_cart_item($item_id) {\n    global $conn;\n    \n    try {\n        $stmt = $conn->prepare(\"DELETE FROM cart WHERE id = ?\");\n        $stmt->execute([$item_id]);\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    <h1>Products</h1>\n    \n    <?php\n    $stmt = $conn->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n    \n    foreach ($products as $product) {\n        echo \"\n            <div class='col-md-4'>\n                <div class='thumbnail'>\n                    <img src='{$product['image']}' alt='{$product['name']}'>\n                    <div class='caption'>\n                        <h3>{$product['name']}</h3>\n                        <p>{$product['description']}</p>\n                        <p>\\${$product['price']}</p>\n                        <a href='?action=add&id={$product['id']}' class='btn btn-primary'>Add to Cart</a>\n                    </div>\n                </div>\n            </div>\";\n    }\n    ?>\n\n    <br><br>\n    <a href=\"cart.php\" class=\"btn btn-success\">View Cart</a>\n</div>\n\n<?php\nif (isset($_GET['action']) && $_GET['action'] == 'add' && isset($_GET['id'])) {\n    add_to_cart($_GET['id'], 1);\n}\n?>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    <h1>Your Shopping Cart</h1>\n    \n    <?php\n    $cart_items = get_cart_items();\n    \n    if (count($cart_items) > 0) {\n        echo \"\n            <table class='table table-bordered'>\n                <thead>\n                    <tr>\n                        <th>Product Name</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\";\n        \n        $total = 0;\n        foreach ($cart_items as $item) {\n            $product_price = $item['price'];\n            $total += $product_price * $item['quantity'];\n            \n            echo \"\n                <tr>\n                    <td>{$item['name']}</td>\n                    <td>\\${$item['price']}</td>\n                    <td>\n                        <form method='post' action='update_cart.php'>\n                            <input type='hidden' name='id' value='{$item['id']}'>\n                            <input type='number' name='quantity' min='1' value='{$item['quantity']}' style='width: 50px;'>\n                            <button type='submit' class='btn btn-default'>Update</button>\n                        </form>\n                    </td>\n                    <td>\\${$product_price * $item['quantity']}</td>\n                    <td>\n                        <a href='delete_cart.php?id={$item['id']}' class='btn btn-danger'>Delete</a>\n                    </td>\n                </tr>\";\n        }\n        \n        echo \"\n                </tbody>\n                <tfoot>\n                    <tr>\n                        <td colspan='4' style='text-align: right;'>Total:</td>\n                        <td>\\${$total}</td>\n                    </tr>\n                </tfoot>\n            </table>\";\n    } else {\n        echo \"<p>Your cart is empty!</p>\";\n    }\n    ?>\n    \n    <?php\n    if (count($cart_items) > 0) {\n        echo \"<a href='checkout.php' class='btn btn-success'>Checkout</a>\";\n    }\n    ?>\n    \n    <br><br>\n    <a href=\"index.php\" class=\"btn btn-primary\">Continue Shopping</a>\n</div>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    if (isset($_POST['id']) && isset($_POST['quantity'])) {\n        $item_id = $_POST['id'];\n        $new_quantity = $_POST['quantity'];\n        \n        update_cart_item($item_id, session_id(), $new_quantity);\n    }\n    \n    header(\"Location: cart.php\");\n    exit();\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n\nif (isset($_GET['id'])) {\n    delete_cart_item($_GET['id']);\n}\n\nheader(\"Location: cart.php\");\nexit();\n?>\n```", "```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    <h1>Checkout</h1>\n    \n    <?php\n    $cart_items = get_cart_items();\n    if (count($cart_items) == 0) {\n        header(\"Location: index.php\");\n        exit();\n    }\n    \n    echo \"\n        <div class='col-md-6'>\n            <h3>Shipping Information</h3>\n            <form action='process_checkout.php' method='post'>\n                <div class='form-group'>\n                    <label>Name:</label>\n                    <input type='text' name='name' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>Address:</label>\n                    <input type='text' name='address' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>City:</label>\n                    <input type='text' name='city' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>State:</label>\n                    <input type='text' name='state' class='form-control' required>\n                </div>\n                <div class='form-group'>\n                    <label>Zip Code:</label>\n                    <input type='number' name='zip_code' class='form-control' required>\n                </div>\n                <button type='submit' class='btn btn-success'>Complete Checkout</button>\n            </form>\n        </div>\n    \";\n    ?>\n    \n    <div class='col-md-6'>\n        <h3>Order Summary</h3>\n        <?php\n        $total = 0;\n        foreach ($cart_items as $item) {\n            $product_price = $item['price'];\n            $total += $product_price * $item['quantity'];\n            \n            echo \"\n                <div class='row'>\n                    <div class='col-md-8'>{$item['name']}</div>\n                    <div class='col-md-4'>\\${$product_price * $item['quantity']}</div>\n                </div>\";\n        }\n        ?>\n        \n        <div class='row total'>\n            <div class='col-md-8' style='text-align: right;'><strong>Total:</strong></div>\n            <div class='col-md-4'><strong>\\${$total}</strong></div>\n        </div>\n    </div>\n\n</div>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nrequire_once 'functions.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $name = $_POST['name'];\n    $address = $_POST['address'];\n    $city = $_POST['city'];\n    $state = $_POST['state'];\n    $zip_code = $_POST['zip_code'];\n    \n    // Here you would typically process the payment and save the order\n    // For this example, we'll just empty the cart and display a success message\n    \n    // Empty the cart\n    $session_id = session_id();\n    try {\n        $stmt = $conn->prepare(\"DELETE FROM cart WHERE session_id = ?\");\n        $stmt->execute([$session_id]);\n        \n        echo \"<h1>Thank you for your order!</h1>\";\n        echo \"<p>Your order has been processed successfully.</p>\";\n        echo \"<a href='index.php' class='btn btn-primary'>Continue Shopping</a>\";\n    } catch(PDOException $e) {\n        die(\"Error processing your order: \" . $e->getMessage());\n    }\n}\n?>\n```"]}
