{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality using PHP, including user input validation and database interaction:\n\n**Note:** This is a basic example and you should adapt it to your specific requirements and security needs.\n\n### Database Setup (MySQL)\n\nFirst, create a `purchases` table in your MySQL database:\n```sql\nCREATE TABLE purchases (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  product_name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10,2)\n);\n```\n### PHP Code (`purchase.php`)\n```php\n<?php\n\n// Database connection settings\n$host = 'your_host';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a new database connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define purchase function\nfunction purchaseProduct() {\n  global $conn;\n  \n  // Get user input values\n  $customerName = $_POST['customer_name'];\n  $productName = $_POST['product_name'];\n  $quantity = (int) $_POST['quantity'];\n  $price = (float) $_POST['price'];\n\n  // Validate user input\n  if (empty($customerName) || empty($productName) || !isset($quantity) || !isset($price)) {\n    echo \"Error: All fields are required.\";\n    return;\n  }\n\n  // Insert purchase data into database\n  $sql = \"INSERT INTO purchases (customer_name, product_name, quantity, price) VALUES (?, ?, ?, ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"ssds\", $customerName, $productName, $quantity, $price);\n\n  if ($stmt->execute()) {\n    echo \"Purchase successful!\";\n  } else {\n    echo \"Error: Purchase failed.\";\n  }\n\n  // Close the database connection\n  $conn->close();\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  purchaseProduct();\n} else {\n  // Display form\n?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"customer_name\">Customer Name:</label>\n  <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n  <label for=\"product_name\">Product Name:</label>\n  <input type=\"text\" id=\"product_name\" name=\"product_name\"><br><br>\n\n  <label for=\"quantity\">Quantity:</label>\n  <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n  <label for=\"price\">Price:</label>\n  <input type=\"number\" step=\"0.01\" id=\"price\" name=\"price\"><br><br>\n\n  <button type=\"submit\" name=\"submit\">Purchase</button>\n</form>\n\n<?php\n}\n\n?>\n```\n### How it works:\n\n1. The form is displayed on the page with input fields for customer name, product name, quantity, and price.\n2. When the user submits the form, the `purchaseProduct()` function is called to process the data.\n3. The function checks if all required fields are filled in (validation).\n4. If the validation passes, the function inserts the purchase data into the database using a prepared statement.\n5. After inserting the data, the connection is closed.\n\nRemember to replace the placeholders (`your_host`, `your_database`, etc.) with your actual database credentials and settings.\n\n**Note:** This example uses MySQL as the database management system. You can adapt it to use other databases (e.g., PostgreSQL) if needed. Additionally, this code does not include any error handling or security measures beyond basic validation.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$host = 'your_host';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a new database connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define purchase function\nfunction purchaseProduct() {\n  global $conn;\n  \n  // Get user input values\n  $customerName = $_POST['customer_name'];\n  $productName = $_POST['product_name'];\n  $quantity = (int) $_POST['quantity'];\n  $price = (float) $_POST['price'];\n\n  // Validate user input\n  if (empty($customerName) || empty($productName) || !isset($quantity) || !isset($price)) {\n    echo \"Error: All fields are required.\";\n    return;\n  }\n\n  // Insert purchase data into database\n  $sql = \"INSERT INTO purchases (customer_name, product_name, quantity, price) VALUES (?, ?, ?, ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"ssds\", $customerName, $productName, $quantity, $price);\n\n  if ($stmt->execute()) {\n    echo \"Purchase successful!\";\n  } else {\n    echo \"Error: Purchase failed.\";\n  }\n\n  // Close the database connection\n  $conn->close();\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  purchaseProduct();\n} else {\n  // Display form\n?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"customer_name\">Customer Name:</label>\n  <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n  <label for=\"product_name\">Product Name:</label>\n  <input type=\"text\" id=\"product_name\" name=\"product_name\"><br><br>\n\n  <label for=\"quantity\">Quantity:</label>\n  <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n  <label for=\"price\">Price:</label>\n  <input type=\"number\" step=\"0.01\" id=\"price\" name=\"price\"><br><br>\n\n  <button type=\"submit\" name=\"submit\">Purchase</button>\n</form>\n\n<?php\n}\n\n?>\n```"]}
