{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Note:** This example assumes that you have already created a database with the necessary tables for users, products, and orders.\n\n**Database Schema:**\n\n* `users`: id (int), name (varchar), email (varchar)\n* `products`: id (int), name (varchar), price (float)\n* `orders`: id (int), user_id (int), product_id (int), date (datetime)\n\n**PHP Code:**\n```php\n<?php\n\n// Connect to database\n$conn = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get products from database\n$query = \"SELECT * FROM products\";\n$result = $conn->query($query);\n\n// Display products on page\nwhile ($row = $result->fetch_assoc()) {\n    echo \"<p>ID: \" . $row[\"id\"] . \", Name: \" . $row[\"name\"] . \", Price: $\" . $row[\"price\"] . \"</p>\";\n}\n\n// Handle form submission\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    // Get product details from database\n    $query = \"SELECT * FROM products WHERE id = '\" . $_POST['product_id'] . \"'\";\n    $result = $conn->query($query);\n    $row = $result->fetch_assoc();\n\n    // Validate input data\n    if ($_POST['quantity'] < 1) {\n        echo \"Error: Quantity must be at least 1.\";\n    } elseif ($_POST['quantity'] > $row[\"stock\"]) {\n        echo \"Error: Not enough stock available for this product.\";\n    } else {\n        // Insert order into database\n        $query = \"INSERT INTO orders (user_id, product_id, quantity) VALUES ('\" . $_SESSION['user_id'] . \"', '\" . $_POST['product_id'] . \"', '\" . $_POST['quantity'] . \"')\";\n        $conn->query($query);\n\n        // Update stock in products table\n        $query = \"UPDATE products SET stock = stock - '\" . $_POST['quantity'] . \"' WHERE id = '\" . $_POST['product_id'] . \"'\";\n        $conn->query($query);\n\n        echo \"Order successful!\";\n    }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```\n\n**HTML/JS Code:**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase Functionality</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <p>Product ID:</p>\n    <input type=\"text\" name=\"product_id\"><br><br>\n    <p>Quantity:</p>\n    <input type=\"number\" name=\"quantity\"><br><br>\n    <input type=\"submit\" value=\"Purchase\">\n</form>\n\n<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n<script>\n    $(document).ready(function() {\n        // Get product details from database and display on page\n        $.ajax({\n            url: \"get_product_details.php\",\n            method: \"GET\",\n            success: function(data) {\n                $(\"#product_info\").html(data);\n            }\n        });\n    });\n</script>\n\n<div id=\"product_info\"></div>\n```\n\n**Note:** This is a basic example and does not include any error handling or validation. In a real-world application, you would want to add more robust security measures to prevent SQL injection attacks.\n\nThis code uses the following techniques:\n\n*   **Database Connection:** The PHP code connects to a MySQL database using `mysqli`.\n*   **Form Handling:** The PHP code handles form submissions and inserts orders into the database.\n*   **AJAX Request:** The JavaScript code uses jQuery to make an AJAX request to retrieve product details from the database.\n\nThis example assumes that you have already created a database with the necessary tables for users, products, and orders. You will need to modify the PHP code to connect to your specific database and create the necessary tables.\n\nPlease note that this is a simplified example and does not include any error handling or validation. In a real-world application, you would want to add more robust security measures to prevent SQL injection attacks and ensure data integrity.", "code_blocks": ["```php\n<?php\n\n// Connect to database\n$conn = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get products from database\n$query = \"SELECT * FROM products\";\n$result = $conn->query($query);\n\n// Display products on page\nwhile ($row = $result->fetch_assoc()) {\n    echo \"<p>ID: \" . $row[\"id\"] . \", Name: \" . $row[\"name\"] . \", Price: $\" . $row[\"price\"] . \"</p>\";\n}\n\n// Handle form submission\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    // Get product details from database\n    $query = \"SELECT * FROM products WHERE id = '\" . $_POST['product_id'] . \"'\";\n    $result = $conn->query($query);\n    $row = $result->fetch_assoc();\n\n    // Validate input data\n    if ($_POST['quantity'] < 1) {\n        echo \"Error: Quantity must be at least 1.\";\n    } elseif ($_POST['quantity'] > $row[\"stock\"]) {\n        echo \"Error: Not enough stock available for this product.\";\n    } else {\n        // Insert order into database\n        $query = \"INSERT INTO orders (user_id, product_id, quantity) VALUES ('\" . $_SESSION['user_id'] . \"', '\" . $_POST['product_id'] . \"', '\" . $_POST['quantity'] . \"')\";\n        $conn->query($query);\n\n        // Update stock in products table\n        $query = \"UPDATE products SET stock = stock - '\" . $_POST['quantity'] . \"' WHERE id = '\" . $_POST['product_id'] . \"'\";\n        $conn->query($query);\n\n        echo \"Order successful!\";\n    }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```", null]}
