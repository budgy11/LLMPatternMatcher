{"prompt": "Create a purchase cart functionality using php", "llm_output": "```php\n<?php\nsession_start();\n\n// Database connection details (replace with your actual credentials)\n$db_host = 'localhost';\n$db_name = 'shop_db';\n$db_user = 'your_username';\n$db_password = 'your_password';\n\n// Function to connect to the database\nfunction connectToDatabase() {\n    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Function to check if a product is in the cart\nfunction isInCart($product_id) {\n    if (isset($_SESSION['cart'][$product_id])) {\n        return true;\n    }\n    return false;\n}\n\n// Function to update the cart\nfunction updateCart($product_id, $quantity) {\n    if (isInCart($product_id)) {\n        $_SESSION['cart'][$product_id] = $quantity;\n    } else {\n        // Add the product to the cart\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\n// Function to get the cart items\nfunction getCartItems() {\n    $cart_items = array();\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product_info = mysqli_fetch_assoc(mysqli_query(connectToDatabase(), \"SELECT * FROM products WHERE id = '$product_id'\"));\n        $cart_items[] = array(\n            'id' => $product_info['id'],\n            'name' => $product_info['name'],\n            'price' => $product_info['price'],\n            'quantity' => $quantity\n        );\n    }\n    return $cart_items;\n}\n\n// Function to calculate the total price\nfunction calculateTotalPrice() {\n    $total = 0;\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product_info = mysqli_fetch_assoc(mysqli_query(connectToDatabase(), \"SELECT * FROM products WHERE id = '$product_id'\"));\n        $total += $product_info['price'] * $quantity;\n    }\n    return $total;\n}\n\n\n// --- Handle Add to Cart Request ---\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    updateCart($product_id, $quantity);\n    // Redirect to the cart page\n    header(\"Location: cart.php\");\n    exit();\n}\n\n// --- Handle Remove from Cart Request ---\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['remove_from_cart'])) {\n    $product_id = $_POST['product_id'];\n    unset($_SESSION['cart'][$product_id]);\n    // Redirect to the cart page\n    header(\"Location: cart.php\");\n    exit();\n}\n\n\n// --- Display Cart Items ---\n$cart_items = getCartItems();\n$total_price = calculateTotalPrice();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <style>\n        table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n        th, td {\n            border: 1px solid black;\n            padding: 8px;\n        }\n    </style>\n</head>\n<body>\n\n<h1>Shopping Cart</h1>\n\n<?php if (empty($cart_items)) {\n    echo \"<p>Your cart is empty.</p>\";\n} else { ?>\n    <table>\n        <thead>\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>\n                        <form action=\"cart.php\" method=\"post\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['id']; ?>\">\n                            <button type=\"submit\" name=\"remove_from_cart\">Remove</button>\n                        </form>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </tbody>\n    </table>\n    <p><strong>Total Price:</strong> $<?php echo number_format($total_price, 2); ?></p>\n<?php } ?>\n\n<br>\n<a href=\"checkout.php\">Checkout</a>\n\n</body>\n</html>\n```\n\nKey improvements and explanations:\n\n* **Clearer Structure:**  The code is now much better organized with functions for each key operation: `connectToDatabase`, `isInCart`, `updateCart`, `getCartItems`, `calculateTotalPrice`. This makes the code easier to read, understand, and maintain.\n* **Database Connection:** Uses `mysqli` for database interaction. *Crucially, this example uses placeholders for your database credentials*.  You **must** replace `'your_username'`, `'your_password'`, `'shop_db'` with your actual values.  This is the most common source of problems when using a database.\n* **Error Handling (Basic):** Includes a very basic `connectToDatabase` function that checks for connection errors and `die()`s if there's a problem.  For a production application, you would want more robust error handling (logging, etc.).\n* **Functions for Cart Operations:**\n    * `isInCart()`: Checks if a product is already in the cart.  This prevents duplicate additions.\n    * `updateCart()`: Adds or updates the quantity of a product in the cart.\n    * `getCartItems()`: Retrieves all items from the cart from the `products` table, formatting them into an array for display.\n    * `calculateTotalPrice()`: Calculates the total price of all items in the cart.\n* **Session Management:**  Uses `session_start()` to manage the cart contents in the user's session.\n* **POST Requests:** The `add_to_cart` and `remove_from_cart` operations are handled using `POST` requests, which is the correct way to submit form data.  The `exit()` call is important to stop further script execution after a successful redirect.\n* **Cart Display:** The cart items are displayed in a table, with the product name, price, quantity, and a \"Remove\" button for each item.\n* **`cart.php` URL:**  The \"Remove\" button's form action points to `cart.php`, which displays the cart contents.\n* **Checkout Link:**  Includes a link to a `checkout.php` page (which you would need to create).\n* **Number Formatting:** Uses `number_format()` to display prices with two decimal places.\n* **Form Submission:** Correctly submits the form data using `method=\"post\"`.\n* **Security:**  While this example is a basic demonstration, *do not use this code directly in a production environment without adding robust security measures*.  This includes:\n    * **Input Validation:** Validate *all* user input (product ID, quantity, etc.) to prevent SQL injection and other vulnerabilities.\n    * **Prepared Statements:** Use prepared statements with parameterized queries to prevent SQL injection.\n    * **CSRF Protection:** Implement CSRF (Cross-Site Request Forgery) protection.\n* **Clearer Comments:** Includes comments to explain the code.\n\n**To use this code:**\n\n1. **Create a Database:** Create a database (e.g., `shop_db`) in your MySQL server.\n2. **Create a `products` Table:**  Create a table named `products` in your database with the following columns:\n   * `id` (INT, PRIMARY KEY, AUTO_INCREMENT)\n   * `name` (VARCHAR)\n   * `price` (DECIMAL)\n3. **Add Products:** Insert some product data into the `products` table.\n4. **Update Database Credentials:** Replace `'your_username'`, `'your_password'`, and `'shop_db'` in the code with your actual database credentials.\n5. **Save the Code:** Save the code as a `.php` file (e.g., `cart.php`).\n6. **Run the Code:**  Place the file in your web server's document root and access it through your web browser.\n\n**Next Steps (Beyond this basic example):**\n\n* **Checkout Page:** Create a `checkout.php` page to handle the checkout process.\n* **Payment Gateway Integration:**  Integrate with a payment gateway (e.g., PayPal, Stripe) to process payments.\n* **Order Management:**  Implement functionality to manage orders (e.g., view order history, update order status).\n* **Advanced Features:**  Consider adding features like:\n    * Product search\n    * User accounts\n    * Reviews and ratings\n    * Coupons and discounts\n\nThis improved version provides a solid foundation for building a more complete e-commerce shopping cart.  Remember to prioritize security and add additional features based on your requirements.\n", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Database connection details (replace with your actual credentials)\n$db_host = 'localhost';\n$db_name = 'shop_db';\n$db_user = 'your_username';\n$db_password = 'your_password';\n\n// Function to connect to the database\nfunction connectToDatabase() {\n    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Function to check if a product is in the cart\nfunction isInCart($product_id) {\n    if (isset($_SESSION['cart'][$product_id])) {\n        return true;\n    }\n    return false;\n}\n\n// Function to update the cart\nfunction updateCart($product_id, $quantity) {\n    if (isInCart($product_id)) {\n        $_SESSION['cart'][$product_id] = $quantity;\n    } else {\n        // Add the product to the cart\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\n// Function to get the cart items\nfunction getCartItems() {\n    $cart_items = array();\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product_info = mysqli_fetch_assoc(mysqli_query(connectToDatabase(), \"SELECT * FROM products WHERE id = '$product_id'\"));\n        $cart_items[] = array(\n            'id' => $product_info['id'],\n            'name' => $product_info['name'],\n            'price' => $product_info['price'],\n            'quantity' => $quantity\n        );\n    }\n    return $cart_items;\n}\n\n// Function to calculate the total price\nfunction calculateTotalPrice() {\n    $total = 0;\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product_info = mysqli_fetch_assoc(mysqli_query(connectToDatabase(), \"SELECT * FROM products WHERE id = '$product_id'\"));\n        $total += $product_info['price'] * $quantity;\n    }\n    return $total;\n}\n\n\n// --- Handle Add to Cart Request ---\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    updateCart($product_id, $quantity);\n    // Redirect to the cart page\n    header(\"Location: cart.php\");\n    exit();\n}\n\n// --- Handle Remove from Cart Request ---\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['remove_from_cart'])) {\n    $product_id = $_POST['product_id'];\n    unset($_SESSION['cart'][$product_id]);\n    // Redirect to the cart page\n    header(\"Location: cart.php\");\n    exit();\n}\n\n\n// --- Display Cart Items ---\n$cart_items = getCartItems();\n$total_price = calculateTotalPrice();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <style>\n        table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n        th, td {\n            border: 1px solid black;\n            padding: 8px;\n        }\n    </style>\n</head>\n<body>\n\n<h1>Shopping Cart</h1>\n\n<?php if (empty($cart_items)) {\n    echo \"<p>Your cart is empty.</p>\";\n} else { ?>\n    <table>\n        <thead>\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>\n                        <form action=\"cart.php\" method=\"post\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['id']; ?>\">\n                            <button type=\"submit\" name=\"remove_from_cart\">Remove</button>\n                        </form>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </tbody>\n    </table>\n    <p><strong>Total Price:</strong> $<?php echo number_format($total_price, 2); ?></p>\n<?php } ?>\n\n<br>\n<a href=\"checkout.php\">Checkout</a>\n\n</body>\n</html>\n```"]}
