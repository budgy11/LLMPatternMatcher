{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP:\n\n**Note:** This example assumes you have already set up a database and a form to collect user information. Also, this is a simplified example and you should consider implementing security measures such as validation, sanitization, and authentication.\n\n**Database Schema:**\n\nLet's assume we have two tables in our database:\n\n1. `orders`:\n\t* `id` (primary key)\n\t* `user_id`\n\t* `product_id`\n\t* `quantity`\n\t* `total_price`\n2. `products`:\n\t* `id` (primary key)\n\t* `name`\n\t* `price`\n\n**PHP Code:**\n\n**index.php**\n```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Process form data\n    $userId = $_POST['user_id'];\n    $productId = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate input\n    if (!isset($userId) || !isset($productId) || !isset($quantity)) {\n        echo 'Error: Invalid input';\n        exit;\n    }\n\n    // Calculate total price\n    $totalPrice = $_POST['price'] * $quantity;\n\n    // Insert order into database\n    $sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total_price)\";\n    $stmt = $pdo->prepare($sql);\n    $stmt->execute([\n        ':user_id' => $userId,\n        ':product_id' => $productId,\n        ':quantity' => $quantity,\n        ':total_price' => $totalPrice\n    ]);\n\n    // Update product stock\n    $sql = \"UPDATE products SET quantity = quantity - :quantity WHERE id = :product_id\";\n    $stmt = $pdo->prepare($sql);\n    $stmt->execute([\n        ':quantity' => $quantity,\n        ':product_id' => $productId\n    ]);\n\n    echo 'Order successful!';\n} else {\n    // Display form\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"user_id\">User ID:</label>\n    <input type=\"text\" id=\"user_id\" name=\"user_id\"><br><br>\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <button type=\"submit\">Place Order</button>\n</form>\n\n<?php\n}\n?>\n```\n**config.php**\n```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database_name';\n\n$pdo = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n```\nThis code assumes you have a form with the following fields:\n\n* `user_id`: user ID\n* `product_id`: product ID\n* `quantity`: quantity\n\nWhen the form is submitted, the PHP script will insert an order into the database and update the product stock.\n\n**Note:** This is a basic example and you should consider implementing additional security measures such as input validation, sanitization, and authentication. Additionally, you may want to add error handling and logging mechanisms to improve the robustness of your application.", "code_blocks": ["```php\n<?php\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Process form data\n    $userId = $_POST['user_id'];\n    $productId = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate input\n    if (!isset($userId) || !isset($productId) || !isset($quantity)) {\n        echo 'Error: Invalid input';\n        exit;\n    }\n\n    // Calculate total price\n    $totalPrice = $_POST['price'] * $quantity;\n\n    // Insert order into database\n    $sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total_price)\";\n    $stmt = $pdo->prepare($sql);\n    $stmt->execute([\n        ':user_id' => $userId,\n        ':product_id' => $productId,\n        ':quantity' => $quantity,\n        ':total_price' => $totalPrice\n    ]);\n\n    // Update product stock\n    $sql = \"UPDATE products SET quantity = quantity - :quantity WHERE id = :product_id\";\n    $stmt = $pdo->prepare($sql);\n    $stmt->execute([\n        ':quantity' => $quantity,\n        ':product_id' => $productId\n    ]);\n\n    echo 'Order successful!';\n} else {\n    // Display form\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"user_id\">User ID:</label>\n    <input type=\"text\" id=\"user_id\" name=\"user_id\"><br><br>\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <button type=\"submit\">Place Order</button>\n</form>\n\n<?php\n}\n?>\n```", "```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database_name';\n\n$pdo = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n```"]}
