{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a simple purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// session variables to store cart contents\n$_SESSION['cart'] = array();\n\n// function to add item to cart\nfunction add_item_to_cart($product_id, $product_name, $price) {\n    global $_SESSION;\n    if (!isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = array(\n            'name' => $product_name,\n            'price' => $price,\n            'quantity' => 1\n        );\n    } else {\n        $_SESSION['cart'][$product_id]['quantity']++;\n    }\n}\n\n// function to update quantity of item in cart\nfunction update_quantity($product_id, $new_quantity) {\n    global $_SESSION;\n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;\n    }\n}\n\n// function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    unset($_SESSION['cart'][$product_id]);\n}\n\n// function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n    global $_SESSION;\n    $total_cost = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total_cost += $item['price'] * $item['quantity'];\n    }\n    return $total_cost;\n}\n\n// function to display contents of cart\nfunction display_cart() {\n    global $_SESSION;\n    echo \"<h2>Cart Contents:</h2>\";\n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        echo \"$item[name] x $item[quantity] = $\" . ($item['price'] * $item['quantity']) . \"<br>\";\n    }\n}\n\n// function to display cart summary\nfunction display_cart_summary() {\n    global $_SESSION;\n    $total_cost = calculate_total_cost();\n    echo \"<h2>Cart Summary:</h2>\";\n    echo \"Total Cost: $\" . $total_cost . \"<br>\";\n    echo \"Number of Items: \" . count($_SESSION['cart']) . \"<br>\";\n}\n?>\n```\n**example usage**\n```php\n// add item to cart\nadd_item_to_cart(1, 'Product A', 10.99);\nadd_item_to_cart(2, 'Product B', 5.99);\n\n// display cart contents\ndisplay_cart();\n\n// update quantity of item in cart\nupdate_quantity(1, 3);\n\n// remove item from cart\nremove_item_from_cart(2);\n\n// display updated cart contents\ndisplay_cart();\n\n// calculate total cost of items in cart\n$total_cost = calculate_total_cost();\necho \"Total Cost: $\" . $total_cost;\n\n// display cart summary\ndisplay_cart_summary();\n```\nThis example demonstrates how to use the functions to add, update and remove items from a cart, as well as calculate the total cost and display the cart contents.\n\nNote that this is a very basic implementation of a shopping cart. In a real-world application you would want to consider adding more features such as:\n\n* Handling multiple products with different variations (e.g., size, color)\n* Implementing discounts or promotions\n* Allowing customers to view their order history and track the status of their orders\n* Integrating payment processing\n\nAlso note that this example uses a simple session-based approach to store the cart contents. In a real-world application you would want to use a more secure method such as using an encryption library or a database to store sensitive information.\n\nI hope this helps! Let me know if you have any questions or need further clarification on any of the code.", "code_blocks": ["```php\n<?php\n// session variables to store cart contents\n$_SESSION['cart'] = array();\n\n// function to add item to cart\nfunction add_item_to_cart($product_id, $product_name, $price) {\n    global $_SESSION;\n    if (!isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = array(\n            'name' => $product_name,\n            'price' => $price,\n            'quantity' => 1\n        );\n    } else {\n        $_SESSION['cart'][$product_id]['quantity']++;\n    }\n}\n\n// function to update quantity of item in cart\nfunction update_quantity($product_id, $new_quantity) {\n    global $_SESSION;\n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;\n    }\n}\n\n// function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    unset($_SESSION['cart'][$product_id]);\n}\n\n// function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n    global $_SESSION;\n    $total_cost = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total_cost += $item['price'] * $item['quantity'];\n    }\n    return $total_cost;\n}\n\n// function to display contents of cart\nfunction display_cart() {\n    global $_SESSION;\n    echo \"<h2>Cart Contents:</h2>\";\n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        echo \"$item[name] x $item[quantity] = $\" . ($item['price'] * $item['quantity']) . \"<br>\";\n    }\n}\n\n// function to display cart summary\nfunction display_cart_summary() {\n    global $_SESSION;\n    $total_cost = calculate_total_cost();\n    echo \"<h2>Cart Summary:</h2>\";\n    echo \"Total Cost: $\" . $total_cost . \"<br>\";\n    echo \"Number of Items: \" . count($_SESSION['cart']) . \"<br>\";\n}\n?>\n```", "```php\n// add item to cart\nadd_item_to_cart(1, 'Product A', 10.99);\nadd_item_to_cart(2, 'Product B', 5.99);\n\n// display cart contents\ndisplay_cart();\n\n// update quantity of item in cart\nupdate_quantity(1, 3);\n\n// remove item from cart\nremove_item_from_cart(2);\n\n// display updated cart contents\ndisplay_cart();\n\n// calculate total cost of items in cart\n$total_cost = calculate_total_cost();\necho \"Total Cost: $\" . $total_cost;\n\n// display cart summary\ndisplay_cart_summary();\n```"]}
