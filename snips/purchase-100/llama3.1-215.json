{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how to create a basic purchase functionality using PHP:\n\n**Note:** This example uses a simple database schema and assumes that you have a table called `orders` with the following columns: `id`, `customer_id`, `order_date`, `total`.\n\n**Database Schema**\n```sql\nCREATE TABLE orders (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total DECIMAL(10,2)\n);\n```\n**PHP Code**\n\nCreate a file called `purchase.php` and add the following code:\n```php\n<?php\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to add a new order\nfunction addOrder($customer_id, $total) {\n  global $conn;\n  $sql = \"INSERT INTO orders (customer_id, order_date, total) VALUES (?, NOW(), ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"ii\", $customer_id, $total);\n  if ($stmt->execute()) {\n    return true; // Order added successfully\n  } else {\n    return false; // Error adding order\n  }\n}\n\n// Function to get the customer's current balance\nfunction getCustomerBalance($customer_id) {\n  global $conn;\n  $sql = \"SELECT total FROM orders WHERE customer_id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $customer_id);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    return $result->fetch_assoc()['total'];\n  } else {\n    return null; // Error retrieving balance\n  }\n}\n\n// Function to update the customer's balance after a purchase\nfunction updateCustomerBalance($customer_id, $amount) {\n  global $conn;\n  $balance = getCustomerBalance($customer_id);\n  if ($balance !== null) {\n    $new_balance = $balance - $amount;\n    $sql = \"UPDATE orders SET total = ? WHERE customer_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"id\", $new_balance, $customer_id);\n    if ($stmt->execute()) {\n      return true; // Balance updated successfully\n    } else {\n      return false; // Error updating balance\n    }\n  } else {\n    return null; // Error retrieving balance\n  }\n}\n\n// Process the purchase\nif (isset($_POST['submit'])) {\n  $customer_id = $_POST['customer_id'];\n  $total = $_POST['total'];\n\n  if ($addOrder($customer_id, $total)) {\n    echo \"Order added successfully!\";\n  } else {\n    echo \"Error adding order.\";\n  }\n}\n\n?>\n```\n**HTML Form**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Functionality</title>\n</head>\n<body>\n\n<form action=\"purchase.php\" method=\"post\">\n  <label for=\"customer_id\">Customer ID:</label>\n  <input type=\"text\" id=\"customer_id\" name=\"customer_id\"><br><br>\n  <label for=\"total\">Total:</label>\n  <input type=\"text\" id=\"total\" name=\"total\"><br><br>\n  <input type=\"submit\" name=\"submit\" value=\"Make Purchase\">\n</form>\n\n<?php echo $error_message; ?>\n\n</body>\n</html>\n```\nThis code creates a simple form that takes in the customer's ID and the total amount of the purchase. When the form is submitted, it calls the `addOrder` function to add a new order to the database. The `getCustomerBalance` function is used to retrieve the customer's current balance before making the purchase, and the `updateCustomerBalance` function is used to update the customer's balance after the purchase.\n\n**Note:** This is just a basic example and you should adapt it to your specific requirements. You may also want to add error checking and handling to make sure that the code works correctly in all scenarios.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to add a new order\nfunction addOrder($customer_id, $total) {\n  global $conn;\n  $sql = \"INSERT INTO orders (customer_id, order_date, total) VALUES (?, NOW(), ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"ii\", $customer_id, $total);\n  if ($stmt->execute()) {\n    return true; // Order added successfully\n  } else {\n    return false; // Error adding order\n  }\n}\n\n// Function to get the customer's current balance\nfunction getCustomerBalance($customer_id) {\n  global $conn;\n  $sql = \"SELECT total FROM orders WHERE customer_id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $customer_id);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    return $result->fetch_assoc()['total'];\n  } else {\n    return null; // Error retrieving balance\n  }\n}\n\n// Function to update the customer's balance after a purchase\nfunction updateCustomerBalance($customer_id, $amount) {\n  global $conn;\n  $balance = getCustomerBalance($customer_id);\n  if ($balance !== null) {\n    $new_balance = $balance - $amount;\n    $sql = \"UPDATE orders SET total = ? WHERE customer_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"id\", $new_balance, $customer_id);\n    if ($stmt->execute()) {\n      return true; // Balance updated successfully\n    } else {\n      return false; // Error updating balance\n    }\n  } else {\n    return null; // Error retrieving balance\n  }\n}\n\n// Process the purchase\nif (isset($_POST['submit'])) {\n  $customer_id = $_POST['customer_id'];\n  $total = $_POST['total'];\n\n  if ($addOrder($customer_id, $total)) {\n    echo \"Order added successfully!\";\n  } else {\n    echo \"Error adding order.\";\n  }\n}\n\n?>\n```", null]}
