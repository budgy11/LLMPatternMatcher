{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Note:** This is just a simple example and does not include any validation, security measures (e.g. authentication, authorization), or payment processing.\n\n**Database Structure**\n\nAssuming you have a database with the following tables:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  user_id INT,\n  order_date DATE,\n  total_cost DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n\n**PHP Code**\n\nCreate a new file `purchase.php` and add the following code:\n```php\n<?php\n\n// Connect to database (replace with your actual database connection)\n$mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($mysqli->connect_error) {\n  die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\n// Get product ID from URL parameter\n$product_id = $_GET['product_id'];\n\n// Validate product ID (replace with actual validation logic)\nif (!is_numeric($product_id)) {\n  echo 'Invalid product ID';\n  exit;\n}\n\n// Retrieve product details\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = $mysqli->query($query);\n\nif ($result->num_rows > 0) {\n  // Product found, proceed with purchase\n  while ($row = $result->fetch_assoc()) {\n    $product_name = $row['name'];\n    $price = $row['price'];\n\n    // Get user's current order (or create new one)\n    $query = \"SELECT * FROM orders WHERE user_id = '\".$_SESSION['user_id'].\"'\";\n    $order_result = $mysqli->query($query);\n\n    if ($order_result->num_rows > 0) {\n      // User has an existing order, update it\n      while ($row = $order_result->fetch_assoc()) {\n        $order_id = $row['id'];\n        break;\n      }\n    } else {\n      // Create new order for user\n      $query = \"INSERT INTO orders (user_id, order_date, total_cost) VALUES ('\".$_SESSION['user_id'].\"', NOW(), 0)\";\n      $mysqli->query($query);\n      $order_id = $mysqli->insert_id;\n    }\n\n    // Add product to order\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$product_id', 1)\";\n    $mysqli->query($query);\n\n    // Update total cost of order\n    $total_cost = get_order_total($order_id);\n    $query = \"UPDATE orders SET total_cost = '$total_cost' WHERE id = '$order_id'\";\n    $mysqli->query($query);\n\n    echo 'Product purchased successfully!';\n  }\n} else {\n  echo 'Product not found';\n}\n\nfunction get_order_total($order_id) {\n  // Retrieve order items for given order ID\n  $query = \"SELECT SUM(quantity * price) AS total FROM products p JOIN order_items oi ON p.id = oi.product_id WHERE oi.order_id = '$order_id'\";\n  $result = $mysqli->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      return $row['total'];\n    }\n  } else {\n    return 0;\n  }\n}\n\n?>\n```\n\n**Example Use Case**\n\n1. Set `$_SESSION['user_id']` to the user's ID.\n2. Navigate to `purchase.php?product_id=1`.\n3. The script will retrieve the product details and add it to the user's current order (or create a new one).\n4. The total cost of the order is updated accordingly.\n\n**Note:** This is a basic example and should not be used in production without proper validation, security measures, and payment processing integration.", "code_blocks": [null, "```php\n<?php\n\n// Connect to database (replace with your actual database connection)\n$mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($mysqli->connect_error) {\n  die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\n// Get product ID from URL parameter\n$product_id = $_GET['product_id'];\n\n// Validate product ID (replace with actual validation logic)\nif (!is_numeric($product_id)) {\n  echo 'Invalid product ID';\n  exit;\n}\n\n// Retrieve product details\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = $mysqli->query($query);\n\nif ($result->num_rows > 0) {\n  // Product found, proceed with purchase\n  while ($row = $result->fetch_assoc()) {\n    $product_name = $row['name'];\n    $price = $row['price'];\n\n    // Get user's current order (or create new one)\n    $query = \"SELECT * FROM orders WHERE user_id = '\".$_SESSION['user_id'].\"'\";\n    $order_result = $mysqli->query($query);\n\n    if ($order_result->num_rows > 0) {\n      // User has an existing order, update it\n      while ($row = $order_result->fetch_assoc()) {\n        $order_id = $row['id'];\n        break;\n      }\n    } else {\n      // Create new order for user\n      $query = \"INSERT INTO orders (user_id, order_date, total_cost) VALUES ('\".$_SESSION['user_id'].\"', NOW(), 0)\";\n      $mysqli->query($query);\n      $order_id = $mysqli->insert_id;\n    }\n\n    // Add product to order\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$product_id', 1)\";\n    $mysqli->query($query);\n\n    // Update total cost of order\n    $total_cost = get_order_total($order_id);\n    $query = \"UPDATE orders SET total_cost = '$total_cost' WHERE id = '$order_id'\";\n    $mysqli->query($query);\n\n    echo 'Product purchased successfully!';\n  }\n} else {\n  echo 'Product not found';\n}\n\nfunction get_order_total($order_id) {\n  // Retrieve order items for given order ID\n  $query = \"SELECT SUM(quantity * price) AS total FROM products p JOIN order_items oi ON p.id = oi.product_id WHERE oi.order_id = '$order_id'\";\n  $result = $mysqli->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      return $row['total'];\n    }\n  } else {\n    return 0;\n  }\n}\n\n?>\n```"]}
