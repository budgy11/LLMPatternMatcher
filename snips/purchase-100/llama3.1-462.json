{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP, including user authentication and database storage for the products and orders.\n\n**Note:** This is a simplified example and should not be used as-is in production without proper security measures (e.g., input validation, error handling).\n\n**Database Structure**\n\nCreate the following tables in your MySQL database:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(100) NOT NULL,\n  description TEXT NOT NULL,\n  price DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  product_id INT NOT NULL,\n  order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  status ENUM('pending', 'shipped', 'delivered') DEFAULT 'pending'\n);\n```\n**PHP Code**\n\nCreate a new file called `purchase.php` and add the following code:\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a PDO instance\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// Function to authenticate user\nfunction authenticate($username, $password) {\n  global $conn;\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username AND password_hash = :password\");\n  $stmt->bindParam(':username', $username);\n  $stmt->bindParam(':password', $password);\n  $stmt->execute();\n  return $stmt->fetch();\n}\n\n// Function to get products\nfunction getProducts() {\n  global $conn;\n  $stmt = $conn->prepare(\"SELECT * FROM products\");\n  $stmt->execute();\n  return $stmt->fetchAll();\n}\n\n// Function to create order\nfunction createOrder($user_id, $product_id) {\n  global $conn;\n  $stmt = $conn->prepare(\"INSERT INTO orders (user_id, product_id, status) VALUES (:user_id, :product_id, 'pending')\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n}\n\n// Function to update order status\nfunction updateOrderStatus($order_id, $status) {\n  global $conn;\n  $stmt = $conn->prepare(\"UPDATE orders SET status = :status WHERE id = :order_id\");\n  $stmt->bindParam(':order_id', $order_id);\n  $stmt->bindParam(':status', $status);\n  $stmt->execute();\n}\n\n// Check if user is authenticated\nif (isset($_SESSION['username'])) {\n  $user = authenticate($_SESSION['username'], $_SESSION['password']);\n} else {\n  header('Location: login.php');\n  exit;\n}\n\n// Get products\n$products = getProducts();\n\n// Process purchase form submission\nif (isset($_POST['purchase'])) {\n  $product_id = $_POST['product_id'];\n  createOrder($user->id, $product_id);\n  updateOrderStatus($conn->lastInsertId(), 'shipped');\n}\n\n?>\n```\n**HTML Template**\n\nCreate a new file called `purchase.html` and add the following code:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Product</title>\n</head>\n<body>\n\n  <?php if ($user) : ?>\n    <h1>Welcome, <?= $user->username ?>!</h1>\n\n    <form action=\"\" method=\"post\">\n      <label for=\"product_id\">Select a product:</label>\n      <select name=\"product_id\" id=\"product_id\">\n        <?php foreach ($products as $product) : ?>\n          <option value=\"<?= $product->id ?>\"><?= $product->name ?></option>\n        <?php endforeach; ?>\n      </select>\n\n      <input type=\"submit\" name=\"purchase\" value=\"Purchase\">\n\n    </form>\n\n  <?php else : ?>\n    <p>You must be logged in to purchase a product.</p>\n    <a href=\"login.php\">Login</a> or <a href=\"register.php\">Register</a>\n  <?php endif; ?>\n\n</body>\n</html>\n```\n**Usage**\n\n1. Create the database tables and insert some sample data.\n2. Update the `purchase.php` file with your actual database connection settings.\n3. Load the `purchase.html` template in a web browser.\n4. Select a product from the dropdown menu and click \"Purchase\".\n5. The order will be created, and the user will receive an email with their order details (not implemented here).\n\nNote: This is a basic example and should not be used as-is in production without proper security measures (e.g., input validation, error handling).", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a PDO instance\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// Function to authenticate user\nfunction authenticate($username, $password) {\n  global $conn;\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username AND password_hash = :password\");\n  $stmt->bindParam(':username', $username);\n  $stmt->bindParam(':password', $password);\n  $stmt->execute();\n  return $stmt->fetch();\n}\n\n// Function to get products\nfunction getProducts() {\n  global $conn;\n  $stmt = $conn->prepare(\"SELECT * FROM products\");\n  $stmt->execute();\n  return $stmt->fetchAll();\n}\n\n// Function to create order\nfunction createOrder($user_id, $product_id) {\n  global $conn;\n  $stmt = $conn->prepare(\"INSERT INTO orders (user_id, product_id, status) VALUES (:user_id, :product_id, 'pending')\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n}\n\n// Function to update order status\nfunction updateOrderStatus($order_id, $status) {\n  global $conn;\n  $stmt = $conn->prepare(\"UPDATE orders SET status = :status WHERE id = :order_id\");\n  $stmt->bindParam(':order_id', $order_id);\n  $stmt->bindParam(':status', $status);\n  $stmt->execute();\n}\n\n// Check if user is authenticated\nif (isset($_SESSION['username'])) {\n  $user = authenticate($_SESSION['username'], $_SESSION['password']);\n} else {\n  header('Location: login.php');\n  exit;\n}\n\n// Get products\n$products = getProducts();\n\n// Process purchase form submission\nif (isset($_POST['purchase'])) {\n  $product_id = $_POST['product_id'];\n  createOrder($user->id, $product_id);\n  updateOrderStatus($conn->lastInsertId(), 'shipped');\n}\n\n?>\n```", null]}
