{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this.\n\nFirst, I should consider the main components involved in a purchase process. There's the product catalog, user authentication, adding items to a cart, displaying the cart, handling payment, and confirming the order.\n\nI'll start by setting up the database tables. I'll need a 'products' table to store product details like id, name, description, price, and stock quantity. Then, a 'users' table for storing user information such as username, email, password (hashed), first name, last name, and address. Lastly, an 'orders' table to keep track of each order with details like order id, user id, product id, quantity, total amount, order date, and payment status.\n\nNext, I'll create the necessary PHP files. The main ones will be for displaying products, adding items to the cart, showing the cart contents, processing checkout, handling payment, and confirming the order.\n\nFor the product display, I'll fetch data from the database and loop through each product to display them on a webpage with an 'Add to Cart' button. When a user clicks this button, it should add the selected product to their session-based shopping cart.\n\nThe add to cart functionality will check if the product is already in the cart. If it is, it increments the quantity; otherwise, it adds a new entry. I'll store the cart in the session so that it persists across pages without requiring a database connection for each page load.\n\nDisplaying the cart involves reading from the session and showing each item's details along with the total price. Users should be able to adjust quantities or remove items directly from this page.\n\nThe checkout process will first verify if the user is logged in. If not, they'll be redirected to the login page. Once authenticated, I'll retrieve their shipping information for pre-filling during checkout and calculate the grand total by iterating through each item in the cart.\n\nHandling payment is a critical part. For simplicity, I might start with a dummy payment processing function that simulates approval or decline based on certain conditions, like a test credit card number. In a real-world scenario, this would integrate with a payment gateway API instead.\n\nAfter successful payment, an order confirmation page will display the transaction details and clear the cart. This ensures the user knows their purchase is complete and prevents accidental resubmission of the same order.\n\nI also need to implement session management correctly. Starting the session at the beginning of each PHP file is essential. Using encrypted cookies can enhance security, though in a real application, more robust measures would be necessary.\n\nTesting each part step by step is important. I'll check if products are added correctly to the cart, if quantities update properly, and if the total calculations are accurate. Testing the payment processing with different scenarios will ensure it handles both success and failure cases gracefully.\n\nFinally, I should consider additional features for a more robust system. User authentication needs a registration page and password hashing. The product catalog could include pagination and filtering options. Order tracking would allow users to view their past orders, and an admin panel would help manage products and orders effectively.\n\nThroughout the development process, security is paramount. Sanitizing inputs to prevent SQL injection and XSS attacks, using prepared statements, and securing session data are all important considerations. Error handling should be implemented to catch exceptions and provide meaningful feedback to users without exposing sensitive information.\n\nBy systematically addressing each component and testing as I go, I can build a functional and secure purchase system using PHP.\n</think>\n\nTo create a purchase functionality using PHP, follow these steps:\n\n### Step 1: Set Up the Database Tables\n\nFirst, create three database tables for products, users, and orders.\n\n**products Table:**\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT,\n    price DECIMAL(10, 2) NOT NULL,\n    stock INT NOT NULL\n);\n```\n\n**users Table:**\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    first_name VARCHAR(100),\n    last_name VARCHAR(100),\n    address TEXT\n);\n```\n\n**orders Table:**\n```sql\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL,\n    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    payment_status ENUM('Pending', 'Completed') DEFAULT 'Pending',\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### Step 2: Create Product Display Page\n\nCreate a PHP file (`index.php`) to display the product catalog.\n\n**index.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\n// Fetch all products from database\n$products = $conn->query(\"SELECT * FROM products\");\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Catalog</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <a href=\"login.php\">Login</a> | <a href=\"register.php\">Register</a>\n    <?php else: ?>\n        <a href=\"cart.php\">View Cart</a> | <a href=\"logout.php\">Logout</a>\n    <?php endif; ?>\n\n    <h1>Products</h1>\n    <?php while ($product = $products->fetch_assoc()): ?>\n        <div>\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: <?php echo \"$\" . number_format($product['price'], 2); ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock']; ?>\" value=\"1\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endwhile; ?>\n</body>\n</html>\n```\n\n### Step 3: Add Products to Cart\n\nCreate `add_to_cart.php` to handle adding items to the shopping cart.\n\n**add_to_cart.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = intval($_POST['quantity']);\n\n    // Fetch product details from database\n    $result = $conn->query(\"SELECT * FROM products WHERE id=$product_id\");\n    if ($result->num_rows > 0) {\n        $product = $result->fetch_assoc();\n        \n        // Initialize cart if not exists\n        if (!isset($_SESSION['cart'])) {\n            $_SESSION['cart'] = array();\n        }\n        \n        // Check if product is already in the cart\n        if (array_key_exists($product_id, $_SESSION['cart'])) {\n            // Increment quantity\n            $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n        } else {\n            // Add new product to cart\n            $_SESSION['cart'][$product_id] = array(\n                'name' => $product['name'],\n                'price' => $product['price'],\n                'quantity' => $quantity,\n                'total_price' => $product['price'] * $quantity\n            );\n        }\n        \n        // Redirect back to products page\n        header(\"Location: index.php\");\n    } else {\n        echo \"Product not found!\";\n    }\n}\n?>\n```\n\n### Step 4: Display Cart Contents\n\nCreate `cart.php` to show the contents of the shopping cart.\n\n**cart.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    \n    <?php if (empty($_SESSION['cart'])): ?>\n        <p>Your cart is empty.</p>\n    <?php else: ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total Price</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php $grand_total = 0; ?>\n            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo \"$\" . number_format($item['price'], 2); ?></td>\n                    <td>\n                        <form action=\"update_cart.php\" method=\"post\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n                            <input type=\"number\" name=\"quantity\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </td>\n                    <td><?php echo \"$\" . number_format($item['total_price'], 2); ?></td>\n                    <td><a href=\"remove_from_cart.php?product_id=<?php echo $product_id; ?>\">Remove</a></td>\n                </tr>\n                <?php $grand_total += $item['total_price']; ?>\n            <?php endforeach; ?>\n            \n            <tr>\n                <td colspan=\"4\">Grand Total:</td>\n                <td><?php echo \"$\" . number_format($grand_total, 2); ?></td>\n            </tr>\n        </table>\n        \n        <a href=\"checkout.php\">Proceed to Checkout</a> | \n        <a href=\"index.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 5: Update Cart Quantity\n\nCreate `update_cart.php` to update the quantity of items in the cart.\n\n**update_cart.php:**\n```php\n<?php\nsession_start();\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = intval($_POST['quantity']);\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        // Update quantity and recalculate total price\n        $_SESSION['cart'][$product_id]['quantity'] = $quantity;\n        $_SESSION['cart'][$product_id]['total_price'] = \n            $_SESSION['cart'][$product_id]['price'] * $quantity;\n    }\n    \n    header(\"Location: cart.php\");\n}\n?>\n```\n\n### Step 6: Remove Items from Cart\n\nCreate `remove_from_cart.php` to handle removing items.\n\n**remove_from_cart.php:**\n```php\n<?php\nsession_start();\n\nif (isset($_GET['product_id'])) {\n    $product_id = $_GET['product_id'];\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        unset($_SESSION['cart'][$product_id]);\n    }\n    \n    header(\"Location: cart.php\");\n}\n?>\n```\n\n### Step 7: Checkout Process\n\nCreate `checkout.php` to handle the checkout process.\n\n**checkout.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n// Get user details for pre-filled form\n$user = $conn->query(\"SELECT * FROM users WHERE id=$_SESSION[user_id]\");\n$user_data = $user->fetch_assoc();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n    \n    <?php if (!empty($_SESSION['cart'])): ?>\n        <form action=\"process_payment.php\" method=\"post\">\n            <!-- Shipping Information -->\n            <div>\n                <h2>Shipping Address</h2>\n                <p><?php echo $user_data['address']; ?></p>\n            </div>\n            \n            <!-- Payment Information -->\n            <div>\n                <h2>Payment Details</h2>\n                <input type=\"text\" name=\"card_number\" placeholder=\"Card Number\" required>\n                <input type=\"text\" name=\"cvv\" placeholder=\"CVV\" required>\n                <input type=\"month\" name=\"expiry_date\" required>\n            </div>\n            \n            <!-- Submit Button -->\n            <button type=\"submit\">Place Order</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty. Please add items to your cart first.</p>\n    <?php endif; ?>\n    \n    <a href=\"cart.php\">Back to Cart</a>\n</body>\n</html>\n```\n\n### Step 8: Process Payment\n\nCreate `process_payment.php` to handle payment processing and order confirmation.\n\n**process_payment.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (!isset($_SESSION['user_id']) || empty($_SESSION['cart'])) {\n    header(\"Location: index.php\");\n}\n\n// Simulated payment processing\n$isValidPayment = true; // In a real application, this would be integrated with a payment gateway\n\nif ($isValidPayment) {\n    $grand_total = 0;\n    \n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        $grand_total += $item['total_price'];\n        \n        // Insert order into the orders table\n        $conn->query(\"INSERT INTO orders (user_id, product_id, quantity, total_amount, payment_status)\n                     VALUES ($_SESSION[user_id], $product_id, {$item['quantity']}, {$item['total_price']}, 'Completed')\");\n    }\n    \n    // Clear the cart\n    unset($_SESSION['cart']);\n    \n    header(\"Location: order_confirmation.php?amount=$grand_total\");\n} else {\n    echo \"Payment failed. Please try again.\";\n}\n?>\n```\n\n### Step 9: Order Confirmation Page\n\nCreate `order_confirmation.php` to display a confirmation message after successful payment.\n\n**order_confirmation.php:**\n```php\n<?php\nsession_start();\n\nif (!isset($_GET['amount'])) {\n    header(\"Location: index.php\");\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h1>Thank You for Your Order!</h1>\n    \n    <p>Your order has been successfully placed.</p>\n    <p>Total Amount Paid: <?php echo \"$\" . number_format($_GET['amount'], 2); ?></p>\n    \n    <a href=\"index.php\">Continue Shopping</a>\n</body>\n</html>\n```\n\n### Step 10: Implement Session Management\n\nEnsure session management is properly handled in all PHP files by starting the session at the top of each file.\n\n**db_connection.php:**\n```php\n<?php\n$servername = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"shopping_cart\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```\n\n### Step 11: Add Login and Registration Pages\n\nCreate `login.php` for user login:\n\n**login.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Query the database for the user\n    $result = $conn->query(\"SELECT * FROM users WHERE username='$username'\");\n    if ($result->num_rows > 0) {\n        $user = $result->fetch_assoc();\n        \n        // Verify password\n        if (password_verify($password, $user['password_hash'])) {\n            $_SESSION['user_id'] = $user['id'];\n            header(\"Location: index.php\");\n        } else {\n            echo \"Invalid username or password.\";\n        }\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <h1>Login</h1>\n    <form action=\"login.php\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\" required><br>\n        Password: <input type=\"password\" name=\"password\" required><br>\n        <button type=\"submit\">Login</button>\n    </form>\n    <p>Don't have an account? <a href=\"register.php\">Register here</a>.</p>\n</body>\n</html>\n```\n\nCreate `register.php` for user registration:\n\n**register.php:**\n```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    $first_name = $_POST['first_name'];\n    $last_name = $_POST['last_name'];\n    $address = $_POST['address'];\n    \n    // Check if username or email already exists\n    $check_user = $conn->query(\"SELECT * FROM users WHERE username='$username' OR email='$email'\");\n    if ($check_user->num_rows > 0) {\n        echo \"Username or email already exists.\";\n    } else {\n        // Insert new user into the database\n        $sql = \"INSERT INTO users (username, email, password_hash, first_name, last_name, address)\n                VALUES ('$username', '$email', '$password', '$first_name', '$last_name', '$address')\";\n        \n        if ($conn->query($sql)) {\n            echo \"Registration successful! Please login.\";\n            header(\"Location: login.php\");\n        } else {\n            echo \"Error registering user.\";\n        }\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register</title>\n</head>\n<body>\n    <h1>Register</h1>\n    <form action=\"register.php\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\" required><br>\n        Email: <input type=\"email\" name=\"email\" required><br>\n        Password: <input type=\"password\" name=\"password\" required><br>\n        First Name: <input type=\"text\" name=\"first_name\" required><br>\n        Last Name: <input type=\"text\" name=\"last_name\" required><br>\n        Address: <textarea name=\"address\" rows=\"3\" required></textarea><br>\n        <button type=\"submit\">Register</button>\n    </form>\n    <p>Already have an account? <a href=\"login.php\">Login here</a>.</p>\n</body>\n</html>\n```\n\n### Step 12: Implement Logout Functionality\n\nCreate `logout.php` to handle user logout:\n\n**logout.php:**\n```php\n<?php\nsession_start();\nunset($_SESSION['user_id']);\nsession_unset();\nsession_destroy();\nheader(\"Location: index.php\");\n?>\n```\n\n### Step 13: Add Error Handling and Security Measures\n\n- **Sanitize Inputs:** Use prepared statements or escape inputs to prevent SQL injection.\n- **Password Hashing:** Ensure passwords are hashed using a secure method like `password_hash()`.\n- **Session Security:** Use session regenerating techniques to prevent session hijacking.\n- **CSRF Protection:** Implement CSRF tokens for forms to protect against cross-site request forgery.\n\n### Step 14: Test the Application\n\nTest all functionalities, including:\n\n- Adding items to the cart\n- Updating quantities\n- Removing items\n- Proceeding through checkout\n- Placing orders\n- Login and registration processes\n\n### Step 15: Optimize and Refactor Code\n\nRefactor the code for better readability and maintainability. Consider moving database queries into separate classes or functions.\n\n### Step 16: Implement Additional Features (Optional)\n\nSome additional features you might want to add:\n\n- User profile management\n- Order history tracking\n- Product reviews and ratings\n- Shipping options\n- Payment methods integration\n- Email notifications for orders\n\nBy following these steps, you'll have a functional online shopping cart system with user authentication, product listings, and order processing capabilities.", "code_blocks": [null, null, null, "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\n// Fetch all products from database\n$products = $conn->query(\"SELECT * FROM products\");\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Catalog</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <a href=\"login.php\">Login</a> | <a href=\"register.php\">Register</a>\n    <?php else: ?>\n        <a href=\"cart.php\">View Cart</a> | <a href=\"logout.php\">Logout</a>\n    <?php endif; ?>\n\n    <h1>Products</h1>\n    <?php while ($product = $products->fetch_assoc()): ?>\n        <div>\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: <?php echo \"$\" . number_format($product['price'], 2); ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock']; ?>\" value=\"1\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endwhile; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = intval($_POST['quantity']);\n\n    // Fetch product details from database\n    $result = $conn->query(\"SELECT * FROM products WHERE id=$product_id\");\n    if ($result->num_rows > 0) {\n        $product = $result->fetch_assoc();\n        \n        // Initialize cart if not exists\n        if (!isset($_SESSION['cart'])) {\n            $_SESSION['cart'] = array();\n        }\n        \n        // Check if product is already in the cart\n        if (array_key_exists($product_id, $_SESSION['cart'])) {\n            // Increment quantity\n            $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n        } else {\n            // Add new product to cart\n            $_SESSION['cart'][$product_id] = array(\n                'name' => $product['name'],\n                'price' => $product['price'],\n                'quantity' => $quantity,\n                'total_price' => $product['price'] * $quantity\n            );\n        }\n        \n        // Redirect back to products page\n        header(\"Location: index.php\");\n    } else {\n        echo \"Product not found!\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    \n    <?php if (empty($_SESSION['cart'])): ?>\n        <p>Your cart is empty.</p>\n    <?php else: ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total Price</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php $grand_total = 0; ?>\n            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo \"$\" . number_format($item['price'], 2); ?></td>\n                    <td>\n                        <form action=\"update_cart.php\" method=\"post\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n                            <input type=\"number\" name=\"quantity\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </td>\n                    <td><?php echo \"$\" . number_format($item['total_price'], 2); ?></td>\n                    <td><a href=\"remove_from_cart.php?product_id=<?php echo $product_id; ?>\">Remove</a></td>\n                </tr>\n                <?php $grand_total += $item['total_price']; ?>\n            <?php endforeach; ?>\n            \n            <tr>\n                <td colspan=\"4\">Grand Total:</td>\n                <td><?php echo \"$\" . number_format($grand_total, 2); ?></td>\n            </tr>\n        </table>\n        \n        <a href=\"checkout.php\">Proceed to Checkout</a> | \n        <a href=\"index.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = intval($_POST['quantity']);\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        // Update quantity and recalculate total price\n        $_SESSION['cart'][$product_id]['quantity'] = $quantity;\n        $_SESSION['cart'][$product_id]['total_price'] = \n            $_SESSION['cart'][$product_id]['price'] * $quantity;\n    }\n    \n    header(\"Location: cart.php\");\n}\n?>\n```", "```php\n<?php\nsession_start();\n\nif (isset($_GET['product_id'])) {\n    $product_id = $_GET['product_id'];\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        unset($_SESSION['cart'][$product_id]);\n    }\n    \n    header(\"Location: cart.php\");\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n// Get user details for pre-filled form\n$user = $conn->query(\"SELECT * FROM users WHERE id=$_SESSION[user_id]\");\n$user_data = $user->fetch_assoc();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n    \n    <?php if (!empty($_SESSION['cart'])): ?>\n        <form action=\"process_payment.php\" method=\"post\">\n            <!-- Shipping Information -->\n            <div>\n                <h2>Shipping Address</h2>\n                <p><?php echo $user_data['address']; ?></p>\n            </div>\n            \n            <!-- Payment Information -->\n            <div>\n                <h2>Payment Details</h2>\n                <input type=\"text\" name=\"card_number\" placeholder=\"Card Number\" required>\n                <input type=\"text\" name=\"cvv\" placeholder=\"CVV\" required>\n                <input type=\"month\" name=\"expiry_date\" required>\n            </div>\n            \n            <!-- Submit Button -->\n            <button type=\"submit\">Place Order</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty. Please add items to your cart first.</p>\n    <?php endif; ?>\n    \n    <a href=\"cart.php\">Back to Cart</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (!isset($_SESSION['user_id']) || empty($_SESSION['cart'])) {\n    header(\"Location: index.php\");\n}\n\n// Simulated payment processing\n$isValidPayment = true; // In a real application, this would be integrated with a payment gateway\n\nif ($isValidPayment) {\n    $grand_total = 0;\n    \n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        $grand_total += $item['total_price'];\n        \n        // Insert order into the orders table\n        $conn->query(\"INSERT INTO orders (user_id, product_id, quantity, total_amount, payment_status)\n                     VALUES ($_SESSION[user_id], $product_id, {$item['quantity']}, {$item['total_price']}, 'Completed')\");\n    }\n    \n    // Clear the cart\n    unset($_SESSION['cart']);\n    \n    header(\"Location: order_confirmation.php?amount=$grand_total\");\n} else {\n    echo \"Payment failed. Please try again.\";\n}\n?>\n```", "```php\n<?php\nsession_start();\n\nif (!isset($_GET['amount'])) {\n    header(\"Location: index.php\");\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h1>Thank You for Your Order!</h1>\n    \n    <p>Your order has been successfully placed.</p>\n    <p>Total Amount Paid: <?php echo \"$\" . number_format($_GET['amount'], 2); ?></p>\n    \n    <a href=\"index.php\">Continue Shopping</a>\n</body>\n</html>\n```", "```php\n<?php\n$servername = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"shopping_cart\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Query the database for the user\n    $result = $conn->query(\"SELECT * FROM users WHERE username='$username'\");\n    if ($result->num_rows > 0) {\n        $user = $result->fetch_assoc();\n        \n        // Verify password\n        if (password_verify($password, $user['password_hash'])) {\n            $_SESSION['user_id'] = $user['id'];\n            header(\"Location: index.php\");\n        } else {\n            echo \"Invalid username or password.\";\n        }\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <h1>Login</h1>\n    <form action=\"login.php\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\" required><br>\n        Password: <input type=\"password\" name=\"password\" required><br>\n        <button type=\"submit\">Login</button>\n    </form>\n    <p>Don't have an account? <a href=\"register.php\">Register here</a>.</p>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude('db_connection.php');\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    $first_name = $_POST['first_name'];\n    $last_name = $_POST['last_name'];\n    $address = $_POST['address'];\n    \n    // Check if username or email already exists\n    $check_user = $conn->query(\"SELECT * FROM users WHERE username='$username' OR email='$email'\");\n    if ($check_user->num_rows > 0) {\n        echo \"Username or email already exists.\";\n    } else {\n        // Insert new user into the database\n        $sql = \"INSERT INTO users (username, email, password_hash, first_name, last_name, address)\n                VALUES ('$username', '$email', '$password', '$first_name', '$last_name', '$address')\";\n        \n        if ($conn->query($sql)) {\n            echo \"Registration successful! Please login.\";\n            header(\"Location: login.php\");\n        } else {\n            echo \"Error registering user.\";\n        }\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register</title>\n</head>\n<body>\n    <h1>Register</h1>\n    <form action=\"register.php\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\" required><br>\n        Email: <input type=\"email\" name=\"email\" required><br>\n        Password: <input type=\"password\" name=\"password\" required><br>\n        First Name: <input type=\"text\" name=\"first_name\" required><br>\n        Last Name: <input type=\"text\" name=\"last_name\" required><br>\n        Address: <textarea name=\"address\" rows=\"3\" required></textarea><br>\n        <button type=\"submit\">Register</button>\n    </form>\n    <p>Already have an account? <a href=\"login.php\">Login here</a>.</p>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nunset($_SESSION['user_id']);\nsession_unset();\nsession_destroy();\nheader(\"Location: index.php\");\n?>\n```"]}
