{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of a simple purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Initialize the cart array\n$cart = [];\n\n// Function to add item to cart\nfunction add_item($item_id, $quantity) {\n  global $cart;\n  if (!isset($cart[$item_id])) {\n    $cart[$item_id] = ['quantity' => $quantity];\n  } else {\n    $cart[$item_id]['quantity'] += $quantity;\n  }\n}\n\n// Function to remove item from cart\nfunction remove_item($item_id) {\n  global $cart;\n  unset($cart[$item_id]);\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity($item_id, $new_quantity) {\n  global $cart;\n  if (isset($cart[$item_id])) {\n    $cart[$item_id]['quantity'] = $new_quantity;\n  }\n}\n\n// Function to calculate total cost\nfunction calculate_total() {\n  global $cart;\n  $total = 0;\n  foreach ($cart as $item) {\n    $total += $item['price'] * $item['quantity'];\n  }\n  return $total;\n}\n\n// Display cart contents\nfunction display_cart() {\n  global $cart;\n  echo '<h2>Cart Contents:</h2>';\n  echo '<ul>';\n  foreach ($cart as $item_id => $item) {\n    echo '<li>' . $item_id . ' x' . $item['quantity'] . '</li>';\n  }\n  echo '</ul>';\n}\n\n// Display cart summary\nfunction display_cart_summary() {\n  global $cart;\n  echo '<h2>Cart Summary:</h2>';\n  echo 'Total Items: ' . count($cart) . '<br>';\n  echo 'Subtotal: $' . calculate_total() . '<br>';\n}\n?>\n```\n\n**example.html**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Shopping Cart</title>\n</head>\n<body>\n  <!-- Form to add items to cart -->\n  <form action=\"cart.php\" method=\"post\">\n    <input type=\"hidden\" name=\"item_id\" value=\"1\">\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\" value=\"1\">\n    <button type=\"submit\">Add to Cart</button>\n  </form>\n\n  <!-- Display cart contents -->\n  <?php include 'cart.php'; display_cart(); ?>\n\n  <!-- Display cart summary -->\n  <?php display_cart_summary(); ?>\n</body>\n</html>\n```\n\n**cart_functions.php**\n```php\n<?php\n// Example item data (replace with actual database or API call)\n$item_data = [\n  1 => ['price' => 9.99, 'name' => 'Example Item'],\n  2 => ['price' => 19.99, 'name' => 'Another Example Item']\n];\n\n// Function to retrieve item price from cart ID\nfunction get_item_price($item_id) {\n  global $item_data;\n  return isset($item_data[$item_id]) ? $item_data[$item_id]['price'] : 0;\n}\n\n// Function to calculate total cost with tax (example)\nfunction calculate_total_with_tax() {\n  global $cart;\n  $total = calculate_total();\n  return $total + ($total * 0.08); // Example: 8% sales tax\n}\n?>\n```\n\n**Note:** This example uses a simple in-memory cart array, but in a real-world application you would typically store the cart contents in a database or use a session variable.\n\nYou can add items to the cart by submitting the form with the item ID and quantity. The cart contents are displayed below the form, along with a summary of the total cost.\n\nThe `cart.php` file includes functions for adding, removing, updating, and displaying cart contents, as well as calculating the total cost.\n\nThe `example.html` file demonstrates how to use these functions to display the cart contents and summary.\n\nThe `cart_functions.php` file contains example item data and functions for retrieving item prices and calculating the total cost with tax.", "code_blocks": ["```php\n<?php\n// Initialize the cart array\n$cart = [];\n\n// Function to add item to cart\nfunction add_item($item_id, $quantity) {\n  global $cart;\n  if (!isset($cart[$item_id])) {\n    $cart[$item_id] = ['quantity' => $quantity];\n  } else {\n    $cart[$item_id]['quantity'] += $quantity;\n  }\n}\n\n// Function to remove item from cart\nfunction remove_item($item_id) {\n  global $cart;\n  unset($cart[$item_id]);\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity($item_id, $new_quantity) {\n  global $cart;\n  if (isset($cart[$item_id])) {\n    $cart[$item_id]['quantity'] = $new_quantity;\n  }\n}\n\n// Function to calculate total cost\nfunction calculate_total() {\n  global $cart;\n  $total = 0;\n  foreach ($cart as $item) {\n    $total += $item['price'] * $item['quantity'];\n  }\n  return $total;\n}\n\n// Display cart contents\nfunction display_cart() {\n  global $cart;\n  echo '<h2>Cart Contents:</h2>';\n  echo '<ul>';\n  foreach ($cart as $item_id => $item) {\n    echo '<li>' . $item_id . ' x' . $item['quantity'] . '</li>';\n  }\n  echo '</ul>';\n}\n\n// Display cart summary\nfunction display_cart_summary() {\n  global $cart;\n  echo '<h2>Cart Summary:</h2>';\n  echo 'Total Items: ' . count($cart) . '<br>';\n  echo 'Subtotal: $' . calculate_total() . '<br>';\n}\n?>\n```", null, "```php\n<?php\n// Example item data (replace with actual database or API call)\n$item_data = [\n  1 => ['price' => 9.99, 'name' => 'Example Item'],\n  2 => ['price' => 19.99, 'name' => 'Another Example Item']\n];\n\n// Function to retrieve item price from cart ID\nfunction get_item_price($item_id) {\n  global $item_data;\n  return isset($item_data[$item_id]) ? $item_data[$item_id]['price'] : 0;\n}\n\n// Function to calculate total cost with tax (example)\nfunction calculate_total_with_tax() {\n  global $cart;\n  $total = calculate_total();\n  return $total + ($total * 0.08); // Example: 8% sales tax\n}\n?>\n```"]}
