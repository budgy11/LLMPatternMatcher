{"prompt": "Create a purchase cart functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase cart functionality using PHP. Let me think about how to approach this.\n\nFirst, I know that a shopping cart requires the ability to add items, view them, and remove them. Since PHP is server-side, I'll use cookies or sessions for storage. Cookies might be easier because they persist longer, but sessions would require the user to stay logged in. Maybe cookies are better for this example.\n\nNext, I should plan the database structure. I'll need a products table with details like id, name, price, and description. Then, an orders table to store customer information once they check out. Also, an order_details table to keep track of each item in an order.\n\nNow, for the cart functionality. When a user adds a product, I'll check if their cookie exists. If not, create it with the new product. If it does, add the product to the existing data and update the cookie.\n\nDisplaying the cart involves reading the cookie data, fetching each product's details from the database, and showing them on the page along with quantities and total price.\n\nWhen a user removes an item, I'll need to process that request by updating the cookie. If it's the last item, delete the cookie; otherwise, remove that specific entry.\n\nFor checking out, I'll collect customer info like name and email, then insert into the orders table. Then, for each item in the cart, insert into order_details with the order ID. Finally, clear the cart by deleting the cookie.\n\nI should also consider security aspects, sanitizing inputs to prevent SQL injection or other attacks. Using prepared statements would help here.\n\nLet me outline the steps:\n\n1. Set up the database tables: products, orders, order_details.\n2. Create a product page where users can add items to their cart using cookies.\n3. Implement functions for adding, viewing, and removing cart items.\n4. Develop the checkout process with customer info collection and order submission.\n5. Ensure all data is sanitized and validate inputs to prevent vulnerabilities.\n\nI'll start by creating the necessary SQL tables first. Then, move on to the PHP code, making sure each part handles cookies correctly and interacts properly with the database.\n\nTesting each function step by step will be important\u2014like adding items, viewing them, removing an item, and completing checkout to ensure everything works as expected.\n</think>\n\nTo create a purchase cart functionality using PHP, follow these steps:\n\n### Step 1: Create the SQL Tables\nFirst, set up the necessary database tables.\n\n```sql\n-- products table\nCREATE TABLE IF NOT EXISTS `products` (\n    `id` int(10) unsigned AUTO_INCREMENT PRIMARY KEY,\n    `name` varchar(255),\n    `price` decimal(10, 2),\n    `description` text\n);\n\n-- orders table\nCREATE TABLE IF NOT EXISTS `orders` (\n    `id` int(10) unsigned AUTO_INCREMENT PRIMARY KEY,\n    `user_name` varchar(255),\n    `email` varchar(255),\n    `created_at` datetime DEFAULT CURRENT_TIMESTAMP\n);\n\n-- order_details table\nCREATE TABLE IF NOT EXISTS `order_details` (\n    `id` int(10) unsigned AUTO_INCREMENT PRIMARY KEY,\n    `order_id` int(10) unsigned,\n    `product_id` int(10) unsigned,\n    `quantity` int(10),\n    FOREIGN KEY (`order_id`) REFERENCES `orders` (`id`),\n    FOREIGN KEY (`product_id`) REFERENCES `products` (`id`)\n);\n```\n\n### Step 2: Create the Product Page\nDisplay products and allow adding to cart.\n\n```php\n<?php\ninclude 'db_connection.php';\n\n// Fetch all products from database\n$query = \"SELECT * FROM products\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n        echo \"<div class='product'>\";\n        echo \"<h3>\" . $row['name'] . \"</h3>\";\n        echo \"<p>Price: $\" . number_format($row['price'], 2) . \"</p>\";\n        echo \"<p>Description: \" . $row['description'] . \"</p>\";\n        echo \"<form action='add_to_cart.php' method='post'>\";\n        echo \"<input type='hidden' name='product_id' value='\" . $row['id'] . \"'>\";\n        echo \"<button type='submit'>Add to Cart</button>\";\n        echo \"</form>\";\n        echo \"</div>\";\n    }\n} else {\n    echo \"No products available.\";\n}\n$conn->close();\n?>\n```\n\n### Step 3: Add to Cart Functionality\nHandle adding items to the cart using cookies.\n\n```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_POST['product_id'])) {\n    $productId = $_POST['product_id'];\n    \n    if (!isset($_COOKIE['cart'])) {\n        // Initialize cookie with new product\n        setcookie('cart', $productId . \"|1\", time() + 3600);\n    } else {\n        // Update existing cookie\n        $cartContent = explode('&', $_COOKIE['cart']);\n        $updatedCart = array();\n        $found = false;\n        \n        foreach ($cartContent as $item) {\n            list($id, $quantity) = explode('|', $item);\n            if ($id == $productId) {\n                $quantity++;\n                $found = true;\n            }\n            $updatedCart[] = $id . '|' . $quantity;\n        }\n        \n        if (!$found) {\n            array_push($updatedCart, $productId . '|1');\n        }\n        \n        setcookie('cart', implode('&', $updatedCart), time() + 3600);\n    }\n    \n    echo \"Product added to cart!\";\n}\n?>\n```\n\n### Step 4: View Cart Page\nDisplay the contents of the shopping cart.\n\n```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_COOKIE['cart'])) {\n    $cartContent = explode('&', $_COOKIE['cart']);\n    $totalPrice = 0;\n    \n    foreach ($cartContent as $item) {\n        list($productId, $quantity) = explode('|', $item);\n        \n        $query = \"SELECT * FROM products WHERE id=\" . $productId;\n        $result = $conn->query($query);\n        if ($row = $result->fetch_assoc()) {\n            echo \"<div class='cart-item'>\";\n            echo \"<h3>\" . $row['name'] . \"</h3>\";\n            echo \"<p>Quantity: \" . $quantity . \"</p>\";\n            $priceTotal = $row['price'] * $quantity;\n            $totalPrice += $priceTotal;\n            echo \"<p>Subtotal: $\" . number_format($priceTotal, 2) . \"</p>\";\n            echo \"<form action='remove_from_cart.php' method='post'>\";\n            echo \"<input type='hidden' name='product_id' value='\" . $productId . \"'>\";\n            echo \"<button type='submit'>Remove</button>\";\n            echo \"</form>\";\n            echo \"</div>\";\n        }\n    }\n    echo \"<h3>Total Price: $\" . number_format($totalPrice, 2) . \"</h3>\";\n} else {\n    echo \"Your cart is empty.\";\n}\n$conn->close();\n?>\n```\n\n### Step 5: Remove Item from Cart\nHandle removing items from the cart.\n\n```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_POST['product_id'])) {\n    $productId = $_POST['product_id'];\n    \n    if (isset($_COOKIE['cart'])) {\n        $cartContent = explode('&', $_COOKIE['cart']);\n        \n        foreach ($cartContent as $key => $item) {\n            list($id, $quantity) = explode('|', $item);\n            if ($id == $productId) {\n                unset($cartContent[$key]);\n                break;\n            }\n        }\n        \n        if (empty($cartContent)) {\n            setcookie('cart', '', time() - 3600); // Delete cookie\n        } else {\n            setcookie('cart', implode('&', $cartContent), time() + 3600);\n        }\n    }\n    \n    echo \"Product removed from cart!\";\n}\n?>\n```\n\n### Step 6: Checkout Page\nProcess the checkout and save order details.\n\n```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_COOKIE['cart'])) {\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        $userName = $_POST['user_name'];\n        $email = $_POST['email'];\n        \n        // Insert into orders table\n        $orderQuery = \"INSERT INTO orders (user_name, email) VALUES (?, ?)\";\n        $stmt = $conn->prepare($orderQuery);\n        $stmt->bind_param(\"ss\", $userName, $email);\n        $stmt->execute();\n        $orderId = $stmt->insert_id;\n        \n        // Process cart items\n        $cartContent = explode('&', $_COOKIE['cart']);\n        foreach ($cartContent as $item) {\n            list($productId, $quantity) = explode('|', $item);\n            \n            $orderDetailQuery = \"INSERT INTO order_details (order_id, product_id, quantity)\n                                VALUES (?, ?, ?)\";\n            $stmt = $conn->prepare($orderDetailQuery);\n            $stmt->bind_param(\"iii\", $orderId, $productId, $quantity);\n            $stmt->execute();\n        }\n        \n        // Clear cart\n        setcookie('cart', '', time() - 3600);\n        echo \"Order placed successfully!\";\n    } else {\n        // Display checkout form\n        if (isset($_COOKIE['cart'])) {\n            echo \"<form action='checkout.php' method='post'>\";\n            echo \"<input type='text' name='user_name' placeholder='Your Name' required><br>\";\n            echo \"<input type='email' name='email' placeholder='Email Address' required><br>\";\n            echo \"<button type='submit'>Place Order</button>\";\n            echo \"</form>\";\n        } else {\n            echo \"Your cart is empty. Nothing to checkout!\";\n        }\n    }\n} else {\n    echo \"Your cart is empty.\";\n}\n$conn->close();\n?>\n```\n\n### Step 7: Security Considerations\nEnsure all user inputs are sanitized and validate them before processing. Use prepared statements for SQL queries to prevent injection attacks.\n\nThis setup provides a basic shopping cart functionality with the ability to add, view, remove items, and checkout with order tracking.", "code_blocks": [null, "```php\n<?php\ninclude 'db_connection.php';\n\n// Fetch all products from database\n$query = \"SELECT * FROM products\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n        echo \"<div class='product'>\";\n        echo \"<h3>\" . $row['name'] . \"</h3>\";\n        echo \"<p>Price: $\" . number_format($row['price'], 2) . \"</p>\";\n        echo \"<p>Description: \" . $row['description'] . \"</p>\";\n        echo \"<form action='add_to_cart.php' method='post'>\";\n        echo \"<input type='hidden' name='product_id' value='\" . $row['id'] . \"'>\";\n        echo \"<button type='submit'>Add to Cart</button>\";\n        echo \"</form>\";\n        echo \"</div>\";\n    }\n} else {\n    echo \"No products available.\";\n}\n$conn->close();\n?>\n```", "```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_POST['product_id'])) {\n    $productId = $_POST['product_id'];\n    \n    if (!isset($_COOKIE['cart'])) {\n        // Initialize cookie with new product\n        setcookie('cart', $productId . \"|1\", time() + 3600);\n    } else {\n        // Update existing cookie\n        $cartContent = explode('&', $_COOKIE['cart']);\n        $updatedCart = array();\n        $found = false;\n        \n        foreach ($cartContent as $item) {\n            list($id, $quantity) = explode('|', $item);\n            if ($id == $productId) {\n                $quantity++;\n                $found = true;\n            }\n            $updatedCart[] = $id . '|' . $quantity;\n        }\n        \n        if (!$found) {\n            array_push($updatedCart, $productId . '|1');\n        }\n        \n        setcookie('cart', implode('&', $updatedCart), time() + 3600);\n    }\n    \n    echo \"Product added to cart!\";\n}\n?>\n```", "```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_COOKIE['cart'])) {\n    $cartContent = explode('&', $_COOKIE['cart']);\n    $totalPrice = 0;\n    \n    foreach ($cartContent as $item) {\n        list($productId, $quantity) = explode('|', $item);\n        \n        $query = \"SELECT * FROM products WHERE id=\" . $productId;\n        $result = $conn->query($query);\n        if ($row = $result->fetch_assoc()) {\n            echo \"<div class='cart-item'>\";\n            echo \"<h3>\" . $row['name'] . \"</h3>\";\n            echo \"<p>Quantity: \" . $quantity . \"</p>\";\n            $priceTotal = $row['price'] * $quantity;\n            $totalPrice += $priceTotal;\n            echo \"<p>Subtotal: $\" . number_format($priceTotal, 2) . \"</p>\";\n            echo \"<form action='remove_from_cart.php' method='post'>\";\n            echo \"<input type='hidden' name='product_id' value='\" . $productId . \"'>\";\n            echo \"<button type='submit'>Remove</button>\";\n            echo \"</form>\";\n            echo \"</div>\";\n        }\n    }\n    echo \"<h3>Total Price: $\" . number_format($totalPrice, 2) . \"</h3>\";\n} else {\n    echo \"Your cart is empty.\";\n}\n$conn->close();\n?>\n```", "```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_POST['product_id'])) {\n    $productId = $_POST['product_id'];\n    \n    if (isset($_COOKIE['cart'])) {\n        $cartContent = explode('&', $_COOKIE['cart']);\n        \n        foreach ($cartContent as $key => $item) {\n            list($id, $quantity) = explode('|', $item);\n            if ($id == $productId) {\n                unset($cartContent[$key]);\n                break;\n            }\n        }\n        \n        if (empty($cartContent)) {\n            setcookie('cart', '', time() - 3600); // Delete cookie\n        } else {\n            setcookie('cart', implode('&', $cartContent), time() + 3600);\n        }\n    }\n    \n    echo \"Product removed from cart!\";\n}\n?>\n```", "```php\n<?php\ninclude 'db_connection.php';\n\nif (isset($_COOKIE['cart'])) {\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        $userName = $_POST['user_name'];\n        $email = $_POST['email'];\n        \n        // Insert into orders table\n        $orderQuery = \"INSERT INTO orders (user_name, email) VALUES (?, ?)\";\n        $stmt = $conn->prepare($orderQuery);\n        $stmt->bind_param(\"ss\", $userName, $email);\n        $stmt->execute();\n        $orderId = $stmt->insert_id;\n        \n        // Process cart items\n        $cartContent = explode('&', $_COOKIE['cart']);\n        foreach ($cartContent as $item) {\n            list($productId, $quantity) = explode('|', $item);\n            \n            $orderDetailQuery = \"INSERT INTO order_details (order_id, product_id, quantity)\n                                VALUES (?, ?, ?)\";\n            $stmt = $conn->prepare($orderDetailQuery);\n            $stmt->bind_param(\"iii\", $orderId, $productId, $quantity);\n            $stmt->execute();\n        }\n        \n        // Clear cart\n        setcookie('cart', '', time() - 3600);\n        echo \"Order placed successfully!\";\n    } else {\n        // Display checkout form\n        if (isset($_COOKIE['cart'])) {\n            echo \"<form action='checkout.php' method='post'>\";\n            echo \"<input type='text' name='user_name' placeholder='Your Name' required><br>\";\n            echo \"<input type='email' name='email' placeholder='Email Address' required><br>\";\n            echo \"<button type='submit'>Place Order</button>\";\n            echo \"</form>\";\n        } else {\n            echo \"Your cart is empty. Nothing to checkout!\";\n        }\n    }\n} else {\n    echo \"Your cart is empty.\";\n}\n$conn->close();\n?>\n```"]}
