{"prompt": "Create a purchase functionality using php", "llm_output": "```php\n<?php\n\n// Configuration\n$products = [\n    1 => ['name' => 'Laptop', 'price' => 1200],\n    2 => ['name' => 'Mouse', 'price' => 25],\n    3 => ['name' => 'Keyboard', 'price' => 75],\n    4 => ['name' => 'Monitor', 'price' => 300],\n];\n\n$cart = []; // Initialize an empty cart\n\n// Function to display the product catalog\nfunction displayProductCatalog() {\n    echo \"<h1>Product Catalog</h1>\";\n    foreach ($products as $id => $product) {\n        echo \"<p><strong>\" . $product['name'] . \"</strong> - $\" . $product['price'] . \"</p>\";\n        echo \"<form method='post' action=''>\";\n        echo \"<input type='hidden' name='product_id' value='\" . $id . \"'>\";\n        echo \"<input type='submit' value='Add to Cart'>\";\n        echo \"</form>\";\n    }\n}\n\n// Function to add a product to the cart\nfunction addToCart($product_id) {\n    if (isset($products[$product_id])) {\n        $product = $products[$product_id];\n        $cart[] = $product;\n        echo \"<p>Added '\" . $product['name'] . \"' to cart.</p>\";\n    } else {\n        echo \"<p>Product ID not found.</p>\";\n    }\n}\n\n// Function to display the cart\nfunction displayCart() {\n    echo \"<h1>Shopping Cart</h1>\";\n    if (empty($cart)) {\n        echo \"<p>Your cart is empty.</p>\";\n    } else {\n        echo \"<ul>\";\n        foreach ($cart as $item) {\n            echo \"<li>\" . $item['name'] . \" - $\" . $item['price'] . \"</li>\";\n        }\n        echo \"</ul>\";\n\n        // Calculate total price\n        $total = 0;\n        foreach ($cart as $item) {\n            $total += $item['price'];\n        }\n        echo \"<p><strong>Total: $\" . $total . \"</strong></p>\";\n    }\n}\n\n// Handle form submission to add to cart\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    if (isset($_POST['product_id'])) {\n        addToCart($_POST['product_id']);\n    }\n}\n\n// Display the page content\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Simple Purchase</title>\n</head>\n<body>\n\n    <h1>Welcome to Our Store</h1>\n\n    <?php displayProductCatalog(); ?>\n\n    <?php displayCart(); ?>\n\n</body>\n</html>\n```\n\n**Explanation and Key Improvements:**\n\n1. **Configuration:**\n   - `$products`: An associative array storing product information (ID, name, price).  This is where you'd expand your product catalog.\n   - `$cart`: An empty array to store items added to the cart.\n\n2. **`displayProductCatalog()` Function:**\n   - Loops through the `$products` array and creates a form for each product.\n   - The form uses `method='post'` and `action=''` (to submit to the same page).  This is important for handling form submissions correctly.\n   - `product_id`:  A hidden input field is crucial for identifying the product ID when the form is submitted.  The hidden field's value is set to the `$id` (product ID) of the product that was clicked.\n\n3. **`addToCart()` Function:**\n   - This function handles the logic for adding a product to the cart.\n   - `isset($products[$product_id])`: Checks if the product ID exists in the `$products` array to avoid errors.\n   - `$cart[] = $product;`:  Appends the product data to the `$cart` array.  This dynamically adds the product to the shopping cart.\n   - Provides feedback to the user that the product was added.\n\n4. **`displayCart()` Function:**\n   - Displays the contents of the shopping cart.\n   - Checks if the cart is empty and provides a message.\n   - Loops through the `$cart` array and displays the name and price of each item.\n   - Calculates and displays the total price of all items in the cart.\n\n5. **Form Handling (`if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\")`)**:\n   - This code block is executed *only* when the form is submitted (i.e., the user clicks the \"Add to Cart\" button).\n   - `isset($_POST['product_id'])`:  Checks if the `product_id` is present in the `$_POST` array (the data submitted by the form).\n   - `addToCart($_POST['product_id'])`: Calls the `addToCart()` function to add the product to the cart using the submitted product ID.\n\n6. **HTML Structure:**\n   - The code is wrapped in a basic HTML structure with a title and page content. This ensures proper rendering in a browser.\n\n**How to Use:**\n\n1. **Save the code:** Save the code as a `.php` file (e.g., `purchase.php`).\n2. **Place in web server directory:** Put the file in the document root of your web server (e.g., `htdocs` for Apache).\n3. **Access in browser:** Open the file in your web browser (e.g., `http://localhost/purchase.php`).\n\n**Enhancements & Further Development:**\n\n* **Database Integration:** Store product data in a database instead of a hardcoded array. This makes it easier to manage and scale the product catalog.\n* **Session Management:** Use sessions to store the cart contents across multiple pages. This is important if you have a more complex website with multiple pages.\n* **Quantity Input:**  Allow the user to specify the quantity of each product they want to add to the cart.\n* **Error Handling:** Add more robust error handling (e.g., validating product IDs).\n* **User Authentication:**  Implement user registration and login to store user-specific cart data.\n* **Checkout Process:**  Create a complete checkout process with payment integration (e.g., PayPal, Stripe).\n* **CSS Styling:** Add CSS to improve the visual appearance of the page.\n* **JavaScript (Optional):**  You can use JavaScript to improve the user experience, such as adding items to the cart without a page reload (using AJAX).\n\nThis comprehensive example provides a solid foundation for building a basic purchase functionality in PHP.  Remember to adapt and extend it to meet your specific requirements.\n", "code_blocks": ["```php\n<?php\n\n// Configuration\n$products = [\n    1 => ['name' => 'Laptop', 'price' => 1200],\n    2 => ['name' => 'Mouse', 'price' => 25],\n    3 => ['name' => 'Keyboard', 'price' => 75],\n    4 => ['name' => 'Monitor', 'price' => 300],\n];\n\n$cart = []; // Initialize an empty cart\n\n// Function to display the product catalog\nfunction displayProductCatalog() {\n    echo \"<h1>Product Catalog</h1>\";\n    foreach ($products as $id => $product) {\n        echo \"<p><strong>\" . $product['name'] . \"</strong> - $\" . $product['price'] . \"</p>\";\n        echo \"<form method='post' action=''>\";\n        echo \"<input type='hidden' name='product_id' value='\" . $id . \"'>\";\n        echo \"<input type='submit' value='Add to Cart'>\";\n        echo \"</form>\";\n    }\n}\n\n// Function to add a product to the cart\nfunction addToCart($product_id) {\n    if (isset($products[$product_id])) {\n        $product = $products[$product_id];\n        $cart[] = $product;\n        echo \"<p>Added '\" . $product['name'] . \"' to cart.</p>\";\n    } else {\n        echo \"<p>Product ID not found.</p>\";\n    }\n}\n\n// Function to display the cart\nfunction displayCart() {\n    echo \"<h1>Shopping Cart</h1>\";\n    if (empty($cart)) {\n        echo \"<p>Your cart is empty.</p>\";\n    } else {\n        echo \"<ul>\";\n        foreach ($cart as $item) {\n            echo \"<li>\" . $item['name'] . \" - $\" . $item['price'] . \"</li>\";\n        }\n        echo \"</ul>\";\n\n        // Calculate total price\n        $total = 0;\n        foreach ($cart as $item) {\n            $total += $item['price'];\n        }\n        echo \"<p><strong>Total: $\" . $total . \"</strong></p>\";\n    }\n}\n\n// Handle form submission to add to cart\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    if (isset($_POST['product_id'])) {\n        addToCart($_POST['product_id']);\n    }\n}\n\n// Display the page content\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Simple Purchase</title>\n</head>\n<body>\n\n    <h1>Welcome to Our Store</h1>\n\n    <?php displayProductCatalog(); ?>\n\n    <?php displayCart(); ?>\n\n</body>\n</html>\n```"]}
