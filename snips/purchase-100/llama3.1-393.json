{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how you can create a basic purchase functionality in PHP:\n\n**Database Schema**\n\nFirst, let's assume we have the following database schema:\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  user_id INT,\n  order_date DATE,\n  total_cost DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n**PHP Code**\n\nNext, let's create a PHP class to handle purchases:\n```php\nclass Purchase {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=shop', 'username', 'password');\n  }\n\n  public function addProductToCart($product_id, $quantity) {\n    // Get product details from database\n    $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$product_id]);\n    $product = $stmt->fetch();\n\n    if (!$product) {\n      throw new Exception('Product not found');\n    }\n\n    // Check if product is already in cart\n    $cart = $_SESSION['cart'] ?? [];\n    foreach ($cart as &$item) {\n      if ($item['id'] == $product_id) {\n        $item['quantity'] += $quantity;\n        return;\n      }\n    }\n\n    // Add product to cart\n    $cart[] = ['id' => $product_id, 'name' => $product['name'], 'price' => $product['price'], 'quantity' => $quantity];\n    $_SESSION['cart'] = $cart;\n\n    return true;\n  }\n\n  public function viewCart() {\n    // Get products in cart\n    $cart = $_SESSION['cart'] ?? [];\n    return $cart;\n  }\n\n  public function processCheckout() {\n    // Get user details (optional)\n    $user_id = $_SESSION['user_id'] ?? null;\n\n    // Calculate total cost\n    $total_cost = 0;\n    $cart = $_SESSION['cart'] ?? [];\n    foreach ($cart as $item) {\n      $product = $this->getProductDetails($item['id']);\n      $total_cost += $product['price'] * $item['quantity'];\n    }\n\n    // Insert order into database\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, order_date, total_cost) VALUES (?, ?, ?)\");\n    $stmt->execute([$user_id, date('Y-m-d'), $total_cost]);\n\n    // Get order ID\n    $order_id = $this->db->lastInsertId();\n\n    // Insert order items into database\n    foreach ($cart as $item) {\n      $product = $this->getProductDetails($item['id']);\n      $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n      $stmt->execute([$order_id, $product['id'], $item['quantity']]);\n    }\n\n    // Clear cart\n    unset($_SESSION['cart']);\n\n    return true;\n  }\n\n  private function getProductDetails($product_id) {\n    $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$product_id]);\n    return $stmt->fetch();\n  }\n}\n```\n**Example Usage**\n\nTo use this purchase functionality, you can follow these steps:\n\n1. Create a new instance of the `Purchase` class:\n```php\n$purchase = new Purchase();\n```\n2. Add products to cart using the `addProductToCart` method:\n```php\n$purchase->addProductToCart(1, 2); // Add product with ID 1 in quantity 2 to cart\n```\n3. View the contents of the cart using the `viewCart` method:\n```php\n$cart = $purchase->viewCart();\nprint_r($cart);\n```\n4. Process checkout using the `processCheckout` method:\n```php\n$purchase->processCheckout();\n```\nThis will insert a new order into the database and clear the cart.\n\nNote that this is just a basic example, and you may want to add additional functionality such as payment processing, user authentication, etc.", "code_blocks": [null, "```php\nclass Purchase {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=shop', 'username', 'password');\n  }\n\n  public function addProductToCart($product_id, $quantity) {\n    // Get product details from database\n    $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$product_id]);\n    $product = $stmt->fetch();\n\n    if (!$product) {\n      throw new Exception('Product not found');\n    }\n\n    // Check if product is already in cart\n    $cart = $_SESSION['cart'] ?? [];\n    foreach ($cart as &$item) {\n      if ($item['id'] == $product_id) {\n        $item['quantity'] += $quantity;\n        return;\n      }\n    }\n\n    // Add product to cart\n    $cart[] = ['id' => $product_id, 'name' => $product['name'], 'price' => $product['price'], 'quantity' => $quantity];\n    $_SESSION['cart'] = $cart;\n\n    return true;\n  }\n\n  public function viewCart() {\n    // Get products in cart\n    $cart = $_SESSION['cart'] ?? [];\n    return $cart;\n  }\n\n  public function processCheckout() {\n    // Get user details (optional)\n    $user_id = $_SESSION['user_id'] ?? null;\n\n    // Calculate total cost\n    $total_cost = 0;\n    $cart = $_SESSION['cart'] ?? [];\n    foreach ($cart as $item) {\n      $product = $this->getProductDetails($item['id']);\n      $total_cost += $product['price'] * $item['quantity'];\n    }\n\n    // Insert order into database\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, order_date, total_cost) VALUES (?, ?, ?)\");\n    $stmt->execute([$user_id, date('Y-m-d'), $total_cost]);\n\n    // Get order ID\n    $order_id = $this->db->lastInsertId();\n\n    // Insert order items into database\n    foreach ($cart as $item) {\n      $product = $this->getProductDetails($item['id']);\n      $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n      $stmt->execute([$order_id, $product['id'], $item['quantity']]);\n    }\n\n    // Clear cart\n    unset($_SESSION['cart']);\n\n    return true;\n  }\n\n  private function getProductDetails($product_id) {\n    $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$product_id]);\n    return $stmt->fetch();\n  }\n}\n```", "```php\n$purchase = new Purchase();\n```", "```php\n$purchase->addProductToCart(1, 2); // Add product with ID 1 in quantity 2 to cart\n```", "```php\n$cart = $purchase->viewCart();\nprint_r($cart);\n```", "```php\n$purchase->processCheckout();\n```"]}
