{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP. This will include creating a database connection, creating a table for products and orders, handling user registration and login, displaying products, adding products to cart, processing checkout, and storing the order in the database.\n\n**Note:** This is a simplified example and may not cover all possible edge cases or security measures that you should consider in your production application.\n\n### Database Schema\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    password VARCHAR(255)\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    order_date DATE,\n    total DECIMAL(10, 2),\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### PHP Code\n\n#### config.php\n```php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n$connection = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($connection->connect_error) {\n    die(\"Connection failed: \" . $connection->connect_error);\n}\n?>\n```\n\n#### user.php\n```php\n<?php\nclass User {\n    private $id;\n    private $username;\n    private $email;\n\n    public function __construct($id, $username, $email) {\n        $this->id = $id;\n        $this->username = $username;\n        $this->email = $email;\n    }\n\n    public static function registerUser($username, $email, $password) {\n        $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"sss\", $username, $email, $password);\n        $result = $stmt->execute();\n        if ($result) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static function loginUser($username, $password) {\n        $query = \"SELECT * FROM users WHERE username = ?\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"s\", $username);\n        $result = $stmt->execute();\n        if ($result) {\n            $user = $stmt->get_result()->fetch_assoc();\n            if (password_verify($password, $user['password'])) {\n                return new User($user['id'], $user['username'], $user['email']);\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n}\n?>\n```\n\n#### product.php\n```php\n<?php\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    public function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    public static function getProducts() {\n        $query = \"SELECT * FROM products\";\n        $result = $connection->query($query);\n        if ($result->num_rows > 0) {\n            while ($row = $result->fetch_assoc()) {\n                yield new Product($row['id'], $row['name'], $row['price']);\n            }\n        } else {\n            echo \"No products found.\";\n        }\n    }\n\n    public static function getProduct($id) {\n        $query = \"SELECT * FROM products WHERE id = ?\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"i\", $id);\n        $result = $stmt->execute();\n        if ($result) {\n            return $stmt->get_result()->fetch_assoc();\n        } else {\n            return null;\n        }\n    }\n}\n?>\n```\n\n#### cart.php\n```php\n<?php\nclass Cart {\n    private $items;\n\n    public function __construct() {\n        $this->items = array();\n    }\n\n    public function addProduct($id) {\n        if (array_key_exists($id, $this->items)) {\n            $this->items[$id]++;\n        } else {\n            $this->items[$id] = 1;\n        }\n    }\n\n    public function removeProduct($id) {\n        unset($this->items[$id]);\n    }\n\n    public function getItems() {\n        return $this->items;\n    }\n}\n?>\n```\n\n#### order.php\n```php\n<?php\nclass Order {\n    private $id;\n    private $user_id;\n    private $order_date;\n    private $total;\n\n    public function __construct($id, $user_id, $order_date, $total) {\n        $this->id = $id;\n        $this->user_id = $user_id;\n        $this->order_date = $order_date;\n        $this->total = $total;\n    }\n\n    public static function placeOrder($cart, $user_id) {\n        $query = \"INSERT INTO orders (user_id, order_date, total) VALUES (?, ?, ?)\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"iis\", $user_id, date('Y-m-d'), $cart->getTotal());\n        $result = $stmt->execute();\n        if ($result) {\n            return new Order($connection->insert_id, $user_id, date('Y-m-d'), $cart->getTotal());\n        } else {\n            return null;\n        }\n    }\n\n    public static function getOrder($id) {\n        $query = \"SELECT * FROM orders WHERE id = ?\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"i\", $id);\n        $result = $stmt->execute();\n        if ($result) {\n            return $stmt->get_result()->fetch_assoc();\n        } else {\n            return null;\n        }\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n}\n?>\n```\n\n#### index.php\n```php\n<?php\nrequire_once 'config.php';\nrequire_once 'user.php';\nrequire_once 'product.php';\nrequire_once 'cart.php';\nrequire_once 'order.php';\n\n// User registration and login functionality\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    if (User::registerUser($username, $email, $password)) {\n        echo \"User registered successfully.\";\n    } else {\n        echo \"Registration failed.\";\n    }\n} elseif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    $user = User::loginUser($username, $password);\n    if ($user !== null) {\n        echo \"Logged in successfully. Welcome, \" . $user->getUsername();\n    } else {\n        echo \"Login failed.\";\n    }\n}\n\n// Displaying products\n$products = array();\nforeach (Product::getProducts() as $product) {\n    $products[] = $product;\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase Functionality</title>\n</head>\n<body>\n    <!-- User registration and login forms -->\n    <?php if (isset($_POST['register'])) : ?>\n        <p><?php echo 'User registered successfully.'; ?></p>\n    <?php elseif (isset($_POST['login'])) : ?>\n        <p><?php echo 'Logged in successfully. Welcome, ' . $user->getUsername(); ?></p>\n    <?php endif; ?>\n\n    <!-- Product display and cart functionality -->\n    <h1>Products</h1>\n    <?php foreach ($products as $product) : ?>\n        <h2><?php echo $product->getName() . \" - $\" . number_format($product->getPrice(), 2); ?></h2>\n        <form action=\"index.php\" method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product->getId(); ?>\">\n            <button type=\"submit\">Add to cart</button>\n        </form>\n    <?php endforeach; ?>\n\n    <!-- Cart functionality -->\n    <h1>Cart</h1>\n    <ul>\n        <?php foreach ($cart as $item) : ?>\n            <li><?php echo \"Product ID: \" . $item['product_id'] . \", Quantity: \" . $item['quantity']; ?></li>\n        <?php endforeach; ?>\n    </ul>\n\n    <!-- Checkout functionality -->\n    <h1>Checkout</h1>\n    <form action=\"index.php\" method=\"post\">\n        <input type=\"hidden\" name=\"cart\" value=\"<?php echo json_encode($cart); ?>\">\n        <button type=\"submit\">Place order</button>\n    </form>\n</body>\n</html>\n```\n\nThis is a basic example and does not cover all possible edge cases or security measures that you should consider in your production application.", "code_blocks": [null, "```php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n$connection = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($connection->connect_error) {\n    die(\"Connection failed: \" . $connection->connect_error);\n}\n?>\n```", "```php\n<?php\nclass User {\n    private $id;\n    private $username;\n    private $email;\n\n    public function __construct($id, $username, $email) {\n        $this->id = $id;\n        $this->username = $username;\n        $this->email = $email;\n    }\n\n    public static function registerUser($username, $email, $password) {\n        $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"sss\", $username, $email, $password);\n        $result = $stmt->execute();\n        if ($result) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static function loginUser($username, $password) {\n        $query = \"SELECT * FROM users WHERE username = ?\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"s\", $username);\n        $result = $stmt->execute();\n        if ($result) {\n            $user = $stmt->get_result()->fetch_assoc();\n            if (password_verify($password, $user['password'])) {\n                return new User($user['id'], $user['username'], $user['email']);\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n}\n?>\n```", "```php\n<?php\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    public function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    public static function getProducts() {\n        $query = \"SELECT * FROM products\";\n        $result = $connection->query($query);\n        if ($result->num_rows > 0) {\n            while ($row = $result->fetch_assoc()) {\n                yield new Product($row['id'], $row['name'], $row['price']);\n            }\n        } else {\n            echo \"No products found.\";\n        }\n    }\n\n    public static function getProduct($id) {\n        $query = \"SELECT * FROM products WHERE id = ?\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"i\", $id);\n        $result = $stmt->execute();\n        if ($result) {\n            return $stmt->get_result()->fetch_assoc();\n        } else {\n            return null;\n        }\n    }\n}\n?>\n```", "```php\n<?php\nclass Cart {\n    private $items;\n\n    public function __construct() {\n        $this->items = array();\n    }\n\n    public function addProduct($id) {\n        if (array_key_exists($id, $this->items)) {\n            $this->items[$id]++;\n        } else {\n            $this->items[$id] = 1;\n        }\n    }\n\n    public function removeProduct($id) {\n        unset($this->items[$id]);\n    }\n\n    public function getItems() {\n        return $this->items;\n    }\n}\n?>\n```", "```php\n<?php\nclass Order {\n    private $id;\n    private $user_id;\n    private $order_date;\n    private $total;\n\n    public function __construct($id, $user_id, $order_date, $total) {\n        $this->id = $id;\n        $this->user_id = $user_id;\n        $this->order_date = $order_date;\n        $this->total = $total;\n    }\n\n    public static function placeOrder($cart, $user_id) {\n        $query = \"INSERT INTO orders (user_id, order_date, total) VALUES (?, ?, ?)\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"iis\", $user_id, date('Y-m-d'), $cart->getTotal());\n        $result = $stmt->execute();\n        if ($result) {\n            return new Order($connection->insert_id, $user_id, date('Y-m-d'), $cart->getTotal());\n        } else {\n            return null;\n        }\n    }\n\n    public static function getOrder($id) {\n        $query = \"SELECT * FROM orders WHERE id = ?\";\n        $stmt = $connection->prepare($query);\n        $stmt->bind_param(\"i\", $id);\n        $result = $stmt->execute();\n        if ($result) {\n            return $stmt->get_result()->fetch_assoc();\n        } else {\n            return null;\n        }\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\nrequire_once 'user.php';\nrequire_once 'product.php';\nrequire_once 'cart.php';\nrequire_once 'order.php';\n\n// User registration and login functionality\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    if (User::registerUser($username, $email, $password)) {\n        echo \"User registered successfully.\";\n    } else {\n        echo \"Registration failed.\";\n    }\n} elseif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    $user = User::loginUser($username, $password);\n    if ($user !== null) {\n        echo \"Logged in successfully. Welcome, \" . $user->getUsername();\n    } else {\n        echo \"Login failed.\";\n    }\n}\n\n// Displaying products\n$products = array();\nforeach (Product::getProducts() as $product) {\n    $products[] = $product;\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase Functionality</title>\n</head>\n<body>\n    <!-- User registration and login forms -->\n    <?php if (isset($_POST['register'])) : ?>\n        <p><?php echo 'User registered successfully.'; ?></p>\n    <?php elseif (isset($_POST['login'])) : ?>\n        <p><?php echo 'Logged in successfully. Welcome, ' . $user->getUsername(); ?></p>\n    <?php endif; ?>\n\n    <!-- Product display and cart functionality -->\n    <h1>Products</h1>\n    <?php foreach ($products as $product) : ?>\n        <h2><?php echo $product->getName() . \" - $\" . number_format($product->getPrice(), 2); ?></h2>\n        <form action=\"index.php\" method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product->getId(); ?>\">\n            <button type=\"submit\">Add to cart</button>\n        </form>\n    <?php endforeach; ?>\n\n    <!-- Cart functionality -->\n    <h1>Cart</h1>\n    <ul>\n        <?php foreach ($cart as $item) : ?>\n            <li><?php echo \"Product ID: \" . $item['product_id'] . \", Quantity: \" . $item['quantity']; ?></li>\n        <?php endforeach; ?>\n    </ul>\n\n    <!-- Checkout functionality -->\n    <h1>Checkout</h1>\n    <form action=\"index.php\" method=\"post\">\n        <input type=\"hidden\" name=\"cart\" value=\"<?php echo json_encode($cart); ?>\">\n        <button type=\"submit\">Place order</button>\n    </form>\n</body>\n</html>\n```"]}
