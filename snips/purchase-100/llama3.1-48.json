{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here's an example of how you can implement a basic purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n\n// Initialize the cart array\n$cart = array();\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n  global $cart;\n  \n  // Check if item is already in cart\n  foreach ($cart as $key => $value) {\n    if ($key == $item_id) {\n      // If item is already in cart, update quantity\n      $cart[$key]['quantity'] += $quantity;\n      break;\n    }\n  }\n\n  // Add new item to cart if not already present\n  if (!isset($cart[$item_id])) {\n    $cart[$item_id] = array('name' => '', 'price' => 0, 'quantity' => $quantity);\n  }\n}\n\n// Function to update quantity of an item in the cart\nfunction update_item_quantity($item_id, $new_quantity) {\n  global $cart;\n  \n  // Check if item is already in cart\n  foreach ($cart as $key => $value) {\n    if ($key == $item_id) {\n      // Update quantity\n      $cart[$item_id]['quantity'] = $new_quantity;\n      break;\n    }\n  }\n}\n\n// Function to remove an item from the cart\nfunction remove_item_from_cart($item_id) {\n  global $cart;\n  \n  // Remove item from cart\n  unset($cart[$item_id]);\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n  global $cart;\n  \n  $total_cost = 0;\n  \n  foreach ($cart as $key => $value) {\n    $total_cost += $value['price'] * $value['quantity'];\n  }\n  \n  return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n  global $cart;\n  \n  echo '<table>';\n  echo '<tr><th>Item</th><th>Price</th><th>Quantity</th></tr>';\n  \n  foreach ($cart as $key => $value) {\n    echo '<tr>';\n    echo '<td>' . $value['name'] . '</td>';\n    echo '<td>$' . number_format($value['price'], 2) . '</td>';\n    echo '<td>' . $value['quantity'] . '</td>';\n    echo '</tr>';\n  }\n  \n  echo '</table>';\n}\n\n// Function to display cart total cost\nfunction display_cart_total_cost() {\n  global $cart;\n  \n  echo 'Total Cost: $' . number_format(calculate_total_cost(), 2);\n}\n\n?>\n```\n\n**index.php**\n```php\n<?php\n\ninclude 'cart.php';\n\n// Assume we have a database with products and their prices\n$products = array(\n  1 => array('name' => 'Product A', 'price' => 9.99),\n  2 => array('name' => 'Product B', 'price' => 19.99),\n  3 => array('name' => 'Product C', 'price' => 29.99)\n);\n\n// Display products\necho '<h1>Products</h1>';\necho '<ul>';\nforeach ($products as $key => $value) {\n  echo '<li><a href=\"#\" onclick=\"add_item_to_cart(' . $key . ', 1)\">Add to Cart (' . $value['name'] . ' - $' . number_format($value['price'], 2) . ')</a></li>';\n}\necho '</ul>';\n\n// Display cart\necho '<h1>Cart</h1>';\ndisplay_cart_contents();\ndisplay_cart_total_cost();\n\n?>\n```\n\nThis is a basic example of how you can implement a purchase cart functionality using PHP. The `cart.php` file contains functions for managing the cart, while the `index.php` file displays products and allows users to add items to their cart.\n\nNote: This is just an example and does not include any error handling or security measures that would be required in a real-world application.\n\n**Adding items to cart**\n\nYou can add items to your cart by clicking on the \"Add to Cart\" link for each product. The `add_item_to_cart` function will update the quantity of the item in the cart, or add it if it's not already present.\n\n**Updating quantities**\n\nTo update the quantity of an item in the cart, you can use the `update_item_quantity` function. For example: `update_item_quantity(1, 2)` would update the quantity of item #1 to 2.\n\n**Removing items**\n\nTo remove an item from your cart, you can use the `remove_item_from_cart` function. For example: `remove_item_from_cart(1)` would remove item #1 from your cart.\n\n**Calculating total cost**\n\nThe `calculate_total_cost` function will calculate the total cost of all items in your cart.\n\n**Displaying cart contents and total cost**\n\nYou can display the contents of your cart using the `display_cart_contents` function, which will show each item in the cart along with its price and quantity. The `display_cart_total_cost` function will display the total cost of all items in your cart.", "code_blocks": ["```php\n<?php\n\n// Initialize the cart array\n$cart = array();\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n  global $cart;\n  \n  // Check if item is already in cart\n  foreach ($cart as $key => $value) {\n    if ($key == $item_id) {\n      // If item is already in cart, update quantity\n      $cart[$key]['quantity'] += $quantity;\n      break;\n    }\n  }\n\n  // Add new item to cart if not already present\n  if (!isset($cart[$item_id])) {\n    $cart[$item_id] = array('name' => '', 'price' => 0, 'quantity' => $quantity);\n  }\n}\n\n// Function to update quantity of an item in the cart\nfunction update_item_quantity($item_id, $new_quantity) {\n  global $cart;\n  \n  // Check if item is already in cart\n  foreach ($cart as $key => $value) {\n    if ($key == $item_id) {\n      // Update quantity\n      $cart[$item_id]['quantity'] = $new_quantity;\n      break;\n    }\n  }\n}\n\n// Function to remove an item from the cart\nfunction remove_item_from_cart($item_id) {\n  global $cart;\n  \n  // Remove item from cart\n  unset($cart[$item_id]);\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n  global $cart;\n  \n  $total_cost = 0;\n  \n  foreach ($cart as $key => $value) {\n    $total_cost += $value['price'] * $value['quantity'];\n  }\n  \n  return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n  global $cart;\n  \n  echo '<table>';\n  echo '<tr><th>Item</th><th>Price</th><th>Quantity</th></tr>';\n  \n  foreach ($cart as $key => $value) {\n    echo '<tr>';\n    echo '<td>' . $value['name'] . '</td>';\n    echo '<td>$' . number_format($value['price'], 2) . '</td>';\n    echo '<td>' . $value['quantity'] . '</td>';\n    echo '</tr>';\n  }\n  \n  echo '</table>';\n}\n\n// Function to display cart total cost\nfunction display_cart_total_cost() {\n  global $cart;\n  \n  echo 'Total Cost: $' . number_format(calculate_total_cost(), 2);\n}\n\n?>\n```", "```php\n<?php\n\ninclude 'cart.php';\n\n// Assume we have a database with products and their prices\n$products = array(\n  1 => array('name' => 'Product A', 'price' => 9.99),\n  2 => array('name' => 'Product B', 'price' => 19.99),\n  3 => array('name' => 'Product C', 'price' => 29.99)\n);\n\n// Display products\necho '<h1>Products</h1>';\necho '<ul>';\nforeach ($products as $key => $value) {\n  echo '<li><a href=\"#\" onclick=\"add_item_to_cart(' . $key . ', 1)\">Add to Cart (' . $value['name'] . ' - $' . number_format($value['price'], 2) . ')</a></li>';\n}\necho '</ul>';\n\n// Display cart\necho '<h1>Cart</h1>';\ndisplay_cart_contents();\ndisplay_cart_total_cost();\n\n?>\n```"]}
