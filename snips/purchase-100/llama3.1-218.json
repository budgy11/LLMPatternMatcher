{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a simple purchase functionality using PHP:\n\n**Assumptions:**\n\n* We have a database with the following tables:\n\t+ `products`: stores product information (id, name, price, description)\n\t+ `orders`: stores order information (id, customer_id, date, total)\n\t+ `order_items`: stores items in an order (id, order_id, product_id, quantity)\n* We are using a MySQL database for this example\n\n**PHP Code:**\n\n```php\n// Connect to the database\n$db = new mysqli('localhost', 'username', 'password', 'database');\n\n// Check connection\nif ($db->connect_error) {\n    die(\"Connection failed: \" . $db->connect_error);\n}\n\n// Function to add a product to the cart\nfunction add_to_cart($product_id, $quantity) {\n    global $db;\n    // Get the current session id (assuming we're using PHP sessions)\n    $session_id = session_id();\n\n    // Check if the product is already in the cart\n    $query = \"SELECT * FROM cart WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n    $result = $db->query($query);\n    if ($result->num_rows > 0) {\n        // Product is already in the cart, update quantity\n        $row = $result->fetch_assoc();\n        $new_quantity = $quantity + $row['quantity'];\n        $update_query = \"UPDATE cart SET quantity = '$new_quantity' WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n        $db->query($update_query);\n    } else {\n        // Product is not in the cart, add it\n        $insert_query = \"INSERT INTO cart (session_id, product_id, quantity) VALUES ('$session_id', '$product_id', '$quantity')\";\n        $db->query($insert_query);\n    }\n}\n\n// Function to remove a product from the cart\nfunction remove_from_cart($product_id) {\n    global $db;\n    // Get the current session id\n    $session_id = session_id();\n\n    // Remove the product from the cart\n    $delete_query = \"DELETE FROM cart WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n    $db->query($delete_query);\n}\n\n// Function to update the quantity of a product in the cart\nfunction update_cart_quantity($product_id, $new_quantity) {\n    global $db;\n    // Get the current session id\n    $session_id = session_id();\n\n    // Update the quantity of the product in the cart\n    $update_query = \"UPDATE cart SET quantity = '$new_quantity' WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n    $db->query($update_query);\n}\n\n// Function to process a purchase (create an order and add items)\nfunction process_purchase() {\n    global $db;\n    // Get the current session id\n    $session_id = session_id();\n\n    // Create a new order\n    $insert_order_query = \"INSERT INTO orders (customer_id, date, total) VALUES ('$session_id', NOW(), 0)\";\n    $db->query($insert_order_query);\n\n    // Get the ID of the newly created order\n    $order_id = $db->insert_id;\n\n    // Add items to the order from the cart\n    $query = \"SELECT * FROM cart WHERE session_id = '$session_id'\";\n    $result = $db->query($query);\n    while ($row = $result->fetch_assoc()) {\n        // Get the product information\n        $product_query = \"SELECT * FROM products WHERE id = '$row[product_id]'\";\n        $product_result = $db->query($product_query);\n        $product_row = $product_result->fetch_assoc();\n\n        // Add the item to the order\n        $insert_item_query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$row[product_id]', '$row[quantity]')\";\n        $db->query($insert_item_query);\n\n        // Update the total of the order\n        $total = $product_row['price'] * $row['quantity'];\n        $update_total_query = \"UPDATE orders SET total = total + '$total' WHERE id = '$order_id'\";\n        $db->query($update_total_query);\n    }\n\n    // Remove all items from the cart\n    $delete_cart_query = \"DELETE FROM cart WHERE session_id = '$session_id'\";\n    $db->query($delete_cart_query);\n\n    return $order_id;\n}\n\n// Example usage:\nadd_to_cart(1, 2); // Add product with ID 1 to cart in quantity 2\n\n// Process the purchase\n$order_id = process_purchase();\necho \"Order ID: $order_id\";\n```\n\n**HTML/JavaScript example (assuming you're using AJAX):**\n\n```html\n<!-- Example HTML form -->\n<form id=\"purchase-form\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $_GET['product_id']; ?>\">\n    <input type=\"hidden\" name=\"quantity\" value=\"<?php echo $_GET['quantity']; ?>\">\n</form>\n\n<script>\n    // Send AJAX request to server when form is submitted\n    $('#purchase-form').submit(function() {\n        $.ajax({\n            type: 'POST',\n            url: '/process_purchase.php',\n            data: $(this).serialize(),\n            success: function(data) {\n                console.log('Purchase processed successfully!');\n                // Update order ID in the UI\n                $('#order-id').html('<b>Order ID:</b> ' + data);\n            }\n        });\n    });\n</script>\n```\n\nNote that this is a simplified example and you should consider implementing additional features, such as:\n\n* User authentication and authorization\n* Session management (e.g., store user session IDs in a database or use a library like PHP-Session)\n* Error handling and logging\n* Input validation and sanitization\n* Payment processing integration (if applicable)\n\nThis is just a starting point to help you get started with creating a purchase functionality using PHP. Make sure to consult the official PHP documentation, as well as other resources for more information on best practices and security considerations.", "code_blocks": ["```php\n// Connect to the database\n$db = new mysqli('localhost', 'username', 'password', 'database');\n\n// Check connection\nif ($db->connect_error) {\n    die(\"Connection failed: \" . $db->connect_error);\n}\n\n// Function to add a product to the cart\nfunction add_to_cart($product_id, $quantity) {\n    global $db;\n    // Get the current session id (assuming we're using PHP sessions)\n    $session_id = session_id();\n\n    // Check if the product is already in the cart\n    $query = \"SELECT * FROM cart WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n    $result = $db->query($query);\n    if ($result->num_rows > 0) {\n        // Product is already in the cart, update quantity\n        $row = $result->fetch_assoc();\n        $new_quantity = $quantity + $row['quantity'];\n        $update_query = \"UPDATE cart SET quantity = '$new_quantity' WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n        $db->query($update_query);\n    } else {\n        // Product is not in the cart, add it\n        $insert_query = \"INSERT INTO cart (session_id, product_id, quantity) VALUES ('$session_id', '$product_id', '$quantity')\";\n        $db->query($insert_query);\n    }\n}\n\n// Function to remove a product from the cart\nfunction remove_from_cart($product_id) {\n    global $db;\n    // Get the current session id\n    $session_id = session_id();\n\n    // Remove the product from the cart\n    $delete_query = \"DELETE FROM cart WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n    $db->query($delete_query);\n}\n\n// Function to update the quantity of a product in the cart\nfunction update_cart_quantity($product_id, $new_quantity) {\n    global $db;\n    // Get the current session id\n    $session_id = session_id();\n\n    // Update the quantity of the product in the cart\n    $update_query = \"UPDATE cart SET quantity = '$new_quantity' WHERE session_id = '$session_id' AND product_id = '$product_id'\";\n    $db->query($update_query);\n}\n\n// Function to process a purchase (create an order and add items)\nfunction process_purchase() {\n    global $db;\n    // Get the current session id\n    $session_id = session_id();\n\n    // Create a new order\n    $insert_order_query = \"INSERT INTO orders (customer_id, date, total) VALUES ('$session_id', NOW(), 0)\";\n    $db->query($insert_order_query);\n\n    // Get the ID of the newly created order\n    $order_id = $db->insert_id;\n\n    // Add items to the order from the cart\n    $query = \"SELECT * FROM cart WHERE session_id = '$session_id'\";\n    $result = $db->query($query);\n    while ($row = $result->fetch_assoc()) {\n        // Get the product information\n        $product_query = \"SELECT * FROM products WHERE id = '$row[product_id]'\";\n        $product_result = $db->query($product_query);\n        $product_row = $product_result->fetch_assoc();\n\n        // Add the item to the order\n        $insert_item_query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$row[product_id]', '$row[quantity]')\";\n        $db->query($insert_item_query);\n\n        // Update the total of the order\n        $total = $product_row['price'] * $row['quantity'];\n        $update_total_query = \"UPDATE orders SET total = total + '$total' WHERE id = '$order_id'\";\n        $db->query($update_total_query);\n    }\n\n    // Remove all items from the cart\n    $delete_cart_query = \"DELETE FROM cart WHERE session_id = '$session_id'\";\n    $db->query($delete_cart_query);\n\n    return $order_id;\n}\n\n// Example usage:\nadd_to_cart(1, 2); // Add product with ID 1 to cart in quantity 2\n\n// Process the purchase\n$order_id = process_purchase();\necho \"Order ID: $order_id\";\n```", null]}
