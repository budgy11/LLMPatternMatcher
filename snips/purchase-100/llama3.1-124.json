{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a basic purchase functionality using PHP. This will include creating a product, viewing all products, adding products to cart, and checking out.\n\n**Database Schema**\n\nFor this example, we'll use the following database schema:\n\n* `products` table:\n\t+ `id` (primary key)\n\t+ `name`\n\t+ `price`\n* `carts` table:\n\t+ `id` (primary key)\n\t+ `user_id`\n\t+ `product_id`\n\t+ `quantity`\n\n**PHP Code**\n\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'store';\n\n// Create connection\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to create product\nfunction create_product($name, $price) {\n    global $conn;\n    $sql = \"INSERT INTO products (name, price) VALUES (?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $name, $price);\n    $stmt->execute();\n}\n\n// Function to view all products\nfunction get_products() {\n    global $conn;\n    $sql = \"SELECT * FROM products\";\n    $result = $conn->query($sql);\n    return $result;\n}\n\n// Function to add product to cart\nfunction add_to_cart($user_id, $product_id, $quantity) {\n    global $conn;\n    $sql = \"INSERT INTO carts (user_id, product_id, quantity) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"iii\", $user_id, $product_id, $quantity);\n    $stmt->execute();\n}\n\n// Function to checkout\nfunction checkout() {\n    global $conn;\n    // Empty cart\n    $sql = \"DELETE FROM carts\";\n    $conn->query($sql);\n\n    // Update stock\n    $sql = \"UPDATE products SET stock = stock - quantity WHERE id IN (SELECT product_id FROM carts)\";\n    $conn->query($sql);\n}\n\n?>\n```\n\n**HTML/JavaScript Code**\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Purchase Functionality</title>\n</head>\n<body>\n\n<h1>Products:</h1>\n<ul>\n    <?php\n    $result = get_products();\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<li>\" . $row['name'] . \" - $\" . $row['price'] . \"</li>\";\n    }\n    ?>\n</ul>\n\n<h1>Add to Cart:</h1>\n<form action=\"\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"number\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n\n<?php\nif (isset($_POST['add_to_cart'])) {\n    $user_id = 1; // Replace with actual user ID\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    add_to_cart($user_id, $product_id, $quantity);\n\n    echo \"Product added to cart!\";\n}\n\n// Checkout button\n?>\n<button onclick=\"checkout()\">Checkout</button>\n\n<script>\nfunction checkout() {\n    // Empty cart\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"GET\", \"empty-cart.php\", true);\n    xhttp.send();\n\n    // Update stock\n    var xhttp2 = new XMLHttpRequest();\n    xhttp2.open(\"GET\", \"update-stock.php\", true);\n    xhttp2.send();\n}\n</script>\n\n</body>\n</html>\n```\n\n**Note**: This code assumes you have PHP 7.x or higher and MySQLi extension enabled. You'll need to replace the placeholders (`$dbHost`, `$dbUsername`, etc.) with your actual database credentials.\n\nThis is a basic example, and in a real-world scenario, you would want to add more error checking, validation, and security measures (e.g., user authentication, input sanitization).", "code_blocks": ["```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'store';\n\n// Create connection\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to create product\nfunction create_product($name, $price) {\n    global $conn;\n    $sql = \"INSERT INTO products (name, price) VALUES (?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $name, $price);\n    $stmt->execute();\n}\n\n// Function to view all products\nfunction get_products() {\n    global $conn;\n    $sql = \"SELECT * FROM products\";\n    $result = $conn->query($sql);\n    return $result;\n}\n\n// Function to add product to cart\nfunction add_to_cart($user_id, $product_id, $quantity) {\n    global $conn;\n    $sql = \"INSERT INTO carts (user_id, product_id, quantity) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"iii\", $user_id, $product_id, $quantity);\n    $stmt->execute();\n}\n\n// Function to checkout\nfunction checkout() {\n    global $conn;\n    // Empty cart\n    $sql = \"DELETE FROM carts\";\n    $conn->query($sql);\n\n    // Update stock\n    $sql = \"UPDATE products SET stock = stock - quantity WHERE id IN (SELECT product_id FROM carts)\";\n    $conn->query($sql);\n}\n\n?>\n```", null]}
