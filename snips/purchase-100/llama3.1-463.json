{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Database Schema**\n\nFor this example, we'll use a simple database schema with two tables: `products` and `orders`.\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  order_date DATE,\n  total_price DECIMAL(10,2),\n  FOREIGN KEY (id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nCreate a new PHP file named `purchase.php` and add the following code:\n```php\n<?php\n\n// Connect to database\n$db = new PDO('mysql:host=localhost;dbname=store', 'username', 'password');\n\n// Check if form is submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get product ID from form data\n  $product_id = $_POST['product_id'];\n\n  // Get product details from database\n  $stmt = $db->prepare('SELECT * FROM products WHERE id = :id');\n  $stmt->bindParam(':id', $product_id);\n  $stmt->execute();\n  $product = $stmt->fetch();\n\n  if ($product) {\n    // Calculate total price\n    $total_price = $product['price'];\n\n    // Insert new order into database\n    $stmt = $db->prepare('INSERT INTO orders (customer_name, order_date, total_price, product_id) VALUES (:name, NOW(), :price, :id)');\n    $stmt->bindParam(':name', $_POST['customer_name']);\n    $stmt->bindParam(':price', $total_price);\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n\n    // Update stock quantity\n    $stmt = $db->prepare('UPDATE products SET stock_quantity = stock_quantity - 1 WHERE id = :id');\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n\n    // Display success message\n    echo 'Order placed successfully!';\n  } else {\n    echo 'Product not found.';\n  }\n}\n\n// Display form\n?>\n<form action=\"\" method=\"post\">\n  <label for=\"product_id\">Select Product:</label>\n  <select name=\"product_id\" id=\"product_id\">\n    <?php\n      // Get all products from database\n      $stmt = $db->prepare('SELECT * FROM products');\n      $stmt->execute();\n      while ($row = $stmt->fetch()) {\n        echo '<option value=\"' . $row['id'] . '\">' . $row['name'] . '</option>';\n      }\n    ?>\n  </select>\n  <br><br>\n  <label for=\"customer_name\">Customer Name:</label>\n  <input type=\"text\" name=\"customer_name\" id=\"customer_name\">\n  <br><br>\n  <input type=\"submit\" value=\"Place Order\">\n</form>\n```\n**How it works**\n\n1. When the form is submitted, the PHP script checks if the `product_id` field is set.\n2. If it is, the script retrieves the product details from the database using a prepared statement.\n3. The total price of the order is calculated by multiplying the product price with 1 (since we're buying one unit).\n4. A new order is inserted into the `orders` table with the customer name, order date, and total price.\n5. The stock quantity of the product is updated in the `products` table.\n\nNote: This is a basic example and you should add error checking and validation to make it more robust. Also, this assumes that you're using a MySQL database. You'll need to modify the code if you're using a different database system.", "code_blocks": [null, "```php\n<?php\n\n// Connect to database\n$db = new PDO('mysql:host=localhost;dbname=store', 'username', 'password');\n\n// Check if form is submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get product ID from form data\n  $product_id = $_POST['product_id'];\n\n  // Get product details from database\n  $stmt = $db->prepare('SELECT * FROM products WHERE id = :id');\n  $stmt->bindParam(':id', $product_id);\n  $stmt->execute();\n  $product = $stmt->fetch();\n\n  if ($product) {\n    // Calculate total price\n    $total_price = $product['price'];\n\n    // Insert new order into database\n    $stmt = $db->prepare('INSERT INTO orders (customer_name, order_date, total_price, product_id) VALUES (:name, NOW(), :price, :id)');\n    $stmt->bindParam(':name', $_POST['customer_name']);\n    $stmt->bindParam(':price', $total_price);\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n\n    // Update stock quantity\n    $stmt = $db->prepare('UPDATE products SET stock_quantity = stock_quantity - 1 WHERE id = :id');\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n\n    // Display success message\n    echo 'Order placed successfully!';\n  } else {\n    echo 'Product not found.';\n  }\n}\n\n// Display form\n?>\n<form action=\"\" method=\"post\">\n  <label for=\"product_id\">Select Product:</label>\n  <select name=\"product_id\" id=\"product_id\">\n    <?php\n      // Get all products from database\n      $stmt = $db->prepare('SELECT * FROM products');\n      $stmt->execute();\n      while ($row = $stmt->fetch()) {\n        echo '<option value=\"' . $row['id'] . '\">' . $row['name'] . '</option>';\n      }\n    ?>\n  </select>\n  <br><br>\n  <label for=\"customer_name\">Customer Name:</label>\n  <input type=\"text\" name=\"customer_name\" id=\"customer_name\">\n  <br><br>\n  <input type=\"submit\" value=\"Place Order\">\n</form>\n```"]}
