{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here's an example of how you can implement a basic purchase cart functionality in PHP.\n\n**cart.php**\n```php\n<?php\n// Initialize the cart array\n$cart = [];\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n  global $cart;\n  if (!isset($cart[$item_id])) {\n    $cart[$item_id] = ['quantity' => 0];\n  }\n  $cart[$item_id]['quantity'] += $quantity;\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($item_id) {\n  global $cart;\n  unset($cart[$item_id]);\n}\n\n// Function to update quantity of an item in the cart\nfunction update_quantity_in_cart($item_id, $new_quantity) {\n  global $cart;\n  if (isset($cart[$item_id])) {\n    $cart[$item_id]['quantity'] = $new_quantity;\n  }\n}\n\n// Function to display items in cart\nfunction display_cart() {\n  global $cart;\n  echo '<h2>Your Cart:</h2>';\n  foreach ($cart as $item_id => $item_data) {\n    echo '<p>' . get_item_name($item_id) . ' x ' . $item_data['quantity'] . '</p>';\n  }\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n  global $cart;\n  $total = 0;\n  foreach ($cart as $item_id => $item_data) {\n    $price = get_item_price($item_id);\n    $total += $price * $item_data['quantity'];\n  }\n  return $total;\n}\n\n// Function to display total cost\nfunction display_total_cost() {\n  echo '<p>Total: \u00a3' . calculate_total_cost() . '</p>';\n}\n\n// Function to process checkout ( dummy implementation )\nfunction process_checkout() {\n  // TO DO: implement actual payment processing\n  echo '<h2>Thank you for your order!</h2>';\n}\n```\n\n**index.php**\n```php\n<?php include 'cart.php'; ?>\n\n<h1>Shop</h1>\n\n<!-- Example product data -->\n<?php $products = [\n  ['id' => 1, 'name' => 'Product A', 'price' => 10.99],\n  ['id' => 2, 'name' => 'Product B', 'price' => 5.99],\n  ['id' => 3, 'name' => 'Product C', 'price' => 7.99],\n]; ?>\n\n<!-- Display products -->\n<?php foreach ($products as $product) : ?>\n  <p>\n    <?php echo $product['name']; ?> (\u00a3<?php echo $product['price']; ?>)\n    <button onclick=\"add_item_to_cart(<?php echo $product['id']; ?>, 1)\">Add to Cart</button>\n  </p>\n<?php endforeach; ?>\n\n<!-- Display cart -->\n<?php display_cart(); ?>\n<?php display_total_cost(); ?>\n\n<button onclick=\"process_checkout()\">Checkout</button>\n\n<script>\n  function add_item_to_cart(item_id, quantity) {\n    // TO DO: implement JavaScript equivalent of PHP's add_item_to_cart()\n    console.log('Adding item to cart:', item_id, quantity);\n  }\n</script>\n```\n\n**Explanation**\n\nThis code sets up a basic cart system using an array to store items. Each item is represented by its ID and quantity.\n\nThe `add_item_to_cart()` function increments the quantity of an item in the cart if it already exists, or adds it if not.\n\nThe `remove_item_from_cart()` function simply removes an item from the cart by its ID.\n\nThe `update_quantity_in_cart()` function updates the quantity of an existing item in the cart.\n\nThe `display_cart()` and `display_total_cost()` functions echo out a table listing all items in the cart, along with their quantities and prices, as well as a total cost calculation.\n\nFinally, the `process_checkout()` function (which is currently a placeholder) will be called when the \"Checkout\" button is clicked. In a real-world implementation, this would likely involve actually processing payment information.\n\nThis example assumes you're using an array to store product data in PHP, but in a real application, you'd typically use a database for that.\n\nAlso note that the JavaScript code in `index.php` is just a placeholder and doesn't interact with the actual cart functionality. You'll need to implement a JavaScript equivalent of the PHP functions to make it work.", "code_blocks": ["```php\n<?php\n// Initialize the cart array\n$cart = [];\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n  global $cart;\n  if (!isset($cart[$item_id])) {\n    $cart[$item_id] = ['quantity' => 0];\n  }\n  $cart[$item_id]['quantity'] += $quantity;\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($item_id) {\n  global $cart;\n  unset($cart[$item_id]);\n}\n\n// Function to update quantity of an item in the cart\nfunction update_quantity_in_cart($item_id, $new_quantity) {\n  global $cart;\n  if (isset($cart[$item_id])) {\n    $cart[$item_id]['quantity'] = $new_quantity;\n  }\n}\n\n// Function to display items in cart\nfunction display_cart() {\n  global $cart;\n  echo '<h2>Your Cart:</h2>';\n  foreach ($cart as $item_id => $item_data) {\n    echo '<p>' . get_item_name($item_id) . ' x ' . $item_data['quantity'] . '</p>';\n  }\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n  global $cart;\n  $total = 0;\n  foreach ($cart as $item_id => $item_data) {\n    $price = get_item_price($item_id);\n    $total += $price * $item_data['quantity'];\n  }\n  return $total;\n}\n\n// Function to display total cost\nfunction display_total_cost() {\n  echo '<p>Total: \u00a3' . calculate_total_cost() . '</p>';\n}\n\n// Function to process checkout ( dummy implementation )\nfunction process_checkout() {\n  // TO DO: implement actual payment processing\n  echo '<h2>Thank you for your order!</h2>';\n}\n```", "```php\n<?php include 'cart.php'; ?>\n\n<h1>Shop</h1>\n\n<!-- Example product data -->\n<?php $products = [\n  ['id' => 1, 'name' => 'Product A', 'price' => 10.99],\n  ['id' => 2, 'name' => 'Product B', 'price' => 5.99],\n  ['id' => 3, 'name' => 'Product C', 'price' => 7.99],\n]; ?>\n\n<!-- Display products -->\n<?php foreach ($products as $product) : ?>\n  <p>\n    <?php echo $product['name']; ?> (\u00a3<?php echo $product['price']; ?>)\n    <button onclick=\"add_item_to_cart(<?php echo $product['id']; ?>, 1)\">Add to Cart</button>\n  </p>\n<?php endforeach; ?>\n\n<!-- Display cart -->\n<?php display_cart(); ?>\n<?php display_total_cost(); ?>\n\n<button onclick=\"process_checkout()\">Checkout</button>\n\n<script>\n  function add_item_to_cart(item_id, quantity) {\n    // TO DO: implement JavaScript equivalent of PHP's add_item_to_cart()\n    console.log('Adding item to cart:', item_id, quantity);\n  }\n</script>\n```"]}
