{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality using PHP, including user input validation and database interaction:\n\n**Note:** This is a basic example and should be adapted to your specific use case. Also, this example assumes you have a MySQL database set up with a table named `orders` that has the following structure:\n```sql\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_name VARCHAR(255),\n  price DECIMAL(10,2),\n  quantity INT,\n  total DECIMAL(10,2),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**purchase.php**\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user input\n$product_name = $_POST['product_name'];\n$quantity = $_POST['quantity'];\n\n// Validate user input\nif (empty($product_name) || empty($quantity)) {\n    echo 'Error: Please enter both product name and quantity.';\n} elseif (!ctype_digit($quantity)) {\n    echo 'Error: Quantity must be a valid number.';\n} else {\n    // Prepare query to insert order into database\n    $query = \"INSERT INTO orders (user_id, product_name, price, quantity, total)\n              VALUES (?, ?, ?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $price = 10.99; // Example price for demonstration purposes\n\n    // Bind parameters\n    $stmt->bind_param('iidd', $_SESSION['user_id'], $product_name, $price, $quantity);\n\n    // Execute query\n    if ($stmt->execute()) {\n        echo 'Order placed successfully!';\n        $total = $price * $quantity;\n        echo 'Total: $' . number_format($total, 2);\n    } else {\n        echo 'Error: Unable to place order.';\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $conn->close();\n}\n\n?>\n```\n**index.php**\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Start session (assuming you have a user ID stored in the session)\nsession_start();\n\n// Display form for user to enter product name and quantity\n?>\n<form action=\"purchase.php\" method=\"post\">\n  <label>Product Name:</label>\n  <input type=\"text\" name=\"product_name\"><br><br>\n  <label>Quantity:</label>\n  <input type=\"number\" name=\"quantity\"><br><br>\n  <button type=\"submit\">Place Order</button>\n</form>\n\n<?php\n\n// Close connection\n$conn->close();\n\n?>\n```\n**Usage:**\n\n1. The user navigates to `index.php` and fills out the form with their desired product name and quantity.\n2. When the form is submitted, the data is sent to `purchase.php`.\n3. In `purchase.php`, the code validates the user input and checks if it meets the required conditions (i.e., non-empty fields and valid number for quantity).\n4. If validation passes, the code prepares a query to insert an order into the database.\n5. The query is executed, and if successful, the code displays a success message with the total cost of the order.\n\nNote that this example uses a simple `mysqli` extension for database interaction, but you may want to consider using a more secure and efficient method like PDO or MySQLi prepared statements. Additionally, this example assumes a static price for demonstration purposes; in a real-world application, you would replace `$price` with a dynamic value retrieved from your database.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user input\n$product_name = $_POST['product_name'];\n$quantity = $_POST['quantity'];\n\n// Validate user input\nif (empty($product_name) || empty($quantity)) {\n    echo 'Error: Please enter both product name and quantity.';\n} elseif (!ctype_digit($quantity)) {\n    echo 'Error: Quantity must be a valid number.';\n} else {\n    // Prepare query to insert order into database\n    $query = \"INSERT INTO orders (user_id, product_name, price, quantity, total)\n              VALUES (?, ?, ?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $price = 10.99; // Example price for demonstration purposes\n\n    // Bind parameters\n    $stmt->bind_param('iidd', $_SESSION['user_id'], $product_name, $price, $quantity);\n\n    // Execute query\n    if ($stmt->execute()) {\n        echo 'Order placed successfully!';\n        $total = $price * $quantity;\n        echo 'Total: $' . number_format($total, 2);\n    } else {\n        echo 'Error: Unable to place order.';\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $conn->close();\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Start session (assuming you have a user ID stored in the session)\nsession_start();\n\n// Display form for user to enter product name and quantity\n?>\n<form action=\"purchase.php\" method=\"post\">\n  <label>Product Name:</label>\n  <input type=\"text\" name=\"product_name\"><br><br>\n  <label>Quantity:</label>\n  <input type=\"number\" name=\"quantity\"><br><br>\n  <button type=\"submit\">Place Order</button>\n</form>\n\n<?php\n\n// Close connection\n$conn->close();\n\n?>\n```"]}
