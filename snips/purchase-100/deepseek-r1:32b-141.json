{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this.\n\nFirst, I should outline the main components required for a purchase system. There needs to be a way for users to view available products, add items to their cart, and then proceed to checkout where they can enter payment details and complete the purchase.\n\nI'll start by setting up the database. The database is crucial because it will store product information, user data, and order details. I should create tables like 'products' with columns for id, name, description, price, quantity, and image. Another table 'users' for storing user credentials and addresses. An 'orders' table to track each purchase, including the user ID, total amount, payment method, transaction ID, and timestamps.\n\nNext, I'll handle user authentication. Users should be able to log in or register before making a purchase. I'll set up login and registration pages with forms that collect necessary details like email, password, first name, last name, address, city, state, ZIP code, and phone number. Security is important here, so I'll make sure to hash passwords using PHP's password_hash function.\n\nFor the product display, I'll fetch data from the 'products' table and display each product in a grid or list format. Each product should have an image, name, description, price, quantity selector, and an 'Add to Cart' button. The quantity selector will allow users to choose how many of each item they want to purchase.\n\nThe shopping cart functionality requires session management. When a user adds a product to the cart, their selection (including quantity) should be stored in the session so it persists across page refreshes or navigation. I'll create functions to add items to the cart, update quantities, and remove items as needed. The cart should display all selected products with their details, total price, and options to adjust quantities or remove items.\n\nMoving on to checkout, once users have added their desired items to the cart, they need a secure way to enter payment information. I'll create a checkout page that collects payment method (credit card), card number, name on the card, expiration date, and CVV. This form will submit to a processing script.\n\nProcessing the purchase involves several steps. First, validate all required fields are filled out correctly. Then, calculate the total amount based on the items in the cart. I'll insert this order into the 'orders' table with the user's ID and other relevant details. After that, deduct the purchased quantities from the products' stock in the 'products' table to reflect the sale.\n\nFinally, a confirmation page will thank the user for their purchase and display the order details. This page can also include an order number or reference for future tracking.\n\nThroughout this process, I need to ensure proper error handling. If any step fails\u2014like invalid input, database connection issues, or insufficient stock\u2014the system should inform the user clearly. Also, security measures like SQL injection prevention using prepared statements and CSRF protection are essential to keep the application safe from common vulnerabilities.\n\nI might have missed some details, but this covers the main points of creating a purchase functionality in PHP. I'll proceed step by step, testing each part as I go to make sure everything works together smoothly.\n</think>\n\nCreating a purchase functionality using PHP involves several steps, including setting up a database, handling user authentication, displaying products, managing a shopping cart, processing payments, and confirming purchases.\n\nHere's an example of how you can create a basic purchase functionality:\n\n### Step 1: Set Up the Database\n\nFirst, you'll need to set up a database to store product information, user details, and order details. Here's an example SQL schema:\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    image VARCHAR(255)\n);\n\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    email VARCHAR(255) NOT NULL UNIQUE,\n    password_hash VARCHAR(255) NOT NULL,\n    first_name VARCHAR(255),\n    last_name VARCHAR(255),\n    address TEXT,\n    city VARCHAR(255),\n    state VARCHAR(255),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL,\n    payment_method VARCHAR(50) NOT NULL,\n    transaction_id VARCHAR(100),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n\nCREATE TABLE order_items (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (order_id) REFERENCES orders(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### Step 2: User Authentication\n\nYou'll need to handle user registration and login. Here's an example of how to create a login and registration system:\n\n```php\n// Registration\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n    \n    // Insert into users table\n    $stmt = $conn->prepare(\"INSERT INTO users (email, password_hash) VALUES (?, ?)\");\n    $stmt->bind_param(\"ss\", $email, $hashed_password);\n    if ($stmt->execute()) {\n        echo \"Registration successful!\";\n        // Redirect to login page\n    }\n}\n\n// Login\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    \n    $stmt = $conn->prepare(\"SELECT id, password_hash FROM users WHERE email = ?\");\n    $stmt->bind_param(\"s\", $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        if (password_verify($password, $row['password_hash'])) {\n            // Start session\n            session_start();\n            $_SESSION['user_id'] = $row['id'];\n            header(\"Location: products.php\");\n        } else {\n            echo \"Invalid password!\";\n        }\n    } else {\n        echo \"User not found!\";\n    }\n}\n```\n\n### Step 3: Display Products\n\nCreate a page to display available products:\n\n```php\n<?php\n// products.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\n$stmt = $conn->prepare(\"SELECT * FROM products\");\n$stmt->execute();\n$result = $stmt->get_result();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <?php while ($product = $result->fetch_assoc()): ?>\n        <div class=\"product\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: <?php echo $product['price']; ?> USD</p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['quantity']; ?>\" value=\"1\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endwhile; ?>\n    \n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```\n\n### Step 4: Add Products to Cart\n\nCreate a script to handle adding products to the cart:\n\n```php\n// add_to_cart.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    \n    if (empty($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (!isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = 0;\n    }\n    \n    $_SESSION['cart'][$product_id] += $quantity;\n}\n\nheader(\"Location: products.php\");\n```\n\n### Step 5: View Cart\n\nCreate a page to display the cart contents:\n\n```php\n// cart.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\n$cart_total = 0;\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2>Your Cart</h2>\n        <?php foreach ($_SESSION['cart'] as $product_id => $quantity): \n            $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = ?\");\n            $stmt->bind_param(\"i\", $product_id);\n            $stmt->execute();\n            $result = $stmt->get_result();\n            $product = $result->fetch_assoc();\n        ?>\n        <div class=\"cart-item\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p>Quantity: <?php echo $quantity; ?></p>\n            <p>Price: <?php echo $product['price'] * $quantity; ?> USD</p>\n            <form action=\"update_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['quantity']; ?>\" value=\"<?php echo $quantity; ?>\">\n                <button type=\"submit\">Update</button>\n            </form>\n        </div>\n        <?php $cart_total += $product['price'] * $quantity; ?>\n        <?php endforeach; ?>\n        \n        <h3>Total: <?php echo $cart_total; ?> USD</h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n    <?php endif; ?>\n    \n    <a href=\"products.php\">Continue Shopping</a>\n</body>\n</html>\n```\n\n### Step 6: Update Cart\n\nCreate a script to handle updating the cart:\n\n```php\n// update_cart.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    \n    if (!empty($_SESSION['cart']) && isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\nheader(\"Location: cart.php\");\n```\n\n### Step 7: Checkout\n\nCreate a page for users to enter payment details:\n\n```php\n// checkout.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$cart_total = 0;\n$conn = // Your database connection here;\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2> Checkout </h2>\n        \n        <?php foreach ($_SESSION['cart'] as $product_id => $quantity): \n            $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = ?\");\n            $stmt->bind_param(\"i\", $product_id);\n            $stmt->execute();\n            $result = $stmt->get_result();\n            $product = $result->fetch_assoc();\n        ?>\n        \n        <?php $cart_total += $product['price'] * $quantity; ?>\n        <?php endforeach; ?>\n        \n        <form action=\"process_payment.php\" method=\"post\">\n            <h3>Payment Details</h3>\n            <input type=\"hidden\" name=\"total_amount\" value=\"<?php echo $cart_total; ?>\">\n            \n            <label for=\"card_number\">Card Number:</label><br>\n            <input type=\"text\" id=\"card_number\" name=\"card_number\" required><br>\n            \n            <label for=\"card_name\">Name on Card:</label><br>\n            <input type=\"text\" id=\"card_name\" name=\"card_name\" required><br>\n            \n            <label for=\"exp_date\">Expiry Date:</label><br>\n            <input type=\"text\" id=\"exp_date\" name=\"exp_date\" placeholder=\"MM/YY\" required><br>\n            \n            <label for=\"cvv\">CVV:</label><br>\n            <input type=\"text\" id=\"cvv\" name=\"cvv\" required><br>\n            \n            <button type=\"submit\">Complete Purchase</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n    <?php endif; ?>\n    \n    <a href=\"cart.php\">Back to Cart</a>\n</body>\n</html>\n```\n\n### Step 8: Process Payment\n\nCreate a script to process the payment and finalize the order:\n\n```php\n// process_payment.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $total_amount = $_POST['total_amount'];\n    $card_number = $_POST['card_number'];\n    $card_name = $_POST['card_name'];\n    $exp_date = $_POST['exp_date'];\n    $cvv = $_POST['cvv'];\n    \n    // For this example, we'll assume payment is successful\n    // In a real application, you would integrate with a payment gateway\n    \n    // Insert order into orders table\n    $stmt = $conn->prepare(\"INSERT INTO orders (user_id, total_amount, payment_method) VALUES (?, ?, 'credit_card')\");\n    $stmt->bind_param(\"id\", $_SESSION['user_id'], $total_amount);\n    if ($stmt->execute()) {\n        $order_id = $conn->insert_id;\n        \n        // Insert order items\n        foreach ($_SESSION['cart'] as $product_id => $quantity) {\n            $stmt_item = $conn->prepare(\"SELECT price FROM products WHERE id = ?\");\n            $stmt_item->bind_param(\"i\", $product_id);\n            $stmt_item->execute();\n            $result_item = $stmt_item->get_result();\n            $product_price = $result_item->fetch_assoc()['price'];\n            \n            $total_item_price = $quantity * $product_price;\n            \n            $stmt_order_item = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)\");\n            $stmt_order_item->bind_param(\"iidi\", $order_id, $product_id, $quantity, $total_item_price);\n            $stmt_order_item->execute();\n        }\n        \n        // Clear cart\n        unset($_SESSION['cart']);\n        \n        // Redirect to confirmation page\n        header(\"Location: purchase_confirmation.php\");\n    } else {\n        echo \"Error processing your order!\";\n    }\n}\n```\n\n### Step 9: Purchase Confirmation\n\nCreate a confirmation page after the purchase is complete:\n\n```php\n// purchase_confirmation.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\n// Retrieve last order details\n$stmt = $conn->prepare(\"SELECT * FROM orders WHERE user_id = ? ORDER BY created_at DESC LIMIT 1\");\n$stmt->bind_param(\"i\", $_SESSION['user_id']);\n$stmt->execute();\n$result = $stmt->get_result();\n$order = $result->fetch_assoc();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase Confirmation</title>\n</head>\n<body>\n    <h2>Thank you for your purchase!</h2>\n    <p>Your order has been processed successfully.</p>\n    \n    <h3>Order Details:</h3>\n    <p>Order ID: <?php echo $order['id']; ?></p>\n    <p>Total Amount: <?php echo $order['total_amount']; ?> USD</p>\n    <p>Payment Method: <?php echo $order['payment_method']; ?></p>\n    \n    <a href=\"products.php\">Continue Shopping</a>\n</body>\n</html>\n```\n\n### Step 10: Logout\n\nCreate a logout script:\n\n```php\n// logout.php\nsession_start();\nunset($_SESSION['user_id']);\nsession_destroy();\nheader(\"Location: login.php\");\n```\n\nThis is a basic implementation of a purchase functionality using PHP. You might want to add additional features such as:\n\n- Error handling for the payment processing (e.g., invalid card details)\n- Integration with a real payment gateway\n- Order tracking and history for users\n- Admin panel to manage products and orders\n- Email notifications for purchases\n- Secure connection (HTTPS)\n\nRemember to always secure your application against SQL injection, XSS attacks, and other vulnerabilities by properly sanitizing inputs and using prepared statements.", "code_blocks": [null, "```php\n// Registration\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n    \n    // Insert into users table\n    $stmt = $conn->prepare(\"INSERT INTO users (email, password_hash) VALUES (?, ?)\");\n    $stmt->bind_param(\"ss\", $email, $hashed_password);\n    if ($stmt->execute()) {\n        echo \"Registration successful!\";\n        // Redirect to login page\n    }\n}\n\n// Login\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    \n    $stmt = $conn->prepare(\"SELECT id, password_hash FROM users WHERE email = ?\");\n    $stmt->bind_param(\"s\", $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        if (password_verify($password, $row['password_hash'])) {\n            // Start session\n            session_start();\n            $_SESSION['user_id'] = $row['id'];\n            header(\"Location: products.php\");\n        } else {\n            echo \"Invalid password!\";\n        }\n    } else {\n        echo \"User not found!\";\n    }\n}\n```", "```php\n<?php\n// products.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\n$stmt = $conn->prepare(\"SELECT * FROM products\");\n$stmt->execute();\n$result = $stmt->get_result();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <?php while ($product = $result->fetch_assoc()): ?>\n        <div class=\"product\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: <?php echo $product['price']; ?> USD</p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['quantity']; ?>\" value=\"1\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endwhile; ?>\n    \n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```", "```php\n// add_to_cart.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    \n    if (empty($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (!isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = 0;\n    }\n    \n    $_SESSION['cart'][$product_id] += $quantity;\n}\n\nheader(\"Location: products.php\");\n```", "```php\n// cart.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\n$cart_total = 0;\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2>Your Cart</h2>\n        <?php foreach ($_SESSION['cart'] as $product_id => $quantity): \n            $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = ?\");\n            $stmt->bind_param(\"i\", $product_id);\n            $stmt->execute();\n            $result = $stmt->get_result();\n            $product = $result->fetch_assoc();\n        ?>\n        <div class=\"cart-item\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p>Quantity: <?php echo $quantity; ?></p>\n            <p>Price: <?php echo $product['price'] * $quantity; ?> USD</p>\n            <form action=\"update_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['quantity']; ?>\" value=\"<?php echo $quantity; ?>\">\n                <button type=\"submit\">Update</button>\n            </form>\n        </div>\n        <?php $cart_total += $product['price'] * $quantity; ?>\n        <?php endforeach; ?>\n        \n        <h3>Total: <?php echo $cart_total; ?> USD</h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n    <?php endif; ?>\n    \n    <a href=\"products.php\">Continue Shopping</a>\n</body>\n</html>\n```", "```php\n// update_cart.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    \n    if (!empty($_SESSION['cart']) && isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\nheader(\"Location: cart.php\");\n```", "```php\n// checkout.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$cart_total = 0;\n$conn = // Your database connection here;\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2> Checkout </h2>\n        \n        <?php foreach ($_SESSION['cart'] as $product_id => $quantity): \n            $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = ?\");\n            $stmt->bind_param(\"i\", $product_id);\n            $stmt->execute();\n            $result = $stmt->get_result();\n            $product = $result->fetch_assoc();\n        ?>\n        \n        <?php $cart_total += $product['price'] * $quantity; ?>\n        <?php endforeach; ?>\n        \n        <form action=\"process_payment.php\" method=\"post\">\n            <h3>Payment Details</h3>\n            <input type=\"hidden\" name=\"total_amount\" value=\"<?php echo $cart_total; ?>\">\n            \n            <label for=\"card_number\">Card Number:</label><br>\n            <input type=\"text\" id=\"card_number\" name=\"card_number\" required><br>\n            \n            <label for=\"card_name\">Name on Card:</label><br>\n            <input type=\"text\" id=\"card_name\" name=\"card_name\" required><br>\n            \n            <label for=\"exp_date\">Expiry Date:</label><br>\n            <input type=\"text\" id=\"exp_date\" name=\"exp_date\" placeholder=\"MM/YY\" required><br>\n            \n            <label for=\"cvv\">CVV:</label><br>\n            <input type=\"text\" id=\"cvv\" name=\"cvv\" required><br>\n            \n            <button type=\"submit\">Complete Purchase</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n    <?php endif; ?>\n    \n    <a href=\"cart.php\">Back to Cart</a>\n</body>\n</html>\n```", "```php\n// process_payment.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $total_amount = $_POST['total_amount'];\n    $card_number = $_POST['card_number'];\n    $card_name = $_POST['card_name'];\n    $exp_date = $_POST['exp_date'];\n    $cvv = $_POST['cvv'];\n    \n    // For this example, we'll assume payment is successful\n    // In a real application, you would integrate with a payment gateway\n    \n    // Insert order into orders table\n    $stmt = $conn->prepare(\"INSERT INTO orders (user_id, total_amount, payment_method) VALUES (?, ?, 'credit_card')\");\n    $stmt->bind_param(\"id\", $_SESSION['user_id'], $total_amount);\n    if ($stmt->execute()) {\n        $order_id = $conn->insert_id;\n        \n        // Insert order items\n        foreach ($_SESSION['cart'] as $product_id => $quantity) {\n            $stmt_item = $conn->prepare(\"SELECT price FROM products WHERE id = ?\");\n            $stmt_item->bind_param(\"i\", $product_id);\n            $stmt_item->execute();\n            $result_item = $stmt_item->get_result();\n            $product_price = $result_item->fetch_assoc()['price'];\n            \n            $total_item_price = $quantity * $product_price;\n            \n            $stmt_order_item = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)\");\n            $stmt_order_item->bind_param(\"iidi\", $order_id, $product_id, $quantity, $total_item_price);\n            $stmt_order_item->execute();\n        }\n        \n        // Clear cart\n        unset($_SESSION['cart']);\n        \n        // Redirect to confirmation page\n        header(\"Location: purchase_confirmation.php\");\n    } else {\n        echo \"Error processing your order!\";\n    }\n}\n```", "```php\n// purchase_confirmation.php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n}\n\n$conn = // Your database connection here;\n\n// Retrieve last order details\n$stmt = $conn->prepare(\"SELECT * FROM orders WHERE user_id = ? ORDER BY created_at DESC LIMIT 1\");\n$stmt->bind_param(\"i\", $_SESSION['user_id']);\n$stmt->execute();\n$result = $stmt->get_result();\n$order = $result->fetch_assoc();\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase Confirmation</title>\n</head>\n<body>\n    <h2>Thank you for your purchase!</h2>\n    <p>Your order has been processed successfully.</p>\n    \n    <h3>Order Details:</h3>\n    <p>Order ID: <?php echo $order['id']; ?></p>\n    <p>Total Amount: <?php echo $order['total_amount']; ?> USD</p>\n    <p>Payment Method: <?php echo $order['payment_method']; ?></p>\n    \n    <a href=\"products.php\">Continue Shopping</a>\n</body>\n</html>\n```", "```php\n// logout.php\nsession_start();\nunset($_SESSION['user_id']);\nsession_destroy();\nheader(\"Location: login.php\");\n```"]}
