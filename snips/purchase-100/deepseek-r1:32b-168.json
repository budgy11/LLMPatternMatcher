{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this.\n\nFirst, the user will be on a product page and click \"Add to Cart.\" So, I need a way to handle that action. Since it's PHP, I can use forms with POST method to send data to another script.\n\nNext, when the form is submitted, I should validate if the product ID exists in the database. If not, show an error message. Also, check if there are enough products in stock. If stock is insufficient, inform the user.\n\nAssuming everything checks out, I need to insert a new order into the orders table and then add each item with its quantity into the order_items table. I should use transactions here to ensure that both operations succeed or fail together for consistency.\n\nAfter placing the order, redirect the user to a confirmation page where they can see their order details. It's important to display this information clearly, maybe including product name, price, quantity, and total cost.\n\nI also need to handle cases where products might be out of stock or if there are any database errors. Proper error handling will make the application more robust and user-friendly.\n\nFinally, I should remind the user to review their order details before finalizing. Maybe include a button to proceed to payment on the confirmation page.\n\nPutting it all together, I'll structure the code with functions for better readability and maintainability. Using prepared statements can help prevent SQL injection attacks.\n</think>\n\nHere's an example of how to create a purchase functionality in PHP:\n\n**1. Create a product listing page (products.php):**\n\n```php\n<?php\n// Connect to database\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"myDB\";\n\n$conn = mysqli_connect($servername, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Fetch products from database\n$sql = \"SELECT * FROM products\";\n$result = mysqli_query($conn, $sql);\n\nif (mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<div class='product'>\";\n        echo \"<h2>\" . $row['name'] . \"</h2>\";\n        echo \"<p>Price: $\" . $row['price'] . \"</p>\";\n        echo \"<form action='add_to_cart.php' method='post'>\";\n        echo \"<input type='hidden' name='id' value='\" . $row['id'] . \"'>\";\n        echo \"<input type='number' name='quantity' min='1' max='\" . $row['stock'] . \"' placeholder='Quantity'>\";\n        echo \"<button type='submit'>Add to Cart</button>\";\n        echo \"</form>\";\n        echo \"</div>\";\n    }\n} else {\n    echo \"No products found.\";\n}\n\nmysqli_close($conn);\n?>\n```\n\n**2. Create a cart page (cart.php):**\n\n```php\n<?php\nsession_start();\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Display cart contents\necho \"<h1>Your Cart</h1>\";\necho \"<table>\";\necho \"<tr><th>Product</th><th>Quantity</th><th>Total</th><th>Action</th></tr>\";\n\nforeach ($_SESSION['cart'] as $item) {\n    echo \"<tr>\";\n    echo \"<td>\" . $item['name'] . \"</td>\";\n    echo \"<td><input type='number' name='quantity[\" . $item['id'] . \"]' value='\" . $item['quantity'] . \"' min='1' max='\" . $item['stock'] . \"'></td>\";\n    echo \"<td>$\" . number_format($item['price'] * $item['quantity'], 2) . \"</td>\";\n    echo \"<td><a href='remove_from_cart.php?id=\" . $item['id'] . \"'>Remove</a></td>\";\n    echo \"</tr>\";\n}\n\necho \"</table>\";\n\n// Update cart quantities\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    foreach ($_POST['quantity'] as $id => $qty) {\n        $_SESSION['cart'][$id]['quantity'] = $qty;\n    }\n}\n\n// Proceed to checkout\necho \"<a href='checkout.php'>Proceed to Checkout</a>\";\n?>\n```\n\n**3. Create a checkout page (checkout.php):**\n\n```php\n<?php\nsession_start();\n\nif (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {\n    echo \"Your cart is empty.\";\n    exit();\n}\n\n// Display order summary\necho \"<h1>Checkout</h1>\";\necho \"<table>\";\necho \"<tr><th>Product</th><th>Quantity</th><th>Total</th></tr>\";\n\n$total = 0;\n\nforeach ($_SESSION['cart'] as $item) {\n    $total += $item['price'] * $item['quantity'];\n    echo \"<tr>\";\n    echo \"<td>\" . $item['name'] . \"</td>\";\n    echo \"<td>\" . $item['quantity'] . \"</td>\";\n    echo \"<td>$\" . number_format($item['price'] * $item['quantity'], 2) . \"</td>\";\n    echo \"</tr>\";\n}\n\necho \"<tr><td colspan='2'><strong>Grand Total:</strong></td><td><strong>$\" . number_format($total, 2) . \"</strong></td></tr>\";\necho \"</table>\";\n\n// Process payment\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Here you would typically integrate with a payment gateway\n    // For this example, we'll just simulate the payment process\n    $order_id = time(); // Generate unique order ID\n    \n    foreach ($_SESSION['cart'] as $item) {\n        // Update inventory and record sale\n        // This is a simplified example - in real application, you should use transactions to ensure data consistency\n        mysqli_query($conn, \"UPDATE products SET stock=stock-\" . $item['quantity'] . \" WHERE id=\" . $item['id']);\n        mysqli_query($conn, \"INSERT INTO orders (order_id, product_id, quantity, price) VALUES (\" . $order_id . \", \" . $item['id'] . \", \" . $item['quantity'] . \", \" . $item['price'] . \")\");\n    }\n    \n    // Clear cart\n    $_SESSION['cart'] = array();\n    \n    // Redirect to confirmation page\n    header(\"Location: purchase_confirmation.php?order_id=\" . $order_id);\n}\n?>\n```\n\n**4. Create a purchase confirmation page (purchase_confirmation.php):**\n\n```php\n<?php\nsession_start();\n\n// Get order ID from query string\n$order_id = isset($_GET['order_id']) ? $_GET['order_id'] : '';\n\nif ($order_id == '') {\n    echo \"Invalid order ID.\";\n    exit();\n}\n\n// Fetch order details from database\n$conn = mysqli_connect($servername, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n$sql = \"SELECT * FROM orders WHERE order_id=\" . $order_id;\n$result = mysqli_query($conn, $sql);\n\nif (mysqli_num_rows($result) > 0) {\n    echo \"<h1>Purchase Confirmation</h1>\";\n    echo \"<p>Your order has been processed successfully.</p>\";\n    echo \"<table>\";\n    echo \"<tr><th>Product</th><th>Quantity</th><th>Total</th></tr>\";\n    \n    while ($row = mysqli_fetch_assoc($result)) {\n        $product_name = mysqli_query($conn, \"SELECT name FROM products WHERE id=\" . $row['product_id']);\n        $product_name = mysqli_fetch_assoc($product_name)['name'];\n        \n        echo \"<tr>\";\n        echo \"<td>\" . $product_name . \"</td>\";\n        echo \"<td>\" . $row['quantity'] . \"</td>\";\n        echo \"<td>$\" . number_format($row['price'], 2) . \"</td>\";\n        echo \"</tr>\";\n    }\n    \n    echo \"</table>\";\n} else {\n    echo \"Order not found.\";\n}\n\nmysqli_close($conn);\n?>\n```\n\n**5. Create a remove from cart script (remove_from_cart.php):**\n\n```php\n<?php\nsession_start();\n\nif (isset($_GET['id'])) {\n    // Remove item from cart\n    foreach ($_SESSION['cart'] as $key => $item) {\n        if ($item['id'] == $_GET['id']) {\n            unset($_SESSION['cart'][$key]);\n        }\n    }\n}\n\n// Redirect back to cart page\nheader(\"Location: cart.php\");\n?>\n```\n\n**6. Create an add to cart script (add_to_cart.php):**\n\n```php\n<?php\nsession_start();\n\nif (isset($_POST['id']) && isset($_POST['quantity'])) {\n    $id = $_POST['id'];\n    $quantity = $_POST['quantity'];\n    \n    // Validate input\n    if (!is_numeric($quantity) || $quantity < 1) {\n        die(\"Invalid quantity.\");\n    }\n    \n    // Check if product exists and has enough stock\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n    \n    $sql = \"SELECT * FROM products WHERE id=\" . $id;\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) == 0) {\n        die(\"Product not found.\");\n    }\n    \n    $product = mysqli_fetch_assoc($result);\n    \n    if ($quantity > $product['stock']) {\n        die(\"Not enough stock available.\");\n    }\n    \n    // Add to cart\n    $_SESSION['cart'][$id] = array(\n        'id' => $id,\n        'name' => $product['name'],\n        'price' => $product['price'],\n        'quantity' => $quantity,\n        'stock' => $product['stock']\n    );\n    \n    mysqli_close($conn);\n}\n\n// Redirect back to products page\nheader(\"Location: products.php\");\n?>\n```\n\n**7. Create a database schema (create_tables.sql):**\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id BIGINT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**To use this code:**\n\n1. Set up your database with the tables defined in `create_tables.sql`.\n2. Update the database connection details in all PHP files.\n3. Make sure to handle sessions properly by starting them at the beginning of each script that uses session variables.\n\n**Important notes:**\n\n- This is a basic implementation and should be customized based on your specific needs.\n- In a production environment, you should implement proper error handling, input validation, and security measures (e.g., SQL injection prevention using prepared statements or ORMs).\n- You might want to add additional features like:\n  - User authentication\n  - Payment processing integration\n  - Order tracking\n  - Shipping options\n  - Coupon codes\n  - Wishlist functionality\n  - Product reviews\n  - Customer support\n\n**Security considerations:**\n\n- Always validate and sanitize user input.\n- Use prepared statements or parameterized queries to prevent SQL injection.\n- Store sensitive data (like credit card information) securely.\n- Implement CSRF protection for forms.\n- Secure your session management.\n\n**Error handling:**\n\n- Add proper error messages and redirects when something goes wrong.\n- Log errors for debugging purposes.\n\n**Testing:**\n\n- Test all functionality thoroughly before deploying to production.\n- Check edge cases like zero stock, invalid quantities, etc.", "code_blocks": ["```php\n<?php\n// Connect to database\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"myDB\";\n\n$conn = mysqli_connect($servername, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Fetch products from database\n$sql = \"SELECT * FROM products\";\n$result = mysqli_query($conn, $sql);\n\nif (mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<div class='product'>\";\n        echo \"<h2>\" . $row['name'] . \"</h2>\";\n        echo \"<p>Price: $\" . $row['price'] . \"</p>\";\n        echo \"<form action='add_to_cart.php' method='post'>\";\n        echo \"<input type='hidden' name='id' value='\" . $row['id'] . \"'>\";\n        echo \"<input type='number' name='quantity' min='1' max='\" . $row['stock'] . \"' placeholder='Quantity'>\";\n        echo \"<button type='submit'>Add to Cart</button>\";\n        echo \"</form>\";\n        echo \"</div>\";\n    }\n} else {\n    echo \"No products found.\";\n}\n\nmysqli_close($conn);\n?>\n```", "```php\n<?php\nsession_start();\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Display cart contents\necho \"<h1>Your Cart</h1>\";\necho \"<table>\";\necho \"<tr><th>Product</th><th>Quantity</th><th>Total</th><th>Action</th></tr>\";\n\nforeach ($_SESSION['cart'] as $item) {\n    echo \"<tr>\";\n    echo \"<td>\" . $item['name'] . \"</td>\";\n    echo \"<td><input type='number' name='quantity[\" . $item['id'] . \"]' value='\" . $item['quantity'] . \"' min='1' max='\" . $item['stock'] . \"'></td>\";\n    echo \"<td>$\" . number_format($item['price'] * $item['quantity'], 2) . \"</td>\";\n    echo \"<td><a href='remove_from_cart.php?id=\" . $item['id'] . \"'>Remove</a></td>\";\n    echo \"</tr>\";\n}\n\necho \"</table>\";\n\n// Update cart quantities\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    foreach ($_POST['quantity'] as $id => $qty) {\n        $_SESSION['cart'][$id]['quantity'] = $qty;\n    }\n}\n\n// Proceed to checkout\necho \"<a href='checkout.php'>Proceed to Checkout</a>\";\n?>\n```", "```php\n<?php\nsession_start();\n\nif (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {\n    echo \"Your cart is empty.\";\n    exit();\n}\n\n// Display order summary\necho \"<h1>Checkout</h1>\";\necho \"<table>\";\necho \"<tr><th>Product</th><th>Quantity</th><th>Total</th></tr>\";\n\n$total = 0;\n\nforeach ($_SESSION['cart'] as $item) {\n    $total += $item['price'] * $item['quantity'];\n    echo \"<tr>\";\n    echo \"<td>\" . $item['name'] . \"</td>\";\n    echo \"<td>\" . $item['quantity'] . \"</td>\";\n    echo \"<td>$\" . number_format($item['price'] * $item['quantity'], 2) . \"</td>\";\n    echo \"</tr>\";\n}\n\necho \"<tr><td colspan='2'><strong>Grand Total:</strong></td><td><strong>$\" . number_format($total, 2) . \"</strong></td></tr>\";\necho \"</table>\";\n\n// Process payment\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Here you would typically integrate with a payment gateway\n    // For this example, we'll just simulate the payment process\n    $order_id = time(); // Generate unique order ID\n    \n    foreach ($_SESSION['cart'] as $item) {\n        // Update inventory and record sale\n        // This is a simplified example - in real application, you should use transactions to ensure data consistency\n        mysqli_query($conn, \"UPDATE products SET stock=stock-\" . $item['quantity'] . \" WHERE id=\" . $item['id']);\n        mysqli_query($conn, \"INSERT INTO orders (order_id, product_id, quantity, price) VALUES (\" . $order_id . \", \" . $item['id'] . \", \" . $item['quantity'] . \", \" . $item['price'] . \")\");\n    }\n    \n    // Clear cart\n    $_SESSION['cart'] = array();\n    \n    // Redirect to confirmation page\n    header(\"Location: purchase_confirmation.php?order_id=\" . $order_id);\n}\n?>\n```", "```php\n<?php\nsession_start();\n\n// Get order ID from query string\n$order_id = isset($_GET['order_id']) ? $_GET['order_id'] : '';\n\nif ($order_id == '') {\n    echo \"Invalid order ID.\";\n    exit();\n}\n\n// Fetch order details from database\n$conn = mysqli_connect($servername, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n$sql = \"SELECT * FROM orders WHERE order_id=\" . $order_id;\n$result = mysqli_query($conn, $sql);\n\nif (mysqli_num_rows($result) > 0) {\n    echo \"<h1>Purchase Confirmation</h1>\";\n    echo \"<p>Your order has been processed successfully.</p>\";\n    echo \"<table>\";\n    echo \"<tr><th>Product</th><th>Quantity</th><th>Total</th></tr>\";\n    \n    while ($row = mysqli_fetch_assoc($result)) {\n        $product_name = mysqli_query($conn, \"SELECT name FROM products WHERE id=\" . $row['product_id']);\n        $product_name = mysqli_fetch_assoc($product_name)['name'];\n        \n        echo \"<tr>\";\n        echo \"<td>\" . $product_name . \"</td>\";\n        echo \"<td>\" . $row['quantity'] . \"</td>\";\n        echo \"<td>$\" . number_format($row['price'], 2) . \"</td>\";\n        echo \"</tr>\";\n    }\n    \n    echo \"</table>\";\n} else {\n    echo \"Order not found.\";\n}\n\nmysqli_close($conn);\n?>\n```", "```php\n<?php\nsession_start();\n\nif (isset($_GET['id'])) {\n    // Remove item from cart\n    foreach ($_SESSION['cart'] as $key => $item) {\n        if ($item['id'] == $_GET['id']) {\n            unset($_SESSION['cart'][$key]);\n        }\n    }\n}\n\n// Redirect back to cart page\nheader(\"Location: cart.php\");\n?>\n```", "```php\n<?php\nsession_start();\n\nif (isset($_POST['id']) && isset($_POST['quantity'])) {\n    $id = $_POST['id'];\n    $quantity = $_POST['quantity'];\n    \n    // Validate input\n    if (!is_numeric($quantity) || $quantity < 1) {\n        die(\"Invalid quantity.\");\n    }\n    \n    // Check if product exists and has enough stock\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n    \n    $sql = \"SELECT * FROM products WHERE id=\" . $id;\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) == 0) {\n        die(\"Product not found.\");\n    }\n    \n    $product = mysqli_fetch_assoc($result);\n    \n    if ($quantity > $product['stock']) {\n        die(\"Not enough stock available.\");\n    }\n    \n    // Add to cart\n    $_SESSION['cart'][$id] = array(\n        'id' => $id,\n        'name' => $product['name'],\n        'price' => $product['price'],\n        'quantity' => $quantity,\n        'stock' => $product['stock']\n    );\n    \n    mysqli_close($conn);\n}\n\n// Redirect back to products page\nheader(\"Location: products.php\");\n?>\n```", null]}
