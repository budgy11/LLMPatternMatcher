{"prompt": "Create a purchase cart functionality using php", "llm_output": "**Purchase Cart Functionality in PHP**\n=====================================\n\nBelow is an example of how to implement a basic purchase cart functionality in PHP. This example includes features such as:\n\n*   **Adding items to the cart**: Allows users to add products to their shopping cart.\n*   **Viewing cart contents**: Enables users to view all items currently in their cart.\n*   **Updating item quantities**: Allows users to adjust the quantity of each product in their cart.\n*   **Removing items from the cart**: Enables users to remove unwanted items from their cart.\n\n**Database Setup**\n------------------\n\nTo use this functionality, you'll need a database with the following structure:\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE carts (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n\nCREATE TABLE cart_items (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    cart_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL DEFAULT 1,\n    FOREIGN KEY (cart_id) REFERENCES carts(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n------------\n\n### **`functions.php`**\n\n```php\n// functions.php\n\nfunction add_item_to_cart($user_id, $product_id, $quantity = 1) {\n    // Check if product exists and is available in stock\n    $product = get_product($product_id);\n    if (!$product || $product['stock'] < $quantity) {\n        return false;\n    }\n\n    // Add item to cart\n    $cart_item = array(\n        'cart_id' => get_cart_id($user_id),\n        'product_id' => $product_id,\n        'quantity' => $quantity\n    );\n    add_cart_item($cart_item);\n\n    return true;\n}\n\nfunction view_cart_contents($user_id) {\n    // Get cart items for the user\n    $carts = get_carts_for_user($user_id);\n    if (!$carts) {\n        return array();\n    }\n\n    // Calculate total cost of cart contents\n    $total_cost = 0;\n    foreach ($carts as $cart_item) {\n        $product = get_product($cart_item['product_id']);\n        $total_cost += $product['price'] * $cart_item['quantity'];\n    }\n\n    return array(\n        'cart_items' => $carts,\n        'total_cost' => $total_cost\n    );\n}\n\nfunction update_quantity($user_id, $product_id, $new_quantity) {\n    // Update quantity of product in cart\n    update_cart_item_quantity($user_id, $product_id, $new_quantity);\n}\n\nfunction remove_item_from_cart($user_id, $product_id) {\n    // Remove item from cart\n    delete_cart_item($user_id, $product_id);\n}\n```\n\n### **`db.php`**\n\n```php\n// db.php\n\nfunction get_product($id) {\n    global $db;\n    $query = \"SELECT * FROM products WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch(PDO::FETCH_ASSOC);\n}\n\nfunction get_cart_id($user_id) {\n    global $db;\n    $query = \"SELECT id FROM carts WHERE user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n}\n\nfunction get_carts_for_user($user_id) {\n    global $db;\n    $query = \"SELECT ci.* FROM cart_items ci JOIN carts c ON ci.cart_id = c.id WHERE c.user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction add_cart_item($cart_item) {\n    global $db;\n    $query = \"INSERT INTO cart_items (cart_id, product_id, quantity) VALUES (:cart_id, :product_id, :quantity)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':cart_id', $cart_item['cart_id']);\n    $stmt->bindParam(':product_id', $cart_item['product_id']);\n    $stmt->bindParam(':quantity', $cart_item['quantity']);\n    $stmt->execute();\n}\n\nfunction update_cart_item_quantity($user_id, $product_id, $new_quantity) {\n    global $db;\n    $query = \"UPDATE cart_items SET quantity = :quantity WHERE product_id = :product_id AND cart_id = (SELECT id FROM carts WHERE user_id = :user_id)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $new_quantity);\n    $stmt->execute();\n}\n\nfunction delete_cart_item($user_id, $product_id) {\n    global $db;\n    $query = \"DELETE FROM cart_items WHERE product_id = :product_id AND cart_id = (SELECT id FROM carts WHERE user_id = :user_id)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n}\n```\n\n### **`index.php`**\n\n```php\n// index.php\n\nrequire_once 'functions.php';\nrequire_once 'db.php';\n\n// ...\n\nif (isset($_POST['add_to_cart'])) {\n    $user_id = $_SESSION['user_id'];\n    $product_id = $_POST['product_id'];\n    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;\n\n    add_item_to_cart($user_id, $product_id, $quantity);\n}\n\nif (isset($_POST['update_quantity'])) {\n    $user_id = $_SESSION['user_id'];\n    $product_id = $_POST['product_id'];\n    $new_quantity = $_POST['new_quantity'];\n\n    update_quantity($user_id, $product_id, $new_quantity);\n}\n\nif (isset($_POST['remove_item'])) {\n    $user_id = $_SESSION['user_id'];\n    $product_id = $_POST['product_id'];\n\n    remove_item_from_cart($user_id, $product_id);\n}\n\n// ...\n\n?>\n\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"add_to_cart\" value=\"1\">\n    <select name=\"product_id\">\n        <?php foreach (get_products() as $product): ?>\n            <option value=\"<?php echo $product['id']; ?>\"><?php echo $product['name']; ?></option>\n        <?php endforeach; ?>\n    </select>\n    <input type=\"number\" name=\"quantity\" value=\"1\">\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<?php if ($cart_contents = view_cart_contents($_SESSION['user_id'])): ?>\n\n<form action=\"\" method=\"post\">\n    <?php foreach ($cart_contents['cart_items'] as $cart_item): ?>\n        <p>\n            <?php echo $cart_item['product_name']; ?> (x<?php echo $cart_item['quantity']; ?>) - <?php echo format_price($cart_item['price'] * $cart_item['quantity']); ?>\n            <button type=\"submit\" name=\"remove_item\" value=\"<?php echo $cart_item['id']; ?>\">Remove</button>\n        </p>\n    <?php endforeach; ?>\n\n    <p>Total: <?php echo format_price($cart_contents['total_cost']); ?></p>\n\n    <?php if (isset($_POST['update_quantity'])): ?>\n        <form action=\"\" method=\"post\">\n            <input type=\"hidden\" name=\"update_quantity\" value=\"1\">\n            <select name=\"product_id\">\n                <?php foreach ($cart_contents['cart_items'] as $cart_item): ?>\n                    <option value=\"<?php echo $cart_item['id']; ?>\"><?php echo $cart_item['product_name']; ?></option>\n                <?php endforeach; ?>\n            </select>\n            <input type=\"number\" name=\"new_quantity\">\n            <button type=\"submit\">Update Quantity</button>\n        </form>\n    <?php endif; ?>\n</form>\n\n<?php endif; ?>\n```\n\nThis code provides a basic implementation of a purchase cart functionality in PHP. The `functions.php` file contains the main logic for interacting with the database, while the `db.php` file handles database queries and connections. The `index.php` file serves as an example of how to integrate this functionality into a larger application.\n\n**Note:** This is just a basic implementation, and you should consider implementing additional security measures (e.g., input validation, CSRF protection) to ensure the safety of your application.", "code_blocks": [null, "```php\n// functions.php\n\nfunction add_item_to_cart($user_id, $product_id, $quantity = 1) {\n    // Check if product exists and is available in stock\n    $product = get_product($product_id);\n    if (!$product || $product['stock'] < $quantity) {\n        return false;\n    }\n\n    // Add item to cart\n    $cart_item = array(\n        'cart_id' => get_cart_id($user_id),\n        'product_id' => $product_id,\n        'quantity' => $quantity\n    );\n    add_cart_item($cart_item);\n\n    return true;\n}\n\nfunction view_cart_contents($user_id) {\n    // Get cart items for the user\n    $carts = get_carts_for_user($user_id);\n    if (!$carts) {\n        return array();\n    }\n\n    // Calculate total cost of cart contents\n    $total_cost = 0;\n    foreach ($carts as $cart_item) {\n        $product = get_product($cart_item['product_id']);\n        $total_cost += $product['price'] * $cart_item['quantity'];\n    }\n\n    return array(\n        'cart_items' => $carts,\n        'total_cost' => $total_cost\n    );\n}\n\nfunction update_quantity($user_id, $product_id, $new_quantity) {\n    // Update quantity of product in cart\n    update_cart_item_quantity($user_id, $product_id, $new_quantity);\n}\n\nfunction remove_item_from_cart($user_id, $product_id) {\n    // Remove item from cart\n    delete_cart_item($user_id, $product_id);\n}\n```", "```php\n// db.php\n\nfunction get_product($id) {\n    global $db;\n    $query = \"SELECT * FROM products WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch(PDO::FETCH_ASSOC);\n}\n\nfunction get_cart_id($user_id) {\n    global $db;\n    $query = \"SELECT id FROM carts WHERE user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n}\n\nfunction get_carts_for_user($user_id) {\n    global $db;\n    $query = \"SELECT ci.* FROM cart_items ci JOIN carts c ON ci.cart_id = c.id WHERE c.user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction add_cart_item($cart_item) {\n    global $db;\n    $query = \"INSERT INTO cart_items (cart_id, product_id, quantity) VALUES (:cart_id, :product_id, :quantity)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':cart_id', $cart_item['cart_id']);\n    $stmt->bindParam(':product_id', $cart_item['product_id']);\n    $stmt->bindParam(':quantity', $cart_item['quantity']);\n    $stmt->execute();\n}\n\nfunction update_cart_item_quantity($user_id, $product_id, $new_quantity) {\n    global $db;\n    $query = \"UPDATE cart_items SET quantity = :quantity WHERE product_id = :product_id AND cart_id = (SELECT id FROM carts WHERE user_id = :user_id)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $new_quantity);\n    $stmt->execute();\n}\n\nfunction delete_cart_item($user_id, $product_id) {\n    global $db;\n    $query = \"DELETE FROM cart_items WHERE product_id = :product_id AND cart_id = (SELECT id FROM carts WHERE user_id = :user_id)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n}\n```", "```php\n// index.php\n\nrequire_once 'functions.php';\nrequire_once 'db.php';\n\n// ...\n\nif (isset($_POST['add_to_cart'])) {\n    $user_id = $_SESSION['user_id'];\n    $product_id = $_POST['product_id'];\n    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;\n\n    add_item_to_cart($user_id, $product_id, $quantity);\n}\n\nif (isset($_POST['update_quantity'])) {\n    $user_id = $_SESSION['user_id'];\n    $product_id = $_POST['product_id'];\n    $new_quantity = $_POST['new_quantity'];\n\n    update_quantity($user_id, $product_id, $new_quantity);\n}\n\nif (isset($_POST['remove_item'])) {\n    $user_id = $_SESSION['user_id'];\n    $product_id = $_POST['product_id'];\n\n    remove_item_from_cart($user_id, $product_id);\n}\n\n// ...\n\n?>\n\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"add_to_cart\" value=\"1\">\n    <select name=\"product_id\">\n        <?php foreach (get_products() as $product): ?>\n            <option value=\"<?php echo $product['id']; ?>\"><?php echo $product['name']; ?></option>\n        <?php endforeach; ?>\n    </select>\n    <input type=\"number\" name=\"quantity\" value=\"1\">\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<?php if ($cart_contents = view_cart_contents($_SESSION['user_id'])): ?>\n\n<form action=\"\" method=\"post\">\n    <?php foreach ($cart_contents['cart_items'] as $cart_item): ?>\n        <p>\n            <?php echo $cart_item['product_name']; ?> (x<?php echo $cart_item['quantity']; ?>) - <?php echo format_price($cart_item['price'] * $cart_item['quantity']); ?>\n            <button type=\"submit\" name=\"remove_item\" value=\"<?php echo $cart_item['id']; ?>\">Remove</button>\n        </p>\n    <?php endforeach; ?>\n\n    <p>Total: <?php echo format_price($cart_contents['total_cost']); ?></p>\n\n    <?php if (isset($_POST['update_quantity'])): ?>\n        <form action=\"\" method=\"post\">\n            <input type=\"hidden\" name=\"update_quantity\" value=\"1\">\n            <select name=\"product_id\">\n                <?php foreach ($cart_contents['cart_items'] as $cart_item): ?>\n                    <option value=\"<?php echo $cart_item['id']; ?>\"><?php echo $cart_item['product_name']; ?></option>\n                <?php endforeach; ?>\n            </select>\n            <input type=\"number\" name=\"new_quantity\">\n            <button type=\"submit\">Update Quantity</button>\n        </form>\n    <?php endif; ?>\n</form>\n\n<?php endif; ?>\n```"]}
