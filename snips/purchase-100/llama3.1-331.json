{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a basic purchase functionality using PHP. This example includes the following features:\n\n*   User authentication\n*   Shopping cart management\n*   Order processing\n\nThis is a simplified version and may need to be adapted based on your specific requirements.\n\n**Database Schema**\n\nFirst, let's define the database schema for this example:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  user_id INT NOT NULL,\n  total DECIMAL(10,2) NOT NULL,\n  status VARCHAR(255) NOT NULL DEFAULT 'pending'\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  product_id INT NOT NULL,\n  quantity INT NOT NULL\n);\n```\n\n**PHP Code**\n\nNow, let's create the PHP code for the purchase functionality:\n\n**auth.php**\n```php\n<?php\n\nclass Auth {\n  private $db;\n\n  function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function login($username, $password) {\n    $stmt = $this->db->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->execute([$username, hash('sha256', $password)]);\n    return $stmt->fetch();\n  }\n}\n\n?>\n```\n\n**product.php**\n```php\n<?php\n\nclass Product {\n  private $db;\n\n  function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function getAllProducts() {\n    $stmt = $this->db->query(\"SELECT * FROM products\");\n    return $stmt->fetchAll();\n  }\n}\n\n?>\n```\n\n**cart.php**\n```php\n<?php\n\nclass Cart {\n  private $user_id;\n\n  function __construct($user_id) {\n    $this->user_id = $user_id;\n  }\n\n  public function addProduct($product_id, $quantity) {\n    // Add product to cart\n    $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n    $stmt->execute([$this->user_id, $product_id, $quantity]);\n  }\n\n  public function removeProduct($product_id) {\n    // Remove product from cart\n    $stmt = $this->db->prepare(\"DELETE FROM order_items WHERE product_id = ?\");\n    $stmt->execute([$product_id]);\n  }\n}\n\n?>\n```\n\n**order.php**\n```php\n<?php\n\nclass Order {\n  private $user_id;\n\n  function __construct($user_id) {\n    $this->user_id = $user_id;\n  }\n\n  public function placeOrder() {\n    // Process order\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, total) VALUES (?, ?)\");\n    $stmt->execute([$this->user_id, $total]);\n\n    // Update cart with placed order\n    $cart = new Cart($this->user_id);\n  }\n\n  public function getOrderStatus() {\n    $stmt = $this->db->query(\"SELECT status FROM orders WHERE user_id = ?\");\n    return $stmt->fetch()['status'];\n  }\n}\n\n?>\n```\n\n**index.php**\n```php\n<?php\n\nrequire_once 'auth.php';\nrequire_once 'product.php';\n\n$db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n// Login functionality\n$auth = new Auth($db);\nif (isset($_POST['login'])) {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n  $user = $auth->login($username, $password);\n  if ($user) {\n    // User logged in successfully\n  } else {\n    // Login failed\n  }\n}\n\n// Product functionality\n$product = new Product($db);\n\n// Cart functionality\n$cart = new Cart(1); // Replace with actual user ID\n\n// Order functionality\n$order = new Order(1); // Replace with actual user ID\n\n?>\n\n<html>\n  <body>\n    <!-- Login form -->\n    <form action=\"\" method=\"post\">\n      <input type=\"text\" name=\"username\" placeholder=\"Username\">\n      <input type=\"password\" name=\"password\" placeholder=\"Password\">\n      <button type=\"submit\" name=\"login\">Login</button>\n    </form>\n\n    <!-- Product list -->\n    <?php foreach ($product->getAllProducts() as $product): ?>\n      <h2><?= $product['name'] ?></h2>\n      <p>Price: <?= $product['price'] ?></p>\n      <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n    <?php endforeach; ?>\n\n    <!-- Cart contents -->\n    <?php foreach ($cart->getProducts() as $product): ?>\n      <h2><?= $product['name'] ?></h2>\n      <p>Quantity: <?= $product['quantity'] ?></p>\n      <button type=\"submit\" name=\"remove_from_cart\">Remove from Cart</button>\n    <?php endforeach; ?>\n\n    <!-- Order status -->\n    <p>Order Status: <?= $order->getOrderStatus() ?></p>\n\n    <!-- Place order button -->\n    <button type=\"submit\" name=\"place_order\">Place Order</button>\n  </body>\n</html>\n```\n\nThis example demonstrates a basic purchase functionality using PHP, including user authentication, shopping cart management, and order processing. However, this is a simplified version and may need to be adapted based on your specific requirements.\n\nRemember to replace the placeholders with actual values and follow best practices for security, such as validating input data and using prepared statements to prevent SQL injection attacks.", "code_blocks": [null, "```php\n<?php\n\nclass Auth {\n  private $db;\n\n  function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function login($username, $password) {\n    $stmt = $this->db->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->execute([$username, hash('sha256', $password)]);\n    return $stmt->fetch();\n  }\n}\n\n?>\n```", "```php\n<?php\n\nclass Product {\n  private $db;\n\n  function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function getAllProducts() {\n    $stmt = $this->db->query(\"SELECT * FROM products\");\n    return $stmt->fetchAll();\n  }\n}\n\n?>\n```", "```php\n<?php\n\nclass Cart {\n  private $user_id;\n\n  function __construct($user_id) {\n    $this->user_id = $user_id;\n  }\n\n  public function addProduct($product_id, $quantity) {\n    // Add product to cart\n    $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n    $stmt->execute([$this->user_id, $product_id, $quantity]);\n  }\n\n  public function removeProduct($product_id) {\n    // Remove product from cart\n    $stmt = $this->db->prepare(\"DELETE FROM order_items WHERE product_id = ?\");\n    $stmt->execute([$product_id]);\n  }\n}\n\n?>\n```", "```php\n<?php\n\nclass Order {\n  private $user_id;\n\n  function __construct($user_id) {\n    $this->user_id = $user_id;\n  }\n\n  public function placeOrder() {\n    // Process order\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, total) VALUES (?, ?)\");\n    $stmt->execute([$this->user_id, $total]);\n\n    // Update cart with placed order\n    $cart = new Cart($this->user_id);\n  }\n\n  public function getOrderStatus() {\n    $stmt = $this->db->query(\"SELECT status FROM orders WHERE user_id = ?\");\n    return $stmt->fetch()['status'];\n  }\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'auth.php';\nrequire_once 'product.php';\n\n$db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n// Login functionality\n$auth = new Auth($db);\nif (isset($_POST['login'])) {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n  $user = $auth->login($username, $password);\n  if ($user) {\n    // User logged in successfully\n  } else {\n    // Login failed\n  }\n}\n\n// Product functionality\n$product = new Product($db);\n\n// Cart functionality\n$cart = new Cart(1); // Replace with actual user ID\n\n// Order functionality\n$order = new Order(1); // Replace with actual user ID\n\n?>\n\n<html>\n  <body>\n    <!-- Login form -->\n    <form action=\"\" method=\"post\">\n      <input type=\"text\" name=\"username\" placeholder=\"Username\">\n      <input type=\"password\" name=\"password\" placeholder=\"Password\">\n      <button type=\"submit\" name=\"login\">Login</button>\n    </form>\n\n    <!-- Product list -->\n    <?php foreach ($product->getAllProducts() as $product): ?>\n      <h2><?= $product['name'] ?></h2>\n      <p>Price: <?= $product['price'] ?></p>\n      <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n    <?php endforeach; ?>\n\n    <!-- Cart contents -->\n    <?php foreach ($cart->getProducts() as $product): ?>\n      <h2><?= $product['name'] ?></h2>\n      <p>Quantity: <?= $product['quantity'] ?></p>\n      <button type=\"submit\" name=\"remove_from_cart\">Remove from Cart</button>\n    <?php endforeach; ?>\n\n    <!-- Order status -->\n    <p>Order Status: <?= $order->getOrderStatus() ?></p>\n\n    <!-- Place order button -->\n    <button type=\"submit\" name=\"place_order\">Place Order</button>\n  </body>\n</html>\n```"]}
