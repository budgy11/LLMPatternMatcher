{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP that includes user authentication, product listing, and payment processing. This example uses the following technologies:\n\n* MySQL for database management\n* PDO (PHP Data Objects) for database interactions\n* Stripe for payment processing\n* Bootstrap for front-end layout\n\n**Database Schema**\n\nFirst, create a new MySQL database and schema with the following tables:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255),\n  password VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  total DECIMAL(10,2),\n  status VARCHAR(255),\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nCreate a new PHP file named `purchase.php` and add the following code:\n```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Database connection\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// User authentication\nif (!isset($_SESSION['user_id'])) {\n    header('Location: login.php');\n    exit;\n}\n\n// Product listing\n$products = array();\n$stmt = $pdo->prepare('SELECT * FROM products');\n$stmt->execute();\nwhile ($row = $stmt->fetch()) {\n    $products[] = array(\n        'id' => $row['id'],\n        'name' => $row['name'],\n        'price' => $row['price']\n    );\n}\n\n// Payment processing\nif (isset($_POST['submit'])) {\n    // Stripe API keys\n    \\Stripe\\Stripe::setApiKey('YOUR_STRIPE_API_KEY');\n    \\Stripe\\Stripe::setApiVersion('2020-08-27');\n\n    // Get the product ID and quantity from the form data\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Calculate the total cost\n    $total = $products[$product_id - 1]['price'] * $quantity;\n\n    // Create a new charge\n    try {\n        $charge = \\Stripe\\Charge::create([\n            'amount' => $total,\n            'currency' => 'usd',\n            'description' => 'Purchase of product #'.$product_id,\n            'source' => $_POST['token']\n        ]);\n        echo 'Payment successful!';\n    } catch (Exception $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Display the purchase form\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Purchase</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\n</head>\n<body>\n\n    <div class=\"container\">\n        <h1>Purchase</h1>\n        <?php foreach ($products as $product) { ?>\n            <div class=\"card\">\n                <h2><?= $product['name'] ?></h2>\n                <p>Price: <?= $product['price'] ?></p>\n                <form action=\"<?= $_SERVER['PHP_SELF'] ?>\" method=\"post\">\n                    <input type=\"hidden\" name=\"product_id\" value=\"<?= $product['id'] ?>\">\n                    <input type=\"number\" name=\"quantity\" value=\"1\">\n                    <button type=\"submit\" name=\"submit\">Purchase</button>\n                </form>\n            </div>\n        <?php } ?>\n    </div>\n\n<?php\nrequire_once 'footer.php';\n?>\n```\n\n**Stripe Configuration**\n\nCreate a new file named `stripe.php` and add the following code:\n```php\n<?php\n\n// Stripe API keys\n\\Stripe\\Stripe::setApiKey('YOUR_STRIPE_API_KEY');\n\n// Set the API version\n\\Stripe\\Stripe::setApiVersion('2020-08-27');\n```\n\n**Config File**\n\nCreate a new file named `config.php` and add the following code:\n```php\n<?php\n\n// Database configuration\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n?>\n```\n\nThis is a basic example of a purchase functionality using PHP, Stripe for payment processing, and Bootstrap for front-end layout. You will need to modify the code to fit your specific requirements.\n\nNote: This is just an example and you should never store sensitive data like API keys or passwords in plain text files. Always use environment variables or secure storage mechanisms to protect sensitive information.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Database connection\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// User authentication\nif (!isset($_SESSION['user_id'])) {\n    header('Location: login.php');\n    exit;\n}\n\n// Product listing\n$products = array();\n$stmt = $pdo->prepare('SELECT * FROM products');\n$stmt->execute();\nwhile ($row = $stmt->fetch()) {\n    $products[] = array(\n        'id' => $row['id'],\n        'name' => $row['name'],\n        'price' => $row['price']\n    );\n}\n\n// Payment processing\nif (isset($_POST['submit'])) {\n    // Stripe API keys\n    \\Stripe\\Stripe::setApiKey('YOUR_STRIPE_API_KEY');\n    \\Stripe\\Stripe::setApiVersion('2020-08-27');\n\n    // Get the product ID and quantity from the form data\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Calculate the total cost\n    $total = $products[$product_id - 1]['price'] * $quantity;\n\n    // Create a new charge\n    try {\n        $charge = \\Stripe\\Charge::create([\n            'amount' => $total,\n            'currency' => 'usd',\n            'description' => 'Purchase of product #'.$product_id,\n            'source' => $_POST['token']\n        ]);\n        echo 'Payment successful!';\n    } catch (Exception $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Display the purchase form\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Purchase</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\n</head>\n<body>\n\n    <div class=\"container\">\n        <h1>Purchase</h1>\n        <?php foreach ($products as $product) { ?>\n            <div class=\"card\">\n                <h2><?= $product['name'] ?></h2>\n                <p>Price: <?= $product['price'] ?></p>\n                <form action=\"<?= $_SERVER['PHP_SELF'] ?>\" method=\"post\">\n                    <input type=\"hidden\" name=\"product_id\" value=\"<?= $product['id'] ?>\">\n                    <input type=\"number\" name=\"quantity\" value=\"1\">\n                    <button type=\"submit\" name=\"submit\">Purchase</button>\n                </form>\n            </div>\n        <?php } ?>\n    </div>\n\n<?php\nrequire_once 'footer.php';\n?>\n```", "```php\n<?php\n\n// Stripe API keys\n\\Stripe\\Stripe::setApiKey('YOUR_STRIPE_API_KEY');\n\n// Set the API version\n\\Stripe\\Stripe::setApiVersion('2020-08-27');\n```", "```php\n<?php\n\n// Database configuration\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n?>\n```"]}
