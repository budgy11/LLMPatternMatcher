{"prompt": "Create a purchase cart functionality using php", "llm_output": "**Purchase Cart Functionality in PHP**\n======================================\n\nIn this example, we'll create a basic purchase cart functionality that allows users to add products to their cart and view their cart contents. We'll use PHP as the server-side language.\n\n**Database Setup**\n-----------------\n\nFor simplicity, let's assume we have a `products` table with the following structure:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n```\n\nWe'll also create a `carts` table to store user cart contents:\n\n```sql\nCREATE TABLE carts (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n**PHP Code**\n------------\n\n### **cart.php**\n\nThis file will handle cart operations.\n\n```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n  // Establish database connection\n  $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n  echo \"Error connecting to database: \" . $e->getMessage();\n  exit;\n}\n\n// Function to add product to cart\nfunction add_to_cart($user_id, $product_id, $quantity) {\n  global $conn;\n\n  // Check if product exists in cart\n  $stmt = $conn->prepare(\"SELECT * FROM carts WHERE user_id = :user_id AND product_id = :product_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n  $existing_cart_item = $stmt->fetch();\n\n  if ($existing_cart_item) {\n    // Update quantity of existing cart item\n    $stmt = $conn->prepare(\"UPDATE carts SET quantity = :quantity WHERE user_id = :user_id AND product_id = :product_id\");\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n  } else {\n    // Add new cart item\n    $stmt = $conn->prepare(\"INSERT INTO carts (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->execute();\n  }\n}\n\n// Function to view cart contents\nfunction view_cart($user_id) {\n  global $conn;\n\n  // Get all cart items for user\n  $stmt = $conn->prepare(\"SELECT * FROM carts WHERE user_id = :user_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->execute();\n  $cart_items = $stmt->fetchAll();\n\n  return $cart_items;\n}\n\n// Function to remove product from cart\nfunction remove_from_cart($user_id, $product_id) {\n  global $conn;\n\n  // Delete cart item by user ID and product ID\n  $stmt = $conn->prepare(\"DELETE FROM carts WHERE user_id = :user_id AND product_id = :product_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n}\n?>\n```\n\n### **index.php**\n\nThis file will handle user interactions with the cart.\n\n```php\n<?php\nrequire_once 'cart.php';\n\n// Initialize cart variables\n$cart = array();\n\n// Check if user is logged in (for simplicity, we'll use a hardcoded example)\n$user_id = 1;\n\n// Add product to cart\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  add_to_cart($user_id, $product_id, $quantity);\n}\n\n// View cart contents\n$cart_items = view_cart($user_id);\n\n// Remove product from cart\nif (isset($_POST['remove_from_cart'])) {\n  $product_id = $_POST['product_id'];\n  remove_from_cart($user_id, $product_id);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Cart</title>\n</head>\n<body>\n\n  <!-- Add product to cart form -->\n  <form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"add_to_cart\" value=\"1\">\n    <select name=\"product_id\">\n      <?php\n      $stmt = $conn->prepare(\"SELECT * FROM products\");\n      $stmt->execute();\n      $products = $stmt->fetchAll();\n\n      foreach ($products as $product) {\n        echo \"<option value='{$product['id']}'>{$product['name']}</option>\";\n      }\n      ?>\n    </select>\n    <input type=\"number\" name=\"quantity\">\n    <button type=\"submit\">Add to Cart</button>\n  </form>\n\n  <!-- View cart contents table -->\n  <h2>Cart Contents:</h2>\n  <table border=\"1\">\n    <?php\n    foreach ($cart_items as $item) {\n      echo \"<tr><td>{$item['product_id']}</td><td>{$item['quantity']}</td></tr>\";\n    }\n    ?>\n  </table>\n\n  <!-- Remove product from cart form -->\n  <form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"remove_from_cart\" value=\"1\">\n    <select name=\"product_id\">\n      <?php\n      foreach ($cart_items as $item) {\n        echo \"<option value='{$item['id']}'>{$item['product_id']}</option>\";\n      }\n      ?>\n    </select>\n    <button type=\"submit\">Remove from Cart</button>\n  </form>\n\n</body>\n</html>\n```\n\nThis implementation provides basic cart functionality, including adding products to the cart and viewing cart contents. You can modify and extend this code as needed for your specific use case.\n\n**Example Use Cases**\n\n* User adds product to cart:\n\t+ Submit form with `add_to_cart` button clicked\n\t+ Product is added to user's cart\n* User views cart contents:\n\t+ Accesses `index.php` page\n\t+ Cart contents are displayed in table\n* User removes product from cart:\n\t+ Submits form with `remove_from_cart` button clicked\n\t+ Product is removed from user's cart\n\nNote: This implementation assumes a simple database schema and basic functionality. You may need to modify or extend this code to fit your specific requirements, such as adding authentication or handling more complex cart operations.", "code_blocks": [null, null, "```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n  // Establish database connection\n  $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n  echo \"Error connecting to database: \" . $e->getMessage();\n  exit;\n}\n\n// Function to add product to cart\nfunction add_to_cart($user_id, $product_id, $quantity) {\n  global $conn;\n\n  // Check if product exists in cart\n  $stmt = $conn->prepare(\"SELECT * FROM carts WHERE user_id = :user_id AND product_id = :product_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n  $existing_cart_item = $stmt->fetch();\n\n  if ($existing_cart_item) {\n    // Update quantity of existing cart item\n    $stmt = $conn->prepare(\"UPDATE carts SET quantity = :quantity WHERE user_id = :user_id AND product_id = :product_id\");\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n  } else {\n    // Add new cart item\n    $stmt = $conn->prepare(\"INSERT INTO carts (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->execute();\n  }\n}\n\n// Function to view cart contents\nfunction view_cart($user_id) {\n  global $conn;\n\n  // Get all cart items for user\n  $stmt = $conn->prepare(\"SELECT * FROM carts WHERE user_id = :user_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->execute();\n  $cart_items = $stmt->fetchAll();\n\n  return $cart_items;\n}\n\n// Function to remove product from cart\nfunction remove_from_cart($user_id, $product_id) {\n  global $conn;\n\n  // Delete cart item by user ID and product ID\n  $stmt = $conn->prepare(\"DELETE FROM carts WHERE user_id = :user_id AND product_id = :product_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n}\n?>\n```", "```php\n<?php\nrequire_once 'cart.php';\n\n// Initialize cart variables\n$cart = array();\n\n// Check if user is logged in (for simplicity, we'll use a hardcoded example)\n$user_id = 1;\n\n// Add product to cart\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  add_to_cart($user_id, $product_id, $quantity);\n}\n\n// View cart contents\n$cart_items = view_cart($user_id);\n\n// Remove product from cart\nif (isset($_POST['remove_from_cart'])) {\n  $product_id = $_POST['product_id'];\n  remove_from_cart($user_id, $product_id);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Cart</title>\n</head>\n<body>\n\n  <!-- Add product to cart form -->\n  <form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"add_to_cart\" value=\"1\">\n    <select name=\"product_id\">\n      <?php\n      $stmt = $conn->prepare(\"SELECT * FROM products\");\n      $stmt->execute();\n      $products = $stmt->fetchAll();\n\n      foreach ($products as $product) {\n        echo \"<option value='{$product['id']}'>{$product['name']}</option>\";\n      }\n      ?>\n    </select>\n    <input type=\"number\" name=\"quantity\">\n    <button type=\"submit\">Add to Cart</button>\n  </form>\n\n  <!-- View cart contents table -->\n  <h2>Cart Contents:</h2>\n  <table border=\"1\">\n    <?php\n    foreach ($cart_items as $item) {\n      echo \"<tr><td>{$item['product_id']}</td><td>{$item['quantity']}</td></tr>\";\n    }\n    ?>\n  </table>\n\n  <!-- Remove product from cart form -->\n  <form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"remove_from_cart\" value=\"1\">\n    <select name=\"product_id\">\n      <?php\n      foreach ($cart_items as $item) {\n        echo \"<option value='{$item['id']}'>{$item['product_id']}</option>\";\n      }\n      ?>\n    </select>\n    <button type=\"submit\">Remove from Cart</button>\n  </form>\n\n</body>\n</html>\n```"]}
