{"prompt": "Create a purchase cart functionality using php", "llm_output": "**Purchase Cart Functionality using PHP**\n=====================================\n\nThis is an example of a basic purchase cart functionality using PHP. It includes functions for adding items to the cart, removing items from the cart, updating item quantities in the cart, and calculating the total cost.\n\n### `cart.php` (the main cart file)\n\n```php\n<?php\n\n// Initialize the cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = [];\n}\n\nfunction add_item_to_cart($item_id) {\n    // Check if the item is already in the cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            // If it exists, increment its quantity\n            $item['quantity']++;\n            return;\n        }\n    }\n\n    // Add the new item to the cart with a quantity of 1\n    $_SESSION['cart'][] = ['id' => $item_id, 'price' => 0.00, 'quantity' => 1];\n}\n\nfunction remove_item_from_cart($item_id) {\n    // Filter out the item from the cart array if it exists\n    $_SESSION['cart'] = array_filter($_SESSION['cart'], function ($item) use ($item_id) {\n        return $item['id'] != $item_id;\n    });\n}\n\nfunction update_item_quantity($item_id, $new_quantity) {\n    // Find the item in the cart and update its quantity\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n\n    // If the item is not found, add it to the cart with the new quantity\n    add_item_to_cart($item_id);\n}\n\nfunction calculate_total_cost() {\n    $total = 0.00;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n    return number_format($total, 2); // round to two decimal places\n}\n\n?>\n```\n\n### `index.php` (an example page that uses the cart functions)\n\n```php\n<?php require_once 'cart.php'; ?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Purchase Cart</title>\n</head>\n<body>\n\n    <!-- Form to add items to the cart -->\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"item_id\" value=\"1\">\n        <button type=\"submit\">Add Item 1 to Cart</button>\n    </form>\n\n    <!-- Form to remove an item from the cart -->\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"remove_item_id\" value=\"2\">\n        <button type=\"submit\">Remove Item 2 from Cart</button>\n    </form>\n\n    <!-- Form to update an item's quantity in the cart -->\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"update_item_id\" value=\"3\">\n        <label for=\"new_quantity\">New Quantity:</label>\n        <input type=\"number\" id=\"new_quantity\" name=\"new_quantity\">\n        <button type=\"submit\">Update Item 3's Quantity</button>\n    </form>\n\n    <!-- Display the current cart contents -->\n    <?php if (!empty($_SESSION['cart'])) : ?>\n        <h2>Cart Contents:</h2>\n        <ul>\n            <?php foreach ($_SESSION['cart'] as $item) : ?>\n                <li><?php echo $item['id']; ?> (Quantity: <?php echo $item['quantity']; ?>, Price: <?php echo number_format($item['price'], 2); ?>)</li>\n            <?php endforeach; ?>\n        </ul>\n\n        <!-- Display the total cost -->\n        <p>Total Cost: <?php echo calculate_total_cost(); ?></p>\n    <?php else : ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\nThis code provides a basic purchase cart functionality using PHP. You can add items to the cart, remove them, and update their quantities. The total cost of the items in the cart is also calculated.\n\nNote: This example assumes you have already set up sessions on your server. If not, consult the documentation for your web hosting service or a PHP framework like Laravel or Symfony to learn how to enable session support.\n\nAlso, this example uses hardcoded item IDs and prices for simplicity. In a real-world application, you would likely use a database to store these values and retrieve them dynamically based on user input or other conditions.", "code_blocks": ["```php\n<?php\n\n// Initialize the cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = [];\n}\n\nfunction add_item_to_cart($item_id) {\n    // Check if the item is already in the cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            // If it exists, increment its quantity\n            $item['quantity']++;\n            return;\n        }\n    }\n\n    // Add the new item to the cart with a quantity of 1\n    $_SESSION['cart'][] = ['id' => $item_id, 'price' => 0.00, 'quantity' => 1];\n}\n\nfunction remove_item_from_cart($item_id) {\n    // Filter out the item from the cart array if it exists\n    $_SESSION['cart'] = array_filter($_SESSION['cart'], function ($item) use ($item_id) {\n        return $item['id'] != $item_id;\n    });\n}\n\nfunction update_item_quantity($item_id, $new_quantity) {\n    // Find the item in the cart and update its quantity\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n\n    // If the item is not found, add it to the cart with the new quantity\n    add_item_to_cart($item_id);\n}\n\nfunction calculate_total_cost() {\n    $total = 0.00;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n    return number_format($total, 2); // round to two decimal places\n}\n\n?>\n```", "```php\n<?php require_once 'cart.php'; ?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Purchase Cart</title>\n</head>\n<body>\n\n    <!-- Form to add items to the cart -->\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"item_id\" value=\"1\">\n        <button type=\"submit\">Add Item 1 to Cart</button>\n    </form>\n\n    <!-- Form to remove an item from the cart -->\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"remove_item_id\" value=\"2\">\n        <button type=\"submit\">Remove Item 2 from Cart</button>\n    </form>\n\n    <!-- Form to update an item's quantity in the cart -->\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"update_item_id\" value=\"3\">\n        <label for=\"new_quantity\">New Quantity:</label>\n        <input type=\"number\" id=\"new_quantity\" name=\"new_quantity\">\n        <button type=\"submit\">Update Item 3's Quantity</button>\n    </form>\n\n    <!-- Display the current cart contents -->\n    <?php if (!empty($_SESSION['cart'])) : ?>\n        <h2>Cart Contents:</h2>\n        <ul>\n            <?php foreach ($_SESSION['cart'] as $item) : ?>\n                <li><?php echo $item['id']; ?> (Quantity: <?php echo $item['quantity']; ?>, Price: <?php echo number_format($item['price'], 2); ?>)</li>\n            <?php endforeach; ?>\n        </ul>\n\n        <!-- Display the total cost -->\n        <p>Total Cost: <?php echo calculate_total_cost(); ?></p>\n    <?php else : ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n\n</body>\n</html>\n```"]}
