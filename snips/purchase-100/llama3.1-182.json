{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Database Schema:**\n\nLet's assume we have the following database schema:\n\n* `orders` table:\n\t+ `id` (primary key)\n\t+ `customer_id`\n\t+ `order_date`\n\t+ `total`\n* `customers` table:\n\t+ `id` (primary key)\n\t+ `name`\n\t+ `email`\n* `products` table:\n\t+ `id` (primary key)\n\t+ `name`\n\t+ `price`\n\n**PHP Code:**\n\nCreate a new file called `purchase.php` and add the following code:\n\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'store';\n$username = 'root';\n$password = '';\n\n// Connect to database\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Function to add product to cart\nfunction addToCart($customer_id, $product_id, $quantity) {\n    global $conn;\n    \n    // Check if product is already in cart\n    $stmt = $conn->prepare(\"SELECT * FROM orders WHERE customer_id = :customer_id AND product_id = :product_id\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    \n    if ($stmt->rowCount() > 0) {\n        return \"Product already in cart\";\n    }\n    \n    // Add product to order\n    $stmt = $conn->prepare(\"INSERT INTO orders (customer_id, product_id, quantity) VALUES (:customer_id, :product_id, :quantity)\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->execute();\n    \n    return \"Product added to cart\";\n}\n\n// Function to update product quantity in cart\nfunction updateQuantity($order_id, $new_quantity) {\n    global $conn;\n    \n    // Update product quantity in order\n    $stmt = $conn->prepare(\"UPDATE orders SET quantity = :quantity WHERE id = :id\");\n    $stmt->bindParam(':quantity', $new_quantity);\n    $stmt->bindParam(':id', $order_id);\n    $stmt->execute();\n}\n\n// Function to remove product from cart\nfunction removeFromCart($customer_id, $product_id) {\n    global $conn;\n    \n    // Remove product from order\n    $stmt = $conn->prepare(\"DELETE FROM orders WHERE customer_id = :customer_id AND product_id = :product_id\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n}\n\n// Function to checkout\nfunction checkout($customer_id) {\n    global $conn;\n    \n    // Get total cost of order\n    $stmt = $conn->prepare(\"SELECT SUM(price * quantity) AS total FROM orders WHERE customer_id = :customer_id\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->execute();\n    \n    $total = $stmt->fetchColumn();\n    \n    // Insert new order into database\n    $stmt = $conn->prepare(\"INSERT INTO orders (customer_id, total) VALUES (:customer_id, :total)\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n    \n    // Clear cart\n    removeFromCart($customer_id, null);\n}\n\n// Example usage:\n$customer_id = 1;\n$product_id = 1;\n$quantity = 2;\n\necho addToCart($customer_id, $product_id, $quantity); // Product added to cart\n\n// Update quantity\nupdateQuantity(1, 3);\n\n// Remove product from cart\nremoveFromCart($customer_id, $product_id);\n\n// Checkout\ncheckout($customer_id);\n\n?>\n```\n\nThis code assumes you have a basic understanding of PHP and database connections. The functions provided are:\n\n* `addToCart`: Adds a product to the customer's cart.\n* `updateQuantity`: Updates the quantity of a product in the customer's cart.\n* `removeFromCart`: Removes a product from the customer's cart.\n* `checkout`: Checks out the customer's order and clears their cart.\n\nNote: This is a simplified example and you should consider implementing security measures such as user authentication and authorization to ensure the functionality works correctly.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'store';\n$username = 'root';\n$password = '';\n\n// Connect to database\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Function to add product to cart\nfunction addToCart($customer_id, $product_id, $quantity) {\n    global $conn;\n    \n    // Check if product is already in cart\n    $stmt = $conn->prepare(\"SELECT * FROM orders WHERE customer_id = :customer_id AND product_id = :product_id\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    \n    if ($stmt->rowCount() > 0) {\n        return \"Product already in cart\";\n    }\n    \n    // Add product to order\n    $stmt = $conn->prepare(\"INSERT INTO orders (customer_id, product_id, quantity) VALUES (:customer_id, :product_id, :quantity)\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->execute();\n    \n    return \"Product added to cart\";\n}\n\n// Function to update product quantity in cart\nfunction updateQuantity($order_id, $new_quantity) {\n    global $conn;\n    \n    // Update product quantity in order\n    $stmt = $conn->prepare(\"UPDATE orders SET quantity = :quantity WHERE id = :id\");\n    $stmt->bindParam(':quantity', $new_quantity);\n    $stmt->bindParam(':id', $order_id);\n    $stmt->execute();\n}\n\n// Function to remove product from cart\nfunction removeFromCart($customer_id, $product_id) {\n    global $conn;\n    \n    // Remove product from order\n    $stmt = $conn->prepare(\"DELETE FROM orders WHERE customer_id = :customer_id AND product_id = :product_id\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n}\n\n// Function to checkout\nfunction checkout($customer_id) {\n    global $conn;\n    \n    // Get total cost of order\n    $stmt = $conn->prepare(\"SELECT SUM(price * quantity) AS total FROM orders WHERE customer_id = :customer_id\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->execute();\n    \n    $total = $stmt->fetchColumn();\n    \n    // Insert new order into database\n    $stmt = $conn->prepare(\"INSERT INTO orders (customer_id, total) VALUES (:customer_id, :total)\");\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n    \n    // Clear cart\n    removeFromCart($customer_id, null);\n}\n\n// Example usage:\n$customer_id = 1;\n$product_id = 1;\n$quantity = 2;\n\necho addToCart($customer_id, $product_id, $quantity); // Product added to cart\n\n// Update quantity\nupdateQuantity(1, 3);\n\n// Remove product from cart\nremoveFromCart($customer_id, $product_id);\n\n// Checkout\ncheckout($customer_id);\n\n?>\n```"]}
