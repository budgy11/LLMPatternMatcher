{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a basic purchase cart functionality using PHP. This will involve creating two main scripts: one for the cart display and another for adding or removing items from the cart.\n\n**cart.php**\n```php\n<?php\nsession_start();\n\n// Initialize cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Get current cart contents\n$cart = $_SESSION['cart'];\n\n// Display cart contents\n?>\n\n<div class=\"cart\">\n  <h2>Cart Contents:</h2>\n  <table border=\"1\">\n    <tr>\n      <th>Product</th>\n      <th>Quantity</th>\n      <th>Price</th>\n      <th>Total</th>\n    </tr>\n    <?php\n    // Display each item in the cart\n    foreach ($cart as $product_id => $details) {\n        echo \"<tr>\";\n        echo \"<td>\" . $details['name'] . \"</td>\";\n        echo \"<td>\" . $details['quantity'] . \"</td>\";\n        echo \"<td>$\" . number_format($details['price'], 2) . \"</td>\";\n        echo \"<td>$\" . number_format($details['total'], 2) . \"</td>\";\n        echo \"</tr>\";\n    }\n    ?>\n  </table>\n</div>\n\n<?php\n// Calculate total cart value\n$total = array_sum(array_column($cart, 'total'));\necho \"<p>Total: $\" . number_format($total, 2) . \"</p>\";\n\n?>\n```\n\n**cart_controller.php**\n```php\n<?php\nfunction add_to_cart($product_id, $quantity) {\n    global $cart;\n    \n    // Check if product is already in cart\n    foreach ($cart as &$details) {\n        if ($details['id'] == $product_id) {\n            // If it is, update its quantity and recalculate total\n            $details['quantity'] += $quantity;\n            $details['total'] = $details['price'] * $details['quantity'];\n            return true; // Update successful\n        }\n    }\n\n    // If product not in cart, add it with new details\n    $new_product = array(\n        'id' => $product_id,\n        'name' => get_product_name($product_id), // Function to retrieve name of product from database or elsewhere\n        'price' => get_product_price($product_id), // Function to retrieve price of product from database or elsewhere\n        'quantity' => $quantity,\n        'total' => get_product_price($product_id) * $quantity // Calculate total immediately for new item\n    );\n    \n    $cart[$product_id] = $new_product;\n    return true; // Add successful\n    \n}\n\nfunction remove_from_cart($product_id) {\n    global $cart;\n    \n    unset($cart[$product_id]);\n}\n\n// Function to update cart based on form submission (e.g., quantity changes)\nfunction update_cart() {\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        foreach ($_POST as $key => $value) {\n            if ($key == 'remove') {\n                remove_from_cart($value);\n            } elseif ($key == 'quantity') {\n                add_to_cart($_POST['product_id'], (int)$value); // Update quantity only, no need to recheck product existence\n            }\n        }\n    }\n}\n?>\n```\n\n**cart_display.php**\n```php\n<?php\ninclude_once \"cart_controller.php\";\n?>\n\n<!-- Display cart form for user input -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"[insert product ID here]\"> <!-- Replace with actual product IDs -->\n  <label>Quantity:</label>\n  <input type=\"number\" name=\"quantity\" value=\"[initial quantity value]\"> <!-- Replace with initial quantity for each product -->\n  <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n  <button type=\"submit\" name=\"remove\">Remove from Cart</button>\n  <br><br>\n\n  <?php\n  update_cart(); // Call this after form submission to process any changes\n\n  // Display cart button and link for adding more products\n  echo \"<a href='add_product.php'>Add More Products...</a>\";\n  ?>\n</form>\n```\n\n**cart_view.php**\n```php\n<?php\ninclude_once \"cart_controller.php\";\n?>\n\n<!-- Display full cart view (already shown in `cart.php`) -->\n<div class=\"cart\">\n    <!-- Cart contents already displayed here, no need to repeat code -->\n</div>\n\n<p>Total: $<?php echo number_format(array_sum(array_column($cart, 'total')), 2); ?></p>\n```\n\n**Explanation:**\n\n*   The `cart` session variable stores an array of products with their details (name, price, quantity, and total).\n*   The `cart_controller` handles the addition and removal of products from the cart.\n*   The `update_cart` function is called after form submission to process any changes made by the user.\n*   The `cart_display.php` file displays a simple form for users to add or remove products from their cart.\n*   In this example, we assume each product has an ID, name, and price stored in a database (or another data storage system) which are retrieved when adding a new product to the cart.\n\nThis is a basic implementation of a shopping cart using PHP. It covers essential functionality but may require additional features for real-world applications.", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Initialize cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Get current cart contents\n$cart = $_SESSION['cart'];\n\n// Display cart contents\n?>\n\n<div class=\"cart\">\n  <h2>Cart Contents:</h2>\n  <table border=\"1\">\n    <tr>\n      <th>Product</th>\n      <th>Quantity</th>\n      <th>Price</th>\n      <th>Total</th>\n    </tr>\n    <?php\n    // Display each item in the cart\n    foreach ($cart as $product_id => $details) {\n        echo \"<tr>\";\n        echo \"<td>\" . $details['name'] . \"</td>\";\n        echo \"<td>\" . $details['quantity'] . \"</td>\";\n        echo \"<td>$\" . number_format($details['price'], 2) . \"</td>\";\n        echo \"<td>$\" . number_format($details['total'], 2) . \"</td>\";\n        echo \"</tr>\";\n    }\n    ?>\n  </table>\n</div>\n\n<?php\n// Calculate total cart value\n$total = array_sum(array_column($cart, 'total'));\necho \"<p>Total: $\" . number_format($total, 2) . \"</p>\";\n\n?>\n```", "```php\n<?php\nfunction add_to_cart($product_id, $quantity) {\n    global $cart;\n    \n    // Check if product is already in cart\n    foreach ($cart as &$details) {\n        if ($details['id'] == $product_id) {\n            // If it is, update its quantity and recalculate total\n            $details['quantity'] += $quantity;\n            $details['total'] = $details['price'] * $details['quantity'];\n            return true; // Update successful\n        }\n    }\n\n    // If product not in cart, add it with new details\n    $new_product = array(\n        'id' => $product_id,\n        'name' => get_product_name($product_id), // Function to retrieve name of product from database or elsewhere\n        'price' => get_product_price($product_id), // Function to retrieve price of product from database or elsewhere\n        'quantity' => $quantity,\n        'total' => get_product_price($product_id) * $quantity // Calculate total immediately for new item\n    );\n    \n    $cart[$product_id] = $new_product;\n    return true; // Add successful\n    \n}\n\nfunction remove_from_cart($product_id) {\n    global $cart;\n    \n    unset($cart[$product_id]);\n}\n\n// Function to update cart based on form submission (e.g., quantity changes)\nfunction update_cart() {\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        foreach ($_POST as $key => $value) {\n            if ($key == 'remove') {\n                remove_from_cart($value);\n            } elseif ($key == 'quantity') {\n                add_to_cart($_POST['product_id'], (int)$value); // Update quantity only, no need to recheck product existence\n            }\n        }\n    }\n}\n?>\n```", "```php\n<?php\ninclude_once \"cart_controller.php\";\n?>\n\n<!-- Display cart form for user input -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"[insert product ID here]\"> <!-- Replace with actual product IDs -->\n  <label>Quantity:</label>\n  <input type=\"number\" name=\"quantity\" value=\"[initial quantity value]\"> <!-- Replace with initial quantity for each product -->\n  <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n  <button type=\"submit\" name=\"remove\">Remove from Cart</button>\n  <br><br>\n\n  <?php\n  update_cart(); // Call this after form submission to process any changes\n\n  // Display cart button and link for adding more products\n  echo \"<a href='add_product.php'>Add More Products...</a>\";\n  ?>\n</form>\n```", "```php\n<?php\ninclude_once \"cart_controller.php\";\n?>\n\n<!-- Display full cart view (already shown in `cart.php`) -->\n<div class=\"cart\">\n    <!-- Cart contents already displayed here, no need to repeat code -->\n</div>\n\n<p>Total: $<?php echo number_format(array_sum(array_column($cart, 'total')), 2); ?></p>\n```"]}
