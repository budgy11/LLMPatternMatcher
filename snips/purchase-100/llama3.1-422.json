{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP:\n\n**Note:** This is a simplified example and you should consider implementing security measures (e.g., authentication, authorization, encryption) and other features (e.g., payment gateway integration, order management) in your actual implementation.\n\n**Database schema:**\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  total DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n\n**PHP code:**\n\n**config.php** (database connection settings):\n```php\n<?php\n$host = 'your_host';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n```\n\n**functions.php** (database operations):\n```php\n<?php\nfunction get_products() {\n    global $pdo;\n    $stmt = $pdo->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction add_to_cart($product_id, $quantity) {\n    global $pdo;\n    $stmt = $pdo->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:order_id, :product_id, :quantity)\");\n    $stmt->bindParam(':order_id', 0); // to be set later\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    return $stmt->execute();\n}\n\nfunction create_order($customer_name) {\n    global $pdo;\n    $stmt = $pdo->prepare(\"INSERT INTO orders (customer_name, total) VALUES (:customer_name, 0)\");\n    $stmt->bindParam(':customer_name', $customer_name);\n    return $stmt->execute();\n}\n?>\n```\n\n**cart.php** (display cart contents and proceed to checkout):\n```php\n<?php\ninclude 'config.php';\ninclude 'functions.php';\n\n// retrieve products and add them to the cart\n$products = get_products();\n\n// display cart contents\necho '<h1>Cart Contents:</h1>';\nforeach ($products as $product) {\n    echo '<p>' . $product['name'] . ': ' . $product['price'] . '</p>';\n}\n\n// proceed to checkout\nif (isset($_POST['checkout'])) {\n    // retrieve order ID and customer name\n    $order_id = 0; // to be set later\n    $customer_name = $_POST['customer_name'];\n\n    // create new order\n    $order_id = create_order($customer_name);\n\n    // add products to the order\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        add_to_cart($product_id, $quantity);\n    }\n}\n\n?>\n```\n\n**checkout.php** (finalize purchase):\n```php\n<?php\ninclude 'config.php';\ninclude 'functions.php';\n\n// retrieve order ID and customer name\n$order_id = 0; // to be set later\n$customer_name = $_POST['customer_name'];\n\n// calculate total price\n$total_price = 0;\nforeach ($_SESSION['cart'] as $product_id => $quantity) {\n    $stmt = $pdo->prepare(\"SELECT price FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $price = $stmt->fetchColumn();\n    $total_price += $price * $quantity;\n}\n\n// update order total\n$stmt = $pdo->prepare(\"UPDATE orders SET total = :total WHERE id = :order_id\");\n$stmt->bindParam(':total', $total_price);\n$stmt->bindParam(':order_id', $order_id);\n$stmt->execute();\n\necho 'Thank you for your purchase!';\n?>\n```\n\nThis example demonstrates the basic flow of a purchase functionality:\n\n1. User adds products to their cart.\n2. User proceeds to checkout, which creates a new order and adds the selected products to it.\n3. The user confirms their purchase, finalizing the transaction.\n\nNote that this is a simplified example and you should consider implementing additional features (e.g., payment gateway integration, order management) in your actual implementation.", "code_blocks": [null, "```php\n<?php\n$host = 'your_host';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n```", "```php\n<?php\nfunction get_products() {\n    global $pdo;\n    $stmt = $pdo->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction add_to_cart($product_id, $quantity) {\n    global $pdo;\n    $stmt = $pdo->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:order_id, :product_id, :quantity)\");\n    $stmt->bindParam(':order_id', 0); // to be set later\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    return $stmt->execute();\n}\n\nfunction create_order($customer_name) {\n    global $pdo;\n    $stmt = $pdo->prepare(\"INSERT INTO orders (customer_name, total) VALUES (:customer_name, 0)\");\n    $stmt->bindParam(':customer_name', $customer_name);\n    return $stmt->execute();\n}\n?>\n```", "```php\n<?php\ninclude 'config.php';\ninclude 'functions.php';\n\n// retrieve products and add them to the cart\n$products = get_products();\n\n// display cart contents\necho '<h1>Cart Contents:</h1>';\nforeach ($products as $product) {\n    echo '<p>' . $product['name'] . ': ' . $product['price'] . '</p>';\n}\n\n// proceed to checkout\nif (isset($_POST['checkout'])) {\n    // retrieve order ID and customer name\n    $order_id = 0; // to be set later\n    $customer_name = $_POST['customer_name'];\n\n    // create new order\n    $order_id = create_order($customer_name);\n\n    // add products to the order\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        add_to_cart($product_id, $quantity);\n    }\n}\n\n?>\n```", "```php\n<?php\ninclude 'config.php';\ninclude 'functions.php';\n\n// retrieve order ID and customer name\n$order_id = 0; // to be set later\n$customer_name = $_POST['customer_name'];\n\n// calculate total price\n$total_price = 0;\nforeach ($_SESSION['cart'] as $product_id => $quantity) {\n    $stmt = $pdo->prepare(\"SELECT price FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $price = $stmt->fetchColumn();\n    $total_price += $price * $quantity;\n}\n\n// update order total\n$stmt = $pdo->prepare(\"UPDATE orders SET total = :total WHERE id = :order_id\");\n$stmt->bindParam(':total', $total_price);\n$stmt->bindParam(':order_id', $order_id);\n$stmt->execute();\n\necho 'Thank you for your purchase!';\n?>\n```"]}
