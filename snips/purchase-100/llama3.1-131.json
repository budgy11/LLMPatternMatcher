{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple \"Add to Cart\" and \"Purchase\" functionality using PHP:\n\n**Note:** This is a basic implementation and you should consider security, validation, and database operations in a real-world application.\n\n**cart.php**\n```php\n<?php\nsession_start();\n\n// Initialize cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addToCart($item_id, $quantity) {\n    global $_SESSION;\n    // Check if item is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            // Update quantity if item is already in cart\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    // Add new item to cart\n    $_SESSION['cart'][] = array('id' => $item_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction removeFromCart($item_id) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['id'] == $item_id) {\n            unset($_SESSION['cart'][$key]);\n            return;\n        }\n    }\n}\n\n// Function to update item quantity in cart\nfunction updateQuantity($item_id, $new_quantity) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to display cart contents\nfunction displayCart() {\n    global $_SESSION;\n    echo \"<h2>Cart Contents:</h2>\";\n    foreach ($_SESSION['cart'] as &$item) {\n        echo \"$item[id] x $item[quantity]<br>\";\n    }\n}\n\n// Display form to add item to cart\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Item ID:</label>\n    <input type=\"text\" name=\"item_id\"><br>\n    <label>Quantity:</label>\n    <input type=\"number\" name=\"quantity\"><br>\n    <input type=\"submit\" value=\"Add to Cart\">\n</form>\n\n<?php\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get item ID and quantity from form\n    $item_id = $_POST['item_id'];\n    $quantity = (int) $_POST['quantity'];\n\n    // Add item to cart\n    addToCart($item_id, $quantity);\n\n    // Display updated cart contents\n    displayCart();\n}\n?>\n```\n\n**purchase.php**\n```php\n<?php\nsession_start();\n\n// Function to process payment\nfunction processPayment() {\n    global $_SESSION;\n    // TO DO: implement payment processing logic here (e.g. using Stripe API)\n    echo \"Payment processed successfully!\";\n}\n\n// Display form to enter payment details\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Card Number:</label>\n    <input type=\"text\" name=\"card_number\"><br>\n    <label>Expiration Date:</label>\n    <input type=\"date\" name=\"expiration_date\"><br>\n    <label>CVC:</label>\n    <input type=\"number\" name=\"cvc\"><br>\n    <input type=\"submit\" value=\"Process Payment\">\n</form>\n\n<?php\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Process payment using Stripe API (TO DO: implement this)\n    processPayment();\n\n    // Clear cart contents after successful payment\n    unset($_SESSION['cart']);\n}\n?>\n```\n\n**index.php**\n```php\n<?php\nsession_start();\ninclude 'cart.php';\n\n// Display cart contents and form to add item to cart\ndisplayCart();\n\n// Display link to purchase page\necho \"<a href='purchase.php'>Proceed to Checkout</a>\";\n\n// TO DO: implement security measures (e.g. CSRF token) to prevent cross-site request forgery attacks\n?>\n```\n\nThis example demonstrates a basic \"Add to Cart\" and \"Purchase\" functionality using PHP. The cart contents are stored in a session array, which is displayed on the `cart.php` page. The user can add items to the cart by submitting the form on that page. When the user clicks the \"Proceed to Checkout\" link on the `index.php` page, they are directed to the `purchase.php` page where they can enter their payment details.\n\nNote that this is a highly simplified example and you should consider implementing additional security measures (e.g. CSRF token) to prevent cross-site request forgery attacks. Additionally, you will need to implement the payment processing logic on the `purchase.php` page using an API like Stripe.", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Initialize cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addToCart($item_id, $quantity) {\n    global $_SESSION;\n    // Check if item is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            // Update quantity if item is already in cart\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    // Add new item to cart\n    $_SESSION['cart'][] = array('id' => $item_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction removeFromCart($item_id) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['id'] == $item_id) {\n            unset($_SESSION['cart'][$key]);\n            return;\n        }\n    }\n}\n\n// Function to update item quantity in cart\nfunction updateQuantity($item_id, $new_quantity) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to display cart contents\nfunction displayCart() {\n    global $_SESSION;\n    echo \"<h2>Cart Contents:</h2>\";\n    foreach ($_SESSION['cart'] as &$item) {\n        echo \"$item[id] x $item[quantity]<br>\";\n    }\n}\n\n// Display form to add item to cart\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Item ID:</label>\n    <input type=\"text\" name=\"item_id\"><br>\n    <label>Quantity:</label>\n    <input type=\"number\" name=\"quantity\"><br>\n    <input type=\"submit\" value=\"Add to Cart\">\n</form>\n\n<?php\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get item ID and quantity from form\n    $item_id = $_POST['item_id'];\n    $quantity = (int) $_POST['quantity'];\n\n    // Add item to cart\n    addToCart($item_id, $quantity);\n\n    // Display updated cart contents\n    displayCart();\n}\n?>\n```", "```php\n<?php\nsession_start();\n\n// Function to process payment\nfunction processPayment() {\n    global $_SESSION;\n    // TO DO: implement payment processing logic here (e.g. using Stripe API)\n    echo \"Payment processed successfully!\";\n}\n\n// Display form to enter payment details\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Card Number:</label>\n    <input type=\"text\" name=\"card_number\"><br>\n    <label>Expiration Date:</label>\n    <input type=\"date\" name=\"expiration_date\"><br>\n    <label>CVC:</label>\n    <input type=\"number\" name=\"cvc\"><br>\n    <input type=\"submit\" value=\"Process Payment\">\n</form>\n\n<?php\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Process payment using Stripe API (TO DO: implement this)\n    processPayment();\n\n    // Clear cart contents after successful payment\n    unset($_SESSION['cart']);\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude 'cart.php';\n\n// Display cart contents and form to add item to cart\ndisplayCart();\n\n// Display link to purchase page\necho \"<a href='purchase.php'>Proceed to Checkout</a>\";\n\n// TO DO: implement security measures (e.g. CSRF token) to prevent cross-site request forgery attacks\n?>\n```"]}
