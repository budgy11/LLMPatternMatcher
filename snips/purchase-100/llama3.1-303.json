{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a simple purchase functionality using PHP. This example includes the following features:\n\n*   Creating products with their prices\n*   Viewing all products\n*   Adding products to cart\n*   View shopping cart\n*   Making purchases (removing items from cart and updating inventory)\n\n**Note:** This is a basic implementation and you should consider security measures like validating user input, using prepared statements to prevent SQL injection, etc.\n\n**Files:**\n\n*   `config.php`: Configuration file for database connection.\n*   `products.php`: File containing product data.\n*   `cart.php`: File handling cart functionality.\n*   `purchase.php`: File handling purchase functionality.\n\n### config.php\n\n```php\n<?php\n// Database configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction connect() {\n    global $conn;\n    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n}\n?>\n```\n\n### products.php\n\n```php\n<?php\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    // Getters\n    function getId() { return $this->id; }\n    function getName() { return $this->name; }\n    function getPrice() { return $this->price; }\n}\n\n// Function to get all products from database\nfunction getAllProducts() {\n    connect();\n    $query = \"SELECT * FROM products\";\n    $result = mysqli_query($conn, $query);\n    $products = array();\n\n    while ($row = mysqli_fetch_assoc($result)) {\n        $product = new Product($row['id'], $row['name'], $row['price']);\n        $products[] = $product;\n    }\n\n    return $products;\n}\n?>\n```\n\n### cart.php\n\n```php\n<?php\nclass CartItem {\n    private $productId;\n    private $quantity;\n\n    function __construct($productId, $quantity) {\n        $this->productId = $productId;\n        $this->quantity = $quantity;\n    }\n\n    // Getters\n    function getProductId() { return $this->productId; }\n    function getQuantity() { return $this->quantity; }\n}\n\nclass Cart {\n    private $items;\n\n    function __construct() {\n        $this->items = array();\n    }\n\n    // Add item to cart\n    function addItem($productId, $quantity) {\n        if (array_key_exists($productId, $this->items)) {\n            $this->items[$productId] += $quantity;\n        } else {\n            $this->items[$productId] = $quantity;\n        }\n    }\n\n    // View items in cart\n    function viewItems() {\n        return $this->items;\n    }\n}\n?>\n```\n\n### purchase.php\n\n```php\n<?php\nclass Purchase {\n    private $cart;\n\n    function __construct() {\n        $this->cart = new Cart();\n    }\n\n    // Add product to cart\n    function addProductToCart($productId, $quantity) {\n        $product = getProductById($productId);\n        if ($product) {\n            $this->cart->addItem($productId, $quantity);\n            updateInventory($productId, -$quantity * $product->getPrice());\n        }\n    }\n\n    // View shopping cart\n    function viewShoppingCart() {\n        return $this->cart->viewItems();\n    }\n\n    // Make purchase\n    function makePurchase() {\n        foreach ($this->cart->viewItems() as $itemId => $quantity) {\n            echo \"Removing $quantity x {$product->getName()} from cart...\\n\";\n        }\n        $this->cart = new Cart(); // Clear cart after purchase\n    }\n}\n\n// Helper functions\n\nfunction getProductById($id) {\n    global $products;\n    foreach ($products as $product) {\n        if ($product->getId() == $id) {\n            return $product;\n        }\n    }\n    return null; // Return null if product not found\n}\n\nfunction updateInventory($productId, $quantity) {\n    connect();\n    $query = \"UPDATE products SET stock = stock + ? WHERE id = ?\";\n    mysqli_query($conn, $query, array($quantity, $productId));\n}\n?>\n```\n\n### Example usage:\n\n```php\n// Create products\n$products = array(\n    new Product(1, 'Product 1', 10.99),\n    new Product(2, 'Product 2', 9.99),\n    new Product(3, 'Product 3', 12.99)\n);\n\n// Add products to cart\n$purchase = new Purchase();\n$purchase->addProductToCart(1, 2);\n$purchase->addProductToCart(2, 3);\n\n// View shopping cart\nprint_r($purchase->viewShoppingCart());\n\n// Make purchase\n$purchase->makePurchase();\n```\n\nThis example demonstrates a basic implementation of purchase functionality using PHP. You can extend this code to include additional features like user authentication, payment processing, and more. Remember to follow best practices for security and coding standards when implementing this or any other functionality.", "code_blocks": ["```php\n<?php\n// Database configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction connect() {\n    global $conn;\n    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n}\n?>\n```", "```php\n<?php\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    // Getters\n    function getId() { return $this->id; }\n    function getName() { return $this->name; }\n    function getPrice() { return $this->price; }\n}\n\n// Function to get all products from database\nfunction getAllProducts() {\n    connect();\n    $query = \"SELECT * FROM products\";\n    $result = mysqli_query($conn, $query);\n    $products = array();\n\n    while ($row = mysqli_fetch_assoc($result)) {\n        $product = new Product($row['id'], $row['name'], $row['price']);\n        $products[] = $product;\n    }\n\n    return $products;\n}\n?>\n```", "```php\n<?php\nclass CartItem {\n    private $productId;\n    private $quantity;\n\n    function __construct($productId, $quantity) {\n        $this->productId = $productId;\n        $this->quantity = $quantity;\n    }\n\n    // Getters\n    function getProductId() { return $this->productId; }\n    function getQuantity() { return $this->quantity; }\n}\n\nclass Cart {\n    private $items;\n\n    function __construct() {\n        $this->items = array();\n    }\n\n    // Add item to cart\n    function addItem($productId, $quantity) {\n        if (array_key_exists($productId, $this->items)) {\n            $this->items[$productId] += $quantity;\n        } else {\n            $this->items[$productId] = $quantity;\n        }\n    }\n\n    // View items in cart\n    function viewItems() {\n        return $this->items;\n    }\n}\n?>\n```", "```php\n<?php\nclass Purchase {\n    private $cart;\n\n    function __construct() {\n        $this->cart = new Cart();\n    }\n\n    // Add product to cart\n    function addProductToCart($productId, $quantity) {\n        $product = getProductById($productId);\n        if ($product) {\n            $this->cart->addItem($productId, $quantity);\n            updateInventory($productId, -$quantity * $product->getPrice());\n        }\n    }\n\n    // View shopping cart\n    function viewShoppingCart() {\n        return $this->cart->viewItems();\n    }\n\n    // Make purchase\n    function makePurchase() {\n        foreach ($this->cart->viewItems() as $itemId => $quantity) {\n            echo \"Removing $quantity x {$product->getName()} from cart...\\n\";\n        }\n        $this->cart = new Cart(); // Clear cart after purchase\n    }\n}\n\n// Helper functions\n\nfunction getProductById($id) {\n    global $products;\n    foreach ($products as $product) {\n        if ($product->getId() == $id) {\n            return $product;\n        }\n    }\n    return null; // Return null if product not found\n}\n\nfunction updateInventory($productId, $quantity) {\n    connect();\n    $query = \"UPDATE products SET stock = stock + ? WHERE id = ?\";\n    mysqli_query($conn, $query, array($quantity, $productId));\n}\n?>\n```", "```php\n// Create products\n$products = array(\n    new Product(1, 'Product 1', 10.99),\n    new Product(2, 'Product 2', 9.99),\n    new Product(3, 'Product 3', 12.99)\n);\n\n// Add products to cart\n$purchase = new Purchase();\n$purchase->addProductToCart(1, 2);\n$purchase->addProductToCart(2, 3);\n\n// View shopping cart\nprint_r($purchase->viewShoppingCart());\n\n// Make purchase\n$purchase->makePurchase();\n```"]}
