{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including database interactions with MySQL. This example assumes that you have the following:\n\n1. A database named `store` with a table named `products`.\n2. The required PHP extensions (e.g., `mysqli`) installed and enabled.\n3. PHP 7.4 or later for this example.\n\n**Database Schema:**\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n```\n\n**PHP Code:**\n\nCreate a new file named `purchase.php` and add the following code:\n\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'store';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to add product to cart\nfunction add_to_cart($product_id, $quantity) {\n    global $conn;\n    \n    // Check if product exists in database\n    $query = \"SELECT * FROM products WHERE id = '$product_id'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Add product to cart\n            $sql = \"INSERT INTO cart (product_id, quantity)\n                    VALUES ('$product_id', '$quantity')\";\n            if (!$conn->query($sql)) {\n                echo 'Error: ' . $conn->error;\n            }\n        }\n    } else {\n        echo 'Product not found.';\n    }\n}\n\n// Function to remove product from cart\nfunction remove_from_cart($product_id) {\n    global $conn;\n    \n    // Remove product from cart\n    $sql = \"DELETE FROM cart WHERE product_id = '$product_id'\";\n    if (!$conn->query($sql)) {\n        echo 'Error: ' . $conn->error;\n    }\n}\n\n// Function to update quantity in cart\nfunction update_quantity($product_id, $quantity) {\n    global $conn;\n    \n    // Update quantity in cart\n    $sql = \"UPDATE cart SET quantity = '$quantity' WHERE product_id = '$product_id'\";\n    if (!$conn->query($sql)) {\n        echo 'Error: ' . $conn->error;\n    }\n}\n\n// Function to view cart\nfunction view_cart() {\n    global $conn;\n    \n    // View cart contents\n    $result = $conn->query(\"SELECT * FROM cart\");\n    while ($row = $result->fetch_assoc()) {\n        echo \"Product ID: \" . $row['product_id'] . \", Quantity: \" . $row['quantity'];\n    }\n}\n\n// Function to checkout (purchase)\nfunction checkout() {\n    global $conn;\n    \n    // Retrieve products in cart\n    $query = \"SELECT * FROM cart\";\n    $result = $conn->query($query);\n    \n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Update stock levels and remove from cart\n            $sql = \"UPDATE products SET stock_levels = stock_levels - '\" . $row['quantity'] . \"' WHERE id = '$row[product_id]'\";\n            if (!$conn->query($sql)) {\n                echo 'Error: ' . $conn->error;\n            }\n        }\n        \n        // Clear cart\n        $sql = \"DELETE FROM cart\";\n        if (!$conn->query($sql)) {\n            echo 'Error: ' . $conn->error;\n        }\n    } else {\n        echo 'Cart is empty.';\n    }\n}\n\n// Test the functions\nadd_to_cart(1, 2); // Add product with ID 1 to cart in quantity of 2\nremove_from_cart(1); // Remove product with ID 1 from cart\nupdate_quantity(1, 3); // Update quantity of product with ID 1 to 3\n\necho '<hr>';\nview_cart(); // View cart contents\ncheckout(); // Checkout (purchase)\n\n?>\n```\n\n**Important Notes:**\n\n* This example is a simplified representation and you should adapt it according to your needs.\n* The code doesn't include any error handling or security measures that you should implement in a production environment.\n* Make sure to replace the placeholders (`your_username`, `your_password`) with your actual database credentials.\n\nThis basic purchase functionality includes the following:\n\n1. **Adding products to cart**: The `add_to_cart` function adds products from the `products` table to the `cart` table based on their IDs and quantities.\n2. **Removing products from cart**: The `remove_from_cart` function removes a product with its corresponding ID from the `cart` table.\n3. **Updating quantity in cart**: The `update_quantity` function updates the quantity of a specific product in the `cart` table.\n4. **Viewing cart contents**: The `view_cart` function displays the products and their quantities currently in the `cart` table.\n5. **Checkout (purchase)**: The `checkout` function simulates a purchase by updating stock levels, removing items from the cart, and clearing the cart.\n\nTo use this example as a starting point for your project, you'll need to expand on it with additional features such as:\n\n* User authentication\n* Product categorization\n* Stock management\n* Payment gateway integration\n\nKeep in mind that this is just an initial example, and you should adapt and extend it according to your specific requirements.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'store';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to add product to cart\nfunction add_to_cart($product_id, $quantity) {\n    global $conn;\n    \n    // Check if product exists in database\n    $query = \"SELECT * FROM products WHERE id = '$product_id'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Add product to cart\n            $sql = \"INSERT INTO cart (product_id, quantity)\n                    VALUES ('$product_id', '$quantity')\";\n            if (!$conn->query($sql)) {\n                echo 'Error: ' . $conn->error;\n            }\n        }\n    } else {\n        echo 'Product not found.';\n    }\n}\n\n// Function to remove product from cart\nfunction remove_from_cart($product_id) {\n    global $conn;\n    \n    // Remove product from cart\n    $sql = \"DELETE FROM cart WHERE product_id = '$product_id'\";\n    if (!$conn->query($sql)) {\n        echo 'Error: ' . $conn->error;\n    }\n}\n\n// Function to update quantity in cart\nfunction update_quantity($product_id, $quantity) {\n    global $conn;\n    \n    // Update quantity in cart\n    $sql = \"UPDATE cart SET quantity = '$quantity' WHERE product_id = '$product_id'\";\n    if (!$conn->query($sql)) {\n        echo 'Error: ' . $conn->error;\n    }\n}\n\n// Function to view cart\nfunction view_cart() {\n    global $conn;\n    \n    // View cart contents\n    $result = $conn->query(\"SELECT * FROM cart\");\n    while ($row = $result->fetch_assoc()) {\n        echo \"Product ID: \" . $row['product_id'] . \", Quantity: \" . $row['quantity'];\n    }\n}\n\n// Function to checkout (purchase)\nfunction checkout() {\n    global $conn;\n    \n    // Retrieve products in cart\n    $query = \"SELECT * FROM cart\";\n    $result = $conn->query($query);\n    \n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Update stock levels and remove from cart\n            $sql = \"UPDATE products SET stock_levels = stock_levels - '\" . $row['quantity'] . \"' WHERE id = '$row[product_id]'\";\n            if (!$conn->query($sql)) {\n                echo 'Error: ' . $conn->error;\n            }\n        }\n        \n        // Clear cart\n        $sql = \"DELETE FROM cart\";\n        if (!$conn->query($sql)) {\n            echo 'Error: ' . $conn->error;\n        }\n    } else {\n        echo 'Cart is empty.';\n    }\n}\n\n// Test the functions\nadd_to_cart(1, 2); // Add product with ID 1 to cart in quantity of 2\nremove_from_cart(1); // Remove product with ID 1 from cart\nupdate_quantity(1, 3); // Update quantity of product with ID 1 to 3\n\necho '<hr>';\nview_cart(); // View cart contents\ncheckout(); // Checkout (purchase)\n\n?>\n```"]}
