{"prompt": "Create a purchase functionality using php", "llm_output": "**Purchase Functionality in PHP**\n=====================================\n\nThis is an example of a basic purchase functionality implemented in PHP. It includes functions for retrieving products, adding items to cart, updating quantities, and making payments.\n\n**Database Schema**\n-------------------\n\nFor this example, we'll assume a simple database schema with two tables: `products` and `orders`.\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  user_id INT,\n  total DECIMAL(10, 2),\n  payment_method VARCHAR(50)\n);\n```\n\n**Database Connection**\n----------------------\n\nCreate a `db.php` file to establish a database connection.\n\n```php\n<?php\n  $servername = \"localhost\";\n  $username = \"root\";\n  $password = \"\";\n  $dbname = \"store\";\n\n  try {\n    $conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);\n    // set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n  } catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n  }\n?>\n```\n\n**Product Model**\n-----------------\n\nCreate a `product.php` file with the following code:\n\n```php\n<?php\nclass Product {\n  private $conn;\n  private $table_name = \"products\";\n\n  public function __construct($db) {\n    $this->conn = $db;\n  }\n\n  public function getProducts() {\n    $query = \"SELECT * FROM $this->table_name\";\n    return $this->conn->prepare($query)->execute()->fetchAll();\n  }\n}\n?>\n```\n\n**Cart Model**\n--------------\n\nCreate a `cart.php` file with the following code:\n\n```php\n<?php\nclass Cart {\n  private $conn;\n  private $user_id;\n\n  public function __construct($db, $user_id) {\n    $this->conn = $db;\n    $this->user_id = $user_id;\n  }\n\n  public function addItem($product_id, $quantity) {\n    $query = \"INSERT INTO orders (user_id, product_id, quantity)\n              VALUES (:user_id, :product_id, :quantity)\";\n    return $this->conn->prepare($query)->execute([\n      \":user_id\" => $this->user_id,\n      \":product_id\" => $product_id,\n      \":quantity\" => $quantity\n    ]);\n  }\n\n  public function updateQuantity($order_id, $new_quantity) {\n    $query = \"UPDATE orders SET quantity = :new_quantity WHERE id = :order_id\";\n    return $this->conn->prepare($query)->execute([\n      \":new_quantity\" => $new_quantity,\n      \":order_id\" => $order_id\n    ]);\n  }\n\n  public function getCart() {\n    $query = \"SELECT * FROM orders WHERE user_id = :user_id\";\n    return $this->conn->prepare($query)->execute([\":user_id\" => $this->user_id])->fetchAll();\n  }\n}\n?>\n```\n\n**Payment Model**\n-----------------\n\nCreate a `payment.php` file with the following code:\n\n```php\n<?php\nclass Payment {\n  private $conn;\n\n  public function __construct($db) {\n    $this->conn = $db;\n  }\n\n  public function makePayment($order_id, $amount) {\n    $query = \"UPDATE orders SET payment_method = :payment_method, total = :total WHERE id = :order_id\";\n    return $this->conn->prepare($query)->execute([\n      \":order_id\" => $order_id,\n      \":payment_method\" => \"Credit/Debit Card\",\n      \":total\" => $amount\n    ]);\n  }\n}\n?>\n```\n\n**Controller**\n-------------\n\nCreate a `purchase.php` file with the following code:\n\n```php\n<?php\nrequire_once 'db.php';\nrequire_once 'product.php';\nrequire_once 'cart.php';\nrequire_once 'payment.php';\n\n$cart = new Cart($conn, $_SESSION['user_id']);\n$product_model = new Product($conn);\n\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  if ($cart->addItem($product_id, $quantity)) {\n    echo \"Item added to cart successfully!\";\n  } else {\n    echo \"Error adding item to cart.\";\n  }\n}\n\nif (isset($_POST['update_quantity'])) {\n  $order_id = $_POST['order_id'];\n  $new_quantity = $_POST['new_quantity'];\n\n  if ($cart->updateQuantity($order_id, $new_quantity)) {\n    echo \"Quantity updated successfully!\";\n  } else {\n    echo \"Error updating quantity.\";\n  }\n}\n\nif (isset($_POST['make_payment'])) {\n  $order_id = $_POST['order_id'];\n  $amount = $_POST['amount'];\n\n  if ($payment_model->makePayment($order_id, $amount)) {\n    echo \"Payment successful!\";\n  } else {\n    echo \"Error processing payment.\";\n  }\n}\n?>\n```\n\n**Example Usage**\n-----------------\n\nTo add an item to cart:\n\n```php\n<form action=\"purchase.php\" method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n  <input type=\"number\" name=\"quantity\" value=\"1\">\n  <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n```\n\nTo update quantity:\n\n```php\n<form action=\"purchase.php\" method=\"post\">\n  <input type=\"hidden\" name=\"order_id\" value=\"<?php echo $cart['id']; ?>\">\n  <input type=\"number\" name=\"new_quantity\" value=\"<?php echo $_POST['new_quantity']; ?>\">\n  <button type=\"submit\" name=\"update_quantity\">Update Quantity</button>\n</form>\n```\n\nTo make payment:\n\n```php\n<form action=\"purchase.php\" method=\"post\">\n  <input type=\"hidden\" name=\"order_id\" value=\"<?php echo $cart['id']; ?>\">\n  <input type=\"number\" name=\"amount\" value=\"<?php echo $_POST['amount']; ?>\">\n  <button type=\"submit\" name=\"make_payment\">Make Payment</button>\n</form>\n```\n\nNote that this is a simplified example and may require modifications to suit your specific use case. Additionally, it's always recommended to validate user input and implement proper error handling to ensure the security of your application.", "code_blocks": [null, "```php\n<?php\n  $servername = \"localhost\";\n  $username = \"root\";\n  $password = \"\";\n  $dbname = \"store\";\n\n  try {\n    $conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);\n    // set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n  } catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n  }\n?>\n```", "```php\n<?php\nclass Product {\n  private $conn;\n  private $table_name = \"products\";\n\n  public function __construct($db) {\n    $this->conn = $db;\n  }\n\n  public function getProducts() {\n    $query = \"SELECT * FROM $this->table_name\";\n    return $this->conn->prepare($query)->execute()->fetchAll();\n  }\n}\n?>\n```", "```php\n<?php\nclass Cart {\n  private $conn;\n  private $user_id;\n\n  public function __construct($db, $user_id) {\n    $this->conn = $db;\n    $this->user_id = $user_id;\n  }\n\n  public function addItem($product_id, $quantity) {\n    $query = \"INSERT INTO orders (user_id, product_id, quantity)\n              VALUES (:user_id, :product_id, :quantity)\";\n    return $this->conn->prepare($query)->execute([\n      \":user_id\" => $this->user_id,\n      \":product_id\" => $product_id,\n      \":quantity\" => $quantity\n    ]);\n  }\n\n  public function updateQuantity($order_id, $new_quantity) {\n    $query = \"UPDATE orders SET quantity = :new_quantity WHERE id = :order_id\";\n    return $this->conn->prepare($query)->execute([\n      \":new_quantity\" => $new_quantity,\n      \":order_id\" => $order_id\n    ]);\n  }\n\n  public function getCart() {\n    $query = \"SELECT * FROM orders WHERE user_id = :user_id\";\n    return $this->conn->prepare($query)->execute([\":user_id\" => $this->user_id])->fetchAll();\n  }\n}\n?>\n```", "```php\n<?php\nclass Payment {\n  private $conn;\n\n  public function __construct($db) {\n    $this->conn = $db;\n  }\n\n  public function makePayment($order_id, $amount) {\n    $query = \"UPDATE orders SET payment_method = :payment_method, total = :total WHERE id = :order_id\";\n    return $this->conn->prepare($query)->execute([\n      \":order_id\" => $order_id,\n      \":payment_method\" => \"Credit/Debit Card\",\n      \":total\" => $amount\n    ]);\n  }\n}\n?>\n```", "```php\n<?php\nrequire_once 'db.php';\nrequire_once 'product.php';\nrequire_once 'cart.php';\nrequire_once 'payment.php';\n\n$cart = new Cart($conn, $_SESSION['user_id']);\n$product_model = new Product($conn);\n\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  if ($cart->addItem($product_id, $quantity)) {\n    echo \"Item added to cart successfully!\";\n  } else {\n    echo \"Error adding item to cart.\";\n  }\n}\n\nif (isset($_POST['update_quantity'])) {\n  $order_id = $_POST['order_id'];\n  $new_quantity = $_POST['new_quantity'];\n\n  if ($cart->updateQuantity($order_id, $new_quantity)) {\n    echo \"Quantity updated successfully!\";\n  } else {\n    echo \"Error updating quantity.\";\n  }\n}\n\nif (isset($_POST['make_payment'])) {\n  $order_id = $_POST['order_id'];\n  $amount = $_POST['amount'];\n\n  if ($payment_model->makePayment($order_id, $amount)) {\n    echo \"Payment successful!\";\n  } else {\n    echo \"Error processing payment.\";\n  }\n}\n?>\n```", "```php\n<form action=\"purchase.php\" method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n  <input type=\"number\" name=\"quantity\" value=\"1\">\n  <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n```", "```php\n<form action=\"purchase.php\" method=\"post\">\n  <input type=\"hidden\" name=\"order_id\" value=\"<?php echo $cart['id']; ?>\">\n  <input type=\"number\" name=\"new_quantity\" value=\"<?php echo $_POST['new_quantity']; ?>\">\n  <button type=\"submit\" name=\"update_quantity\">Update Quantity</button>\n</form>\n```", "```php\n<form action=\"purchase.php\" method=\"post\">\n  <input type=\"hidden\" name=\"order_id\" value=\"<?php echo $cart['id']; ?>\">\n  <input type=\"number\" name=\"amount\" value=\"<?php echo $_POST['amount']; ?>\">\n  <button type=\"submit\" name=\"make_payment\">Make Payment</button>\n</form>\n```"]}
