{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, the user wants to create a purchase functionality using PHP. I need to figure out how to approach this.\n\nFirst, I should outline what the core components are. Well, there needs to be a product display so users can see what's available. Maybe pull products from a database or use hardcoded data for simplicity.\n\nNext, the user should be able to add items to their cart. That means creating an add-to-cart button for each product. The cart itself could be stored in sessions since it's temporary and tied to the user's browser session.\n\nThen, I need a way to display the cart contents. Users should see what they've added, quantities, and have the option to remove items or adjust quantities. Calculating the total price is essential here too.\n\nProcessing the payment is another step. For this example, maybe just simulate it by checking if the product is in stock. If it's available, deduct from inventory and confirm the purchase; otherwise, show an error.\n\nOrder confirmation should include a thank you message with order details like items bought, quantities, total price, and order number for reference.\n\nFinally, displaying past orders would be useful. This can be done by storing order data in sessions or a database and then retrieving it later to show previous purchases.\n\nI'll structure the code into functions for each part: connecting to the database, fetching products, adding/removing items from the cart, processing payment, showing the cart, confirming orders, and displaying past orders. \n\nUsing include_once ensures that the db.php file is loaded properly without duplication. Session handling is crucial to maintain cart data across pages.\n\nI should also consider security aspects like SQL injection prevention, but for simplicity, I'll use placeholders in the example. In a real-world scenario, prepared statements would be better.\n\nTesting each part step by step will help catch any issues early. For instance, ensuring that adding and removing items works correctly and that the cart updates as expected.\n\nOverall, the solution should be modular, making it easier to expand or modify in the future. I'll make sure to explain each function clearly so the user can understand how everything fits together.\n</think>\n\nHere's an example of a purchase functionality using PHP. This will include:\n\n1. Product Display\n2. Add to Cart functionality\n3. View Cart functionality\n4. Checkout/Order Processing\n5. Order Confirmation\n\n```php\n<?php\n// database connection\ninclude_once('db.php');\n\n// session handling\nsession_start();\n\nfunction addToCart($productId) {\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (isset($_SESSION['cart'][$productId])) {\n        // increment quantity\n        $_SESSION['cart'][$productId]['quantity']++;\n    } else {\n        // add new product to cart\n        $query = \"SELECT * FROM products WHERE id = '$productId'\";\n        $result = mysqli_query($GLOBALS['conn'], $query);\n        if (mysqli_num_rows($result) > 0) {\n            $row = mysqli_fetch_assoc($result);\n            $_SESSION['cart'][$productId] = array(\n                'id' => $row['id'],\n                'name' => $row['name'],\n                'price' => $row['price'],\n                'quantity' => 1\n            );\n        }\n    }\n}\n\nfunction removeFromCart($productId) {\n    if (isset($_SESSION['cart'][$productId])) {\n        unset($_SESSION['cart'][$productId]);\n        $_SESSION['cart'] = array_values($_SESSION['cart']);\n    }\n}\n\nfunction processPayment() {\n    $orderNumber = time();\n    $orderDate = date('Y-m-d H:i:s');\n    \n    // Check if cart is not empty\n    if (!empty($_SESSION['cart'])) {\n        foreach ($_SESSION['cart'] as $item) {\n            // Process each item (e.g., deduct from inventory, etc.)\n            // For this example, we'll just simulate successful payment\n            \n            $sql = \"INSERT INTO orders \n                    VALUES('', '$orderNumber', '$orderDate', '$item[id]', '$_SESSION[user_id]', 1)\";\n            mysqli_query($GLOBALS['conn'], $sql);\n        }\n        \n        unset($_SESSION['cart']);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction displayCart() {\n    if (!empty($_SESSION['cart'])) {\n        echo '<table>';\n        foreach ($_SESSION['cart'] as $item) {\n            echo \"<tr>\";\n                echo \"<td>{$item['name']}</td>\";\n                echo \"<td>Quantity: {$item['quantity']}</td>\";\n                echo \"<td>Price: \\$\" . number_format($item['price'], 2, '.', '') . \"</td>\";\n                echo \"<td><a href='cart.php?action=remove&id={$item['id']}'>Remove</a></td>\";\n            echo \"</tr>\";\n        }\n        echo '</table>';\n    } else {\n        echo \"Your cart is empty!\";\n    }\n}\n\nfunction confirmOrder() {\n    if (isset($_SESSION['last_order'])) {\n        $order = $_SESSION['last_order'];\n        echo \"<h2>Thank you for your purchase!</h2>\";\n        echo \"<p>Order Number: #{$order['order_number']}</p>\";\n        echo \"<p>Date: {$order['order_date']}</p>\";\n        echo \"<p>Total Items: \" . count($order['items']) . \"</p>\";\n        echo \"<p>Total Price: \\$\" . number_format($order['total'], 2, '.', '') . \"</p>\";\n    } else {\n        echo \"No order to confirm.\";\n    }\n}\n\nfunction displayOrders() {\n    $sql = \"SELECT * FROM orders WHERE user_id = '$_SESSION[user_id]'\";\n    $result = mysqli_query($GLOBALS['conn'], $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        echo '<h2>Your Past Orders</h2>';\n        echo '<table>';\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<tr>\";\n                echo \"<td>Order #{$row['order_number']}</td>\";\n                echo \"<td>Date: {$row['order_date']}</td>\";\n                echo \"<td><a href='order.php?id={$row['id']}'>View Details</a></td>\";\n            echo \"</tr>\";\n        }\n        echo '</table>';\n    } else {\n        echo \"No past orders found.\";\n    }\n}\n?>\n```\n\nThis code provides the following features:\n\n1. `addToCart()`: Adds a product to the shopping cart\n2. `removeFromCart()`: Removes a product from the shopping cart\n3. `processPayment()`: Simulates payment processing and stores order information in the database\n4. `displayCart()`: Shows current items in the shopping cart\n5. `confirmOrder()`: Displays order confirmation details\n6. `displayOrders()`: Shows past orders for the user\n\nTo use this code:\n\n1. Create a database connection file (`db.php`) that connects to your MySQL database\n2. Set up a products table with at least these fields: id, name, price\n3. Set up an orders table with at least these fields: id, order_number, order_date, product_id, user_id, quantity\n\nYou can extend this functionality by:\n\n1. Adding user authentication\n2. Implementing actual payment processing (e.g., using PayPal or Stripe)\n3. Adding more features to the cart management system (e.g., adjust quantity, apply coupons)\n4. Improving the database schema with additional fields and relationships\n5. Adding order tracking and status updates\n6. Including product images and descriptions\n7. Implementing a checkout process with user information collection\n\nRemember to secure your code by:\n\n1. Sanitizing all user inputs\n2. Using prepared statements or parameterized queries to prevent SQL injection\n3. Encrypting sensitive data (e.g., credit card information)\n4. Implementing proper session management\n5. Adding CSRF protection", "code_blocks": ["```php\n<?php\n// database connection\ninclude_once('db.php');\n\n// session handling\nsession_start();\n\nfunction addToCart($productId) {\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (isset($_SESSION['cart'][$productId])) {\n        // increment quantity\n        $_SESSION['cart'][$productId]['quantity']++;\n    } else {\n        // add new product to cart\n        $query = \"SELECT * FROM products WHERE id = '$productId'\";\n        $result = mysqli_query($GLOBALS['conn'], $query);\n        if (mysqli_num_rows($result) > 0) {\n            $row = mysqli_fetch_assoc($result);\n            $_SESSION['cart'][$productId] = array(\n                'id' => $row['id'],\n                'name' => $row['name'],\n                'price' => $row['price'],\n                'quantity' => 1\n            );\n        }\n    }\n}\n\nfunction removeFromCart($productId) {\n    if (isset($_SESSION['cart'][$productId])) {\n        unset($_SESSION['cart'][$productId]);\n        $_SESSION['cart'] = array_values($_SESSION['cart']);\n    }\n}\n\nfunction processPayment() {\n    $orderNumber = time();\n    $orderDate = date('Y-m-d H:i:s');\n    \n    // Check if cart is not empty\n    if (!empty($_SESSION['cart'])) {\n        foreach ($_SESSION['cart'] as $item) {\n            // Process each item (e.g., deduct from inventory, etc.)\n            // For this example, we'll just simulate successful payment\n            \n            $sql = \"INSERT INTO orders \n                    VALUES('', '$orderNumber', '$orderDate', '$item[id]', '$_SESSION[user_id]', 1)\";\n            mysqli_query($GLOBALS['conn'], $sql);\n        }\n        \n        unset($_SESSION['cart']);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction displayCart() {\n    if (!empty($_SESSION['cart'])) {\n        echo '<table>';\n        foreach ($_SESSION['cart'] as $item) {\n            echo \"<tr>\";\n                echo \"<td>{$item['name']}</td>\";\n                echo \"<td>Quantity: {$item['quantity']}</td>\";\n                echo \"<td>Price: \\$\" . number_format($item['price'], 2, '.', '') . \"</td>\";\n                echo \"<td><a href='cart.php?action=remove&id={$item['id']}'>Remove</a></td>\";\n            echo \"</tr>\";\n        }\n        echo '</table>';\n    } else {\n        echo \"Your cart is empty!\";\n    }\n}\n\nfunction confirmOrder() {\n    if (isset($_SESSION['last_order'])) {\n        $order = $_SESSION['last_order'];\n        echo \"<h2>Thank you for your purchase!</h2>\";\n        echo \"<p>Order Number: #{$order['order_number']}</p>\";\n        echo \"<p>Date: {$order['order_date']}</p>\";\n        echo \"<p>Total Items: \" . count($order['items']) . \"</p>\";\n        echo \"<p>Total Price: \\$\" . number_format($order['total'], 2, '.', '') . \"</p>\";\n    } else {\n        echo \"No order to confirm.\";\n    }\n}\n\nfunction displayOrders() {\n    $sql = \"SELECT * FROM orders WHERE user_id = '$_SESSION[user_id]'\";\n    $result = mysqli_query($GLOBALS['conn'], $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        echo '<h2>Your Past Orders</h2>';\n        echo '<table>';\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<tr>\";\n                echo \"<td>Order #{$row['order_number']}</td>\";\n                echo \"<td>Date: {$row['order_date']}</td>\";\n                echo \"<td><a href='order.php?id={$row['id']}'>View Details</a></td>\";\n            echo \"</tr>\";\n        }\n        echo '</table>';\n    } else {\n        echo \"No past orders found.\";\n    }\n}\n?>\n```"]}
