{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nAlright, the user wants to create a purchase functionality using PHP. Let me break down what that entails.\n\nFirst, I need to consider the basic structure. A purchase system typically involves displaying products, allowing users to add them to a cart, and then processing the checkout.\n\nI'll start by outlining the database tables. We'll need products with details like id, name, price, description, and stock. Then, an orders table to store each order's information, including user ID, total amount, and timestamps for creation and payment. Lastly, an order_items table to track which products are in each order and their quantities.\n\nNext, I'll think about the PHP classes needed. A Product class will handle product operations, like fetching all products or getting a single product by ID. An Order class will manage creating new orders, updating their status, and retrieving order details along with related items.\n\nFor the checkout process, I'll need to collect user information and payment details. Since this is a basic example, I'll simulate the payment approval without integrating an actual payment gateway. This way, users can see how the system would work in a real-world scenario, but they can later replace the simulation with actual payment processing.\n\nThe frontend part involves displaying products on a catalog page. Each product should have an \"Add to Cart\" button. The cart itself needs to be stored either in cookies or sessions for simplicity, though in a production environment, using databases would be better for security and reliability.\n\nOnce the user adds items to their cart, they proceed to checkout. Here, they enter their details, and upon submission, the system processes the order by inserting into the orders table and linking each product with its quantity in the order_items table.\n\nI should also consider error handling, like checking if a product exists before adding it to the cart or updating quantities. Additionally, ensuring that the stock doesn't go negative is important, but I'll leave that for the user to implement as an exercise.\n\nFinally, providing clear instructions on how to use the system and where to expand upon it will help the user understand the setup and customize it further if needed.\n</think>\n\nHere's a simple example of a purchase functionality using PHP. This includes basic product display, cart management, and checkout process:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$dbname = 'purchase_system';\n\n$conn = new mysqli($host, $user, $password, $dbname);\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Create tables if they don't exist\n$sql = \"CREATE TABLE IF NOT EXISTS products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT,\n    stock INT\n)\";\n\n$conn->query($sql);\n\n$sql = \"CREATE TABLE IF NOT EXISTS orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT,\n    total_amount DECIMAL(10, 2),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    payment_status ENUM('pending', 'completed') DEFAULT 'pending'\n)\";\n\n$conn->query($sql);\n\n$sql = \"CREATE TABLE IF NOT EXISTS order_items (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT\n)\";\n\n$conn->query($sql);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase System</title>\n    <style>\n        .container { max-width: 800px; margin: 0 auto; padding: 20px; }\n        .product { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }\n        .cart { margin-top: 20px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <?php\n            // Display products\n            $sql = \"SELECT * FROM products\";\n            $result = $conn->query($sql);\n\n            if ($result->num_rows > 0) {\n                while ($row = $result->fetch_assoc()) {\n                    echo \"<div class='product'>\";\n                    echo \"<h3>\" . $row['name'] . \"</h3>\";\n                    echo \"<p>Price: $\" . number_format($row['price'], 2) . \"</p>\";\n                    echo \"<p>Description: \" . $row['description'] . \"</p>\";\n                    echo \"<form action='add_to_cart.php' method='post'>\";\n                    echo \"<input type='hidden' name='product_id' value='\" . $row['id'] . \"'>\";\n                    echo \"<input type='number' name='quantity' min='1' max='\" . $row['stock'] . \"' placeholder='Quantity'>\";\n                    echo \"<button type='submit'>Add to Cart</button>\";\n                    echo \"</form>\";\n                    echo \"</div>\";\n                }\n            } else {\n                echo \"No products available.\";\n            }\n\n            // Display cart\n            if (isset($_SESSION['cart'])) {\n                $total = 0;\n                echo \"<h2>Your Cart:</h2>\";\n                echo \"<div class='cart'>\";\n                foreach ($_SESSION['cart'] as $item) {\n                    $sql = \"SELECT * FROM products WHERE id=\" . $item['product_id'];\n                    $result = $conn->query($sql);\n                    $product = $result->fetch_assoc();\n                    \n                    echo \"<div>\";\n                    echo \"<h3>\" . $product['name'] . \"</h3>\";\n                    echo \"<p>Quantity: \" . $item['quantity'] . \"</p>\";\n                    echo \"<p>Price: $\" . number_format($product['price'], 2) . \"</p>\";\n                    $total += $product['price'] * $item['quantity'];\n                    echo \"</div>\";\n                }\n                echo \"<h3>Total: $\" . number_format($total, 2) . \"</h3>\";\n                echo \"<a href='checkout.php'>Checkout</a>\";\n                echo \"</div>\";\n            }\n        ?>\n    </div>\n</body>\n</html>\n\n<?php\n// Add to cart functionality\nif ($_SERVER['PHP_SELF'] == '/add_to_cart.php') {\n    session_start();\n    \n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Check if product exists\n    $sql = \"SELECT * FROM products WHERE id=\" . $product_id;\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        $item = array(\n            'product_id' => $product_id,\n            'quantity' => $quantity\n        );\n        \n        $_SESSION['cart'][] = $item;\n    }\n\n    header('Location: index.php');\n}\n\n// Checkout functionality\nif ($_SERVER['PHP_SELF'] == '/checkout.php') {\n    session_start();\n    \n    if (!empty($_SESSION['cart'])) {\n        // Process order\n        $sql = \"INSERT INTO orders (user_id, total_amount) VALUES (?, ?)\";\n        \n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"is\", 1, number_format($total, 2)); // Assuming user_id is 1 for demonstration\n        \n        if ($stmt->execute()) {\n            $order_id = $stmt->insert_id;\n            \n            foreach ($_SESSION['cart'] as $item) {\n                $sql = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\";\n                $stmt = $conn->prepare($sql);\n                $stmt->bind_param(\"iii\", $order_id, $item['product_id'], $item['quantity']);\n                $stmt->execute();\n            }\n            \n            // Clear cart\n            unset($_SESSION['cart']);\n            \n            echo \"Order placed successfully!\";\n        } else {\n            echo \"Error placing order.\";\n        }\n    }\n}\n?>\n```\n\nThis example includes:\n\n1. Database setup with three tables: products, orders, and order_items\n\n2. Basic product display with add to cart functionality\n\n3. Cart management system using PHP sessions\n\n4. Checkout process that saves the order to the database\n\nTo use this system:\n\n1. Create a MySQL database named 'purchase_system'\n\n2. Add some test products to the database\n\n3. The system will display products, allow users to add them to their cart, and proceed to checkout\n\nFeatures:\n\n- Product catalog display\n- Add to cart functionality\n- Cart management with quantities\n- Checkout process that saves order information\n- Order items tracking\n\nTo expand this system:\n\n1. Add user authentication\n2. Implement payment gateway integration (e.g., PayPal, Stripe)\n3. Add shipping options\n4. Include more product details and images\n5. Add order status updates\n6. Implement a wishlist feature\n7. Add search and filtering capabilities\n8. Include error handling for the checkout process\n9. Add email notifications for orders\n10. Implement stock management\n\nRemember to secure your code by:\n\n- Sanitizing user inputs\n- Using prepared statements to prevent SQL injection\n- Validating all forms of input\n- Securing sensitive data (e.g., payment information)\n- Using HTTPS for secure connections\n\nThis is a basic implementation and should be adapted according to your specific requirements.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$dbname = 'purchase_system';\n\n$conn = new mysqli($host, $user, $password, $dbname);\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Create tables if they don't exist\n$sql = \"CREATE TABLE IF NOT EXISTS products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT,\n    stock INT\n)\";\n\n$conn->query($sql);\n\n$sql = \"CREATE TABLE IF NOT EXISTS orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT,\n    total_amount DECIMAL(10, 2),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    payment_status ENUM('pending', 'completed') DEFAULT 'pending'\n)\";\n\n$conn->query($sql);\n\n$sql = \"CREATE TABLE IF NOT EXISTS order_items (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT\n)\";\n\n$conn->query($sql);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase System</title>\n    <style>\n        .container { max-width: 800px; margin: 0 auto; padding: 20px; }\n        .product { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }\n        .cart { margin-top: 20px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <?php\n            // Display products\n            $sql = \"SELECT * FROM products\";\n            $result = $conn->query($sql);\n\n            if ($result->num_rows > 0) {\n                while ($row = $result->fetch_assoc()) {\n                    echo \"<div class='product'>\";\n                    echo \"<h3>\" . $row['name'] . \"</h3>\";\n                    echo \"<p>Price: $\" . number_format($row['price'], 2) . \"</p>\";\n                    echo \"<p>Description: \" . $row['description'] . \"</p>\";\n                    echo \"<form action='add_to_cart.php' method='post'>\";\n                    echo \"<input type='hidden' name='product_id' value='\" . $row['id'] . \"'>\";\n                    echo \"<input type='number' name='quantity' min='1' max='\" . $row['stock'] . \"' placeholder='Quantity'>\";\n                    echo \"<button type='submit'>Add to Cart</button>\";\n                    echo \"</form>\";\n                    echo \"</div>\";\n                }\n            } else {\n                echo \"No products available.\";\n            }\n\n            // Display cart\n            if (isset($_SESSION['cart'])) {\n                $total = 0;\n                echo \"<h2>Your Cart:</h2>\";\n                echo \"<div class='cart'>\";\n                foreach ($_SESSION['cart'] as $item) {\n                    $sql = \"SELECT * FROM products WHERE id=\" . $item['product_id'];\n                    $result = $conn->query($sql);\n                    $product = $result->fetch_assoc();\n                    \n                    echo \"<div>\";\n                    echo \"<h3>\" . $product['name'] . \"</h3>\";\n                    echo \"<p>Quantity: \" . $item['quantity'] . \"</p>\";\n                    echo \"<p>Price: $\" . number_format($product['price'], 2) . \"</p>\";\n                    $total += $product['price'] * $item['quantity'];\n                    echo \"</div>\";\n                }\n                echo \"<h3>Total: $\" . number_format($total, 2) . \"</h3>\";\n                echo \"<a href='checkout.php'>Checkout</a>\";\n                echo \"</div>\";\n            }\n        ?>\n    </div>\n</body>\n</html>\n\n<?php\n// Add to cart functionality\nif ($_SERVER['PHP_SELF'] == '/add_to_cart.php') {\n    session_start();\n    \n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Check if product exists\n    $sql = \"SELECT * FROM products WHERE id=\" . $product_id;\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        $item = array(\n            'product_id' => $product_id,\n            'quantity' => $quantity\n        );\n        \n        $_SESSION['cart'][] = $item;\n    }\n\n    header('Location: index.php');\n}\n\n// Checkout functionality\nif ($_SERVER['PHP_SELF'] == '/checkout.php') {\n    session_start();\n    \n    if (!empty($_SESSION['cart'])) {\n        // Process order\n        $sql = \"INSERT INTO orders (user_id, total_amount) VALUES (?, ?)\";\n        \n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"is\", 1, number_format($total, 2)); // Assuming user_id is 1 for demonstration\n        \n        if ($stmt->execute()) {\n            $order_id = $stmt->insert_id;\n            \n            foreach ($_SESSION['cart'] as $item) {\n                $sql = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\";\n                $stmt = $conn->prepare($sql);\n                $stmt->bind_param(\"iii\", $order_id, $item['product_id'], $item['quantity']);\n                $stmt->execute();\n            }\n            \n            // Clear cart\n            unset($_SESSION['cart']);\n            \n            echo \"Order placed successfully!\";\n        } else {\n            echo \"Error placing order.\";\n        }\n    }\n}\n?>\n```"]}
