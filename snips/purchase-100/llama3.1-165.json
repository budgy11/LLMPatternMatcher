{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a simple purchase functionality in PHP. This example includes the following features:\n\n1. User authentication and authorization\n2. Product listing with prices\n3. Cart management (add, remove products)\n4. Order placement\n\n**Note:** For security reasons, you should never store sensitive information like passwords or credit card numbers directly in your database. Instead, consider using a secure password hashing library like `password_hash()` for user authentication.\n\n### Database Setup:\n\nCreate the following tables in your MySQL database:\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    password VARCHAR(255)\n);\n\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT,\n    order_date DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_items (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT\n);\n```\n\n### PHP Code:\n\n**`config.php`:**\n```php\n<?php\n\n// Database configuration\n$host = 'localhost';\n$db_name = 'purchase_functionality';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$db_name\", $username, $password);\n} catch(PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n?>\n```\n\n**`user_auth.php`:**\n```php\n<?php\n\n// User authentication function\nfunction authenticate($username, $password) {\n    global $conn;\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    $user = $stmt->fetch();\n\n    if ($user && password_verify($password, $user['password'])) {\n        return true;\n    }\n\n    return false;\n}\n\n?>\n```\n\n**`product.php`:**\n```php\n<?php\n\n// Product listing function\nfunction list_products() {\n    global $conn;\n\n    $products = array();\n    $stmt = $conn->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    $products = $stmt->fetchAll();\n\n    return $products;\n}\n\n?>\n```\n\n**`cart.php`:**\n```php\n<?php\n\n// Cart management functions\nfunction add_to_cart($user_id, $product_id) {\n    global $conn;\n\n    // Check if product already exists in cart\n    $stmt = $conn->prepare(\"SELECT * FROM order_items WHERE user_id = :user_id AND product_id = :product_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        // Product already exists, update quantity\n        $stmt = $conn->prepare(\"UPDATE order_items SET quantity = quantity + 1 WHERE user_id = :user_id AND product_id = :product_id\");\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->execute();\n    } else {\n        // Add new product to cart\n        $stmt = $conn->prepare(\"INSERT INTO order_items (user_id, product_id, quantity) VALUES (:user_id, :product_id, 1)\");\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->execute();\n    }\n}\n\nfunction remove_from_cart($user_id, $product_id) {\n    global $conn;\n\n    // Remove product from cart\n    $stmt = $conn->prepare(\"DELETE FROM order_items WHERE user_id = :user_id AND product_id = :product_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n}\n\n?>\n```\n\n**`order.php`:**\n```php\n<?php\n\n// Order placement function\nfunction place_order($user_id) {\n    global $conn;\n\n    // Get user's cart items\n    $stmt = $conn->prepare(\"SELECT * FROM order_items WHERE user_id = :user_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    $cart_items = $stmt->fetchAll();\n\n    // Create new order\n    $order_id = uniqid();\n    $order_date = date('Y-m-d H:i:s');\n    $stmt = $conn->prepare(\"INSERT INTO orders (id, user_id, order_date) VALUES (:order_id, :user_id, :order_date)\");\n    $stmt->bindParam(':order_id', $order_id);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':order_date', $order_date);\n    $stmt->execute();\n\n    // Add cart items to order\n    foreach ($cart_items as $item) {\n        $stmt = $conn->prepare(\"INSERT INTO order_items (id, order_id, product_id, quantity) VALUES (:id, :order_id, :product_id, :quantity)\");\n        $stmt->bindParam(':id', uniqid());\n        $stmt->bindParam(':order_id', $order_id);\n        $stmt->bindParam(':product_id', $item['product_id']);\n        $stmt->bindParam(':quantity', $item['quantity']);\n        $stmt->execute();\n    }\n}\n\n?>\n```\n\n### Example Usage:\n\n**User Authentication:**\n```php\ninclude 'config.php';\ninclude 'user_auth.php';\n\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (authenticate($username, $password)) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n```\n\n**Product Listing:**\n```php\ninclude 'config.php';\ninclude 'product.php';\n\n$products = list_products();\n\necho \"<ul>\";\nforeach ($products as $product) {\n    echo \"<li>$product['name'] - $product['price]</li>\";\n}\necho \"</ul>\";\n```\n\n**Cart Management:**\n```php\ninclude 'config.php';\ninclude 'cart.php';\n\n$user_id = $_SESSION['user_id'];\n\n// Add product to cart\nadd_to_cart($user_id, 1);\n\n// Remove product from cart\nremove_from_cart($user_id, 1);\n```\n\n**Order Placement:**\n```php\ninclude 'config.php';\ninclude 'order.php';\n\n$user_id = $_SESSION['user_id'];\n\nplace_order($user_id);\n```\nNote that this is a simplified example and you should consider implementing additional security measures (e.g., CSRF protection) and error handling in your production code.", "code_blocks": [null, "```php\n<?php\n\n// Database configuration\n$host = 'localhost';\n$db_name = 'purchase_functionality';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$db_name\", $username, $password);\n} catch(PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n?>\n```", "```php\n<?php\n\n// User authentication function\nfunction authenticate($username, $password) {\n    global $conn;\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    $user = $stmt->fetch();\n\n    if ($user && password_verify($password, $user['password'])) {\n        return true;\n    }\n\n    return false;\n}\n\n?>\n```", "```php\n<?php\n\n// Product listing function\nfunction list_products() {\n    global $conn;\n\n    $products = array();\n    $stmt = $conn->prepare(\"SELECT * FROM products\");\n    $stmt->execute();\n    $products = $stmt->fetchAll();\n\n    return $products;\n}\n\n?>\n```", "```php\n<?php\n\n// Cart management functions\nfunction add_to_cart($user_id, $product_id) {\n    global $conn;\n\n    // Check if product already exists in cart\n    $stmt = $conn->prepare(\"SELECT * FROM order_items WHERE user_id = :user_id AND product_id = :product_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        // Product already exists, update quantity\n        $stmt = $conn->prepare(\"UPDATE order_items SET quantity = quantity + 1 WHERE user_id = :user_id AND product_id = :product_id\");\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->execute();\n    } else {\n        // Add new product to cart\n        $stmt = $conn->prepare(\"INSERT INTO order_items (user_id, product_id, quantity) VALUES (:user_id, :product_id, 1)\");\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->execute();\n    }\n}\n\nfunction remove_from_cart($user_id, $product_id) {\n    global $conn;\n\n    // Remove product from cart\n    $stmt = $conn->prepare(\"DELETE FROM order_items WHERE user_id = :user_id AND product_id = :product_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n}\n\n?>\n```", "```php\n<?php\n\n// Order placement function\nfunction place_order($user_id) {\n    global $conn;\n\n    // Get user's cart items\n    $stmt = $conn->prepare(\"SELECT * FROM order_items WHERE user_id = :user_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    $cart_items = $stmt->fetchAll();\n\n    // Create new order\n    $order_id = uniqid();\n    $order_date = date('Y-m-d H:i:s');\n    $stmt = $conn->prepare(\"INSERT INTO orders (id, user_id, order_date) VALUES (:order_id, :user_id, :order_date)\");\n    $stmt->bindParam(':order_id', $order_id);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':order_date', $order_date);\n    $stmt->execute();\n\n    // Add cart items to order\n    foreach ($cart_items as $item) {\n        $stmt = $conn->prepare(\"INSERT INTO order_items (id, order_id, product_id, quantity) VALUES (:id, :order_id, :product_id, :quantity)\");\n        $stmt->bindParam(':id', uniqid());\n        $stmt->bindParam(':order_id', $order_id);\n        $stmt->bindParam(':product_id', $item['product_id']);\n        $stmt->bindParam(':quantity', $item['quantity']);\n        $stmt->execute();\n    }\n}\n\n?>\n```", "```php\ninclude 'config.php';\ninclude 'user_auth.php';\n\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (authenticate($username, $password)) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n```", "```php\ninclude 'config.php';\ninclude 'product.php';\n\n$products = list_products();\n\necho \"<ul>\";\nforeach ($products as $product) {\n    echo \"<li>$product['name'] - $product['price]</li>\";\n}\necho \"</ul>\";\n```", "```php\ninclude 'config.php';\ninclude 'cart.php';\n\n$user_id = $_SESSION['user_id'];\n\n// Add product to cart\nadd_to_cart($user_id, 1);\n\n// Remove product from cart\nremove_from_cart($user_id, 1);\n```", "```php\ninclude 'config.php';\ninclude 'order.php';\n\n$user_id = $_SESSION['user_id'];\n\nplace_order($user_id);\n```"]}
