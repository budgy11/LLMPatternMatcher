{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a simple purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Initialize the cart array\n$cart = [];\n\n// Function to add item to cart\nfunction add_to_cart($product_id, $quantity) {\n  global $cart;\n  if (!isset($cart[$product_id])) {\n    $cart[$product_id] = ['quantity' => 0];\n  }\n  $cart[$product_id]['quantity'] += $quantity;\n}\n\n// Function to remove item from cart\nfunction remove_from_cart($product_id) {\n  global $cart;\n  if (isset($cart[$product_id])) {\n    unset($cart[$product_id]);\n  }\n}\n\n// Function to update quantity in cart\nfunction update_quantity($product_id, $new_quantity) {\n  global $cart;\n  if (isset($cart[$product_id])) {\n    $cart[$product_id]['quantity'] = $new_quantity;\n  }\n}\n\n// Function to display cart contents\nfunction display_cart() {\n  global $cart;\n  ?>\n  <h2>Cart Contents</h2>\n  <table border=\"1\">\n    <tr>\n      <th>Product ID</th>\n      <th>Quantity</th>\n      <th>Total Price</th>\n    </tr>\n  <?php\n  foreach ($cart as $product_id => $details) {\n    // Get product details from database (e.g. price, name)\n    $product = get_product_details($product_id);\n    ?>\n    <tr>\n      <td><?= $product['name'] ?></td>\n      <td><?= $details['quantity'] ?></td>\n      <td><?= $details['quantity'] * $product['price'] ?></td>\n    </tr>\n  <?php\n  }\n  ?>\n  </table>\n  <?php\n}\n\n// Function to calculate total cost of cart contents\nfunction calculate_total() {\n  global $cart;\n  $total = 0;\n  foreach ($cart as $product_id => $details) {\n    // Get product details from database (e.g. price, name)\n    $product = get_product_details($product_id);\n    $total += $details['quantity'] * $product['price'];\n  }\n  return $total;\n}\n\n// Example usage:\nadd_to_cart(1, 2); // Add 2 units of product with ID 1 to cart\ndisplay_cart(); // Display current cart contents\nremove_from_cart(1); // Remove product with ID 1 from cart\nupdate_quantity(2, 3); // Update quantity of product with ID 2 to 3 units\necho calculate_total(); // Output total cost of current cart contents\n\n?>\n```\nThis code provides basic functions for managing a shopping cart:\n\n* `add_to_cart($product_id, $quantity)`: Adds a specified number of products to the cart.\n* `remove_from_cart($product_id)`: Removes all instances of a product from the cart.\n* `update_quantity($product_id, $new_quantity)`: Updates the quantity of a specific product in the cart.\n* `display_cart()`: Displays a table showing the current contents of the cart (including product names, quantities, and total prices).\n* `calculate_total()`: Calculates the total cost of all products currently in the cart.\n\nNote that this is a very basic implementation, and you may need to add additional functionality depending on your specific requirements. For example:\n\n* You may want to store cart data in a database instead of using an in-memory array.\n* You may need to implement more sophisticated quantity management (e.g., allowing users to adjust quantities without triggering validation checks).\n* You may wish to integrate the cart with other features, such as payment processing or order tracking.\n\nAlso note that this example assumes you have some way to retrieve product details from a database. The `get_product_details()` function is not implemented here, but it should be replaced with your actual database query logic.", "code_blocks": ["```php\n<?php\n// Initialize the cart array\n$cart = [];\n\n// Function to add item to cart\nfunction add_to_cart($product_id, $quantity) {\n  global $cart;\n  if (!isset($cart[$product_id])) {\n    $cart[$product_id] = ['quantity' => 0];\n  }\n  $cart[$product_id]['quantity'] += $quantity;\n}\n\n// Function to remove item from cart\nfunction remove_from_cart($product_id) {\n  global $cart;\n  if (isset($cart[$product_id])) {\n    unset($cart[$product_id]);\n  }\n}\n\n// Function to update quantity in cart\nfunction update_quantity($product_id, $new_quantity) {\n  global $cart;\n  if (isset($cart[$product_id])) {\n    $cart[$product_id]['quantity'] = $new_quantity;\n  }\n}\n\n// Function to display cart contents\nfunction display_cart() {\n  global $cart;\n  ?>\n  <h2>Cart Contents</h2>\n  <table border=\"1\">\n    <tr>\n      <th>Product ID</th>\n      <th>Quantity</th>\n      <th>Total Price</th>\n    </tr>\n  <?php\n  foreach ($cart as $product_id => $details) {\n    // Get product details from database (e.g. price, name)\n    $product = get_product_details($product_id);\n    ?>\n    <tr>\n      <td><?= $product['name'] ?></td>\n      <td><?= $details['quantity'] ?></td>\n      <td><?= $details['quantity'] * $product['price'] ?></td>\n    </tr>\n  <?php\n  }\n  ?>\n  </table>\n  <?php\n}\n\n// Function to calculate total cost of cart contents\nfunction calculate_total() {\n  global $cart;\n  $total = 0;\n  foreach ($cart as $product_id => $details) {\n    // Get product details from database (e.g. price, name)\n    $product = get_product_details($product_id);\n    $total += $details['quantity'] * $product['price'];\n  }\n  return $total;\n}\n\n// Example usage:\nadd_to_cart(1, 2); // Add 2 units of product with ID 1 to cart\ndisplay_cart(); // Display current cart contents\nremove_from_cart(1); // Remove product with ID 1 from cart\nupdate_quantity(2, 3); // Update quantity of product with ID 2 to 3 units\necho calculate_total(); // Output total cost of current cart contents\n\n?>\n```"]}
