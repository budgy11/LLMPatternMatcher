{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including HTML and CSS for the user interface. This example assumes you have a MySQL database setup with a table named `orders` to store order information.\n\n**Note:** This is a simplified example and should not be used in production without proper security measures (e.g., validation, sanitization, prepared statements).\n\n### Database Schema\n\nFirst, let's create the necessary database schema using SQL:\n\n```sql\nCREATE TABLE orders (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  order_date DATE DEFAULT CURRENT_DATE,\n  total DECIMAL(10,2) NOT NULL\n);\n```\n\n### PHP Code\n\nCreate a file named `purchase.php` in your web root directory and add the following code:\n\n```php\n<?php\n// Configuration variables\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to insert order into database\nfunction insertOrder() {\n  global $conn;\n  \n  // Get product data from session or post request (not shown in this example)\n  $customerName = $_POST['customer_name'];\n  $email = $_POST['email'];\n  $total = $_POST['total'];\n\n  // Prepare and execute query\n  $sql = \"INSERT INTO orders (customer_name, email, total) VALUES (?, ?, ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"sss\", $customerName, $email, $total);\n  if (!$stmt->execute()) {\n    echo 'Error: ' . $stmt->error;\n  } else {\n    echo \"Order placed successfully!\";\n  }\n}\n\n// Function to display order form\nfunction showForm() {\n  ?>\n  <form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type of=\"email\" id=\"email\" name=\"email\"><br><br>\n    <label for=\"total\">Total:</label>\n    <input type=\"number\" id=\"total\" name=\"total\"><br><br>\n    <button type=\"submit\" name=\"submit\">Place Order</button>\n  </form>\n  <?php\n}\n\n// Process form submission or display order form\nif (isset($_POST['submit'])) {\n  insertOrder();\n} else {\n  showForm();\n}\n?>\n```\n\n### Explanation\n\n1. The PHP code connects to a MySQL database and uses prepared statements for security.\n2. Two functions are defined: `insertOrder()` and `showForm()`. `insertOrder()` inserts new orders into the database, while `showForm()` displays an order form on the page.\n3. When the form is submitted (via POST request), the `insertOrder()` function is called with the customer data.\n4. If no form submission occurs, the `showForm()` function is displayed.\n\n### Example Use Case\n\n1. Open a web browser and navigate to the `purchase.php` file.\n2. Fill in the order form with your name, email address, and total amount (e.g., $10).\n3. Click the \"Place Order\" button to submit the form.\n4. If everything is set up correctly, you should see a success message indicating that the order was placed successfully.\n\n**Remember:** This example provides a basic outline for creating a purchase functionality using PHP. Always ensure proper security measures are implemented in your production environment!", "code_blocks": [null, "```php\n<?php\n// Configuration variables\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to insert order into database\nfunction insertOrder() {\n  global $conn;\n  \n  // Get product data from session or post request (not shown in this example)\n  $customerName = $_POST['customer_name'];\n  $email = $_POST['email'];\n  $total = $_POST['total'];\n\n  // Prepare and execute query\n  $sql = \"INSERT INTO orders (customer_name, email, total) VALUES (?, ?, ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"sss\", $customerName, $email, $total);\n  if (!$stmt->execute()) {\n    echo 'Error: ' . $stmt->error;\n  } else {\n    echo \"Order placed successfully!\";\n  }\n}\n\n// Function to display order form\nfunction showForm() {\n  ?>\n  <form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type of=\"email\" id=\"email\" name=\"email\"><br><br>\n    <label for=\"total\">Total:</label>\n    <input type=\"number\" id=\"total\" name=\"total\"><br><br>\n    <button type=\"submit\" name=\"submit\">Place Order</button>\n  </form>\n  <?php\n}\n\n// Process form submission or display order form\nif (isset($_POST['submit'])) {\n  insertOrder();\n} else {\n  showForm();\n}\n?>\n```"]}
