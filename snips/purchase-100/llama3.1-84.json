{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a basic purchase cart functionality in PHP:\n\n**Step 1: Create the Cart Class**\n```php\n// cart.php\n\nclass Cart {\n    private $items = array();\n    private $subtotal = 0;\n    private $tax_rate = 0.08; // default tax rate is 8%\n\n    public function add_item($item_id, $quantity) {\n        if (isset($this->items[$item_id])) {\n            $this->items[$item_id]['quantity'] += $quantity;\n        } else {\n            $this->items[$item_id] = array('price' => 0, 'quantity' => $quantity);\n        }\n    }\n\n    public function remove_item($item_id) {\n        if (isset($this->items[$item_id])) {\n            unset($this->items[$item_id]);\n        }\n    }\n\n    public function update_quantity($item_id, $new_quantity) {\n        if (isset($this->items[$item_id])) {\n            $this->items[$item_id]['quantity'] = $new_quantity;\n        }\n    }\n\n    public function get_subtotal() {\n        foreach ($this->items as $item) {\n            $this->subtotal += $item['price'] * $item['quantity'];\n        }\n        return $this->subtotal;\n    }\n\n    public function get_tax() {\n        return $this->get_subtotal() * $this->tax_rate;\n    }\n\n    public function get_total() {\n        return $this->get_subtotal() + $this->get_tax();\n    }\n\n    public function get_items() {\n        return $this->items;\n    }\n}\n```\n**Step 2: Create the Cart View**\n```php\n// cart.php\n\nclass CartView {\n    private $cart;\n\n    public function __construct($cart) {\n        $this->cart = $cart;\n    }\n\n    public function display_cart() {\n        echo '<h1>Shopping Cart</h1>';\n        echo '<table border=\"1\">';\n        echo '<tr><th>Item ID</th><th>Quantity</th><th>Price</th></tr>';\n\n        foreach ($this->cart->get_items() as $item_id => $item) {\n            echo '<tr>';\n            echo '<td>' . $item_id . '</td>';\n            echo '<td>' . $item['quantity'] . '</td>';\n            echo '<td>$' . number_format($item['price'] * $item['quantity'], 2) . '</td>';\n            echo '</tr>';\n        }\n\n        echo '</table>';\n\n        echo 'Subtotal: $' . number_format($this->cart->get_subtotal(), 2);\n        echo '<br> Tax (8%): $' . number_format($this->cart->get_tax(), 2);\n        echo '<br> Total: $' . number_format($this->cart->get_total(), 2);\n    }\n}\n```\n**Step 3: Create the Cart Controller**\n```php\n// cart.php\n\nclass CartController {\n    private $cart;\n\n    public function __construct() {\n        $this->cart = new Cart();\n    }\n\n    public function add_item($item_id, $quantity) {\n        $this->cart->add_item($item_id, $quantity);\n    }\n\n    public function remove_item($item_id) {\n        $this->cart->remove_item($item_id);\n    }\n\n    public function update_quantity($item_id, $new_quantity) {\n        $this->cart->update_quantity($item_id, $new_quantity);\n    }\n\n    public function display_cart() {\n        $view = new CartView($this->cart);\n        $view->display_cart();\n    }\n}\n```\n**Step 4: Create the Product List**\n```php\n// products.php\n\nclass Products {\n    private $items = array(\n        'item1' => array('price' => 9.99, 'name' => 'Product 1'),\n        'item2' => array('price' => 19.99, 'name' => 'Product 2'),\n        // ...\n    );\n\n    public function get_items() {\n        return $this->items;\n    }\n}\n```\n**Step 5: Create the Main Page**\n```php\n// index.php\n\nrequire_once 'cart.php';\nrequire_once 'products.php';\n\n$products = new Products();\n$product_list = $products->get_items();\n\n$cart_controller = new CartController();\n\necho '<h1>Shopping Cart</h1>';\necho '<form action=\"index.php\" method=\"post\">';\n\nforeach ($product_list as $item_id => $item) {\n    echo '<input type=\"checkbox\" name=\"items[]\" value=\"' . $item_id . '\">';\n    echo '<label>' . $item['name'] . '</label> <br>';\n}\n\necho '<button type=\"submit\">Add to Cart</button>';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    foreach ($_POST['items'] as $item_id) {\n        $cart_controller->add_item($item_id, 1);\n    }\n}\n\n$cart_controller->display_cart();\n\n?>\n```\nThis is a basic example of how you can create a shopping cart functionality in PHP. You can add more features such as user authentication, payment gateway integration, and order management.\n\nNote: This code is for demonstration purposes only and should not be used in production without proper testing and security measures.", "code_blocks": ["```php\n// cart.php\n\nclass Cart {\n    private $items = array();\n    private $subtotal = 0;\n    private $tax_rate = 0.08; // default tax rate is 8%\n\n    public function add_item($item_id, $quantity) {\n        if (isset($this->items[$item_id])) {\n            $this->items[$item_id]['quantity'] += $quantity;\n        } else {\n            $this->items[$item_id] = array('price' => 0, 'quantity' => $quantity);\n        }\n    }\n\n    public function remove_item($item_id) {\n        if (isset($this->items[$item_id])) {\n            unset($this->items[$item_id]);\n        }\n    }\n\n    public function update_quantity($item_id, $new_quantity) {\n        if (isset($this->items[$item_id])) {\n            $this->items[$item_id]['quantity'] = $new_quantity;\n        }\n    }\n\n    public function get_subtotal() {\n        foreach ($this->items as $item) {\n            $this->subtotal += $item['price'] * $item['quantity'];\n        }\n        return $this->subtotal;\n    }\n\n    public function get_tax() {\n        return $this->get_subtotal() * $this->tax_rate;\n    }\n\n    public function get_total() {\n        return $this->get_subtotal() + $this->get_tax();\n    }\n\n    public function get_items() {\n        return $this->items;\n    }\n}\n```", "```php\n// cart.php\n\nclass CartView {\n    private $cart;\n\n    public function __construct($cart) {\n        $this->cart = $cart;\n    }\n\n    public function display_cart() {\n        echo '<h1>Shopping Cart</h1>';\n        echo '<table border=\"1\">';\n        echo '<tr><th>Item ID</th><th>Quantity</th><th>Price</th></tr>';\n\n        foreach ($this->cart->get_items() as $item_id => $item) {\n            echo '<tr>';\n            echo '<td>' . $item_id . '</td>';\n            echo '<td>' . $item['quantity'] . '</td>';\n            echo '<td>$' . number_format($item['price'] * $item['quantity'], 2) . '</td>';\n            echo '</tr>';\n        }\n\n        echo '</table>';\n\n        echo 'Subtotal: $' . number_format($this->cart->get_subtotal(), 2);\n        echo '<br> Tax (8%): $' . number_format($this->cart->get_tax(), 2);\n        echo '<br> Total: $' . number_format($this->cart->get_total(), 2);\n    }\n}\n```", "```php\n// cart.php\n\nclass CartController {\n    private $cart;\n\n    public function __construct() {\n        $this->cart = new Cart();\n    }\n\n    public function add_item($item_id, $quantity) {\n        $this->cart->add_item($item_id, $quantity);\n    }\n\n    public function remove_item($item_id) {\n        $this->cart->remove_item($item_id);\n    }\n\n    public function update_quantity($item_id, $new_quantity) {\n        $this->cart->update_quantity($item_id, $new_quantity);\n    }\n\n    public function display_cart() {\n        $view = new CartView($this->cart);\n        $view->display_cart();\n    }\n}\n```", "```php\n// products.php\n\nclass Products {\n    private $items = array(\n        'item1' => array('price' => 9.99, 'name' => 'Product 1'),\n        'item2' => array('price' => 19.99, 'name' => 'Product 2'),\n        // ...\n    );\n\n    public function get_items() {\n        return $this->items;\n    }\n}\n```", "```php\n// index.php\n\nrequire_once 'cart.php';\nrequire_once 'products.php';\n\n$products = new Products();\n$product_list = $products->get_items();\n\n$cart_controller = new CartController();\n\necho '<h1>Shopping Cart</h1>';\necho '<form action=\"index.php\" method=\"post\">';\n\nforeach ($product_list as $item_id => $item) {\n    echo '<input type=\"checkbox\" name=\"items[]\" value=\"' . $item_id . '\">';\n    echo '<label>' . $item['name'] . '</label> <br>';\n}\n\necho '<button type=\"submit\">Add to Cart</button>';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    foreach ($_POST['items'] as $item_id) {\n        $cart_controller->add_item($item_id, 1);\n    }\n}\n\n$cart_controller->display_cart();\n\n?>\n```"]}
