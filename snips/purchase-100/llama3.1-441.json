{"prompt": "Create a purchase functionality using php", "llm_output": "**Purchase Functionality in PHP**\n=====================================\n\nIn this example, we will create a basic purchase functionality that allows users to add items to their cart and make purchases. We'll use a simple database to store user data and item information.\n\n**Database Schema**\n-------------------\n\nFor simplicity, let's assume we have two tables:\n\n`users`: stores user information\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n```\n\n`items`: stores item information\n```sql\nCREATE TABLE items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n```\n\n**PHP Code**\n-------------\n\nWe'll create a `PurchaseController` class that handles user interactions.\n```php\n// src/Controllers/PurchaseController.php\n\nclass PurchaseController\n{\n    private $db;\n\n    public function __construct()\n    {\n        $this->db = new Database();\n    }\n\n    /**\n     * Display the cart page\n     */\n    public function displayCart()\n    {\n        // Retrieve user ID from session or cookie\n        $userId = $_SESSION['user_id'];\n\n        // Get items in cart for current user\n        $itemsInCart = $this->db->query(\"SELECT * FROM cart WHERE user_id = ?\", [$userId]);\n\n        require_once 'views/cart.php';\n    }\n\n    /**\n     * Add item to cart\n     */\n    public function addItemToCart()\n    {\n        // Retrieve user ID from session or cookie\n        $userId = $_SESSION['user_id'];\n\n        // Get item ID and quantity from request\n        $itemId = $_POST['item_id'];\n        $quantity = $_POST['quantity'];\n\n        // Check if item is available in stock\n        $itemData = $this->db->query(\"SELECT * FROM items WHERE id = ?\", [$itemId]);\n        if ($itemData && $itemData[0]['stock'] >= $quantity) {\n            // Add item to cart\n            $this->db->query(\"INSERT INTO cart (user_id, item_id, quantity) VALUES (?, ?, ?)\", [$userId, $itemId, $quantity]);\n\n            header('Location: ' . $_SERVER['HTTP_REFERER']);\n        } else {\n            echo \"Item not available in stock\";\n        }\n    }\n\n    /**\n     * Make a purchase\n     */\n    public function makePurchase()\n    {\n        // Retrieve user ID from session or cookie\n        $userId = $_SESSION['user_id'];\n\n        // Get cart contents for current user\n        $cartContents = $this->db->query(\"SELECT * FROM cart WHERE user_id = ?\", [$userId]);\n\n        // Calculate total cost and update item stock levels\n        foreach ($cartContents as $item) {\n            $itemId = $item['item_id'];\n            $quantity = $item['quantity'];\n\n            // Update item stock level\n            $this->db->query(\"UPDATE items SET stock = stock - ? WHERE id = ?\", [$quantity, $itemId]);\n\n            // Calculate total cost\n            $totalCost += $this->db->query(\"SELECT price FROM items WHERE id = ?\", [$itemId])[0]['price'] * $quantity;\n        }\n\n        // Update user balance (if applicable)\n        if (isset($_POST['pay_method'])) {\n            // Process payment using chosen method (e.g. PayPal, Stripe)\n            // ...\n        } else {\n            echo \"Please select a payment method\";\n        }\n    }\n}\n```\n\n**Front-end Code**\n------------------\n\nWe'll create basic HTML forms to interact with our `PurchaseController` class.\n```html\n<!-- views/cart.php -->\n\n<h1>Cart</h1>\n\n<table>\n  <tr>\n    <th>Item</th>\n    <th>Price</th>\n    <th>Quantity</th>\n  </tr>\n  <?php foreach ($cartContents as $item) { ?>\n  <tr>\n    <td><?= $item['name'] ?></td>\n    <td><?= $item['price'] ?></td>\n    <td><?= $item['quantity'] ?></td>\n  </tr>\n  <?php } ?>\n</table>\n\n<form action=\"<?= $_SERVER['PHP_SELF'] ?>\" method=\"post\">\n  <button type=\"submit\">Checkout</button>\n</form>\n\n<!-- views/checkout.php -->\n\n<h1>Checkout</h1>\n\n<form action=\"<?= $_SERVER['PHP_SELF'] ?>\" method=\"post\">\n  <label for=\"pay_method\">Select payment method:</label>\n  <select id=\"pay_method\" name=\"pay_method\">\n    <!-- Add options (e.g. PayPal, Stripe) -->\n  </select>\n  <button type=\"submit\">Pay</button>\n</form>\n```\n\n**Example Use Case**\n---------------------\n\n1. User logs in and navigates to the cart page.\n2. User adds items to their cart using the `addItemToCart()` method.\n3. User proceeds to checkout by clicking the \"Checkout\" button.\n4. On the checkout page, user selects a payment method (e.g. PayPal).\n5. When user clicks the \"Pay\" button, the `makePurchase()` method is called, updating item stock levels and processing payment.\n\nRemember to replace placeholders with your actual database schema and payment processing methods. This example provides a basic structure for implementing purchase functionality using PHP.", "code_blocks": [null, null, "```php\n// src/Controllers/PurchaseController.php\n\nclass PurchaseController\n{\n    private $db;\n\n    public function __construct()\n    {\n        $this->db = new Database();\n    }\n\n    /**\n     * Display the cart page\n     */\n    public function displayCart()\n    {\n        // Retrieve user ID from session or cookie\n        $userId = $_SESSION['user_id'];\n\n        // Get items in cart for current user\n        $itemsInCart = $this->db->query(\"SELECT * FROM cart WHERE user_id = ?\", [$userId]);\n\n        require_once 'views/cart.php';\n    }\n\n    /**\n     * Add item to cart\n     */\n    public function addItemToCart()\n    {\n        // Retrieve user ID from session or cookie\n        $userId = $_SESSION['user_id'];\n\n        // Get item ID and quantity from request\n        $itemId = $_POST['item_id'];\n        $quantity = $_POST['quantity'];\n\n        // Check if item is available in stock\n        $itemData = $this->db->query(\"SELECT * FROM items WHERE id = ?\", [$itemId]);\n        if ($itemData && $itemData[0]['stock'] >= $quantity) {\n            // Add item to cart\n            $this->db->query(\"INSERT INTO cart (user_id, item_id, quantity) VALUES (?, ?, ?)\", [$userId, $itemId, $quantity]);\n\n            header('Location: ' . $_SERVER['HTTP_REFERER']);\n        } else {\n            echo \"Item not available in stock\";\n        }\n    }\n\n    /**\n     * Make a purchase\n     */\n    public function makePurchase()\n    {\n        // Retrieve user ID from session or cookie\n        $userId = $_SESSION['user_id'];\n\n        // Get cart contents for current user\n        $cartContents = $this->db->query(\"SELECT * FROM cart WHERE user_id = ?\", [$userId]);\n\n        // Calculate total cost and update item stock levels\n        foreach ($cartContents as $item) {\n            $itemId = $item['item_id'];\n            $quantity = $item['quantity'];\n\n            // Update item stock level\n            $this->db->query(\"UPDATE items SET stock = stock - ? WHERE id = ?\", [$quantity, $itemId]);\n\n            // Calculate total cost\n            $totalCost += $this->db->query(\"SELECT price FROM items WHERE id = ?\", [$itemId])[0]['price'] * $quantity;\n        }\n\n        // Update user balance (if applicable)\n        if (isset($_POST['pay_method'])) {\n            // Process payment using chosen method (e.g. PayPal, Stripe)\n            // ...\n        } else {\n            echo \"Please select a payment method\";\n        }\n    }\n}\n```", null]}
