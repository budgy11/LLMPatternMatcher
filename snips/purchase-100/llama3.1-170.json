{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a simple purchase functionality using PHP:\n\n**Note:** This example assumes that you are using a MySQL database to store the product information and user data. You will need to modify the code to match your specific database schema.\n\n**Database Schema:**\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  total DECIMAL(10,2),\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\n```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction getProducts() {\n  global $conn;\n  $query = \"SELECT * FROM products\";\n  $result = $conn->query($query);\n  return $result->fetch_all(MYSQLI_ASSOC);\n}\n\nfunction processOrder($userId, $products) {\n  global $conn;\n  \n  // Insert order into database\n  $total = 0;\n  foreach ($products as $product) {\n    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;\n    $price = $product['price'];\n    $subtotal = $quantity * $price;\n    $total += $subtotal;\n    \n    // Insert order item into database\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (NULL, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('ii', $product['id'], $quantity);\n    $stmt->execute();\n  }\n  \n  // Update total in database\n  $query = \"INSERT INTO orders (user_id, total) VALUES (?, ?)\";\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('ii', $userId, $total);\n  $stmt->execute();\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n  // Display products\n  $products = getProducts();\n} elseif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Process order\n  $userId = $_SESSION['user_id'];\n  $products = $_POST['products'];\n  \n  processOrder($userId, $products);\n}\n\n?>\n```\n\n**HTML Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Functionality</title>\n</head>\n<body>\n\n<?php if (isset($_SESSION['user_id'])) { ?>\n  <?php if ($_SERVER['REQUEST_METHOD'] == 'GET') { ?>\n    <h1>Available Products:</h1>\n    <ul>\n      <?php foreach ($products as $product) { ?>\n        <li><?php echo $product['name']; ?> - <?php echo $product['price']; ?></li>\n      <?php } ?>\n    </ul>\n  <?php } elseif ($_SERVER['REQUEST_METHOD'] == 'POST') { ?>\n    <h1>Order Summary:</h1>\n    <p>Total: <?php echo $_SESSION['total']; ?></p>\n  <?php } ?>\n<?php } else { ?>\n  <p>Please log in to view products.</p>\n<?php } ?>\n\n<form method=\"post\">\n  <?php foreach ($products as $product) { ?>\n    <input type=\"hidden\" name=\"products[]\" value=\"<?php echo $product['id']; ?>\">\n    Quantity: <input type=\"number\" name=\"quantity\">\n    Price: <?php echo $product['price']; ?><br>\n  <?php } ?>\n  <button type=\"submit\">Place Order</button>\n</form>\n\n<?php if (isset($_SESSION['user_id']) && $_SERVER['REQUEST_METHOD'] == 'POST') { ?>\n  <h1>Order Details:</h1>\n  <p>User ID: <?php echo $_SESSION['user_id']; ?></p>\n  <p>Total: <?php echo $_SESSION['total']; ?></p>\n<?php } ?>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\nThis code demonstrates a simple purchase functionality that allows users to view available products, place orders, and view order details. The PHP code connects to a MySQL database and retrieves the list of products. When the user submits the form, it processes the order by inserting the product ID and quantity into the `order_items` table, and then updates the total in the `orders` table.\n\nThe HTML code displays the available products when the page is loaded, and allows the user to select a product and enter its quantity. When the user submits the form, it sends the selected product ID and quantity to the PHP script for processing.\n\nNote that this is a simplified example and you may want to add additional features such as authentication, authorization, and payment processing.", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction getProducts() {\n  global $conn;\n  $query = \"SELECT * FROM products\";\n  $result = $conn->query($query);\n  return $result->fetch_all(MYSQLI_ASSOC);\n}\n\nfunction processOrder($userId, $products) {\n  global $conn;\n  \n  // Insert order into database\n  $total = 0;\n  foreach ($products as $product) {\n    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;\n    $price = $product['price'];\n    $subtotal = $quantity * $price;\n    $total += $subtotal;\n    \n    // Insert order item into database\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (NULL, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('ii', $product['id'], $quantity);\n    $stmt->execute();\n  }\n  \n  // Update total in database\n  $query = \"INSERT INTO orders (user_id, total) VALUES (?, ?)\";\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('ii', $userId, $total);\n  $stmt->execute();\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n  // Display products\n  $products = getProducts();\n} elseif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Process order\n  $userId = $_SESSION['user_id'];\n  $products = $_POST['products'];\n  \n  processOrder($userId, $products);\n}\n\n?>\n```", null]}
