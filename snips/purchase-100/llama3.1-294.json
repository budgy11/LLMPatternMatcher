{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Get session variables\nsession_start();\n\n// Retrieve cart items from session\n$cart_items = $_SESSION['cart'];\n\nif (!isset($cart_items)) {\n    $cart_items = array();\n}\n\n// Process payment (e.g. Stripe, PayPal)\nif (isset($_POST['submit'])) {\n    // Payment processing code goes here\n    // For example, using Stripe API:\n    require_once 'stripe-php/lib/Stripe.php';\n    Stripe::setApiKey('YOUR_STRIPE_API_KEY');\n    $token = $_POST['stripeToken'];\n    $charge = Stripe_Charge::create(array(\n        \"amount\" => 1000,\n        \"currency\" => \"usd\",\n        \"source\" => $token\n    ));\n}\n\n// Display cart items and payment form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Cart</title>\n</head>\n<body>\n\n<h1>Cart</h1>\n\n<ul>\n<?php foreach ($cart_items as $item) { ?>\n    <li><?php echo $item['name']; ?> x <?php echo $item['quantity']; ?></li>\n<?php } ?>\n</ul>\n\n<form action=\"\" method=\"post\">\n    <!-- Payment form fields -->\n    <input type=\"hidden\" name=\"stripeToken\" value=\"<?php echo $_POST['stripeToken']; ?>\">\n    <button type=\"submit\" name=\"submit\">Pay Now!</button>\n</form>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n</body>\n</html>\n```\n\n**index.php**\n```php\n<?php\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Get session variables\nsession_start();\n\n// Display products and add-to-cart form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Products</title>\n</head>\n<body>\n\n<h1>Products</h1>\n\n<ul>\n<?php\n// Retrieve products from database\n$query = \"SELECT * FROM products\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        ?>\n        <li>\n            <?php echo $row['name']; ?> (<?php echo $row['price']; ?>)\n            <form action=\"\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $row['id']; ?>\">\n                <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n            </form>\n        </li>\n        <?php\n    }\n}\n?>\n</ul>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n</body>\n</html>\n```\n\n**cart.php (continued)**\n```php\nif (isset($_POST['add_to_cart'])) {\n    // Get product ID and quantity from form data\n    $product_id = $_POST['product_id'];\n    $quantity = 1;\n\n    // Check if product is already in cart\n    foreach ($cart_items as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] += 1;\n            break;\n        }\n    }\n\n    // If not, add new item to cart\n    if (!isset($item)) {\n        array_push($cart_items, array(\n            'id' => $product_id,\n            'name' => $_POST['product_name'],\n            'price' => $_POST['product_price'],\n            'quantity' => 1\n        ));\n    }\n\n    // Update session cart items\n    $_SESSION['cart'] = $cart_items;\n}\n\n// Display payment form\n?>\n\n<!-- Payment form fields -->\n<form action=\"\" method=\"post\">\n    <!-- Stripe token input field -->\n    <input type=\"hidden\" name=\"stripeToken\" id=\"stripe-token\" />\n    <!-- Product price and total cost display -->\n    <p>Subtotal: <?php echo $cart_subtotal; ?></p>\n    <button type=\"submit\">Pay Now!</button>\n</form>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\n**Note:** This is a basic example and you should adapt it to your specific needs. You will need to:\n\n* Set up Stripe or another payment gateway API in your server-side code.\n* Replace placeholders with actual database credentials, product data, and payment processing keys.\n* Implement proper error handling and validation for form data.\n\n**Security Considerations:**\n\n* Ensure that all sensitive data (e.g., credit card numbers) is properly encrypted and handled securely.\n* Validate all user input to prevent SQL injection and cross-site scripting (XSS) attacks.\n* Use secure communication protocols (HTTPS) for payment processing and other sensitive interactions.\n\nRemember, this example is meant to illustrate basic concepts and should not be used in production without proper security measures and testing.", "code_blocks": ["```php\n<?php\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Get session variables\nsession_start();\n\n// Retrieve cart items from session\n$cart_items = $_SESSION['cart'];\n\nif (!isset($cart_items)) {\n    $cart_items = array();\n}\n\n// Process payment (e.g. Stripe, PayPal)\nif (isset($_POST['submit'])) {\n    // Payment processing code goes here\n    // For example, using Stripe API:\n    require_once 'stripe-php/lib/Stripe.php';\n    Stripe::setApiKey('YOUR_STRIPE_API_KEY');\n    $token = $_POST['stripeToken'];\n    $charge = Stripe_Charge::create(array(\n        \"amount\" => 1000,\n        \"currency\" => \"usd\",\n        \"source\" => $token\n    ));\n}\n\n// Display cart items and payment form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Cart</title>\n</head>\n<body>\n\n<h1>Cart</h1>\n\n<ul>\n<?php foreach ($cart_items as $item) { ?>\n    <li><?php echo $item['name']; ?> x <?php echo $item['quantity']; ?></li>\n<?php } ?>\n</ul>\n\n<form action=\"\" method=\"post\">\n    <!-- Payment form fields -->\n    <input type=\"hidden\" name=\"stripeToken\" value=\"<?php echo $_POST['stripeToken']; ?>\">\n    <button type=\"submit\" name=\"submit\">Pay Now!</button>\n</form>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n</body>\n</html>\n```", "```php\n<?php\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Get session variables\nsession_start();\n\n// Display products and add-to-cart form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Products</title>\n</head>\n<body>\n\n<h1>Products</h1>\n\n<ul>\n<?php\n// Retrieve products from database\n$query = \"SELECT * FROM products\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        ?>\n        <li>\n            <?php echo $row['name']; ?> (<?php echo $row['price']; ?>)\n            <form action=\"\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $row['id']; ?>\">\n                <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n            </form>\n        </li>\n        <?php\n    }\n}\n?>\n</ul>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n</body>\n</html>\n```", "```php\nif (isset($_POST['add_to_cart'])) {\n    // Get product ID and quantity from form data\n    $product_id = $_POST['product_id'];\n    $quantity = 1;\n\n    // Check if product is already in cart\n    foreach ($cart_items as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] += 1;\n            break;\n        }\n    }\n\n    // If not, add new item to cart\n    if (!isset($item)) {\n        array_push($cart_items, array(\n            'id' => $product_id,\n            'name' => $_POST['product_name'],\n            'price' => $_POST['product_price'],\n            'quantity' => 1\n        ));\n    }\n\n    // Update session cart items\n    $_SESSION['cart'] = $cart_items;\n}\n\n// Display payment form\n?>\n\n<!-- Payment form fields -->\n<form action=\"\" method=\"post\">\n    <!-- Stripe token input field -->\n    <input type=\"hidden\" name=\"stripeToken\" id=\"stripe-token\" />\n    <!-- Product price and total cost display -->\n    <p>Subtotal: <?php echo $cart_subtotal; ?></p>\n    <button type=\"submit\">Pay Now!</button>\n</form>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n```"]}
