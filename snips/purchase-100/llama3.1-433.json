{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP. This example assumes you have a database set up to store the products and customer information.\n\n**Database Schema:**\n\n```sql\nCREATE TABLE customers (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_id INT,\n  product_id INT,\n  quantity INT,\n  total_price DECIMAL(10,2),\n  FOREIGN KEY (customer_id) REFERENCES customers(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\n```php\n<?php\n\n// Configuration file for database connection\nrequire_once 'config.php';\n\n// Function to create a new customer\nfunction createCustomer($name, $email) {\n    global $conn;\n    $query = \"INSERT INTO customers (name, email) VALUES (:name, :email)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    return $stmt->execute();\n}\n\n// Function to get all products\nfunction getAllProducts() {\n    global $conn;\n    $query = \"SELECT * FROM products\";\n    $stmt = $conn->prepare($query);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// Function to add a new order\nfunction createOrder($customer_id, $product_id, $quantity) {\n    global $conn;\n    $query = \"INSERT INTO orders (customer_id, product_id, quantity, total_price) VALUES (:customer_id, :product_id, :quantity, :total_price)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    // Calculate total price\n    $price = getProductPrice($product_id);\n    $total_price = $price * $quantity;\n    $stmt->bindParam(':total_price', $total_price);\n    return $stmt->execute();\n}\n\n// Function to get product price\nfunction getProductPrice($id) {\n    global $conn;\n    $query = \"SELECT price FROM products WHERE id = :id\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n}\n\n// Function to purchase a product\nfunction purchaseProduct() {\n    if (isset($_POST['customer_name']) && isset($_POST['customer_email'])) {\n        createCustomer($_POST['customer_name'], $_POST['customer_email']);\n        $customer_id = getLastInsertId('customers');\n        \n        if (isset($_POST['product_id'])) {\n            foreach ($_POST['product_id'] as $id) {\n                $quantity = $_POST['quantity'][$id];\n                createOrder($customer_id, $id, $quantity);\n            }\n        }\n    }\n}\n\n// Get products\n$products = getAllProducts();\n\n?>\n```\n\n**HTML Form:**\n\n```html\n<form action=\"\" method=\"post\">\n  <label for=\"name\">Name:</label>\n  <input type=\"text\" id=\"name\" name=\"customer_name\"><br><br>\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"customer_email\"><br><br>\n\n  <?php foreach ($products as $product) { ?>\n    <p>Product: <?php echo $product['name']; ?> Price: <?php echo $product['price']; ?></p>\n    <input type=\"hidden\" name=\"product_id[]\" value=\"<?php echo $product['id']; ?>\">\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity[<?php echo $product['id']; ?>]\"><br><br>\n  <?php } ?>\n\n  <button type=\"submit\">Purchase</button>\n</form>\n\n<?php\n// Call the purchase function\npurchaseProduct();\n?>\n```\n\nThis code will create a form that allows customers to select products and quantity, then submit the form to purchase the selected products. The `createCustomer` function creates a new customer in the database, and the `createOrder` function adds an order for each product selected.", "code_blocks": [null, "```php\n<?php\n\n// Configuration file for database connection\nrequire_once 'config.php';\n\n// Function to create a new customer\nfunction createCustomer($name, $email) {\n    global $conn;\n    $query = \"INSERT INTO customers (name, email) VALUES (:name, :email)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    return $stmt->execute();\n}\n\n// Function to get all products\nfunction getAllProducts() {\n    global $conn;\n    $query = \"SELECT * FROM products\";\n    $stmt = $conn->prepare($query);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// Function to add a new order\nfunction createOrder($customer_id, $product_id, $quantity) {\n    global $conn;\n    $query = \"INSERT INTO orders (customer_id, product_id, quantity, total_price) VALUES (:customer_id, :product_id, :quantity, :total_price)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':customer_id', $customer_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    // Calculate total price\n    $price = getProductPrice($product_id);\n    $total_price = $price * $quantity;\n    $stmt->bindParam(':total_price', $total_price);\n    return $stmt->execute();\n}\n\n// Function to get product price\nfunction getProductPrice($id) {\n    global $conn;\n    $query = \"SELECT price FROM products WHERE id = :id\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n}\n\n// Function to purchase a product\nfunction purchaseProduct() {\n    if (isset($_POST['customer_name']) && isset($_POST['customer_email'])) {\n        createCustomer($_POST['customer_name'], $_POST['customer_email']);\n        $customer_id = getLastInsertId('customers');\n        \n        if (isset($_POST['product_id'])) {\n            foreach ($_POST['product_id'] as $id) {\n                $quantity = $_POST['quantity'][$id];\n                createOrder($customer_id, $id, $quantity);\n            }\n        }\n    }\n}\n\n// Get products\n$products = getAllProducts();\n\n?>\n```", null]}
