{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a simple purchase functionality in PHP, including database interaction to store the purchase details.\n\n**Database Schema:**\n\nFor this example, we'll assume you have a MySQL database with two tables: `products` and `purchases`.\n\n**Table Structure:**\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchases (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    customer_name VARCHAR(255),\n    product_id INT,\n    purchase_date DATE,\n    total_price DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\nCreate a PHP file called `purchase.php` and add the following code:\n\n```php\n<?php\n\n// Database Connection Settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Create a database connection\nfunction connectToDatabase() {\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Close the database connection\nfunction closeDatabaseConnection($conn) {\n    $conn->close();\n}\n\n// Function to add a new purchase\nfunction addPurchase($customerName, $productId, $quantity = 1) {\n    // Connect to the database\n    $conn = connectToDatabase();\n\n    // Get the product details from the products table\n    $query = \"SELECT price FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $productId);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    $productPrice = $result->fetch_assoc()[\"price\"];\n\n    // Calculate the total price\n    $totalPrice = ($productPrice * $quantity);\n\n    // Insert a new purchase into the purchases table\n    $query = \"INSERT INTO purchases (customer_name, product_id, total_price) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"sdi\", $customerName, $productId, $totalPrice);\n    $stmt->execute();\n\n    // Close the database connection\n    closeDatabaseConnection($conn);\n\n    return true;\n}\n\n// Function to display all purchases\nfunction displayPurchases() {\n    // Connect to the database\n    $conn = connectToDatabase();\n\n    // Get all purchases from the purchases table\n    $query = \"SELECT p.id, p.customer_name, p.product_id, p.total_price FROM purchases p\";\n    $result = $conn->query($query);\n\n    // Display each purchase in a table\n    echo \"<table border='1'>\";\n    echo \"<tr><th>Id</th><th>Customer Name</th><th>Product Id</th><th>Total Price</th></tr>\";\n    while ($row = $result->fetch_assoc()) {\n        echo \"<tr><td>\" . $row[\"id\"] . \"</td><td>\" . $row[\"customer_name\"] . \"</td><td>\" . $row[\"product_id\"] . \"</td><td>\" . $row[\"total_price\"] . \"</td></tr>\";\n    }\n    echo \"</table>\";\n\n    // Close the database connection\n    closeDatabaseConnection($conn);\n}\n\n// Example usage:\nif (isset($_POST['submit'])) {\n    addPurchase($_POST['customerName'], $_POST['productId']);\n} else {\n    displayPurchases();\n}\n?>\n```\n\n**HTML Form:**\n\nCreate an HTML form to input customer name and product ID:\n\n```html\n<form action=\"purchase.php\" method=\"post\">\n    <label for=\"customerName\">Customer Name:</label>\n    <input type=\"text\" id=\"customerName\" name=\"customerName\"><br><br>\n    <label for=\"productId\">Product ID:</label>\n    <input type=\"number\" id=\"productId\" name=\"productId\"><br><br>\n    <button type=\"submit\" name=\"submit\">Add Purchase</button>\n</form>\n```\n\n**Note:**\n\nThis is a basic example and does not include any error handling or security measures. In a real-world application, you should always validate user input and use prepared statements to prevent SQL injection attacks.\n\nAlso, this example assumes that the `products` table has already been populated with data. If you want to add products programmatically, you can create another function in the PHP code to insert new products into the `products` table.\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": [null, "```php\n<?php\n\n// Database Connection Settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Create a database connection\nfunction connectToDatabase() {\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Close the database connection\nfunction closeDatabaseConnection($conn) {\n    $conn->close();\n}\n\n// Function to add a new purchase\nfunction addPurchase($customerName, $productId, $quantity = 1) {\n    // Connect to the database\n    $conn = connectToDatabase();\n\n    // Get the product details from the products table\n    $query = \"SELECT price FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $productId);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    $productPrice = $result->fetch_assoc()[\"price\"];\n\n    // Calculate the total price\n    $totalPrice = ($productPrice * $quantity);\n\n    // Insert a new purchase into the purchases table\n    $query = \"INSERT INTO purchases (customer_name, product_id, total_price) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"sdi\", $customerName, $productId, $totalPrice);\n    $stmt->execute();\n\n    // Close the database connection\n    closeDatabaseConnection($conn);\n\n    return true;\n}\n\n// Function to display all purchases\nfunction displayPurchases() {\n    // Connect to the database\n    $conn = connectToDatabase();\n\n    // Get all purchases from the purchases table\n    $query = \"SELECT p.id, p.customer_name, p.product_id, p.total_price FROM purchases p\";\n    $result = $conn->query($query);\n\n    // Display each purchase in a table\n    echo \"<table border='1'>\";\n    echo \"<tr><th>Id</th><th>Customer Name</th><th>Product Id</th><th>Total Price</th></tr>\";\n    while ($row = $result->fetch_assoc()) {\n        echo \"<tr><td>\" . $row[\"id\"] . \"</td><td>\" . $row[\"customer_name\"] . \"</td><td>\" . $row[\"product_id\"] . \"</td><td>\" . $row[\"total_price\"] . \"</td></tr>\";\n    }\n    echo \"</table>\";\n\n    // Close the database connection\n    closeDatabaseConnection($conn);\n}\n\n// Example usage:\nif (isset($_POST['submit'])) {\n    addPurchase($_POST['customerName'], $_POST['productId']);\n} else {\n    displayPurchases();\n}\n?>\n```", null]}
