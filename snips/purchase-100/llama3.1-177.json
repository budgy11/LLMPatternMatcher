{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a basic purchase functionality in PHP. This example assumes that you have a database with the following schema:\n\n**database schema**\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  order_date DATE DEFAULT CURRENT_DATE,\n  total_cost DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**purchase functionality in PHP**\n\n```php\n// database connection settings\n$host = 'localhost';\n$dbname = 'store';\n$user = 'root';\n$password = '';\n\n// create a PDO instance\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $password);\n\n// function to get all products from the database\nfunction getProducts() {\n  global $conn;\n  $stmt = $conn->prepare('SELECT * FROM products');\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// function to add a new order\nfunction addOrder($customerName, $products) {\n  global $conn;\n  \n  // get the total cost of the order\n  $totalCost = 0;\n  foreach ($products as $product) {\n    $totalCost += $product['price'] * $product['quantity'];\n  }\n  \n  // insert a new order into the database\n  $stmt = $conn->prepare('INSERT INTO orders (customer_name, total_cost) VALUES (?, ?)');\n  $stmt->execute(array($customerName, $totalCost));\n  \n  // get the ID of the newly inserted order\n  $orderId = $conn->lastInsertId();\n  \n  // insert new order items into the database\n  foreach ($products as $product) {\n    $stmt = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)');\n    $stmt->execute(array($orderId, $product['id'], $product['quantity']));\n  }\n  \n  return $orderId;\n}\n\n// function to checkout\nfunction checkout() {\n  global $conn;\n  \n  // get all products from the database\n  $products = getProducts();\n  \n  // display products to user\n  echo \"Available Products:\\n\";\n  foreach ($products as $product) {\n    echo \"$product[name] - \\$$product[price]\\n\";\n  }\n  \n  // ask for customer name and product IDs\n  $customerName = trim(fgets(STDIN));\n  $productIds = explode(',', trim(fgets(STDIN)));\n  \n  // add new order with the given products\n  $orderId = addOrder($customerName, array_map(function($productId) use ($products) {\n    return array(\n      'id' => (int)$productId,\n      'name' => $products[array_search($productId, array_column($products, 'id'))]['name'],\n      'price' => $products[array_search($productId, array_column($products, 'id'))]['price']\n    );\n  }, $productIds));\n  \n  // display order details to user\n  echo \"Order #${orderId} created successfully!\\n\";\n  echo \"Customer Name: $customerName\\n\";\n  echo \"Order Date: \" . date('Y-m-d') . \"\\n\";\n  echo \"Total Cost: \\$$totalCost\\n\";\n}\n\n// call the checkout function\ncheckout();\n```\n\nThis code provides a basic implementation of a purchase functionality in PHP, allowing users to view available products and create new orders. The database is used to store product information, customer details, and order history.\n\nPlease note that this example is simplified for demonstration purposes and does not include error handling or advanced features like payment processing, shipping integration, or user authentication.\n\nAlso, make sure to replace the placeholders in your configuration with actual values suitable for your application.", "code_blocks": [null, "```php\n// database connection settings\n$host = 'localhost';\n$dbname = 'store';\n$user = 'root';\n$password = '';\n\n// create a PDO instance\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $password);\n\n// function to get all products from the database\nfunction getProducts() {\n  global $conn;\n  $stmt = $conn->prepare('SELECT * FROM products');\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// function to add a new order\nfunction addOrder($customerName, $products) {\n  global $conn;\n  \n  // get the total cost of the order\n  $totalCost = 0;\n  foreach ($products as $product) {\n    $totalCost += $product['price'] * $product['quantity'];\n  }\n  \n  // insert a new order into the database\n  $stmt = $conn->prepare('INSERT INTO orders (customer_name, total_cost) VALUES (?, ?)');\n  $stmt->execute(array($customerName, $totalCost));\n  \n  // get the ID of the newly inserted order\n  $orderId = $conn->lastInsertId();\n  \n  // insert new order items into the database\n  foreach ($products as $product) {\n    $stmt = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)');\n    $stmt->execute(array($orderId, $product['id'], $product['quantity']));\n  }\n  \n  return $orderId;\n}\n\n// function to checkout\nfunction checkout() {\n  global $conn;\n  \n  // get all products from the database\n  $products = getProducts();\n  \n  // display products to user\n  echo \"Available Products:\\n\";\n  foreach ($products as $product) {\n    echo \"$product[name] - \\$$product[price]\\n\";\n  }\n  \n  // ask for customer name and product IDs\n  $customerName = trim(fgets(STDIN));\n  $productIds = explode(',', trim(fgets(STDIN)));\n  \n  // add new order with the given products\n  $orderId = addOrder($customerName, array_map(function($productId) use ($products) {\n    return array(\n      'id' => (int)$productId,\n      'name' => $products[array_search($productId, array_column($products, 'id'))]['name'],\n      'price' => $products[array_search($productId, array_column($products, 'id'))]['price']\n    );\n  }, $productIds));\n  \n  // display order details to user\n  echo \"Order #${orderId} created successfully!\\n\";\n  echo \"Customer Name: $customerName\\n\";\n  echo \"Order Date: \" . date('Y-m-d') . \"\\n\";\n  echo \"Total Cost: \\$$totalCost\\n\";\n}\n\n// call the checkout function\ncheckout();\n```"]}
