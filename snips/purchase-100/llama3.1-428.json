{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Database Setup**\n\nFirst, we need to create a database schema to store our products and orders. Let's assume we have the following tables:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  total_price DECIMAL(10,2),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nNow, let's create a PHP script to handle the purchase functionality. We'll use a simple form to collect customer information and product selections.\n\n```php\n// config.php\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Establish database connection\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// purchase.php\nrequire_once 'config.php';\n\nif (isset($_POST['submit'])) {\n  // Validate form data\n  $customer_name = trim($_POST['customer_name']);\n  $product_ids = array_map('intval', explode(',', $_POST['product_ids']));\n  $quantities = array_map('intval', explode(',', $_POST['quantities']));\n\n  if (empty($customer_name) || empty($product_ids) || empty($quantities)) {\n    echo 'Error: Invalid form data';\n    exit;\n  }\n\n  // Calculate total price\n  $total_price = 0;\n  foreach ($product_ids as $i => $product_id) {\n    $price = $conn->query(\"SELECT price FROM products WHERE id = $product_id\")->fetchColumn();\n    if (!$price) {\n      echo 'Error: Product not found';\n      exit;\n    }\n    $total_price += $price * $quantities[$i];\n  }\n\n  // Insert order and order items\n  $order_id = $conn->query(\"INSERT INTO orders (customer_name, total_price) VALUES ('$customer_name', '$total_price')\")->fetchColumn();\n  foreach ($product_ids as $i => $product_id) {\n    $conn->query(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES ($order_id, $product_id, ${quantities[$i]})\");\n  }\n\n  echo 'Order successfully placed!';\n} else {\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase</title>\n</head>\n<body>\n  <h1>Purchase Form</h1>\n  <form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n    <label for=\"product_ids\">Product IDs (comma-separated):</label>\n    <input type=\"text\" id=\"product_ids\" name=\"product_ids\"><br><br>\n    <label for=\"quantities\">Quantities (comma-separated):</label>\n    <input type=\"text\" id=\"quantities\" name=\"quantities\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Place Order\">\n  </form>\n<?php\n}\n```\n\nThis code assumes you have a `config.php` file that contains the database connection settings. The `purchase.php` script handles form submissions, validates data, and inserts orders into the database.\n\n**Note**: This is a basic example and does not include error handling for cases like duplicate product IDs or invalid quantities. You should add additional validation and error handling to suit your specific requirements.\n\nAlso, make sure to replace `'your_database_name'`, `'your_username'`, and `'your_password'` with your actual database credentials.\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": [null, "```php\n// config.php\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Establish database connection\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// purchase.php\nrequire_once 'config.php';\n\nif (isset($_POST['submit'])) {\n  // Validate form data\n  $customer_name = trim($_POST['customer_name']);\n  $product_ids = array_map('intval', explode(',', $_POST['product_ids']));\n  $quantities = array_map('intval', explode(',', $_POST['quantities']));\n\n  if (empty($customer_name) || empty($product_ids) || empty($quantities)) {\n    echo 'Error: Invalid form data';\n    exit;\n  }\n\n  // Calculate total price\n  $total_price = 0;\n  foreach ($product_ids as $i => $product_id) {\n    $price = $conn->query(\"SELECT price FROM products WHERE id = $product_id\")->fetchColumn();\n    if (!$price) {\n      echo 'Error: Product not found';\n      exit;\n    }\n    $total_price += $price * $quantities[$i];\n  }\n\n  // Insert order and order items\n  $order_id = $conn->query(\"INSERT INTO orders (customer_name, total_price) VALUES ('$customer_name', '$total_price')\")->fetchColumn();\n  foreach ($product_ids as $i => $product_id) {\n    $conn->query(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES ($order_id, $product_id, ${quantities[$i]})\");\n  }\n\n  echo 'Order successfully placed!';\n} else {\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase</title>\n</head>\n<body>\n  <h1>Purchase Form</h1>\n  <form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n    <label for=\"product_ids\">Product IDs (comma-separated):</label>\n    <input type=\"text\" id=\"product_ids\" name=\"product_ids\"><br><br>\n    <label for=\"quantities\">Quantities (comma-separated):</label>\n    <input type=\"text\" id=\"quantities\" name=\"quantities\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Place Order\">\n  </form>\n<?php\n}\n```"]}
