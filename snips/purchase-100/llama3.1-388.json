{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**purchase.php**\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'online_store';\n$username = 'root';\n$password = '';\n\ntry {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Function to add a purchase to the database\nfunction add_purchase($user_id, $product_id, $quantity) {\n    global $conn;\n    \n    // Check if product is in stock\n    $stmt = $conn->prepare(\"SELECT quantity FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $product = $stmt->fetch();\n    \n    if ($product['quantity'] >= $quantity) {\n        // Update product stock\n        $update_stmt = $conn->prepare(\"UPDATE products SET quantity = quantity - :quantity WHERE id = :id\");\n        $update_stmt->bindParam(':quantity', $quantity);\n        $update_stmt->bindParam(':id', $product_id);\n        $update_stmt->execute();\n        \n        // Add purchase to database\n        $insert_stmt = $conn->prepare(\"INSERT INTO purchases (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)\");\n        $insert_stmt->bindParam(':user_id', $user_id);\n        $insert_stmt->bindParam(':product_id', $product_id);\n        $insert_stmt->bindParam(':quantity', $quantity);\n        $insert_stmt->execute();\n        \n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get user's purchase history\nfunction get_purchase_history($user_id) {\n    global $conn;\n    \n    // Get all purchases for the user\n    $stmt = $conn->prepare(\"SELECT p.product_id, p.name, p.price, pu.quantity FROM products p JOIN purchases pu ON p.id = pu.product_id WHERE pu.user_id = :id\");\n    $stmt->bindParam(':id', $user_id);\n    $stmt->execute();\n    \n    return $stmt->fetchAll();\n}\n\n// Example usage\nif (isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    $result = add_purchase($_SESSION['user_id'], $product_id, $quantity);\n    if ($result) {\n        echo \"Product added to cart successfully!\";\n    } else {\n        echo \"Error adding product to cart.\";\n    }\n}\n\nif (isset($_POST['view_cart'])) {\n    $user_id = $_SESSION['user_id'];\n    $purchase_history = get_purchase_history($user_id);\n    echo json_encode($purchase_history);\n}\n\n?>\n```\n**index.php**\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'purchase.php';\n\n// Initialize session\nsession_start();\n\n?>\n\n<html>\n<head>\n    <title>Online Store</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n    <input type=\"number\" name=\"quantity\" value=\"1\">\n    <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n\n<form action=\"\" method=\"post\">\n    <button type=\"submit\" name=\"view_cart\">View Cart</button>\n</form>\n\n<?php\n\n// Check if user is logged in\nif (isset($_SESSION['user_id'])) {\n    // Display cart contents\n    $purchase_history = get_purchase_history($_SESSION['user_id']);\n    echo \"<h2>Purchase History:</h2>\";\n    foreach ($purchase_history as $row) {\n        echo \"<p>Product ID: \" . $row['product_id'] . \", Name: \" . $row['name'] . \", Price: $\" . $row['price'] . \", Quantity: \" . $row['quantity'] . \"</p>\";\n    }\n}\n\n?>\n</body>\n</html>\n```\nThis code assumes you have a database table called `products` with columns `id`, `name`, and `price`, and another table called `purchases` with columns `user_id`, `product_id`, and `quantity`. The code also uses sessions to store the user's ID.\n\nTo use this code, create two files: `purchase.php` (the above PHP code) and `index.php` (the above HTML/PHP code). Make sure to update the database connection settings in `purchase.php` to match your own database configuration.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'online_store';\n$username = 'root';\n$password = '';\n\ntry {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Function to add a purchase to the database\nfunction add_purchase($user_id, $product_id, $quantity) {\n    global $conn;\n    \n    // Check if product is in stock\n    $stmt = $conn->prepare(\"SELECT quantity FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $product = $stmt->fetch();\n    \n    if ($product['quantity'] >= $quantity) {\n        // Update product stock\n        $update_stmt = $conn->prepare(\"UPDATE products SET quantity = quantity - :quantity WHERE id = :id\");\n        $update_stmt->bindParam(':quantity', $quantity);\n        $update_stmt->bindParam(':id', $product_id);\n        $update_stmt->execute();\n        \n        // Add purchase to database\n        $insert_stmt = $conn->prepare(\"INSERT INTO purchases (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)\");\n        $insert_stmt->bindParam(':user_id', $user_id);\n        $insert_stmt->bindParam(':product_id', $product_id);\n        $insert_stmt->bindParam(':quantity', $quantity);\n        $insert_stmt->execute();\n        \n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get user's purchase history\nfunction get_purchase_history($user_id) {\n    global $conn;\n    \n    // Get all purchases for the user\n    $stmt = $conn->prepare(\"SELECT p.product_id, p.name, p.price, pu.quantity FROM products p JOIN purchases pu ON p.id = pu.product_id WHERE pu.user_id = :id\");\n    $stmt->bindParam(':id', $user_id);\n    $stmt->execute();\n    \n    return $stmt->fetchAll();\n}\n\n// Example usage\nif (isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    $result = add_purchase($_SESSION['user_id'], $product_id, $quantity);\n    if ($result) {\n        echo \"Product added to cart successfully!\";\n    } else {\n        echo \"Error adding product to cart.\";\n    }\n}\n\nif (isset($_POST['view_cart'])) {\n    $user_id = $_SESSION['user_id'];\n    $purchase_history = get_purchase_history($user_id);\n    echo json_encode($purchase_history);\n}\n\n?>\n```", "```php\n<?php\n\n// Include database connection settings\nrequire_once 'purchase.php';\n\n// Initialize session\nsession_start();\n\n?>\n\n<html>\n<head>\n    <title>Online Store</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n    <input type=\"number\" name=\"quantity\" value=\"1\">\n    <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n\n<form action=\"\" method=\"post\">\n    <button type=\"submit\" name=\"view_cart\">View Cart</button>\n</form>\n\n<?php\n\n// Check if user is logged in\nif (isset($_SESSION['user_id'])) {\n    // Display cart contents\n    $purchase_history = get_purchase_history($_SESSION['user_id']);\n    echo \"<h2>Purchase History:</h2>\";\n    foreach ($purchase_history as $row) {\n        echo \"<p>Product ID: \" . $row['product_id'] . \", Name: \" . $row['name'] . \", Price: $\" . $row['price'] . \", Quantity: \" . $row['quantity'] . \"</p>\";\n    }\n}\n\n?>\n</body>\n</html>\n```"]}
