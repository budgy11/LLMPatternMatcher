{"prompt": "Create a purchase functionality using php", "llm_output": "**Purchase Functionality in PHP**\n\nIn this example, we will create a basic purchase functionality in PHP. We'll use a simple database to store orders and products.\n\n**Database Schema**\n\nLet's assume we have the following tables:\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    total DECIMAL(10, 2),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n**Product Model**\n\nCreate a `product.php` file with the following code:\n\n```php\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    public function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getName() {\n        return $this->name;\n    }\n\n    public function getPrice() {\n        return $this->price;\n    }\n}\n```\n\n**Order Model**\n\nCreate an `order.php` file with the following code:\n\n```php\nclass Order {\n    private $id;\n    private $customer_name;\n    private $total;\n\n    public function __construct($id, $customer_name, $total) {\n        $this->id = $id;\n        $this->customer_name = $customer_name;\n        $this->total = $total;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getCustomerName() {\n        return $this->customer_name;\n    }\n\n    public function getTotal() {\n        return $this->total;\n    }\n}\n```\n\n**Purchase Function**\n\nCreate a `purchase.php` file with the following code:\n\n```php\nrequire_once 'product.php';\nrequire_once 'order.php';\n\nfunction purchase($product_id, $quantity) {\n    // Get product details from database\n    $product = getProduct($product_id);\n\n    if ($product) {\n        // Calculate total cost\n        $total = $product->getPrice() * $quantity;\n\n        // Create new order in database\n        $order_id = createOrder($product->getName(), $total);\n        addProductToOrder($order_id, $product_id, $quantity);\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction getProduct($id) {\n    // Connect to database and retrieve product details\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$id]);\n    $product = $stmt->fetch();\n\n    return new Product($product['id'], $product['name'], $product['price']);\n}\n\nfunction createOrder($customer_name, $total) {\n    // Connect to database and insert new order\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->prepare(\"INSERT INTO orders (customer_name, total) VALUES (?, ?)\");\n    $stmt->execute([$customer_name, $total]);\n\n    return $db->lastInsertId();\n}\n\nfunction addProductToOrder($order_id, $product_id, $quantity) {\n    // Connect to database and insert product into order\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->prepare(\"INSERT INTO order_products (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n    $stmt->execute([$order_id, $product_id, $quantity]);\n}\n```\n\n**Example Usage**\n\n```php\nrequire_once 'purchase.php';\n\n$product_id = 1;\n$quantity = 2;\n\nif (purchase($product_id, $quantity)) {\n    echo \"Purchase successful!\";\n} else {\n    echo \"Purchase failed.\";\n}\n\nfunction displayOrders() {\n    // Connect to database and retrieve all orders\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->query(\"SELECT * FROM orders\");\n    $orders = $stmt->fetchAll();\n\n    foreach ($orders as $order) {\n        echo \"Order ID: {$order['id']}, Customer Name: {$order['customer_name']}, Total: {$order['total']}\";\n\n        // Retrieve products in order\n        $stmt = $db->query(\"SELECT * FROM order_products WHERE order_id = {$order['id']}\");\n        $products = $stmt->fetchAll();\n\n        foreach ($products as $product) {\n            echo \", Product ID: {$product['product_id']}, Quantity: {$product['quantity']}\";\n        }\n\n        echo \"\\n\";\n    }\n}\n\ndisplayOrders();\n```\n\nThis code demonstrates a basic purchase functionality in PHP, including product retrieval, order creation, and adding products to orders. Note that this is a simplified example and you should add error handling and security measures according to your needs.\n\nAlso note that the database connection credentials are hardcoded for simplicity. In a real-world application, you would want to use environment variables or a secure way to store these details.\n\nThis code assumes a simple database schema with products and orders tables. You may need to adjust it based on your specific requirements.", "code_blocks": [null, "```php\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    public function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getName() {\n        return $this->name;\n    }\n\n    public function getPrice() {\n        return $this->price;\n    }\n}\n```", "```php\nclass Order {\n    private $id;\n    private $customer_name;\n    private $total;\n\n    public function __construct($id, $customer_name, $total) {\n        $this->id = $id;\n        $this->customer_name = $customer_name;\n        $this->total = $total;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getCustomerName() {\n        return $this->customer_name;\n    }\n\n    public function getTotal() {\n        return $this->total;\n    }\n}\n```", "```php\nrequire_once 'product.php';\nrequire_once 'order.php';\n\nfunction purchase($product_id, $quantity) {\n    // Get product details from database\n    $product = getProduct($product_id);\n\n    if ($product) {\n        // Calculate total cost\n        $total = $product->getPrice() * $quantity;\n\n        // Create new order in database\n        $order_id = createOrder($product->getName(), $total);\n        addProductToOrder($order_id, $product_id, $quantity);\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction getProduct($id) {\n    // Connect to database and retrieve product details\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$id]);\n    $product = $stmt->fetch();\n\n    return new Product($product['id'], $product['name'], $product['price']);\n}\n\nfunction createOrder($customer_name, $total) {\n    // Connect to database and insert new order\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->prepare(\"INSERT INTO orders (customer_name, total) VALUES (?, ?)\");\n    $stmt->execute([$customer_name, $total]);\n\n    return $db->lastInsertId();\n}\n\nfunction addProductToOrder($order_id, $product_id, $quantity) {\n    // Connect to database and insert product into order\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->prepare(\"INSERT INTO order_products (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n    $stmt->execute([$order_id, $product_id, $quantity]);\n}\n```", "```php\nrequire_once 'purchase.php';\n\n$product_id = 1;\n$quantity = 2;\n\nif (purchase($product_id, $quantity)) {\n    echo \"Purchase successful!\";\n} else {\n    echo \"Purchase failed.\";\n}\n\nfunction displayOrders() {\n    // Connect to database and retrieve all orders\n    $db = new PDO('mysql:host=localhost;dbname=example', 'username', 'password');\n\n    $stmt = $db->query(\"SELECT * FROM orders\");\n    $orders = $stmt->fetchAll();\n\n    foreach ($orders as $order) {\n        echo \"Order ID: {$order['id']}, Customer Name: {$order['customer_name']}, Total: {$order['total']}\";\n\n        // Retrieve products in order\n        $stmt = $db->query(\"SELECT * FROM order_products WHERE order_id = {$order['id']}\");\n        $products = $stmt->fetchAll();\n\n        foreach ($products as $product) {\n            echo \", Product ID: {$product['product_id']}, Quantity: {$product['quantity']}\";\n        }\n\n        echo \"\\n\";\n    }\n}\n\ndisplayOrders();\n```"]}
