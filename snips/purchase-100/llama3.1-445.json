{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, HTML, and MySQL:\n\n**Database Schema:**\n\nFirst, let's create the database schema. We'll need three tables: `products`, `orders`, and `order_items`.\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  total_price DECIMAL(10,2),\n  status ENUM('pending', 'shipped', 'delivered')\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\nNext, let's create the PHP code for the purchase functionality. We'll use a simple form to collect user input and then process it using PHP.\n\n```php\n// config.php (database connection settings)\n$host = 'localhost';\n$dbname = 'mydb';\n$username = 'root';\n$password = '';\n\n// connect to database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// purchase function\nfunction purchase($conn, $customer_name, $product_id, $quantity) {\n  // get product details\n  $stmt = $conn->prepare(\"SELECT price FROM products WHERE id = :id\");\n  $stmt->bindParam(':id', $product_id);\n  $stmt->execute();\n  $price = $stmt->fetchColumn();\n\n  // check if quantity is available\n  $stmt = $conn->prepare(\"SELECT * FROM order_items WHERE product_id = :id AND quantity > :quantity\");\n  $stmt->bindParam(':id', $product_id);\n  $stmt->bindParam(':quantity', $quantity);\n  $stmt->execute();\n  if ($stmt->fetchColumn() !== false) {\n    echo \"Sorry, we don't have enough stock for this product.\";\n    return;\n  }\n\n  // create new order\n  $stmt = $conn->prepare(\"INSERT INTO orders (customer_name, total_price) VALUES (:name, :price)\");\n  $stmt->bindParam(':name', $customer_name);\n  $stmt->bindParam(':price', $price * $quantity);\n  $stmt->execute();\n  $order_id = $conn->lastInsertId();\n\n  // create new order item\n  $stmt = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:id, :pid, :quantity)\");\n  $stmt->bindParam(':id', $order_id);\n  $stmt->bindParam(':pid', $product_id);\n  $stmt->bindParam(':quantity', $quantity);\n  $stmt->execute();\n\n  echo \"Order created successfully!\";\n}\n\n// purchase page\nif (isset($_POST['submit'])) {\n  $customer_name = $_POST['customer_name'];\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  purchase($conn, $customer_name, $product_id, $quantity);\n}\n```\n\n**HTML Form:**\n\nFinally, let's create the HTML form that will collect user input and send it to the PHP script.\n\n```html\n<form action=\"\" method=\"post\">\n  <label for=\"customer_name\">Customer Name:</label>\n  <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n  <label for=\"product_id\">Product ID:</label>\n  <input type=\"number\" id=\"product_id\" name=\"product_id\"><br><br>\n\n  <label for=\"quantity\">Quantity:</label>\n  <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n  <button type=\"submit\" name=\"submit\">Place Order</button>\n</form>\n```\n\nThis is a basic example of how to create a purchase functionality using PHP. You can customize and extend this code as needed to suit your specific requirements.\n\nPlease note that this is a simplified example and does not include any error handling or security measures, such as authentication and authorization. In a real-world application, you should always follow best practices for security and validation.", "code_blocks": [null, "```php\n// config.php (database connection settings)\n$host = 'localhost';\n$dbname = 'mydb';\n$username = 'root';\n$password = '';\n\n// connect to database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// purchase function\nfunction purchase($conn, $customer_name, $product_id, $quantity) {\n  // get product details\n  $stmt = $conn->prepare(\"SELECT price FROM products WHERE id = :id\");\n  $stmt->bindParam(':id', $product_id);\n  $stmt->execute();\n  $price = $stmt->fetchColumn();\n\n  // check if quantity is available\n  $stmt = $conn->prepare(\"SELECT * FROM order_items WHERE product_id = :id AND quantity > :quantity\");\n  $stmt->bindParam(':id', $product_id);\n  $stmt->bindParam(':quantity', $quantity);\n  $stmt->execute();\n  if ($stmt->fetchColumn() !== false) {\n    echo \"Sorry, we don't have enough stock for this product.\";\n    return;\n  }\n\n  // create new order\n  $stmt = $conn->prepare(\"INSERT INTO orders (customer_name, total_price) VALUES (:name, :price)\");\n  $stmt->bindParam(':name', $customer_name);\n  $stmt->bindParam(':price', $price * $quantity);\n  $stmt->execute();\n  $order_id = $conn->lastInsertId();\n\n  // create new order item\n  $stmt = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:id, :pid, :quantity)\");\n  $stmt->bindParam(':id', $order_id);\n  $stmt->bindParam(':pid', $product_id);\n  $stmt->bindParam(':quantity', $quantity);\n  $stmt->execute();\n\n  echo \"Order created successfully!\";\n}\n\n// purchase page\nif (isset($_POST['submit'])) {\n  $customer_name = $_POST['customer_name'];\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  purchase($conn, $customer_name, $product_id, $quantity);\n}\n```", null]}
