{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a basic purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\nsession_start();\n\n// Set default values for the cart\n$_SESSION['cart'] = array();\n$_SESSION['total_cost'] = 0;\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            // Update quantity if product is already in cart\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    \n    // Add new item to cart\n    $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);\n}\n\n// Function to update cart\nfunction update_cart($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    // Find product in cart and update quantity\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    \n    // Find product in cart and remove it\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['product_id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return;\n        }\n    }\n}\n\n// Function to calculate total cost\nfunction calculate_total_cost() {\n    global $_SESSION;\n    \n    // Calculate total cost by summing up all product prices multiplied by quantity\n    $total_cost = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $product_price = // Get product price from database (replace with your own logic)\n        $total_cost += $product_price * $item['quantity'];\n    }\n    \n    $_SESSION['total_cost'] = $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n    global $_SESSION;\n    \n    // Display each item in the cart, including product name and price\n    echo \"<h2>Cart Contents:</h2>\";\n    foreach ($_SESSION['cart'] as $item) {\n        $product_name = // Get product name from database (replace with your own logic)\n        $product_price = // Get product price from database (replace with your own logic)\n        \n        echo \"$product_name ($item[quantity]) x $product_price = $\" . $product_price * $item['quantity'] . \"<br>\";\n    }\n}\n\n// Add item to cart\nadd_item_to_cart(1, 2); // Product ID 1, Quantity 2\n\n// Update cart\nupdate_cart(1, 3);\n\n// Remove item from cart\nremove_item_from_cart(1);\n\n// Display cart contents\ndisplay_cart_contents();\n\n// Calculate total cost\ncalculate_total_cost();\n?>\n```\n**index.php**\n```php\n<?php\ninclude 'cart.php';\n\n// Display cart contents and calculate total cost on page load\ndisplay_cart_contents();\ncalculate_total_cost();\n?>\n\n<!-- HTML for adding items to cart -->\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"product_id\" value=\"1\"> // Product ID 1\n    <input type=\"number\" name=\"quantity\" value=\"2\"> // Quantity 2\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<!-- HTML for updating cart -->\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"product_id\" value=\"1\"> // Product ID 1\n    <input type=\"number\" name=\"new_quantity\" value=\"3\"> // New quantity 3\n    <button type=\"submit\">Update Cart</button>\n</form>\n\n<!-- HTML for removing item from cart -->\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"product_id\" value=\"1\"> // Product ID 1\n    <button type=\"submit\">Remove from Cart</button>\n</form>\n```\nThis is a basic example of how you can create a purchase cart functionality using PHP. You will need to modify the code to fit your specific needs and database schema.\n\n**Example Use Cases:**\n\n* Add item to cart:\n\t+ User selects product ID 1 and quantity 2\n\t+ Server receives POST request with `product_id` = 1 and `quantity` = 2\n\t+ Server adds item to cart using `add_item_to_cart()` function\n* Update cart:\n\t+ User updates quantity of product ID 1 from 2 to 3\n\t+ Server receives POST request with `product_id` = 1 and `new_quantity` = 3\n\t+ Server updates quantity in cart using `update_cart()` function\n* Remove item from cart:\n\t+ User removes product ID 1 from cart\n\t+ Server receives POST request with `product_id` = 1\n\t+ Server removes item from cart using `remove_item_from_cart()` function\n\nNote that this is a simplified example and you should consider implementing additional features such as:\n\n* Validating user input to prevent SQL injection attacks\n* Handling errors and exceptions\n* Implementing payment processing and checkout functionality\n* Storing cart contents in database instead of session variables\n* Displaying cart contents on multiple pages (e.g. product details page, checkout page)\n* Allowing users to save their carts for later use\n\nAlso, this example uses a basic `cart.php` file that contains all the cart-related logic. In a real-world application, you would likely want to separate this logic into different files or modules, depending on your specific needs and design.\n\nLet me know if you have any questions or need further clarification!", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Set default values for the cart\n$_SESSION['cart'] = array();\n$_SESSION['total_cost'] = 0;\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            // Update quantity if product is already in cart\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    \n    // Add new item to cart\n    $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);\n}\n\n// Function to update cart\nfunction update_cart($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    // Find product in cart and update quantity\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    \n    // Find product in cart and remove it\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['product_id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return;\n        }\n    }\n}\n\n// Function to calculate total cost\nfunction calculate_total_cost() {\n    global $_SESSION;\n    \n    // Calculate total cost by summing up all product prices multiplied by quantity\n    $total_cost = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $product_price = // Get product price from database (replace with your own logic)\n        $total_cost += $product_price * $item['quantity'];\n    }\n    \n    $_SESSION['total_cost'] = $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n    global $_SESSION;\n    \n    // Display each item in the cart, including product name and price\n    echo \"<h2>Cart Contents:</h2>\";\n    foreach ($_SESSION['cart'] as $item) {\n        $product_name = // Get product name from database (replace with your own logic)\n        $product_price = // Get product price from database (replace with your own logic)\n        \n        echo \"$product_name ($item[quantity]) x $product_price = $\" . $product_price * $item['quantity'] . \"<br>\";\n    }\n}\n\n// Add item to cart\nadd_item_to_cart(1, 2); // Product ID 1, Quantity 2\n\n// Update cart\nupdate_cart(1, 3);\n\n// Remove item from cart\nremove_item_from_cart(1);\n\n// Display cart contents\ndisplay_cart_contents();\n\n// Calculate total cost\ncalculate_total_cost();\n?>\n```", "```php\n<?php\ninclude 'cart.php';\n\n// Display cart contents and calculate total cost on page load\ndisplay_cart_contents();\ncalculate_total_cost();\n?>\n\n<!-- HTML for adding items to cart -->\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"product_id\" value=\"1\"> // Product ID 1\n    <input type=\"number\" name=\"quantity\" value=\"2\"> // Quantity 2\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<!-- HTML for updating cart -->\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"product_id\" value=\"1\"> // Product ID 1\n    <input type=\"number\" name=\"new_quantity\" value=\"3\"> // New quantity 3\n    <button type=\"submit\">Update Cart</button>\n</form>\n\n<!-- HTML for removing item from cart -->\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"product_id\" value=\"1\"> // Product ID 1\n    <button type=\"submit\">Remove from Cart</button>\n</form>\n```"]}
