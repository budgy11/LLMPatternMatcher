{"prompt": "Create a purchase cart functionality using php", "llm_output": "```php\n<?php\nsession_start();\n\n// --- Database Connection (Replace with your database details) ---\n$host = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$database = \"your_database\";\n$conn = new mysqli($host, $username, $password, $database);\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n// --------------------------------------------------------------\n\n// --- Product Data (Replace with your actual product data source) ---\n$products = array(\n  1 => array('id' => 1, 'name' => 'Laptop', 'price' => 1200, 'description' => 'Powerful laptop for work and play.'),\n  2 => array('id' => 2, 'name' => 'Mouse', 'price' => 25, 'description' => 'Ergonomic wireless mouse.'),\n  3 => array('id' => 3, 'name' => 'Keyboard', 'price' => 75, 'description' => 'Mechanical keyboard for a superior typing experience.'),\n  4 => array('id' => 4, 'name' => 'Monitor', 'price' => 300, 'description' => '27-inch LED monitor.'),\n);\n// --------------------------------------------------------------\n\n// --- Cart Functionality ---\n\n// Initialize cart if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Add to Cart\nfunction addToCart($product_id, $quantity) {\n  global $conn, $products;\n\n  // Check if the product exists\n  if (isset($products[$product_id])) {\n    $product = $products[$product_id];\n\n    // Check if the product is already in the cart\n    if (isset($_SESSION['cart'][$product_id])) {\n      $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n    } else {\n      $_SESSION['cart'][$product_id] = array(\n        'id' => $product_id,\n        'name' => $product['name'],\n        'price' => $product['price'],\n        'quantity' => $quantity,\n        'description' => $product['description']\n      );\n    }\n  } else {\n    echo \"Product ID $product_id not found.\";\n  }\n}\n\n// Remove from Cart\nfunction removeFromCart($product_id) {\n  if (isset($_SESSION['cart'][$product_id])) {\n    unset($_SESSION['cart'][$product_id]);\n  } else {\n    echo \"Product ID $product_id not found in cart.\";\n  }\n}\n\n// Update Quantity in Cart\nfunction updateQuantity($product_id, $quantity) {\n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity'] = $quantity;\n    } else {\n        echo \"Product ID $product_id not found in cart.\";\n    }\n}\n\n// Get Cart Contents\nfunction getCartContents() {\n  return $_SESSION['cart'];\n}\n\n// Calculate Total Cart Value\nfunction calculateTotal() {\n  $total = 0;\n  foreach ($_SESSION['cart'] as $item) {\n    $total += $item['price'] * $item['quantity'];\n  }\n  return $total;\n}\n\n// --- Displaying the Cart ---\n\n// Check if there are items in the cart\n$cart_items = getCartContents();\n$total_value = calculateTotal();\n\necho \"<h1>Shopping Cart</h1>\";\n\nif (empty($cart_items)) {\n    echo \"<p>Your cart is empty.</p>\";\n} else {\n    echo \"<ul>\";\n    foreach ($cart_items as $item) {\n        echo \"<li>\" . $item['name'] . \" - $\" . $item['price'] . \" x \" . $item['quantity'] . \" = $\" . $item['price'] * $item['quantity'] . \"</li>\";\n    }\n    echo \"</ul>\";\n    echo \"<p><strong>Total: $\" . $total_value . \"</strong></p>\";\n}\n\n// --- Example Buttons & Forms ---\n\necho \"<br>\";\necho \"<a href='add_to_cart.php?product_id=1'>Add Laptop to Cart</a> | \";\necho \"<a href='add_to_cart.php?product_id=2'>Add Mouse to Cart</a> | \";\necho \"<a href='add_to_cart.php?product_id=3'>Add Keyboard to Cart</a>\";\n\n?>\n\n<!--\nAdd to Cart Form (add_to_cart.php)\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Add to Cart</title>\n</head>\n<body>\n\n    <h1>Add Product to Cart</h1>\n\n    <form method=\"post\" action=\"shopping_cart.php\">\n        <label for=\"product_id\">Product ID:</label>\n        <input type=\"number\" id=\"product_id\" name=\"product_id\" required>\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" name=\"quantity\" value=\"1\" min=\"1\">\n        <button type=\"submit\">Add to Cart</button>\n    </form>\n\n</body>\n</html>\n-->\n```\n\n**Explanation and Key Improvements:**\n\n1. **Session Management:**\n   - `session_start()`:  Crucial for maintaining cart data across multiple pages.\n   - `$_SESSION['cart']`: This is the session variable that stores the items in the cart.\n\n2. **Database Connection (Placeholder):**\n   - The code includes a placeholder for database interaction. **You must replace the placeholder with your actual database connection details.** This is where you'd fetch product information from your database.\n\n3. **Product Data:**\n   - `$products`:  This array simulates your product data. In a real application, you'd fetch this data from a database or external source.\n\n4. **Cart Functions:**\n   - `addToCart($product_id, $quantity)`: Adds a product to the cart.  Handles adding a new item or increasing the quantity of an existing item.\n   - `removeFromCart($product_id)`: Removes a product from the cart.\n   - `updateQuantity($product_id, $quantity)`:  Updates the quantity of an existing item in the cart.\n   - `getCartContents()`: Returns the contents of the cart (the `$_SESSION['cart']` array).\n   - `calculateTotal()`: Calculates the total value of the cart.\n\n5. **Clearer Display of Cart Items:**\n   - The code now iterates through the cart items and displays them in a list format, including the name, price, quantity, and total price for each item.\n\n6. **Add to Cart Form (Example):**\n   - I've included a basic example of an `add_to_cart.php` page with a form.  This is a separate PHP file.\n\n7. **Form Handling:**\n   - The `add_to_cart.php` file would handle the form submission, call the `addToCart()` function, and redirect the user back to `shopping_cart.php`.\n\n8. **Error Handling (Basic):**\n    - Added some basic error handling (e.g., checking if the product ID exists).\n\n**How to Use This Code:**\n\n1. **Save the Code:** Save the code as `shopping_cart.php`.\n\n2. **Database Setup (Important):**\n   - Replace the placeholder database connection details with your actual database credentials.\n   - Set up a database to store your product information.\n\n3. **Create `add_to_cart.php`:**  Save the example `add_to_cart.php` code as a separate file.\n\n4. **Run `shopping_cart.php`:**  Place `shopping_cart.php` in your web server's document root and access it through your browser (e.g., `http://localhost/shopping_cart.php`).\n\n**Further Development (Important Next Steps):**\n\n* **Database Integration:** This is the *most* important next step.  Fetch product data from your database.\n* **User Authentication:**  Add user accounts and login functionality.\n* **More Robust Error Handling:** Implement more comprehensive error handling (e.g., for invalid input).\n* **Quantity Validation:**  Validate the quantity entered by the user.\n* **Input Sanitization:** Sanitize all user input to prevent security vulnerabilities (SQL injection, XSS).\n* **Style and Design:** Add CSS to improve the visual appearance.\n* **Checkout Process:** Implement a checkout process to handle payment and order processing.\n* **Session Timeout:**  Handle session timeouts to prevent cart data from being lost.\n* **Quantity Limits:** Add limits to quantity per product.\n* **Real-time Updates:**  Consider using JavaScript to update the cart display without requiring a page reload.\n\nThis provides a solid foundation for a basic shopping cart. Remember to address the \"Further Development\" suggestions to create a fully functional e-commerce application.  Good luck!\n", "code_blocks": ["```php\n<?php\nsession_start();\n\n// --- Database Connection (Replace with your database details) ---\n$host = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$database = \"your_database\";\n$conn = new mysqli($host, $username, $password, $database);\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n// --------------------------------------------------------------\n\n// --- Product Data (Replace with your actual product data source) ---\n$products = array(\n  1 => array('id' => 1, 'name' => 'Laptop', 'price' => 1200, 'description' => 'Powerful laptop for work and play.'),\n  2 => array('id' => 2, 'name' => 'Mouse', 'price' => 25, 'description' => 'Ergonomic wireless mouse.'),\n  3 => array('id' => 3, 'name' => 'Keyboard', 'price' => 75, 'description' => 'Mechanical keyboard for a superior typing experience.'),\n  4 => array('id' => 4, 'name' => 'Monitor', 'price' => 300, 'description' => '27-inch LED monitor.'),\n);\n// --------------------------------------------------------------\n\n// --- Cart Functionality ---\n\n// Initialize cart if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Add to Cart\nfunction addToCart($product_id, $quantity) {\n  global $conn, $products;\n\n  // Check if the product exists\n  if (isset($products[$product_id])) {\n    $product = $products[$product_id];\n\n    // Check if the product is already in the cart\n    if (isset($_SESSION['cart'][$product_id])) {\n      $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n    } else {\n      $_SESSION['cart'][$product_id] = array(\n        'id' => $product_id,\n        'name' => $product['name'],\n        'price' => $product['price'],\n        'quantity' => $quantity,\n        'description' => $product['description']\n      );\n    }\n  } else {\n    echo \"Product ID $product_id not found.\";\n  }\n}\n\n// Remove from Cart\nfunction removeFromCart($product_id) {\n  if (isset($_SESSION['cart'][$product_id])) {\n    unset($_SESSION['cart'][$product_id]);\n  } else {\n    echo \"Product ID $product_id not found in cart.\";\n  }\n}\n\n// Update Quantity in Cart\nfunction updateQuantity($product_id, $quantity) {\n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity'] = $quantity;\n    } else {\n        echo \"Product ID $product_id not found in cart.\";\n    }\n}\n\n// Get Cart Contents\nfunction getCartContents() {\n  return $_SESSION['cart'];\n}\n\n// Calculate Total Cart Value\nfunction calculateTotal() {\n  $total = 0;\n  foreach ($_SESSION['cart'] as $item) {\n    $total += $item['price'] * $item['quantity'];\n  }\n  return $total;\n}\n\n// --- Displaying the Cart ---\n\n// Check if there are items in the cart\n$cart_items = getCartContents();\n$total_value = calculateTotal();\n\necho \"<h1>Shopping Cart</h1>\";\n\nif (empty($cart_items)) {\n    echo \"<p>Your cart is empty.</p>\";\n} else {\n    echo \"<ul>\";\n    foreach ($cart_items as $item) {\n        echo \"<li>\" . $item['name'] . \" - $\" . $item['price'] . \" x \" . $item['quantity'] . \" = $\" . $item['price'] * $item['quantity'] . \"</li>\";\n    }\n    echo \"</ul>\";\n    echo \"<p><strong>Total: $\" . $total_value . \"</strong></p>\";\n}\n\n// --- Example Buttons & Forms ---\n\necho \"<br>\";\necho \"<a href='add_to_cart.php?product_id=1'>Add Laptop to Cart</a> | \";\necho \"<a href='add_to_cart.php?product_id=2'>Add Mouse to Cart</a> | \";\necho \"<a href='add_to_cart.php?product_id=3'>Add Keyboard to Cart</a>\";\n\n?>\n\n<!--\nAdd to Cart Form (add_to_cart.php)\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Add to Cart</title>\n</head>\n<body>\n\n    <h1>Add Product to Cart</h1>\n\n    <form method=\"post\" action=\"shopping_cart.php\">\n        <label for=\"product_id\">Product ID:</label>\n        <input type=\"number\" id=\"product_id\" name=\"product_id\" required>\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" name=\"quantity\" value=\"1\" min=\"1\">\n        <button type=\"submit\">Add to Cart</button>\n    </form>\n\n</body>\n</html>\n-->\n```"]}
