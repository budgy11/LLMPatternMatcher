{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function in PHP:\n\n**Database Setup**\n\nFirst, let's assume you have a database with the following table structure:\n```php\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_token_expires TIMESTAMP\n);\n```\n**Forgot Password Function**\n\nCreate a new PHP file, e.g. `forgot_password.php`, and add the following code:\n```php\n<?php\n\n// Set up database connection\n$conn = mysqli_connect('localhost', 'username', 'password', 'database');\n\n// Check connection\nif (!$conn) {\n  die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Define function to send reset token via email\nfunction send_reset_token($email, $token) {\n  // Get user's name from database (optional)\n  $query = \"SELECT name FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if ($result && mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n      $name = $row['name'];\n    }\n  }\n\n  // Send email with reset token\n  $subject = \"Reset Password\";\n  $body = \"\n    Dear $name,\n\n    Your password reset token is: $token\n\n    Please visit our website to reset your password.\n\n    Best regards,\n    [Your Name]\n  \";\n\n  mail($email, $subject, $body);\n}\n\n// Define function to handle forgot password request\nfunction forgot_password() {\n  // Get user input (email)\n  $email = $_POST['email'];\n\n  // Check if email exists in database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if ($result && mysqli_num_rows($result) > 0) {\n    // Get user's ID from database\n    while ($row = mysqli_fetch_assoc($result)) {\n      $user_id = $row['id'];\n    }\n\n    // Generate random reset token and store it in database\n    $token = bin2hex(random_bytes(32));\n    $query = \"UPDATE users SET reset_token = '$token', reset_token_expires = NOW() + INTERVAL 30 MINUTE WHERE id = '$user_id'\";\n    mysqli_query($conn, $query);\n\n    // Send email with reset token\n    send_reset_token($email, $token);\n  } else {\n    echo 'Email not found';\n  }\n}\n\n// Handle form submission (POST)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  forgot_password();\n}\n\n?>\n```\n**Example Use Case**\n\nTo use this code, create a simple HTML form with the following structure:\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n</form>\n```\nWhen the user submits the form, the `forgot_password()` function will be called. If the email exists in the database, a reset token will be generated and stored in the database along with an expiration time (30 minutes). An email will then be sent to the user with the reset token.\n\n**Security Considerations**\n\nPlease note that this is just a basic example and you should consider implementing additional security measures such as:\n\n* Validating user input (e.g. using `filter_var()` or `strip_tags()`)\n* Using prepared statements instead of concatenating SQL queries\n* Hashing passwords (not shown in this example)\n* Implementing a secure password reset process, e.g. requiring the user to enter their email and the reset token sent to them\n\nRemember to replace placeholders with your actual database credentials and table structure!", "code_blocks": ["```php\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_token_expires TIMESTAMP\n);\n```", "```php\n<?php\n\n// Set up database connection\n$conn = mysqli_connect('localhost', 'username', 'password', 'database');\n\n// Check connection\nif (!$conn) {\n  die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Define function to send reset token via email\nfunction send_reset_token($email, $token) {\n  // Get user's name from database (optional)\n  $query = \"SELECT name FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if ($result && mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n      $name = $row['name'];\n    }\n  }\n\n  // Send email with reset token\n  $subject = \"Reset Password\";\n  $body = \"\n    Dear $name,\n\n    Your password reset token is: $token\n\n    Please visit our website to reset your password.\n\n    Best regards,\n    [Your Name]\n  \";\n\n  mail($email, $subject, $body);\n}\n\n// Define function to handle forgot password request\nfunction forgot_password() {\n  // Get user input (email)\n  $email = $_POST['email'];\n\n  // Check if email exists in database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if ($result && mysqli_num_rows($result) > 0) {\n    // Get user's ID from database\n    while ($row = mysqli_fetch_assoc($result)) {\n      $user_id = $row['id'];\n    }\n\n    // Generate random reset token and store it in database\n    $token = bin2hex(random_bytes(32));\n    $query = \"UPDATE users SET reset_token = '$token', reset_token_expires = NOW() + INTERVAL 30 MINUTE WHERE id = '$user_id'\";\n    mysqli_query($conn, $query);\n\n    // Send email with reset token\n    send_reset_token($email, $token);\n  } else {\n    echo 'Email not found';\n  }\n}\n\n// Handle form submission (POST)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  forgot_password();\n}\n\n?>\n```", null]}
