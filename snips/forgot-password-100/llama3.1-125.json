{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP, which sends the user their login credentials via email:\n```php\n<?php\n\n// Database connection settings\n$servername = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"your_database_name\";\n\n// Create a database connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check the connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send email with password reset link\nfunction send_password_reset_email($email, $name) {\n    // Set up mail server settings\n    $from = \"your_email@example.com\";\n    $to = $email;\n    $subject = \"Password Reset Request for Your Account\";\n\n    // Create a random token for the password reset link\n    $token = bin2hex(random_bytes(32));\n\n    // Insert the token into the database (for later verification)\n    $query = \"INSERT INTO password_reset_tokens (user_id, token) VALUES ('', '$token')\";\n    if (!$conn->query($query)) {\n        echo \"Error inserting reset token: \" . $conn->error;\n        exit();\n    }\n\n    // Send email with link to reset password\n    $message = \"<p>Dear $name,</p>\";\n    $message .= \"<p>We have received a request to reset your password.</p>\";\n    $message .= \"<p>To complete the process, please click on this link:</p>\";\n    $message .= \"<a href='\" . htmlspecialchars($_SERVER['PHP_SELF']) . \"?token=$token&email=$email'>Click here to reset your password</a>\";\n    $message .= \"<p>Best regards,</p>\";\n\n    // Send email\n    mail($to, $subject, $message, \"From: $from\");\n\n    return true;\n}\n\n// Check if the user has submitted a request for a new password\nif (isset($_POST['email'])) {\n    // Get user's name and email from database\n    $query = \"SELECT * FROM users WHERE email = '\" . $_POST['email'] . \"'\";\n    if ($result = $conn->query($query)) {\n        $row = $result->fetch_assoc();\n        if ($row) {\n            // Send password reset email\n            send_password_reset_email($_POST['email'], $row['name']);\n        } else {\n            echo \"No user found with that email address.\";\n        }\n    } else {\n        echo \"Error searching for user: \" . $conn->error;\n    }\n}\n\n// If the user has submitted a request, print a success message\nif (isset($_POST['email'])) {\n    echo \"Password reset link sent to your email!\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Form to submit an email address for password reset**\n```html\n<form action=\"<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>\" method=\"post\">\n  <label for=\"email\">Email Address:</label>\n  <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"your_email@example.com\"><br><br>\n  <input type=\"submit\" value=\"Request Password Reset\">\n</form>\n```\n**How it works**\n\n1. The user submits their email address using the form.\n2. If a user with that email address exists, we send an email with a password reset link to their email address using `send_password_reset_email()`.\n3. In the email, we include a random token that will be used later to verify the user's identity when resetting their password.\n4. When the user clicks on the link in the email, they are redirected back to our website with the token and email address as GET parameters.\n5. We use this information to look up the user's name and email from our database and create a new password for them.\n\n**Security Considerations**\n\n* Make sure your `send_password_reset_email()` function is properly configured to prevent spoofing attacks by setting a secure email sending configuration (e.g., using a third-party mail service like Mailgun or Sendgrid).\n* Make sure the token is securely stored in the database and cannot be accessed by unauthorized users.\n* Make sure you are not storing any sensitive information, such as passwords, in plain text.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$servername = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"your_database_name\";\n\n// Create a database connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check the connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send email with password reset link\nfunction send_password_reset_email($email, $name) {\n    // Set up mail server settings\n    $from = \"your_email@example.com\";\n    $to = $email;\n    $subject = \"Password Reset Request for Your Account\";\n\n    // Create a random token for the password reset link\n    $token = bin2hex(random_bytes(32));\n\n    // Insert the token into the database (for later verification)\n    $query = \"INSERT INTO password_reset_tokens (user_id, token) VALUES ('', '$token')\";\n    if (!$conn->query($query)) {\n        echo \"Error inserting reset token: \" . $conn->error;\n        exit();\n    }\n\n    // Send email with link to reset password\n    $message = \"<p>Dear $name,</p>\";\n    $message .= \"<p>We have received a request to reset your password.</p>\";\n    $message .= \"<p>To complete the process, please click on this link:</p>\";\n    $message .= \"<a href='\" . htmlspecialchars($_SERVER['PHP_SELF']) . \"?token=$token&email=$email'>Click here to reset your password</a>\";\n    $message .= \"<p>Best regards,</p>\";\n\n    // Send email\n    mail($to, $subject, $message, \"From: $from\");\n\n    return true;\n}\n\n// Check if the user has submitted a request for a new password\nif (isset($_POST['email'])) {\n    // Get user's name and email from database\n    $query = \"SELECT * FROM users WHERE email = '\" . $_POST['email'] . \"'\";\n    if ($result = $conn->query($query)) {\n        $row = $result->fetch_assoc();\n        if ($row) {\n            // Send password reset email\n            send_password_reset_email($_POST['email'], $row['name']);\n        } else {\n            echo \"No user found with that email address.\";\n        }\n    } else {\n        echo \"Error searching for user: \" . $conn->error;\n    }\n}\n\n// If the user has submitted a request, print a success message\nif (isset($_POST['email'])) {\n    echo \"Password reset link sent to your email!\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
