{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" functionality in PHP:\n\n**Note:** This example uses a simple MySQL database to store user credentials, but you should consider using a more secure method for storing passwords, such as bcrypt.\n\n**Database Schema:**\n\nCreate a table called `users` with the following columns:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password VARCHAR(255)\n);\n```\n**Forgot Password Functionality:**\n\n**Step 1: Create a \"forgot password\" form**\n\nCreate an HTML form that collects the user's email address:\n```html\n<form action=\"forgot-password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <input type=\"submit\" value=\"Send password reset link\">\n</form>\n```\n**Step 2: Handle the forgot password form submission**\n\nCreate a PHP script called `forgot-password.php` that will handle the form submission:\n```php\n<?php\n\n// Define constants for database connection and other settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get email from form submission\n  $email = $_POST['email'];\n\n  // Query database to check if user exists\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    // Get user's ID and other details from result\n    while ($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n      $username = $row['username'];\n\n      // Generate a random password reset token\n      $token = bin2hex(random_bytes(32));\n\n      // Store the token in the database (you should use a more secure method to store passwords)\n      $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'\";\n      $conn->query($query);\n\n      // Send an email with the password reset link\n      sendPasswordResetEmail($email, $username, $token);\n    }\n  } else {\n    echo 'No user found with that email address.';\n  }\n\n  // Close database connection\n  $conn->close();\n} else {\n  // Display the forgot password form if it's not a post request\n  ?>\n  <form action=\"forgot-password.php\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Send password reset link\">\n  </form>\n  <?php\n}\n\n// Function to send an email with the password reset link\nfunction sendPasswordResetEmail($email, $username, $token) {\n  // Define email settings (e.g. SMTP server, username, password)\n  define('EMAIL_HOST', 'smtp.example.com');\n  define('EMAIL_USERNAME', 'your_email_username');\n  define('EMAIL_PASSWORD', 'your_email_password');\n\n  // Set up the email headers\n  $headers = \"From: no-reply@example.com\\r\\n\";\n  $headers .= \"Reply-To: no-reply@example.com\\r\\n\";\n\n  // Define the email body (you can customize this as needed)\n  $emailBody = \"\n  Dear $username,\n\n  To reset your password, click on the following link:\n\n  http://example.com/reset-password.php?token=$token\n\n  Best regards,\n  The Example Team\n  \";\n\n  // Send the email using PHPMailer or a similar library (you can use sendmail too)\n  mail($email, 'Password Reset Link', $emailBody, $headers);\n}\n```\n**Step 3: Handle password reset requests**\n\nCreate a new PHP script called `reset-password.php` that will handle the password reset link:\n```php\n<?php\n\n// Define constants for database connection and other settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get the password reset token from the URL query string\n  $token = $_GET['token'];\n\n  // Query database to check if the token is valid\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  // Check if the token is valid (you should use a more secure method to verify tokens)\n  if ($result->num_rows > 0) {\n    // Get user's ID and other details from result\n    while ($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n      $username = $row['username'];\n\n      // Prompt the user for a new password (you should use a more secure method to store passwords)\n      echo 'Enter your new password: ';\n      $newPassword = $_POST['new_password'];\n\n      // Update the user's password in the database\n      $query = \"UPDATE users SET password = '$newPassword' WHERE id = '$userId'\";\n      $conn->query($query);\n\n      // Clear the password reset token from the database (you should use a more secure method to store passwords)\n      $query = \"UPDATE users SET password_reset_token = NULL WHERE id = '$userId'\";\n      $conn->query($query);\n    }\n  } else {\n    echo 'Invalid password reset link.';\n  }\n\n  // Close database connection\n  $conn->close();\n} else {\n  // Display the password reset form if it's not a post request\n  ?>\n  <form action=\"reset-password.php\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <input type=\"submit\" value=\"Reset Password\">\n  </form>\n  <?php\n}\n\n?>\n```\nThis example demonstrates a basic \"forgot password\" functionality, but keep in mind that storing passwords securely and verifying tokens is more complex than this example.", "code_blocks": [null, null, "```php\n<?php\n\n// Define constants for database connection and other settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get email from form submission\n  $email = $_POST['email'];\n\n  // Query database to check if user exists\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    // Get user's ID and other details from result\n    while ($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n      $username = $row['username'];\n\n      // Generate a random password reset token\n      $token = bin2hex(random_bytes(32));\n\n      // Store the token in the database (you should use a more secure method to store passwords)\n      $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'\";\n      $conn->query($query);\n\n      // Send an email with the password reset link\n      sendPasswordResetEmail($email, $username, $token);\n    }\n  } else {\n    echo 'No user found with that email address.';\n  }\n\n  // Close database connection\n  $conn->close();\n} else {\n  // Display the forgot password form if it's not a post request\n  ?>\n  <form action=\"forgot-password.php\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Send password reset link\">\n  </form>\n  <?php\n}\n\n// Function to send an email with the password reset link\nfunction sendPasswordResetEmail($email, $username, $token) {\n  // Define email settings (e.g. SMTP server, username, password)\n  define('EMAIL_HOST', 'smtp.example.com');\n  define('EMAIL_USERNAME', 'your_email_username');\n  define('EMAIL_PASSWORD', 'your_email_password');\n\n  // Set up the email headers\n  $headers = \"From: no-reply@example.com\\r\\n\";\n  $headers .= \"Reply-To: no-reply@example.com\\r\\n\";\n\n  // Define the email body (you can customize this as needed)\n  $emailBody = \"\n  Dear $username,\n\n  To reset your password, click on the following link:\n\n  http://example.com/reset-password.php?token=$token\n\n  Best regards,\n  The Example Team\n  \";\n\n  // Send the email using PHPMailer or a similar library (you can use sendmail too)\n  mail($email, 'Password Reset Link', $emailBody, $headers);\n}\n```", "```php\n<?php\n\n// Define constants for database connection and other settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get the password reset token from the URL query string\n  $token = $_GET['token'];\n\n  // Query database to check if the token is valid\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  // Check if the token is valid (you should use a more secure method to verify tokens)\n  if ($result->num_rows > 0) {\n    // Get user's ID and other details from result\n    while ($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n      $username = $row['username'];\n\n      // Prompt the user for a new password (you should use a more secure method to store passwords)\n      echo 'Enter your new password: ';\n      $newPassword = $_POST['new_password'];\n\n      // Update the user's password in the database\n      $query = \"UPDATE users SET password = '$newPassword' WHERE id = '$userId'\";\n      $conn->query($query);\n\n      // Clear the password reset token from the database (you should use a more secure method to store passwords)\n      $query = \"UPDATE users SET password_reset_token = NULL WHERE id = '$userId'\";\n      $conn->query($query);\n    }\n  } else {\n    echo 'Invalid password reset link.';\n  }\n\n  // Close database connection\n  $conn->close();\n} else {\n  // Display the password reset form if it's not a post request\n  ?>\n  <form action=\"reset-password.php\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <input type=\"submit\" value=\"Reset Password\">\n  </form>\n  <?php\n}\n\n?>\n```"]}
