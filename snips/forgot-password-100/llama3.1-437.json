{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"forgot password\" function in PHP:\n\n**password_recovery.php**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n\n// Function to send password recovery email\nfunction sendRecoveryEmail($email) {\n  $token = bin2hex(random_bytes(32));\n  $query = \"UPDATE users SET recovery_token = :token WHERE email = :email\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':token', $token);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  // Send email with token\n  $subject = \"Reset your password\";\n  $body = \"\n    <p>Hello, please click on the following link to reset your password:</p>\n    <p><a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>\n  \";\n  mail($email, $subject, $body);\n\n  return $token;\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get email from form data\n  $email = $_POST['email'];\n\n  // Check if user exists and send recovery token\n  $query = \"SELECT * FROM users WHERE email = :email\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Send recovery email\n    $token = sendRecoveryEmail($email);\n\n    // Display success message\n    echo \"A password reset link has been sent to your email.\";\n  } else {\n    // Display error message\n    echo \"User not found.\";\n  }\n}\n\n?>\n\n<!-- Form for entering email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Recovery Email</button>\n</form>\n```\n**reset-password.php**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n\n// Function to verify recovery token and reset password\nfunction resetPassword($token) {\n  $query = \"SELECT * FROM users WHERE recovery_token = :token\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Reset password\n    $newPassword = 'your_new_password';\n    $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n\n    $query = \"UPDATE users SET password = :password WHERE recovery_token = :token\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':password', $hashPassword);\n    $stmt->bindParam(':token', $token);\n    $stmt->execute();\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get token from URL parameter\n  $token = $_GET['token'];\n\n  // Verify recovery token and reset password\n  if (resetPassword($token)) {\n    echo \"Your password has been successfully reset.\";\n  } else {\n    echo \"Invalid token.\";\n  }\n}\n\n?>\n```\n**How it works:**\n\n1. The user submits their email address through the `password_recovery.php` form.\n2. The script sends an email with a recovery token to the user's email address using the `sendRecoveryEmail()` function.\n3. The user clicks on the link in the email, which redirects them to the `reset-password.php` page with the recovery token as a URL parameter.\n4. The script verifies the recovery token and resets the password for the corresponding user account using the `resetPassword()` function.\n\nNote that this is just an example implementation, and you should modify it to fit your specific requirements. Additionally, make sure to implement proper security measures, such as hashing passwords and validating user input.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n\n// Function to send password recovery email\nfunction sendRecoveryEmail($email) {\n  $token = bin2hex(random_bytes(32));\n  $query = \"UPDATE users SET recovery_token = :token WHERE email = :email\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':token', $token);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  // Send email with token\n  $subject = \"Reset your password\";\n  $body = \"\n    <p>Hello, please click on the following link to reset your password:</p>\n    <p><a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>\n  \";\n  mail($email, $subject, $body);\n\n  return $token;\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get email from form data\n  $email = $_POST['email'];\n\n  // Check if user exists and send recovery token\n  $query = \"SELECT * FROM users WHERE email = :email\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Send recovery email\n    $token = sendRecoveryEmail($email);\n\n    // Display success message\n    echo \"A password reset link has been sent to your email.\";\n  } else {\n    // Display error message\n    echo \"User not found.\";\n  }\n}\n\n?>\n\n<!-- Form for entering email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Recovery Email</button>\n</form>\n```", "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n\n// Function to verify recovery token and reset password\nfunction resetPassword($token) {\n  $query = \"SELECT * FROM users WHERE recovery_token = :token\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Reset password\n    $newPassword = 'your_new_password';\n    $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n\n    $query = \"UPDATE users SET password = :password WHERE recovery_token = :token\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':password', $hashPassword);\n    $stmt->bindParam(':token', $token);\n    $stmt->execute();\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get token from URL parameter\n  $token = $_GET['token'];\n\n  // Verify recovery token and reset password\n  if (resetPassword($token)) {\n    echo \"Your password has been successfully reset.\";\n  } else {\n    echo \"Invalid token.\";\n  }\n}\n\n?>\n```"]}
