{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a forgotten password function in PHP:\n\n**password_reset.php**\n```php\n<?php\n// Define the email address for password reset emails\n$admin_email = 'your-admin-email@example.com';\n\n// Check if the user has submitted the form\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get the username or email from the form submission\n    $username_or_email = $_POST['username_or_email'];\n\n    // Query the database to retrieve the user's information\n    try {\n        $conn = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_database_username', 'your_database_password');\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n        $stmt->bindParam(':username', $username_or_email);\n        $stmt->bindParam(':email', $username_or_email);\n        $stmt->execute();\n        $user_data = $stmt->fetch();\n\n        if ($user_data) {\n            // Generate a random password\n            $new_password = bin2hex(random_bytes(16));\n\n            // Update the user's password in the database\n            $update_stmt = $conn->prepare(\"UPDATE users SET password = :password WHERE id = :id\");\n            $update_stmt->bindParam(':password', $new_password);\n            $update_stmt->bindParam(':id', $user_data['id']);\n            $update_stmt->execute();\n\n            // Send an email to the user with their new password\n            send_reset_email($admin_email, $username_or_email, $new_password);\n\n            echo \"Your new password has been sent to your email address.\";\n        } else {\n            echo \"Username or email not found.\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n    }\n}\n\n// Function to send a reset email\nfunction send_reset_email($admin_email, $username_or_email, $new_password) {\n    $to = $username_or_email;\n    $subject = 'Password Reset';\n    $body = \"Your new password is: $new_password\";\n    mail($to, $subject, $body, 'From: ' . $admin_email);\n}\n?>\n```\nThis script assumes you have a MySQL database with a `users` table that contains the user's username and email. It also assumes you have a mail server set up to send emails.\n\n**How it works**\n\n1. The user submits the forgotten password form, which sends a POST request to this script.\n2. The script checks if the user has submitted the form by checking the `$_SERVER['REQUEST_METHOD']` variable.\n3. If the form has been submitted, the script queries the database to retrieve the user's information based on their username or email.\n4. If the user is found in the database, the script generates a random password and updates it in the database for that user.\n5. The script sends an email to the user with their new password using the `send_reset_email` function.\n\n**Security notes**\n\n* Make sure to store the new password securely in your database, such as by hashing it with a salt value.\n* Consider implementing additional security measures, such as rate limiting or CAPTCHA verification, to prevent brute-force attacks on your password reset system.\n* Use HTTPS to encrypt data transmitted between the client and server.\n\n**HTML form example**\n\nHere is an example of what the forgotten password form might look like in HTML:\n```html\n<form action=\"password_reset.php\" method=\"post\">\n    <label for=\"username_or_email\">Username or Email:</label>\n    <input type=\"text\" id=\"username_or_email\" name=\"username_or_email\">\n    <button type=\"submit\">Reset Password</button>\n</form>\n```\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": ["```php\n<?php\n// Define the email address for password reset emails\n$admin_email = 'your-admin-email@example.com';\n\n// Check if the user has submitted the form\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get the username or email from the form submission\n    $username_or_email = $_POST['username_or_email'];\n\n    // Query the database to retrieve the user's information\n    try {\n        $conn = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_database_username', 'your_database_password');\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n        $stmt->bindParam(':username', $username_or_email);\n        $stmt->bindParam(':email', $username_or_email);\n        $stmt->execute();\n        $user_data = $stmt->fetch();\n\n        if ($user_data) {\n            // Generate a random password\n            $new_password = bin2hex(random_bytes(16));\n\n            // Update the user's password in the database\n            $update_stmt = $conn->prepare(\"UPDATE users SET password = :password WHERE id = :id\");\n            $update_stmt->bindParam(':password', $new_password);\n            $update_stmt->bindParam(':id', $user_data['id']);\n            $update_stmt->execute();\n\n            // Send an email to the user with their new password\n            send_reset_email($admin_email, $username_or_email, $new_password);\n\n            echo \"Your new password has been sent to your email address.\";\n        } else {\n            echo \"Username or email not found.\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n    }\n}\n\n// Function to send a reset email\nfunction send_reset_email($admin_email, $username_or_email, $new_password) {\n    $to = $username_or_email;\n    $subject = 'Password Reset';\n    $body = \"Your new password is: $new_password\";\n    mail($to, $subject, $body, 'From: ' . $admin_email);\n}\n?>\n```", null]}
