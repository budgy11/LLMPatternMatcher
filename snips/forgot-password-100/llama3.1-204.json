{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a forgot password function in PHP:\n\n**Database Schema**\n\nAssuming you have a `users` table with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_expires TIMESTAMP\n);\n```\n**PHP Code**\n\nCreate a new PHP file, e.g. `forgot_password.php`, and add the following code:\n```php\n<?php\n\n// Define constants for email configuration\ndefine('EMAIL_FROM', 'your-email@example.com');\ndefine('EMAIL_PASSWORD', 'your-password');\n\n// Include required files\nrequire_once 'db.php'; // Your database connection script\nrequire_once 'vendor/autoload.php'; // If using composer, include the autoloader\n\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\Exception;\n\n// Function to send email with reset link\nfunction sendResetEmail($email) {\n  $mail = new PHPMailer(true);\n\n  try {\n    // Set up email configuration\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->SMTPAuth = true;\n    $mail->Username = EMAIL_FROM;\n    $mail->Password = EMAIL_PASSWORD;\n    $mail->SMTPSecure = 'tls';\n    $mail->Port = 587;\n\n    // Set up email content\n    $subject = 'Reset your password';\n    $body = 'Click this link to reset your password: <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $resetToken . '\">Reset Password</a>';\n\n    // Send email\n    $mail->setFrom(EMAIL_FROM, 'Your Name');\n    $mail->addAddress($email);\n    $mail->isHTML(true);\n    $mail->Subject = $subject;\n    $mail->Body = $body;\n\n    $mail->send();\n  } catch (Exception $e) {\n    echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;\n  }\n}\n\n// Function to handle forgot password form submission\nfunction forgotPassword() {\n  if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Check email exists in database\n    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->execute([':email' => $email]);\n\n    $user = $stmt->fetch();\n\n    if ($user) {\n      // Generate reset token and store it in database\n      $resetToken = bin2hex(random_bytes(32));\n      $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n\n      $stmt = $db->prepare('UPDATE users SET reset_token = :token, reset_expires = :expires WHERE id = :id');\n      $stmt->execute([':token' => $resetToken, ':expires' => $expires, ':id' => $user['id']]);\n\n      // Send email with reset link\n      sendResetEmail($email);\n\n      echo 'An email has been sent to your account. Please follow the instructions in the email to reset your password.';\n    } else {\n      echo 'Email not found in database.';\n    }\n  }\n}\n\n// Call forgotPassword function if form submitted\nforgotPassword();\n\n?>\n```\n**Explanation**\n\nThis code does the following:\n\n1. It checks if a form has been submitted (via `$_SERVER['REQUEST_METHOD'] == 'POST'`).\n2. If a form has been submitted, it extracts the email from the submission.\n3. It checks if an account exists with the provided email in the database.\n4. If an account is found, it generates a reset token and stores it in the database along with an expiration time (1 hour from now).\n5. It sends an email to the user's account with a link to reset their password.\n\n**Reset Password Link**\n\nThe email sent to the user includes a link like this:\n```html\n<a href=\"<?= $_SERVER['HTTP_HOST'] ?>/reset_password.php?token=<?= $resetToken ?>\">Reset Password</a>\n```\nThis link points to `reset_password.php`, which will be handled by another PHP script.\n\n**Security Notes**\n\n* Make sure to store the reset token securely in the database, using a secure hashing algorithm like SHA-256.\n* Set the expiration time for the reset token to a short period of time (e.g. 1 hour) to prevent abuse.\n* Use HTTPS when sending emails with sensitive information.\n* Use a reliable email library like PHPMailer to send emails.\n* Make sure to validate user input and sanitize it before using it in SQL queries or other functions.\n\n**Additional Steps**\n\nTo complete the forgot password functionality, you'll need to create a `reset_password.php` script that handles the reset link submission. This script will:\n\n1. Check if the reset token is valid (i.e. exists in the database and hasn't expired).\n2. Prompt the user to enter their new password.\n3. Hash the new password using a secure hashing algorithm like SHA-256.\n4. Update the user's account with the new password hash.\n\nThis is just an example code, and you should adapt it to your specific use case and requirements. Additionally, make sure to follow best practices for security and coding standards.", "code_blocks": [null, "```php\n<?php\n\n// Define constants for email configuration\ndefine('EMAIL_FROM', 'your-email@example.com');\ndefine('EMAIL_PASSWORD', 'your-password');\n\n// Include required files\nrequire_once 'db.php'; // Your database connection script\nrequire_once 'vendor/autoload.php'; // If using composer, include the autoloader\n\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\Exception;\n\n// Function to send email with reset link\nfunction sendResetEmail($email) {\n  $mail = new PHPMailer(true);\n\n  try {\n    // Set up email configuration\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->SMTPAuth = true;\n    $mail->Username = EMAIL_FROM;\n    $mail->Password = EMAIL_PASSWORD;\n    $mail->SMTPSecure = 'tls';\n    $mail->Port = 587;\n\n    // Set up email content\n    $subject = 'Reset your password';\n    $body = 'Click this link to reset your password: <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $resetToken . '\">Reset Password</a>';\n\n    // Send email\n    $mail->setFrom(EMAIL_FROM, 'Your Name');\n    $mail->addAddress($email);\n    $mail->isHTML(true);\n    $mail->Subject = $subject;\n    $mail->Body = $body;\n\n    $mail->send();\n  } catch (Exception $e) {\n    echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;\n  }\n}\n\n// Function to handle forgot password form submission\nfunction forgotPassword() {\n  if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Check email exists in database\n    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->execute([':email' => $email]);\n\n    $user = $stmt->fetch();\n\n    if ($user) {\n      // Generate reset token and store it in database\n      $resetToken = bin2hex(random_bytes(32));\n      $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n\n      $stmt = $db->prepare('UPDATE users SET reset_token = :token, reset_expires = :expires WHERE id = :id');\n      $stmt->execute([':token' => $resetToken, ':expires' => $expires, ':id' => $user['id']]);\n\n      // Send email with reset link\n      sendResetEmail($email);\n\n      echo 'An email has been sent to your account. Please follow the instructions in the email to reset your password.';\n    } else {\n      echo 'Email not found in database.';\n    }\n  }\n}\n\n// Call forgotPassword function if form submitted\nforgotPassword();\n\n?>\n```", null]}
