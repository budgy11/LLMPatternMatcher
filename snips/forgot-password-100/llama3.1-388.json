{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"forgot password\" function using PHP:\n\n**Database Setup**\n\nFirst, let's assume we have a database table `users` with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\nWe will use the `email` column to store the user's email address and the `password_hash` column to store a hashed version of their password.\n\n**PHP Code**\n\nCreate a new PHP file (e.g. `forgot_password.php`) with the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to generate password reset link\nfunction generateResetLink($email)\n{\n    // Generate a random token\n    $token = bin2hex(random_bytes(16));\n\n    // Insert token into database\n    $sql = \"INSERT INTO reset_tokens (email, token) VALUES ('$email', '$token')\";\n    if ($conn->query($sql) === TRUE) {\n        return $token;\n    } else {\n        return NULL; // Token already exists or query failed\n    }\n}\n\n// Function to send password reset email\nfunction sendResetEmail($email, $token)\n{\n    // Your SMTP settings here (e.g. using PHPMailer or mail())\n    // ...\n\n    // Email body with reset link\n    $body = \"Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>\";\n\n    // Send email\n    mail($email, 'Password Reset', $body);\n}\n\n// Forgot password form handling\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n\n    // Check if email exists in database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Generate reset token and send password reset email\n        $token = generateResetLink($email);\n        if ($token !== NULL) {\n            sendResetEmail($email, $token);\n            echo \"Password reset link sent to your email.\";\n        } else {\n            echo \"Error generating reset token.\";\n        }\n    } else {\n        echo \"Email not found in database.\";\n    }\n}\n\n?>\n```\nThis code assumes you have a `reset_tokens` table in your database with the following structure:\n```sql\nCREATE TABLE reset_tokens (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  token VARCHAR(32) NOT NULL\n);\n```\n**How it works**\n\n1. When the user submits the forgot password form, the script checks if their email exists in the database.\n2. If the email is found, a random token is generated and inserted into the `reset_tokens` table with the user's email address.\n3. The script then sends an email to the user with a reset link containing the generated token.\n4. The user can click on this link to access the password reset page (e.g. `reset_password.php`) and enter their new password.\n\n**Security notes**\n\n* Always use prepared statements or parameterized queries to prevent SQL injection attacks.\n* Use a secure hash function (e.g. bcrypt) to store passwords in your database.\n* Implement email verification using a double opt-in process to ensure only authorized users can reset their passwords.\n* Use a secure way to generate random tokens, such as `random_bytes()` or `openssl_random_pseudo_bytes()`.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to generate password reset link\nfunction generateResetLink($email)\n{\n    // Generate a random token\n    $token = bin2hex(random_bytes(16));\n\n    // Insert token into database\n    $sql = \"INSERT INTO reset_tokens (email, token) VALUES ('$email', '$token')\";\n    if ($conn->query($sql) === TRUE) {\n        return $token;\n    } else {\n        return NULL; // Token already exists or query failed\n    }\n}\n\n// Function to send password reset email\nfunction sendResetEmail($email, $token)\n{\n    // Your SMTP settings here (e.g. using PHPMailer or mail())\n    // ...\n\n    // Email body with reset link\n    $body = \"Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>\";\n\n    // Send email\n    mail($email, 'Password Reset', $body);\n}\n\n// Forgot password form handling\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n\n    // Check if email exists in database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Generate reset token and send password reset email\n        $token = generateResetLink($email);\n        if ($token !== NULL) {\n            sendResetEmail($email, $token);\n            echo \"Password reset link sent to your email.\";\n        } else {\n            echo \"Error generating reset token.\";\n        }\n    } else {\n        echo \"Email not found in database.\";\n    }\n}\n\n?>\n```", null]}
