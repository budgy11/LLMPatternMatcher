{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" functionality in PHP:\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**Forgot Password Functionality:**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'https://example.com');\ndefine('EMAIL_FROM', 'noreply@example.com');\n\n// Function to send email with password reset link\nfunction sendPasswordResetEmail($email) {\n  // Get user data from database\n  $user = getUserData($email);\n\n  if (!$user) {\n    return false;\n  }\n\n  // Generate random token for password reset\n  $token = bin2hex(random_bytes(32));\n\n  // Store token in database\n  updateUserData($email, array('password_reset_token' => $token));\n\n  // Send email with password reset link\n  $subject = 'Password Reset Link';\n  $message = \"\n    <p>Dear user,</p>\n    <p>To reset your password, click on the following link:</p>\n    <a href='\" . SITE_URL . \"/reset-password?email=\" . $email . \"&token=\" . $token . \"'>Reset Password</a>\n    <p>Please note that this link will expire in 1 hour.</p>\n  \";\n\n  mail($user['email'], $subject, $message, 'Content-Type: text/html; charset=UTF-8');\n\n  return true;\n}\n\n// Function to update user data\nfunction updateUserData($email, $data) {\n  // Update database\n  // (Assuming MySQLi extension is used)\n  $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n  $stmt = $mysqli->prepare(\"UPDATE users SET password_reset_token = ?, email_verified_at = ? WHERE email = ?\");\n  $stmt->bind_param('sss', $data['password_reset_token'], $data['email_verified_at'], $email);\n  $stmt->execute();\n}\n\n// Function to get user data\nfunction getUserData($email) {\n  // Get database connection (assuming MySQLi extension is used)\n  $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n  $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ?\");\n  $stmt->bind_param('s', $email);\n  $stmt->execute();\n  return $stmt->get_result()->fetch_assoc();\n}\n\n// Forgot password form\nif (isset($_POST['forgot_password'])) {\n  // Get user input data\n  $email = $_POST['email'];\n\n  // Send email with password reset link\n  if (sendPasswordResetEmail($email)) {\n    echo 'A password reset link has been sent to your email.';\n  } else {\n    echo 'Error sending password reset link. Please try again later.';\n  }\n}\n\n?>\n```\n**Explanation:**\n\n1. The `sendPasswordResetEmail` function takes an email address as input and sends a password reset link to the user's email.\n2. The `updateUserData` function updates the user data in the database with the new password reset token.\n3. The `getUserData` function retrieves the user data from the database based on the email address.\n\n**Usage:**\n\n1. Create a new file called `reset-password.php` and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'https://example.com');\n\n// Function to reset password\nfunction resetPassword($email, $token) {\n  // Get user data from database\n  $user = getUserData($email);\n\n  if (!$user || $user['password_reset_token'] != $token) {\n    return false;\n  }\n\n  // Generate new random password\n  $new_password = bin2hex(random_bytes(32));\n\n  // Update user data in database\n  updateUserData($email, array('password' => hash('sha256', $new_password)));\n\n  return true;\n}\n\n// Reset password form\nif (isset($_GET['email']) && isset($_GET['token'])) {\n  // Get user input data\n  $email = $_GET['email'];\n  $token = $_GET['token'];\n\n  // Reset password\n  if (resetPassword($email, $token)) {\n    echo 'Your password has been reset successfully.';\n  } else {\n    echo 'Error resetting password. Please try again later.';\n  }\n}\n\n?>\n```\n**Example Use Case:**\n\n1. The user clicks on the \"Forgot Password\" link and enters their email address.\n2. The `sendPasswordResetEmail` function sends a password reset link to the user's email with a unique token.\n3. The user clicks on the password reset link, which redirects them to the `reset-password.php` page with the email address and token as GET parameters.\n4. The `resetPassword` function checks if the token is valid and updates the user data in the database with a new random password.\n\nNote: This is just an example implementation and you should modify it according to your specific requirements and database schema. Additionally, make sure to follow best practices for password security and use a secure method to store and retrieve passwords.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'https://example.com');\ndefine('EMAIL_FROM', 'noreply@example.com');\n\n// Function to send email with password reset link\nfunction sendPasswordResetEmail($email) {\n  // Get user data from database\n  $user = getUserData($email);\n\n  if (!$user) {\n    return false;\n  }\n\n  // Generate random token for password reset\n  $token = bin2hex(random_bytes(32));\n\n  // Store token in database\n  updateUserData($email, array('password_reset_token' => $token));\n\n  // Send email with password reset link\n  $subject = 'Password Reset Link';\n  $message = \"\n    <p>Dear user,</p>\n    <p>To reset your password, click on the following link:</p>\n    <a href='\" . SITE_URL . \"/reset-password?email=\" . $email . \"&token=\" . $token . \"'>Reset Password</a>\n    <p>Please note that this link will expire in 1 hour.</p>\n  \";\n\n  mail($user['email'], $subject, $message, 'Content-Type: text/html; charset=UTF-8');\n\n  return true;\n}\n\n// Function to update user data\nfunction updateUserData($email, $data) {\n  // Update database\n  // (Assuming MySQLi extension is used)\n  $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n  $stmt = $mysqli->prepare(\"UPDATE users SET password_reset_token = ?, email_verified_at = ? WHERE email = ?\");\n  $stmt->bind_param('sss', $data['password_reset_token'], $data['email_verified_at'], $email);\n  $stmt->execute();\n}\n\n// Function to get user data\nfunction getUserData($email) {\n  // Get database connection (assuming MySQLi extension is used)\n  $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n  $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ?\");\n  $stmt->bind_param('s', $email);\n  $stmt->execute();\n  return $stmt->get_result()->fetch_assoc();\n}\n\n// Forgot password form\nif (isset($_POST['forgot_password'])) {\n  // Get user input data\n  $email = $_POST['email'];\n\n  // Send email with password reset link\n  if (sendPasswordResetEmail($email)) {\n    echo 'A password reset link has been sent to your email.';\n  } else {\n    echo 'Error sending password reset link. Please try again later.';\n  }\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'https://example.com');\n\n// Function to reset password\nfunction resetPassword($email, $token) {\n  // Get user data from database\n  $user = getUserData($email);\n\n  if (!$user || $user['password_reset_token'] != $token) {\n    return false;\n  }\n\n  // Generate new random password\n  $new_password = bin2hex(random_bytes(32));\n\n  // Update user data in database\n  updateUserData($email, array('password' => hash('sha256', $new_password)));\n\n  return true;\n}\n\n// Reset password form\nif (isset($_GET['email']) && isset($_GET['token'])) {\n  // Get user input data\n  $email = $_GET['email'];\n  $token = $_GET['token'];\n\n  // Reset password\n  if (resetPassword($email, $token)) {\n    echo 'Your password has been reset successfully.';\n  } else {\n    echo 'Error resetting password. Please try again later.';\n  }\n}\n\n?>\n```"]}
