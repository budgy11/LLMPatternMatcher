{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" functionality in PHP:\n\n**Database Structure**\n\nWe will assume you have a database table `users` with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n```\n**PHP Code**\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendPasswordResetEmail($email, $resetLink)\n{\n    // Email configuration (replace with your own email settings)\n    $to = $email;\n    $subject = 'Forgot Password';\n    $message = '<p>Please click on the following link to reset your password:</p><p>' . $resetLink . '</p>';\n    $headers = \"From: no-reply@example.com\\r\\n\";\n    $headers .= \"Content-Type: text/html; charset=ISO-8859-1\\r\\n\";\n\n    mail($to, $subject, $message, $headers);\n}\n\nfunction checkPasswordResetToken($token)\n{\n    // Retrieve user data from database\n    $query = \"SELECT * FROM users WHERE password_reset_token = '\" . mysqli_real_escape_string($conn, $token) . \"'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return true; // Token is valid\n    } else {\n        return false; // Token is invalid or expired\n    }\n}\n\nfunction resetPassword($new_password)\n{\n    // Retrieve user data from database\n    $query = \"UPDATE users SET password_hash = '\" . mysqli_real_escape_string($conn, password_hash($new_password, PASSWORD_DEFAULT)) . \"' WHERE id = '1'\"; // Replace with actual user ID\n    $result = $conn->query($query);\n\n    if ($result) {\n        return true; // Password reset successful\n    } else {\n        return false; // Password reset failed\n    }\n}\n\n// Handle forgot password form submission\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $email = $_POST['email'];\n\n    // Check if email is registered in database\n    $query = \"SELECT * FROM users WHERE email = '\" . mysqli_real_escape_string($conn, $email) . \"'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Generate password reset token\n        $token = bin2hex(random_bytes(16));\n\n        // Update user data in database with new token\n        $query = \"UPDATE users SET password_reset_token = '\" . mysqli_real_escape_string($conn, $token) . \"' WHERE email = '\" . mysqli_real_escape_string($conn, $email) . \"'\";\n        $result = $conn->query($query);\n\n        if ($result) {\n            // Send email with reset link\n            $resetLink = \"https://example.com/reset-password/\" . $token;\n            sendPasswordResetEmail($email, $resetLink);\n            echo \"An email has been sent to your registered email address with a password reset link.\";\n        } else {\n            echo \"Failed to update user data.\";\n        }\n    } else {\n        echo \"No account found with this email address.\";\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Explanation**\n\n1. The code uses the `mysqli` extension to connect to a MySQL database.\n2. It defines three functions: `sendPasswordResetEmail`, `checkPasswordResetToken`, and `resetPassword`.\n3. When the user submits the forgot password form, it checks if the email is registered in the database.\n4. If the email is found, it generates a random password reset token and updates the user's data in the database with this new token.\n5. It then sends an email to the user's registered email address with a link to reset their password.\n6. The `checkPasswordResetToken` function verifies if the provided token is valid by querying the database for the corresponding user data.\n7. The `resetPassword` function updates the user's password hash in the database using the new password.\n\n**Example Use Cases**\n\n* User submits the forgot password form with their email address: \"john@example.com\"\n* System checks if the email is registered and finds it\n* System generates a random token (e.g., \"1234567890abcdef\") and updates user data in database with this new token\n* System sends an email to \"john@example.com\" with a reset link (e.g., \"https://example.com/reset-password/1234567890abcdef\")\n* User clicks on the reset link, which redirects them to the password reset page\n* User enters their new password and submits the form: \"new_password\"\n* System checks if the token is valid using `checkPasswordResetToken` function\n* If valid, it updates user data in database with the new password hash using `resetPassword` function\n\nNote that this code assumes you have a basic understanding of PHP and MySQL. You should adjust the configuration variables (e.g., `$db_host`, `$db_username`) to match your own database settings. Additionally, make sure to replace the placeholder email addresses and links with actual values for production use.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendPasswordResetEmail($email, $resetLink)\n{\n    // Email configuration (replace with your own email settings)\n    $to = $email;\n    $subject = 'Forgot Password';\n    $message = '<p>Please click on the following link to reset your password:</p><p>' . $resetLink . '</p>';\n    $headers = \"From: no-reply@example.com\\r\\n\";\n    $headers .= \"Content-Type: text/html; charset=ISO-8859-1\\r\\n\";\n\n    mail($to, $subject, $message, $headers);\n}\n\nfunction checkPasswordResetToken($token)\n{\n    // Retrieve user data from database\n    $query = \"SELECT * FROM users WHERE password_reset_token = '\" . mysqli_real_escape_string($conn, $token) . \"'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return true; // Token is valid\n    } else {\n        return false; // Token is invalid or expired\n    }\n}\n\nfunction resetPassword($new_password)\n{\n    // Retrieve user data from database\n    $query = \"UPDATE users SET password_hash = '\" . mysqli_real_escape_string($conn, password_hash($new_password, PASSWORD_DEFAULT)) . \"' WHERE id = '1'\"; // Replace with actual user ID\n    $result = $conn->query($query);\n\n    if ($result) {\n        return true; // Password reset successful\n    } else {\n        return false; // Password reset failed\n    }\n}\n\n// Handle forgot password form submission\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $email = $_POST['email'];\n\n    // Check if email is registered in database\n    $query = \"SELECT * FROM users WHERE email = '\" . mysqli_real_escape_string($conn, $email) . \"'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Generate password reset token\n        $token = bin2hex(random_bytes(16));\n\n        // Update user data in database with new token\n        $query = \"UPDATE users SET password_reset_token = '\" . mysqli_real_escape_string($conn, $token) . \"' WHERE email = '\" . mysqli_real_escape_string($conn, $email) . \"'\";\n        $result = $conn->query($query);\n\n        if ($result) {\n            // Send email with reset link\n            $resetLink = \"https://example.com/reset-password/\" . $token;\n            sendPasswordResetEmail($email, $resetLink);\n            echo \"An email has been sent to your registered email address with a password reset link.\";\n        } else {\n            echo \"Failed to update user data.\";\n        }\n    } else {\n        echo \"No account found with this email address.\";\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```"]}
