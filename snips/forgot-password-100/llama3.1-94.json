{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of a basic forgot password function using PHP:\n\n**Forgot Password Function**\n\n```php\n<?php\n\n// Configuration\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Database Connection\ntry {\n    $conn = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Forgot Password Form\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get user input\n    $email = $_POST['email'];\n\n    // Validate email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n\n    // Query database to retrieve user data\n    try {\n        $stmt = $conn->prepare('SELECT * FROM users WHERE email = :email');\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n\n        if ($stmt->rowCount() == 0) {\n            echo 'Email not found';\n            exit;\n        }\n\n        // Retrieve user data\n        $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        // Generate a random password\n        $new_password = bin2hex(random_bytes(16));\n\n        // Update user password in database\n        try {\n            $stmt = $conn->prepare('UPDATE users SET password = :password WHERE email = :email');\n            $stmt->bindParam(':password', $new_password);\n            $stmt->bindParam(':email', $email);\n            $stmt->execute();\n\n            // Send password reset email\n            sendPasswordResetEmail($user, $new_password);\n\n            echo 'New password sent to your email';\n        } catch (PDOException $e) {\n            echo 'Error updating password: ' . $e->getMessage();\n        }\n    } catch (PDOException $e) {\n        echo 'Error retrieving user data: ' . $e->getMessage();\n    }\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($user, $new_password)\n{\n    // Configuration\n    $from_email = 'your_email@example.com';\n    $subject = 'Your new password';\n\n    // Email template\n    $email_template = \"\n        Dear {name},\n\n        Your new password is: {$new_password}\n\n        Best regards,\n        Your Name\n    \";\n\n    // Replace placeholders in email template\n    $email_template = str_replace('{name}', $user['name'], $email_template);\n\n    // Send email using PHPMailer (or your preferred email library)\n    $mail = new PHPMailer;\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->Username = $from_email;\n    $mail->Password = 'your_password';\n    $mail->setFrom($from_email, 'Your Name');\n    $mail->addAddress($user['email']);\n    $mail->Subject = $subject;\n    $mail->Body = $email_template;\n\n    if (!$mail->send()) {\n        echo 'Error sending email: ' . $mail->ErrorInfo;\n    }\n}\n```\n\n**Example Use Case**\n\n1. Create a new PHP file (e.g., `forgot_password.php`) and copy the above code into it.\n2. Update the configuration variables at the top of the script with your own database credentials and email settings.\n3. Open a web browser and navigate to the URL of the `forgot_password.php` file.\n4. Fill in the email address field and submit the form.\n5. If the email is valid, you should receive an email with a new password.\n\n**Security Considerations**\n\n* Make sure to store passwords securely using a strong hashing algorithm (e.g., bcrypt).\n* Use a secure method for sending emails (e.g., PHPMailer or your preferred email library).\n* Validate user input thoroughly to prevent SQL injection attacks.\n* Limit login attempts to prevent brute-force attacks.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Database Connection\ntry {\n    $conn = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Forgot Password Form\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get user input\n    $email = $_POST['email'];\n\n    // Validate email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n\n    // Query database to retrieve user data\n    try {\n        $stmt = $conn->prepare('SELECT * FROM users WHERE email = :email');\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n\n        if ($stmt->rowCount() == 0) {\n            echo 'Email not found';\n            exit;\n        }\n\n        // Retrieve user data\n        $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        // Generate a random password\n        $new_password = bin2hex(random_bytes(16));\n\n        // Update user password in database\n        try {\n            $stmt = $conn->prepare('UPDATE users SET password = :password WHERE email = :email');\n            $stmt->bindParam(':password', $new_password);\n            $stmt->bindParam(':email', $email);\n            $stmt->execute();\n\n            // Send password reset email\n            sendPasswordResetEmail($user, $new_password);\n\n            echo 'New password sent to your email';\n        } catch (PDOException $e) {\n            echo 'Error updating password: ' . $e->getMessage();\n        }\n    } catch (PDOException $e) {\n        echo 'Error retrieving user data: ' . $e->getMessage();\n    }\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($user, $new_password)\n{\n    // Configuration\n    $from_email = 'your_email@example.com';\n    $subject = 'Your new password';\n\n    // Email template\n    $email_template = \"\n        Dear {name},\n\n        Your new password is: {$new_password}\n\n        Best regards,\n        Your Name\n    \";\n\n    // Replace placeholders in email template\n    $email_template = str_replace('{name}', $user['name'], $email_template);\n\n    // Send email using PHPMailer (or your preferred email library)\n    $mail = new PHPMailer;\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->Username = $from_email;\n    $mail->Password = 'your_password';\n    $mail->setFrom($from_email, 'Your Name');\n    $mail->addAddress($user['email']);\n    $mail->Subject = $subject;\n    $mail->Body = $email_template;\n\n    if (!$mail->send()) {\n        echo 'Error sending email: ' . $mail->ErrorInfo;\n    }\n}\n```"]}
