{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" functionality in PHP. This example assumes that you have a `users` table with columns for `id`, `username`, and `email`.\n\n**Step 1: Create the Forgot Password Form**\n\nCreate a form on your website where users can enter their email address to receive a password reset link.\n\n```php\n<!-- forgot-password.php -->\n<form action=\"forgot-password-process.php\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```\n\n**Step 2: Process the Forgot Password Request**\n\nCreate a PHP script that processes the forgot password request.\n\n```php\n// forgot-password-process.php\nrequire_once 'db.php'; // Your database connection script\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Query to retrieve user data\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        // User exists, generate a password reset token and send it via email\n\n        // Generate a random token\n        $token = bin2hex(random_bytes(32));\n\n        // Update the user's row with the new token\n        $sql = \"UPDATE users SET token = '$token' WHERE email = '$email'\";\n        mysqli_query($conn, $sql);\n\n        // Send password reset link via email (using a library like PHPMailer)\n        // For simplicity, we'll just echo out the link here\n        echo \"Password reset link sent to your email. Please click on it to reset your password:<br>\";\n        echo \"<a href='reset-password.php?token=$token'>$token</a>\";\n\n    } else {\n        echo 'No account found with that email.';\n    }\n}\n```\n\n**Step 3: Create the Password Reset Form**\n\nCreate a form where users can enter their new password after clicking on the password reset link.\n\n```php\n<!-- reset-password.php -->\n<?php\nrequire_once 'db.php'; // Your database connection script\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $token = $_GET['token'];\n    $new_password = $_POST['new_password'];\n\n    // Verify token and update user's password\n    $sql = \"SELECT * FROM users WHERE token = '$token'\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Update the user's row with the new password\n        $sql = \"UPDATE users SET password = '$new_password' WHERE token = '$token'\";\n        mysqli_query($conn, $sql);\n        \n        echo 'Password updated successfully!';\n    \n    } else {\n        echo 'Invalid token. Please try again.';\n    }\n}\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```\n\n**Note:**\n\n1. In a real-world application, you should never store passwords in plain text. Always hash and salt them.\n2. Use prepared statements to prevent SQL injection attacks.\n3. This example assumes that you have already created the `users` table with columns for `id`, `username`, `email`, and `token`. You'll need to modify the database connection script (`db.php`) to match your database schema.\n\nThis is a basic example, and in a real-world application, you should consider using more secure practices such as:\n\n* Using a library like PHPMailer for sending emails\n* Validating user input on both forms\n* Handling potential errors and exceptions properly\n* Implementing password hashing and salting to prevent plain-text passwords.", "code_blocks": ["```php\n<!-- forgot-password.php -->\n<form action=\"forgot-password-process.php\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```", "```php\n// forgot-password-process.php\nrequire_once 'db.php'; // Your database connection script\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Query to retrieve user data\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        // User exists, generate a password reset token and send it via email\n\n        // Generate a random token\n        $token = bin2hex(random_bytes(32));\n\n        // Update the user's row with the new token\n        $sql = \"UPDATE users SET token = '$token' WHERE email = '$email'\";\n        mysqli_query($conn, $sql);\n\n        // Send password reset link via email (using a library like PHPMailer)\n        // For simplicity, we'll just echo out the link here\n        echo \"Password reset link sent to your email. Please click on it to reset your password:<br>\";\n        echo \"<a href='reset-password.php?token=$token'>$token</a>\";\n\n    } else {\n        echo 'No account found with that email.';\n    }\n}\n```", "```php\n<!-- reset-password.php -->\n<?php\nrequire_once 'db.php'; // Your database connection script\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $token = $_GET['token'];\n    $new_password = $_POST['new_password'];\n\n    // Verify token and update user's password\n    $sql = \"SELECT * FROM users WHERE token = '$token'\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Update the user's row with the new password\n        $sql = \"UPDATE users SET password = '$new_password' WHERE token = '$token'\";\n        mysqli_query($conn, $sql);\n        \n        echo 'Password updated successfully!';\n    \n    } else {\n        echo 'Invalid token. Please try again.';\n    }\n}\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```"]}
