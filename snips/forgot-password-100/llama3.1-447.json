{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of a \"Forgot Password\" functionality using PHP:\n\n**Database Schema**\n\nLet's assume we have a table named `users` with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n```\n**PHP Code**\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUser = 'root';\n$dbPass = '';\n$dbName = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Form data\n$usernameOrEmail = $_POST['username_or_email'];\n$email = $_POST['email'];\n\n// Validate input\nif (empty($usernameOrEmail) || empty($email)) {\n  echo 'Please enter both username or email and email address.';\n  exit;\n}\n\n// Prepare query to select user\n$stmt = $conn->prepare(\"SELECT id, password_hash FROM users WHERE (username = ? OR email = ?)\");\n$stmt->bind_param('ss', $usernameOrEmail, $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\n// Check if user exists\nif ($result->num_rows == 0) {\n  echo 'Username or email not found.';\n  exit;\n}\n\n// Get user data\n$userData = $result->fetch_assoc();\n\n// Generate password reset token and store it in database\n$token = bin2hex(random_bytes(32));\n$stmt = $conn->prepare(\"UPDATE users SET password_reset_token = ? WHERE id = ?\");\n$stmt->bind_param('si', $token, $userData['id']);\n$stmt->execute();\n\n// Send email with password reset link\n$emailBody = 'Click this link to reset your password: http://your-website.com/reset-password?token=' . $token;\nmail($email, 'Reset Password', $emailBody);\n\necho 'Password reset email sent successfully. Please check your inbox and follow the instructions.';\n$conn->close();\n\n?>\n```\n**Explanation**\n\n1. We first connect to our database using `mysqli`.\n2. We validate user input (username or email and email address) to ensure it's not empty.\n3. We prepare a query to select the user from the database, binding `$usernameOrEmail` and `$email` as parameters to prevent SQL injection.\n4. If no user is found with the given username or email, we display an error message and exit.\n5. We get the user data (ID and password hash) from the result set.\n6. We generate a random 32-character token using `bin2hex(random_bytes(32))`, which will be used to reset the password.\n7. We update the user's record in the database with the new password reset token, binding `$token` and the user's ID as parameters.\n8. We send an email to the user with a link to reset their password, using `mail()`. The link includes the password reset token.\n\n**Security Notes**\n\n1. This example uses `mysqli`, which is not recommended for new projects. Consider using PDO or a framework like Laravel instead.\n2. Passwords are stored as hashes (not plaintext), but this example doesn't handle password hashing properly. Use a library like `password_hash()` and `password_verify()` to securely store and verify passwords.\n3. This example uses a simple token-based system, which is vulnerable to token guessing attacks. Consider using a more secure approach, such as token encryption or verification with a third-party service.\n\nThis should give you an idea of how to implement a \"Forgot Password\" functionality in PHP. Remember to adapt it to your specific needs and security requirements!", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUser = 'root';\n$dbPass = '';\n$dbName = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Form data\n$usernameOrEmail = $_POST['username_or_email'];\n$email = $_POST['email'];\n\n// Validate input\nif (empty($usernameOrEmail) || empty($email)) {\n  echo 'Please enter both username or email and email address.';\n  exit;\n}\n\n// Prepare query to select user\n$stmt = $conn->prepare(\"SELECT id, password_hash FROM users WHERE (username = ? OR email = ?)\");\n$stmt->bind_param('ss', $usernameOrEmail, $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\n// Check if user exists\nif ($result->num_rows == 0) {\n  echo 'Username or email not found.';\n  exit;\n}\n\n// Get user data\n$userData = $result->fetch_assoc();\n\n// Generate password reset token and store it in database\n$token = bin2hex(random_bytes(32));\n$stmt = $conn->prepare(\"UPDATE users SET password_reset_token = ? WHERE id = ?\");\n$stmt->bind_param('si', $token, $userData['id']);\n$stmt->execute();\n\n// Send email with password reset link\n$emailBody = 'Click this link to reset your password: http://your-website.com/reset-password?token=' . $token;\nmail($email, 'Reset Password', $emailBody);\n\necho 'Password reset email sent successfully. Please check your inbox and follow the instructions.';\n$conn->close();\n\n?>\n```"]}
