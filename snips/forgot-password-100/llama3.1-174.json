{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"forgot password\" function in PHP that emails the user their new password:\n\n**Note:** This is a basic example and you should consider implementing additional security measures such as password hashing, email verification, and rate limiting.\n\n**password_recovery.php**\n```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'http://example.com');\ndefine('ADMIN_EMAIL', 'admin@example.com');\n\n// Function to send email with new password\nfunction send_password_reset_email($username, $new_password) {\n  // Set up email headers\n  $subject = \"Password reset for $username\";\n  $headers = \"From: admin@example.com\\r\\n\" .\n             \"MIME-Version: 1.0\\r\\n\" .\n             \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n  // Create new password and encode it as a URL-safe string\n  $encoded_password = urlencode($new_password);\n\n  // Email body\n  $email_body = \"\n    <html>\n      <body>\n        <h1>Password reset for $username</h1>\n        <p>Your new password is: <strong>$encoded_password</strong></p>\n        <p>Please log in with your new credentials.</p>\n      </body>\n    </html>\n  \";\n\n  // Send email\n  mail(SITE_URL, ADMIN_EMAIL, $subject, $headers);\n}\n\n// Function to handle forgot password form submission\nfunction handle_forgot_password($username) {\n  // Check if username is valid (e.g. not empty)\n  if (!empty($username)) {\n    // Look up user in database (simplified for example purposes)\n    $user = array(\n      'username' => $username,\n      'email' => 'user@example.com',\n    );\n\n    // Generate new password\n    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 10);\n\n    // Send email with new password\n    send_password_reset_email($username, $new_password);\n\n    // Log success (optional)\n    error_log(\"Password reset sent to $username\");\n  } else {\n    // Handle invalid username input (e.g. display error message)\n    echo \"Invalid username\";\n  }\n}\n\n// Example usage:\nif (isset($_POST['forgot_password'])) {\n  handle_forgot_password($_POST['username']);\n} else {\n  // Display forgot password form\n  ?>\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <input type=\"submit\" value=\"Forgot Password\" name=\"forgot_password\">\n  </form>\n  <?php\n}\n```\n**How it works:**\n\n1. The user submits the forgot password form with their username.\n2. The `handle_forgot_password` function checks if the input is valid and looks up the user in the database (simplified for example purposes).\n3. If the user exists, a new password is generated using the `md5` and `uniqid` functions.\n4. The `send_password_reset_email` function creates an email with the new password encoded as a URL-safe string and sends it to the admin's email address.\n5. The email contains a link to log in with the new credentials.\n\n**Security notes:**\n\n* This is a basic example and you should consider implementing additional security measures such as password hashing (e.g. `password_hash`) and rate limiting.\n* You should also store the user's email address securely, rather than hardcoding it as shown here.\n* Be sure to test this code thoroughly and ensure that it works correctly in all cases.\n\nPlease let me know if you have any questions or need further clarification!", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'http://example.com');\ndefine('ADMIN_EMAIL', 'admin@example.com');\n\n// Function to send email with new password\nfunction send_password_reset_email($username, $new_password) {\n  // Set up email headers\n  $subject = \"Password reset for $username\";\n  $headers = \"From: admin@example.com\\r\\n\" .\n             \"MIME-Version: 1.0\\r\\n\" .\n             \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n  // Create new password and encode it as a URL-safe string\n  $encoded_password = urlencode($new_password);\n\n  // Email body\n  $email_body = \"\n    <html>\n      <body>\n        <h1>Password reset for $username</h1>\n        <p>Your new password is: <strong>$encoded_password</strong></p>\n        <p>Please log in with your new credentials.</p>\n      </body>\n    </html>\n  \";\n\n  // Send email\n  mail(SITE_URL, ADMIN_EMAIL, $subject, $headers);\n}\n\n// Function to handle forgot password form submission\nfunction handle_forgot_password($username) {\n  // Check if username is valid (e.g. not empty)\n  if (!empty($username)) {\n    // Look up user in database (simplified for example purposes)\n    $user = array(\n      'username' => $username,\n      'email' => 'user@example.com',\n    );\n\n    // Generate new password\n    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 10);\n\n    // Send email with new password\n    send_password_reset_email($username, $new_password);\n\n    // Log success (optional)\n    error_log(\"Password reset sent to $username\");\n  } else {\n    // Handle invalid username input (e.g. display error message)\n    echo \"Invalid username\";\n  }\n}\n\n// Example usage:\nif (isset($_POST['forgot_password'])) {\n  handle_forgot_password($_POST['username']);\n} else {\n  // Display forgot password form\n  ?>\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <input type=\"submit\" value=\"Forgot Password\" name=\"forgot_password\">\n  </form>\n  <?php\n}\n```"]}
