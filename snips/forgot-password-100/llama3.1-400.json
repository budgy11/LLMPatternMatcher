{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**Database Schema**\n\nAssuming we have the following database schema for users:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n**Forgot Password Function (PHP)**\n\nCreate a new PHP file called `forgot_password.php` with the following code:\n```php\n<?php\nrequire_once 'config.php'; // include your database connection settings\n\n// Set email and password reset URLs\n$emailResetUrl = 'http://example.com/reset-password';\n$passwordResetUrl = 'http://example.com/new-password';\n\n// Handle form submission\nif (isset($_POST['email'])) {\n  $email = $_POST['email'];\n\n  // Validate email\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email address\";\n    exit;\n  }\n\n  // Check if user exists in database\n  $query = \"SELECT * FROM users WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo \"Email address not found\";\n    exit;\n  }\n\n  // Generate password reset token\n  $token = bin2hex(random_bytes(32));\n\n  // Store password reset token in database\n  $query = \"UPDATE users SET password_reset_token = :token WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':token', $token);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  // Send password reset email\n  $subject = 'Reset your password';\n  $message = \"Click here to reset your password: <a href='$passwordResetUrl?token=$token'>$passwordResetUrl</a>\";\n  mail($email, $subject, $message);\n\n  echo \"Email sent with password reset link\";\n} else {\n  // Display form\n  ?>\n  <form action=\"\" method=\"post\">\n    Email address:\n    <input type=\"email\" name=\"email\">\n    <button type=\"submit\">Send me a new password</button>\n  </form>\n  <?php\n}\n```\n**Reset Password Function (PHP)**\n\nCreate a new PHP file called `reset-password.php` with the following code:\n```php\n<?php\nrequire_once 'config.php'; // include your database connection settings\n\n// Handle form submission\nif (isset($_POST['new_password'])) {\n  $email = $_GET['token'];\n  $passwordResetToken = $_POST['token'];\n\n  // Validate password reset token\n  $query = \"SELECT * FROM users WHERE email = :email AND password_reset_token = :token\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $passwordResetToken);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo \"Invalid password reset token\";\n    exit;\n  }\n\n  // Update user password\n  $newPasswordHash = password_hash($_POST['new_password'], PASSWORD_DEFAULT);\n  $query = \"UPDATE users SET password = :password WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':password', $newPasswordHash);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  echo \"Password updated successfully!\";\n} else {\n  // Display form\n  ?>\n  <form action=\"\" method=\"post\">\n    New password:\n    <input type=\"password\" name=\"new_password\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    <button type=\"submit\">Update my password</button>\n  </form>\n  <?php\n}\n```\n**Notes**\n\n* This example uses the `PDO` extension for database interactions.\n* The `password_reset_token` column is used to store a unique token for each user. When a user requests a password reset, this token is generated and stored in the database. When the user submits their new password, the token is validated and then the user's password is updated.\n* This example assumes you have a `config.php` file that includes your database connection settings.\n* You should adjust the email sending code to use a mail server or service that works for your application.\n\nThis is just an example implementation. You may need to modify it to fit your specific requirements and security needs.", "code_blocks": [null, "```php\n<?php\nrequire_once 'config.php'; // include your database connection settings\n\n// Set email and password reset URLs\n$emailResetUrl = 'http://example.com/reset-password';\n$passwordResetUrl = 'http://example.com/new-password';\n\n// Handle form submission\nif (isset($_POST['email'])) {\n  $email = $_POST['email'];\n\n  // Validate email\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email address\";\n    exit;\n  }\n\n  // Check if user exists in database\n  $query = \"SELECT * FROM users WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo \"Email address not found\";\n    exit;\n  }\n\n  // Generate password reset token\n  $token = bin2hex(random_bytes(32));\n\n  // Store password reset token in database\n  $query = \"UPDATE users SET password_reset_token = :token WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':token', $token);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  // Send password reset email\n  $subject = 'Reset your password';\n  $message = \"Click here to reset your password: <a href='$passwordResetUrl?token=$token'>$passwordResetUrl</a>\";\n  mail($email, $subject, $message);\n\n  echo \"Email sent with password reset link\";\n} else {\n  // Display form\n  ?>\n  <form action=\"\" method=\"post\">\n    Email address:\n    <input type=\"email\" name=\"email\">\n    <button type=\"submit\">Send me a new password</button>\n  </form>\n  <?php\n}\n```", "```php\n<?php\nrequire_once 'config.php'; // include your database connection settings\n\n// Handle form submission\nif (isset($_POST['new_password'])) {\n  $email = $_GET['token'];\n  $passwordResetToken = $_POST['token'];\n\n  // Validate password reset token\n  $query = \"SELECT * FROM users WHERE email = :email AND password_reset_token = :token\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $passwordResetToken);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo \"Invalid password reset token\";\n    exit;\n  }\n\n  // Update user password\n  $newPasswordHash = password_hash($_POST['new_password'], PASSWORD_DEFAULT);\n  $query = \"UPDATE users SET password = :password WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':password', $newPasswordHash);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  echo \"Password updated successfully!\";\n} else {\n  // Display form\n  ?>\n  <form action=\"\" method=\"post\">\n    New password:\n    <input type=\"password\" name=\"new_password\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    <button type=\"submit\">Update my password</button>\n  </form>\n  <?php\n}\n```"]}
