{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255) DEFAULT NULL,\n  reset_expires TIMESTAMP DEFAULT NULL\n);\n```\n**PHP Code:**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('RESET_TOKEN_LENGTH', 32);\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendEmail($to_email, $subject, $message)\n{\n    // Email settings\n    $from_email = 'your_email@example.com';\n    $from_password = 'your_password';\n\n    // Create email message\n    $headers = 'From: ' . $from_email . \"\\r\\n\";\n    $headers .= 'MIME-Version: 1.0' . \"\\r\\n\";\n    $headers .= 'Content-Type: text/html; charset=UTF-8' . \"\\r\\n\";\n\n    // Send email using PHPMailer (not included in this example, but you can use it)\n    mail($to_email, $subject, $message, $headers);\n}\n\nfunction generateResetToken()\n{\n    return bin2hex(random_bytes(RESET_TOKEN_LENGTH));\n}\n\nfunction isValidResetToken($token)\n{\n    global $conn;\n    $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction resetPassword()\n{\n    global $conn;\n\n    // Get user ID from token\n    $token = $_GET['token'];\n    $userId = getUserIdFromToken($token);\n\n    if (!$userId) {\n        echo \"Invalid token\";\n        exit();\n    }\n\n    // Get new password from form data (if submitted)\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $newPassword = trim($_POST['password']);\n        $confirmNewPassword = trim($_POST['confirm_password']);\n\n        if ($newPassword !== $confirmNewPassword) {\n            echo \"Passwords do not match\";\n            exit();\n        }\n\n        // Update user password\n        $query = \"UPDATE users SET password_hash = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?\";\n        $stmt = $conn->prepare($query);\n        $stmt->bind_param('si', password_hash($newPassword, PASSWORD_DEFAULT), $userId);\n\n        if ($stmt->execute()) {\n            echo \"Password updated successfully\";\n        } else {\n            echo \"Error updating password: \" . $stmt->error;\n        }\n    }\n\n    // Render reset form\n    ?>\n    <h1>Reset Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"password\">New Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <label for=\"confirm_password\">Confirm New Password:</label>\n        <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n        <input type=\"hidden\" name=\"token\" value=\"<?php echo $token; ?>\">\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n\nfunction getUserIdFromToken($token)\n{\n    global $conn;\n    $query = \"SELECT id FROM users WHERE reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return $result->fetch_assoc()['id'];\n    }\n\n    return false;\n}\n\nfunction forgotPassword()\n{\n    global $conn;\n\n    // Get user email from form data\n    $email = trim($_POST['email']);\n\n    // Check if user exists\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Generate reset token\n        $resetToken = generateResetToken();\n\n        // Update user reset token and expiration time\n        $query = \"UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = ?\";\n        $stmt = $conn->prepare($query);\n        $stmt->bind_param('ss', $resetToken, $email);\n\n        if ($stmt->execute()) {\n            // Send password reset email\n            $subject = 'Password Reset';\n            $message = '\n                <p>Dear user,</p>\n                <p>You have requested to reset your password. Please click the following link to reset your password:</p>\n                <a href=\"' . $_SERVER['PHP_SELF'] . '?token=' . $resetToken . '\">Reset Password</a>\n                ';\n            sendEmail($email, $subject, $message);\n        }\n    } else {\n        echo \"User not found\";\n    }\n\n    // Render forgot form\n    ?>\n    <h1>Forgot Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n\n// Check if user submitted the forgot form\nif (isset($_POST['forgot'])) {\n    forgotPassword();\n} else {\n    // Render default page\n    ?>\n    <h1>Forgot Password</h1>\n    <p>If you have forgotten your password, please submit the following form.</p>\n    <?php\n}\n\n// Check if user submitted the reset form\nif (isset($_GET['token'])) {\n    $token = $_GET['token'];\n    if (isValidResetToken($token)) {\n        resetPassword();\n    } else {\n        echo \"Invalid token\";\n    }\n}\n```\nThis code creates a forgot password function using PHP that sends an email to the user with a link to reset their password. When the user clicks on the link, they are taken to a page where they can enter their new password.\n\n**Example Use Case:**\n\n1. The user goes to the login page and forgets their password.\n2. They submit the forgot password form with their email address.\n3. The script generates a reset token and sends an email to the user with a link to reset their password.\n4. The user clicks on the link and is taken to the reset password page.\n5. The user enters their new password and submits the form.\n6. The script updates the user's password and resets the reset token.\n\nNote that this code uses a simple password hashing algorithm (password_hash) for demonstration purposes only. In a real-world application, you should use a more secure password hashing algorithm like bcrypt or Argon2. Additionally, this code does not handle errors properly and is meant to be a starting point for your own implementation.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('RESET_TOKEN_LENGTH', 32);\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendEmail($to_email, $subject, $message)\n{\n    // Email settings\n    $from_email = 'your_email@example.com';\n    $from_password = 'your_password';\n\n    // Create email message\n    $headers = 'From: ' . $from_email . \"\\r\\n\";\n    $headers .= 'MIME-Version: 1.0' . \"\\r\\n\";\n    $headers .= 'Content-Type: text/html; charset=UTF-8' . \"\\r\\n\";\n\n    // Send email using PHPMailer (not included in this example, but you can use it)\n    mail($to_email, $subject, $message, $headers);\n}\n\nfunction generateResetToken()\n{\n    return bin2hex(random_bytes(RESET_TOKEN_LENGTH));\n}\n\nfunction isValidResetToken($token)\n{\n    global $conn;\n    $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction resetPassword()\n{\n    global $conn;\n\n    // Get user ID from token\n    $token = $_GET['token'];\n    $userId = getUserIdFromToken($token);\n\n    if (!$userId) {\n        echo \"Invalid token\";\n        exit();\n    }\n\n    // Get new password from form data (if submitted)\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $newPassword = trim($_POST['password']);\n        $confirmNewPassword = trim($_POST['confirm_password']);\n\n        if ($newPassword !== $confirmNewPassword) {\n            echo \"Passwords do not match\";\n            exit();\n        }\n\n        // Update user password\n        $query = \"UPDATE users SET password_hash = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?\";\n        $stmt = $conn->prepare($query);\n        $stmt->bind_param('si', password_hash($newPassword, PASSWORD_DEFAULT), $userId);\n\n        if ($stmt->execute()) {\n            echo \"Password updated successfully\";\n        } else {\n            echo \"Error updating password: \" . $stmt->error;\n        }\n    }\n\n    // Render reset form\n    ?>\n    <h1>Reset Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"password\">New Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <label for=\"confirm_password\">Confirm New Password:</label>\n        <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n        <input type=\"hidden\" name=\"token\" value=\"<?php echo $token; ?>\">\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n\nfunction getUserIdFromToken($token)\n{\n    global $conn;\n    $query = \"SELECT id FROM users WHERE reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return $result->fetch_assoc()['id'];\n    }\n\n    return false;\n}\n\nfunction forgotPassword()\n{\n    global $conn;\n\n    // Get user email from form data\n    $email = trim($_POST['email']);\n\n    // Check if user exists\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Generate reset token\n        $resetToken = generateResetToken();\n\n        // Update user reset token and expiration time\n        $query = \"UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = ?\";\n        $stmt = $conn->prepare($query);\n        $stmt->bind_param('ss', $resetToken, $email);\n\n        if ($stmt->execute()) {\n            // Send password reset email\n            $subject = 'Password Reset';\n            $message = '\n                <p>Dear user,</p>\n                <p>You have requested to reset your password. Please click the following link to reset your password:</p>\n                <a href=\"' . $_SERVER['PHP_SELF'] . '?token=' . $resetToken . '\">Reset Password</a>\n                ';\n            sendEmail($email, $subject, $message);\n        }\n    } else {\n        echo \"User not found\";\n    }\n\n    // Render forgot form\n    ?>\n    <h1>Forgot Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n\n// Check if user submitted the forgot form\nif (isset($_POST['forgot'])) {\n    forgotPassword();\n} else {\n    // Render default page\n    ?>\n    <h1>Forgot Password</h1>\n    <p>If you have forgotten your password, please submit the following form.</p>\n    <?php\n}\n\n// Check if user submitted the reset form\nif (isset($_GET['token'])) {\n    $token = $_GET['token'];\n    if (isValidResetToken($token)) {\n        resetPassword();\n    } else {\n        echo \"Invalid token\";\n    }\n}\n```"]}
