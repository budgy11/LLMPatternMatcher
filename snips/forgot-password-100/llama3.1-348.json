{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" functionality using PHP:\n\n**Step 1: Database Setup**\n\nAssuming you have a MySQL database with a table named `users` that stores user credentials. The `users` table has the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n| reset_token | varchar(255) |\n\n**Step 2: PHP Code**\n\nCreate a new PHP file named `forgot_password.php`. This script will handle the Forgot Password functionality.\n\n```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_db_username';\n$db_password = 'your_db_password';\n$db_name = 'your_db_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get email from form submission\n$email = $_POST['email'];\n\n// Check if email exists in database\n$stmt = $conn->prepare(\"SELECT * FROM users WHERE email = ?\");\n$stmt->bind_param('s', $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Email exists, generate a reset token and send password reset link\n    $user_data = $result->fetch_assoc();\n    $reset_token = bin2hex(random_bytes(32));\n    $update_stmt = $conn->prepare(\"UPDATE users SET reset_token = ? WHERE id = ?\");\n    $update_stmt->bind_param('si', $reset_token, $user_data['id']);\n    $update_stmt->execute();\n\n    // Send password reset email\n    $subject = \"Reset Your Password\";\n    $message = \"\n        <p>Hello $email,</p>\n        <p>Click on the link below to reset your password:</p>\n        <a href='http://your-website.com/reset_password.php?token=$reset_token'>Reset Password</a>\n    \";\n    $headers = \"From: your-email@example.com\";\n    mail($email, $subject, $message, $headers);\n\n    echo \"A password reset email has been sent to your email address.\";\n} else {\n    echo \"Email not found. Please try again.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n\n**Step 3: Password Reset Script**\n\nCreate a new PHP file named `reset_password.php` that will handle the password reset functionality.\n\n```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_db_username';\n$db_password = 'your_db_password';\n$db_name = 'your_db_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get reset token from URL\n$reset_token = $_GET['token'];\n\n// Check if reset token exists in database\n$stmt = $conn->prepare(\"SELECT * FROM users WHERE reset_token = ?\");\n$stmt->bind_param('s', $reset_token);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Reset token exists, update password and reset token\n    $user_data = $result->fetch_assoc();\n    $new_password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    if ($new_password == $confirm_password) {\n        // Update password in database\n        $update_stmt = $conn->prepare(\"UPDATE users SET password = ?, reset_token = '' WHERE id = ?\");\n        $update_stmt->bind_param('si', $new_password, $user_data['id']);\n        $update_stmt->execute();\n\n        echo \"Your password has been successfully updated.\";\n    } else {\n        echo \"Passwords do not match. Please try again.\";\n    }\n} else {\n    echo \"Invalid reset token.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n\n**Step 4: HTML Form**\n\nCreate an HTML form that will allow users to enter their email address and submit it to the `forgot_password.php` script.\n\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```\n\nThat's it! With these scripts, users can now submit their email address to the `forgot_password.php` script, which will send a password reset link to their email address. The user can then click on this link and enter a new password in the `reset_password.php` script.\n\nNote: Make sure to replace `your_db_username`, `your_db_password`, and `your_db_name` with your actual database credentials. Also, make sure to configure the email settings properly to send emails from your website.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_db_username';\n$db_password = 'your_db_password';\n$db_name = 'your_db_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get email from form submission\n$email = $_POST['email'];\n\n// Check if email exists in database\n$stmt = $conn->prepare(\"SELECT * FROM users WHERE email = ?\");\n$stmt->bind_param('s', $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Email exists, generate a reset token and send password reset link\n    $user_data = $result->fetch_assoc();\n    $reset_token = bin2hex(random_bytes(32));\n    $update_stmt = $conn->prepare(\"UPDATE users SET reset_token = ? WHERE id = ?\");\n    $update_stmt->bind_param('si', $reset_token, $user_data['id']);\n    $update_stmt->execute();\n\n    // Send password reset email\n    $subject = \"Reset Your Password\";\n    $message = \"\n        <p>Hello $email,</p>\n        <p>Click on the link below to reset your password:</p>\n        <a href='http://your-website.com/reset_password.php?token=$reset_token'>Reset Password</a>\n    \";\n    $headers = \"From: your-email@example.com\";\n    mail($email, $subject, $message, $headers);\n\n    echo \"A password reset email has been sent to your email address.\";\n} else {\n    echo \"Email not found. Please try again.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_db_username';\n$db_password = 'your_db_password';\n$db_name = 'your_db_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get reset token from URL\n$reset_token = $_GET['token'];\n\n// Check if reset token exists in database\n$stmt = $conn->prepare(\"SELECT * FROM users WHERE reset_token = ?\");\n$stmt->bind_param('s', $reset_token);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Reset token exists, update password and reset token\n    $user_data = $result->fetch_assoc();\n    $new_password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    if ($new_password == $confirm_password) {\n        // Update password in database\n        $update_stmt = $conn->prepare(\"UPDATE users SET password = ?, reset_token = '' WHERE id = ?\");\n        $update_stmt->bind_param('si', $new_password, $user_data['id']);\n        $update_stmt->execute();\n\n        echo \"Your password has been successfully updated.\";\n    } else {\n        echo \"Passwords do not match. Please try again.\";\n    }\n} else {\n    echo \"Invalid reset token.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
