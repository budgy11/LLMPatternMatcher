{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis is an example of a forgot password function using PHP, which sends a reset link to the user's email address.\n\n**Database Schema**\n-------------------\n\nFor this example, we'll assume you have a database table `users` with the following structure:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n```\n\n**PHP Code**\n------------\n\nCreate a new PHP file called `forgot_password.php` and add the following code:\n```php\n<?php\nrequire_once 'config.php'; // configuration file with database credentials\n\nfunction sendResetEmail($username, $email) {\n  // Create reset link with token\n  $token = bin2hex(random_bytes(32));\n  $resetLink = \"http://example.com/reset-password/$token\";\n\n  // Send email using PHPMailer or a similar library\n  $mail->setFrom('no-reply@example.com', 'Password Reset');\n  $mail->addAddress($email);\n  $mail->Subject = 'Reset Password';\n  $mail->Body = 'Click the link below to reset your password: <a href=\"' . $resetLink . '\">Reset Password</a>';\n  $mail->send();\n\n  // Store token in database\n  $sql = \"INSERT INTO password_resets (username, token) VALUES (:username, :token)\";\n  $stmt = $db->prepare($sql);\n  $stmt->bindParam(':username', $username);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  $username = $_POST['username'];\n\n  // Check if user exists\n  $sql = \"SELECT * FROM users WHERE email = :email AND username = :username\";\n  $stmt = $db->prepare($sql);\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Send reset email\n    sendResetEmail($username, $email);\n\n    echo 'Password reset link sent to your email.';\n  } else {\n    echo 'Username or email not found.';\n  }\n} else {\n?>\n<form method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n<?php\n}\n?>\n```\n\n**Explanation**\n---------------\n\nThis code defines a `sendResetEmail` function that takes the username and email address as arguments. It generates a random token, creates a reset link with the token, and sends an email to the user's email address using PHPMailer or a similar library.\n\nThe main script checks if the request method is POST, and if so, it retrieves the email and username from the form data. It then queries the database to check if the user exists, and if so, it calls the `sendResetEmail` function to send the reset link.\n\n**HTML Form**\n--------------\n\nCreate an HTML form with two input fields for the email address and username:\n```html\n<form method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```\n**Reset Password Page**\n------------------------\n\nCreate a new PHP file called `reset-password.php` to handle the password reset process. This page will receive the token as a URL parameter and prompt the user to enter their new password:\n```php\n<?php\nrequire_once 'config.php';\n\nfunction resetPassword($token) {\n  // Check if token exists in database\n  $sql = \"SELECT * FROM password_resets WHERE token = :token\";\n  $stmt = $db->prepare($sql);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $reset = $stmt->fetch();\n\n  if ($reset) {\n    // Prompt user to enter new password\n    echo 'Enter your new password:<br>';\n    $newPassword = $_POST['new_password'];\n\n    // Hash and store new password in database\n    $sql = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n    $stmt = $db->prepare($sql);\n    $stmt->bindParam(':password_hash', password_hash($newPassword, PASSWORD_DEFAULT));\n    $stmt->bindParam(':id', $reset['user_id']);\n    $stmt->execute();\n\n    // Delete reset token from database\n    $sql = \"DELETE FROM password_resets WHERE token = :token\";\n    $stmt = $db->prepare($sql);\n    $stmt->bindParam(':token', $token);\n    $stmt->execute();\n\n    echo 'Password reset successfully!';\n  } else {\n    echo 'Invalid token.';\n  }\n}\n\nif (isset($_GET['token'])) {\n  $token = $_GET['token'];\n  resetPassword($token);\n} else {\n?>\n<form method=\"post\">\n  <label for=\"new_password\">New Password:</label>\n  <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n</form>\n<?php\n}\n?>\n```\nThis code defines a `resetPassword` function that takes the token as an argument. It checks if the token exists in the database, and if so, it prompts the user to enter their new password. After the user submits their new password, it hashes and stores the new password in the database, deletes the reset token from the database, and displays a success message.\n\n**Note:** This is a basic example and should be modified to fit your specific needs. You may want to add additional security measures such as email validation or expiration of the reset link.", "code_blocks": [null, "```php\n<?php\nrequire_once 'config.php'; // configuration file with database credentials\n\nfunction sendResetEmail($username, $email) {\n  // Create reset link with token\n  $token = bin2hex(random_bytes(32));\n  $resetLink = \"http://example.com/reset-password/$token\";\n\n  // Send email using PHPMailer or a similar library\n  $mail->setFrom('no-reply@example.com', 'Password Reset');\n  $mail->addAddress($email);\n  $mail->Subject = 'Reset Password';\n  $mail->Body = 'Click the link below to reset your password: <a href=\"' . $resetLink . '\">Reset Password</a>';\n  $mail->send();\n\n  // Store token in database\n  $sql = \"INSERT INTO password_resets (username, token) VALUES (:username, :token)\";\n  $stmt = $db->prepare($sql);\n  $stmt->bindParam(':username', $username);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  $username = $_POST['username'];\n\n  // Check if user exists\n  $sql = \"SELECT * FROM users WHERE email = :email AND username = :username\";\n  $stmt = $db->prepare($sql);\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Send reset email\n    sendResetEmail($username, $email);\n\n    echo 'Password reset link sent to your email.';\n  } else {\n    echo 'Username or email not found.';\n  }\n} else {\n?>\n<form method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n<?php\n}\n?>\n```", null, "```php\n<?php\nrequire_once 'config.php';\n\nfunction resetPassword($token) {\n  // Check if token exists in database\n  $sql = \"SELECT * FROM password_resets WHERE token = :token\";\n  $stmt = $db->prepare($sql);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $reset = $stmt->fetch();\n\n  if ($reset) {\n    // Prompt user to enter new password\n    echo 'Enter your new password:<br>';\n    $newPassword = $_POST['new_password'];\n\n    // Hash and store new password in database\n    $sql = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n    $stmt = $db->prepare($sql);\n    $stmt->bindParam(':password_hash', password_hash($newPassword, PASSWORD_DEFAULT));\n    $stmt->bindParam(':id', $reset['user_id']);\n    $stmt->execute();\n\n    // Delete reset token from database\n    $sql = \"DELETE FROM password_resets WHERE token = :token\";\n    $stmt = $db->prepare($sql);\n    $stmt->bindParam(':token', $token);\n    $stmt->execute();\n\n    echo 'Password reset successfully!';\n  } else {\n    echo 'Invalid token.';\n  }\n}\n\nif (isset($_GET['token'])) {\n  $token = $_GET['token'];\n  resetPassword($token);\n} else {\n?>\n<form method=\"post\">\n  <label for=\"new_password\">New Password:</label>\n  <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n</form>\n<?php\n}\n?>\n```"]}
