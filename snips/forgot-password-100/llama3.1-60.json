{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"Forgot Password\" function using PHP:\n\n**Note:** This example uses email as the method for sending the reset link. You will need to set up your server to send emails (e.g., configure SMTP settings).\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_token_expires TIMESTAMP\n);\n```\n**PHP Code:**\n```php\n<?php\n\n// Configuration\n$config = array(\n  'email_from' => 'your-email@example.com',\n  'email_to' => '',\n  'smtp_host' => 'your-smtp-host',\n  'smtp_port' => '587'\n);\n\nfunction forgot_password($email) {\n  // Get user data from database\n  $user_data = get_user_by_email($email);\n  \n  if (!$user_data) {\n    return false;\n  }\n  \n  // Generate reset token and expiration time\n  $reset_token = bin2hex(random_bytes(32));\n  $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n  \n  // Update user data in database with new reset token and expiration time\n  update_user_data($user_data['id'], 'reset_token', $reset_token);\n  update_user_data($user_data['id'], 'reset_token_expires', $reset_token_expires);\n  \n  // Send email to user with reset link\n  send_reset_email($email, $reset_token);\n}\n\nfunction get_user_by_email($email) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"SELECT * FROM users WHERE email = ?\");\n  $stmt->execute(array($email));\n  return $stmt->fetch();\n}\n\nfunction update_user_data($id, $field, $value) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"UPDATE users SET `$field` = ? WHERE id = ?\");\n  $stmt->execute(array($value, $id));\n}\n\nfunction send_reset_email($email, $reset_token) {\n  global $config;\n  \n  $headers = \"From: {$config['email_from']}\\r\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n  \n  $message = \"\n    <h1>Reset Password</h1>\n    <p>Please click on the following link to reset your password:</p>\n    <a href='http://your-website.com/reset-password.php?token={$reset_token}'>Reset Password</a>\n  \";\n  \n  mail($email, 'Reset Password', $message, $headers);\n}\n\n// Example usage:\n$email = 'example@example.com';\nforgot_password($email);\n\n?>\n```\n**Explanation:**\n\n1. The `forgot_password` function takes an email address as input and attempts to retrieve the corresponding user data from the database using the `get_user_by_email` function.\n2. If a matching user is found, a new reset token and expiration time are generated and stored in the user's database record.\n3. An email is sent to the user with a reset link containing the generated reset token.\n\n**Reset Password Page (e.g., `reset-password.php`):**\n```php\n<?php\n\n// Configuration\n$config = array(\n  'token_cookie_name' => 'reset_token'\n);\n\nfunction verify_reset_token($token) {\n  global $config;\n  \n  // Get user data from database using reset token\n  $user_data = get_user_by_reset_token($token);\n  \n  if (!$user_data) {\n    return false;\n  }\n  \n  // Check expiration time\n  if (strtotime($user_data['reset_token_expires']) < strtotime('now')) {\n    return false;\n  }\n  \n  return $user_data;\n}\n\nfunction get_user_by_reset_token($token) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"SELECT * FROM users WHERE reset_token = ?\");\n  $stmt->execute(array($token));\n  return $stmt->fetch();\n}\n\nfunction get_user_data_by_reset_token($token) {\n  global $config;\n  \n  // Get user data from database using reset token\n  $user_data = verify_reset_token($token);\n  \n  if (!$user_data) {\n    return null;\n  }\n  \n  return $user_data;\n}\n\n// Example usage:\n$token = $_GET['token'];\n$user_data = get_user_data_by_reset_token($token);\n\nif ($user_data) {\n  // Display password reset form\n  echo '\n    <h1>Reset Password</h1>\n    <form action=\"reset-password-post.php\" method=\"post\">\n      <input type=\"password\" name=\"new_password\">\n      <input type=\"submit\" value=\"Reset Password\">\n    </form>\n  ';\n} else {\n  // Display error message\n  echo '<p>Error: Invalid reset token.</p>';\n}\n\n?>\n```\n**Reset Password Post Page (e.g., `reset-password-post.php`):**\n```php\n<?php\n\n// Configuration\n$config = array(\n  'token_cookie_name' => 'reset_token'\n);\n\nfunction verify_reset_token($token) {\n  global $config;\n  \n  // Get user data from database using reset token\n  $user_data = get_user_by_reset_token($token);\n  \n  if (!$user_data) {\n    return false;\n  }\n  \n  // Check expiration time\n  if (strtotime($user_data['reset_token_expires']) < strtotime('now')) {\n    return false;\n  }\n  \n  return $user_data;\n}\n\nfunction update_password($id, $new_password_hash) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"UPDATE users SET password_hash = ? WHERE id = ?\");\n  $stmt->execute(array($new_password_hash, $id));\n}\n\n// Example usage:\n$token = $_GET['token'];\n$new_password = $_POST['new_password'];\n\n$user_data = verify_reset_token($token);\n\nif ($user_data) {\n  // Update user's password\n  update_password($user_data['id'], password_hash($new_password, PASSWORD_DEFAULT));\n  \n  // Display success message\n  echo '<p>Password updated successfully.</p>';\n} else {\n  // Display error message\n  echo '<p>Error: Invalid reset token.</p>';\n}\n\n?>\n```\nNote that this is a basic example and you should consider implementing additional security measures, such as:\n\n* Using a secure password hashing algorithm (e.g., Argon2, PBKDF2)\n* Implementing rate limiting to prevent brute-force attacks\n* Validating user input data to prevent SQL injection and cross-site scripting (XSS) attacks", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$config = array(\n  'email_from' => 'your-email@example.com',\n  'email_to' => '',\n  'smtp_host' => 'your-smtp-host',\n  'smtp_port' => '587'\n);\n\nfunction forgot_password($email) {\n  // Get user data from database\n  $user_data = get_user_by_email($email);\n  \n  if (!$user_data) {\n    return false;\n  }\n  \n  // Generate reset token and expiration time\n  $reset_token = bin2hex(random_bytes(32));\n  $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n  \n  // Update user data in database with new reset token and expiration time\n  update_user_data($user_data['id'], 'reset_token', $reset_token);\n  update_user_data($user_data['id'], 'reset_token_expires', $reset_token_expires);\n  \n  // Send email to user with reset link\n  send_reset_email($email, $reset_token);\n}\n\nfunction get_user_by_email($email) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"SELECT * FROM users WHERE email = ?\");\n  $stmt->execute(array($email));\n  return $stmt->fetch();\n}\n\nfunction update_user_data($id, $field, $value) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"UPDATE users SET `$field` = ? WHERE id = ?\");\n  $stmt->execute(array($value, $id));\n}\n\nfunction send_reset_email($email, $reset_token) {\n  global $config;\n  \n  $headers = \"From: {$config['email_from']}\\r\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n  \n  $message = \"\n    <h1>Reset Password</h1>\n    <p>Please click on the following link to reset your password:</p>\n    <a href='http://your-website.com/reset-password.php?token={$reset_token}'>Reset Password</a>\n  \";\n  \n  mail($email, 'Reset Password', $message, $headers);\n}\n\n// Example usage:\n$email = 'example@example.com';\nforgot_password($email);\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$config = array(\n  'token_cookie_name' => 'reset_token'\n);\n\nfunction verify_reset_token($token) {\n  global $config;\n  \n  // Get user data from database using reset token\n  $user_data = get_user_by_reset_token($token);\n  \n  if (!$user_data) {\n    return false;\n  }\n  \n  // Check expiration time\n  if (strtotime($user_data['reset_token_expires']) < strtotime('now')) {\n    return false;\n  }\n  \n  return $user_data;\n}\n\nfunction get_user_by_reset_token($token) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"SELECT * FROM users WHERE reset_token = ?\");\n  $stmt->execute(array($token));\n  return $stmt->fetch();\n}\n\nfunction get_user_data_by_reset_token($token) {\n  global $config;\n  \n  // Get user data from database using reset token\n  $user_data = verify_reset_token($token);\n  \n  if (!$user_data) {\n    return null;\n  }\n  \n  return $user_data;\n}\n\n// Example usage:\n$token = $_GET['token'];\n$user_data = get_user_data_by_reset_token($token);\n\nif ($user_data) {\n  // Display password reset form\n  echo '\n    <h1>Reset Password</h1>\n    <form action=\"reset-password-post.php\" method=\"post\">\n      <input type=\"password\" name=\"new_password\">\n      <input type=\"submit\" value=\"Reset Password\">\n    </form>\n  ';\n} else {\n  // Display error message\n  echo '<p>Error: Invalid reset token.</p>';\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$config = array(\n  'token_cookie_name' => 'reset_token'\n);\n\nfunction verify_reset_token($token) {\n  global $config;\n  \n  // Get user data from database using reset token\n  $user_data = get_user_by_reset_token($token);\n  \n  if (!$user_data) {\n    return false;\n  }\n  \n  // Check expiration time\n  if (strtotime($user_data['reset_token_expires']) < strtotime('now')) {\n    return false;\n  }\n  \n  return $user_data;\n}\n\nfunction update_password($id, $new_password_hash) {\n  global $config;\n  \n  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');\n  $stmt = $db->prepare(\"UPDATE users SET password_hash = ? WHERE id = ?\");\n  $stmt->execute(array($new_password_hash, $id));\n}\n\n// Example usage:\n$token = $_GET['token'];\n$new_password = $_POST['new_password'];\n\n$user_data = verify_reset_token($token);\n\nif ($user_data) {\n  // Update user's password\n  update_password($user_data['id'], password_hash($new_password, PASSWORD_DEFAULT));\n  \n  // Display success message\n  echo '<p>Password updated successfully.</p>';\n} else {\n  // Display error message\n  echo '<p>Error: Invalid reset token.</p>';\n}\n\n?>\n```"]}
