
<?php

// Configuration
define('SECRET_KEY', 'your_secret_key_here');
define('PASSWORD_RESET_EXPIRES_IN_HOURS', 1);

// Function to send password reset email
function send_password_reset_email($user_id, $token) {
  // Get user details
  $user = get_user_by_id($user_id);
  
  if (!$user) {
    return false;
  }
  
  // Set email content
  $subject = 'Reset your password';
  $message = '
    <p>Dear ' . $user->username . ',</p>
    <p>We received a request to reset your password. To do so, click on the link below:</p>
    <p><a href="' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $token . '">Reset Password</a></p>
  ';
  
  // Send email
  mail($user->email, $subject, $message);
  
  return true;
}

// Function to reset password
function reset_password($token) {
  // Validate token
  $password_reset = get_password_reset_by_token($token);
  
  if (!$password_reset || $password_reset->expires_at < time()) {
    return false;
  }
  
  // Get user ID from token
  $user_id = $password_reset->user_id;
  
  // Set new password (for example, a random one)
  $new_password = bin2hex(random_bytes(32));
  
  // Update user's password
  update_user_password($user_id, $new_password);
  
  return true;
}

// Function to get user by ID
function get_user_by_id($id) {
  global $conn;
  
  $query = 'SELECT * FROM users WHERE id = :id';
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':id', $id);
  $stmt->execute();
  
  return $stmt->fetchObject();
}

// Function to get password reset by token
function get_password_reset_by_token($token) {
  global $conn;
  
  $query = 'SELECT * FROM password_resets WHERE token = :token AND expires_at > :expires_at';
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':expires_at', time());
  $stmt->execute();
  
  return $stmt->fetchObject();
}

// Function to update user's password
function update_user_password($user_id, $new_password) {
  global $conn;
  
  $query = 'UPDATE users SET password_hash = :password_hash WHERE id = :id';
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':id', $user_id);
  $stmt->bindParam(':password_hash', hash('sha256', $new_password));
  $stmt->execute();
}

// Handle form submission
if (isset($_POST['forgot-password'])) {
  // Get user's email
  $email = trim($_POST['email']);
  
  // Check if email is valid
  if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/', $email)) {
    die('Invalid email address');
  }
  
  // Get user ID from database
  $query = 'SELECT id FROM users WHERE email = :email';
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  
  if ($result = $stmt->fetchObject()) {
    $user_id = $result->id;
    
    // Generate password reset token
    $token = bin2hex(random_bytes(32));
    
    // Insert new password reset record into database
    $query = 'INSERT INTO password_resets (user_id, token) VALUES (:user_id, :token)';
    $stmt = $conn->prepare($query);
    $stmt->bindParam(':user_id', $user_id);
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    // Send email with reset link
    send_password_reset_email($user_id, $token);
  } else {
    die('Email address not found');
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Forgot Password</title>
</head>
<body>
  <h1>Forgot Password</h1>
  
  <?php if (isset($_POST['forgot-password'])) : ?>
    <p>Email sent with password reset link.</p>
  <?php endif; ?>
  
  <form method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email" placeholder="example@example.com">
    <button type="submit" name="forgot-password">Send Password Reset Link</button>
  </form>
</body>
</html>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to reset password
function resetPassword() {
    // Get user input
    $email = $_POST['email'];

    // Check if email is valid
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Generate random password
        $new_password = rand(100000, 999999);
        $hashed_password = md5($new_password);

        // Update user's password
        $update_query = "UPDATE users SET password='$hashed_password' WHERE email='$email'";
        $conn->query($update_query);

        // Send password reset email
        $to_email = $email;
        $subject = 'Password Reset';
        $body = "Your new password is: $new_password";
        $from_email = 'your-email@example.com';

        $headers = "From: $from_email\r
";
        $headers .= "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=ISO-8859-1\r
";

        mail($to_email, $subject, $body, $headers);

        echo "Password reset email sent to $email.";
    } else {
        echo "Email not found in database.";
    }
}

// Check if form has been submitted
if (isset($_POST['submit'])) {
    // Call forgot password function
    resetPassword();
}
?>


<?php

// Include the database connection settings
require_once 'db_settings.php';

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get the email from the form submission
  $email = $_POST['email'];

  // Validate the email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // Query the database to retrieve the user's ID and password hash
  $query = "SELECT id, password_hash FROM users WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user) {
    // Generate a new random password
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);

    // Update the user's password in the database
    $query = "UPDATE users SET password_hash = :password_hash WHERE id = :id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':password_hash', hash('sha256', $new_password));
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();

    // Send an email to the user with their new password
    $subject = "Forgot Password";
    $body = "Your new password is: $new_password";
    $from_email = 'your_email@example.com';
    $to_email = $email;
    sendEmail($from_email, $to_email, $subject, $body);
  } else {
    echo "No user found with that email address";
  }
}

// Function to send an email using PHPMailer
function sendEmail($from_email, $to_email, $subject, $body) {
  require_once 'PHPMailerAutoload.php';
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->CharSet = 'UTF-8';
  $mail->From = $from_email;
  $mail->FromName = 'Your Name';
  $mail->addAddress($to_email);
  $mail->Subject = $subject;
  $mail->Body = $body;
  if (!$mail->send()) {
    echo "Error sending email: ";
    print_r($mail->ErrorInfo);
  }
}

?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to reset password
function resetPassword($email) {
  global $conn;

  // Query to select user ID based on email
  $sql = "SELECT id FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      // Get user ID
      $userId = $row['id'];

      // Generate random password and salt
      $passwordSalt = bin2hex(random_bytes(32));
      $newPasswordHash = hash('sha256', "your_secret_key" . $email . $passwordSalt);

      // Update password in database
      $sql = "UPDATE users SET password_hash='" . mysqli_real_escape_string($conn, $newPasswordHash) . "' WHERE id=" . $userId;
      $result = $conn->query($sql);

      if ($result === TRUE) {
        // Send email with new password and reset instructions
        sendResetEmail($email, $passwordSalt);
      } else {
        echo "Error updating user data: " . $conn->error;
      }
    }
  } else {
    echo "No user found with this email.";
  }

  return true; // Return true to indicate success
}

// Function to send password reset email
function sendResetEmail($email, $passwordSalt) {
  // Set email headers and content
  $subject = 'Reset Password';
  $message = 'Your new password is: ' . substr(bin2hex(random_bytes(16)), 0, 8) . '.' .
            ' Please use this password to log in to your account.' .
            ' Your salt value for password verification is: ' . $passwordSalt;

  // Send email using PHP's built-in mail function
  mail($email, $subject, $message);

  echo "Email sent successfully.";
}

// Example usage:
$email = $_POST['email'];
if (isset($_POST['submit'])) {
  resetPassword($email);
}


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send forgot password email
function forgot_password($email)
{
    global $conn;

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();

        // Generate random password
        $password = substr(md5(uniqid()), 0, 8);
        echo "Password: $password
";

        // Update user's password in database
        $query = "UPDATE users SET password_hash = SHA2('$password', 256) WHERE email = '$email'";
        $conn->query($query);

        // Send forgot password email
        send_email($email, 'Forgot Password', 'Your new password is: ' . $password);
    } else {
        echo "User not found.";
    }
}

// Function to send email using PHPMailer
function send_email($to_email, $subject, $body)
{
    // Configuration
    $mail_host = 'smtp.example.com';
    $mail_username = 'username';
    $mail_password = 'password';

    require_once 'PHPMailer.php';
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = $mail_host;
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = $mail_username;
    $mail->Password = $mail_password;

    $mail->setFrom($mail_username, 'Your Name');
    $mail->addAddress($to_email);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
        echo "Mailer Error: " . $mail->ErrorInfo;
    }
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];
    forgot_password($email);
}
?>


<?php

// Configuration settings
require 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user email from input field
  $email = $_POST['email'];

  // Validate email using regular expression
  if (!preg_match("/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/", $email)) {
    echo "Invalid email address";
    exit;
  }

  // Query database to find user with matching email
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // If user found, generate new password and send it via email
    $user = mysqli_fetch_assoc($result);
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);

    // Update user password in database
    $query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send new password via email using PHPMailer (not shown here)
    send_email_notification($user['email'], $new_password);
  } else {
    echo "User not found with this email address";
  }
}

// Function to send email notification
function send_email_notification($to_email, $new_password) {
  // Your email settings here
  $from_email = 'your-email@example.com';
  $subject = 'Your new password is: ' . $new_password;
  $message_body = 'Your new password is: ' . $new_password;

  // Send email using PHPMailer (not shown here)
}

?>


<?php

// Configuration settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$connection = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

function forgotPassword($email)
{
    // Query to retrieve user ID
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = $connection->query($query);

    if ($result->num_rows > 0) {
        // Retrieve user ID
        $row = $result->fetch_assoc();
        $userId = $row['id'];

        // Generate random token
        $token = bin2hex(random_bytes(32));

        // Update password reset token in database
        $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
        $connection->query($query);

        // Send email with reset link
        sendEmail($email, $token);
    }
}

function sendEmail($email, $token)
{
    // Your email configuration settings here (e.g. SMTP server, username, password, etc.)
    $to = $email;
    $subject = "Reset your password";
    $body = "Click on this link to reset your password: <a href='http://your-website.com/reset-password.php?token=$token'>Reset Password</a>";

    // Send email
    mail($to, $subject, $body);
}

// Process form submission (e.g. from forgot_password.html)
if (isset($_POST['email'])) {
    forgotPassword($_POST['email']);
    echo "An email with a password reset link has been sent to your registered email address.";
} else {
    echo "Invalid request";
}


<?php
require_once 'db_config.php'; // assuming you have a db_config file for database connection

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];
  
  try {
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);
      
      // Generate a random reset code
      $reset_code = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 16);
      
      // Update user's reset code in database
      $update_query = "UPDATE users SET reset_code = '$reset_code' WHERE email = '$email'";
      mysqli_query($conn, $update_query);
      
      // Send password reset link to user's email address
      send_password_reset_link($row['username'], $reset_code, $email);
    } else {
      echo "Email not found.";
    }
  } catch (Exception $e) {
    echo "Error: " . $e->getMessage();
  }
} else {
  // Form for forgot password
?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Forgot Password</title>
</head>
<body>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Email: <input type="email" name="email"><br><br>
    <button type="submit">Submit</button>
  </form>
</body>
</html>
<?php
}
?>

function send_password_reset_link($username, $reset_code, $email) {
  // SMTP settings for sending email (change these according to your hosting provider)
  $smtp_server = 'your_smtp_server';
  $from_email = 'your_from_email@example.com';
  
  try {
    $msg = "Hello $username,

Please click on the link below to reset your password:

http://example.com/reset_password.php?email=$email&reset_code=$reset_code";
    
    // Send email using SMTP
    mail($email, 'Reset Your Password', $msg, "From: $from_email");
  } catch (Exception $e) {
    echo "Error sending email: " . $e->getMessage();
  }
}


<?php
require_once 'db_config.php'; // assuming you have a db_config file for database connection

if ($_SERVER['REQUEST_METHOD'] === 'GET') {
  $email = $_GET['email'];
  $reset_code = $_GET['reset_code'];
  
  try {
    $query = "SELECT * FROM users WHERE email = '$email' AND reset_code = '$reset_code'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
      // User's account exists and has the correct reset code
      
      echo "<h1>Reset Your Password</h1>";
      
      // Form for entering new password
?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Reset Password</title>
</head>
<body>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" onsubmit="return validatePassword()">
    New Password: <input type="password" id="new_password" name="new_password"><br><br>
    Confirm New Password: <input type="password" id="confirm_new_password" name="confirm_new_password"><br><br>
    <button type="submit">Submit</button>
  </form>

  <!-- JavaScript for validating passwords -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
  function validatePassword() {
    var new_password = document.getElementById('new_password').value;
    var confirm_new_password = document.getElementById('confirm_new_password').value;
    
    if (new_password !== confirm_new_password) {
      alert("Passwords don't match!");
      return false;
    }
    
    // Update user's password in database
    $.ajax({
      type: 'POST',
      url: 'update_password.php',
      data: {email: '<?php echo $email; ?>', new_password: new_password, reset_code: '<?php echo $reset_code; ?>'},
      success: function() {
        alert("Password updated successfully!");
        window.location.href = "login.php";
      }
    });
    
    return false;
  }
  </script>
</body>
</html>
<?php
    } else {
      // Incorrect reset code or email
      echo "Incorrect reset code or email.";
    }
  } catch (Exception $e) {
    echo "Error: " . $e->getMessage();
  }
} else {
  // Form for entering new password
?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Reset Password</title>
</head>
<body>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" onsubmit="return validatePassword()">
    New Password: <input type="password" id="new_password" name="new_password"><br><br>
    Confirm New Password: <input type="password" id="confirm_new_password" name="confirm_new_password"><br><br>
    <button type="submit">Submit</button>
  </form>

  <!-- JavaScript for validating passwords -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
  function validatePassword() {
    var new_password = document.getElementById('new_password').value;
    var confirm_new_password = document.getElementById('confirm_new_password').value;
    
    if (new_password !== confirm_new_password) {
      alert("Passwords don't match!");
      return false;
    }
    
    // Update user's password in database
    $.ajax({
      type: 'POST',
      url: 'update_password.php',
      data: {email: '<?php echo $email; ?>', new_password: new_password, reset_code: '<?php echo $reset_code; ?>'},
      success: function() {
        alert("Password updated successfully!");
        window.location.href = "login.php";
      }
    });
    
    return false;
  }
  </script>
</body>
</html>
<?php
}
?>

update_password.php:


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if (isset($_POST['submit'])) {
    // Retrieve submitted data
    $emailOrUsername = $_POST['email_or_username'];

    // SQL query to retrieve user ID and reset token
    $query = "SELECT id, password_reset_token FROM users WHERE email = '$emailOrUsername' OR username = '$emailOrUsername'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Retrieve first row from result set
        $row = $result->fetch_assoc();

        // Generate new password reset token (e.g., using UUID)
        $newToken = bin2hex(random_bytes(16));

        // Update user's password reset token in database
        $query = "UPDATE users SET password_reset_token = '$newToken' WHERE id = '" . $row['id'] . "'";
        $conn->query($query);

        // Send email with reset link
        sendResetEmail($emailOrUsername, $newToken);
    } else {
        echo 'No user found';
    }
}

// Function to send password reset email
function sendResetEmail($emailOrUsername, $token) {
    // Email configuration variables
    define('EMAIL_FROM', 'your_email@example.com');
    define('EMAIL_SUBJECT', 'Password Reset Request');

    // Generate reset link (e.g., using a secure URL)
    $resetLink = "https://example.com/reset-password?token=" . $token;

    // Compose email message
    $message = "
        Dear user,
        
        You have requested to reset your password. Please click on the following link to reset your password:
         $resetLink
        
        Best regards,
        The System
    ";

    // Send email using mail() function or a library like PHPMailer
    mail($emailOrUsername, EMAIL_SUBJECT, $message, "From: " . EMAIL_FROM);
}

?>


<?php
// Include the database connection file
require_once 'db_connection.php';

// Check if the user has submitted the form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the email address from the form
    $email = $_POST['email'];

    // Query to check if the email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    // Check if the user exists
    if (mysqli_num_rows($result) > 0) {
        // Get the user's ID
        $user_id = mysqli_fetch_assoc($result)['id'];

        // Generate a new password
        $new_password = generate_password();

        // Update the user's password in the database
        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        mysqli_query($conn, $query);

        // Send an email to the user with their new password
        send_email($email, $new_password);
    } else {
        echo 'Email not found.';
    }
}

// Function to generate a random password
function generate_password() {
    return substr(md5(uniqid(mt_rand(), true)), 0, 8);
}

// Function to send an email with the new password
function send_email($email, $password) {
    $subject = 'Your new password';
    $body = "Hello,

Your new password is: $password

Best regards";
    mail($email, $subject, $body);
}
?>


<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Submit">
</form>


<?php
$conn = mysqli_connect("localhost", "username", "password", "database_name");
?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to reset password
function resetPassword($token, $email, $newPassword) {
    // Query to update user's reset token and expires
    $query = "UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 30 MINUTE WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $token, $email);

    if ($stmt->execute()) {
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        // Query to update user's password hash
        $query = "UPDATE users SET password_hash = ? WHERE email = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $hashedPassword, $email);

        if ($stmt->execute()) {
            return true;
        } else {
            // Error updating user's password hash
            echo "Error updating user's password hash: " . $conn->error;
        }
    } else {
        // Error resetting token and expires
        echo "Error resetting token and expires: " . $conn->error;
    }

    return false;
}

// Function to send reset link via email
function sendResetLink($email) {
    // Generate a random token
    $token = generateToken();

    // Query to select user's id, email, and current reset token (if any)
    $query = "SELECT id, email, reset_token FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);

    if ($stmt->execute()) {
        $result = $stmt->get_result();

        // If user exists and doesn't have a current reset token
        if ($row = $result->fetch_assoc() && !$row['reset_token']) {
            // Update user's reset token and expires
            $query = "UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 30 MINUTE WHERE email = ?";
            $stmt = $conn->prepare($query);
            $stmt->bind_param("ss", $token, $email);

            if ($stmt->execute()) {
                // Send email with reset link
                $subject = "Reset your password";
                $body = "Click this link to reset your password: <a href='http://example.com/reset-password.php?token=" . $token . "'>Reset Password</a>";
                $from = 'your_email@example.com';
                $to = $email;

                mail($to, $subject, $body, "From: $from\r
");

                return true;
            } else {
                // Error updating user's reset token and expires
                echo "Error updating user's reset token and expires: " . $conn->error;
            }
        } else {
            // User doesn't exist or already has a current reset token
            echo "User doesn't exist or already has a current reset token";
        }
    } else {
        // Error selecting user's id, email, and current reset token
        echo "Error selecting user's id, email, and current reset token: " . $conn->error;
    }

    return false;
}

// Handle forgotten password request
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    sendResetLink($email);
} else if (isset($_GET['token'])) {
    // Validate token and check expiration time
    $token = $_GET['token'];

    // Query to select user's id, email, and current reset token (if any)
    $query = "SELECT id, email, reset_token FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $token);

    if ($stmt->execute()) {
        $result = $stmt->get_result();

        // If user exists and has a current reset token
        if ($row = $result->fetch_assoc()) {
            // Display password reset form
            echo "<h1>Reset Password</h1>";
            echo "<form action='reset-password.php' method='post'>";
            echo "<label for='newPassword'>New Password:</label><br>";
            echo "<input type='password' id='newPassword' name='newPassword'><br>";
            echo "<label for='confirmPassword'>Confirm New Password:</label><br>";
            echo "<input type='password' id='confirmPassword' name='confirmPassword'><br>";
            echo "<button type='submit' class='btn btn-primary'>Reset Password</button>";
            echo "</form>";

            // If form submitted
            if (isset($_POST['newPassword'])) {
                $newPassword = $_POST['newPassword'];
                $confirmPassword = $_POST['confirmPassword'];

                if ($newPassword === $confirmPassword) {
                    // Reset password using token and new password
                    resetPassword($token, $row['email'], $newPassword);
                } else {
                    echo "Passwords do not match";
                }
            }
        } else {
            echo "Invalid or expired token";
        }
    } else {
        // Error selecting user's id, email, and current reset token
        echo "Error selecting user's id, email, and current reset token: " . $conn->error;
    }
} else {
    // Display forgotten password form
    echo "<h1>Forgot Password</h1>";
    echo "<form action='forgot-password.php' method='post'>";
    echo "<label for='email'>Email:</label><br>";
    echo "<input type='text' id='email' name='email'><br>";
    echo "<button type='submit' class='btn btn-primary'>Send Reset Link</button>";
    echo "</form>";
}

// Close database connection
$conn->close();

?>


<?php
require_once 'config.php'; // database connection settings

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Query to retrieve user data
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() == 1) {
        $user_data = $stmt->fetch();

        // Generate a random password
        $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 8);

        // Update user data with new password
        $query = "UPDATE users SET password = :password WHERE email = :email";
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':password', $new_password);
        $stmt->execute();

        // Send a reset link to the user's email
        send_email_reset_link($user_data['email'], $new_password);

        echo "Your password has been updated successfully. Please check your email for further instructions.";
    } else {
        echo "Email not found";
    }
}

// Function to send a reset link to the user's email
function send_email_reset_link($email, $password) {
    $subject = 'Reset Your Password';
    $body = 'Your new password is: ' . $password;
    mail($email, $subject, $body);
}
?>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');
?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Database connection
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset link via email
function sendResetLink($email, $token)
{
    // Email configuration (you can use Gmail or other services)
    $to = $email;
    $subject = 'Password Reset Link';
    $message = '<p>Click on this link to reset your password:</p><p><a href="' . URL . 'reset-password.php?token=' . $token . '">Reset Password</a></p>';
    $headers = 'From: no-reply@yourdomain.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8' . "\r
";

    mail($to, $subject, $message, $headers);
}

// Function to generate token
function generateToken()
{
    return bin2hex(random_bytes(32));
}

// Handle form submission (forgotten password)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $token = generateToken();

            // Update token in the database
            $updateSql = "UPDATE users SET password_token = '$token' WHERE email = '$email'";
            $conn->query($updateSql);

            // Send reset link via email
            sendResetLink($email, $token);
        }
    }

    header('Location: thank-you.php');
    exit;
}

?>

<!-- Form to enter email address -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email" required><br>
    <button type="submit">Submit</button>
</form>



<?php

// Configuration
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize user input
    $email = filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL);

    // Query database to retrieve user's email and password hash
    try {
        $query = "
            SELECT id, password_hash 
            FROM users 
            WHERE email = :email";
        $stmt = $pdo->prepare($query);
        $stmt->execute([':email' => $email]);

        if ($result = $stmt->fetch()) {
            // Generate a reset token
            $resetToken = bin2hex(random_bytes(32));

            // Update user's password reset token in database
            try {
                $query = "
                    UPDATE users 
                    SET password_reset_token = :token, updated_at = NOW() 
                    WHERE id = :id";
                $stmt = $pdo->prepare($query);
                $stmt->execute([':token' => $resetToken, ':id' => $result['id']]);

                // Send reset email to user
                sendResetEmail($email, $resetToken);

                echo "A password reset email has been sent to your email address.";
            } catch (PDOException $e) {
                echo "An error occurred while updating the user's password reset token: " . $e->getMessage();
            }
        } else {
            echo "No user found with that email address.";
        }

    } catch (PDOException $e) {
        echo "An error occurred while querying the database: " . $e->getMessage();
    }
}

// Function to send a password reset email
function sendResetEmail($email, $resetToken)
{
    // Your email sending library or function here

    // Example using PHPMailer
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();

    try {
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->Port = 587;
        $mail->SMTPSecure = 'tls';
        $mail->SMTPAuth = true;

        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';

        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);

        $body = "
            <p>Dear user,</p>
            <p>You have requested to reset your password. Please click on the following link to do so:</p>
            <p><a href='http://example.com/reset-password.php?token=$resetToken'>Reset Password</a></p>
            <p>If you did not request a password reset, please ignore this email.</p>
        ";

        $mail->isHTML(true);
        $mail->Subject = 'Password Reset Request';
        $mail->Body = $body;

        $mail->send();
    } catch (Exception $e) {
        echo "An error occurred while sending the reset email: " . $e->getMessage();
    }
}

?>


<?php

// Configuration
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize user input
    $token = filter_input(INPUT_POST, 'token', FILTER_SANITIZE_STRING);

    // Query database to retrieve user's password hash and email
    try {
        $query = "
            SELECT id, email, password_hash 
            FROM users 
            WHERE password_reset_token = :token";
        $stmt = $pdo->prepare($query);
        $stmt->execute([':token' => $token]);

        if ($result = $stmt->fetch()) {
            // Update user's password in database
            try {
                $newPassword = filter_input(INPUT_POST, 'password', FILTER_SANITIZE_STRING);
                $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

                $query = "
                    UPDATE users 
                    SET password = :password_hash, updated_at = NOW(), password_reset_token = NULL 
                    WHERE id = :id";
                $stmt = $pdo->prepare($query);
                $stmt->execute([':password_hash' => $hashedPassword, ':id' => $result['id']]);

                echo "Your password has been successfully reset.";
            } catch (PDOException $e) {
                echo "An error occurred while updating the user's password: " . $e->getMessage();
            }
        } else {
            echo "Invalid or expired token.";
        }

    } catch (PDOException $e) {
        echo "An error occurred while querying the database: " . $e->getMessage();
    }
}

?>


<?php

// Configuration variables
define('EMAIL_FROM', 'no-reply@example.com');
define('PASSWORD_RESET_TOKEN_EXPIRY', 60 * 15); // 15 minutes

// Check if the request is a POST
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo json_encode(array('error' => 'Invalid email address'));
        exit;
    }

    // Get the user's data from the database
    $query = "SELECT id, password_hash FROM users WHERE email = ?";
    $stmt = $pdo->prepare($query);
    $stmt->execute([$email]);
    $user_data = $stmt->fetch();

    if (!$user_data) {
        echo json_encode(array('error' => 'Email address not found'));
        exit;
    }

    // Generate a temporary password reset token
    $token = bin2hex(random_bytes(32));
    $expiry_time = time() + PASSWORD_RESET_TOKEN_EXPIRY;

    // Store the token in the database (e.g., as an additional column)
    $query = "UPDATE users SET password_reset_token = ?, expiry_time = ? WHERE id = ?";
    $stmt = $pdo->prepare($query);
    $stmt->execute([$token, $expiry_time, $user_data['id']]);

    // Send the email with the temporary link
    $subject = 'Reset your password';
    $body = "
        <p>Hello {username},</p>
        <p>Click this link to reset your password: <a href='http://example.com/reset-password?token={$token}'>Reset Password</a></p>
        <p>This link will expire in 15 minutes.</p>
    ";
    $headers = 'From: ' . EMAIL_FROM . "\r
" .
        'MIME-Version: 1.0' . "\r
" .
        'Content-type: text/html; charset=iso-8859-1' . "\r
";
    mail($email, $subject, $body, $headers);

    echo json_encode(array('success' => 'Email sent with password reset link'));
} else {
    // Handle GET requests (e.g., display a form)
}


<?php

// Configuration variables
define('PASSWORD_RESET_TOKEN_EXPIRY', 60 * 15); // 15 minutes

// Check if the request is a POST
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];

    // Validate the token and check its expiry time
    $query = "SELECT id, password_reset_token FROM users WHERE password_reset_token = ? AND expiry_time > ?";
    $stmt = $pdo->prepare($query);
    $stmt->execute([$token, time()]);
    $user_data = $stmt->fetch();

    if (!$user_data) {
        echo json_encode(array('error' => 'Invalid token'));
        exit;
    }

    // Hash the new password
    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password in the database
    $query = "UPDATE users SET password_hash = ?, password_reset_token = NULL WHERE id = ?";
    $stmt = $pdo->prepare($query);
    $stmt->execute([$new_password_hash, $user_data['id']]);

    echo json_encode(array('success' => 'Password updated successfully'));
} else {
    // Handle GET requests (e.g., display a form)
}


<?php

// Configuration settings
define('APP_URL', 'https://example.com'); // Update with your application URL

// Connect to database
require_once 'db.php'; // Include your database connection script
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if (isset($_POST['email'])) {

  // Validate email input
  $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
  if (!$email) {
      echo 'Invalid email address';
      exit;
  }

  // Retrieve user from database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {

    // Get the user's current password hash and reset token
    $row = $result->fetch_assoc();
    $current_password_hash = $row['password_hash'];
    $reset_token = substr(hash('sha256', microtime()), 0, 32);
    $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the user's reset token and expiration time
    $query = "UPDATE users SET reset_token = '$reset_token', reset_token_expires = '$reset_token_expires' WHERE id = " . $row['id'];
    $conn->query($query);

    // Send email with password reset link
    $subject = 'Reset your password';
    $body = "
      <p>Hello $email,</p>
      <p>Click on the following link to reset your password:</p>
      <p><a href='" . APP_URL . "/reset_password.php?token=$reset_token'>Reset Password</a></p>
      ";
    $headers = 'From: no-reply@example.com' . "\r
" .
      'Content-Type: text/html; charset=UTF-8' . "\r
";
    mail($email, $subject, $body, $headers);

    echo 'Email sent successfully!';
  } else {
    echo 'User not found';
  }

} else {
  // Display form
  ?>
  <h1>Forgot Password</h1>
  <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <button type="submit">Submit</button>
  </form>
  <?php
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Define function to handle forgot password request
function forgot_password($email) {
  global $conn;

  // Query database for user's email and username
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Get user data from result
    $user_data = $result->fetch_assoc();

    // Generate random password and hash it
    $password = bin2hex(random_bytes(32));
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Update user's password in database
    $query = "UPDATE users SET password_hash = '$hashed_password' WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result) {
      // Send email with new password to user
      send_reset_password_email($user_data['username'], $password);
      return true;
    } else {
      echo "Error updating password: " . $conn->error;
      return false;
    }
  } else {
    echo "User not found";
    return false;
  }

  return false;
}

// Define function to send email with new password
function send_reset_password_email($username, $password) {
  // Email settings (e.g. SMTP server, etc.)
  $from = 'your_email@example.com';
  $to = $_POST['email'];
  $subject = "Reset your password";
  $body = "Dear $username, your new password is: $password";

  // Send email using mail() function
  if (mail($to, $subject, $body, "From: $from")) {
    echo "Email sent successfully!";
  } else {
    echo "Error sending email: " . mail_error();
  }
}

// Handle forgot password request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  if (forgot_password($email)) {
    echo "Password reset successfully! Please check your email for new password.";
  } else {
    echo "Error resetting password";
  }
}

// Close database connection
$conn->close();

?>


<?php
require_once 'config.php';

// Define variables
$recovery_email = $_POST['email'] ?? '';
$password_recovery_link = '';

// Check if email is provided
if (empty($recovery_email)) {
    header('Location: index.php?error=Email+is+required');
    exit;
}

// Query to check if user exists
$stmt = $db->prepare("SELECT * FROM users WHERE email = ?");
$stmt->execute([$recovery_email]);
$user_data = $stmt->fetch();

// Check if user exists
if (!$user_data) {
    header('Location: index.php?error=Email+not+found');
    exit;
}

// Generate password recovery link
$token = bin2hex(random_bytes(16));
$password_recovery_link = 'http://example.com/reset-password.php?email=' . $recovery_email . '&token=' . $token;

// Update user token in database
$stmt = $db->prepare("UPDATE users SET recovery_token = ? WHERE email = ?");
$stmt->execute([$token, $recovery_email]);

// Send password recovery email
require_once 'send_email.php';
send_email($recovery_email, 'Reset Your Password', $password_recovery_link);

header('Location: index.php?success=Email+sent.+Check+your+inbox.');
exit;


<?php
require_once 'config.php';

// Define variables
$token = $_GET['token'] ?? '';
$email = $_GET['email'] ?? '';

// Check if token and email are provided
if (empty($token) || empty($email)) {
    header('Location: index.php?error=Invalid+link');
    exit;
}

// Query to check if user exists
$stmt = $db->prepare("SELECT * FROM users WHERE email = ? AND recovery_token = ?");
$stmt->execute([$email, $token]);
$user_data = $stmt->fetch();

// Check if user exists and token is valid
if (!$user_data) {
    header('Location: index.php?error=Invalid+link');
    exit;
}

// Get new password from user
$new_password = $_POST['new_password'] ?? '';
$confirm_new_password = $_POST['confirm_new_password'] ?? '';

// Check if passwords match
if ($new_password !== $confirm_new_password) {
    header('Location: index.php?error=Passwords+do+not+match');
    exit;
}

// Update user password in database
$stmt = $db->prepare("UPDATE users SET password = ? WHERE email = ?");
$stmt->execute([$new_password, $email]);

// Delete recovery token from database
$stmt = $db->prepare("UPDATE users SET recovery_token = NULL WHERE email = ?");
$stmt->execute([$email]);

header('Location: index.php?success=Password+updated.');
exit;


<?php
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

$db = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASSWORD);


<?php
require_once 'config.php';

function send_email($to_email, $subject, $body) {
    $headers = "From: your_email@example.com\r
";
    $headers .= "Content-type:text/html; charset=iso-8859-1\r
";

    mail($to_email, $subject, $body, $headers);
}


// Require the PHPMailer library for sending emails
require 'vendor/autoload.php';
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// Function to send password reset link via email
function forgotPassword($email) {
    // Connect to database
    $conn = new mysqli("localhost", "username", "password", "database");
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Retrieve user data from database
    $query = "SELECT id, email FROM users WHERE email='$email'";
    $result = $conn->query($query);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $userId = $row['id'];
            $userEmail = $row['email'];
            
            // Create a new password reset token
            $token = bin2hex(random_bytes(32));
            
            // Update user data in database with new token
            $query = "UPDATE users SET password_reset_token='$token' WHERE id='$userId'";
            $result = $conn->query($query);
            
            if ($result) {
                // Send email to user with password reset link
                sendPasswordResetEmail($userEmail, $token);
                
                echo "A password reset link has been sent to your email.";
            } else {
                echo "Error updating user data: " . $conn->error;
            }
        }
    } else {
        echo "No user found with that email address.";
    }
    
    // Close database connection
    $conn->close();
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Create a new PHPMailer object
    $mail = new PHPMailer(true);
    
    try {
        // Set up mail server credentials
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->Username = 'your-email@example.com';
        $mail->Password = 'your-password';
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;
        
        // Set up email headers
        $mail->setFrom('your-email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = 'Password Reset Link';
        
        // Set up email body
        $body = '
            <p>Dear user,</p>
            <p>To reset your password, click the following link:</p>
            <p><a href="http://your-website.com/reset-password/'.$token.'">Reset Password</a></p>
            <p>Best regards,</p>
            <p>Your Name</p>
        ';
        
        $mail->Body = $body;
        
        // Send email
        $mail->send();
    } catch (Exception $e) {
        echo 'Error sending email: ' . $mail->ErrorInfo;
    }
}


// Retrieve user data from database based on token
$token = $_GET['token'];
$query = "SELECT id, email FROM users WHERE password_reset_token='$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $userId = $row['id'];
        $userEmail = $row['email'];

        // Prompt user to enter new password
        echo "Enter your new password:</label>";
        $newPassword = $_POST['new_password'];

        // Update user data in database with new password
        $query = "UPDATE users SET password='$newPassword' WHERE id='$userId'";
        $result = $conn->query($query);

        if ($result) {
            echo "Your password has been successfully updated.";
        } else {
            echo "Error updating user data: " . $conn->error;
        }
    }
} else {
    echo "Invalid token.";
}


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to send email with password reset link
function send_email($email, $token) {
    // Email settings
    $subject = 'Reset Your Password';
    $body = 'Click on this link to reset your password: <a href="http://yourwebsite.com/reset_password.php?token=' . $token . '">Reset Password</a>';
    $from = 'your_email@example.com';

    // Send email using PHPMailer or mail() function
    // ...

    return true; // Return true if email is sent successfully
}

// Function to generate password reset token
function generate_token($email) {
    $token = bin2hex(random_bytes(16));
    return $token;
}

// Forgot Password Form Handling
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form
    $email = $_POST['email'];

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get user data from database
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];

        // Generate password reset token
        $token = generate_token($email);

        // Update token in database
        $query = "UPDATE users SET token = '$token' WHERE id = '$user_id'";
        mysqli_query($conn, $query);

        // Send email with password reset link
        send_email($email, $token);
    } else {
        echo 'Email not found.';
    }
} else {
    // Display forgot password form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="text" name="email"><br>
        <input type="submit" value="Send Password Reset Link">
    </form>
    <?php
}

?>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get token from URL
$token = $_GET['token'];

// Check if token exists in database
$query = "SELECT * FROM users WHERE token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // Get user data from database
    $row = mysqli_fetch_assoc($result);
    $user_id = $row['id'];

    // Display password reset form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        New Password: <input type="password" name="new_password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Reset Password">
    </form>
    <?php
} else {
    echo 'Invalid token.';
}

?>


<?php

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the user's email from the form data
    $email = $_POST['email'];

    // Query the database to retrieve the user's details
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows == 1) {
        // User found, generate a new password and send it via email
        $user_data = $result->fetch_assoc();
        $new_password = substr(bin2hex(random_bytes(32)), 0, 16);
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

        // Update the user's password in the database
        $query = "UPDATE users SET password_hash = '$hashed_password' WHERE id = '$user_data[id]'";
        mysqli_query($conn, $query);

        // Send the new password to the user via email (you can use a library like PHPMailer for this)
        send_email($email, $new_password);
    } else {
        echo "Email not found.";
    }
}

// Function to send the new password via email
function send_email($email, $password) {
    // You'll need to implement your own email sending logic here (e.g. using PHPMailer)
    // For now, we'll just print out a message
    echo "New password sent to: $email";
}

?>


<?php

// Configuration
$databaseHost = 'localhost';
$databaseName = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = mysqli_connect($databaseHost, $username, $password, $databaseName);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

  // Get email from form
  $email = $_POST['email'];

  // Validate email
  if (empty($email)) {
    echo 'Please enter your email address.';
    exit;
  }

  // Query database to retrieve user ID
  $query = "SELECT id FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {

    // Retrieve user ID and generate new password
    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];
    $newPassword = bin2hex(random_bytes(16));

    // Update password in database
    $query = "UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'";
    mysqli_query($conn, $query);

    // Send email with new password to user
    sendEmail($email, $newPassword);

  } else {
    echo 'Email not found.';
  }

} else {

  // Display form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="text" name="email" placeholder="Enter your email address">
  <button type="submit">Send New Password</button>
</form>

<?php

}

// Function to send email with new password
function sendEmail($to, $newPassword) {
  $subject = 'New Password';
  $body = "Your new password is: $newPassword";
  mail($to, $subject, $body);
}


<?php

// Configuration variables
define('SITE_URL', 'http://example.com');
define('EMAIL_SUBJECT', 'Reset Password');

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_errno()) {
    echo "Failed to connect to MySQL: " . mysqli_connect_error();
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get email address from form input
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // Query database to get user ID and password hash
    $query = "SELECT id, password_hash FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        echo 'Email address not found';
        exit;
    }

    // Get user ID and password hash from result
    $user_id = mysqli_fetch_assoc($result)['id'];
    $password_hash = mysqli_fetch_assoc($result)['password_hash'];

    // Generate random token for password reset link
    $token = bin2hex(random_bytes(32));

    // Insert token into database
    $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$user_id', '$token')";
    mysqli_query($conn, $query);

    // Send email with password reset link
    $to = $email;
    $subject = EMAIL_SUBJECT;
    $body = '
        <p>Click the following link to reset your password:</p>
        <p><a href="' . SITE_URL . '/reset-password.php?token=' . $token . '">Reset Password</a></p>
    ';

    $headers[] = 'From: ' . EMAIL_FROM;
    mail($to, $subject, $body, implode("\r
", $headers));

    echo 'Email sent with password reset link';
} else {
    // Display form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="email" name="email" placeholder="Enter your email address">
  <button type="submit">Send Email</button>
</form>

<?php
}


<?php

// Configuration variables
define('SITE_URL', 'http://example.com');

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_errno()) {
    echo "Failed to connect to MySQL: " . mysqli_connect_error();
}

// Get token from URL parameter
$token = $_GET['token'];

// Validate token
$query = "SELECT * FROM password_reset_tokens WHERE token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    echo 'Invalid or expired token';
    exit;
}

// Get user ID from result
$user_id = mysqli_fetch_assoc($result)['user_id'];

// Display form to enter new password
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="password" name="new_password" placeholder="Enter your new password">
  <button type="submit">Change Password</button>
  <input type="hidden" name="token" value="<?php echo $token; ?>">
</form>

<?php
}

// Handle form submission to change password
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user ID, new password from form input
    $user_id = $_POST['token'];
    $new_password = $_POST['new_password'];

    // Update password hash in database
    $query = "UPDATE users SET password_hash = '$new_password' WHERE id = '$user_id'";
    mysqli_query($conn, $query);

    echo 'Password changed successfully!';
}


// File: forgot_password.php

<?php
require_once 'config/database.php'; // Your database configuration file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Validate the email address
    if (filter_var($email, FILTER_VALIDATE_EMAIL) === false) {
        echo "Invalid email address.";
        exit;
    }

    try {
        // Retrieve user data from database
        $sql = "SELECT id, password FROM users WHERE email = :email";
        $stmt = $db->prepare($sql);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        $user_data = $stmt->fetch();

        if ($user_data) {
            // Generate a random token for the user
            $token = bin2hex(random_bytes(32));

            // Store the token in the database along with the timestamp
            $sql = "UPDATE users SET password_reset_token = :token, password_reset_timestamp = NOW() WHERE id = :id";
            $stmt = $db->prepare($sql);
            $stmt->bindParam(':token', $token);
            $stmt->bindParam(':id', $user_data['id']);
            $stmt->execute();

            // Send the email with reset instructions
            $subject = "Reset Your Password";
            $body = "
                Hello,

                You are receiving this email because you have requested to reset your password.
                Please click on the following link to create a new password:
                <a href='http://example.com/reset_password.php?email=$email&token=$token'>Reset Password</a>
                If you did not request to change your password, please ignore this email.

                Best regards,
                [Your Name]
            ";
            $headers = "From: no-reply@example.com";
            mail($email, $subject, $body, $headers);

            echo "Email sent with reset instructions. Please check your inbox.";
        } else {
            echo "User not found.";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    // Display the forgot password form
?>

<form action="" method="post">
    <input type="email" name="email" placeholder="Email Address">
    <button type="submit">Send Reset Instructions</button>
</form>

<?php
}
?>


// File: reset_password.php

<?php
require_once 'config/database.php'; // Your database configuration file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_GET['email'];
    $token = $_GET['token'];

    try {
        // Retrieve user data from database
        $sql = "SELECT id, password_reset_token FROM users WHERE email = :email AND password_reset_timestamp > NOW() - INTERVAL 1 HOUR";
        $stmt = $db->prepare($sql);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        $user_data = $stmt->fetch();

        if ($user_data && $user_data['password_reset_token'] == $token) {
            // Update the user's password
            $new_password = $_POST['password'];
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            $sql = "UPDATE users SET password = :password WHERE id = :id";
            $stmt = $db->prepare($sql);
            $stmt->bindParam(':password', $hashed_password);
            $stmt->bindParam(':id', $user_data['id']);
            $stmt->execute();

            echo "Password updated successfully.";
        } else {
            echo "Invalid token or expired.";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    // Display the reset password form
?>

<form action="" method="post">
    <input type="password" name="new_password" placeholder="New Password">
    <button type="submit">Update Password</button>
</form>

<?php
}
?>


<?php
$db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');
?>


<?php

// Configuration
$secret_key = 'your_secret_key_here';
$db_host = 'your_database_host';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function generateResetToken() {
  // Generate a random token for the user's reset password link
  return bin2hex(random_bytes(32));
}

function sendEmail($email, $reset_token) {
  // Send an email to the user with a reset password link
  $subject = 'Password Reset';
  $message = "Dear user,

You are receiving this email because we received a request to reset your password.

To reset your password, click on the following link:

<a href='http://your_domain.com/reset_password.php?token=$reset_token'>Reset Password</a>

Best regards,
The Team";
  $from = 'your_email@example.com';
  $to = $email;
  mail($to, $subject, $message, "From: $from");
}

// Check if the form has been submitted
if (isset($_POST['submit'])) {
  // Get the user's email address from the form
  $email = $_POST['email'];

  // Check if the email exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);
  if ($result->num_rows > 0) {
    // Generate a reset token for the user
    $reset_token = generateResetToken();

    // Update the user's reset token in the database
    $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
    $conn->query($update_query);

    // Send an email to the user with a reset password link
    sendEmail($email, $reset_token);
  } else {
    echo 'Email not found';
  }
}

// Close connection
$conn->close();

?>

<!-- HTML Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  Email: <input type="text" name="email"><br><br>
  <input type="submit" name="submit" value="Forgot Password">
</form>


<?php

// Configuration
define('SECRET_KEY', 'your_secret_key_here');
define('EMAIL_TEMPLATE', 'path/to/email/template.txt');

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get email from form
  $email = $_POST['email'];

  // Validate email
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }

  // Find user by email
  $user = findUserByEmail($email);

  // If no user found, display error message
  if (!$user) {
    echo 'No account found with that email address';
    exit;
  }

  // Generate reset token
  $resetToken = generateResetToken();

  // Store reset token in database
  storeResetToken($user['id'], $resetToken);

  // Send password reset email
  sendPasswordResetEmail($email, $resetToken);
}

// Functions

function findUserByEmail($email) {
  global $conn;
  $sql = 'SELECT * FROM users WHERE email = ?';
  $stmt = $conn->prepare($sql);
  $stmt->bind_param('s', $email);
  $stmt->execute();
  return $stmt->get_result()->fetch_assoc();
}

function generateResetToken() {
  return bin2hex(random_bytes(32));
}

function storeResetToken($userId, $resetToken) {
  global $conn;
  $sql = 'INSERT INTO reset_tokens (user_id, token) VALUES (?, ?)';
  $stmt = $conn->prepare($sql);
  $stmt->bind_param('is', $userId, $resetToken);
  $stmt->execute();
}

function sendPasswordResetEmail($email, $resetToken) {
  global $emailTemplate;
  $subject = 'Reset your password';
  $body = str_replace('{{ reset_token }}', $resetToken, file_get_contents(EMAIL_TEMPLATE));
  mail($email, $subject, $body);
}


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

function generateRandomToken() {
    return substr(bin2hex(random_bytes(32)), 0, 40);
}

function sendResetEmail($email, $token) {
    // Email settings
    $subject = "Reset your password";
    $body = "Click this link to reset your password: <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>";

    // Send email using a library like SwiftMailer or PHPMailer
}

function forgotPassword($email) {
    global $conn;

    // Check if user exists
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get user ID
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];

        // Generate reset token
        $resetToken = generateRandomToken();

        // Update password reset token in database
        $query = "UPDATE users SET reset_token='$resetToken' WHERE id=$userId";
        mysqli_query($conn, $query);

        // Send email with reset link
        sendResetEmail($email, $resetToken);
    }

    return true;
}

// Handle form submission
if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];
    forgotPassword($email);
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

function resetPassword($token, $newPassword) {
    global $conn;

    // Check if token is valid
    $query = "SELECT * FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get user ID
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];

        // Update password in database
        $query = "UPDATE users SET password=PASSWORD('$newPassword') WHERE id=$userId";
        mysqli_query($conn, $query);

        // Delete reset token from database
        $query = "DELETE FROM users WHERE reset_token='$token'";
        mysqli_query($conn, $query);
    }

    return true;
}

// Handle form submission
if (isset($_POST['reset_password'])) {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];

    // Validate token and password
    if (!empty($token) && !empty($newPassword)) {
        resetPassword($token, $newPassword);
    }
}

?>


<?php

// Database connection settings
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create a database connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check the connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send email with password reset link
function send_password_reset_email($email, $name) {
    // Set up mail server settings
    $from = "your_email@example.com";
    $to = $email;
    $subject = "Password Reset Request for Your Account";

    // Create a random token for the password reset link
    $token = bin2hex(random_bytes(32));

    // Insert the token into the database (for later verification)
    $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('', '$token')";
    if (!$conn->query($query)) {
        echo "Error inserting reset token: " . $conn->error;
        exit();
    }

    // Send email with link to reset password
    $message = "<p>Dear $name,</p>";
    $message .= "<p>We have received a request to reset your password.</p>";
    $message .= "<p>To complete the process, please click on this link:</p>";
    $message .= "<a href='" . htmlspecialchars($_SERVER['PHP_SELF']) . "?token=$token&email=$email'>Click here to reset your password</a>";
    $message .= "<p>Best regards,</p>";

    // Send email
    mail($to, $subject, $message, "From: $from");

    return true;
}

// Check if the user has submitted a request for a new password
if (isset($_POST['email'])) {
    // Get user's name and email from database
    $query = "SELECT * FROM users WHERE email = '" . $_POST['email'] . "'";
    if ($result = $conn->query($query)) {
        $row = $result->fetch_assoc();
        if ($row) {
            // Send password reset email
            send_password_reset_email($_POST['email'], $row['name']);
        } else {
            echo "No user found with that email address.";
        }
    } else {
        echo "Error searching for user: " . $conn->error;
    }
}

// If the user has submitted a request, print a success message
if (isset($_POST['email'])) {
    echo "Password reset link sent to your email!";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
define('PASSWORD_SALT', 'your_secret_salt'); // replace with your secret salt
define('RESET_TOKEN_EXPIRES_IN', 3600); // reset token expires in 1 hour

// Function to generate password hash
function generatePasswordHash($password) {
  $salt = substr(PASSWORD_SALT, 0, 16);
  return crypt($password, $salt);
}

// Function to send forgot password email
function sendForgotPasswordEmail($email) {
  // Your email configuration here
  $to = $email;
  $subject = 'Reset your password';
  $body = '
    <p>Click on the link below to reset your password:</p>
    <a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $_SESSION['reset_token'] . '">Reset Password</a>
  ';
  mail($to, $subject, $body);
}

// Function to handle forgot password request
function forgotPassword() {
  if ($_SERVER['REQUEST_METHOD'] != 'POST') {
    return array('error' => 'Invalid request');
  }

  $email = $_POST['email'];

  // Validate email input
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    return array('error' => 'Invalid email address');
  }

  // Check if user exists in database
  $db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');
  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  if ($stmt->rowCount() == 0) {
    return array('error' => 'Email address not found');
  }

  // Generate reset token
  $resetToken = bin2hex(random_bytes(32));
  $_SESSION['reset_token'] = $resetToken;

  // Update user record with reset token and expiration time
  $db->beginTransaction();
  try {
    $stmt = $db->prepare('UPDATE users SET reset_token = :token, reset_expires_at = NOW() + INTERVAL ? HOUR WHERE email = :email');
    $stmt->bindParam(':token', $resetToken);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':expires_in', RESET_TOKEN_EXPIRES_IN);
    $stmt->execute();
    if ($db->commit()) {
      // Send forgot password email
      sendForgotPasswordEmail($email);
      return array('success' => 'Reset link sent to your email');
    } else {
      throw new Exception('Database error');
    }
  } catch (Exception $e) {
    $db->rollBack();
    return array('error' => 'Error sending reset link');
  }

  // Rollback transaction if any errors occur
  $db->rollBack();

  return array('error' => 'Unknown error occurred');
}

// Handle forgot password request
$result = forgotPassword();
echo json_encode($result);

?>


<?php

// Include forgot_password.php file
require_once 'forgot_password.php';

// Handle reset request
$result = handleResetRequest();
echo json_encode($result);

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset link via email
function send_reset_link($email) {
  // Generate a random token for the user
  $token = bin2hex(random_bytes(32));

  // Insert token into database with user ID and expiration time (e.g. 30 minutes)
  $query = "INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES ((SELECT id FROM users WHERE email = '$email'), '$token', DATE_ADD(NOW(), INTERVAL 30 MINUTE))";
  if (!$conn->query($query)) {
    echo "Error inserting token into database: " . $conn->error;
    return false;
  }

  // Send password reset link via email
  $subject = "Reset your password for [Your Website Name]";
  $body = "
  <p>Hello, you have requested to reset your password.</p>
  <p>Click on the following link to reset your password:</p>
  <a href='http://yourwebsite.com/reset-password?token=$token'>Reset Password</a>
  ";
  mail($email, $subject, $body);

  return true;
}

// Function to verify and update user's password
function verify_and_update_password($token, $new_password) {
  // Get the user ID from the token
  $query = "SELECT user_id FROM password_reset_tokens WHERE token = '$token' AND expires_at > NOW()";
  if (!$result = $conn->query($query)) {
    echo "Error retrieving user ID: " . $conn->error;
    return false;
  }

  // If no matching token is found, return false
  if ($result->num_rows == 0) {
    return false;
  }

  // Update the user's password
  $user_id = $result->fetch_assoc()['user_id'];
  $query = "UPDATE users SET password_hash = PASSWORD('$new_password') WHERE id = '$user_id'";
  if (!$conn->query($query)) {
    echo "Error updating user's password: " . $conn->error;
    return false;
  }

  // Delete the token from the database
  $query = "DELETE FROM password_reset_tokens WHERE token = '$token'";
  if (!$conn->query($query)) {
    echo "Error deleting token: " . $conn->error;
    return false;
  }

  return true;
}

// Handle forgot password form submission
if (isset($_POST['email'])) {
  // Validate email address
  if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit();
  }

  // Check if user exists and send reset link
  $query = "SELECT id FROM users WHERE email = '".$_POST['email']."'";
  if ($result = $conn->query($query)) {
    if ($result->num_rows == 1) {
      send_reset_link($_POST['email']);
      echo 'Reset link sent to your email';
    } else {
      echo 'Email not found in our records';
    }
  } else {
    echo "Error checking user existence: " . $conn->error;
  }
}

?>


CREATE TABLE users (
  id INT PRIMARY KEY AUTO_INCREMENT,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  reset_token VARCHAR(255),
  reset_expires TIMESTAMP
);


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
if (!$conn) {
  die("Connection failed: " . mysqli_error($conn));
}

function forgotPassword($email)
{
  global $conn;

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 0) {
    echo "Email not found";
    return;
  }

  // Generate random reset token
  $reset_token = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 32);

  // Update user's reset token and expires timestamp
  $query = "UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'";
  mysqli_query($conn, $query);

  // Send email with reset link
  sendResetEmail($email, $reset_token);
}

function sendResetEmail($email, $reset_token)
{
  // Replace with your own mail function or library
  $subject = "Password Reset";
  $body = "Click here to reset your password: <a href='http://your-website.com/reset-password.php?token=$reset_token'>Reset Password</a>";
  mail($email, $subject, $body);
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  forgotPassword($email);
}


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h1>Forgot Password</h1>
    <form action="" method="post">
        <label for="email">Email Address:</label>
        <input type="email" id="email" name="email"><br><br>
        <button type="submit" name="submit">Submit</button>
    </form>
</body>
</html>


<?php

// Connect to database (replace with your own database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form has been submitted
if (isset($_POST['submit'])) {

    // Get the email address from the form
    $email = $_POST['email'];

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Query to select user's data based on email address
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // User exists, generate a password reset token and send an email

        // Generate a random token (replace with your own token generation function)
        $token = substr(md5(uniqid(mt_rand(), true)), 0, 32);

        // Query to update user's data with the new token
        $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        mysqli_query($conn, $query);

        // Send an email with a password reset link (replace with your own email sending function)
        send_password_reset_email($email, $token);
    } else {
        echo "Email address not found";
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php

// Define email sending function (replace with your own email sending library or API)

function send_password_reset_email($email, $token) {
    // Set up email headers
    $to = $email;
    $subject = "Reset Your Password";
    $headers = 'From: your_email@example.com' . "\r
" .
        'Reply-To: your_email@example.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8\r
';

    // Set up email body
    $body = '
        <p>Hello,</p>
        <p>To reset your password, click on the following link:</p>
        <a href="http://yourwebsite.com/reset-password.php?token=' . $token . '">Reset Password</a>
        <p>Best regards,
        Your Website Team</p>
    ';

    // Send email
    mail($to, $subject, $body, $headers);
}
?>


<?php

// Connect to database (replace with your own database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form has been submitted
if (isset($_GET['token'])) {

    // Get the token from the URL
    $token = $_GET['token'];

    // Query to select user's data based on token
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // User exists, display the reset password form

        ?>
        <h1>Reset Password</h1>
        <form action="" method="post">
            <label for="new_password">New Password:</label>
            <input type="password" id="new_password" name="new_password"><br><br>
            <button type="submit" name="submit">Submit</button>
        </form>

        <?php
    } else {
        echo "Invalid token";
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php

// Connect to database (replace with your own database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form has been submitted
if (isset($_POST['submit'])) {

    // Get the token from the URL
    $token = $_GET['token'];

    // Get the new password from the form
    $new_password = $_POST['new_password'];

    // Query to update user's data with the new password
    $query = "UPDATE users SET password_reset_token = NULL, password = '$new_password' WHERE password_reset_token = '$token'";
    mysqli_query($conn, $query);

    echo "Password reset successful";
}

// Close database connection
mysqli_close($conn);

?>


<form action="" method="post">
    <input type="email" name="email" placeholder="Enter your email address">
    <button type="submit">Send Reset Link</button>
</form>


<?php

// Define the email configuration
$smtpHost = 'your-smtp-host';
$smtpPort = 587;
$fromEmail = 'your-email@example.com';
$fromName = 'Your Name';

// Check if the form has been submitted
if (isset($_POST['email'])) {

    // Connect to the database (assuming you're using a MySQL database)
    $conn = new mysqli('localhost', 'username', 'password', 'database');

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get the user's email address from the form submission
    $email = $_POST['email'];

    // Query to check if the email address is valid
    $query = "SELECT * FROM users WHERE email = '$email'";

    // Execute the query
    $result = $conn->query($query);

    // Check if the email address is valid
    if ($result->num_rows > 0) {

        // Get the user's ID from the database
        $userId = $result->fetch_assoc()['id'];

        // Generate a password reset token
        $token = bin2hex(random_bytes(32));

        // Insert the password reset token into the database
        $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
        $conn->query($query);

        // Send an email with a password reset link
        sendEmail($email, $token);
    }

    // Close the connection
    $conn->close();
}

// Function to send an email with a password reset link
function sendEmail($email, $token) {
    $headers = 'From: ' . $fromName . ' <' . $fromEmail . '>' . "\r
";
    $headers .= 'Content-Type: text/html; charset=UTF-8' . "\r
";

    $message = '<p>Hello!</p>';
    $message .= '<p>Click this link to reset your password:</p>';
    $message .= '<p><a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '">Reset Password</a></p>';

    mail($email, 'Password Reset', $message, $headers);
}

?>


<?php

// Check if the form has been submitted
if (isset($_POST['new_password'])) {

    // Connect to the database (assuming you're using a MySQL database)
    $conn = new mysqli('localhost', 'username', 'password', 'database');

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get the token from the URL parameter
    $token = $_GET['token'];

    // Query to check if the token is valid
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";

    // Execute the query
    $result = $conn->query($query);

    // Check if the token is valid
    if ($result->num_rows > 0) {

        // Get the user's ID from the database
        $userId = $result->fetch_assoc()['id'];

        // Insert the new password into the database
        $newPassword = $_POST['new_password'];
        $query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
        $conn->query($query);

        // Delete the token from the database
        $query = "DELETE FROM users WHERE password_reset_token = '$token'";
        $conn->query($query);
    }

    // Close the connection
    $conn->close();
}

?>


<?php

// Configuration settings
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myusername';
$password = 'mypassword';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Sanitize input data
$email = $_POST['email'];

// Check if email exists in database
$sql = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Email found, generate a new password and send it via email

    // Generate a new password (e.g., random string)
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);

    // Update user's password in database
    $update_sql = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    $conn->query($update_sql);

    // Send new password via email (you'll need to implement this part)
    echo "New password sent to your email. Please check your email for the new password.";
} else {
    echo "Email not found in our database. Please try again or contact us.";
}

$conn->close();

?>


<?php

// Include your database connection file here.
require_once 'db_connection.php';

function sendResetLink($email) {
    // Query to get user details by email
    $query = "SELECT id, username FROM users WHERE email = '$email'";
    if ($result = mysqli_query($conn, $query)) {
        $row = mysqli_fetch_assoc($result);
        if ($row) {
            // Generate a token and update the table with it
            $token = bin2hex(random_bytes(16));
            $updateQuery = "UPDATE users SET token = '$token' WHERE email = '$email'";
            if (mysqli_query($conn, $updateQuery)) {
                // Send the reset link to the user's email.
                sendEmail($email, $token);
                return true;
            }
        } else {
            echo "No user found with this email.";
        }
    } else {
        echo "Error updating table";
    }
    mysqli_close($conn);
}

function sendEmail($email, $token) {
    // Email variables
    $subject = "Reset Password Link";
    $message = "
    <p>Click on the link below to reset your password:</p>
    <a href='reset_password_handler.php?email=$email&token=$token'>Reset Password</a>
    ";
    
    // Email headers and variables.
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
    $headers .= "From: your-email@yourdomain.com" . "\r
";
    $headers .= "Reply-To: $email" . "\r
";
    
    mail($email, $subject, $message, $headers);
}

// Function to update the password
function updatePassword($token) {
    // Query to get user details by token (since we don't send passwords directly via email)
    $query = "SELECT id FROM users WHERE token = '$token'";
    if ($result = mysqli_query($conn, $query)) {
        $row = mysqli_fetch_assoc($result);
        if ($row) {
            // Ask the user to input their new password
            echo '<form action="update_password.php" method="post">';
            echo 'New Password: <input type="password" name="newPassword"><br>';
            echo '<button type="submit">Change Password</button>';
            echo '</form>';
        } else {
            echo "Token not found.";
        }
    } else {
        echo "Error updating table";
    }
    mysqli_close($conn);
}

// Usage example
if (isset($_GET['token'])) {
    updatePassword($_GET['token']);
} elseif (isset($_POST['sendResetLink'])) {
    sendResetLink($_POST['email']);
} else {
    // Show form to enter email for reset link
    echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
    echo 'Email: <input type="text" name="email"><br>';
    echo '<button type="submit">Send Reset Link</button>';
    echo '</form>';
}


<?php
require_once 'db_connection.php';

if (isset($_POST['newPassword'])) {
    $token = $_GET['token'];
    // Query to update password
    $query = "UPDATE users SET password = '$newPassword' WHERE token = '$token'";
    if (mysqli_query($conn, $query)) {
        echo "Your password has been updated.";
    } else {
        echo "Error updating password";
    }
}


CREATE TABLE users (
  id INT PRIMARY KEY AUTO_INCREMENT,
  email VARCHAR(255) NOT NULL UNIQUE,
  password_hash VARCHAR(255) NOT NULL,
  reset_token VARCHAR(255)
);


<?php

require_once 'db_connect.php'; // Include database connection script

// Check if form has been submitted
if (isset($_POST['email'])) {
  $email = $_POST['email'];

  // Query database to retrieve user's email address
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  // Check if user exists
  if ($result->num_rows > 0) {
    // Retrieve user data
    $user_data = $result->fetch_assoc();

    // Generate a reset token
    $reset_token = bin2hex(random_bytes(32));

    // Update database with new reset token
    $query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send email to user with reset link
    send_reset_email($user_data['email'], $reset_token);
  } else {
    echo 'Email address not found.';
  }
}

function send_reset_email($email, $reset_token) {
  // Define SMTP settings (replace with your own)
  $smtp_server = 'your_smtp_server';
  $smtp_port = 587;
  $from_email = 'your_from_email@example.com';

  // Create email body
  $subject = 'Reset Your Password';
  $body = "Dear User,
To reset your password, click on the following link:
<a href='http://your_website.com/reset_password.php?token=$reset_token'>Reset Password</a>
Best regards,
Your Website";

  // Send email using PHPMailer (or any other library)
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host     = $smtp_server;
  $mail->Port     = $smtp_port;
  $mail->From     = $from_email;
  $mail->addAddress($email);
  $mail->Subject  = $subject;
  $mail->Body     = $body;
  $mail->AltBody  = '';
  if (!$mail->send()) {
    echo 'Error sending email: ' . $mail->ErrorInfo;
  }
}

?>


<?php

require_once 'db_connect.php'; // Include database connection script

// Check if form has been submitted
if (isset($_POST['token'])) {
  $reset_token = $_POST['token'];

  // Query database to retrieve user's data
  $query = "SELECT * FROM users WHERE reset_token = '$reset_token'";
  $result = mysqli_query($conn, $query);

  // Check if token is valid
  if ($result->num_rows > 0) {
    // Retrieve user data
    $user_data = $result->fetch_assoc();

    // Hash new password
    $new_password_hash = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Update database with new password and reset token (null)
    $query = "UPDATE users SET password_hash = '$new_password_hash', reset_token = NULL WHERE email = '$user_data[email]'";
    mysqli_query($conn, $query);
  } else {
    echo 'Invalid token.';
  }
}

?>


CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    reset_token VARCHAR(255) DEFAULT NULL,
    reset_expires TIMESTAMP DEFAULT NULL
);


// config.php (example configuration file)
<?php
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

function connectToDatabase() {
    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

function generateResetToken($length = 32) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $token = '';
    for ($i = 0; $i < $length; $i++) {
        $token .= substr($characters, rand(0, strlen($characters) - 1), 1);
    }
    return $token;
}

// forgotpassword.php (example script)
<?php
require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $email = $_POST['email'];

    try {
        // Connect to database
        $conn = connectToDatabase();

        // Get user ID and reset token from email
        $stmt = $conn->prepare("SELECT id, reset_token FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Token is valid
            $user_id = $result->fetch_assoc()['id'];
            $token = generateResetToken(32);

            // Update token in database
            $conn->query("UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 1 HOUR WHERE id = ?", $token, $user_id);
        } else {
            throw new Exception('Invalid email');
        }

        // Send email with link to reset password
        sendPasswordResetEmail($email, $token);

        header("Location: /password_reset.php?success=1");
        exit();
    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

// sendPasswordResetEmail function
function sendPasswordResetEmail($email, $token) {
    // Send email with link to reset password
    // Example using PHPMailer or SwiftMailer libraries
}


<!-- password_reset.php (example template) -->
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if ($_GET['success'] == 1): ?>
        <p>Password reset successful!</p>
    <?php endif; ?>

    <h2>Reset Password</h2>

    <form method="post" action="">
        <label for="email">Email:</label>
        <input type="text" id="email" name="email">
        <br>

        <label for="new_password">New Password:</label>
        <input type="password" id="new_password" name="new_password">
        <br>

        <label for="confirm_password">Confirm New Password:</label>
        <input type="password" id="confirm_password" name="confirm_password">
        <br>

        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php

require_once 'config.php'; // database connection settings
require_once 'functions.php'; // utility functions for email sending and hashing

// Check if form data has been submitted
if (isset($_POST['email'])) {
  // Validate email address
  $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
  if ($email) {
    // Retrieve user ID from database based on email address
    $user_id = getUserIDByEmail($db, $email);
    if ($user_id) {
      // Generate a random password reset token and store it in the database
      $token = bin2hex(random_bytes(32));
      updateToken($db, $user_id, $token);

      // Send an email with a link to reset the password
      sendPasswordResetEmail($email, $token);
    } else {
      echo "Error: User not found.";
    }
  } else {
    echo "Invalid email address.";
  }
} else {
  // Display forgot password form if no data has been submitted
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email Address:</label>
    <input type="text" id="email" name="email" />
    <button type="submit">Reset Password</button>
  </form>
  <?php
}


<?php

// Database connection settings
$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');

// Utility functions for email sending and hashing (e.g. `sendPasswordResetEmail()` and `hash()`)

?>


<?php

function sendPasswordResetEmail($email, $token) {
  // Set up email sender using PHPMailer or similar library
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = 'your_email@example.com';
  $mail->Password = 'your_password';

  // Set email body and subject
  $body = "Click on this link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>";
  $subject = "Password Reset Request";

  // Send email using PHPMailer
  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $body;
  $mail->send();

  echo "Email sent successfully.";
}

function updateToken($db, $user_id, $token) {
  // Update user's token in the database
  $query = "UPDATE users SET password_reset_token = :token WHERE id = :user_id";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':user_id', $user_id);
  $stmt->execute();
}

function getUserIDByEmail($db, $email) {
  // Retrieve user ID from database based on email address
  $query = "SELECT id FROM users WHERE email = :email";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  return $stmt->fetchColumn();
}

?>


<?php

// Configuration
$rootDir = './';
$dbHost = 'localhost'; // Update this if your MySQL server is not local
$dbUser = 'youruser';   // Your database username
$dbPass = 'yourpass';   // Your database user's password
$dbName = 'yourdatabase';  // Name of the database

// Connect to Database
$conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendResetPasswordEmail($email, $newPass)
{
    // Generate a random password and save it temporarily to reset link
    $resetLink = 'http://yourwebsite.com/reset-password?email=' . $email . '&password=' . urlencode($newPass);

    try {
        mail($email, "Reset Your Password", "To reset your password, click the following link: 

" . $resetLink);
    } catch (Exception $e) {
        echo 'Error sending email: ',  $e->getMessage(), "
";
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!empty($_POST['email'])) {
        // Sanitize the input
        $email = $_POST['email'];
        $email = strip_tags($email);
        $email = htmlspecialchars($email);

        // Get user data from database
        $query = "SELECT * FROM Users WHERE email LIKE '%$email%'";
        $result = mysqli_query($conn, $query) or die('Query failed: ' . mysqli_error());

        if (mysqli_num_rows($result) > 0) {
            $userRow = mysqli_fetch_assoc($result);
            // Generate a new password
            $newPass = substr(md5(uniqid(rand(), true)), 0, 8);

            // Send the new password via email with reset link
            sendResetPasswordEmail($email, $newPass);

            echo "A password reset link has been sent to your email. Please check and follow the instructions.";
        } else {
            echo 'User not found.';
        }
    } else {
        echo 'Please enter a valid email address.';
    }
}

// Close database connection
$conn->close();

?>


<?php

require_once 'config/database.php'; // your database config file

// validate request data
if (!isset($_POST['email'])) {
    header('Location: login.php');
    exit;
}

$email = trim($_POST['email']);

// check if email is valid and exists in database
$stmt = $db->prepare("SELECT * FROM users WHERE email = ?");
$stmt->execute([$email]);
$user = $stmt->fetch();

if (!$user) {
    echo 'Email not found';
    exit;
}

// generate a password reset token
$token = bin2hex(random_bytes(32));
$token_expiration = time() + 3600; // expires in 1 hour

// update user data with new token
$stmt = $db->prepare("UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?");
$stmt->execute([$token, $token_expiration, $email]);

// send reset password email
send_password_reset_email($user['email'], $token);

header('Location: reset_password.php?token=' . $token);
exit;

function send_password_reset_email($to_email, $token) {
    // set up mail headers
    $headers = 'From: your-email@example.com' . "\r
";
    $headers .= 'Content-Type: text/html; charset=UTF-8' . "\r
";

    // generate email body
    $body = '
        <h1>Reset Your Password</h1>
        <p>Please click on the link below to reset your password:</p>
        <a href="reset_password.php?token=' . $token . '">Reset Password</a>
    ';

    // send mail
    mail($to_email, 'Password Reset', $body, $headers);
}

?>


<?php

require_once 'config/database.php'; // your database config file

if (!isset($_GET['token'])) {
    header('Location: login.php');
    exit;
}

$token = $_GET['token'];

// validate token and expiration time
$stmt = $db->prepare("SELECT * FROM users WHERE password_reset_token = ? AND password_reset_expires > ?");
$stmt->execute([$token, time()]);
$user = $stmt->fetch();

if (!$user) {
    echo 'Invalid or expired token';
    exit;
}

// generate a new password
$new_password = bin2hex(random_bytes(32));

// update user data with new password
$stmt = $db->prepare("UPDATE users SET password = ?, password_reset_token = NULL WHERE id = ?");
$stmt->execute([password_hash($new_password, PASSWORD_BCRYPT), $user['id']]);

echo 'Your password has been reset to: ' . $new_password;
exit;

?>


<?php

// Configuration
require_once 'config.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
  // Get the email from the user input
  $email = $_POST['email'];

  // Validate the email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }

  // Query to retrieve the user's information based on their email address
  $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Check if a user with the specified email exists
  if ($stmt->rowCount() == 1) {
    // Get the user's information from the result
    $user = $stmt->fetch();

    // Generate a reset password token
    $token = bin2hex(random_bytes(32));

    // Update the user's record with the new reset password token
    $stmt = $pdo->prepare("UPDATE users SET password_reset_token = :token, last_login_ip = :last_login_ip WHERE id = :id");
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':last_login_ip', $_SERVER['REMOTE_ADDR']);
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();

    // Send an email to the user with a link to reset their password
    sendPasswordResetEmail($email, $token);

    echo "An email has been sent to you with instructions on how to reset your password.";
  } else {
    echo "No user found with that email address.";
  }
}

// Function to send an email with the password reset link
function sendPasswordResetEmail($email, $token) {
  // Configuration
  require_once 'config.php';

  // Email configuration
  $subject = 'Reset Your Password';
  $body = "Dear $email,

You are receiving this email because you requested a password reset for your account. Please click the link below to reset your password:

<a href='http://example.com/reset-password?token=$token'>Reset Password</a>

Best regards,
The Example Team";

  // Send the email using PHPMailer or mail() function
  $mailer = new PHPMailer;
  $mailer->isSMTP();
  $mailer->Host = 'smtp.example.com';
  $mailer->Username = 'example@example.com';
  $mailer->Password = 'password';
  $mailer->Port = 587;
  $mailer->setFrom('example@example.com', 'Example Team');
  $mailer->addAddress($email);
  $mailer->Subject = $subject;
  $mailer->Body = $body;
  if (!$mailer->send()) {
    echo "Error sending email: " . $mailer->ErrorInfo;
  }
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

// Function to send email using PHPMailer
function sendEmail($email, $token) {
    require_once 'PHPMailer/src/PHPMailer.php';
    require_once 'PHPMailer/src/SMTP.php';

    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com'; // or your SMTP server
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@gmail.com'; // or your email
    $mail->Password = 'your_password'; // or your password

    $mail->setFrom('your_email@gmail.com', 'Your Name');
    $mail->addAddress($email);

    $body = '<p>Click on this link to reset your password: <a href="http://localhost/reset_password.php?token=' . $token . '">Reset Password</a></p>';
    $mail->isHTML(true);
    $mail->Subject = 'Reset Your Password';
    $mail->Body = $body;
    $mail->AltBody = 'This is a plain text email';

    if (!$mail->send()) {
        echo 'Message could not be sent. Mailer Error: ' . $mail->ErrorInfo;
    } else {
        echo 'Email has been sent successfully!';
    }
}

// Function to reset password
function resetPassword($email, $token) {
    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

    // Check if token exists in database
    $query = "SELECT * FROM users WHERE email='$email' AND reset_token='$token'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 1) {
        // Update password using MD5 hash
        $new_password = md5('your_new_password');
        $query = "UPDATE users SET password='$new_password' WHERE email='$email'";
        mysqli_query($conn, $query);

        echo 'Password has been updated successfully!';
    } else {
        echo 'Invalid token or email.';
    }

    // Close database connection
    mysqli_close($conn);
}

// Handle forgot password request
if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 1) {
        // Generate random token and store it in session
        $token = bin2hex(random_bytes(32));
        $_SESSION['reset_token'] = $token;

        // Send email to user with reset link
        sendEmail($email, $token);
    } else {
        echo 'User not found.';
    }
}

?>


<?php

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

// Check if token exists in session
if (isset($_SESSION['reset_token'])) {
    // Get user email from token
    $query = "SELECT * FROM users WHERE reset_token='".$_SESSION['reset_token']."'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 1) {
        // Update password using MD5 hash
        $new_password = md5($_POST['new_password']);
        $query = "UPDATE users SET password='$new_password' WHERE reset_token='".$_SESSION['reset_token']."'";
        mysqli_query($conn, $query);

        echo 'Password has been updated successfully!';
    } else {
        echo 'Invalid token.';
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php

// Include database connection file
require_once 'db.php';

// Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];

    // SQL query to retrieve user's data
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Retrieve user's id and password
        while ($row = mysqli_fetch_assoc($result)) {
            $userId = $row['id'];
            $password = $row['password'];

            // Generate new password
            $newPassword = generateRandomString(8);

            // Update user's password in database
            $updateSql = "UPDATE users SET password='$newPassword' WHERE id='$userId'";
            mysqli_query($conn, $updateSql);

            // Send email with new password
            sendEmail($email, $newPassword);
        }
    } else {
        echo 'No account found with that email';
    }

    // Close database connection
    mysqli_close($conn);
}

// Function to generate random string
function generateRandomString($length) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $randomString;
}

// Function to send email
function sendEmail($email, $newPassword) {
    require_once 'phpmailer/PHPMailer.php';
    require_once 'phpmailer/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer(true);
    try {
        // Set up SMTP server
        $mail->isSMTP();
        $mail->Host       = 'smtp.gmail.com';
        $mail->SMTPAuth   = true;
        $mail->Username   = 'your_email@gmail.com';  // Use your own email address here
        $mail->Password   = 'your_password';  // Use your own password here
        $mail->Port       = 587;

        // Set up mail sender and recipient details
        $mail->setFrom('your_email@gmail.com', 'Your Name');
        $mail->addAddress($email);

        // Set email content
        $mail->isHTML(true);
        $mail->Subject = 'New Password';
        $mail->Body    = '<p>Hello, your new password is: ' . $newPassword . '</p>';

        // Send email
        $mail->send();
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
    }
}
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($email)
{
    global $conn;

    // Query to retrieve user by email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // User found, generate new password and send reset link via email

        // Generate random password
        $newPassword = substr(str_shuffle("0123456789abcdefghijklmnopqrstuvwxyz"), 0, 8);

        // Update user's password in database
        $query = "UPDATE users SET password = '$newPassword' WHERE email = '$email'";
        $conn->query($query);

        // Send reset link via email (example using PHPMailer)
        require_once 'PHPMailer/PHPMailerAutoload.php';

        $mail = new PHPMailer();

        $mail->isSMTP();
        $mail->Host       = 'smtp.example.com';
        $mail->SMTPAuth    = true;
        $mail->Username    = 'your_email@example.com';
        $mail->Password    = 'your_password';
        $mail->Port        = 587;

        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = 'Reset Password';

        // Send email with reset link
        $resetLink = "http://example.com/reset-password.php?email=$email&newPassword=$newPassword";
        $body = "<p>Please click on the following link to reset your password:</p><p>$resetLink</p>";
        $mail->Body    = $body;

        if (!$mail->send()) {
            echo 'Message could not be sent.';
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        } else {
            echo 'Email sent successfully!';
        }

        return true; // Reset link sent
    }

    return false; // User not found
}

// Example usage:
$email = "example@example.com";
if (forgotPassword($email)) {
    echo "Reset link sent to $email.";
} else {
    echo "User not found with email $email.";
}
?>


function forgot_password($email) {
  // Check if the email exists in the database
  $user = getUserByEmail($email);
  if (!$user) {
    return false; // Email not found
  }

  // Generate a reset token
  $reset_token = bin2hex(random_bytes(32));

  // Update the user's reset token and expires date
  updateResetToken($email, $reset_token);

  // Send email with reset link
  sendPasswordResetEmail($email, $reset_token);
}

function getUserByEmail($email) {
  global $db;
  $stmt = $db->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->execute([$email]);
  return $stmt->fetch();
}

function updateResetToken($email, $token) {
  global $db;
  $stmt = $db->prepare("UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = ?");
  $stmt->execute([$token, $email]);
}

function sendPasswordResetEmail($email, $token) {
  // This function would typically be handled by an email library like PHPMailer
  // For simplicity, we'll just print the email body to the console
  echo "Subject: Reset Your Password
";
  echo "Dear user,
";
  echo "Please click this link to reset your password:
";
  echo "<a href='https://example.com/reset-password?token=$token'>Reset Password</a>
";
}


function reset_password($token) {
  // Check if the token is valid
  $user = getUserByResetToken($token);
  if (!$user) {
    return false; // Token not found or expired
  }

  // Update the user's password hash
  updatePasswordHash($user['email'], 'new-password');

  // Remove the reset token and expires date
  updateResetToken($user['email'], null, null);

  // Send email to confirm password change
  sendPasswordChangeEmail($user['email']);
}

function getUserByResetToken($token) {
  global $db;
  $stmt = $db->prepare("SELECT * FROM users WHERE reset_token = ?");
  $stmt->execute([$token]);
  return $stmt->fetch();
}

function updatePasswordHash($email, $new_password) {
  global $db;
  $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE email = ?");
  $stmt->execute([password_hash($new_password, PASSWORD_DEFAULT), $email]);
}

function sendPasswordChangeEmail($email) {
  // This function would typically be handled by an email library like PHPMailer
  // For simplicity, we'll just print the email body to the console
  echo "Subject: Password Changed
";
  echo "Dear user,
";
  echo "Your password has been changed successfully.
";
}


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Get the user's email from the input
$email = $_POST['email'];

// Check if the email exists in the database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $mysqli->query($query);

if ($result->num_rows > 0) {
    // Email found, generate a new password and send it to the user via email
    $user = $result->fetch_assoc();
    
    // Generate a random new password
    $new_password = rand_str(8);
    
    // Update the user's password in the database
    $query = "UPDATE users SET password_hash = '$new_password' WHERE id = '" . $user['id'] . "'";
    $mysqli->query($query);
    
    // Send an email to the user with the new password
    send_email($email, 'New Password', 'Your new password is: ' . $new_password);
} else {
    echo "Email not found.";
}

// Close database connection
$mysqli->close();

function rand_str($length) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    return substr(str_shuffle($characters), 0, $length);
}

function send_email($to_email, $subject, $message) {
    // Configuration for email sending (e.g. using PHPMailer)
    $mail = new PHPMailer();
    $mail->IsSMTP();7111
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    
    $mail->SetFrom('your_email@example.com', 'Your Name');
    $mail->AddAddress($to_email);
    $mail->Subject = $subject;
    $mail->Body = $message;
    
    if (!$mail->Send()) {
        echo "Mailer Error: " . $mail->ErrorInfo;
    }
}

?>


<?php
require_once 'config.php'; // database connection settings

// check if the user has submitted the form
if (isset($_POST['submit'])) {
  $email = trim($_POST['email']);
  $username = trim($_POST['username']);

  // validate the email and username
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // query to retrieve user's password reset token
  $query = "
    SELECT *
    FROM users
    WHERE email = '$email' AND username = '$username'
  ";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // get the user's data from the result set
    $user_data = mysqli_fetch_assoc($result);
    $password_reset_token = $user_data['password_reset_token'];

    // generate a new password reset link and send it to the user via email
    $new_password_reset_link = "http://example.com/reset-password.php?token=" . urlencode($password_reset_token);

    // send an email with the password reset link
    mail(
      $email,
      'Password Reset',
      "
        You have been requested to reset your password. To do so, click on this link:
        $new_password_reset_link
      ",
      "From: example@example.com\r
"
    );

    echo "An email with a password reset link has been sent to you";
  } else {
    echo "User not found";
  }
}
?>


<?php
require_once 'config.php'; // database connection settings

// check if the user has submitted the form
if (isset($_POST['submit'])) {
  $password_reset_token = $_GET['token'];
  $new_password = trim($_POST['new_password']);
  $confirm_new_password = trim($_POST['confirm_new_password']);

  // validate the new password and confirm new password
  if ($new_password !== $confirm_new_password) {
    echo "Passwords do not match";
    exit;
  }

  // query to update user's password
  $query = "
    UPDATE users
    SET password = SHA2('$new_password', 256)
    WHERE password_reset_token = '$password_reset_token'
  ";
  mysqli_query($conn, $query);

  echo "Password has been updated";
}
?>


<?php
// database connection settings
$conn = new mysqli('localhost', 'username', 'password', 'database_name');
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// password reset token column in the users table
$query = "
  ALTER TABLE users
  ADD COLUMN password_reset_token VARCHAR(255)
";
mysqli_query($conn, $query);

?>


CREATE TABLE users (
  id INT AUTO_INCREMENT,
  email VARCHAR(255),
  password_hash VARCHAR(255)
);

CREATE TABLE reset_passwords (
  id INT AUTO_INCREMENT,
  user_id INT,
  token VARCHAR(32),
  expires_at DATETIME
);


<?php

// Configuration
$secret_key = 'your-secret-key';
$db_name = 'your-database-name';

// Connect to database
$conn = new mysqli($db['host'], $db['username'], $db['password'], $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendResetEmail($email, $token)
{
    // Your email sending library here
    mail($email, 'Reset Password', 'Click this link to reset your password: http://your-website.com/reset-password/' . $token);
}

function generateToken()
{
    return bin2hex(random_bytes(16));
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];

            // Generate a token and store it in the database
            $token = generateToken();
            $insert_query = "INSERT INTO reset_passwords (user_id, token) VALUES ('$user_id', '$token')";
            $conn->query($insert_query);

            // Send the email with the token
            sendResetEmail($email, $token);
        }
    } else {
        echo 'No account found';
    }

} else {
    ?>
    <form method="post">
        <input type="text" name="email" placeholder="Your Email">
        <button type="submit">Send Reset Link</button>
    </form>
    <?php
}
?>


<?php

// Configuration
$secret_key = 'your-secret-key';
$db_name = 'your-database-name';

// Connect to database
$conn = new mysqli($db['host'], $db['username'], $db['password'], $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function verifyToken($token)
{
    // Check if token is valid and not expired
    $query = "SELECT id FROM reset_passwords WHERE token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        return true;
    } else {
        return false;
    }
}

function generateNewPassword()
{
    // Generate a new password
    return bin2hex(random_bytes(16));
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['password'];

    if (verifyToken($token)) {
        // Update the user's password
        $query = "UPDATE users SET password_hash = '$new_password' WHERE id = (SELECT user_id FROM reset_passwords WHERE token = '$token')";
        $conn->query($query);

        // Delete the reset password entry
        $query = "DELETE FROM reset_passwords WHERE token = '$token'";
        $conn->query($query);
    } else {
        echo 'Invalid token';
    }

} else {
    ?>
    <form method="post">
        <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        <input type="password" name="password" placeholder="New Password">
        <button type="submit">Reset Password</button>
    </form>
    <?php
}
?>


// forgot_password.php

<?php
require_once 'config.php'; // Your database connection configuration file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    if (empty($email)) {
        echo "Please enter your email address.";
        exit;
    }

    // Query to retrieve user data
    $query = "
        SELECT * 
        FROM users 
        WHERE email = '$email' 
    ";

    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        $user_data = mysqli_fetch_assoc($result);
        // Send a password reset link via email
        send_password_reset_email($user_data['id'], $user_data['username']);
        echo "A password reset link has been sent to your email.";
    } else {
        echo "No user found with this email address.";
    }
}

// Function to send password reset email
function send_password_reset_email($user_id, $username) {
    // Generate a random token for the password reset
    $token = bin2hex(random_bytes(32));
    
    // Update the user's data in the database with the new token
    $query = "
        UPDATE users 
        SET reset_token = '$token' 
        WHERE id = '$user_id'
    ";
    mysqli_query($conn, $query);

    // Send a password reset email to the user
    $subject = "Reset your password";
    $body = "
        Hi $username,

        To reset your password, please click on this link:
        http://example.com/reset-password.php?token=$token

        Best regards,
        Your Application Name
    ";
    mail($email, $subject, $body);
}


// reset_password.php

<?php
require_once 'config.php'; // Your database connection configuration file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['password'];

    if (empty($token) || empty($new_password)) {
        echo "Please enter both a password and confirm it.";
        exit;
    }

    // Query to retrieve user data based on the reset token
    $query = "
        SELECT * 
        FROM users 
        WHERE reset_token = '$token' 
    ";

    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        $user_data = mysqli_fetch_assoc($result);
        
        // Update the user's data in the database with the new password
        $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
        $query = "
            UPDATE users 
            SET password_hash = '$new_password_hash', reset_token = NULL 
            WHERE id = '$user_data[id]'
        ";
        mysqli_query($conn, $query);

        echo "Your password has been updated successfully!";
    } else {
        echo "Invalid token.";
    }
}


<?php
require_once 'config.php'; // database connection settings

if (isset($_POST['submit'])) {
  $email = $_POST['email'];

  try {
    // Check if the user exists
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user = $stmt->fetch();

    if (!$user) {
      throw new Exception('User not found');
    }

    // Generate a random password
    $password = substr(str_shuffle("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), 0, 12);

    // Update the user's password in the database
    $stmt = $pdo->prepare("UPDATE users SET password = :password WHERE id = :id");
    $stmt->bindParam(':password', $password);
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();

    // Send email with new password
    $subject = 'New Password for Your Account';
    $body = "Your new password is: $password";
    $headers = 'From: no-reply@example.com' . "\r
" .
      'Reply-To: no-reply@example.com' . "\r
" .
      'X-Mailer: PHP/' . phpversion();

    mail($email, $subject, $body, $headers);

    echo "New password sent to your email.";
  } catch (Exception $e) {
    echo "Error: " . $e->getMessage();
  }
}
?>

<form action="" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <input type="submit" name="submit" value="Get New Password">
</form>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');
?>


// Connect to the database
$dsn = 'mysql:host=localhost;dbname=mydatabase';
$username = 'myusername';
$password = 'mypassword';

try {
    $conn = new mysqli($dsn, $username, $password);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
} catch (mysqli_sql_exception $e) {
    echo "Error connecting to database: " . $e->getMessage();
}

// Function to send password reset email
function sendResetEmail($email, $resetToken)
{
    // Send an email to the user with a link to reset their password
    $subject = 'Reset Your Password';
    $body = '<p>Click this link to reset your password: <a href="' . $_SERVER['REQUEST_URI'] . '?token=' . $resetToken . '">Reset Password</a></p>';
    $headers = "From: no-reply@example.com\r
";
    mail($email, $subject, $body, $headers);
}

// Function to generate a random reset token
function generateResetToken()
{
    return bin2hex(random_bytes(16));
}

// Forgot password function
if (isset($_POST['forgot-password'])) {
    // Get the user's email address from the form data
    $email = $_POST['email'];

    // Check if the user exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);
    if ($result->num_rows > 0) {
        // Generate a random reset token
        $resetToken = generateResetToken();

        // Update the user's record with the new reset token
        $query = "UPDATE users SET password_reset_token = '$resetToken' WHERE email = '$email'";
        $conn->query($query);

        // Send an email to the user with a link to reset their password
        sendResetEmail($email, $resetToken);
    } else {
        echo 'User not found!';
    }
}

// Close the database connection
$conn->close();


<?php

// Configuration
$DB_HOST = 'localhost';
$DB_USER = 'your_username';
$DB_PASSWORD = 'your_password';
$DB_NAME = 'your_database';

// Connect to database
$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate reset token
function generateResetToken() {
  $token = bin2hex(random_bytes(16));
  return $token;
}

// Check if user exists and send email with reset link
if (isset($_POST['email'])) {
  $email = trim($_POST['email']);
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      $token = generateResetToken();
      // Update user with new reset token
      $updateQuery = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
      $conn->query($updateQuery);

      // Send email with reset link
      $subject = 'Reset Your Password';
      $message = "Click here to reset your password: <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>";
      $headers = 'From: noreply@example.com' . "\r
" .
                 'Content-Type: text/html; charset=UTF-8';
      mail($email, $subject, $message, $headers);

      echo "An email with reset link has been sent to your registered email address.";
    }
  } else {
    echo "Email not found in our database.";
  }

  // Close connection
  $conn->close();
}
?>


<?php

// Configuration
$DB_HOST = 'localhost';
$DB_USER = 'your_username';
$DB_PASSWORD = 'your_password';
$DB_NAME = 'your_database';

// Connect to database
$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to hash password
function hashPassword($password) {
  return password_hash($password, PASSWORD_DEFAULT);
}

// Check if reset token is valid and update password
if (isset($_GET['token'])) {
  $token = trim($_GET['token']);
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      // Update user with new password
      if (isset($_POST['password'])) {
        $newPassword = trim($_POST['password']);
        $hashedPassword = hashPassword($newPassword);
        $updateQuery = "UPDATE users SET password_hash = '$hashedPassword' WHERE reset_token = '$token'";
        $conn->query($updateQuery);

        echo "Your password has been updated successfully.";
      }
    }
  } else {
    echo "Invalid reset token.";
  }

  // Close connection
  $conn->close();
}
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendResetEmail($email, $resetToken)
{
    // Send email using a library like PHPMailer or SwiftMailer
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Reset Your Password';
    $mail->Body = "Click this link to reset your password: <a href='http://example.com/reset-password?token=$resetToken'>Reset Password</a>";
    $mail->send();
}

// Function to handle forgot password request
function forgotPassword($email)
{
    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);
    if ($result->num_rows == 0) {
        return array('error' => 'Email not found');
    }

    // Generate reset token
    $resetToken = bin2hex(random_bytes(32));
    $query = "UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'";
    $conn->query($query);

    // Send password reset email
    sendResetEmail($email, $resetToken);
}

// Handle forgot password request
if (isset($_POST['forgot-password'])) {
    $email = $_POST['email'];
    $result = forgotPassword($email);
    if ($result['error']) {
        echo json_encode(array('message' => $result['error']));
    } else {
        echo json_encode(array('message' => 'Email sent'));
    }
}

?>


// forgot_password.php

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the user's email from the form
    $email = $_POST['email'];

    // Query the database to check if a user with this email exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // User exists, generate a new password and send it to the user's email
        $user_data = mysqli_fetch_assoc($result);
        $new_password = bin2hex(random_bytes(16));
        $message = "Your new password is: $new_password";

        // Send email using PHPMailer or mail() function (not shown here)
        // ...

        // Update the user's password in the database
        $query = "UPDATE users SET password = '$new_password' WHERE id = $user_data[id]";
        mysqli_query($conn, $query);

        echo "Your new password has been sent to your email!";
    } else {
        echo "User not found.";
    }
}

// Display form for user to enter their email
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Email:</label>
    <input type="email" name="email" required>
    <button type="submit">Send New Password</button>
</form>


<?php

// Configuration settings
define('SITE_URL', 'http://example.com');
define('ADMIN_EMAIL', 'admin@example.com');

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Process forgot password request
if (isset($_POST['forgot_password'])) {
  $email = $_POST['email'];
  
  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Generate reset token and store it in user's record
    $token = bin2hex(random_bytes(32));
    $update_query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    $conn->query($update_query);

    // Send email with reset link
    sendEmail($email, $token);
  } else {
    echo "Email not found";
  }
}

// Function to send email with reset link
function sendEmail($email, $token) {
  $headers = 'From: Admin <' . ADMIN_EMAIL . '>' . "\r
";
  $subject = 'Reset Your Password';
  $body = '
    Dear user,

    Click on the following link to reset your password:

    ' . SITE_URL . '/reset-password.php?email=' . $email . '&token=' . $token . '

    Best regards,
    Admin
  ';

  mail($email, $subject, $body, $headers);
}

?>


<?php

// Configuration settings
define('SITE_URL', 'http://example.com');

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Process reset password request
if (isset($_GET['email']) && isset($_GET['token'])) {
  $email = $_GET['email'];
  $token = $_GET['token'];

  // Check if token is valid and user exists in database
  $query = "SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Generate new password and store it in user's record
    $new_password = bin2hex(random_bytes(32));
    $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    $conn->query($update_query);

    echo 'Your password has been reset. Please log in with your new password.';
  } else {
    echo 'Invalid token or user not found';
  }
}

?>


<?php

// Configuration
define('SITE_URL', 'https://example.com');
define('EMAIL_FROM', 'noreply@example.com');

// Function to send email with password reset link
function sendPasswordResetEmail($email) {
  // Get user data from database
  $user = getUserData($email);

  if (!$user) {
    return false;
  }

  // Generate random token for password reset
  $token = bin2hex(random_bytes(32));

  // Store token in database
  updateUserData($email, array('password_reset_token' => $token));

  // Send email with password reset link
  $subject = 'Password Reset Link';
  $message = "
    <p>Dear user,</p>
    <p>To reset your password, click on the following link:</p>
    <a href='" . SITE_URL . "/reset-password?email=" . $email . "&token=" . $token . "'>Reset Password</a>
    <p>Please note that this link will expire in 1 hour.</p>
  ";

  mail($user['email'], $subject, $message, 'Content-Type: text/html; charset=UTF-8');

  return true;
}

// Function to update user data
function updateUserData($email, $data) {
  // Update database
  // (Assuming MySQLi extension is used)
  $mysqli = new mysqli('localhost', 'username', 'password', 'database');
  $stmt = $mysqli->prepare("UPDATE users SET password_reset_token = ?, email_verified_at = ? WHERE email = ?");
  $stmt->bind_param('sss', $data['password_reset_token'], $data['email_verified_at'], $email);
  $stmt->execute();
}

// Function to get user data
function getUserData($email) {
  // Get database connection (assuming MySQLi extension is used)
  $mysqli = new mysqli('localhost', 'username', 'password', 'database');
  $stmt = $mysqli->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->bind_param('s', $email);
  $stmt->execute();
  return $stmt->get_result()->fetch_assoc();
}

// Forgot password form
if (isset($_POST['forgot_password'])) {
  // Get user input data
  $email = $_POST['email'];

  // Send email with password reset link
  if (sendPasswordResetEmail($email)) {
    echo 'A password reset link has been sent to your email.';
  } else {
    echo 'Error sending password reset link. Please try again later.';
  }
}

?>


<?php

// Configuration
define('SITE_URL', 'https://example.com');

// Function to reset password
function resetPassword($email, $token) {
  // Get user data from database
  $user = getUserData($email);

  if (!$user || $user['password_reset_token'] != $token) {
    return false;
  }

  // Generate new random password
  $new_password = bin2hex(random_bytes(32));

  // Update user data in database
  updateUserData($email, array('password' => hash('sha256', $new_password)));

  return true;
}

// Reset password form
if (isset($_GET['email']) && isset($_GET['token'])) {
  // Get user input data
  $email = $_GET['email'];
  $token = $_GET['token'];

  // Reset password
  if (resetPassword($email, $token)) {
    echo 'Your password has been reset successfully.';
  } else {
    echo 'Error resetting password. Please try again later.';
  }
}

?>


<?php

// Configuration settings
$site_url = "http://example.com"; // Your website URL

// Check if form has been submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Connect to database
    require_once 'db_connect.php';
    $conn = connect_to_db();

    // Query user data from database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get user data
        $user_data = mysqli_fetch_assoc($result);

        // Generate random token for password reset
        $token = bin2hex(random_bytes(16));

        // Update database with new token
        $update_query = "UPDATE users SET reset_token='$token' WHERE email='$email'";
        mysqli_query($conn, $update_query);

        // Send email to user
        send_reset_email($user_data['username'], $user_data['email'], $site_url, $token);
    } else {
        echo "Email not found.";
    }

    // Close database connection
    mysqli_close($conn);
} else {
    // Display forgot password form
    ?>
    <form action="" method="post">
        Email: <input type="text" name="email"><br>
        <button type="submit" name="submit">Send Reset Link</button>
    </form>
    <?php
}

function send_reset_email($username, $email, $site_url, $token) {
    // Set email headers
    $subject = "Reset Password";
    $headers = "From: no-reply@example.com\r
Content-Type: text/html;\r
charset=UTF-8";

    // Set email body
    $body = "
    <p>Hello $username,</p>
    <p>Click the following link to reset your password:</p>
    <a href='$site_url/reset_password.php?email=$email&token=$token'>Reset Password</a>
    ";

    // Send email using mail() function
    mail($email, $subject, $body, $headers);
}

?>


<?php

// Configuration settings
$site_url = "http://example.com"; // Your website URL

// Check if form has been submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    $token = $_POST['token'];
    $password = $_POST['password'];

    // Connect to database
    require_once 'db_connect.php';
    $conn = connect_to_db();

    // Check if token is valid
    $query = "SELECT * FROM users WHERE email='$email' AND reset_token='$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Update user's password in database
        $update_query = "UPDATE users SET password_hash=password('$password') WHERE email='$email'";
        mysqli_query($conn, $update_query);
    } else {
        echo "Invalid token.";
    }

    // Close database connection
    mysqli_close($conn);

    // Redirect to login page
    header('Location: login.php');
} else {
    // Display password reset form
    ?>
    <form action="" method="post">
        Email: <input type="text" name="email" readonly value="<?php echo $_GET['email']; ?>"><br>
        Token: <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        New Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <button type="submit" name="submit">Reset Password</button>
    </form>
    <?php
}
?>


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Function to send password reset email
function send_reset_email($email) {
    // Generate random token
    $token = bin2hex(random_bytes(16));

    // Update user with new token
    $query = "UPDATE users SET password_token = '$token' WHERE email = '$email'";
    if (!$mysqli->query($query)) {
        echo "Error updating token: " . $mysqli->error;
        exit();
    }

    // Send email
    $subject = "Reset Your Password";
    $message = "
    <p>Hello,</p>
    <p>Please click on the following link to reset your password:</p>
    <a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=$token'>Reset Password</a>
    ";
    mail($email, $subject, $message);

    // Log success
    echo "Password reset email sent successfully!";
}

// Function to handle forgot password form submission
function forgot_password() {
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];

        // Query database for user existence
        $query = "SELECT * FROM users WHERE username = '$username' OR email = '$email'";
        $result = $mysqli->query($query);

        if ($result->num_rows > 0) {
            while ($user = $result->fetch_assoc()) {
                send_reset_email($user['email']);
                echo "Password reset instructions have been sent to your email.";
                break;
            }
        } else {
            echo "Username or email not found. Please try again.";
        }

    } // End of if (isset($_POST['submit']))
}

// Call forgot_password function
forgot_password();

?>


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Get token from URL
$token = $_GET['token'];

// Update password with new one
$query = "UPDATE users SET password_hash = '$new_password' WHERE password_token = '$token'";
if (!$mysqli->query($query)) {
    echo "Error updating password: " . $mysqli->error;
    exit();
}

// Log success
echo "Password updated successfully!";

?>


<?php
// Configuration settings
$mysql_host = 'localhost';
$mysql_user = 'your_username';
$mysql_password = 'your_password';
$mysql_database = 'your_database';

// Connect to the database
$conn = mysqli_connect($mysql_host, $mysql_user, $mysql_password, $mysql_database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to send password recovery email
function send_recovery_email($email, $username) {
    // Set the subject and body of the email
    $subject = 'Password Recovery for ' . $username;
    $body = '<p>Hello,</p>
            <p>Please click on the following link to reset your password:</p>
            <a href="' . $_SERVER['REQUEST_URI'] . '">Reset Password</a>';

    // Send the email using PHPMailer (install this library)
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@gmail.com'; // your email account
    $mail->Password = 'your_password'; // your email password
    $mail->setFrom('your_email@gmail.com', 'Your Email');
    $mail->addAddress($email, $username);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
        echo "Mailer Error: " . $mail->ErrorInfo;
        return false;
    }

    return true;
}

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the email address from the form data
    $email = $_POST['email'];
    $username = $_POST['username'];

    // Validate the input
    if (empty($email) || empty($username)) {
        echo "Both email and username are required.";
        exit;
    }

    // Query to get the user's data from the database
    $sql = "SELECT * FROM users WHERE email='$email' AND username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Get the user's ID
        $user_id = mysqli_fetch_assoc($result)['id'];

        // Send the password recovery email
        send_recovery_email($email, $username);
        echo "A password reset link has been sent to your email.";
    } else {
        echo "User not found. Please check your email and username.";
    }
}

// Close the database connection
mysqli_close($conn);
?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if the user exists
$email = $_POST['email'];

$sql = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($sql);

if (!$result) {
    echo "Error: " . $conn->error;
} else {
    // If the user exists, send a password reset link to their email
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
            $token = bin2hex(random_bytes(32));

            // Insert token into database
            $sql = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$user_id', '$token')";
            $conn->query($sql);

            // Send email with password reset link
            $subject = "Reset your password";
            $body = "
                <p>Dear user,</p>
                <p>To reset your password, click on the following link:</p>
                <a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=" . $token . "'>Reset Password</a>
                <p>Best regards,
                [Your Name]</p>";
            mail($email, $subject, $body);
        }
    } else {
        echo "Email address not found.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if the user exists
$token = $_GET['token'];

$sql = "SELECT * FROM password_reset_tokens WHERE token = '$token'";
$result = $conn->query($sql);

if (!$result) {
    echo "Error: " . $conn->error;
} else {
    // If the user exists, display a form to reset their password
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
        }

        echo "
            <form action='' method='post'>
                <label for='password'>New Password:</label>
                <input type='password' id='password' name='password'><br><br>
                <label for='confirm_password'>Confirm New Password:</label>
                <input type='password' id='confirm_password' name='confirm_password'><br><br>
                <input type='hidden' name='token' value='$token'>
                <button type='submit' name='submit'>Reset Password</button>
            </form>";

        if ($_POST['submit']) {
            // Update user's password
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            if ($password == $confirm_password) {
                $sql = "UPDATE users SET password = '$password' WHERE id = '$user_id'";
                $conn->query($sql);

                // Delete password reset token
                $sql = "DELETE FROM password_reset_tokens WHERE token = '$token'";
                $conn->query($sql);
            } else {
                echo "Passwords do not match.";
            }
        }

    } else {
        echo "Invalid token.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('RECOVERY_PASSWORD_LINK', 'http://example.com/recover-password');
define('EMAIL_ADDRESS', 'your-email@example.com');

// Connect to database
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');

if (!$db) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Process form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Query to retrieve user data (replace with your actual query)
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($db, $query);

    if ($result->num_rows > 0) {
        // User exists, generate a new password
        $new_password = str_random(8);
        update_password($new_password, $email);
        
        // Send recovery link via email
        send_recovery_link_email($email, $new_password);
    } else {
        echo 'Email not found';
    }
}

// Helper functions

function generate_reset_link() {
    return RECOVERY_PASSWORD_LINK . '?token=' . urlencode(bin2hex(random_bytes(16)));
}

function update_password($new_password, $email) {
    // Update user's password (replace with your actual query)
    $query = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email'";
    mysqli_query($db, $query);
}

function send_recovery_link_email($email, $new_password) {
    $subject = 'Password Recovery Link';
    $body = 'Click here to reset your password: ' . generate_reset_link();
    mail($email, $subject, $body, 'From: ' . EMAIL_ADDRESS);
}

?>


<?php

// Configuration variables
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email)
{
    // Generate a random token
    $token = bin2hex(random_bytes(16));

    // Update the user's token in the database
    $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    if ($conn->query($sql) === TRUE) {
        echo "Email sent with password reset link
";
    } else {
        echo "Error updating token: " . $conn->error . "
";
    }

    // Send the password reset email
    $subject = 'Password Reset Request';
    $body = '
    <html>
      <head>
        <title>Password Reset Request</title>
      </head>
      <body>
        <p>Hello,
        
        You have requested to reset your password. Click on the following link to reset your password:
        
        <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
        
        If you did not request this, please ignore this email.
        
      </body>
    </html>';
    mail($email, $subject, $body);
}

// Handle the form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];

    // Validate the input
    if (empty($email)) {
        echo "Email address is required.";
        exit;
    }

    // Send the password reset email
    send_password_reset_email($email);
}

// Display the form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <button type="submit">Send Password Reset Link</button>
</form>


<?php

// Configuration variables
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to update password
function update_password($token, $password)
{
    // Get the user's ID from the token
    $sql = "SELECT id FROM users WHERE password_reset_token = '$token'";
    if ($result = $conn->query($sql)) {
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];

            // Update the user's password in the database
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            $sql = "UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'";
            if ($conn->query($sql) === TRUE) {
                echo "Password updated successfully.";
            } else {
                echo "Error updating password: " . $conn->error . "
";
            }

            // Remove the token from the database
            $sql = "UPDATE users SET password_reset_token = NULL WHERE id = '$user_id'";
            if ($conn->query($sql) === TRUE) {
                echo "Token removed successfully.";
            } else {
                echo "Error removing token: " . $conn->error . "
";
            }
        }

        $result->free();
    } else {
        echo "Error getting user ID: " . $conn->error . "
";
    }
}

// Handle the form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $token = $_POST['token'];
    $password = $_POST['password'];

    // Validate the input
    if (empty($token) || empty($password)) {
        echo "Token and password are required.";
        exit;
    }

    // Update the user's password
    update_password($token, $password);
}

// Display the form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="token">Token:</label>
  <input type="text" id="token" name="token"><br><br>
  <label for="password">New Password:</label>
  <input type="password" id="password" name="password"><br><br>
  <button type="submit">Reset Password</button>
</form>


<?php

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Process the form data
    $email = $_POST['email'];
    
    // Connect to the database
    require_once 'dbconfig.php';
    $conn = mysqli_connect($host, $username, $password, $database);
    
    // Query to check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    // Check if email exists
    if (mysqli_num_rows($result) > 0) {
        // Get user data
        $row = mysqli_fetch_assoc($result);
        
        // Generate a random password
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
        
        // Update the user's password in the database
        $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
        mysqli_query($conn, $update_query);
        
        // Send a reset email to the user
        $to = $email;
        $subject = 'Password Reset';
        $message = "Your new password is: $new_password";
        mail($to, $subject, $message);
        
        echo "Password has been updated and an email sent with your new password.";
    } else {
        echo "Email not found in the database.";
    }
}

?>


<form action="" method="post">
    <input type="email" name="email" placeholder="Enter your email address">
    <button type="submit" name="submit">Reset Password</button>
</form>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

function send_reset_email($email) {
  // Generate a reset token
  $reset_token = bin2hex(random_bytes(32));
  
  // Insert into database
  $sql = "INSERT INTO users (reset_token) VALUES (?)";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param('s', $reset_token);
  $stmt->execute();
  
  // Send email with reset link
  $subject = 'Reset your password';
  $message = '
    Dear user,
    
    Click the following link to reset your password:
    <a href="http://yourwebsite.com/reset_password.php?token=' . $reset_token . '">Reset Password</a>
  ';
  mail($email, $subject, $message);
}

// Handle form submission
if (isset($_POST['email'])) {
  $email = $_POST['email'];
  
  // Check if email exists in database
  $sql = "SELECT * FROM users WHERE email=?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param('s', $email);
  $stmt->execute();
  $result = $stmt->get_result();
  
  if ($result->num_rows > 0) {
    // Send reset email
    send_reset_email($email);
    
    echo 'Email sent with password reset link!';
  } else {
    echo 'Email not found in database.';
  }
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

function update_password() {
  // Get reset token from URL
  $token = $_GET['token'];
  
  // Check if token exists in database
  $sql = "SELECT * FROM users WHERE reset_token=?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param('s', $token);
  $stmt->execute();
  $result = $stmt->get_result();
  
  if ($result->num_rows > 0) {
    // Get new password from user
    $new_password = $_POST['password'];
    
    // Update password in database
    $sql = "UPDATE users SET password_hash=? WHERE reset_token=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('ss', $new_password, $token);
    $stmt->execute();
    
    echo 'Password updated!';
  } else {
    echo 'Invalid token.';
  }
}

// Handle form submission
if (isset($_POST['password'])) {
  update_password();
}
?>


<?php

// Configuration settings
$database_host = 'localhost';
$database_username = 'your_database_username';
$database_password = 'your_database_password';
$database_name = 'your_database_name';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

// Check if connection was successful
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to check user exists and send password reset link
function forgot_password($email) {
  // SQL query to retrieve user data (check if user exists)
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);

  // Check if user exists
  if ($result->num_rows == 0) {
    return false;
  }

  // Retrieve user ID and password hash from database
  $row = $result->fetch_assoc();
  $user_id = $row['id'];
  $password_hash = $row['password_hash'];

  // Generate random token for password reset link
  $token = bin2hex(random_bytes(32));

  // Update user's password hash in database with token
  $sql = "UPDATE users SET password_hash = '$token' WHERE id = '$user_id'";
  $conn->query($sql);

  // Send email to user with password reset link
  send_password_reset_email($email, $token);
}

// Function to send password reset email
function send_password_reset_email($email, $token) {
  // Your email sending code here (e.g. using PHPMailer or SwiftMailer)
  echo "Email sent to $email with token: $token";
}

// Process form data and call forgot_password function
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  $forgot_password($email);
} else {
  // Display form if it's not a POST request
  echo '<form action="" method="post">';
  echo '<label for="email">Email:</label>';
  echo '<input type="text" id="email" name="email"><br><br>';
  echo '<button type="submit">Send Reset Link</button>';
  echo '</form>';
}


<?php
require_once 'config.php'; // database connection settings

// handle form submission (forgot password)
if (isset($_POST['submit'])) {
  $email = $_POST['email'];
  forgot_password($email);
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Forgot Password</title>
</head>
<body>

<h1>Forgot Password</h1>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>Email:</label>
  <input type="text" name="email" value="<?php echo (isset($_POST['email'])) ? $_POST['email'] : ''; ?>">
  <br><br>
  <button type="submit" name="submit">Submit</button>
</form>

<?php
// forgot password function
function forgot_password($email) {
  global $db; // database connection

  // check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($db, $query);

  if (mysqli_num_rows($result) > 0) {
    // generate new password and send it to user's email
    $new_password = substr(md5(uniqid()), 0, 8); // generate random password
    $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($db, $update_query);

    // send new password via email
    $to = $email;
    $subject = 'Your New Password';
    $message = 'Hello,
                Your new password is: '.$new_password.'
                Please log in with this new password.
                Sincerely,
                [Your Name]';
    mail($to, $subject, $message);

    echo "New password sent to your email.";
  } else {
    echo "Email not found. Please try again.";
  }
}
?>
</body>
</html>


<?php
// database connection settings
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');

// error handling
if (!$db) {
  die("Connection failed: " . mysqli_connect_error());
}
?>


<?php

// Configuration
$secret_key = 'your_secret_key_here';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get email from POST data
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }

  // Query database for user with matching email
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($connection, $query);

  // Check if user exists
  if (mysqli_num_rows($result) == 0) {
    echo 'No account found with this email address';
    exit;
  }

  // Get user ID and password hash from database
  $row = mysqli_fetch_assoc($result);
  $user_id = $row['id'];
  $password_hash = $row['password_hash'];

  // Generate random reset token (UUID)
  $reset_token = bin2hex(random_bytes(32));

  // Insert reset token into database
  $query = "INSERT INTO password_resets (user_id, reset_token) VALUES ('$user_id', '$reset_token')";
  mysqli_query($connection, $query);

  // Send email with password reset link
  send_password_reset_email($email, $reset_token);

  echo 'Password reset link sent to your email address';
} else {
  // Display form if not submitted
  ?>
  <h1>Forgot Password</h1>
  <form action="" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <button type="submit">Submit</button>
  </form>
  <?php
}

// Function to send password reset email
function send_password_reset_email($email, $reset_token) {
  // Send email using your preferred mail library (e.g. PHPMailer)
  // For simplicity, this example uses built-in mail() function
  $subject = 'Reset Password';
  $body = "Click on the following link to reset your password:

";
  $body .= '<a href="http://your-website.com/reset-password?token=' . $reset_token . '">Reset Password</a>';
  mail($email, $subject, $body);
}

?>


<?php

// Include the configuration and database connection settings
require_once 'config.php';

// Function to generate a random token for password reset
function generateToken() {
    return substr(bin2hex(random_bytes(32)), 0, 64); // Generates a 64-character long token
}

// Check if user exists before proceeding with reset process
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    
    try {
        $query = "SELECT id FROM users WHERE email=:email";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':email', $email, PDO::PARAM_STR);
        $stmt->execute();
        
        if ($result = $stmt->fetch()) {
            // User exists, proceed with reset process
            
            // Generate a new token and store it in the database
            $token = generateToken();
            
            try {
                $query = "INSERT INTO reset_password_tokens (user_id, token) VALUES (:user_id, :token)";
                $stmt = $db->prepare($query);
                $stmt->bindParam(':user_id', $result['id'], PDO::PARAM_INT);
                $stmt->bindParam(':token', $token, PDO::PARAM_STR);
                $stmt->execute();
                
                // Send the reset email
                sendPasswordResetEmail($email, $token);
                echo "Email sent. Please check your inbox.";
            } catch (PDOException $e) {
                echo "Error sending token: " . $e->getMessage();
            }
        } else {
            echo "User not found with this email address.";
        }
    } catch (PDOException $e) {
        echo "Error checking user existence: " . $e->getMessage();
    }
}

// Function to send the password reset email
function sendPasswordResetEmail($email, $token) {
    // Your SMTP settings here
    $from = 'your-email@example.com';
    $to = $email;
    $subject = 'Reset your Password';
    
    try {
        // Construct the link for resetting password with the token
        $resetLink = "http://example.com/reset-password.php?token=$token";
        
        $body = "
            Dear User,
            
            You are receiving this email because we received a request to reset your account password.
            
            To complete the process, click on the following link: $resetLink
            
            Best regards
        ";
        
        mail($to, $subject, $body, "From: $from");
    } catch (Exception $e) {
        echo "Error sending email: " . $e->getMessage();
    }
}

// Reset Password form submission handling
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_GET['token'])) {
    $token = $_GET['token'];
    
    try {
        $query = "SELECT user_id FROM reset_password_tokens WHERE token=:token AND expiration_time > NOW()";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':token', $token, PDO::PARAM_STR);
        $stmt->execute();
        
        if ($result = $stmt->fetch()) {
            // Token valid, proceed with resetting password
            
            // Ask user to enter new password
            // Handle form submission (store new password hashed in database)
            
            // For simplicity, let's just hash and store the new password directly.
            $newPassword = $_POST['password'];
            try {
                $query = "UPDATE users SET password_hash=:password_hash WHERE id=:user_id";
                $stmt = $db->prepare($query);
                $stmt->bindParam(':password_hash', hash('sha256', $newPassword), PDO::PARAM_STR);
                $stmt->bindParam(':user_id', $result['user_id'], PDO::PARAM_INT);
                $stmt->execute();
                
                echo "Password reset successfully.";
            } catch (PDOException $e) {
                echo "Error resetting password: " . $e->getMessage();
            }
        } else {
            echo "Invalid or expired token.";
        }
    } catch (PDOException $e) {
        echo "Error checking token validity: " . $e->getMessage();
    }
}

?>

<!-- Forms for forgot and reset password should be here -->
<form action="" method="post">
    <label>Email:</label>
    <input type="email" name="email">
    <button type="submit">Send Reset Email</button>
</form>

<form action="" method="post">
    <label>New Password:</label>
    <input type="password" name="password">
    <button type="submit">Reset Password</button>
</form>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to send password reset email
function send_reset_email($email, $username, $token) {
  // Send email using your preferred method (e.g. PHPMailer)
  // For simplicity, we'll use a basic example
  $subject = 'Reset Password';
  $body = "Hello $username,

You requested to reset your password for our application.
Your token is: $token
Please visit our website and enter this token in the form provided.";

  mail($email, $subject, $body);
}

// Handle forgot password request
if (isset($_POST['forgot_password'])) {
  // Extract user input
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Query database to find matching username and email
  $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Get user ID from result
    $user_id = mysqli_fetch_assoc($result)['id'];

    // Generate random token for password reset
    $token = bin2hex(random_bytes(16));

    // Update user's password reset token in database
    $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
    mysqli_query($conn, $query);

    // Send password reset email to user
    send_reset_email($email, $username, $token);
  } else {
    echo 'Username and email do not match any account.';
  }
}

// Close database connection
mysqli_close($conn);
?>


<form action="forgot_password.php" method="post">
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="forgot_password">Submit</button>
</form>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword() {
  // Get user input (email)
  if (!isset($_POST['email'])) {
      header('Location: index.php');
      exit;
  }
  $email = $_POST['email'];

  // Query database for user
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Get user data from result
    $user_data = $result->fetch_assoc();

    // Generate new password
    $new_password = bin2hex(random_bytes(16));
    echo "New Password: $new_password";

    // Update database with new password ( encrypted using password_hash )
    $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password_hash = '$hashed_new_password' WHERE id = '".$user_data['id']."'";
    $result = $conn->query($query);

    if ($result) {
      // Send email with new password
      sendEmail($email, $new_password);
      echo 'Password updated successfully!';
    } else {
      echo 'Error updating password: ' . mysqli_error($conn);
    }
  } else {
    echo "User not found.";
  }

  $conn->close();
}

function sendEmail($to_email, $password) {
  // Email configuration
  $email_to = $to_email;
  $email_from = 'your_email@example.com';
  $email_password = 'your_email_password';

  // Email headers and body
  $subject = "New Password for Your Account";
  $body = "Your new password is: $password";

  // Send email using SMTP
  require_once 'PHPMailer/PHPMailerAutoload.php';
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = $email_from;
  $mail->Password = $email_password;
  $mail->setFrom($email_from, 'Your Name');
  $mail->addAddress($to_email);
  $mail->Subject = $subject;
  $mail->Body = $body;

  if (!$mail->send()) {
    echo "Error sending email: " . $mail->ErrorInfo;
  } else {
    echo "Email sent successfully!";
  }
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
  forgotPassword();
} else {
  // Display forgot password form
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Email: <input type="text" name="email"><br><br>
    <input type="submit" name="forgot_password" value="Reset Password">
  </form>
<?php }

?>


<?php

// Configuration
$mysql_host = 'localhost';
$mysql_username = 'root';
$mysql_password = '';
$mysql_database = 'mydatabase';

// Connect to database
$conn = new mysqli($mysql_host, $mysql_username, $mysql_password, $mysql_database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword() {
  // Get the username from the form input
  if (isset($_POST['username'])) {
      $username = $_POST['username'];
  } else {
      echo "Error: No username provided.";
      exit;
  }

  // Query database for user
  $sql = "SELECT * FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows == 0) {
    echo "Error: User not found.";
    exit;
  } else {
      // Get the user's email address from the database
      while($row = $result->fetch_assoc()) {
          $email = $row['email'];
      }

      // Generate a random password and hash it
      $password = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 12);
      $hashed_password = password_hash($password, PASSWORD_DEFAULT);

      // Update the user's password in the database
      $sql = "UPDATE users SET password_hash = '$hashed_password' WHERE username = '$username'";
      if ($conn->query($sql) === TRUE) {
          echo "Email sent with new password.";
          sendEmail($email, $password);
      } else {
          echo "Error updating user's password: " . $conn->error;
      }
  }
}

function sendEmail($to_email, $new_password) {
    // Your email sending code here
    // For example using PHPMailer:
    require_once 'PHPMailer/PHPMailerAutoload.php';
    $mail = new PHPMailer(true);

    try {
        $mail->isSMTP();
        $mail->Host       = 'smtp.example.com';
        $mail->SMTPAuth   = true;
        $mail->Username   = 'your-email@example.com';
        $mail->Password   = 'your-password';
        $mail->Port       = 587;

        // Send the email
        $mail->setFrom('your-email@example.com', 'Your Name');
        $mail->addAddress($to_email);
        $mail->Subject    = 'New Password';
        $mail->Body       = "Your new password is: $new_password";
        $mail->AltBody    = '';

        $mail->send();
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
    }
}

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    forgotPassword();
}
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <input type="submit" name="submit" value="Reset Password">
</form>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Get the email from the form
$email = $_POST['email'];

// Query to retrieve user data
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);

// Check if user exists
if (mysqli_num_rows($result) > 0) {
    // Retrieve user data
    while ($row = mysqli_fetch_assoc($result)) {
        $id = $row['id'];
        $password = $row['password'];

        // Generate a random password and update the database
        $new_password = uniqid('', true);
        $query2 = "UPDATE users SET password = '$new_password' WHERE id = '$id'";
        mysqli_query($conn, $query2);

        // Send an email to the user with the new password
        $to = $email;
        $subject = 'Your new password is: ';
        $body = 'Your new password is: ' . $new_password;
        mail($to, $subject, $body);

        echo 'Password sent successfully!';
    }
} else {
    echo 'Email not found.';
}

// Close the database connection
mysqli_close($conn);
?>


<?php

// Configuration
require 'config.php';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function forgotPassword() {
    // Get user input
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        return;
    }

    // Query database to check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        echo 'Email not found in our records';
        return;
    }

    // Generate new password
    $newPassword = substr(md5(uniqid()), 0, 8);
    echo 'New Password: ' . $newPassword;

    // Update user's password
    $query = "UPDATE users SET password_hash = PASSWORD('$newPassword') WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send email with new password (example using PHPMailer)
    require_once 'PHPMailer/PHPMailerAutoload.php';
    $mail = new PHPMailer;
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com';
    $mail->Port = 587;
    $mail->Username = 'your_email@gmail.com';
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@gmail.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Your new password';
    $mail->Body = 'Your new password is: ' . $newPassword;
    if (!$mail->send()) {
        echo 'Error sending email';
    }
}

if (isset($_POST['submit'])) {
    forgotPassword();
}

?>


<?php

// Configuration
define('RESET_PASSWORD_LINK', 'http://example.com/reset-password.php');

// Function to send reset password link via email
function sendResetPasswordLink($email) {
  // Connect to database
  $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');
  
  // Prepare query to get user's details
  $query = "SELECT id, password FROM users WHERE email = :email";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  
  // Get user's details
  $userDetails = $stmt->fetch();
  
  if ($userDetails) {
    // Generate reset password link
    $resetPasswordLink = RESET_PASSWORD_LINK . '?id=' . $userDetails['id'] . '&token=' . bin2hex(random_bytes(32));
    
    // Send email using mail function (or use a library like PHPMailer)
    $subject = 'Reset Password Link';
    $body = "Click on the link below to reset your password: $resetPasswordLink";
    $headers = 'From: no-reply@example.com' . "\r
" .
               'Reply-To: no-reply@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    
    mail($email, $subject, $body, $headers);
  } else {
    echo "User not found.";
  }
}

// Function to reset password
function resetPassword($id, $token) {
  // Connect to database
  $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');
  
  // Prepare query to update user's password
  $query = "UPDATE users SET password = :password WHERE id = :id AND token = :token";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':id', $id);
  $stmt->bindParam(':token', $token);
  
  // Generate new password
  $newPassword = bin2hex(random_bytes(32));
  
  $stmt->bindParam(':password', $newPassword);
  $stmt->execute();
  
  if ($stmt->rowCount() > 0) {
    echo "Password updated successfully.";
  } else {
    echo "Invalid token or user not found.";
  }
}

?>


<?php

// Define database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    echo "Error connecting to database: " . $e->getMessage();
    exit;
}

// Function to send password reset email
function send_password_reset_email($email)
{
    // Generate a random token for password reset
    $token = bin2hex(random_bytes(32));
    
    // Update user's password reset token in database
    $query = "UPDATE users SET password_reset_token = :token WHERE email = :email";
    $stmt = $conn->prepare($query);
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    // Send password reset email
    $subject = "Password Reset Request";
    $message = "Hello,

You requested to reset your password. Please click on the link below to reset your password.

<a href='https://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a>

Best regards,
Your Website";
    mail($email, $subject, $message);
}

// Handle forgot password request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user's email from form data
    $email = $_POST['email'];
    
    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $conn->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user = $stmt->fetch();
    
    if ($user) {
        // Send password reset email
        send_password_reset_email($email);
        
        // Display success message
        echo "Password reset email sent to $email.";
    } else {
        // Display error message
        echo "Email not found. Please try again.";
    }
}

?>


<?php

// Define database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    echo "Error connecting to database: " . $e->getMessage();
    exit;
}

// Get token from URL parameter
$token = $_GET['token'];

// Check if token is valid and update password accordingly
$query = "SELECT * FROM users WHERE password_reset_token = :token";
$stmt = $conn->prepare($query);
$stmt->bindParam(':token', $token);
$stmt->execute();
$user = $stmt->fetch();

if ($user) {
    // Update user's password in database
    $new_password = 'your_new_password'; // Replace with a secure method to generate new passwords
    $query = "UPDATE users SET password = :password WHERE id = :id";
    $stmt = $conn->prepare($query);
    $stmt->bindParam(':password', $new_password);
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();
    
    // Display success message
    echo "Password reset successfully. Please log in with your new password.";
} else {
    // Display error message
    echo "Invalid token. Please try again.";
}

?>


<?php

// Configuration
define('RESET_LINK_EXPIRE', 3600); // 1 hour in seconds
define('PASSWORD_RESET_TEMPLATE', 'reset_password.php');

// Function to send email with reset link
function send_reset_email($user_email, $username, $reset_link) {
    // Email settings (use your own)
    $from_email = 'your-email@example.com';
    $from_name = 'Your App Name';

    $subject = 'Reset Password Link for ' . $username;

    // Mailer
    $mailer = new PHPMailer();

    // Email body
    $email_body = '<p>Hello ' . $username . ',</p>
                    <p>Click the link below to reset your password:</p>
                    <p><a href="' . $reset_link . '">' . $reset_link . '</a></p>';

    // Send email
    try {
        $mailer->From = $from_email;
        $mailer->FromName = $from_name;
        $mailer->AddAddress($user_email);
        $mailer->Subject = $subject;
        $mailer->Body = $email_body;
        $mailer->IsHTML(true);
        if (!$mailer->Send()) {
            throw new Exception('Error sending email: ' . $mailer->ErrorInfo);
        }
    } catch (Exception $e) {
        echo 'Email not sent: ' . $e->getMessage();
    }
}

// Function to handle reset password request
function reset_password_request($username, $email) {
    // Check if user exists in database
    $conn = new mysqli('your-host', 'your-username', 'your-password', 'your-database');
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    $sql = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User exists, generate reset link
        $reset_link = 'http://your-app.com/reset-password.php?token=' . bin2hex(random_bytes(16));

        // Store reset link in database (optional)
        $conn->query("INSERT INTO password_resets (user_id, reset_token, created_at) VALUES ((SELECT id FROM users WHERE username = '$username' AND email = '$email'), '" . md5($reset_link) . "', NOW())");

        send_reset_email($email, $username, $reset_link);
    }

    $conn->close();
}

// Handle form submission
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];

    reset_password_request($username, $email);

    echo 'Reset password link sent to your email.';
}

?>


<?php

// Configuration
define('PASSWORD_RESET_TOKEN', $_GET['token']);

// Check if token is valid
$conn = new mysqli('your-host', 'your-username', 'your-password', 'your-database');
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$sql = "SELECT * FROM password_resets WHERE reset_token = '" . md5(PASSWORD_RESET_TOKEN) . "' AND created_at > NOW() - INTERVAL 1 HOUR";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    echo 'Invalid token. Please try again.';
} else {
    // Token is valid, let user reset password
    if (isset($_POST['new_password'])) {
        // Update user's password in database
        $user_id = $_SESSION['user_id']; // Assuming you're storing the user ID in a session variable

        $new_password = $_POST['new_password'];
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

        $conn->query("UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'");

        echo 'Password reset successfully!';
    }

    // Display form to user
?>

<form action="" method="post">
    <label>New Password:</label>
    <input type="password" name="new_password"><br><br>
    <input type="submit" name="submit" value="Reset Password">
</form>

<?php } ?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_reset_email($email, $token)
{
    // Set up SMTP server
    $smtp_server = 'your_smtp_server';
    $smtp_username = 'your_smtp_username';
    $smtp_password = 'your_smtp_password';

    // Send email using PHPMailer library (install via composer)
    require_once './vendor/autoload.php';
    use PHPMailer\PHPMailer;

    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = $smtp_server;
    $mail->SMTPAuth = true;
    $mail->Username = $smtp_username;
    $mail->Password = $smtp_password;
    $mail->Port = 587;

    // Set email content
    $subject = 'Reset your password';
    $body = '
        Hello,

        To reset your password, click on the following link:
        <a href="' . $token . '">Reset Password</a>

        Best regards,
        Your Website
    ';

    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);

    // Send email
    if (!$mail->send()) {
        echo "Mailer Error: " . $mail->ErrorInfo;
    } else {
        echo "Email sent successfully!";
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $email = $_POST['email'];

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Generate password reset token (e.g. a random string)
        $token = bin2hex(random_bytes(32));

        // Update user data with token
        $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        $conn->query($sql);

        // Send password reset email
        send_reset_email($email, $token);
    } else {
        echo "Email not found in database.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
$database = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($servername, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_reset_email($email) {
    // Generate a random password reset token
    $token = bin2hex(random_bytes(16));

    // Insert the token into the database
    $sql = "INSERT INTO password_resets (user_id, token) VALUES ((SELECT id FROM users WHERE email = '$email'), '$token')";
    if ($conn->query($sql) === TRUE) {
        // Send the reset link via email
        $reset_link = 'http://your-website.com/reset-password/' . $token;
        $subject = 'Password Reset';
        $message = 'Click this link to reset your password: ' . $reset_link;

        mail($email, $subject, $message);
    } else {
        echo "Error inserting token into database: " . $conn->error;
    }
}

// Function to handle forgotten password form submission
function forgot_password() {
    // Get the user's email from the form
    $email = $_POST['email'];

    // Check if the email is valid and exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Send a password reset email
        send_reset_email($email);
    } else {
        echo 'No account found with that email.';
    }
}

// Handle forgotten password form submission
if (isset($_POST['submit'])) {
    forgot_password();
}

?>


<?php
require_once 'database.php'; // include your database connection script

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];

  if (empty($email)) {
    header('Location: forgot_password.php?error=Email+required');
    exit;
  }

  try {
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() === 0) {
      header('Location: forgot_password.php?error=Email+not+found');
      exit;
    }

    $user = $stmt->fetch();

    // Generate a random password
    $newPassword = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);

    // Update the user's password in the database
    try {
      $stmt = $pdo->prepare("UPDATE users SET password = :password WHERE email = :email");
      $stmt->bindParam(':password', hash('sha256', $newPassword));
      $stmt->bindParam(':email', $email);
      $stmt->execute();

      // Send the new password to the user via email
      $to = $email;
      $subject = 'Your new password';
      $message = "Dear user, your new password is: $newPassword";
      mail($to, $subject, $message);

      header('Location: login.php?success=New+password+sent');
      exit;

    } catch (PDOException $e) {
      echo 'Error updating password: ' . $e->getMessage();
    }

  } catch (PDOException $e) {
    echo 'Error retrieving user data: ' . $e->getMessage();
  }
} else {
?>
  <h1>Forgot Password</h1>
  <form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" name="email" required>
    <button type="submit">Send new password</button>
  </form>

<?php
}
?>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=mydb', 'myuser', 'mypassword');
?>


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a reset token
function generateResetToken() {
    return bin2hex(random_bytes(16));
}

// Function to send email with reset link
function sendPasswordResetEmail($email, $reset_token) {
    // Send email using a library like SwiftMailer or PHPMailer
    $mail = new Mailer();
    $mail->setFrom('your_email@example.com', 'Your Website');
    $mail->addAddress($email);
    $mail->Subject = 'Reset your password';
    $body = "Click this link to reset your password: <a href='" . $_SERVER['HTTP_HOST'] . "/reset-password?token=" . $reset_token . "'>Reset Password</a>";
    $mail->Body = $body;
    return $mail->send();
}

// Function to update user's password
function updatePassword($username, $new_password) {
    // Hash the new password using a library like `password_hash`
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password_hash = '$hashed_password' WHERE username = '$username'";
    $conn->query($query);
}

// Forgot Password function
function forgotPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $email = $_POST['email'];
        $username = $_POST['username'];

        // Check if user exists
        $query = "SELECT * FROM users WHERE email = '$email' AND username = '$username'";
        $result = $conn->query($query);
        if ($result->num_rows > 0) {
            // Generate a reset token
            $reset_token = generateResetToken();

            // Update user's reset token in database
            $query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email' AND username = '$username'";
            $conn->query($query);

            // Send password reset email
            sendPasswordResetEmail($email, $reset_token);
        } else {
            echo 'User not found';
        }
    }
}

// Display forgot password form
if (isset($_POST['forgot'])) {
    forgotPassword();
} else {
    ?>
    <form method="post">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username"><br><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br><br>
        <button type="submit" name="forgot">Forgot Password</button>
    </form>
    <?php
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form data
$email = $_POST['email'];

// Query to retrieve user information
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // If the user exists, generate a temporary token for password reset
    $user_data = mysqli_fetch_assoc($result);
    $token = bin2hex(random_bytes(32));
    update_user_reset_token($conn, $email, $token);

    // Send email with reset link
    send_password_reset_email($user_data['email'], $token);

} else {
    echo 'Email not found';
}

// Function to generate and store the temporary token
function update_user_reset_token($conn, $email, $token) {
    $query = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $query);
}

// Function to send the password reset email
function send_password_reset_email($email, $token) {
    require_once 'vendor/autoload.php'; // Load phpmailer library

    use PHPMailer\PHPMailer;

    $mail = new PHPMailer();

    try {
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->Port = 587;
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';

        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = 'Reset Password';
        $body = "Click the link to reset your password: <a href='http://example.com/reset-password?token=$token'>Reset Password</a>";
        $mail->Body = $body;
        $mail->AltBody = 'This is a plain-text message body';

        $mail->send();
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
    }
}

?>


<?php

// Configuration
define('SITE_URL', 'http://example.com');
define('ADMIN_EMAIL', 'admin@example.com');

// Function to send email with new password
function send_password_reset_email($username, $new_password) {
  // Set up email headers
  $subject = "Password reset for $username";
  $headers = "From: admin@example.com\r
" .
             "MIME-Version: 1.0\r
" .
             "Content-Type: text/html; charset=UTF-8\r
";

  // Create new password and encode it as a URL-safe string
  $encoded_password = urlencode($new_password);

  // Email body
  $email_body = "
    <html>
      <body>
        <h1>Password reset for $username</h1>
        <p>Your new password is: <strong>$encoded_password</strong></p>
        <p>Please log in with your new credentials.</p>
      </body>
    </html>
  ";

  // Send email
  mail(SITE_URL, ADMIN_EMAIL, $subject, $headers);
}

// Function to handle forgot password form submission
function handle_forgot_password($username) {
  // Check if username is valid (e.g. not empty)
  if (!empty($username)) {
    // Look up user in database (simplified for example purposes)
    $user = array(
      'username' => $username,
      'email' => 'user@example.com',
    );

    // Generate new password
    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 10);

    // Send email with new password
    send_password_reset_email($username, $new_password);

    // Log success (optional)
    error_log("Password reset sent to $username");
  } else {
    // Handle invalid username input (e.g. display error message)
    echo "Invalid username";
  }
}

// Example usage:
if (isset($_POST['forgot_password'])) {
  handle_forgot_password($_POST['username']);
} else {
  // Display forgot password form
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username"><br><br>
    <input type="submit" value="Forgot Password" name="forgot_password">
  </form>
  <?php
}


function reset_password($email) {
  // Check if the email exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Generate a random password
    $password = generate_password();

    // Update the user's password in the database
    $query = "UPDATE users SET password = '$password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send an email to the user with their new password
    send_email($email, 'New Password', 'Your new password is: ' . $password);
  } else {
    echo 'Email not found';
  }
}

function generate_password() {
  // Generate a random string of characters for the password
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=';
  $password = '';
  for ($i = 0; $i < 12; $i++) {
    $password .= $characters[rand(0, strlen($characters) - 1)];
  }
  return $password;
}

function send_email($to_email, $subject, $message) {
  // Send an email using PHPMailer
  require_once 'PHPMailer/PHPMailer.php';
  require_once 'PHPMailer/SMTP.php';

  $mail = new PHPMailer\PHPMailer\PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPSecure = 'tls';
  $mail->SMTPAuth = true;
  $mail->Username = 'your_email@example.com';
  $mail->Password = 'your_password';

  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($to_email);
  $mail->Subject = $subject;
  $mail->Body = $message;

  if (!$mail->send()) {
    echo 'Error sending email';
  }
}


<?php
require_once 'functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  reset_password($email);
}
?>


// config.php (database configuration)
$dsn = 'mysql:host=localhost;dbname=example';
$username = 'root';
$password = '';

// Connecting to the database
try {
    $pdo = new PDO($dsn, $username, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

// forgot_password.php (Forgot Password page)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate email
    if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // Get user data from database
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->bindParam(':email', $_POST['email']);
    $stmt->execute();

    if ($stmt->rowCount() == 0) {
        echo 'Email not found';
        exit;
    }

    // Generate a new password
    $new_password = substr(bin2hex(random_bytes(16)), 0, 10);

    // Update user data in database
    $stmt = $pdo->prepare('UPDATE users SET password = :password WHERE email = :email');
    $stmt->bindParam(':password', $new_password);
    $stmt->bindParam(':email', $_POST['email']);
    $stmt->execute();

    // Send a reset link to the user's email
    $to = $_POST['email'];
    $subject = 'Reset Password';
    $message = 'Your new password is: ' . $new_password;
    mail($to, $subject, $message);

    echo 'Password reset email sent';
} else {
?>
<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Forgot Password">
</form>
<?php
}


<?php

// Configuration
$secretKey = 'your-secret-key-here';

function sendEmail($to, $subject, $body) {
  $headers = "From: your-email@example.com\r
";
  mail($to, $subject, $body, $headers);
}

function generateToken() {
  return bin2hex(random_bytes(32));
}

function verifyToken($token) {
  global $db;
  $stmt = $db->prepare('SELECT user_id FROM password_resets WHERE token = ?');
  $stmt->execute([$token]);
  return $stmt->fetchColumn();
}

function resetPassword() {
  global $db;
  if (isset($_POST['password']) && isset($_POST['confirm_password'])) {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    if ($password === $confirm_password) {
      $token = generateToken();
      $stmt = $db->prepare('INSERT INTO password_resets (token, user_id, expires_at) VALUES (?, ?, NOW())');
      $stmt->execute([$token, 1]); // Replace with actual user ID
      return ['success' => true];
    } else {
      return ['error' => 'Passwords do not match.'];
    }
  }
}

// Handle forgot password request
if (isset($_POST['email'])) {
  $email = $_POST['email'];
  $stmt = $db->prepare('SELECT id FROM users WHERE email = ?');
  $stmt->execute([$email]);
  if ($row = $stmt->fetch()) {
    $token = generateToken();
    $stmt = $db->prepare('INSERT INTO password_resets (token, user_id) VALUES (?, ?)');
    $stmt->execute([$token, $row['id']]);
    sendEmail($email, 'Reset Password', "Click here to reset your password: <a href=\"reset-password.php?token=$token\">Reset</a>");
  } else {
    return ['error' => 'Email not found.'];
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Forgot Password</title>
</head>
<body>
  <?php if (isset($_POST['email'])): ?>
    <p>Password reset email sent to your email address.</p>
  <?php else: ?>
    <h1>Forgot Password</h1>
    <form action="" method="post">
      <label>Email:</label>
      <input type="text" name="email">
      <button type="submit">Submit</button>
    </form>
  <?php endif; ?>
</body>
</html>


<?php

// Configuration
$secretKey = 'your-secret-key-here';

function verifyToken($token) {
  global $db;
  $stmt = $db->prepare('SELECT user_id FROM password_resets WHERE token = ?');
  $stmt->execute([$token]);
  return $stmt->fetchColumn();
}

function resetPassword() {
  global $db;
  if (isset($_POST['password']) && isset($_POST['confirm_password'])) {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    if ($password === $confirm_password) {
      $token = $_GET['token'];
      $user_id = verifyToken($token);
      if ($user_id !== false) {
        $stmt = $db->prepare('UPDATE users SET password_hash = ? WHERE id = ?');
        $stmt->execute([hash_password($password), $user_id]);
        return ['success' => true];
      } else {
        return ['error' => 'Invalid token.'];
      }
    } else {
      return ['error' => 'Passwords do not match.'];
    }
  }
}

// Handle reset password request
if (isset($_GET['token'])) {
  $token = $_GET['token'];
  if ($user_id = verifyToken($token)) {
    ?>
    <h1>Reset Password</h1>
    <form action="" method="post">
      <label>New Password:</label>
      <input type="password" name="password">
      <label>Confirm New Password:</label>
      <input type="password" name="confirm_password">
      <button type="submit">Submit</button>
    </form>
    <?php
  } else {
    return ['error' => 'Invalid token.'];
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Reset Password</title>
</head>
<body>
  <?php if (isset($_POST['password'])): ?>
    <p>Password updated successfully.</p>
  <?php endif; ?>
</body>
</html>



<?php
// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($email) {
    // Get user data from database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Generate random password
            $password = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 8);
            
            // Update user data with new password
            $sql = "UPDATE users SET password = '$password' WHERE email = '$email'";
            if ($conn->query($sql)) {
                // Send reset link to email
                sendResetLink($row['id'], $email, $password);
                return true;
            }
        }
    }

    return false;
}

function sendResetLink($userId, $email, $password) {
    // Email configuration
    $from = 'your_email@example.com';
    $to = $email;
    $subject = 'Password Reset Link';
    $body = "Click on the following link to reset your password: http://your_website.com/reset-password.php?user_id=" . $userId . "&password=" . md5($password);

    // Send email
    mail($to, $subject, $body, "From: $from");

    return true;
}

// Check if form was submitted
if (isset($_POST['email'])) {
    // Clean input data
    $email = trim(filter_var($_POST['email'], FILTER_SANITIZE_EMAIL));

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
    } else {
        // Send reset link to user's email
        if (forgotPassword($email)) {
            echo "A password reset link has been sent to your email.";
        } else {
            echo "Error sending password reset link. Please try again later.";
        }
    }
}

// Close database connection
$conn->close();
?>


<form method="post" action="<?php $_SERVER['PHP_SELF']; ?>">
    <label for="email">Email:</label>
    <input type="text" name="email" id="email">
    <button type="submit">Send Reset Link</button>
</form>


<?php
// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function resetPassword($userId, $password) {
    // Update user data with new password
    $sql = "UPDATE users SET password = '$password' WHERE id = '$userId'";
    if ($conn->query($sql)) {
        return true;
    }

    return false;
}

// Check if form was submitted
if (isset($_GET['user_id']) && isset($_GET['password'])) {
    // Get user ID and password from URL parameters
    $userId = $_GET['user_id'];
    $password = $_GET['password'];

    // Update user's password
    if (resetPassword($userId, $password)) {
        echo "Your password has been successfully updated.";
    } else {
        echo "Error updating your password. Please try again later.";
    }
}

// Close database connection
$conn->close();
?>


<?php

// Configuration
define('SMTP_SERVER', 'smtp.example.com');
define('SMTP_USERNAME', 'your_username@example.com');
define('SMTP_PASSWORD', 'your_password');

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Process form data
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get email address from form input
    $email = trim($_POST['email']);

    // Validate email address
    if (empty($email)) {
        echo "Please enter your email address.";
        exit;
    }

    // Query database to get user details
    $query = mysqli_query($conn, "SELECT * FROM users WHERE email = '$email'");

    // Check if user exists
    if ($query->num_rows == 0) {
        echo "No account found with that email address.";
        exit;
    }

    // Get user ID and create a new password reset token
    $row = $query->fetch_assoc();
    $user_id = $row['id'];
    $password_reset_token = bin2hex(random_bytes(32));

    // Update database to store password reset token
    mysqli_query($conn, "UPDATE users SET password_reset_token = '$password_reset_token' WHERE id = '$user_id'");

    // Send email with password reset link
    send_password_reset_email($email, $password_reset_token);

} else {
    // Display form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address">
        <button type="submit">Request Password Reset</button>
    </form>
    <?php
}

// Function to send password reset email
function send_password_reset_email($email, $password_reset_token) {
    // Create a random password for the user (optional)
    $new_password = 'YourRandomPassword';

    // Send email using PHPMailer or another mail library
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = SMTP_SERVER;
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = SMTP_USERNAME;
    $mail->Password = SMTP_PASSWORD;

    $mail->setFrom(SMTP_USERNAME, 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Password Reset Link';
    $mail->Body = "
        <p>Hello,

        You are receiving this email because we received a request to reset your password for the account associated with this email address.

        To reset your password, click on the following link:
        http://your-website.com/reset-password?token=$password_reset_token

        If you did not initiate this request, please ignore this email and do nothing.

        Best regards,
        Your Name
    ";

    if (!$mail->send()) {
        echo 'Error sending mail: ' . $mail->ErrorInfo;
        exit;
    }

    // Optional: Update user's password in database (not recommended for security reasons)
    mysqli_query($conn, "UPDATE users SET password = '$new_password' WHERE id = '$user_id'");
}

// Close connection
mysqli_close($conn);

?>


<?php

// Database connection settings
$dbHost = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database';

// Email configuration
$fromEmail = 'your-email@example.com';
$fromName = 'Your Website';

// Set password reset token length
$tokenLength = 64;

// Create a connection to the database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form was submitted
if (isset($_POST['email'])) {

    // Validate email address
    $email = trim($_POST['email']);
    $email = filter_var($email, FILTER_VALIDATE_EMAIL);

    if ($email === false) {
        echo 'Invalid email';
        exit;
    }

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Generate password reset token
        $token = bin2hex(random_bytes($tokenLength));

        // Update user's token in database
        $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        $conn->query($query);

        // Send email with password reset link
        $subject = 'Reset Your Password';
        $body = "
            <p>Dear $email,</p>
            <p>To reset your password, click the following link:</p>
            <a href='reset_password.php?token=$token'>$token</a>
            <p>This link will only work for 1 hour.</p>
            ";
        $headers = 'From: ' . $fromName . ' <' . $fromEmail . '>' . "\r
" .
            'Reply-To: ' . $fromEmail . "\r
" .
            'X-Mailer: PHP/' . phpversion();

        mail($email, $subject, $body, $headers);

        echo 'A password reset link has been sent to your email. Please check your inbox.';
    } else {
        echo 'User not found';
    }
}

?>


<?php

// Database connection settings
$dbHost = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database';

// Email configuration
$fromEmail = 'your-email@example.com';
$fromName = 'Your Website';

// Set password reset token length
$tokenLength = 64;

// Create a connection to the database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form was submitted
if (isset($_POST['password'])) {

    // Validate password and confirm password
    $password = trim($_POST['password']);
    $confirmPassword = trim($_POST['confirm_password']);

    if ($password !== $confirmPassword) {
        echo 'Passwords do not match';
        exit;
    }

    // Check if token is valid
    $token = $_GET['token'];
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Update user's password in database
        $query = "UPDATE users SET password = '$password' WHERE password_reset_token = '$token'";
        $conn->query($query);

        // Delete token from database
        $query = "DELETE FROM users WHERE password_reset_token = '$token'";
        $conn->query($query);

        echo 'Password updated successfully';
    } else {
        echo 'Invalid token';
    }
}

?>


<?php

require_once 'db.php'; // assume you have a db.php file that connects to your database

function forgotPassword() {
    $email = $_POST['email'];
    if (empty($email)) {
        throw new Exception('Email is required');
    }

    try {
        $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->execute([':email' => $email]);
        $user = $stmt->fetch();

        if (!$user) {
            throw new Exception('Email not found');
        }

        // generate a random reset token
        $resetToken = bin2hex(random_bytes(32));
        $pdo->exec("UPDATE users SET reset_token = :resetToken, reset_expires_at = NOW() + INTERVAL 1 HOUR WHERE email = :email", ['resetToken' => $resetToken, 'email' => $email]);

        // send a password reset email (not implemented here)
        // you can use PHPMailer or SwiftMail for this

        return array('message' => 'Password reset link sent to your email');
    } catch (PDOException $e) {
        throw new Exception($e->getMessage());
    }
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        $result = forgotPassword();
        echo json_encode($result);
    } catch (Exception $e) {
        echo json_encode(array('error' => $e->getMessage()));
    }
}


<?php

require_once 'db.php';

function resetPassword() {
    $token = $_GET['token'];
    if (empty($token)) {
        throw new Exception('Token is required');
    }

    try {
        $stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = :token AND reset_expires_at > NOW()");
        $stmt->execute([':token' => $token]);
        $user = $stmt->fetch();

        if (!$user) {
            throw new Exception('Token is invalid or has expired');
        }

        // prompt user to enter a new password
        echo '<form action="reset_password.php" method="post">';
        echo '<input type="password" name="new_password">';
        echo '<button type="submit">Reset Password</button>';
        echo '</form>';

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $newPassword = $_POST['new_password'];
            // hash the new password and update it in the database
            $pdo->exec("UPDATE users SET password_hash = :passwordHash WHERE email = :email", ['passwordHash' => password_hash($newPassword, PASSWORD_DEFAULT), 'email' => $user['email']]);

            return array('message' => 'Password updated successfully');
        }
    } catch (PDOException $e) {
        throw new Exception($e->getMessage());
    }
}

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    try {
        $result = resetPassword();
        echo json_encode($result);
    } catch (Exception $e) {
        echo json_encode(array('error' => $e->getMessage()));
    }
}


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_user');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($userEmail)
{
    // Generate random token
    $token = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 32);

    // Update user's password reset token in database
    $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$userEmail'";
    $conn->query($query);

    // Send password reset email
    $subject = 'Reset your password';
    $message = '
        <p>Hello, please click on the following link to reset your password:</p>
        <p><a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a></p>
        <p>Best regards,
            Your Application
        </p>';

    mail($userEmail, $subject, $message);
}

// Handle forgot password request
if (isset($_POST['forgotPassword'])) {
    $email = $_POST['email'];

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        sendPasswordResetEmail($email);
        echo 'An email has been sent to you with a password reset link.';
    } else {
        echo 'No account found with this email address.';
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_user');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to update user's password
function updatePassword($token, $newPassword)
{
    // Get user ID from token
    $query = "SELECT id FROM users WHERE password_reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        $userId = $result->fetch_assoc()['id'];

        // Update user's password in database
        $newPasswordHash = md5($newPassword);
        $query = "UPDATE users SET password = '$newPasswordHash' WHERE id = '$userId'";
        $conn->query($query);

        // Remove password reset token from database
        $query = "UPDATE users SET password_reset_token = NULL WHERE id = '$userId'";
        $conn->query($query);
    }
}

// Handle password update request
if (isset($_POST['updatePassword'])) {
    $token = $_GET['token'];
    $newPassword = $_POST['newPassword'];

    // Check if token is valid
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        updatePassword($token, $newPassword);
        echo 'Your password has been updated successfully.';
    } else {
        echo 'Invalid token.';
    }
}

// Close database connection
$conn->close();

?>


<!-- forgot_password.php -->

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>

<form action="forgot_password_handler.php" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <input type="submit" value="Submit">
</form>

</body>
</html>


// forgot_password_handler.php

require_once 'db.php'; // assume you have a db connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }
    
    // Retrieve user data from database
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user_data = $stmt->fetch();
    
    if ($user_data) {
        // Generate a reset token
        $reset_token = bin2hex(random_bytes(32));
        
        // Update user data with reset token
        $stmt = $pdo->prepare("UPDATE users SET reset_token = :reset_token WHERE email = :email");
        $stmt->bindParam(':reset_token', $reset_token);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        // Send password reset email (assuming you have an email sending function)
        send_password_reset_email($user_data['email'], $reset_token);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found";
    }
} else {
    echo "Invalid request method";
}


<!-- reset_password.php -->

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>

<form action="reset_password_handler.php" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <label for="password">New Password:</label>
    <input type="password" id="password" name="password"><br><br>
    <label for="reset_token">Reset Token:</label>
    <input type="text" id="reset_token" name="reset_token"><br><br>
    <input type="submit" value="Submit">
</form>

</body>
</html>


// reset_password_handler.php

require_once 'db.php'; // assume you have a db connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];
    $reset_token = $_POST['reset_token'];
    
    // Validate email address and reset token
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }
    
    // Retrieve user data from database
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email AND reset_token = :reset_token");
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':reset_token', $reset_token);
    $stmt->execute();
    $user_data = $stmt->fetch();
    
    if ($user_data) {
        // Hash and store new password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update user data with new password
        $stmt = $pdo->prepare("UPDATE users SET password_hash = :password_hash, reset_token = NULL WHERE email = :email");
        $stmt->bindParam(':password_hash', $hashed_password);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        echo "Password updated successfully.";
    } else {
        echo "Invalid reset token or email";
    }
} else {
    echo "Invalid request method";
}


<?php

// Include database connection settings
require 'db.php';

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $email = $_POST['email'];

    // Query the database for a matching email address
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    // If no match was found, display an error message
    if (mysqli_num_rows($result) == 0) {
        echo 'Error: Email not found.';
        exit;
    }

    // Get the user's ID and create a new password reset token
    $user_id = mysqli_fetch_assoc($result)['id'];
    $token = bin2hex(random_bytes(32));

    // Insert the token into the database
    $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$user_id', '$token')";
    mysqli_query($conn, $query);

    // Send an email to the user with instructions on how to reset their password
    $to = $email;
    $subject = 'Reset Password Instructions';
    $message = '
        <p>Dear '. $email . ',</p>
        <p>You have requested a password reset for your account. To complete this process, please click the link below:</p>
        <a href="reset_password.php?token=' . $token . '">Reset Password</a>
    ';

    // Email sending code (e.g. using PHPMailer or mail())
    $headers = 'From: your_email@example.com' . "\r
";
    mail($to, $subject, $message, $headers);

    echo 'Email sent with password reset instructions.';
} else {
    echo 'Error: Invalid request.';
}

?>


<?php

// Include database connection settings
require 'db.php';

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];

    // Query the database for a matching token and update the password
    $query = "SELECT * FROM users WHERE id IN (SELECT user_id FROM password_reset_tokens WHERE token = '$token')";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Get the user's ID
        $user_id = mysqli_fetch_assoc($result)['id'];

        // Update the user's password
        $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
        $query = "UPDATE users SET password_hash = '$new_password_hash' WHERE id = '$user_id'";
        mysqli_query($conn, $query);

        // Remove the password reset token from the database
        $query = "DELETE FROM password_reset_tokens WHERE user_id = '$user_id'";
        mysqli_query($conn, $query);

        echo 'Password updated successfully.';
    } else {
        echo 'Error: Invalid token.';
    }
} else {
    echo 'Error: Invalid request.';
}

?>


<?php
// Include the database connection script
require_once 'db_connection.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get username from form submission
    $username = $_POST['username'];

    // Query database for user with matching username
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get the user's email from the result
        $user_data = mysqli_fetch_assoc($result);
        $email = $user_data['email'];

        // Generate a new password and store it in session
        $new_password = uniqid();
        $_SESSION['new_password'] = $new_password;

        // Send email with new password to user's registered email address
        mail($email, 'Forgot Password', 'Your new password is: ' . $new_password);

        echo "New password sent to your email. Please check and login.";
    } else {
        echo "Username not found.";
    }
} else {
    // Display form if it hasn't been submitted
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username"><br><br>
    <input type="submit" value="Send New Password">
</form>
<?php } ?>


<?php

// Configuration settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Form data (email address)
$email_address = $_POST['email'];

// Check if email address exists in database
$stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
$stmt->bind_param("s", $email_address);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // Email address found, proceed with password reset

    // Generate new random password
    $new_password = substr(md5(uniqid(rand(), true)), 0, 8);

    // Update user's password in database
    $stmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE email = ?");
    $stmt->bind_param("ss", $new_password, $email_address);
    $stmt->execute();

    // Send new password to user via email (for demonstration purposes only)
    echo "New password: $new_password";

} else {
    // Email address not found
    echo "Email address not found in database.";
}

// Close connection
$conn->close();
?>


<form action="forgot_password.php" method="post">
    <label for="email">Email Address:</label>
    <input type="text" id="email" name="email" required>

    <button type="submit">Reset Password</button>
</form>


<form action="forgot_password.php" method="post">
  <label for="email">Email Address:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="submit">Submit</button>
</form>


<?php

// Check if the form has been submitted
if (isset($_POST['submit'])) {

  // Get the email address from the form
  $email = $_POST['email'];

  // Connect to the database
  $conn = mysqli_connect("localhost", "username", "password", "database");

  // Check connection
  if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
  }

  // Query to select user data from the database
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $sql);

  // If a row was found (i.e., the user exists), send an email with a password reset link
  if (mysqli_num_rows($result) > 0) {
    $user_data = mysqli_fetch_assoc($result);
    $password_reset_link = "http://example.com/reset_password.php?token=" . bin2hex(openssl_random_pseudo_bytes(32)) . "&email=$email";

    // Send an email to the user with a password reset link
    $to = $user_data['email'];
    $subject = "Reset Your Password";
    $body = "Click this link to reset your password: $password_reset_link";
    mail($to, $subject, $body);

    echo "An email has been sent to you with instructions on how to reset your password.";
  } else {
    echo "No user found with that email address.";
  }

  // Close the connection
  mysqli_close($conn);
} else {
  echo "<form action='forgot_password.php' method='post'>";
}

?>


<?php

// Check if the user has submitted the form with their new password
if (isset($_POST['submit'])) {

  // Get the token and email from the URL parameters
  $token = $_GET['token'];
  $email = $_GET['email'];

  // Connect to the database
  $conn = mysqli_connect("localhost", "username", "password", "database");

  // Check connection
  if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
  }

  // Query to update user password using token and email
  $sql = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email' AND token = '$token'";
  $result = mysqli_query($conn, $sql);

  if ($result) {
    echo "Your password has been successfully reset.";
  } else {
    echo "An error occurred while resetting your password.";
  }

  // Close the connection
  mysqli_close($conn);
} else {

  // Get the token and email from the URL parameters
  $token = $_GET['token'];
  $email = $_GET['email'];

  // Create a form for the user to enter their new password
  echo "<form action='reset_password.php' method='post'>";
  echo "New Password: <input type='password' name='new_password'><br>";
  echo "<button type='submit' name='submit'>Reset Password</button>";
  echo "</form>";

}

?>


<!-- forgot-password.php -->
<form action="forgot-password.php" method="post">
    <label for="email">Email Address:</label>
    <input type="email" id="email" name="email"><br><br>
    <button type="submit">Reset Password</button>
</form>


<!-- forgot-password.php (continued) -->
<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Check if email address is valid and exists in database
    $email = $_POST['email'];
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        // If user exists, generate a new password and send it via email
        $row = mysqli_fetch_assoc($result);
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
        $update_query = "UPDATE users SET password = '$new_password' WHERE id = '$row[id]'";
        mysqli_query($conn, $update_query);

        // Send email to user with new password
        $subject = 'New Password: ' . $new_password;
        $to = $email;
        $from = 'your-email@example.com';
        $body = "Dear User,

Your new password is: $new_password

Best regards,
The System";
        mail($to, $subject, $body, "From: $from");

        echo '<p>Password reset successfully. Please check your email for the new password.</p>';
    } else {
        // If user doesn't exist, display error message
        echo '<p>Error: Email address not found in database.</p>';
    }
}
?>


<?php

// Configuration
$db_host = 'your_database_host';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send reset link via email
function send_reset_link($email) {
  // Generate a random token for the user
  $token = bin2hex(random_bytes(32));

  // Update user record with new reset token
  $sql = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
  if ($conn->query($sql) === TRUE) {
    // Send email to user with link to reset password
    $subject = 'Reset Password';
    $message = "Click the link below to reset your password:

";
    $link = '<a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '">Reset Password</a>';
    mail($email, $subject, $message);
  }
}

// Handle form submission
if (isset($_POST['submit'])) {
  $email = trim($_POST['email']);

  // Check if email exists in database
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // If user exists, send reset link via email
    send_reset_link($email);
    echo 'Reset link sent to your email. Please check your inbox.';
  } else {
    echo 'Email not found in database.';
  }
}

// Close connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'your_database_host';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL parameter
$token = $_GET['token'];

// Check if token is valid (i.e. exists in database)
$sql = "SELECT * FROM users WHERE reset_token = '$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // If token is valid, display password reset form
  echo 'Enter new password:';
  echo '<form action="reset-password.php" method="post">';
  echo '<input type="password" name="new_password"><br><br>';
  echo '<button type="submit" name="submit">Reset Password</button>';
  echo '</form>';
} else {
  // If token is invalid, display error message
  echo 'Invalid token. Please try again.';
}

// Handle form submission (i.e., reset password)
if (isset($_POST['submit'])) {
  $new_password = $_POST['new_password'];

  // Update user record with new password
  $sql = "UPDATE users SET password_hash = '$new_password' WHERE reset_token = '$token'";
  if ($conn->query($sql) === TRUE) {
    echo 'Password updated successfully!';
  }
}

// Close connection
$conn->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Function to connect to database
function dbConnect() {
  $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
  if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
  }
  return $conn;
}

// Function to reset password (Forgot Password)
function forgotPassword($email) {
  // Connect to database
  $conn = dbConnect();

  // Generate a random token for resetting password
  $resetToken = bin2hex(random_bytes(32));

  // Check if email exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    // Update reset token for this user
    $updateQuery = "UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'";
    mysqli_query($conn, $updateQuery);

    // Send an email to the user with a link to reset password
    sendEmail($email, $resetToken);
  } else {
    echo "Email not found";
  }

  // Close database connection
  mysqli_close($conn);
}

// Function to send email (Forgot Password)
function sendEmail($email, $resetToken) {
  // Email configuration settings
  define('EMAIL_SUBJECT', 'Reset Your Password');
  define('EMAIL_BODY', 'Click this link to reset your password: <a href="http://your-website.com/reset-password?token=' . $resetToken . '">Reset Password</a>');
  define('FROM_EMAIL', 'your-email@gmail.com');

  // Create email headers
  $headers = "MIME-Version: 1.0\r
";
  $headers .= "Content-Type: text/html; charset=UTF-8\r
";
  $headers .= "From: " . FROM_EMAIL;

  // Send email using PHP's mail() function
  if (mail($email, EMAIL_SUBJECT, EMAIL_BODY, $headers)) {
    echo "Email sent successfully!";
  } else {
    echo "Failed to send email";
  }
}

?>


<?php

// Database connection settings
$dsn = 'mysql:host=localhost;dbname=mydatabase';
$username = 'myusername';
$password = 'mypassword';

try {
    // Establish database connection
    $pdo = new PDO($dsn, $username, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
    exit;
}

// Function to send password reset email
function sendPasswordResetEmail($email)
{
    // Generate a random token for the user
    $token = bin2hex(random_bytes(32));

    // Insert the token into the database (we'll create a new table later)
    $stmt = $pdo->prepare('INSERT INTO forgot_password_tokens SET email = :email, token = :token');
    $stmt->execute([':email' => $email, ':token' => $token]);

    // Email template for password reset
    $emailTemplate = 'Hello %s,
You have requested a password reset. Click this link to set a new password:
<a href="http://example.com/reset-password.php?token=%s">%s</a>

Best regards,
The Example Team';

    // Send the email using PHPMailer or your preferred method
    $emailBody = sprintf($emailTemplate, $_POST['username'], $token, $token);
    mail($_POST['email'], 'Password Reset', $emailBody);

    echo 'Email sent successfully!';
}

// Handle form submission (forgot password form)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Check if the user exists in the database
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->execute([':email' => $_POST['email']]);
    $user = $stmt->fetch();

    if ($user) {
        // Send password reset email
        sendPasswordResetEmail($_POST['email']);
    } else {
        echo 'User not found!';
    }
} ?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // generate a random string for this

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $username_or_email = trim($_POST['username_or_email']);
  $email = trim($_POST['email']);

  // Validate input data
  if (empty($username_or_email) || empty($email)) {
    echo 'Error: Both username and email are required.';
    exit;
  }

  // Retrieve user from database
  $db = new mysqli('localhost', 'your_username', 'your_password', 'your_database');
  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }
  $query = "SELECT * FROM users WHERE (username OR email) LIKE '$username_or_email'";
  $result = $db->query($query);

  // Check if user exists
  if ($result->num_rows == 0) {
    echo 'Error: No account found with that username or email.';
    exit;
  }

  // Retrieve user data from database
  $row = $result->fetch_assoc();
  $user_id = $row['id'];

  // Generate new password and store it in database
  $new_password = generatePassword();
  $query = "UPDATE users SET password_hash = '$new_password' WHERE id = '$user_id'";
  $db->query($query);

  // Send email with new password
  $to_email = $row['email'];
  $subject = 'Your new password is...';
  $body = 'Your new password is: ' . $new_password;
  mail($to_email, $subject, $body);

  echo 'Password has been sent to your email.';
} else {
  // Display form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="username_or_email">Username or Email:</label>
  <input type="text" id="username_or_email" name="username_or_email"><br><br>
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
</form>
<?php
}


<?php

function generatePassword($length = 12) {
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-={}:<>?';
  $password = '';
  for ($i = 0; $i < $length; $i++) {
    $password .= substr($characters, rand(0, strlen($characters) - 1), 1);
  }
  return $password;
}

?>


<?php

// Configuration variables
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Database connection
function connectToDatabase() {
  global $dbConnection;
  try {
    $dbConnection = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASSWORD);
    $dbConnection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  } catch (PDOException $e) {
    echo "Error connecting to database: " . $e->getMessage();
    exit;
  }
}

// Forgot password function
function forgotPassword($email) {
  global $dbConnection;

  // Check if user exists
  $stmt = $dbConnection->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->execute([$email]);
  $user = $stmt->fetch();

  if (!$user) {
    echo "User not found.";
    return false;
  }

  // Generate random reset token
  $resetToken = substr(bin2hex(random_bytes(32)), 0, 32);
  $token = md5($resetToken);

  try {
    // Insert reset token into database
    $stmt = $dbConnection->prepare("INSERT INTO password_resets (user_id, reset_token) VALUES (?, ?)");
    $stmt->execute([$user['id'], $token]);

    // Send email with reset link
    sendResetEmail($email, $resetToken);
  } catch (PDOException $e) {
    echo "Error generating reset token: " . $e->getMessage();
    return false;
  }

  return true;
}

// Function to send password reset email
function sendResetEmail($email, $token) {
  // Email configuration variables
  define('EMAIL_HOST', 'your_email_host');
  define('EMAIL_PORT', 587);
  define('EMAIL_USERNAME', 'your_email_username');
  define('EMAIL_PASSWORD', 'your_email_password');

  // Prepare email message
  $subject = "Reset Password";
  $message = "Hello, click this link to reset your password: http://your-website.com/reset-password?token=" . urlencode($token);

  try {
    // Send email using SMTP
    $smtp = mail(EMAIL_HOST, EMAIL_PORT);
    $smtp->setAuthMode('login');
    $smtp->setUsername(EMAIL_USERNAME);
    $smtp->setPassword(EMAIL_PASSWORD);
    $smtp->send($email, $subject, $message);
  } catch (Exception $e) {
    echo "Error sending email: " . $e->getMessage();
  }
}

// Usage
connectToDatabase();
forgotPassword('example@example.com');

?>


<?php

// Verify reset token
$token = $_GET['token'];
$stmt = $dbConnection->prepare("SELECT * FROM password_resets WHERE reset_token = ?");
$stmt->execute([$token]);
$reset = $stmt->fetch();

if (!$reset) {
  echo "Invalid or expired token.";
  return;
}

// Update user's password
$newPassword = 'newpassword';
$passwordHash = password_hash($newPassword, PASSWORD_DEFAULT);

$stmt = $dbConnection->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
$stmt->execute([$passwordHash, $reset['user_id']]);

echo "Password updated successfully.";
?>


// forgot_password.php

require_once 'config.php'; // Include database configuration file
require_once 'functions.php'; // Include functions for hashing and verifying passwords

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Validate input data
  if (empty($username) || empty($email)) {
    echo "Please enter both username and email";
    exit;
  }

  // Check if user exists
  $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 0) {
    echo "No account found with the provided credentials";
    exit;
  }

  // Generate password reset token
  $token = bin2hex(random_bytes(32));
  $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

  // Store token in database
  $query = "UPDATE users SET password_reset_token = '$token', expires_at = '$expires' WHERE username = '$username'";
  mysqli_query($conn, $query);

  // Send email with reset link
  sendPasswordResetEmail($email, $token);
}

function sendPasswordResetEmail($email, $token) {
  $subject = 'Reset Your Password';
  $body = '
    <p>Click the link below to reset your password:</p>
    <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
  ';

  mail($email, $subject, $body);
}

// Display form for entering username and email
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>Username:</label>
  <input type="text" name="username"><br><br>
  <label>Email:</label>
  <input type="email" name="email"><br><br>
  <button type="submit">Send Reset Link</button>
</form>


<?php

// Database connection settings
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

?>


<?php

function hashPassword($password) {
  // Hash password using a secure algorithm (e.g., bcrypt)
  return password_hash($password, PASSWORD_BCRYPT);
}

function verifyPassword($hashed_password, $input_password) {
  // Verify input password against the hashed password
  return password_verify($input_password, $hashed_password);
}
?>


<?php

require_once 'config.php';
require_once 'functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
  $token = $_GET['token'];
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    // Get user data from database
    $user_data = mysqli_fetch_assoc($result);

    // Display form for entering new password
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>New Password:</label>
  <input type="password" name="new_password"><br><br>
  <label>Confirm New Password:</label>
  <input type="password" name="confirm_new_password"><br><br>
  <button type="submit">Reset Password</button>
  <input type="hidden" name="token" value="<?php echo $token; ?>">
</form>

<?php
  } else {
    echo "Invalid reset token";
  }
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $new_password = $_POST['new_password'];
  $confirm_new_password = $_POST['confirm_new_password'];
  $token = $_POST['token'];

  if ($new_password != $confirm_new_password) {
    echo "Passwords do not match";
  } else {
    // Update user password in database
    $hashed_password = hashPassword($new_password);
    $query = "UPDATE users SET password_hash = '$hashed_password', password_reset_token = NULL, expires_at = NULL WHERE password_reset_token = '$token'";
    mysqli_query($conn, $query);

    echo "Password updated successfully";
  }
}

?>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword() {
    // Get user input (email)
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        return false;
    }

    // Query database to check if email exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Email exists, proceed with password reset

        // Generate a random password
        $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);
        echo "New Password: $password"; // You can send the new password to user via email or display on screen

        // Update user's password in database
        $updateQuery = "UPDATE users SET password = '$password' WHERE email = '$email'";
        $conn->query($updateQuery);

        return true;
    } else {
        echo "Email not found";
        return false;
    }
}

// Check if form has been submitted
if (isset($_POST['forgot-password'])) {
    forgotPassword();
} else {
    // Display forgot password form
    ?>
    <h2>Forgot Password</h2>
    <form action="" method="post">
        <input type="email" name="email" placeholder="Enter your email address">
        <button type="submit" name="forgot-password">Reset Password</button>
    </form>
    <?php
}

// Close database connection
$conn->close();

?>


function generateToken() {
    return uniqid('', true); // Generate a unique identifier
}


function verifyResetToken($token) {
    $now = time();
    global $db; // Assume db connection is established
    $query = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > '$now'";
    $result = mysqli_query($db, $query);
    
    if (mysqli_num_rows($result) === 1) {
        return true;
    } else {
        return false;
    }
}


function resetPassword($token, $newPassword) {
    global $db;
    
    if (verifyResetToken($token)) {
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        $query = "UPDATE users SET password='$hashedPassword', reset_token='', reset_expires=NULL WHERE reset_token='$token'";
        mysqli_query($db, $query);
        
        return true;
    } else {
        return false;
    }
}


function sendResetLink($email) {
    global $db;
    
    // Generate and store a reset token in the database
    $token = generateToken();
    $query = "UPDATE users SET reset_token='$token', reset_expires=NOW() + INTERVAL 1 HOUR WHERE email='$email'";
    mysqli_query($db, $query);
    
    // Send an email with a link to your website using the generated token
    // Replace 'https://example.com/reset' and 'Your Name' as needed
    $link = "https://example.com/reset?token=$token";
    mail("user@example.com", "Reset Password Link", "Click this link to reset your password: $link");
    
    return true;
}


// Request for a reset link is made through an HTML form on the website.
if (isset($_POST['email'])) {
    sendResetLink($_POST['email']);
}

// Reset password page, accessed via a URL with a reset token.
if (isset($_GET['token'])) {
    if (verifyResetToken($_GET['token'])) {
        // Display new password form
    } else {
        echo "Invalid token";
    }
} else {
    echo "No token provided.";
}

// Processing of the new password form submission.
if (isset($_POST['newPassword'])) {
    resetPassword($_GET['token'], $_POST['newPassword']);
}


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate password reset token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Function to send email with password reset link
function sendEmail($email, $token) {
    // Email settings
    $from_email = 'your_email@example.com';
    $from_name = 'Your Website';
    $subject = 'Reset Password';

    // Email body
    $body = '
        <p>Dear user,</p>
        <p>To reset your password, click on the following link:</p>
        <p><a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a></p>
        <p>Best regards,</p>
    ';

    // Send email using PHPMailer (or your preferred mail library)
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'your_smtp_host';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_smtp_username';
    $mail->Password = 'your_smtp_password';
    $mail->Port = 587;

    // Set recipient email address
    $mail->setFrom($from_email, $from_name);
    $mail->addAddress($email);

    // Set email body and send
    $mail->isHTML(true);
    $mail->Body = $body;
    if (!$mail->send()) {
        return false;
    } else {
        return true;
    }
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
    // Get user email address from form input
    $email = $_POST['email'];

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    // If user exists, generate password reset token and send email
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $token = generateToken();
            if (sendEmail($email, $token)) {
                echo "Password reset link sent to your email.";
            } else {
                echo "Error sending email. Please try again later.";
            }
        }
    } else {
        echo "User not found with that email address.";
    }
}

?>


<?php

// Configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send email verification link
function sendEmailVerificationLink($email, $link) {
  // Send mail using PHP's built-in mail() function or a library like SwiftMailer
  // For simplicity, this example uses the built-in mail() function
  $subject = 'Password Reset Link';
  $message = 'Click on the link below to reset your password: ' . $link;
  $from = 'your_email@example.com';

  mail($email, $subject, $message, 'From:' . $from);
}

// Forgot password function
function forgotPassword() {
  if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the email address from the POST request
    $email = $_POST['email'];

    // Query to get the user's id based on their email address
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // Get the user's data from the result set
      $row = $result->fetch_assoc();

      // Generate a random password and hash it
      $password = substr(bin2hex(random_bytes(10)), 0, 8);
      $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

      // Update the user's password in the database
      $sql = "UPDATE users SET password_hash = '$hashedPassword' WHERE email = '$email'";
      $conn->query($sql);

      // Generate a unique link for password reset
      $link = 'http://your-website.com/reset-password.php?email=' . urlencode($email) . '&token=' . bin2hex(random_bytes(32));

      // Send the email verification link to the user's email address
      sendEmailVerificationLink($email, $link);

      echo "A password reset link has been sent to your email.";
    } else {
      echo "No account found with that email.";
    }
  }

  // Include the form for users to enter their email address
  include 'forgot-password-form.php';
}

// Call the forgotPassword function
forgotPassword();

?>


<?php

// Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Include the forgot password function
  include 'forgot-password.php';
}

?>

<h1>Forgot Password</h1>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Email Address:</label>
  <input type="text" name="email" id="email"><br><br>
  <input type="submit" value="Reset Password">
</form>


<?php

// Configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to validate email and token
function validateEmailToken() {
  // Get the email address and token from the URL
  $email = $_GET['email'];
  $token = $_GET['token'];

  // Query to get the user's id based on their email address and token
  $sql = "SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    return true;
  }

  return false;
}

// Reset password function
function resetPassword() {
  if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the new password from the POST request
    $newPassword = $_POST['password'];

    // Query to update the user's password in the database
    $sql = "UPDATE users SET password_hash = '" . password_hash($newPassword, PASSWORD_DEFAULT) . "' WHERE email = '" . $_GET['email'] . "'";
    $conn->query($sql);

    echo "Your password has been reset successfully.";
  }

  // Include the form for users to enter their new password
  include 'reset-password-form.php';
}

// Call the resetPassword function
resetPassword();

?>


<?php

// Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Include the reset password function
  include 'reset-password.php';
}

?>

<h1>Reset Password</h1>

<?php
if (validateEmailToken()) {
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="password">New Password:</label>
  <input type="text" name="password" id="password"><br><br>
  <input type="submit" value="Reset Password">
</form>

<?php
} else {
?>

<p>Invalid email or token.</p>

<?php
}
?>


<?php

// Configuration
$databaseHost = 'localhost';
$databaseName = 'your_database_name';
$databaseUsername = 'your_database_username';
$databasePassword = 'your_database_password';

// Connect to database
$conn = mysqli_connect($databaseHost, $databaseUsername, $databasePassword, $databaseName);

if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

// Get user's email address from form submission
$email = $_POST['email'];

// Check if user exists
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // User found, generate a random token and store it in the database
    $token = bin2hex(random_bytes(32));
    update_password_token($email, $token);
    
    // Send email with password reset link
    send_password_reset_email($email, $token);
} else {
    echo "Email not found.";
}

// Close connection
mysqli_close($conn);

function update_password_token($email, $token) {
    global $databaseName, $databaseUsername, $databasePassword;
    
    // Connect to database
    $conn = mysqli_connect('localhost', $databaseUsername, $databasePassword, $databaseName);
    
    if (!$conn) {
        die('Connection failed: ' . mysqli_error($conn));
    }
    
    // Update password token in the users table
    $query = "UPDATE users SET password_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $query);
    
    // Close connection
    mysqli_close($conn);
}

function send_password_reset_email($email, $token) {
    // Email configuration
    $to = $email;
    $subject = 'Reset Password';
    $message = "Click on the link below to reset your password:

<a href='https://example.com/reset-password.php?token=" . $token . "'>Reset Password</a>";
    
    // Send email using PHPMailer (you'll need to install this library)
    require_once 'vendor/autoload.php';
    use PHPMailer\PHPMailer\PHPMailer;
    use PHPMailer\PHPMailer\Exception;
    
    try {
        $mail = new PHPMailer();
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->Port = 587;
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = 'Reset Password';
        $mail->Body = $message;
        
        $mail->send();
    } catch (Exception $e) {
        echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
    }
}

?>


<?php

// Configuration
define('BASE_URL', 'http://example.com');
define('RESET_PASSWORD_KEY', 'your_secret_key_here'); // Change this to a secret key

// Database Connection
$dsn = 'mysql:host=localhost;dbname=your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

// Form Submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Validate Email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }
    
    // Retrieve User from Database
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user_data = $stmt->fetch();
    
    if ($user_data) {
        // Generate Random Password and Send Email
        $new_password = generateRandomPassword();
        $reset_link = BASE_URL . '/reset-password.php?email=' . urlencode($email) . '&key=' . md5($RESET_PASSWORD_KEY . $email);
        
        // Send Email with New Password
        sendEmail($user_data['username'], $new_password, $reset_link);
        
        echo 'A new password has been sent to your email. Please check your inbox.';
    } else {
        echo 'No user found with this email address';
    }
}

// Helper Functions
function generateRandomPassword() {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=';
    return substr(str_shuffle($chars), 0, 12);
}

function sendEmail($username, $new_password, $reset_link) {
    $to = $email;
    $subject = 'Reset Password for ' . $username;
    $body = 'Hello ' . $username . ', <br> Your new password is: ' . $new_password . '<br> Please click on the following link to reset your password:<br><a href="' . $reset_link . '">Reset Password</a>';
    
    // Send Email using PHPMailer or mail()
}

?>


<?php

// Configuration
define('BASE_URL', 'http://example.com');
define('RESET_PASSWORD_KEY', 'your_secret_key_here'); // Change this to a secret key

// Database Connection
$dsn = 'mysql:host=localhost;dbname=your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

// Form Submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_GET['email'];
    $key = $_GET['key'];
    
    // Validate Key and Email
    if (!isset($email) || !isset($key)) {
        echo 'Invalid request';
        exit;
    }
    
    // Verify Key and Email
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email AND key = :key');
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':key', md5($RESET_PASSWORD_KEY . $email));
    $stmt->execute();
    $user_data = $stmt->fetch();
    
    if ($user_data) {
        // Update Password
        $new_password = $_POST['new_password'];
        
        // Validate New Password
        if (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/', $new_password)) {
            echo 'Invalid new password';
            exit;
        }
        
        // Update Password in Database
        $stmt = $pdo->prepare('UPDATE users SET password = :password WHERE email = :email');
        $stmt->bindParam(':password', md5($new_password));
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        echo 'Your password has been updated successfully';
    } else {
        echo 'Invalid request';
    }
}

// HTML Form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['email'])) { ?>
        <h1>Reset Password for <?= $_GET['email']; ?></h1>
        
        <form action="<?php echo BASE_URL . '/reset-password.php?email=' . urlencode($_GET['email']) . '&key=' . md5(RESET_PASSWORD_KEY . $_GET['email']); ?>" method="post">
            <input type="password" name="new_password" placeholder="New Password"><br><br>
            <input type="submit" value="Update Password">
        </form>
    <?php } ?>
</body>
</html>


<?php

// Configuration
$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'users';

// Database connection settings
$conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_password);

function sendResetPasswordEmail($email) {
  // Use a library like PHPMailer to send the email (omitted for brevity)
  echo "Sending reset password email to $email...
";
}

function checkIfEmailExists($email) {
  global $conn;
  $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  return $stmt->rowCount() > 0;
}

function generateRandomPassword() {
  $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
  $password = '';
  for ($i = 0; $i < 10; $i++) {
    $password .= substr($chars, rand(0, strlen($chars) - 1), 1);
  }
  return $password;
}

function resetPassword($email) {
  global $conn;
  if (!checkIfEmailExists($email)) {
    echo "Error: Email not found.
";
    return false;
  }

  // Generate a random password
  $new_password = generateRandomPassword();

  // Update the user's password in the database
  $stmt = $conn->prepare("UPDATE users SET password_hash=:password WHERE email=:email");
  $stmt->bindParam(':password', $new_password);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Send a reset password email to the user
  sendResetPasswordEmail($email);

  return true;
}

// Handle forgot password form submission
if (isset($_POST['forgot-password'])) {
  $email = $_POST['email'];
  if (!checkIfEmailExists($email)) {
    echo "Error: Email not found.
";
  } else {
    resetPassword($email);
    echo "Reset password email sent to $email.
";
  }
}

?>


<form action="" method="post">
  <label>Email:</label>
  <input type="email" name="email" required>
  <button type="submit" name="forgot-password">Reset Password</button>
</form>


<?php
// Configuration
$database_host = 'localhost';
$database_username = 'username';
$database_password = 'password';
$database_name = 'database';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form submission
$email = $_POST['email'];

// Check if email is valid
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
}

// Query to retrieve user ID and password reset token
$stmt = $conn->prepare("SELECT id, password_reset_token FROM users WHERE email = ?");
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // User exists, retrieve data
    while ($row = $result->fetch_assoc()) {
        $userId = $row['id'];
        $passwordResetToken = $row['password_reset_token'];

        // Generate a random password and update the database with new password
        $newPassword = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 10);
        $stmt = $conn->prepare("UPDATE users SET password = ?, password_reset_token = ? WHERE id = ?");
        $stmt->bind_param('sss', $newPassword, $passwordResetToken, $userId);
        $stmt->execute();

        // Send email with new password and password reset link
        sendEmail($email, $newPassword);

        echo 'New password sent to your email';
    }
} else {
    echo 'User not found';
}

// Close database connection
$conn->close();
?>

<!-- Form to enter email for forgot password -->
<form action="" method="post">
  <input type="text" name="email" placeholder="Enter your email address">
  <button type="submit">Send new password</button>
</form>


<?php

// Configuration (use a mail server or library like PHPMailer)
$fromEmail = 'your-email@example.com';
$fromName = 'Your Name';

// Email content
$message = '
Dear '. $name .',

Your new password is: ' . $newPassword . '

To log in to your account, use the following link:
<a href="' . $passwordResetLink . '">Click here</a>

Best regards,
' . $fromName;

// Send email using mail() function
$headers = "From: " . $fromEmail;
$headers .= "Content-Type: text/html; charset=UTF-8";
mail($to, 'New Password', $message, $headers);

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendPasswordResetEmail($email, $resetLink)
{
    // Email configuration (replace with your own email settings)
    $to = $email;
    $subject = 'Forgot Password';
    $message = '<p>Please click on the following link to reset your password:</p><p>' . $resetLink . '</p>';
    $headers = "From: no-reply@example.com\r
";
    $headers .= "Content-Type: text/html; charset=ISO-8859-1\r
";

    mail($to, $subject, $message, $headers);
}

function checkPasswordResetToken($token)
{
    // Retrieve user data from database
    $query = "SELECT * FROM users WHERE password_reset_token = '" . mysqli_real_escape_string($conn, $token) . "'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        return true; // Token is valid
    } else {
        return false; // Token is invalid or expired
    }
}

function resetPassword($new_password)
{
    // Retrieve user data from database
    $query = "UPDATE users SET password_hash = '" . mysqli_real_escape_string($conn, password_hash($new_password, PASSWORD_DEFAULT)) . "' WHERE id = '1'"; // Replace with actual user ID
    $result = $conn->query($query);

    if ($result) {
        return true; // Password reset successful
    } else {
        return false; // Password reset failed
    }
}

// Handle forgot password form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if email is registered in database
    $query = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Generate password reset token
        $token = bin2hex(random_bytes(16));

        // Update user data in database with new token
        $query = "UPDATE users SET password_reset_token = '" . mysqli_real_escape_string($conn, $token) . "' WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
        $result = $conn->query($query);

        if ($result) {
            // Send email with reset link
            $resetLink = "https://example.com/reset-password/" . $token;
            sendPasswordResetEmail($email, $resetLink);
            echo "An email has been sent to your registered email address with a password reset link.";
        } else {
            echo "Failed to update user data.";
        }
    } else {
        echo "No account found with this email address.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('RESET_TOKEN_EXPIRATION', 3600); // 1 hour in seconds

// Function to send password reset email
function sendPasswordResetEmail($email) {
  $token = generateResetToken();
  $passwordResetUrl = 'http://example.com/reset-password.php?token=' . $token;
  
  $message = "Dear user,

You have requested a password reset for your account.

To reset your password, please click on the following link: 
" . $passwordResetUrl;
  sendEmail($email, 'Password Reset', $message);
}

// Function to generate reset token
function generateResetToken() {
  return bin2hex(random_bytes(32));
}

// Function to send email using PHPMailer
function sendEmail($to, $subject, $body) {
  require_once 'PHPMailer/PHPMailer.php';
  require_once 'PHPMailer/SMTP.php';
  
  $mail = new \PHPMailer\PHPMailer();
  $mail->isSMTP();
  $mail->CharSet = 'UTF-8';
  $mail->setFrom('your-email@example.com', 'Your Name');
  $mail->addAddress($to);
  $mail->Subject = $subject;
  $mail->Body = $body;
  
  if (!$mail->send()) {
    echo 'Error sending email: ' . $mail->ErrorInfo;
  }
}

// Function to reset password
function resetPassword($token, $newPassword) {
  $user = getUserByResetToken($token);
  
  if ($user !== null && !$user['reset_token']) {
    // Update user's password and reset token
    updateUserPasswordAndToken($user, $newPassword);
    
    return true;
  }
  
  return false;
}

// Function to get user by reset token
function getUserByResetToken($token) {
  global $conn;
  
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = mysqli_query($conn, $query);
  
  if ($result !== false && mysqli_num_rows($result) > 0) {
    return mysqli_fetch_assoc($result);
  }
  
  return null;
}

// Function to update user's password and reset token
function updateUserPasswordAndToken($user, $newPassword) {
  global $conn;
  
  $passwordHash = password_hash($newPassword, PASSWORD_DEFAULT);
  $updateQuery = "UPDATE users SET password_hash = '$passwordHash', reset_token = '' WHERE id = '" . $user['id'] . "'";
  mysqli_query($conn, $updateQuery);
}

// Main logic
if (isset($_POST['email'])) {
  $email = trim($_POST['email']);
  
  if (!empty($email)) {
    sendPasswordResetEmail($email);
    
    echo 'A password reset email has been sent to your registered email address.';
  } else {
    echo 'Please enter a valid email address.';
  }
} elseif (isset($_GET['token'])) {
  $token = $_GET['token'];
  
  if (!empty($token)) {
    // Display form for user to input new password
    displayResetPasswordForm($token);
  } else {
    echo 'Invalid reset token.';
  }
}

// Function to display reset password form
function displayResetPasswordForm($token) {
  global $conn;
  
  // Get user's information by reset token
  $user = getUserByResetToken($token);
  
  if ($user !== null && !$user['reset_token']) {
    // Display form with CSRF token and hidden input fields
    echo '<form action="reset-password.php" method="post">
      <input type="hidden" name="csrf_token" value="' . generateCsrfToken() . '">
      <label>New Password:</label>
      <input type="password" name="new_password" required>
      <br>
      <button type="submit">Reset Password</button>
    </form>';
    
    // CSRF token generation function
    function generateCsrfToken() {
      return bin2hex(random_bytes(32));
    }
  } else {
    echo 'Invalid reset token.';
  }
}

// Function to handle password reset form submission
if (isset($_POST['new_password'])) {
  $token = $_GET['token'];
  $newPassword = trim($_POST['new_password']);
  
  if (!empty($token) && !empty($newPassword)) {
    if (resetPassword($token, $newPassword)) {
      echo 'Your password has been reset successfully!';
    } else {
      echo 'Invalid reset token or new password.';
    }
  } else {
    echo 'Please enter both a valid reset token and a new password.';
  }
}

?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
require_once 'db.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the user's email address from the form submission
    $email = $_POST['email'];

    // Check if the email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // If the user exists, generate a new password and send it to their email address
        $new_password = bin2hex(random_bytes(16));
        $to = $email;
        $subject = "Reset Your Password";
        $message = "Your new password is: $new_password";

        mail($to, $subject, $message);

        // Update the user's password in the database
        $update_sql = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
        $conn->query($update_sql);
    }

    echo "Your new password has been sent to your email address.";
} else {
    ?>
    <html>
    <body>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
    </body>
    </html>
<?php
}
?>


<?php

// Include the config file with database credentials and other settings
require_once 'config.php';

// Check if form data was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user input
  $email = $_POST['email'];

  // Query database to check for existing email address
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Generate a random password and store it in session
    $new_password = generateRandomPassword();
    $_SESSION['new_password'] = $new_password;

    // Send email with new password
    sendEmail($email, $new_password);

    echo 'A new password has been sent to your email. Please check your inbox.';
  } else {
    echo 'Email not found in our records.';
  }
}

// Function to generate a random password
function generateRandomPassword() {
  $length = 8;
  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  return substr(str_shuffle($chars), 0, $length);
}

// Function to send email with new password
function sendEmail($email, $new_password) {
  // Use a mail library or function (e.g. PHPMailer) to send an email
  // For simplicity, this example uses the built-in mail() function
  $subject = 'New Password for Your Account';
  $body = "Your new password is: $new_password";
  mail($email, $subject, $body);
}

?>


<?php

require_once 'config.php'; // Database connection settings

function forgot_password($username, $email) {
  // Check if the user exists in the database
  $query = "SELECT * FROM users WHERE username = :username";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':username', $username);
  $stmt->execute();
  $user_data = $stmt->fetch();

  if (!$user_data) {
    // User does not exist, return an error
    return array('error' => 'User not found');
  }

  // Generate a password reset token
  $token = bin2hex(random_bytes(32));

  // Update the user's data with the new password reset token
  $query = "UPDATE users SET password_reset_token = :token WHERE id = :id";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':id', $user_data['id']);
  $stmt->execute();

  // Send an email with the password reset link
  send_password_reset_email($username, $email, $token);

  return array('success' => 'Password reset token sent to your email');
}

function send_password_reset_email($username, $email, $token) {
  // Email settings
  $subject = 'Password Reset Link';
  $body = "Click on the following link to reset your password: <a href='" . site_url() . "/password-reset?token=" . $token . "'>" . site_url() . "/password-reset?token=" . $token . "</a>";

  // Send the email using a library like PHPMailer or SwiftMailer
  mail($email, $subject, $body);
}

// Example usage:
$username = $_POST['username'];
$email = $_POST['email'];

$result = forgot_password($username, $email);

if ($result['success']) {
  echo "Password reset token sent to your email";
} elseif ($result['error']) {
  echo $result['error'];
}


<?php

// Define constants for email configuration
define('EMAIL_FROM', 'your-email@example.com');
define('EMAIL_PASSWORD', 'your-password');

// Include required files
require_once 'db.php'; // Your database connection script
require_once 'vendor/autoload.php'; // If using composer, include the autoloader

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// Function to send email with reset link
function sendResetEmail($email) {
  $mail = new PHPMailer(true);

  try {
    // Set up email configuration
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->SMTPAuth = true;
    $mail->Username = EMAIL_FROM;
    $mail->Password = EMAIL_PASSWORD;
    $mail->SMTPSecure = 'tls';
    $mail->Port = 587;

    // Set up email content
    $subject = 'Reset your password';
    $body = 'Click this link to reset your password: <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $resetToken . '">Reset Password</a>';

    // Send email
    $mail->setFrom(EMAIL_FROM, 'Your Name');
    $mail->addAddress($email);
    $mail->isHTML(true);
    $mail->Subject = $subject;
    $mail->Body = $body;

    $mail->send();
  } catch (Exception $e) {
    echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
  }
}

// Function to handle forgot password form submission
function forgotPassword() {
  if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Check email exists in database
    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->execute([':email' => $email]);

    $user = $stmt->fetch();

    if ($user) {
      // Generate reset token and store it in database
      $resetToken = bin2hex(random_bytes(32));
      $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

      $stmt = $db->prepare('UPDATE users SET reset_token = :token, reset_expires = :expires WHERE id = :id');
      $stmt->execute([':token' => $resetToken, ':expires' => $expires, ':id' => $user['id']]);

      // Send email with reset link
      sendResetEmail($email);

      echo 'An email has been sent to your account. Please follow the instructions in the email to reset your password.';
    } else {
      echo 'Email not found in database.';
    }
  }
}

// Call forgotPassword function if form submitted
forgotPassword();

?>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get email from form submission
$email = $_POST['email'];

// Check if email exists in database
$sql = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // Email found, generate reset link and send it to user's email address

  // Generate random token for password reset
  $token = bin2hex(random_bytes(16));

  // Update user's data with new token
  $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
  $conn->query($sql);

  // Send email with reset link to user's email address
  $subject = 'Reset your password';
  $body = '
    Hello!

    You requested a password reset for your account. Click the following link to reset your password:

    <a href="' . $_SERVER['PHP_SELF'] . '?reset_token=' . $token . '">Reset Password</a>

    Best regards,
    Your Website
  ';

  // Send email using PHPMailer (you'll need to install it)
  require 'vendor/autoload.php';
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.gmail.com';
  $mail->Port = 587;
  $mail->Username = 'your_email@gmail.com';
  $mail->Password = 'your_password';
  $mail->setFrom('your_email@gmail.com', 'Your Website');
  $mail->addAddress($email, 'User Name');
  $mail->Subject = $subject;
  $mail->Body = $body;
  $mail->AltBody = '';
  if (!$mail->send()) {
    echo "Mailer Error: " . $mail->ErrorInfo;
  } else {
    echo "Email sent successfully!";
  }
} else {
  echo "No email found in database.";
}

$conn->close();

?>


<?php

// Database connection settings (same as above)

// Get token from URL parameter
$token = $_GET['reset_token'];

if (!empty($token)) {
  // Check if token is valid and matches the one in database
  $sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // Token found, allow user to reset their password

    // Create HTML form for new password
    ?>
    <form action="reset_password.php" method="post">
      <label for="new_password">New Password:</label>
      <input type="password" name="new_password" id="new_password">
      <label for="confirm_new_password">Confirm New Password:</label>
      <input type="password" name="confirm_new_password" id="confirm_new_password">
      <button type="submit">Reset Password</button>
    </form>

    <?php
  } else {
    echo "Invalid token.";
  }
} else {
  echo "No token found.";
}

?>


<?php

// Database connection settings (same as above)

// Get new password from form submission
$new_password = $_POST['new_password'];
$confirm_new_password = $_POST['confirm_new_password'];

if (!empty($new_password) && !empty($confirm_new_password)) {
  if ($new_password == $confirm_new_password) {
    // Update user's data with new password

    $sql = "UPDATE users SET password = '$new_password' WHERE email = (SELECT email FROM users WHERE password_reset_token = '$token')";
    $conn->query($sql);

    echo "Password reset successfully!";
  } else {
    echo "Passwords don't match.";
  }
} else {
  echo "Invalid form submission.";
}

?>


<?php

require_once 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Handle form submission
    $email = $_POST['email'];

    // Check if email is in database
    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->execute([':email' => $email]);
    $user = $stmt->fetch();

    if ($user) {
        // Generate reset token
        $resetToken = bin2hex(random_bytes(32));

        // Update user's reset token
        $stmt = $db->prepare('UPDATE users SET reset_token = :token WHERE id = :id');
        $stmt->execute([':token' => $resetToken, ':id' => $user['id']]);

        // Send email with reset link
        $to = $email;
        $subject = 'Reset Your Password';
        $body = '
            <p>Click the following link to reset your password:</p>
            <a href="' . site_url('reset-password?token=' . $resetToken) . '">Reset Password</a>
        ';

        sendEmail($to, $subject, $body);

        echo 'A password reset email has been sent to you. Please check your inbox.';
    } else {
        echo 'No account found with that email address.';
    }
}

function sendEmail($to, $subject, $body) {
    // Your email sending code here (e.g., using PHPMailer)
    // For this example, let's assume it sends the email successfully
}

?>


<form action="forgot_password.php" method="post">
    <input type="email" name="email" placeholder="Enter your email address">
    <button type="submit">Submit</button>
</form>


<?php

// Connect to the database
$conn = mysqli_connect("localhost", "username", "password", "database");

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the user's email address
    $email = $_POST['email'];

    // Query the database to check if the email exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    // If the email is found, send a reset password link
    if (mysqli_num_rows($result) > 0) {
        $user_id = mysqli_fetch_assoc($result)['id'];
        $token = bin2hex(random_bytes(16));
        $expires = date("Y-m-d H:i:s", strtotime('+1 hour'));

        // Insert the token into the database
        $query = "INSERT INTO reset_tokens (user_id, token, expires) VALUES ('$user_id', '$token', '$expires')";
        mysqli_query($conn, $query);

        // Send an email with a reset password link
        $to = $email;
        $subject = "Reset Password Link";
        $body = "
            Hi there!

            You have requested to reset your password. Click the following link to create a new password:

            <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>

            Best regards,
            Your Website
        ";

        // Send the email using mail() function or a third-party library (e.g., PHPMailer)
        mail($to, $subject, $body);

        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found. Please try again.";
    }
}

?>


<?php

// Get the token from the URL parameter
$token = $_GET['token'];

// Query the database to check if the token is valid
$query = "SELECT * FROM reset_tokens WHERE token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // Get the user's ID from the result
    $user_id = mysqli_fetch_assoc($result)['user_id'];

    // User can now enter their new password and submit it
    echo "<form action='reset_password.php' method='post'>
        <input type='password' name='new_password' placeholder='Enter your new password'>
        <button type='submit'>Submit</button>
    </form>";
} else {
    echo "Invalid token. Please try again.";
}

?>


<?php

// Get the new password from the form submission
$new_password = $_POST['new_password'];

// Hash the new password using a hashing algorithm (e.g., bcrypt)
$hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);

// Update the user's password in the database
$query = "UPDATE users SET password = '$hashed_new_password' WHERE id = '$user_id'";
mysqli_query($conn, $query);

echo "Password updated successfully!";
?>

</php>


<?php

require_once 'db_config.php'; // Assuming you have db_config.php for database connection settings

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Query to check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($link, $query);
    
    // If query returns true and user is found
    if (mysqli_num_rows($result) > 0) {
        // Get the user's data
        $user_data = mysqli_fetch_assoc($result);

        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(32));

        // Update the token in database with current timestamp
        $update_query = "UPDATE users SET token = '$token', last_updated = NOW() WHERE email = '$email'";
        mysqli_query($link, $update_query);

        // Email settings
        $to_email = $user_data['email'];
        $subject = 'Password Reset Link';
        $body = "
            <p>Hello, $user_data[username]</p>
            <p>Click on this link to reset your password: 
                <a href='http://example.com/reset_password.php?token=$token'>
                    Reset Password
                </a>
            </p>";

        // Send email via PHPMailer or mail()
        // For simplicity, we'll use the built-in mail() function here.

        $headers = 'MIME-Version: 1.0' . "\r
";
        $headers .= 'Content-type:text/html; charset=iso-8859-1' . "\r
";

        mail($to_email, $subject, $body, $headers);

        echo "Email sent successfully!";
    } else {
        echo "No user found with this email.";
    }
}

?>

<form method="POST">
  <input type="email" name="email" placeholder="Enter your email address">
  <button type="submit">Send Reset Link</button>
</form>


<?php

// Configuration
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get email from form input
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // Check if user exists in database
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $sql);

  if (mysqli_num_rows($result) == 1) {
    // User exists, generate new password and send reset link
    $user_data = mysqli_fetch_assoc($result);
    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 8);
    $update_sql = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);

    // Send reset link to user via email
    $subject = 'Reset Password';
    $message = '
      <p>Hello ' . $user_data['name'] . ',</p>
      <p>Your new password is: <strong>' . $new_password . '</strong></p>
      <p>Click this link to reset your password: <a href="' . $_SERVER['PHP_SELF'] . '?email=' . $email . '">Reset Password</a></p>
    ';
    mail($user_data['email'], $subject, $message);

    echo "New password has been sent to your email";
  } else {
    echo "User not found";
  }
} else {
  // Display forgot password form
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Submit">
  </form>
  <?php
}
?>


<?php

require_once 'db.php'; // assume you have a db.php file that connects to your database

// Set up email settings (update with your own credentials)
$from_email = "your-email@example.com";
$smtp_server = "your-smtp-server";
$smtp_username = "your-smtp-username";
$smtp_password = "your-smtp-password";

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the user's email from the POST data
    $email = $_POST['email'];

    // Query database to find the user with the given email
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user_data = $stmt->fetch();

    // If user exists, generate a random password and send them an email
    if ($user_data) {
        // Generate a random password
        $password = substr(uniqid(mt_rand(), true), 0, 10);

        // Update the user's password in the database (use a secure method to store passwords)
        $query = "UPDATE users SET password_hash = :password_hash WHERE email = :email";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':email', $email);
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $stmt->bindParam(':password_hash', $hashed_password);
        $stmt->execute();

        // Send the user an email with a link to reset their password
        $subject = "Reset your password";
        $message = "Click this link to reset your password: <a href='" . $_SERVER['HTTP_HOST'] . "/reset-password.php?email=" . urlencode($email) . "&password=" . urlencode($password) . "'>Reset Password</a>";
        send_email($from_email, $smtp_server, $smtp_username, $smtp_password, $subject, $message);
    }

    // Display a success message if user was found
    echo "<p>Password reset email sent to your email address.</p>";
}

// Function to send an email using PHPMailer (update with your own credentials)
function send_email($from_email, $smtp_server, $smtp_username, $smtp_password, $subject, $message) {
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';

    $mail = new PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = $smtp_server;
    $mail->Username = $smtp_username;
    $mail->Password = $smtp_password;
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->setFrom($from_email);
    $mail->addAddress($from_email);
    $mail->Subject = $subject;
    $mail->Body = $message;
    if (!$mail->send()) {
        echo "Mailer Error: " . $mail->ErrorInfo;
    }
}

?>

<!-- HTML form to submit the user's email -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Enter your email address"><br><br>
    <button type="submit">Submit</button>
</form>



<?php

// Include configuration file
require_once 'config.php';

// Define function to reset password
function forgot_password($username, $email) {
  // Check if username and email are set
  if (!isset($username) || !isset($email)) {
    return array('error' => 'Please enter both your username and email address.');
  }

  // Query database for user with matching username and email
  $query = "SELECT * FROM users WHERE username='$username' AND email='$email'";
  $result = mysqli_query($conn, $query);

  // Check if user exists in database
  if (mysqli_num_rows($result) == 0) {
    return array('error' => 'User not found.');
  }

  // Get user's ID from result
  $user_id = mysqli_fetch_assoc($result)['id'];

  // Generate new password and store it in variable
  $new_password = substr(md5(uniqid()), 0, 8);

  // Update user's password in database
  $query = "UPDATE users SET password='$new_password' WHERE id='$user_id'";
  mysqli_query($conn, $query);

  // Send new password to user via email
  send_email($email, $username, $new_password);
}

// Define function to send email with new password
function send_email($email, $username, $new_password) {
  // Set up email headers and body
  $headers = 'From: Your Email Address <your@email.com>' . "\r
";
  $body = "Dear $username,

Your new password is: $new_password

Best regards,
[Your Name]";

  // Send email using PHP's mail function
  if (mail($email, 'New Password', $body, $headers)) {
    return true;
  } else {
    return false;
  }
}

// Call forgot_password function with username and email as arguments
forgot_password($_POST['username'], $_POST['email']);

?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email, $token)
{
    // Email template (HTML)
    $html = '
        <h1>Reset your password</h1>
        <p>Please click the link below to reset your password:</p>
        <a href="http://yourwebsite.com/reset-password.php?token=' . $token . '">Reset Password</a>
    ';

    // Send email using PHP's mail function or a library like SwiftMailer
    mail($email, 'Reset your password', $html);
}

// Forgot password form handler
if (isset($_POST['submit'])) {
    // Sanitize input
    $email = trim($_POST['email']);

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Get user ID and email
        $user_data = $result->fetch_assoc();
        $userId = $user_data['id'];
        $token = bin2hex(random_bytes(16));

        // Insert token into database (for security purposes)
        $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$userId', '$token')";
        $conn->query($query);

        // Send password reset email
        send_password_reset_email($email, $token);
        echo "Password reset link sent to your email address";
    } else {
        echo "No account found with this email address";
    }
}

?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL parameter
$token = $_GET['token'];

// Check if token exists in database
$query = "SELECT * FROM password_reset_tokens WHERE token = '$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user ID and email
    $user_data = $result->fetch_assoc();
    $userId = $user_data['id'];
    $email = $user_data['email'];

    // Create password reset form
    echo '
        <h1>Reset your password</h1>
        <form action="" method="post">
            <label for="password">New Password:</label>
            <input type="password" id="password" name="password" required>
            <br>
            <label for="confirm_password">Confirm New Password:</label>
            <input type="password" id="confirm_password" name="confirm_password" required>
            <br>
            <button type="submit">Reset Password</button>
        </form>
    ';

    // Handle password reset form submission
    if (isset($_POST['submit'])) {
        // Sanitize input
        $newPassword = trim($_POST['password']);
        $confirmPassword = trim($_POST['confirm_password']);

        // Validate new password and confirm password
        if ($newPassword !== $confirmPassword) {
            echo "Passwords do not match";
            exit;
        }

        // Update user password in database
        $query = "UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'";
        $conn->query($query);

        // Remove token from database (security purposes)
        $query = "DELETE FROM password_reset_tokens WHERE user_id = '$userId'";
        $conn->query($query);

        echo "Password reset successful!";
    }
} else {
    echo "Invalid or expired password reset token";
}
?>


<?php
require_once 'config/database.php';

// Form data from the forgot password form
$email = $_POST['email'];

// Validate email input
if (empty($email)) {
  $error[] = 'Please enter your email address.';
}

// Check if email is in database
$dbc = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($dbc, $query);

if (mysqli_num_rows($result) == 0) {
  $error[] = 'Email address not found.';
} else {
  // Generate random password
  $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
  
  // Update user's password in database
  query("UPDATE users SET password_hash = '$password' WHERE email = '$email'");
}

// Send email with new password
$to = $email;
$subject = 'Your new password';
$message = "Your new password is: $password";
mail($to, $subject, $message);
?>


<?php
DB_HOST = 'your_host';
DB_USER = 'your_username';
DB_PASSWORD = 'your_password';
DB_NAME = 'your_database_name';

function query($query) {
  global $dbc;
  mysqli_query($dbc, $query);
}
?>


<?php
$host = 'your_host';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
?>


<?php

// Include config file
require_once('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the email from the form
    $email = $_POST['email'];

    try {
        // SQL query to get user data based on the provided email
        $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Retrieve user data from the query results
            $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

            // Generate a new password and update it in the database
            $new_password = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 10);
            $hashed_password = hash('sha256', $new_password);

            try {
                // Update user data with the new password
                $stmt = $conn->prepare("UPDATE users SET password=:password WHERE email=:email");
                $stmt->bindParam(':email', $email);
                $stmt->bindParam(':password', $hashed_password);
                $stmt->execute();

                // Send a recovery email to the user
                include 'send_email.php';
                send_email($user_data['email'], "Recover Password", "Your new password is: $new_password");
            } catch (PDOException $e) {
                echo "Error updating user data: " . $e->getMessage();
            }
        } else {
            echo "Email not found";
        }

    } catch (PDOException $e) {
        echo "Error retrieving user data: " . $e->getMessage();
    }

} else {
    ?>
    <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
        Email: <input type="text" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
    <?php
}
?>


<?php

function send_email($to, $subject, $message) {
    $headers = "From: your_from_email@example.com\r
";
    $headers .= "Reply-To: your_reply_to_email@example.com\r
";
    $headers .= "CC: your_cc_email@example.com\r
";

    mail($to, $subject, $message, $headers);

}

?>


<?php

// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get user's email address and username from form submission
$email = $_POST['email'];
$username = $_POST['username'];

// SQL query to retrieve user's data from database
$sql = "SELECT * FROM users WHERE email = '$email' AND username = '$username'";
$result = $conn->query($sql);

// Check if user exists in database
if ($result->num_rows > 0) {
  // Get the user's id and password hash from database
  while ($row = $result->fetch_assoc()) {
    $user_id = $row['id'];
    $password_hash = $row['password_hash'];

    // Generate a new random password
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
    $hashed_new_password = hash('sha256', $new_password);

    // Update the user's password in database
    $update_sql = "UPDATE users SET password_hash = '$hashed_new_password' WHERE id = '$user_id'";
    $conn->query($update_sql);

    // Send an email to the user with their new password
    $subject = 'New Password';
    $message = 'Your new password is: ' . $new_password;
    mail($email, $subject, $message);
  }
} else {
  echo "Email or username not found.";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration variables
require_once 'config.php';

// Check if request method is POST
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    exit;
}

// Get user input data
$email = $_POST['email'];

// Validate email
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
}

// Attempt to find user with matching email
try {
    $stmt = $pdo->prepare('SELECT id, password FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();
} catch (PDOException $e) {
    echo 'Error: Unable to connect to database';
    exit;
}

// Check if user exists
if (!$row = $stmt->fetch()) {
    echo 'Email address not found';
    exit;
}

// Generate random token for password reset
$token = bin2hex(random_bytes(32));

// Update token in user's record
try {
    $stmt = $pdo->prepare('UPDATE users SET reset_token = :token WHERE id = :id');
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':id', $row['id']);
    $stmt->execute();
} catch (PDOException $e) {
    echo 'Error: Unable to update database';
    exit;
}

// Send password reset email
try {
    mail($email, 'Password Reset Request', sprintf(
        'Click this link to reset your password: <a href="%s">Reset Password</a>',
        url('reset_password.php?token=' . $token)
    ));
} catch (Exception $e) {
    echo 'Error: Unable to send email';
    exit;
}

// Display success message
echo 'A password reset email has been sent to your email address. Please check your inbox and follow the instructions.';
exit;

?>


<?php

// Configuration variables
require_once 'config.php';

// Check if request method is GET
if ($_SERVER['REQUEST_METHOD'] !== 'GET') {
    exit;
}

// Get token from URL parameter
$token = $_GET['token'];

// Validate token
if (!$token) {
    echo 'Invalid token';
    exit;
}

// Attempt to find user with matching token
try {
    $stmt = $pdo->prepare('SELECT id, email FROM users WHERE reset_token = :token');
    $stmt->bindParam(':token', $token);
    $stmt->execute();
} catch (PDOException $e) {
    echo 'Error: Unable to connect to database';
    exit;
}

// Check if user exists
if (!$row = $stmt->fetch()) {
    echo 'Invalid token';
    exit;
}

// Display reset password form
?>
<form action="reset_password.php?token=<?php echo $token; ?>" method="POST">
    <label for="password">New Password:</label>
    <input type="password" id="password" name="password"><br><br>
    <label for="confirm_password">Confirm New Password:</label>
    <input type="password" id="confirm_password" name="confirm_password"><br><br>
    <button type="submit">Reset Password</button>
</form>

<?php

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user input data
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate new password and confirm password
    if ($password !== $confirm_password) {
        echo 'Passwords do not match';
        exit;
    }

    try {
        // Update password in user's record
        $stmt = $pdo->prepare('UPDATE users SET password = :password, reset_token = NULL WHERE id = :id');
        $stmt->bindParam(':password', password_hash($password, PASSWORD_DEFAULT));
        $stmt->bindParam(':id', $row['id']);
        $stmt->execute();
    } catch (PDOException $e) {
        echo 'Error: Unable to update database';
        exit;
    }

    // Display success message
    echo 'Password has been reset successfully!';
}

?>


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Database connection
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email) {
  // Generate a random token for the password reset
  $token = bin2hex(random_bytes(32));
  
  // Insert the token into the database
  $query = "INSERT INTO password_resets (user_id, token) VALUES (?, ?)";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("is", $_SESSION['user_id'], $token);
  $stmt->execute();
  
  // Send the email with the reset link
  $subject = "Reset Your Password";
  $body = "
    <p>Hello!</p>
    <p>To reset your password, click on this link:</p>
    <a href='http://your-website.com/reset-password?token=$token'>Reset Password</a>
  ";
  
  // Send the email using PHPMailer or any other mail library
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.gmail.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = 'your-email@gmail.com';
  $mail->Password = 'your-password';
  $mail->setFrom('your-email@gmail.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $body;
  if (!$mail->send()) {
    echo "Mailer Error: " . $mail->ErrorInfo;
    exit();
  }
}

// Handle the forgot password form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get the email from the form
  $email = $_POST['email'];
  
  // Check if the email exists in the database
  $query = "SELECT * FROM users WHERE email = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("s", $email);
  $stmt->execute();
  $result = $stmt->get_result();
  
  if ($result->num_rows > 0) {
    // Send the password reset email
    sendPasswordResetEmail($email);
    echo "A password reset link has been sent to your email.";
  } else {
    echo "Invalid email address.";
  }
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form submission
$email = $_POST['email'];

// Query database for user
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // User exists, generate password reset link
    while ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
        $username = $row['username'];

        // Generate random token
        $token = bin2hex(random_bytes(32));

        // Update user's token in database
        $update_query = "UPDATE users SET token = '$token' WHERE id = '$user_id'";
        $conn->query($update_query);

        // Send password reset email
        $subject = 'Password Reset for ' . $username;
        $message = "
            <html>
                <body>
                    <p>Hello $username,</p>
                    <p>Click the link below to reset your password:</p>
                    <a href='http://example.com/reset_password.php?token=$token'>$token</a>
                </body>
            </html>
        ";
        mail($email, $subject, $message);

        echo "Password reset email sent.";
    }
} else {
    echo "User not found.";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL
$token = $_GET['token'];

// Query database for user
$query = "SELECT * FROM users WHERE token = '$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // User exists, allow password reset
    while ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
        $username = $row['username'];

        // Allow user to enter new password and confirm it
        if (isset($_POST['new_password']) && $_POST['new_password'] == $_POST['confirm_password']) {
            // Update user's password in database
            $update_query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
            $conn->query($update_query);

            echo "Password reset successful.";
        }
    }
} else {
    echo "Invalid token.";
}

// Close database connection
$conn->close();

?>


function forgot_password($email) {
  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $result = $stmt->fetch();

  if (!$result) {
    // If email doesn't exist, return an error message
    return "Email not found.";
  }

  // Generate a reset password token
  $token = bin2hex(random_bytes(32));

  // Insert the token into the database along with the user's ID and email
  $query = "
    INSERT INTO users (
      id,
      email,
      reset_token
    )
    VALUES (
      :id,
      :email,
      :reset_token
    )
  ";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':id', $result['id']);
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':reset_token', $token);
  $stmt->execute();

  // Send the reset password email
  send_reset_password_email($email, $token);

  return "Email sent with password reset link.";
}


function send_reset_password_email($email, $token) {
  // Set up email headers and body
  $subject = "Reset Your Password";
  $body = "
    <p>Click this link to reset your password:</p>
    <a href='" . URL . "/reset-password?token=" . $token . "'>Reset Password</a>
  ";

  // Send the email using a mail library or PHPMailer
  // For example, using PHPMailer:
  require_once 'vendor/autoload.php';
  use PHPMailer\PHPMailer\PHPMailer;

  $mail = new PHPMailer();
  $mail->isHTML(true);
  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $body;
  $mail->send();
}


function reset_password($token) {
  // Check if token exists in database
  $query = "SELECT * FROM users WHERE reset_token = :reset_token";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':reset_token', $token);
  $stmt->execute();
  $result = $stmt->fetch();

  if (!$result) {
    // If token doesn't exist, return an error message
    return "Invalid reset token.";
  }

  // Get the user's ID and email from the database
  $user_id = $result['id'];
  $email = $result['email'];

  // Check if password has been reset for this token before
  $query = "
    SELECT * FROM users WHERE
      id = :user_id AND
      password_hash != :password_hash
  ";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':user_id', $user_id);
  $stmt->execute();

  if ($stmt->fetch()) {
    // If password has been reset for this token before, return an error message
    return "Password already reset.";
  }

  // Get the new password from the form
  $new_password = $_POST['new_password'];

  // Hash the new password and update it in the database
  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
  $query = "
    UPDATE users SET
      password_hash = :password_hash,
      reset_token = NULL
    WHERE id = :user_id
  ";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':user_id', $user_id);
  $stmt->bindParam(':password_hash', $hashed_password);
  $stmt->execute();

  // Return a success message
  return "Password reset successfully.";
}


<?php

require_once 'database.php'; // assume you have a database.php file for connecting to the database

function forgot_password($email) {
  global $db;

  // Check if user exists in database
  $stmt = $db->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->execute([':email' => $email]);
  $user = $stmt->fetch();

  if (!$user) {
    return false; // user does not exist
  }

  // Generate reset token
  $resetToken = bin2hex(random_bytes(32));

  // Update user data with reset token
  $stmt = $db->prepare("UPDATE users SET reset_token = :resetToken WHERE email = :email");
  $stmt->execute([':resetToken' => $resetToken, ':email' => $email]);

  // Send email to user with password reset link
  send_password_reset_email($user['email'], $resetToken);

  return true;
}

function send_password_reset_email($email, $resetToken) {
  // Replace this with your own email sending function
  mail(
    $email,
    'Reset Your Password',
    'Click here to reset your password: <a href="' . $_SERVER['REQUEST_SCHEME'] . '://' . $_SERVER['HTTP_HOST'] . '/password_reset.php?resetToken=' . $resetToken . '">Reset Password</a>',
    'From: example@example.com'
  );
}

// Example usage:
$email = $_POST['email'];
if (forgot_password($email)) {
  echo "Password reset link sent to $email";
} else {
  echo "Email not found or password reset failed";
}


function forgot_password($email) {
  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  
  if (mysqli_num_rows($result) == 0) {
    // Email not found
    return array('error' => 'Email not found');
  }
  
  // Generate a random reset token
  $reset_token = bin2hex(random_bytes(16));
  
  // Update user's reset token in database
  $query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
  mysqli_query($conn, $query);
  
  // Send password reset email
  send_reset_email($email, $reset_token);
  
  return array('success' => 'Email sent with password reset link');
}

function send_reset_email($email, $reset_token) {
  // Set up email headers and body
  $to = $email;
  $subject = "Reset your password";
  $body = "Click this link to reset your password: <a href='http://example.com/reset-password?token=$reset_token'>Reset Password</a>";
  
  // Send email using PHPMailer or a similar library
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = 'your_email@example.com';
  $mail->Password = 'your_password';
  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($to);
  $mail->Subject = $subject;
  $mail->Body = $body;
  $mail->send();
}


$email = $_POST['email'];
$result = forgot_password($email);

if ($result['error']) {
  echo 'Error: ' . $result['error'];
} else {
  echo 'Email sent with password reset link';
}


<?php
// Configuration
define('SALT', 'your_salt_here'); // Replace with your own salt
define('RESET_LINK_EXPIRE_MINUTES', 30); // Link expires in 30 minutes

// Database connection
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
}

// Check if form has been submitted
if (isset($_POST['username'])) {
    // Get the user data from database
    $sql = 'SELECT email FROM users WHERE username = ?';
    $stmt = $mysqli->prepare($sql);
    $stmt->bind_param('s', $_POST['username']);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate reset token
        $token = bin2hex(random_bytes(32));
        
        // Update user with new reset token
        $sql = 'UPDATE users SET reset_token = ? WHERE username = ?';
        $stmt = $mysqli->prepare($sql);
        $stmt->bind_param('ss', $token, $_POST['username']);
        $stmt->execute();
        
        // Send email with password reset link
        sendPasswordResetEmail($_POST['username'], $token);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Username not found.";
    }
}

// Function to send password reset email
function sendPasswordResetEmail($username, $token)
{
    // Email configuration
    $email_config = [
        'host' => 'smtp.example.com',
        'port' => 587,
        'user' => 'your_email@example.com',
        'pass' => 'your_password',
        'from_name' => 'Your Name',
        'from_email' => 'your_email@example.com'
    ];
    
    // Email content
    $subject = "Reset your password";
    $body = "
    <p>Hello $username,</p>
    <p>Click the following link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>
    ";
    
    // Send email using PHPMailer
    $mail = new PHPMailer(true);
    $mail->isSMTP();
    $mail->Host       = $email_config['host'];
    $mail->Port       = $email_config['port'];
    $mail->Username   = $email_config['user'];
    $mail->Password   = $email_config['pass'];
    $mail->setFrom($email_config['from_email'], $email_config['from_name']);
    $mail->addAddress($_POST['username']);
    $mail->Subject  = $subject;
    $mail->Body     = $body;
    
    try {
        if (!$mail->send()) {
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        } else {
            // Update token expiration time
            $token_expires_at = date('Y-m-d H:i:s', strtotime('+' . RESET_LINK_EXPIRE_MINUTES . ' minutes'));
            updateTokenExpiration($token, $token_expires_at);
        }
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
    }
}

// Function to update token expiration time
function updateTokenExpiration($token, $expires_at)
{
    // Update the user's reset token with its expiration date
    global $mysqli;
    
    $sql = "UPDATE users SET reset_token = ?, expires_at = ? WHERE reset_token = ?";
    $stmt = $mysqli->prepare($sql);
    $stmt->bind_param('sss', '', $expires_at, $token);
    $stmt->execute();
}

// Close database connection
$mysqli->close();

?>


<?php
// Configuration
define('SALT', 'your_salt_here'); // Replace with your own salt

// Database connection
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
}

// Check if token has expired
if (isset($_GET['token'])) {
    // Get user data from database
    $sql = 'SELECT expires_at FROM users WHERE reset_token = ?';
    $stmt = $mysqli->prepare($sql);
    $stmt->bind_param('s', $_GET['token']);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Get the expiration date
        $expiration_date = $result->fetch_assoc()['expires_at'];
        
        // Check if token has expired
        if (strtotime($expiration_date) < strtotime('now')) {
            echo "Password reset link has expired.";
        } else {
            // Update user data with new password
            updateUserData($_GET['token']);
        }
    } else {
        echo "Invalid token.";
    }
}

// Function to update user data with new password
function updateUserData($token)
{
    // Get the current timestamp
    $current_timestamp = date('Y-m-d H:i:s');
    
    // Check if user has updated their data recently (to prevent brute-force attacks)
    $sql = 'SELECT created_at FROM users WHERE reset_token = ?';
    $stmt = $mysqli->prepare($sql);
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Get the created date
        $created_date = $result->fetch_assoc()['created_at'];
        
        // Check if user has updated their data recently
        if (strtotime($current_timestamp) - strtotime($created_date) < 60 * 15) { // 15 minutes
            echo "You have attempted to reset your password too quickly. Please try again later.";
        } else {
            // Update the user's password
            $new_password = $_POST['password'];
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            $sql = 'UPDATE users SET password = ?, last_updated_at = ? WHERE reset_token = ?';
            $stmt = $mysqli->prepare($sql);
            $stmt->bind_param('sss', $hashed_password, $current_timestamp, $token);
            $stmt->execute();
            
            echo "Your password has been successfully updated.";
        }
    } else {
        echo "Invalid token.";
    }
}

// Close database connection
$mysqli->close();

?>


<?php

// Configuration
define('EMAIL_SUBJECT', 'Reset Password');
define('RESET_LINK_TIMEOUT', 3600); // 1 hour

// Forgot password function
function forgot_password($email) {
    global $db;

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($db, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get user details
        $user = mysqli_fetch_assoc($result);

        // Generate reset link
        $reset_link = generate_reset_link($user['id']);

        // Send email with reset link
        send_reset_email($email, $reset_link);
    } else {
        echo 'User not found';
    }
}

// Function to generate reset link
function generate_reset_link($user_id) {
    $token = bin2hex(random_bytes(16));
    setcookie('reset_token', $token, time() + RESET_LINK_TIMEOUT);

    // Update user token in database
    $query = "UPDATE users SET reset_token = '$token' WHERE id = '$user_id'";
    mysqli_query($db, $query);

    return 'http://example.com/reset-password/' . $user_id . '/' . $token;
}

// Function to send reset email
function send_reset_email($email, $reset_link) {
    $subject = EMAIL_SUBJECT;
    $body = "Click on the link below to reset your password:

{$reset_link}

Best regards,
Your Website";

    mail($email, $subject, $body);
}


forgot_password('user@example.com');


<?php

// Configuration
require_once 'config.php';

// Get user input
$email = $_POST['email'];

// Validate email address
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
}

// Retrieve user data from database
$stmt = $mysqli->prepare("SELECT * FROM users WHERE email = ?");
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo "Email address not found.";
    exit;
}

// Get user data
$user_data = $result->fetch_assoc();

// Generate reset token
$reset_token = bin2hex(random_bytes(32));
$update_stmt = $mysqli->prepare("UPDATE users SET reset_token = ? WHERE email = ?");
$update_stmt->bind_param('ss', $reset_token, $email);
$update_stmt->execute();

// Send password reset email (insert your own email sending code here)
$subject = "Password Reset";
$body = "Hello, please click the following link to reset your password: <a href='http://example.com/reset_password.php?token=" . $reset_token . "'>Reset Password</a>";
mail($user_data['email'], $subject, $body);

echo "A password reset email has been sent to your email address.";

?>


<?php

// Configuration
require_once 'config.php';

// Get reset token from URL parameter
$token = $_GET['token'];

// Retrieve user data from database using reset token
$stmt = $mysqli->prepare("SELECT * FROM users WHERE reset_token = ?");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo "Invalid reset token.";
    exit;
}

// Get user data
$user_data = $result->fetch_assoc();

// Display password reset form
?>
<form action="" method="post">
    <label for="password">New Password:</label>
    <input type="password" id="password" name="password"><br><br>
    <label for="confirm_password">Confirm New Password:</label>
    <input type="password" id="confirm_password" name="confirm_password"><br><br>
    <input type="submit" value="Reset Password">
</form>

<?php
if (isset($_POST['password'])) {
    // Validate new password and confirm password
    if ($_POST['password'] !== $_POST['confirm_password']) {
        echo "Passwords do not match.";
        exit;
    }

    // Update user's record in database with new password
    $stmt = $mysqli->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param('si', md5($_POST['password']), $user_data['id']);
    $stmt->execute();

    // Delete reset token from user's record in database
    $update_stmt = $mysqli->prepare("UPDATE users SET reset_token = NULL WHERE id = ?");
    $update_stmt->bind_param('i', $user_data['id']);
    $update_stmt->execute();

    echo "Password has been successfully updated.";
}
?>


<?php

require_once 'config.php'; // database connection settings

// Define constants
define('SECURITY_SALT', 'your_security_salt_here');
define('PASSWORD_RESET_TOKEN_EXPIRE_HOURS', 1); // token expiration time in hours

// Function to send password reset email
function send_password_reset_email($username, $token) {
    $to = "$username@example.com"; // user's email address
    $subject = "Reset Your Password";
    $body = "
        Dear $username,
        
        Click the following link to reset your password:
        <a href='http://yourwebsite.com/reset-password.php?token=$token'>
            Reset Password
        </a>
        
        If you did not request a password reset, please ignore this email.
    ";

    // Send email using PHPMailer or your preferred email library
    $mailer = new PHPMailer();
    $mailer->isSMTP();
    $mailer->Host = 'smtp.example.com';
    $mailer->Username = 'your_email@example.com';
    $mailer->Password = 'your_password';
    $mailer->SMTPSecure = 'tls';
    $mailer->Port = 587;
    $mailer->setFrom('your_email@example.com', 'Your Website');
    $mailer->addAddress($to);
    $mailer->Subject = $subject;
    $mailer->Body = $body;
    if ($mailer->send()) {
        echo "Email sent successfully!";
    } else {
        echo "Error sending email: ";
        print_r($mailer->ErrorInfo);
    }
}

// Function to generate password reset token
function generate_password_reset_token() {
    return bin2hex(random_bytes(32));
}

// Forgot Password Form Handler
if (isset($_POST['forgot-password'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE username='$username' AND email='$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        // User found, generate password reset token and send email
        $token = generate_password_reset_token();
        insert_password_reset_token_into_database($token, $username);

        send_password_reset_email($username, $token);
        echo "Password reset email sent successfully!";
    } else {
        echo "User not found.";
    }
}

// Function to insert password reset token into database
function insert_password_reset_token_into_database($token, $username) {
    $query = "
        INSERT INTO password_reset_tokens (
            token,
            username,
            expiration_time
        )
        VALUES (
            '$token',
            '$username',
            NOW() + INTERVAL " . PASSWORD_RESET_TOKEN_EXPIRE_HOURS . " HOUR
        )
    ";
    mysqli_query($conn, $query);
}

?>


<?php

require_once 'config.php'; // your database configuration file

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = trim($_POST['email']);

  if (empty($email)) {
    echo json_encode(array('error' => 'Email address is required'));
    exit;
  }

  try {
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() === 0) {
      echo json_encode(array('error' => 'Email not found'));
      exit;
    }

    $user = $stmt->fetch();
    $salt = $user['salt'];
    $password_hash = hash_hmac('sha256', $user['password_hash'], $salt);

    // generate a new password reset token
    $token = bin2hex(random_bytes(32));

    // update the user's record with the new token
    $stmt = $pdo->prepare("UPDATE users SET password_reset_token = :token WHERE email = :email");
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // send a password reset email to the user
    $subject = 'Reset your password';
    $message = "Dear $user[name],
To reset your password, click this link: http://yourwebsite.com/reset_password.php?token=$token";
    mail($email, $subject, $message);

    echo json_encode(array('success' => 'Email sent with password reset token'));
  } catch (PDOException $e) {
    echo json_encode(array('error' => $e->getMessage()));
  }
} else {
  // display the forgot password form
  ?>
  <h1>Forgot Password</h1>
  <form method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required><br>
    <button type="submit">Submit</button>
  </form>
  <?php
}


<?php

require_once 'config.php'; // your database configuration file

if ($_SERVER['REQUEST_METHOD'] === 'GET') {
  $token = $_GET['token'];

  if (empty($token)) {
    echo json_encode(array('error' => 'Invalid token'));
    exit;
  }

  try {
    $stmt = $pdo->prepare("SELECT * FROM users WHERE password_reset_token = :token");
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    if ($stmt->rowCount() === 0) {
      echo json_encode(array('error' => 'Invalid token'));
      exit;
    }

    $user = $stmt->fetch();
    $salt = $user['salt'];

    // prompt the user to enter a new password
    ?>
    <h1>Reset Password</h1>
    <form method="post">
      <label for="new_password">New Password:</label>
      <input type="password" id="new_password" name="new_password"><br>
      <button type="submit">Submit</button>
    </form>
    <?php
  } catch (PDOException $e) {
    echo json_encode(array('error' => $e->getMessage()));
  }
} else {
  // process the new password form submission
  if (!empty($_POST['new_password'])) {
    $new_password = trim($_POST['new_password']);

    if (strlen($new_password) < 8) {
      echo json_encode(array('error' => 'Password must be at least 8 characters'));
      exit;
    }

    // hash the new password with the user's salt
    $password_hash = hash_hmac('sha256', $new_password, $_POST['salt']);

    try {
      // update the user's record with the new password hash
      $stmt = $pdo->prepare("UPDATE users SET password_hash = :hash WHERE email = :email");
      $stmt->bindParam(':hash', $password_hash);
      $stmt->bindParam(':email', $_POST['email']);
      $stmt->execute();

      // delete the password reset token from the user's record
      $stmt = $pdo->prepare("UPDATE users SET password_reset_token = NULL WHERE email = :email");
      $stmt->bindParam(':email', $_POST['email']);
      $stmt->execute();

      echo json_encode(array('success' => 'Password updated'));
    } catch (PDOException $e) {
      echo json_encode(array('error' => $e->getMessage()));
    }
  }
}


function forgot_password($email) {
    // Connect to database
    $db = new mysqli("localhost", "username", "password", "database");

    if ($db->connect_error) {
        die("Connection failed: " . $db->connect_error);
    }

    // Query the database for user's email address
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $db->query($query);

    if ($result->num_rows == 0) {
        return false; // Email not found in database
    }

    // Get user ID and generate a reset token
    while ($row = $result->fetch_assoc()) {
        $user_id = $row["id"];
        $reset_token = substr(hash('sha256', microtime()), 0, 32); // Random string
    }

    // Store the reset token in database
    $query = "UPDATE users SET reset_token = '$reset_token' WHERE id = '$user_id'";
    if (!$db->query($query)) {
        return false;
    }

    // Send email with reset link
    $subject = "Password Reset for [Your Site Name]";
    $body = "
    Click this link to reset your password: <a href='http://your-site.com/reset-password/$reset_token'>Reset Password</a>
    ";

    mail($email, $subject, $body);

    return true; // Email sent successfully
}


function reset_password($user_id, $new_password) {
    // Connect to database
    $db = new mysqli("localhost", "username", "password", "database");

    if ($db->connect_error) {
        die("Connection failed: " . $db->connect_error);
    }

    // Update user's password in database
    $query = "UPDATE users SET password_hash = '$new_password' WHERE id = '$user_id'";
    if (!$db->query($query)) {
        return false;
    }

    return true; // Password updated successfully
}


// Call forgot_password() function with user's email address
if (forgot_password("user@example.com")) {
    echo "Email sent successfully!";
} else {
    echo "Error sending email";
}

// Call reset_password() function with user ID and new password
if (reset_password(1, "$2y$10$hash")) { // Replace $hash with the actual hash
    echo "Password updated successfully!";
} else {
    echo "Error updating password";
}


<?php

// Configuration variables
define('EMAIL_HOST', 'your_email_host');
define('EMAIL_PORT', 587);
define('EMAIL_USERNAME', 'your_email_username');
define('EMAIL_PASSWORD', 'your_email_password');

// Database connection
$db = new mysqli("localhost", "username", "password", "database");

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user's email address from form submission
    $email = $_POST['email'];

    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $db->query($query);

    if ($result->num_rows > 0) {
        // User exists, generate password reset link and send email
        $row = $result->fetch_assoc();
        $user_id = $row['id'];
        $token = bin2hex(random_bytes(32));
        $hashed_token = hash('sha256', $token);

        // Update user's token in database
        $query = "UPDATE users SET password_reset_token = '$hashed_token' WHERE id = '$user_id'";
        $db->query($query);

        // Send email with password reset link
        send_password_reset_email($email, $token);
    } else {
        echo 'Email address not found.';
    }
} else {
    // Display forgot password form
    display_forgot_password_form();
}

// Function to send password reset email
function send_password_reset_email($email, $token) {
    // Create password reset link
    $link = 'http://yourdomain.com/reset-password.php?token=' . $token;

    // Set up email headers and body
    $headers = "From: your_email_username
Content-Type: text/plain";
    $body = "Click on this link to reset your password: $link";

    // Send email using PHP's mail function
    if (mail($email, 'Password Reset', $body, $headers)) {
        echo 'Email sent successfully.';
    } else {
        echo 'Error sending email.';
    }
}

// Function to display forgot password form
function display_forgot_password_form() {
    ?>
    <form action="" method="post">
        <label for="email">Email address:</label>
        <input type="text" id="email" name="email"><br><br>
        <button type="submit">Send reset link</button>
    </form>
    <?php
}

?>


<?php

// Configuration variables (same as forgot_password.php)
define('EMAIL_HOST', 'your_email_host');
define('EMAIL_PORT', 587);
define('EMAIL_USERNAME', 'your_email_username');
define('EMAIL_PASSWORD', 'your_email_password');

// Database connection (same as forgot_password.php)
$db = new mysqli("localhost", "username", "password", "database");

// Check if token is valid
if ($_GET['token']) {
    $hashed_token = $_GET['token'];
    $query = "SELECT * FROM users WHERE password_reset_token = '$hashed_token'";
    $result = $db->query($query);

    if ($result->num_rows > 0) {
        // Token is valid, display reset form
        display_reset_password_form();
    } else {
        echo 'Invalid token.';
    }
} else {
    echo 'No token provided.';
}

// Function to display reset password form
function display_reset_password_form() {
    ?>
    <form action="" method="post">
        <label for="password">New password:</label>
        <input type="text" id="password" name="password"><br><br>
        <button type="submit">Reset password</button>
    </form>
    <?php
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get new password from form submission
    $new_password = $_POST['password'];

    // Query database to update user's password
    $query = "UPDATE users SET password = '$new_password', password_reset_token = '' WHERE id = (SELECT id FROM users WHERE password_reset_token = '$_GET[token]')";
    $db->query($query);

    echo 'Password reset successfully.';
}

?>


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_user');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Check if form data is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

  // Get user email from form data
  $email = $_POST['email'];

  // Validate email
  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email";
    exit;
  }

  // Check if user exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows == 0) {
    echo "User not found";
    exit;
  }

  // Generate password reset link
  $token = bin2hex(random_bytes(32));
  $link = 'http://your-website.com/reset-password.php?token=' . urlencode($token);

  // Store token in database ( associate with user's email)
  $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result) {
    // Send email with reset link
    $to = $email;
    $subject = 'Reset your password';
    $message = 'Click here to reset your password: ' . $link;
    mail($to, $subject, $message);
    echo "Password reset link sent to your email";
  } else {
    echo "Error sending email or updating token in database";
  }
} else {

  // If form is not submitted, display forgot password form
  ?>

  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Email:</label>
    <input type="email" name="email" required>
    <button type="submit">Send reset link</button>
  </form>

<?php

}

?>


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_user');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get token from URL query string
$token = $_GET['token'];

// Check if token exists in database (associated with user's email)
$query = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($query);

if ($result->num_rows == 0) {
  echo "Invalid token or user not found";
  exit;
}

// Display form to input new password
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>Enter new password:</label>
  <input type="password" name="new_password" required>
  <button type="submit">Update password</button>
  <input type="hidden" name="token" value="<?php echo $token; ?>">
</form>

<?php

// If form is submitted, update user's password
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

  // Get new password and token from form data
  $new_password = $_POST['new_password'];
  $token = $_POST['token'];

  // Check if token matches the one in database
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($query);

  if ($result->num_rows == 0) {
    echo "Invalid token or user not found";
    exit;
  }

  // Update user's password in database
  $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
  $query = "UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE password_reset_token = '$token'";
  $result = $conn->query($query);

  if ($result) {
    echo "Password updated successfully";
  } else {
    echo "Error updating password in database";
  }
}
?>


// Configuration
$reset_link_expires_in = 3600; // in seconds (1 hour)
$email_protocol = 'https';
$email_host = 'smtp.gmail.com'; // Your SMTP host
$email_port = 587;
$email_username = 'your-email@gmail.com'; // Your email address
$email_password = 'your-password'; // Your email password

// Function to send reset link via email
function send_reset_link($email, $username) {
    global $reset_link_expires_in, $email_protocol, $email_host, $email_port, $email_username, $email_password;

    try {
        // Create a token for the user
        $token = bin2hex(random_bytes(32));

        // Store the token in database (for demonstration purposes)
        // In real application, use your database library to store the token.
        // Update the user's password reset token and expiration time in your database.
        $user_id = insert_user($email, $username); // Assuming you have a function called insert_user
        update_user_password_reset_token($user_id, $token, $reset_link_expires_in);

        // Send email with reset link
        send_email($email, 'Reset Password Link', get_reset_link_url($token));

    } catch (Exception $e) {
        echo "Error sending email: " . $e->getMessage();
    }
}

// Function to generate reset link URL
function get_reset_link_url($token) {
    return "$email_protocol://$email_host/reset-password?token=$token";
}

// Function to send email
function send_email($to, $subject, $body) {
    global $email_protocol, $email_host, $email_port, $email_username, $email_password;

    // Set up the mail server settings
    $mail = new PHPMailer();

    $mail->isSMTP();
    $mail->Host = $email_host;
    $mail->Port = $email_port;
    $mail->SMTPAuth = true;
    $mail->Username = $email_username;
    $mail->Password = $email_password;
    $mail->SMTPSecure = 'tls';
    $mail->setFrom($email_username, 'Your Email');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
        echo "Error sending email: " . $mail->ErrorInfo;
    } else {
        echo "Email sent successfully!";
    }
}

// Function to update user's password reset token
function update_user_password_reset_token($user_id, $token, $expires_in) {
    // Update the user's password reset token and expiration time in your database.
    // For demonstration purposes, we'll use an array to store the data.
    $users = $_SESSION['users'] ?? [];
    $users[$user_id]['password_reset_token'] = $token;
    $users[$user_id]['password_reset_expires_in'] = time() + $expires_in;

    return $users;
}

// Example usage:
$username = 'john_doe';
$email = 'johndoe@example.com';

send_reset_link($email, $username);


// Example database array (for demonstration purposes)
$users = [
    1 => [
        'email' => 'johndoe@example.com',
        'username' => 'john_doe'
    ],
];


// config.php (load database credentials and settings)
<?php

define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// load email configuration
$mailConfig = [
    'host' => 'smtp.gmail.com',
    'port' => 587,
    'username' => 'your_email@gmail.com',
    'password' => 'your_password'
];

?>


// forgot-password.php (handle the forgot password form submission)
<?php

require_once 'config.php';

// Validate user input
if (!isset($_POST['email'])) {
    echo 'Error: Email is required.';
    exit;
}

$email = $_POST['email'];
$user = getUserByEmail($email);

if (!$user) {
    echo 'Error: No user found with that email address.';
    exit;
}

// Generate a temporary password and hash it
$tempPassword = strval(rand(100000, 999999));
$passwordHash = password_hash($tempPassword, PASSWORD_DEFAULT);

// Update the user's password
updateUserPassword($user['id'], $passwordHash);

// Send an email with the temporary password reset link
sendResetEmail($email, $tempPassword);

echo 'A temporary password has been sent to your email address. Please check your inbox and use the provided link to reset your password.';

function getUserByEmail($email) {
    // Retrieve user data from database using their email address
}

function updateUserPassword($userId, $passwordHash) {
    // Update the user's password in the database
}

function sendResetEmail($email, $tempPassword) {
    $mailConfig = mailConfig();
    $subject = 'Temporary Password Reset Link';
    $body = '<a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?email=' . urlencode($email) . '&password=' . urlencode($tempPassword) . '">Click here to reset your password.</a>';
    $fromEmail = $mailConfig['username'];
    $fromName = 'Your Website';

    mail($email, $subject, $body, 'From: ' . $fromEmail . ' ' . $fromName);
}

?>


<?php

require_once 'config.php';

// Validate user input
if (!isset($_GET['email']) || !isset($_GET['password'])) {
    echo 'Error: Invalid request.';
    exit;
}

$email = $_GET['email'];
$tempPassword = $_GET['password'];

$user = getUserByEmail($email);

if (!$user) {
    echo 'Error: No user found with that email address.';
    exit;
}

// Verify the temporary password hash
if (!password_verify($tempPassword, $user['password'])) {
    echo 'Error: Invalid request.';
    exit;
}

// Update the user's new password
updateUserPassword($user['id'], $_POST['new_password']);

echo 'Your password has been successfully updated.';

function updateUserPassword($userId, $newPasswordHash) {
    // Update the user's password in the database
}
?>


CREATE TABLE users (
  id INT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  password_hash CHAR(60) NOT NULL,
  reset_token VARCHAR(100) NOT NULL,
  reset_expires TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP + INTERVAL 1 HOUR
);


<?php

// Configuration
$secret_key = 'your-secret-key';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }

  // Query database for user with matching email address
  $db = new mysqli('your-host', 'your-username', 'your-password', 'your-database');
  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $db->query($query);

  // Check if user exists
  if ($result->num_rows > 0) {
    $user_data = $result->fetch_assoc();

    // Generate a random reset token
    $reset_token = bin2hex(random_bytes(16));

    // Update database with new reset token
    $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
    $db->query($update_query);

    // Send password reset email (optional)
    $to_email = $user_data['email'];
    $subject = 'Password Reset';
    $message = "Click here to reset your password: <a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=" . $reset_token . "'>Reset Password</a>";
    mail($to_email, $subject, $message);

    echo "A password reset email has been sent to your email address.";
  } else {
    echo "Email address not found.";
  }

  // Close database connection
  $db->close();
}

?>


<?php

// Configuration
$secret_key = 'your-secret-key';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $token = $_GET['token'];
  $new_password = $_POST['new_password'];
  $confirm_password = $_POST['confirm_password'];

  // Validate password and confirmation
  if ($new_password !== $confirm_password) {
    echo "Passwords do not match.";
    exit;
  }

  // Query database for user with matching reset token
  $db = new mysqli('your-host', 'your-username', 'your-password', 'your-database');
  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = $db->query($query);

  // Check if user exists
  if ($result->num_rows > 0) {
    $user_data = $result->fetch_assoc();

    // Update database with new password hash
    $update_query = "UPDATE users SET password_hash = '" . password_hash($new_password, PASSWORD_DEFAULT) . "' WHERE email = '$user_data[email]'";
    $db->query($update_query);

    // Delete reset token from database
    $delete_query = "DELETE FROM users WHERE reset_token = '$token'";
    $db->query($delete_query);

    echo "Password has been successfully updated.";
  } else {
    echo "Invalid reset token.";
  }

  // Close database connection
  $db->close();
}

?>


// forgot_password.php

<?php

require_once 'config/db.php'; // database connection settings
require_once 'lib/password.php'; // for hashing passwords

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        $token = bin2hex(random_bytes(32)); // generate a random token
        $reset_url = "http://example.com/reset_password.php?token=$token";

        // update user's reset token in database
        $query = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
        mysqli_query($conn, $query);

        // send email with reset link
        $subject = 'Reset Password';
        $message = "Click here to reset your password: $reset_url";
        mail($user['email'], $subject, $message);
    } else {
        echo "Email not found.";
    }
} else {
    echo "Invalid request method.";
}

?>


// reset_password.php

<?php

require_once 'config/db.php'; // database connection settings
require_once 'lib/password.php'; // for hashing passwords

if ($_SERVER['REQUEST_METHOD'] === 'GET') {
    $token = $_GET['token'];

    if (empty($token)) {
        echo "Invalid token.";
    } else {
        $query = "SELECT * FROM users WHERE reset_token = '$token'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) > 0) {
            $user = mysqli_fetch_assoc($result);
            if ($user['reset_token'] === $token) { // validate token
                echo "Reset Password Form";
                ?>
                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
                    <input type="password" name="new_password" placeholder="New Password">
                    <input type="password" name="confirm_password" placeholder="Confirm New Password">
                    <button type="submit">Reset Password</button>
                </form>
                <?php
            } else {
                echo "Invalid token.";
            }
        } else {
            echo "Email not found.";
        }
    }
} elseif ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password !== $confirm_password) {
        echo "Passwords do not match.";
    } else {
        // update user's password in database
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $query = "UPDATE users SET password = '$hashed_password' WHERE reset_token = '$token'";
        mysqli_query($conn, $query);

        // delete reset token from database
        $query = "DELETE FROM users WHERE reset_token = '$token'";
        mysqli_query($conn, $query);

        echo "Password updated successfully.";
    }
} else {
    echo "Invalid request method.";
}

?>


forgot_password/
config.php
model/UserModel.php
controller/ForgotPasswordController.php
index.php


<?php
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
class UserModel {
    private $conn;

    public function __construct($conn) {
        $this->conn = $conn;
    }

    public function forgotPassword($email) {
        // Query to check if user exists
        $stmt = $this->conn->prepare("SELECT * FROM users WHERE email=:email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        if ($stmt->rowCount() > 0) {
            // If user exists, generate a reset link and send an email
            $resetLink = 'http://example.com/reset-password/' . bin2hex(random_bytes(16));
            // Implement mail function using PHPMailer or similar
            echo "Reset Link: $resetLink"; // For demonstration purposes only
            
            // Update database with reset token
            $updateStmt = $this->conn->prepare("UPDATE users SET reset_token=:token WHERE email=:email");
            $updateStmt->bindParam(':token', $resetLink);
            $updateStmt->bindParam(':email', $email);
            $updateStmt->execute();
        } else {
            echo "User not found.";
        }
    }
}
?>


<?php
class ForgotPasswordController {
    private $model;

    public function __construct($model) {
        $this->model = $model;
    }

    public function forgotPassword() {
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Handle POST request with email data
            $email = $_POST['email'];
            
            // Call the model's forgotPassword method
            $this->model->forgotPassword($email);
        }
    }
}
?>


<?php
require_once 'config.php';
require_once 'controller/ForgotPasswordController.php';

$controller = new ForgotPasswordController(new UserModel($conn));

if (isset($_POST['submit'])) {
    $controller->forgotPassword();
}
?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Function to retrieve user from database based on email address
function getUserByEmail($email) {
    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        return $row = $result->fetch_assoc();
    } else {
        return null;
    }
    
    $conn->close();
}

// Function to send password reset link via email
function sendResetLink($email, $token) {
    $to = $email;
    $subject = "Password Reset Link";
    $message = "
    <p>Click on the following link to reset your password:</p>
    <a href='http://your_website.com/reset_password.php?token=$token'>Reset Password</a>
    ";
    
    // Send email using PHPMailer or any other mail library
    mail($to, $subject, $message);
}

// Handle forgot password form submission
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Retrieve user from database based on email address
    $user = getUserByEmail($email);
    
    if ($user) {
        // Generate a new token for password reset
        $token = bin2hex(random_bytes(32));
        
        // Update user's token in database
        $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
        
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }
        
        $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        $result = $conn->query($sql);
        
        if ($result === TRUE) {
            // Send password reset link via email
            sendResetLink($email, $token);
            
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "Error updating user's token: " . $conn->error;
        }
        
        $conn->close();
    } else {
        echo "No account found with this email address.";
    }
}

?>


<?php

// Configuration variables
$host = 'localhost';
$db_name = 'mydatabase';
$username = 'myusername';
$password = 'mypassword';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send email
function send_email($email, $token) {
    // Email configuration variables
    $from = 'myemail@example.com';
    $subject = 'Reset Password';

    // Message content
    $message = "
    <html>
      <body>
        <p>Click the link below to reset your password:</p>
        <a href='http://example.com/reset_password.php?token=$token'>$token</a>
      </body>
    </html>";

    // Send email using PHPMailer
    $mail = new PHPMailer();
    $mail->IsSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = $from;
    $mail->Password = 'password';
    $mail->SetFrom($from);
    $mail->Subject = $subject;
    $mail->Body = $message;
    $mail->AddAddress($email);

    if (!$mail->Send()) {
        return false;
    }

    return true;
}

// Handle forgotten password request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input
    $username_or_email = $_POST['username_or_email'];
    $email = $_POST['email'];

    // Check if username or email exists in database
    $query = "SELECT * FROM users WHERE username='$username_or_email' OR email='$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Retrieve user data
        while ($row = $result->fetch_assoc()) {
            $token = bin2hex(random_bytes(32));
            $query = "UPDATE users SET token='$token' WHERE id='" . $row['id'] . "'";
            if (!$conn->query($query)) {
                die("Error updating user data: " . $conn->error);
            }

            // Send email with reset link
            send_email($email, $token);

            echo "Email sent successfully.";
        }
    } else {
        echo "User not found.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration variables
$host = 'localhost';
$db_name = 'mydatabase';
$username = 'myusername';
$password = 'mypassword';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to hash password
function hash_password($password) {
    // Use a secure hashing algorithm like bcrypt or Argon2.
    return password_hash($password, PASSWORD_DEFAULT);
}

// Handle reset password request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];

    // Check if token exists in database
    $query = "SELECT * FROM users WHERE token='$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Update user password
        while ($row = $result->fetch_assoc()) {
            $hashed_password = hash_password($new_password);
            $query = "UPDATE users SET password_hash='$hashed_password', token=NULL WHERE id='" . $row['id'] . "'";
            if (!$conn->query($query)) {
                die("Error updating user data: " . $conn->error);
            }

            echo "Password updated successfully.";
        }
    } else {
        echo "Token not found.";
    }
}

// Close database connection
$conn->close();

?>


// Include configuration file
require_once 'config.php';

// Check if POST data is available
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get email from POST data
    $email = $_POST['email'];

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header('Location: forgot-password.php?error=invalid-email');
        exit;
    }

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Generate reset token
        $token = bin2hex(random_bytes(32));

        // Store token in database
        $expiresAt = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $query = "INSERT INTO password_resets (email, token, expires_at) VALUES ('$email', '$token', '$expiresAt')";
        mysqli_query($conn, $query);

        // Send reset link to email
        sendResetLink($email, $token);
    } else {
        header('Location: forgot-password.php?error=invalid-email');
        exit;
    }
} else {
    echo 'Please use the form below to request a password reset.';
}


// Configuration file (config.php)
require_once 'config.php';

// Email variables
$to = $_POST['email'];
$token = $_POST['token'];

// Set email body and subject
$emailBody = "Click here to reset your password: <a href='reset-password.php?token=$token'>Reset Password</a>";
$emailSubject = 'Password Reset Request';

// Send email using PHPMailer library (optional)
require_once 'PHPMailer/PHPMailerAutoload.php';
$mail = new PHPMailer();
$mail->isSMTP();
$mail->Host = 'smtp.example.com';
$mail->Port = 587;
$mail->SMTPSecure = 'tls';
$mail->SMTPAuth = true;
$mail->Username = 'your-email@example.com';
$mail->Password = 'your-password';
$mail->setFrom('your-email@example.com', 'Your Name');
$mail->addAddress($to);
$mail->Subject = $emailSubject;
$mail->Body = $emailBody;
$mail->AltBody = 'This is a plain-text message body';
$mail->send();

// Log success
logInfo("Password reset link sent to $to");


// Configuration file (config.php)
require_once 'config.php';

// Get token from URL query string
$token = $_GET['token'];

// Validate token
$query = "SELECT * FROM password_resets WHERE token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // Get user email and password
    $row = mysqli_fetch_assoc($result);
    $email = $row['email'];

    // Check if token is still valid
    if ($row['expires_at'] > date('Y-m-d H:i:s')) {
        // Update user's password
        updatePassword($email, $_POST['password']);
    } else {
        header('Location: forgot-password.php?error=token-expired');
        exit;
    }
} else {
    header('Location: forgot-password.php?error=invalid-token');
    exit;
}


<?php

// Include configuration file (e.g., database credentials)
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get form data
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        exit;
    }

    // Query database to retrieve user ID
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (!$result) {
        die("Database query failed: " . mysqli_error($conn));
    }
    $user_id = mysqli_fetch_assoc($result);

    // If user exists
    if ($user_id) {
        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(16));

        // Update database with new token
        $query = "UPDATE users SET token = '$token' WHERE id = '$user_id[id]'";
        mysqli_query($conn, $query);

        // Send email with password reset link
        send_email($email, $token);
    } else {
        echo "No user found with that email address.";
    }
}

// Function to send password reset email
function send_email($email, $token) {
    // Replace with your own mail server settings
    $to = $email;
    $subject = 'Reset Your Password';
    $body = 'Click here to reset your password: <a href="http://example.com/reset-password.php?token=' . $token . '">Reset Password</a>';
    $headers = 'From: example@example.com' . "\r
" .
               'Content-Type: text/html; charset=UTF-8' . "\r
";

    mail($to, $subject, $body, $headers);
}

?>


<?php

// Include configuration file (e.g., database credentials)
require_once 'config.php';

// Get token from URL query string
$token = $_GET['token'];

// Validate token
if (!$token) {
    echo "Invalid or missing token.";
    exit;
}

// Query database to retrieve user ID and username
$query = "SELECT * FROM users WHERE token = '$token'";
$result = mysqli_query($conn, $query);
if (!$result) {
    die("Database query failed: " . mysqli_error($conn));
}
$user_id = mysqli_fetch_assoc($result);

// If user exists with matching token
if ($user_id) {
    // Display password reset form
    echo '<h1>Reset Password</h1>';
    echo '<form action="" method="post">';
    echo '<input type="password" name="new_password">';
    echo '<input type="submit" value="Submit">';
    echo '</form>';

    // If form has been submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Get new password from form data
        $new_password = $_POST['new_password'];

        // Validate new password
        if (strlen($new_password) < 8) {
            echo "Password must be at least 8 characters.";
            exit;
        }

        // Update database with new password and reset token
        $query = "UPDATE users SET password = '$new_password', token = '' WHERE id = '$user_id[id]'";
        mysqli_query($conn, $query);

        echo 'Password successfully changed.';
    }
} else {
    echo "Invalid or expired token.";
}

?>


<?php

// Configuration
require_once 'config.php';

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get the email address from the form data
  $email = $_POST['email'];

  // Validate the email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // Check if the email exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) == 1) {
    // Get the user's ID from the query result
    $user_id = mysqli_fetch_assoc($result)['id'];

    // Generate a random password
    $password = substr(md5(uniqid()), 0, 8);
    echo "New password: $password";

    // Update the user's password in the database
    $query = "UPDATE users SET password = '$password' WHERE id = '$user_id'";
    mysqli_query($conn, $query);

    // Send a confirmation email to the user
    sendConfirmationEmail($email, $password);
  } else {
    echo "Email not found";
  }
} else {
  ?>
  <h1>Forgot Password</h1>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Reset Password">
  </form>
  <?php
}

// Function to send a confirmation email
function sendConfirmationEmail($email, $password) {
  // Set up the email headers and body
  $to = $email;
  $subject = "Your new password";
  $message = "Hello,

Your new password is: $password

Best regards,
[Your Name]";

  // Send the email using PHPMailer or a similar library
  require_once 'PHPMailer/PHPMailerAutoload.php';
  $mail = new PHPMailer;
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->Username = 'your-email@example.com';
  $mail->Password = 'your-password';
  $mail->setFrom('your-email@example.com', '[Your Name]');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $message;
  if (!$mail->send()) {
    echo "Error sending email: " . $mail->ErrorInfo;
  } else {
    echo "Email sent successfully";
  }
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function resetPassword() {
    global $conn;

    // Retrieve data from request
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Check if username and email are set
    if (empty($username) || empty($email)) {
        echo "Error: Username and Email must be filled in.";
        return false;
    }

    // Query to retrieve user data
    $query = "SELECT * FROM users WHERE username='" . $username . "' AND email='" . $email . "'";
    $result = $conn->query($query);

    if ($result->num_rows == 0) {
        echo "Error: Username or Email not found.";
        return false;
    }

    // Retrieve user data
    while ($row = $result->fetch_assoc()) {
        $user_data = $row;

        // Generate a reset token
        $reset_token = bin2hex(random_bytes(32));
        $reset_expires = time() + (30 * 60); // expires in 30 minutes

        // Update user data with new reset token and expiration time
        $query = "UPDATE users SET reset_token='" . $reset_token . "', reset_expires='" . $reset_expires . "' WHERE username='" . $username . "'";
        $conn->query($query);

        // Send email to user with link to reset password
        sendEmail($user_data, $reset_token);
    }
}

function sendEmail($data, $reset_token) {
    // Email configuration (use PHPMailer or similar library)
    $mail = new PHPMailer(true);

    try {
        // Email settings
        $mail->CharSet = 'UTF-8';
        $mail->isHTML();
        $mail->addAddress($data['email']);
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->Subject = "Reset Password";

        // Email body (replace with your own template)
        $body = "
            <h1>Password Reset</h1>
            <p>To reset your password, click on this link:</p>
            <a href='http://your-site.com/reset_password.php?reset_token=" . $reset_token . "'>Reset Password</a>
        ";

        // Send email
        $mail->msgHTML($body);
        $mail->send();
    } catch (Exception $e) {
        echo "Error: Email not sent. " . $mail->ErrorInfo;
    }
}

if (isset($_POST['reset_password'])) {
    resetPassword();
}
?>

<form action="" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username"><br><br>
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <button type="submit" name="reset_password">Reset Password</button>
</form>

<?php
$conn->close();
?>


http://your-site.com/reset_password.php?reset_token=generated_reset_token


<?php
// Database configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Mail configuration (for email verification)
define('MAIL_SERVER', 'your_mail_server');
define('MAIL_PORT', 587);
define('MAIL_FROM_ADDRESS', 'your_email@gmail.com');
define('MAIL_FROM_NAME', 'Your Name');
?>


<?php

// Require configuration file
require_once 'config.php';

// Validate email input (for demonstration purposes)
$email = $_POST['email'];

if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
}

// Attempt to retrieve user data from database using provided email
$userData = db::get_user_by_email($email);

if (!$userData) {
    echo 'No account associated with this email';
    exit;
}

// Generate a random password and hash it for storage
$password = str_random(8);
$hashedPassword = hash('sha256', $password);

// Update user data in the database
db::update_user_password($email, $hashedPassword);

// Prepare email content for verification
$emailContent = "Your new password is: $password";

// Send an email to the user with a link to verify their account (simplified)
$mail = mail(MAIL_FROM_ADDRESS, 'Account Verification', $emailContent, MAIL_PORT);

if ($mail) {
    echo 'Email sent successfully';
} else {
    echo 'Failed to send email';
}

?>


class db {
    // Function to retrieve a user by their email address
    public static function get_user_by_email($email) {
        $query = "SELECT * FROM users WHERE email = :email";
        $stmt = self::prepare($query);
        $stmt->bindParam(':email', $email);
        return self::fetch($stmt);
    }

    // Function to update a user's password
    public static function update_user_password($email, $password) {
        $query = "UPDATE users SET password = :password WHERE email = :email";
        $stmt = self::prepare($query);
        $stmt->bindParam(':password', $password);
        $stmt->bindParam(':email', $email);
        return self::execute($stmt);
    }

    // Helper function to prepare a query
    private static function prepare($query) {
        try {
            return db::conn()->prepare($query);
        } catch (PDOException $e) {
            echo 'Error preparing query';
            exit;
        }
    }

    // Helper function to fetch results from the database
    private static function fetch($stmt) {
        try {
            $stmt->execute();
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo 'Error fetching results';
            exit;
        }
    }

    // Helper function to execute a query and return affected rows
    private static function execute($stmt) {
        try {
            return $stmt->execute();
        } catch (PDOException $e) {
            echo 'Error executing query';
            exit;
        }
    }

    // Database connection helper
    private static function conn() {
        try {
            return new PDO('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USERNAME, DB_PASSWORD);
        } catch (PDOException $e) {
            echo 'Connection failed';
            exit;
        }
    }
}


<?php

// Connect to the database
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to check if user exists
function isUserExist($email) {
  global $conn;
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    return true;
  } else {
    return false;
  }
}

// Function to generate new password
function newPassword() {
  $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < 10; $i++) {
    $password .= substr($alphabet, rand(0, strlen($alphabet) - 1), 1);
  }
  return $password;
}

// Function to reset password
function forgotPassword($email) {
  global $conn;

  // Check if user exists
  if (isUserExist($email)) {
    // Generate new password
    $newPass = newPassword();

    // Update the database with the new password
    $sql = "UPDATE users SET password = '$newPass' WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result) {
      echo "Your new password is: $newPass";
      return true;
    } else {
      echo "Error updating password.";
      return false;
    }
  } else {
    echo "User does not exist.";
    return false;
  }
}

// Check for post request
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the email from the form
  $email = $_POST['email'];

  // Reset password
  if (forgotPassword($email)) {
    echo "New password sent to your email.";
  } else {
    echo "Error resetting password.";
  }
}

?>


CREATE TABLE users (
  id INT PRIMARY KEY AUTO_INCREMENT,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  reset_token VARCHAR(255),
  reset_token_expires TIMESTAMP
);


<?php

// Set up database connection
$conn = mysqli_connect('localhost', 'username', 'password', 'database');

// Check connection
if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

// Define function to send reset token via email
function send_reset_token($email, $token) {
  // Get user's name from database (optional)
  $query = "SELECT name FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if ($result && mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
      $name = $row['name'];
    }
  }

  // Send email with reset token
  $subject = "Reset Password";
  $body = "
    Dear $name,

    Your password reset token is: $token

    Please visit our website to reset your password.

    Best regards,
    [Your Name]
  ";

  mail($email, $subject, $body);
}

// Define function to handle forgot password request
function forgot_password() {
  // Get user input (email)
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if ($result && mysqli_num_rows($result) > 0) {
    // Get user's ID from database
    while ($row = mysqli_fetch_assoc($result)) {
      $user_id = $row['id'];
    }

    // Generate random reset token and store it in database
    $token = bin2hex(random_bytes(32));
    $query = "UPDATE users SET reset_token = '$token', reset_token_expires = NOW() + INTERVAL 30 MINUTE WHERE id = '$user_id'";
    mysqli_query($conn, $query);

    // Send email with reset token
    send_reset_token($email, $token);
  } else {
    echo 'Email not found';
  }
}

// Handle form submission (POST)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  forgot_password();
}

?>


<?php

// Configuration
require 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user input
    $email = trim(filter_var($_POST['email'], FILTER_SANITIZE_EMAIL));

    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Check if user exists
    if ($stmt->rowCount() === 1) {
        // Get user data
        $user_data = $stmt->fetch();

        // Generate reset token and hash it
        $reset_token = bin2hex(random_bytes(32));
        $hashed_reset_token = password_hash($reset_token, PASSWORD_DEFAULT);

        // Update user data with reset token
        $query = "UPDATE users SET reset_token = :hashed_reset_token WHERE id = :id";
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':id', $user_data['id']);
        $stmt->bindParam(':hashed_reset_token', $hashed_reset_token);
        $stmt->execute();

        // Send password reset email
        send_password_reset_email($email, $reset_token);

        echo "Password reset link sent to your email.";
    } else {
        echo "No account found with that email.";
    }
}

// Function to send password reset email
function send_password_reset_email($email, $reset_token) {
    // Email configuration (change these values)
    $from = 'your-email@gmail.com';
    $to = $email;
    $subject = 'Password Reset Request';

    // Create email body
    $message = "
        <p>Dear User,</p>
        <p>You are receiving this email because we received a password reset request for your account.</p>
        <p>To reset your password, please click on the following link:</p>
        <p><a href='https://your-website.com/reset-password?token=$reset_token'>$reset_token</a></p>
    ";

    // Send email
    $headers = 'From: ' . $from;
    mail($to, $subject, $message, $headers);

    echo "Email sent.";
}

?>


<?php

// Configuration
require 'config.php';

// Check if token is valid
if (isset($_GET['token'])) {
    // Get user input
    $email = trim(filter_var($_POST['email'], FILTER_SANITIZE_EMAIL));
    $new_password = trim(filter_var($_POST['new_password'], FILTER_SANITIZE_STRING));

    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE email = :email AND reset_token = :reset_token";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':reset_token', $_GET['token']);
    $stmt->execute();

    // Check if user exists
    if ($stmt->rowCount() === 1) {
        // Get user data
        $user_data = $stmt->fetch();

        // Update password and reset token
        $query = "UPDATE users SET password_hash = :password_hash, reset_token = NULL WHERE id = :id";
        $stmt = $pdo->prepare($query);
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $stmt->bindParam(':id', $user_data['id']);
        $stmt->bindParam(':password_hash', $hashed_password);
        $stmt->execute();

        echo "Password updated successfully.";
    } else {
        echo "Invalid token or email.";
    }
}

// Display password reset form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Email Address">
    <input type="password" name="new_password" placeholder="New Password">
    <button type="submit">Reset Password</button>
</form>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');
?>


<?php

// Configuration
define('SITE_URL', 'https://example.com');
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Database connection
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function send_reset_email($email) {
  // Generate a reset link with a token
  $token = bin2hex(random_bytes(16));
  $reset_link = SITE_URL . '/reset_password.php?token=' . $token;

  // Send email using your preferred method (e.g. PHPMailer)
  $subject = 'Reset Password';
  $body = "Click this link to reset your password: $reset_link";
  mail($email, $subject, $body);

  return $token;
}

function check_reset_token($token) {
  // Query the database for a user with the matching token
  $sql = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = $conn->query($sql);
  if ($result->num_rows > 0) {
    return true; // Token is valid
  } else {
    return false; // Token is invalid or doesn't exist
  }
}

function reset_password($email, $new_password) {
  // Hash the new password
  $password_hash = password_hash($new_password, PASSWORD_DEFAULT);

  // Update the user's record in the database
  $sql = "UPDATE users SET password_hash = '$password_hash' WHERE email = '$email'";
  if ($conn->query($sql)) {
    return true; // Password updated successfully
  } else {
    return false; // Error updating password
  }
}

// Forgot password form submission handler
if (isset($_POST['submit'])) {
  $email = $_POST['email'];
  $reset_token = send_reset_email($email);

  if ($reset_token) {
    echo "Email sent with reset link.";
  } else {
    echo "Error sending email.";
  }
}

// Reset password form submission handler
if (isset($_GET['token'])) {
  $token = $_GET['token'];
  if (check_reset_token($token)) {
    // Display the reset password form
    ?>
    <form action="" method="post">
      <input type="password" name="new_password" placeholder="New Password">
      <button type="submit">Reset Password</button>
      <input type="hidden" name="email" value="<?php echo $_SESSION['email']; ?>">
    </form>
    <?php
  } else {
    // Token is invalid or doesn't exist
    echo "Invalid token.";
  }
}

// Reset password form submission handler (continued)
if (isset($_POST['submit'])) {
  $new_password = $_POST['new_password'];
  if (reset_password($_SESSION['email'], $new_password)) {
    echo "Password updated successfully!";
  } else {
    echo "Error updating password.";
  }
}

?>


<?php

// Include your database connection file here
require_once 'db.php';

function generateRandomToken() {
    return bin2hex(random_bytes(32));
}

function hashPassword($password) {
    // For demonstration purposes, we're using the simplest hashing algorithm.
    // In a real-world scenario, consider using `password_hash` for security and BCrypt.
    return crypt($password);
}

function sendResetEmail($toEmail, $resetToken) {
    $subject = "Reset Your Password";
    $message = "To reset your password, click on the following link: http://yourapp.com/reset_password?token=$resetToken";

    try {
        mail($toEmail, $subject, $message);
    } catch (Exception $e) {
        echo "Error sending email: " . $e->getMessage() . "
";
    }
}

function resetPasswordForm() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Handle the password reset
        $username = $_POST['username'];
        $password = $_POST['password'];

        try {
            $db = new PDO('mysql:host=localhost;dbname=yourdatabase', 'youruser', 'yourpass');

            $stmt = $db->prepare("SELECT * FROM users WHERE username = :username");
            $stmt->bindParam(':username', $username);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                $row = $stmt->fetch();
                if (!empty($row['reset_token'])) {
                    // Token already exists, do not allow reset
                    echo "Password reset is in progress.";
                    return;
                }

                $token = generateRandomToken();

                // Store the token and set it to expire after an hour.
                $db->beginTransaction();

                try {
                    $db->exec("UPDATE users SET reset_token = '$token', reset_token_expires = NOW() + INTERVAL 1 HOUR WHERE username = '$username'");

                    // Send email with token
                    sendResetEmail($row['email'], $token);

                    $db->commit();
                    echo "A password reset link has been sent to your email.";
                } catch (Exception $e) {
                    $db->rollBack();
                    echo "Error updating database: " . $e->getMessage() . "
";
                }
            } else {
                // Username not found
                echo "Username not found.";
            }

            $db = null;
        } catch (PDOException $e) {
            echo "Error connecting to the database: " . $e->getMessage() . "
";
        }
    }
}

// For demonstration, let's also include the password reset page.
function passwordResetPage() {
    if (!empty($_GET['token'])) {
        $resetToken = $_GET['token'];
        try {
            $db = new PDO('mysql:host=localhost;dbname=yourdatabase', 'youruser', 'yourpass');

            // Update user with new password and delete the reset token
            $db->beginTransaction();

            try {
                $db->exec("UPDATE users SET password_hash = '" . hashPassword($_POST['password']) . "', reset_token = '' WHERE reset_token = '$resetToken'");

                $db->commit();
                echo "Your password has been updated.";
            } catch (Exception $e) {
                $db->rollBack();
                echo "Error updating database: " . $e->getMessage() . "
";
            }

            $db = null;
        } catch (PDOException $e) {
            echo "Error connecting to the database: " . $e->getMessage() . "
";
        }
    } else {
        // Show form
        ?>
        <form action="" method="post">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username"><br>
            <button type="submit" name="forgot_password_submit">Request Reset</button>
        </form>

        <?php
    }
}

// Call functions to handle the forgot password and reset password process.
resetPasswordForm();
passwordResetPage();

?>


<?php

// Database Connection Script:
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgot_password($email) {
    global $conn;

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "Email not found.";
        return;
    }

    // Generate a random token for password reset
    $token = bin2hex(random_bytes(16));
    // Store the token in the database with the user's id
    $sql = "UPDATE users SET token = '$token' WHERE email = '$email'";
    $conn->query($sql);

    // Send an email to the user with a link to reset password
    send_reset_password_email($email, $token);
}

function send_reset_password_email($email, $token) {
    $to      = $email;
    $subject = 'Reset Your Password';
    $message  = 'Click on this link to reset your password: <a href="http://yourdomain.com/reset-password.php?token=' . $token . '">Reset Password</a>';
    $headers = 'From: your email address' . "\r
" .
        'Reply-To: your email address' . "\r
" .
        'X-Mailer: PHP/' . phpversion();
    mail($to, $subject, $message, $headers);
}

// If the form has been submitted
if (isset($_POST['forgot-password'])) {
    // Get user input
    $email = $_POST['email'];

    // Call the forgot password function
    forgot_password($email);

    echo "An email with a link to reset your password has been sent.";
} else {
?>

<!-- Forgot Password Form -->
<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Forgot Password" name="forgot-password">
</form>

<?php
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'mydb';
$username = 'root';
$password = '';

// Create a database connection
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

?>


<?php

require_once 'database.php';

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get the user's email address from the form data
    $email = $_POST['email'];

    // Check if the email address is valid
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {

        // Query the database to retrieve the user's password hash and reset token
        $stmt = $conn->prepare("SELECT password_hash, reset_token FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        // Check if a user with the given email address exists
        if ($stmt->rowCount() > 0) {

            // Retrieve the user's data from the database
            $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

            // Generate a new password reset token
            $new_token = bin2hex(random_bytes(32));

            // Update the user's reset token in the database
            $stmt = $conn->prepare("UPDATE users SET reset_token = :token WHERE email = :email");
            $stmt->bindParam(':token', $new_token);
            $stmt->bindParam(':email', $email);
            $stmt->execute();

            // Send an email to the user with a password reset link
            send_password_reset_email($user_data['email'], $new_token);

            // Display a success message to the user
            echo '<p>A password reset email has been sent to your inbox.</p>';

        } else {

            // Display an error message if no user is found
            echo '<p>No user with that email address exists.</p>';

        }

    } else {

        // Display an error message if the email address is invalid
        echo '<p>Please enter a valid email address.</p>';

    }

} else {

    // Display the password reset form to the user
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>

        <button type="submit">Send Reset Link</button>
    </form>
    <?php

}

// Function to send a password reset email
function send_password_reset_email($email, $token) {
    // Send an email with a password reset link using PHP's mail() function or a library like SwiftMailer
}


<?php

require_once 'database.php';

// Get the user's data from the database
$email = $_POST['email'];
$token = $_POST['token'];

// Check if the token is valid and has not expired
$stmt = $conn->prepare("SELECT reset_token, password_hash FROM users WHERE email = :email");
$stmt->bindParam(':email', $email);
$stmt->execute();
$user_data = $stmt->fetch(PDO::FETCH_ASSOC);

if ($user_data['reset_token'] == $_POST['token']) {

    // Display a form to enter the new password
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password" required>

        <button type="submit">Reset Password</button>
    </form>
    <?php

} else {

    // Display an error message if the token is invalid or has expired
    echo '<p>An error occurred while processing your request.</p>';

}

// Check if the form has been submitted to update the password
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get the new password from the form data
    $password = $_POST['password'];

    // Update the user's password hash in the database
    $stmt = $conn->prepare("UPDATE users SET password_hash = :hash WHERE email = :email");
    $stmt->bindParam(':hash', password_hash($password, PASSWORD_DEFAULT));
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Delete the reset token from the database
    $stmt = $conn->prepare("UPDATE users SET reset_token = NULL WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Display a success message to the user
    echo '<p>Your password has been successfully updated.</p>';

}

?>


<?php
// Configuration variables
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email) {
    // Generate a random token for the user's account
    $token = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 32);

    // Update the user's password in the database
    $sql = "UPDATE users SET password_token = '$token' WHERE email = '$email'";
    if ($conn->query($sql) === TRUE) {
        // Send a reset email to the user with their token and instructions
        $to = $email;
        $subject = 'Reset Your Password';
        $message = "
            Dear User,

            You are receiving this email because we received a request from your account to reset your password. 

            To complete the process, please click on the following link: 
            <a href='http://your_website.com/reset_password.php?token=$token'>Reset Password</a>

            If you did not initiate this request, you can ignore this email.

            Best regards,
            Your Website Team";

        // Send the email using your preferred method (e.g. PHPMailer, SwiftMailer)
        mail($to, $subject, $message);
    } else {
        echo "Error updating user password: " . $conn->error;
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the email from the form
    $email = $_POST['email'];

    // Check if the email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    if ($result->num_rows > 0) {
        send_password_reset_email($email);
    } else {
        echo "Email not found.";
    }
}

// Close the database connection
$conn->close();
?>


<?php
// Configuration variables
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the token from the URL parameter
$token = $_GET['token'];

// Check if the token is valid and associated with an existing user account
$sql = "SELECT * FROM users WHERE password_token = '$token'";
$result = $conn->query($sql);
if ($result->num_rows > 0) {
    // Get the user's details from the database
    $user = $result->fetch_assoc();

    // Display a form for the user to enter their new password
    ?>
    <form action="" method="post">
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password"><br><br>
        <label for="confirm_password">Confirm New Password:</label>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>

    <?php
} else {
    echo "Invalid token.";
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the new password from the form
    $new_password = $_POST['password'];
    $confirm_new_password = $_POST['confirm_password'];

    // Check if the passwords match and update the user's account in the database
    if ($new_password === $confirm_new_password) {
        $sql = "UPDATE users SET password = '$new_password', password_token = '' WHERE email = '$user[email]'";
        if ($conn->query($sql) === TRUE) {
            echo "Password updated successfully!";
        } else {
            echo "Error updating user password: " . $conn->error;
        }
    } else {
        echo "Passwords do not match.";
    }
}

// Close the database connection
$conn->close();
?>


<?php
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>

<h1>Forgot Password?</h1>

<form action="password_reset.php" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Send Password Reset Link">
</form>

</body>
</html>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if email exists in database
$email = $_POST['email'];
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user ID from result
    $user_id = $result->fetch_assoc()['id'];

    // Generate a reset password token (e.g. random string of characters)
    $token = bin2hex(random_bytes(32));

    // Insert token into database (optional: you can use a separate table for tokens)
    $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
    $conn->query($query);

    // Send email with reset link
    $subject = "Reset Password Link";
    $body = "
        <p>Hello $email,</p>
        <p>Click on the following link to reset your password:</p>
        <a href='http://your-website.com/reset-password.php?token=$token'>Reset Password</a>
    ";
    mail($email, $subject, $body);

    echo "Email sent with reset link. Please check your email and click on the link to reset your password.";
} else {
    echo "Email not found in database.";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token exists in database
$token = $_GET['token'];
$query = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user ID from result
    $user_id = $result->fetch_assoc()['id'];

    // Prompt user to enter new password
    echo "
        <form action='reset_password_submit.php' method='post'>
            <label for='new_password'>New Password:</label>
            <input type='password' id='new_password' name='new_password'><br><br>
            <label for='confirm_new_password'>Confirm New Password:</label>
            <input type='password' id='confirm_new_password' name='confirm_new_password'><br><br>
            <button type='submit'>Reset Password</button>
        </form>
    ";

} else {
    echo "Invalid token.";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if user entered valid new password
$new_password = $_POST['new_password'];
$confirm_new_password = $_POST['confirm_new_password'];

if ($new_password == $confirm_new_password) {
    // Hash new password and update it in database
    $query = "UPDATE users SET password = '$new_password' WHERE id = '$_GET[token]'";
    $conn->query($query);

    echo "Password reset successfully!";
} else {
    echo "Passwords do not match.";
}

// Close database connection
$conn->close();

?>


// Configuration file (e.g. config.php)
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connection to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Forgot Password function
function forgotPassword($email) {
  // Query the database for user with matching email address
  $query = "SELECT id FROM users WHERE email = ?";
  $stmt = $mysqli->prepare($query);
  $stmt->bind_param('s', $email);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found, return error message
    return "User not found";
  }

  // Retrieve user ID from result
  $user_id = $result->fetch_assoc()['id'];

  // Generate a new password (for demonstration purposes only)
  // In a real application, you should use a secure password generation function
  $new_password = 'newpassword';

  // Update the user's password in the database
  $query = "UPDATE users SET password_hash = ? WHERE id = ?";
  $stmt = $mysqli->prepare($query);
  $stmt->bind_param('ss', $new_password, $user_id);
  $stmt->execute();

  // Send email to user with new password (not shown in this example)

  return true;
}

// Example usage:
$email = 'example@example.com';
$result = forgotPassword($email);

if ($result === true) {
  echo "New password has been sent to your email.";
} else {
  echo $result;
}


function forgot_password($email) {
  // Get the user's ID based on their email
  $user = get_user_by_email($email);

  if ($user !== false) {
    // Generate a new password and store it in a session variable for later use
    $new_password = generate_new_password();
    $_SESSION['new_password'] = $new_password;

    // Update the user's password in the database
    update_user_password($user['id'], $new_password);

    // Send an email to the user with their new password
    send_email($email, 'Your new password is: ' . $new_password);
  } else {
    return false;
  }
}


function get_user_by_email($email) {
  // Query the database to get the user's ID based on their email
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if ($result !== false && $row = mysqli_fetch_assoc($result)) {
    return $row;
  } else {
    return false;
  }
}


function update_user_password($user_id, $new_password) {
  // Update the user's password in the database
  $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
  mysqli_query($conn, $query);
}


function generate_new_password() {
  // Generate a random password of length 10
  $length = 10;
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < $length; $i++) {
    $password .= substr($characters, rand(0, strlen($characters) - 1), 1);
  }
  return $password;
}


function send_email($email, $message) {
  // Send an email to the user using a mail library or a third-party service like Mandrill
  $subject = 'Your new password';
  $body = 'Dear user,
    Your new password is: ' . $message;
  $headers = "From: your-email@example.com\r
";
  $headers .= "Content-type: text/html\r
";

  mail($email, $subject, $body, $headers);
}


forgot_password('example@example.com');


<?php

// Configuration
$host = 'localhost';
$dbName = 'database_name';
$user = 'database_user';
$password = 'database_password';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Send email using your preferred method (e.g. SMTP)
    $to = $email;
    $subject = 'Password Reset';
    $body = 'Click here to reset your password: <a href="' . $token . '">Reset Password</a>';
    mail($to, $subject, $body);
}

// Function to check if user exists
function checkUserExists($email) {
    global $conn;
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);
    return $result->num_rows > 0;
}

// Forgot password function
if (isset($_POST['forgot_password'])) {
    // Get user input
    $email = $_POST['email'];
    
    // Check if user exists
    if (checkUserExists($email)) {
        // Generate token for password reset
        $token = bin2hex(random_bytes(32));
        
        // Update user data with new token
        $query = "UPDATE users SET token = '$token' WHERE email = '$email'";
        $conn->query($query);
        
        // Send password reset email
        sendPasswordResetEmail($email, 'http://yourdomain.com/reset-password.php?token=' . $token);
    } else {
        echo 'User not found.';
    }
}

?>


<?php

// Configuration
$host = 'localhost';
$dbName = 'database_name';
$user = 'database_user';
$password = 'database_password';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL
$token = $_GET['token'];

// Update user password
$query = "UPDATE users SET password = 'new_password' WHERE token = '$token'";
$conn->query($query);

echo 'Password updated successfully.';

?>


<?php

// Define the database connection parameters
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Create a connection to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check if the connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define the function to send the password reset email
function send_reset_email($email) {
    // Generate a random password and store it in a session variable
    $password = rand(100000, 999999); // Generate a 6-digit random number
    $_SESSION['password'] = $password;

    // SQL query to update the user's password
    $sql = "UPDATE users SET password = '$password' WHERE email = '$email'";
    if ($conn->query($sql) === TRUE) {
        // Send an email with the new password and a link to reset it
        $to = $email;
        $subject = 'Reset your password';
        $body = '
            Dear user,
            
            Your temporary password is: '.$password.'
            
            Click on this link to reset your password: <a href="reset_password.php?email='.$email.'&token='.uniqid().'">Reset Password</a>
            ';
        mail($to, $subject, $body);

        echo 'Email sent successfully!';
    } else {
        echo 'Error updating user data: ' . $conn->error;
    }
}

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the email address from the form input
    $email = $_POST['email'];

    // Validate the email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        return;
    }

    // Call the function to send the password reset email
    send_reset_email($email);
}

// Close the database connection
$conn->close();

?>


<?php

// Define the database connection parameters (same as above)

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the email address and token from the URL query string
    $email = $_GET['email'];
    $token = $_GET['token'];

    // SQL query to update the user's password (using the session variable)
    $sql = "UPDATE users SET password = '".$_SESSION['password']."' WHERE email = '$email' AND token = '$token'";
    if ($conn->query($sql) === TRUE) {
        echo 'Password reset successfully!';
    } else {
        echo 'Error updating user data: ' . $conn->error;
    }
}

// Close the database connection
$conn->close();

?>


<?php

// Check if the user has submitted the form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get the username and email from the form data
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Query the database to get the user's info
  require_once 'db.php';
  $sql = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($conn, $sql);
  if (mysqli_num_rows($result) == 1) {
    // If the user exists, generate a new password and send it to their email
    $row = mysqli_fetch_assoc($result);
    $new_password = bin2hex(random_bytes(16));
    $sql = "UPDATE users SET password = '$new_password' WHERE id = '$row[id]'";
    mysqli_query($conn, $sql);

    // Send the new password to the user's email
    $to = $email;
    $subject = 'New Password';
    $message = "Your new password is: $new_password";
    mail($to, $subject, $message);
    echo "A new password has been sent to your email.";
  } else {
    echo "User not found.";
  }
}

?>


<?php

// Connect to the database
$conn = mysqli_connect('localhost', 'username', 'password', 'database');

// Check connection
if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

?>


<?php
require_once 'config.php'; // database connection settings

// Check if the form has been submitted
if (isset($_POST['submit'])) {
  // Get the email address from the form data
  $email = $_POST['email'];

  // Validate the email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }

  // Query the database to get the user's ID and password
  $sql = "SELECT id, password FROM users WHERE email = :email";
  $stmt = $pdo->prepare($sql);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $result = $stmt->fetch();

  // If the email address is not found in the database
  if (!$result) {
    echo 'Email address not found';
    exit;
  }

  // Generate a new password and store it in the session
  $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 8);
  $_SESSION['new_password'] = $new_password;

  // Send an email with the new password to the user's email address
  send_email($email, $new_password);

  echo 'A new password has been sent to your email address';
} else {
  // Display the forgot password form
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email Address:</label>
    <input type="email" id="email" name="email" required>
    <button type="submit" name="submit">Submit</button>
  </form>
  <?php
}
?>

function send_email($email, $password) {
  // Send an email to the user's email address with the new password
  $subject = 'New Password';
  $body = 'Your new password is: ' . $password;
  mail($email, $subject, $body);
}

?>


<?php
// Database connection settings
$pdo = new PDO('mysql:host=localhost;dbname=database_name', 'username', 'password');
?>


<?php
// Connect to your database here...
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Redirect user to forgot password page.
    header('Location: forget_password.php?email=' . $email);
    exit;
}
?>


<?php
require_once 'db.php'; // Include your database connection settings here

if (isset($_GET['email'])) {
    $email = $_GET['email'];
    
    // Query to find the user's id based on their email.
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
            
            // Generate a unique token.
            $token = uniqid();
            
            // Insert the token into the password reset table with user id and expiration date (1 hour from now).
            $query = "INSERT INTO password_reset SET user_id = '$user_id', token = '$token', expires_at = DATE_ADD(NOW(), INTERVAL 1 HOUR)";
            mysqli_query($conn, $query);
            
            // Send an email with the reset link.
            sendPasswordResetEmail($email, $token);
        }
    } else {
        echo "User not found.";
    }
} else {
    echo "No user email provided.";
}

// Function to send password reset email.
function sendPasswordResetEmail($to_email, $token) {
    $subject = 'Reset Your Password';
    $body = '<p>Please click on the link below to reset your password:</p>
              <p><a href="reset_password.php?email=' . $to_email . '&token=' . $token . '">Reset Password</a></p>';
    
    $headers = "From: your-email@example.com" . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    
    mail($to_email, $subject, $body, $headers);
}
?>


<?php
require_once 'db.php'; // Include your database connection settings here

if (isset($_GET['email']) && isset($_GET['token'])) {
    $email = $_GET['email'];
    $token = $_GET['token'];
    
    // Query to find the user's id based on their email and token.
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
            
            // Query to find the token and user id in password reset table.
            $query = "SELECT * FROM password_reset WHERE token = '$token' AND user_id = '$user_id'";
            $reset_result = mysqli_query($conn, $query);
            
            if ($reset_result->num_rows > 0) {
                while ($reset_row = $reset_result->fetch_assoc()) {
                    // If the reset token is valid and hasn't expired yet, proceed with resetting the password.
                    if (time() <= strtotime($reset_row['expires_at'])) {
                        $new_password = $_POST['new_password'];
                        
                        // Update the user's password in the database.
                        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
                        mysqli_query($conn, $query);
                        
                        echo "Password updated successfully.";
                    } else {
                        echo "Your reset link has expired. Please request a new one.";
                    }
                }
            } else {
                echo "Invalid token or user ID.";
            }
        }
    } else {
        echo "User not found.";
    }
} else {
    echo "No email or token provided.";
}

// If the form is submitted, proceed with resetting the password.
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = $_POST['new_password'];
}
?>


<?php

require_once 'db_config.php'; // database connection settings
require_once 'functions.php'; // password hashing and checking functions

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    try {
        // Get user data from database
        $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
        $stmt = $pdo->prepare($query);
        $stmt->execute();
        $user_data = $stmt->fetch();

        if ($user_data) {
            // Generate a temporary password reset link
            $link = generate_reset_link($user_data['id']);

            // Send an email with the link
            send_email($email, 'Reset Your Password', $link);

            echo "Email sent successfully. Check your inbox for a link to reset your password.";
        } else {
            echo "Invalid username or email.";
        }
    } catch (PDOException $e) {
        echo "An error occurred: " . $e->getMessage();
    }

} else {
    // Display the form
?>

<form action="" method="post">
    <label>Username:</label>
    <input type="text" name="username"><br><br>
    <label>Email:</label>
    <input type="email" name="email"><br><br>
    <button type="submit">Send Reset Link</button>
</form>

<?php
}

function generate_reset_link($user_id) {
    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Store the token in the database
    $query = "UPDATE users SET reset_token = '$token' WHERE id = '$user_id'";
    $stmt = $pdo->prepare($query);
    $stmt->execute();

    // Return a link to the password reset page with the token as a parameter
    return 'http://example.com/reset_password.php?token=' . urlencode($token);
}

function send_email($email, $subject, $link) {
    // Send an email using PHP's mail function or an external library like SwiftMailer

    $headers = "From: example@example.com\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    $body = "<html><body>
                <h1>$subject</h1>
                Click the link below to reset your password:
                <a href=\"$link\">Reset Password</a>
              </body></html>";

    mail($email, $subject, $body, $headers);
}


<?php

// Configuration
$database_host = 'your_database_host';
$database_username = 'your_database_username';
$database_password = 'your_database_password';
$database_name = 'your_database_name';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if request method is POST
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input
    $username_or_email = $_POST['username_or_email'];
    $password_reset_token = md5(time() . rand());

    // Query database to retrieve user ID and email
    $query = "SELECT id, email FROM users WHERE username = '$username_or_email' OR email = '$username_or_email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Store password reset token in database
        $update_query = "UPDATE users SET password_reset_token = '$password_reset_token' WHERE username = '$username_or_email' OR email = '$username_or_email'";
        $conn->query($update_query);

        // Send password reset email (insert your email sending code here)
        send_password_reset_email($username_or_email, $password_reset_token);

    } else {
        echo "No user found with that username or email.";
    }
} else {
    echo "Invalid request method. Please use POST.";
}

// Close database connection
$conn->close();

function send_password_reset_email($username_or_email, $password_reset_token) {
    // Your email sending code here (e.g. using PHPMailer)
    // For example:
    $mail = new PHPMailer(true);
    try {
        // Send email with password reset token
        $body = "Click this link to reset your password: <a href='http://your-domain.com/reset-password.php?token=$password_reset_token'>$password_reset_token</a>";
        $mail->setFrom('your-email@example.com', 'Your Name');
        $mail->addAddress($username_or_email);
        $mail->Subject = 'Reset Your Password';
        $mail->Body = $body;
        $mail->send();
    } catch (Exception $e) {
        echo "Error sending email: " . $mail->ErrorInfo;
    }
}

?>


<?php

// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connection settings
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

// Function to send reset password link via email
function send_reset_link($email) {
  // Generate random token for password reset
  $token = bin2hex(random_bytes(32));

  // Update user's token in database
  $query = "UPDATE users SET token = '$token' WHERE email = '$email'";
  $conn->exec($query);

  // Send email with reset link
  $subject = 'Reset Password Link';
  $body = '<p>Click the following link to reset your password:</p><a href="' . $_SERVER['REQUEST_SCHEME'] . '://' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>';
  mail($email, $subject, $body);

  return true;
}

// Forgot password form handler
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user input
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);
  if ($result->rowCount() > 0) {
    send_reset_link($email);
    echo 'Reset password link sent to your email.';
  } else {
    echo 'Email not found in our records.';
  }
} ?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="email" name="email" placeholder="Enter your email address" />
  <button type="submit">Send Reset Link</button>
</form>


<?php

// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connection settings
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

// Function to update password
function update_password($token) {
  // Get user's email from token
  $query = "SELECT email FROM users WHERE token = '$token'";
  $result = $conn->query($query);
  if ($result->rowCount() > 0) {
    $email = $result->fetchColumn();

    // Update password (e.g., hash and store new password)
    $new_password = 'your_new_password'; // Replace with user input
    $password_hash = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password_hash = '$password_hash', token = '' WHERE email = '$email'";
    $conn->exec($query);

    return true;
  }

  return false;
}

// Reset password form handler
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user input
  $token = $_POST['token'];
  $new_password = $_POST['password'];

  // Update password
  if (update_password($token)) {
    echo 'Password updated successfully.';
  } else {
    echo 'Invalid token or email not found in our records.';
  }
} ?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>" />
  <label for="password">New Password:</label>
  <input type="password" id="password" name="password" />
  <button type="submit">Reset Password</button>
</form>


function forgot_password($email) {
  // Check if user exists
  $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->execute(array(':email' => $email));
  $user = $stmt->fetch();

  if (!$user) {
    throw new Exception('Email not found');
  }

  // Generate reset token
  $token = bin2hex(random_bytes(32));

  // Update user's reset token and expires timestamp
  $stmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_token_expires = NOW() + INTERVAL 1 HOUR WHERE email = :email");
  $stmt->execute(array(':token' => $token, ':email' => $email));

  // Send password reset email
  send_password_reset_email($user['id'], $token);

  return true;
}


function send_password_reset_email($user_id, $reset_token) {
  $subject = 'Reset your password';
  $body = '<p>To reset your password, click the link below:</p>
          <p><a href="http://example.com/reset-password/'.$user_id.'/'.$reset_token.'">Reset Password</a></p>';
  $headers = array(
    'From' => 'your-email@example.com',
    'Reply-To' => $email
  );

  mail($email, $subject, $body, implode("\r
", $headers));
}


function reset_password() {
  if (isset($_POST['reset_token'])) {
    $user_id = $_POST['reset_token'];
    $token = $_POST['reset_token'];

    // Check if token is valid and has not expired
    $stmt = $conn->prepare("SELECT * FROM users WHERE id = :id AND reset_token = :token AND reset_token_expires > NOW()");
    $stmt->execute(array(':id' => $user_id, ':token' => $token));
    $user = $stmt->fetch();

    if (!$user) {
      throw new Exception('Invalid token or has expired');
    }

    // Update user's password
    $password_hash = hash_password($_POST['new_password']);

    $stmt = $conn->prepare("UPDATE users SET password_hash = :hash WHERE id = :id");
    $stmt->execute(array(':hash' => $password_hash, ':id' => $user_id));

    // Clear user's reset token
    $stmt = $conn->prepare("UPDATE users SET reset_token = NULL WHERE id = :id");
    $stmt->execute(array(':id' => $user_id));
  }
}


function hash_password($password) {
  return password_hash($password, PASSWORD_DEFAULT);
}


function forgot_password($username_or_email) {
    // Connect to database
    $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');

    // Prepare query to select user ID and email from users table
    $stmt = $db->prepare("SELECT id, email FROM users WHERE :username_or_email = :username_or_email OR email = :username_or_email");
    $stmt->bindParam(':username_or_email', $username_or_email);
    $stmt->execute();

    // Fetch user data
    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user_data) {
        // Generate password reset token and store it in the database
        $token = bin2hex(random_bytes(32));
        $query = "UPDATE users SET password_reset_token = :token WHERE id = :id";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':token', $token);
        $stmt->bindParam(':id', $user_data['id']);
        $stmt->execute();

        // Send email to user with reset link
        $subject = "Reset your password";
        $body = "
            <p>Dear {$username_or_email},</p>
            <p>You are receiving this email because we received a request to reset your password. Click the following link to reset your password:</p>
            <p><a href=\"http://example.com/reset_password.php?token={$token}\">Reset Password</a></p>
        ";
        $from_email = 'admin@example.com';
        send_email($username_or_email, $body, $subject, $from_email);

        return true;
    } else {
        // User not found
        return false;
    }
}

// Function to send email using a mail library like PHPMailer or SwiftMailer
function send_email($to_email, $body, $subject, $from_email) {
    // Your email sending code here...
}


<?php
// Connect to database
$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');

// Get token from URL
$token = $_GET['token'];

// Verify token
$stmt = $db->prepare("SELECT id FROM users WHERE password_reset_token = :token");
$stmt->bindParam(':token', $token);
$stmt->execute();
$user_id = $stmt->fetchColumn();

if ($user_id) {
    // Display form to set new password
    echo '<form action="reset_password.php" method="post">';
    echo 'New Password: <input type="password" name="new_password"><br>';
    echo 'Confirm Password: <input type="password" name="confirm_password"><br>';
    echo '<input type="submit" value="Reset Password">';
    echo '</form>';
} else {
    // Token not valid
    echo "Invalid token.";
}
?>

<?php
// Set new password when form submitted
if ($_POST['new_password']) {
    $stmt = $db->prepare("UPDATE users SET password = :password WHERE id = :id");
    $stmt->bindParam(':password', crypt($_POST['new_password']));
    $stmt->bindParam(':id', $_SESSION['user_id']);
    $stmt->execute();

    // Clear password reset token
    $query = "UPDATE users SET password_reset_token = NULL WHERE id = :id";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':id', $_SESSION['user_id']);
    $stmt->execute();
}
?>


function forgot_password($username, $email)
{
    // Validate input data
    if (!$username || !$email) {
        return 'Please enter both username and email';
    }

    // Connect to database
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Query the database for user data
    $stmt = $db->prepare("SELECT * FROM users WHERE username = :username AND email = :email");
    $stmt->bindParam(':username', $username);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() > 0) {
        // Get user data
        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(32));

        // Update the user's token in the database
        $stmt = $db->prepare("UPDATE users SET password_reset_token = :token WHERE id = :id");
        $stmt->bindParam(':token', $token);
        $stmt->bindParam(':id', $user_data['id']);
        $stmt->execute();

        // Send email to user with reset link
        send_password_reset_email($email, $token);

        return 'Email sent to ' . $email;
    } else {
        return 'User not found';
    }
}

function send_password_reset_email($email, $token)
{
    // Email configuration (replace with your own settings)
    $subject = 'Reset Your Password';
    $from = 'your_email@example.com';
    $to = $email;

    // Create email body
    $body = "
        <p>Hello,
        
        You are receiving this email because you requested to reset your password.
        
        To reset your password, please click the following link:
        <a href='http://example.com/reset-password?token=$token'>Reset Password</a>
        
        Best regards,
        Your Website
    ";

    // Send email using PHPMailer or any other library (replace with your own settings)
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom($from, 'Your Website');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $body;
    $mail->send();
}


$username = 'example_user';
$email = 'example@example.com';

echo forgot_password($username, $email);


<?php

// Configuration settings
$secret_key = 'your_secret_key_here';
$db_host = 'your_database_host_here';
$db_username = 'your_database_username_here';
$db_password = 'your_database_password_here';
$db_name = 'your_database_name_here';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get the user's email address from the form submission
    $email = $_POST['email'];

    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Check if the email address exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if (!$result || $result->num_rows === 0) {
        echo 'Email address not found. Please try again.';
    } else {
        // Generate a random password reset token
        $token = bin2hex(random_bytes(32));

        // Update the user's record with the new token
        $update_query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        $conn->query($update_query);

        // Send an email to the user with a reset link
        $to_email = $email;
        $subject = 'Password Reset Link';
        $body = '
            Click on this link to reset your password: <a href="http://your-website.com/reset_password.php?token=' . $token . '">Reset Password</a>
        ';

        $headers = "From: noreply@example.com";
        mail($to_email, $subject, $body, $headers);

        echo 'A password reset link has been sent to your email address.';
    }

    // Close the database connection
    $conn->close();
}

?>

<!-- Form for user to enter their email address -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Email Address">
    <button type="submit">Send Password Reset Link</button>
</form>


<?php

// Configuration settings
$secret_key = 'your_secret_key_here';
$db_host = 'your_database_host_here';
$db_username = 'your_database_username_here';
$db_password = 'your_database_password_here';
$db_name = 'your_database_name_here';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get the password reset token from the query string
    $token = $_GET['token'];

    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Check if the token exists in the database
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = $conn->query($query);

    if (!$result || $result->num_rows === 0) {
        echo 'Invalid password reset link.';
    } else {
        // Get the user's email address from the database
        $user_email = $result->fetch_assoc()['email'];

        // Check if the form has been submitted with new password
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            // Get the new password from the form submission
            $new_password = $_POST['new_password'];
            $confirm_password = $_POST['confirm_password'];

            // Check if the new passwords match
            if ($new_password !== $confirm_password) {
                echo 'Passwords do not match.';
            } else {
                // Update the user's password in the database
                $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$user_email'";
                $conn->query($update_query);

                // Remove the password reset token from the database
                $delete_query = "DELETE FROM users WHERE password_reset_token = '$token'";
                $conn->query($delete_query);

                echo 'Password updated successfully.';
            }
        }

        // Form for user to enter new password
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="password" name="new_password" placeholder="New Password">
            <input type="password" name="confirm_password" placeholder="Confirm New Password">
            <button type="submit">Update Password</button>
        </form>
    <?php
    }
}

?>

<!-- Form for user to enter their email address -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
    <button type="submit">Submit Password Reset Token</button>
</form>


// config.php (database connection settings)
<?php
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myuser';
$password = 'mypassword';

$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
?>

// forgot_password.php
<?php
require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // get user input
    $email = $_POST['email'];

    // check if email address exists in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();

    if ($user) {
        // generate password reset token
        $token = bin2hex(random_bytes(32));

        // update user's record with password reset token
        $stmt = $conn->prepare("UPDATE users SET password_reset_token = ? WHERE email = ?");
        $stmt->execute([$token, $email]);

        // send password reset link via email
        $subject = 'Reset Your Password';
        $body = '<a href="' . $_SERVER['REQUEST_URI'] . '?token=' . $token . '">Click here to reset your password</a>';
        mail($user['email'], $subject, $body);

        echo "Password reset link sent to your email. Please check your inbox.";
    } else {
        echo "Email address not found in our database.";
    }
}
?>

<!-- form -->
<form action="" method="post">
    <label for="email">Enter your email address:</label>
    <input type="email" id="email" name="email">
    <button type="submit">Send Password Reset Link</button>
</form>


// reset_password.php
<?php
require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    // get token from URL parameter
    $token = $_GET['token'];

    // validate token and check if it matches user's record
    $stmt = $conn->prepare("SELECT * FROM users WHERE password_reset_token = ?");
    $stmt->execute([$token]);
    $user = $stmt->fetch();

    if ($user) {
        // create a new form for password reset
        ?>
        <form action="" method="post">
            <label for="new_password">Enter your new password:</label>
            <input type="password" id="new_password" name="new_password">
            <button type="submit">Reset Password</button>
        </form>

        <?php
    } else {
        echo "Invalid token. Please try again.";
    }
}
?>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // get user input (new password)
    $new_password = $_POST['new_password'];

    // update user's record with new password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->execute([$new_password, $user['id']]);

    echo "Password reset successfully!";
}
?>


<?php

// Configuration settings
define('ROOT_DIR', dirname(__FILE__));
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Database connection function
function connect_to_db() {
  $conn = mysqli_connect(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
  if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
  }
  return $conn;
}

// Function to send password reset link
function send_password_reset_link($email, $username) {
  // Send email using mail() function or a library like PHPMailer
  $subject = 'Reset Your Password';
  $body = "Click the following link to reset your password: <a href='http://your-website.com/reset-password.php?token=".md5(uniqid(rand(), true))."'>Reset Password</a>";
  mail($email, $subject, $body);
}

// Handle form submission
if (isset($_POST['submit'])) {
  // Validate user input
  if (!empty($_POST['username']) && !empty($_POST['email'])) {
    $conn = connect_to_db();
    $query = "SELECT * FROM users WHERE email='".$_POST['email']."' AND username='".$_POST['username']."'";
    $result = mysqli_query($conn, $query);
    
    // Check if user exists
    if (mysqli_num_rows($result) > 0) {
      // Get the user's ID and password hash
      $row = mysqli_fetch_assoc($result);
      $user_id = $row['id'];
      $password_hash = $row['password_hash'];
      
      // Generate a random token for the password reset link
      $token = md5(uniqid(rand(), true));
      
      // Update the user's token in the database
      $query = "UPDATE users SET token='".$token."' WHERE id=".$user_id;
      mysqli_query($conn, $query);
      
      // Send the password reset link to the user's email
      send_password_reset_link($_POST['email'], $_POST['username']);
    } else {
      echo 'User not found.';
    }
  } else {
    echo 'Please enter both username and email.';
  }
}

?>

<!-- HTML form for forgot password functionality -->
<form action="<?php echo basename(__FILE__); ?>" method="post">
  <label>Username:</label>
  <input type="text" name="username" />
  <br><br>
  <label>Email:</label>
  <input type="email" name="email" />
  <br><br>
  <input type="submit" name="submit" value="Submit">
</form>

<?php
mysqli_close($conn);
?>


<?php

// Configuration settings
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
}

// Function to check if email exists in database
function check_email_exists($email) {
    global $mysqli;
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);
    return $result->num_rows > 0;
}

// Function to send password reset link via email
function send_password_reset_link($email, $token) {
    global $mysqli;
    // Email settings (e.g., SMTP)
    $to = $email;
    $subject = "Password Reset Link";
    $body = "<p>Click on the following link to reset your password:</p>
            <a href='https://your-website.com/reset_password.php?token=$token'>$token</a>";

    // Send email using PHPMailer or SMTP
}

// Function to handle forgot password request
function forgot_password($email) {
    global $mysqli;
    // Check if email exists in database
    if (check_email_exists($email)) {
        // Generate random token for password reset link
        $token = bin2hex(random_bytes(16));
        // Update user's token in database
        $query = "UPDATE users SET token = '$token' WHERE email = '$email'";
        $mysqli->query($query);

        // Send password reset link via email
        send_password_reset_link($email, $token);
    } else {
        echo "Email does not exist in our records.";
    }
}

// Handle forgot password request
if (isset($_POST['forgot_password'])) {
    $email = trim($_POST['email']);
    forgot_password($email);
} elseif (isset($_GET['token'])) {
    // If token is passed, it means user clicked on the reset link. In this case,
    // you can redirect them to a page where they can enter their new password.
}

?>


<?php

// Define the minimum length of the new password
const MIN_PASSWORD_LENGTH = 8;

// Function to send a reset link to the user's email address
function send_reset_link($email, $name) {
  // Generate a unique code for the user
  $code = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 16);

  // Store the code in the database
  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');
  $query = "INSERT INTO reset_codes (user_id, code) VALUES (:user_id, :code)";
  $stmt = $db->prepare($query);
  $stmt->execute([
    ':user_id' => null,
    ':code' => $code
  ]);

  // Get the user's ID from the database
  $query = "SELECT id FROM users WHERE email = :email";
  $stmt = $db->prepare($query);
  $stmt->execute([':email' => $email]);
  $user_id = $stmt->fetchColumn();

  // Send an email to the user with a reset link
  $subject = 'Reset your password';
  $body = 'Hello, ' . $name . '. Click on this link to set a new password: <a href="' . htmlspecialchars($_SERVER['PHP_SELF']) . '?reset_code=' . $code . '">Set new password</a>';
  mail($email, $subject, $body);
}

// Function to check if the reset code is valid
function is_reset_code_valid($code) {
  // Get the current timestamp
  $now = time();

  // Get the user's ID from the database using the reset code
  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');
  $query = "SELECT u.id FROM users u JOIN reset_codes r ON u.id = r.user_id WHERE r.code = :code AND r.expires_at > :now";
  $stmt = $db->prepare($query);
  $stmt->execute([
    ':code' => $code,
    ':now' => $now
  ]);

  // If the user is found, return their ID
  if ($user_id = $stmt->fetchColumn()) {
    return true;
  }

  // Otherwise, return false
  return false;
}

// Function to set a new password for the user
function set_new_password($user_id, $new_password) {
  // Check if the new password is at least MIN_PASSWORD_LENGTH characters long
  if (strlen($new_password) < MIN_PASSWORD_LENGTH) {
    echo 'Error: New password must be at least ' . MIN_PASSWORD_LENGTH . ' characters long.';
    return false;
  }

  // Hash the new password using a suitable algorithm (e.g. bcrypt)
  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

  // Update the user's password in the database
  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');
  $query = "UPDATE users SET password = :password WHERE id = :user_id";
  $stmt = $db->prepare($query);
  $stmt->execute([
    ':password' => $hashed_password,
    ':user_id' => $user_id
  ]);

  // If the update is successful, return true
  if ($stmt->rowCount() > 0) {
    return true;
  }

  // Otherwise, return false
  return false;
}

// Process the "Forgot Password" form submission
if (isset($_POST['forgot_password'])) {
  $email = $_POST['email'];
  send_reset_link($email, $_POST['name']);

} elseif (isset($_GET['reset_code'])) {
  // Check if the reset code is valid
  $code = $_GET['reset_code'];
  if (is_reset_code_valid($code)) {
    // If it's valid, set a new password for the user
    $new_password = 'newpassword'; // Replace with the new password entered by the user
    if (set_new_password(is_reset_code_valid($code), $new_password)) {
      echo 'Password reset successfully!';
    } else {
      echo 'Error: Unable to update password.';
    }
  } else {
    echo 'Error: Invalid reset code.';
  }

} elseif (isset($_POST['reset_password'])) {
  // Get the user's ID from the database using the reset code
  $code = $_POST['reset_code'];
  if (is_reset_code_valid($code)) {
    $user_id = is_reset_code_valid($code);

    // Set a new password for the user
    $new_password = $_POST['new_password'];

    if (set_new_password($user_id, $new_password)) {
      echo 'Password reset successfully!';
    } else {
      echo 'Error: Unable to update password.';
    }
  } else {
    echo 'Error: Invalid reset code.';
  }

}


// config.php
define('DB_HOST', 'your_host');
define('DB_NAME', 'your_database');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');

// connect to database
function connect() {
  $conn = new PDO("mysql:host=".DB_HOST.";dbname=".DB_NAME, DB_USER, DB_PASSWORD);
  return $conn;
}

// forgot password function
function forgotPassword($email) {
  try {
    // connect to database
    $conn = connect();
    
    // query to get user data
    $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
    $stmt->bindParam(":email", $email);
    $stmt->execute();
    $userData = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($userData) {
      // generate new password
      $newPassword = substr(hash('sha256', uniqid()), 0, 8);
      
      // update user data with new password
      $stmt = $conn->prepare("UPDATE users SET password=:password WHERE id=:id");
      $stmt->bindParam(":password", $newPassword);
      $stmt->bindParam(":id", $userData['id']);
      $stmt->execute();
      
      // send email with new password
      $to = $email;
      $subject = "New Password";
      $message = "Your new password is: $newPassword";
      mail($to, $subject, $message);
      
      return true; // forgot password successful
    } else {
      return false; // user not found
    }
  } catch (PDOException $e) {
    return false; // database error
  }
}


// call forgot password function with email address
$email = "user@example.com";
if (forgotPassword($email)) {
  echo "Email sent with new password.";
} else {
  echo "Error: user not found or database error.";
}


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die('Could not connect: ' . mysqli_error($conn));
}

function sendResetEmail($email, $token) {
    // Email configuration
    $to      = $email;
    $subject = 'Reset your password';
    $message = '<p>Hello, please click the link below to reset your password:</p>
                <a href="' . site_url() . '/reset_password?token=' . $token . '">Reset Password</a>';
    $headers = 'From: your_email@example.com' . "\r
" .
               'Reply-To: no-reply@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $message, $headers);
}

function resetPassword($token) {
    // Check if token exists in database
    $query = "SELECT * FROM users WHERE token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Token exists, retrieve user's data
        $row = mysqli_fetch_assoc($result);
        $username = $row['username'];
        $email = $row['email'];

        // Display reset password form
        echo '<h1>Reset Password</h1>
              <form action="" method="post">
                <input type="password" name="new_password" placeholder="Enter new password">
                <input type="password" name="confirm_password" placeholder="Confirm new password">
                <button type="submit">Change Password</button>
              </form>';

        // Process form submission
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $newPassword = $_POST['new_password'];
            $confirmPassword = $_POST['confirm_password'];

            if ($newPassword === $confirmPassword) {
                // Update user's password
                $query = "UPDATE users SET password = '$newPassword' WHERE token = '$token'";
                mysqli_query($conn, $query);

                echo '<p>Password changed successfully!</p>';
            } else {
                echo '<p>Passwords do not match.</p>';
            }
        }

    } else {
        // Token does not exist
        echo '<p>Invalid token.</p>';
    }
}

// Handle forgot password form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Email exists, retrieve user's data
        $row = mysqli_fetch_assoc($result);
        $username = $row['username'];
        $token = generateToken();

        // Send reset email
        sendResetEmail($email, $token);

        echo '<p>Reset link sent to your email.</p>';
    } else {
        // Email does not exist
        echo '<p>Email not found.</p>';
    }
}

// Close database connection
mysqli_close($conn);
?>

<form action="" method="post">
  <input type="email" name="email" placeholder="Enter your email">
  <button type="submit">Forgot Password</button>
</form>

<?php if (isset($_POST['email'])) { ?>
  <?php include 'reset_password.php'; ?>
<?php } ?>

<?php function generateToken() {
    // Generate a unique token
    return md5(uniqid(mt_rand(), true));
} ?>


<?php

// Handle reset password form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];

    if ($newPassword === $confirmPassword) {
        // Update user's password
        $query = "UPDATE users SET password = '$newPassword' WHERE token = '$token'";
        mysqli_query($conn, $query);

        echo '<p>Password changed successfully!</p>';
    } else {
        echo '<p>Passwords do not match.</p>';
    }
}

?>


<?php

// Configuration variables
$site_name = 'Your Website Name';
$from_email = 'your-email@example.com';

// Validate input
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
  exit('Invalid request method');
}

$email = $_POST['email'];
$password_recovery_token = bin2hex(random_bytes(32));

try {
  // Connect to database
  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');

  // Check if user exists
  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user_data = $stmt->fetch();

  if (!$user_data) {
    throw new Exception('Email not found');
  }

  // Generate password recovery token
  $password_recovery_token = hash('sha256', bin2hex(random_bytes(32)));

  // Update user data with password recovery token
  $stmt = $db->prepare('UPDATE users SET password_recovery_token = :token WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':token', $password_recovery_token);
  $stmt->execute();

  // Send email to user with password recovery link
  $subject = 'Reset Your Password';
  $body = "
    Hello $user_data[name],

    You have requested to reset your password. Click on the following link to complete the process:
    <a href='$site_name/reset_password.php?email=$email&token=$password_recovery_token'>Click here to reset your password</a>

    Best regards,
    Your Website Name
  ";

  $headers = 'From: ' . $from_email;
  mail($email, $subject, $body, $headers);

} catch (Exception $e) {
  echo 'Error: ' . $e->getMessage();
}

?>


<?php

// Configuration variables
$site_name = 'Your Website Name';
$db_name = 'your_database_name';

try {
  // Connect to database
  $db = new PDO('mysql:host=localhost;dbname=' . $db_name, 'your_username', 'your_password');

  // Retrieve token from URL parameters
  $email = $_GET['email'];
  $token = $_GET['token'];

  // Check if user exists and token matches
  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email AND password_recovery_token = :token');
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $user_data = $stmt->fetch();

  if (!$user_data) {
    throw new Exception('Invalid token or email');
  }

  // Prompt user to enter new password
  ?>
  <h1>Reset Password</h1>
  <form action="" method="post">
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password"><br><br>
    <label for="confirm_password">Confirm New Password:</label>
    <input type="password" id="confirm_password" name="confirm_password"><br><br>
    <button type="submit">Reset Password</button>
  </form>

  <?php
} catch (Exception $e) {
  echo 'Error: ' . $e->getMessage();
}

?>


<?php

// Configuration variables
define('DB_HOST', 'your_host');
define('DB_NAME', 'your_database');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Handle form submission (forgot password)
if (isset($_POST['submit'])) {
    // Get the email address from the user
    $email = $_POST['email'];

    // Check if the email exists in the database
    $query = "SELECT id, reset_token FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);

    // If no matching record is found, display an error message
    if (!$result) {
        echo 'Email not found';
        exit();
    }

    // Generate a new random token for the user
    $reset_token = bin2hex(random_bytes(32));
    $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
    $mysqli->query($update_query);

    // Send an email with the reset link to the user's email address
    $to = $email;
    $subject = 'Reset Password';
    $message = '<a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $reset_token . '">Click here to reset your password</a>';
    mail($to, $subject, $message);

    echo 'Email sent with reset link. Please check your email.';
}

// Close the database connection
$mysqli->close();

?>


<?php

// Configuration variables
define('DB_HOST', 'your_host');
define('DB_NAME', 'your_database');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Get the reset token from the URL parameter
$token = $_GET['token'];

// Check if a matching record is found in the database
$query = "SELECT id, email FROM users WHERE reset_token = '$token'";
$result = $mysqli->query($query);

// If no matching record is found, display an error message
if (!$result) {
    echo 'Invalid token';
    exit();
}

// Get the user's email address from the result
$email = $result->fetch_assoc()['email'];

// Create a form for the user to enter their new password
?>
<form action="update_password.php" method="post">
    <input type="hidden" name="token" value="<?php echo $token; ?>">
    <input type="password" name="new_password" placeholder="New Password">
    <input type="submit" value="Update Password">
</form>

<?php

// Close the database connection
$mysqli->close();

?>


<?php

// Configuration variables
define('DB_HOST', 'your_host');
define('DB_NAME', 'your_database');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Get the reset token and new password from the URL parameter and form submission
$token = $_POST['token'];
$new_password = $_POST['new_password'];

// Check if a matching record is found in the database
$query = "SELECT id, email FROM users WHERE reset_token = '$token'";
$result = $mysqli->query($query);

// If no matching record is found, display an error message
if (!$result) {
    echo 'Invalid token';
    exit();
}

// Update the user's password with bcrypt
$hashed_password = password_hash($new_password, PASSWORD_BCRYPT);
$update_query = "UPDATE users SET password = '$hashed_password' WHERE reset_token = '$token'";
$mysqli->query($update_query);

echo 'Password updated successfully.';

// Close the database connection
$mysqli->close();

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$dsn = "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME;
$conn = new PDO($dsn, DB_USERNAME, DB_PASSWORD);

if (isset($_POST['submit'])) {
  // Handle forgot password form submission

  $email = trim($_POST['email']);
  $username = trim($_POST['username']);

  if ($email && $username) {
    try {
      // Retrieve user data from database
      $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email OR username = :username");
      $stmt->bindParam(':email', $email);
      $stmt->bindParam(':username', $username);

      if ($stmt->execute()) {
        $user_data = $stmt->fetch();

        if ($user_data) {
          // Generate a reset token
          $token = bin2hex(random_bytes(32));

          // Store the reset token in database (this is insecure, see below)
          // UPDATE users SET reset_token = :token WHERE id = :id;
          // $stmt->bindParam(':token', $token);
          // $stmt->bindParam(':id', $user_data['id']);
          // if ($stmt->execute()) {
            // Send the reset link via email
            $to_email = $email;
            $subject = 'Reset Your Password';
            $body = '
              <p>Click this link to reset your password: <a href="' . $_SERVER['PHP_SELF'] . '?token=' . urlencode($token) . '">Reset Password</a></p>
            ';
            sendEmail($to_email, $subject, $body);

            // Display success message
            echo 'A reset email has been sent to your email address.';
          } else {
            echo 'Error storing reset token in database.';
          }
        } else {
          echo 'No user found with the provided email or username.';
        }
      } catch (PDOException $e) {
        echo 'Database error: ' . $e->getMessage();
      }
    } catch (Exception $e) {
      echo 'An error occurred while retrieving user data: ' . $e->getMessage();
    }
  } else {
    echo 'Please enter both email and username to proceed.';
  }

} else {
  // Display forgot password form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <button type="submit" name="submit">Send Reset Link</button>
</form>

<?php
}

function sendEmail($to_email, $subject, $body) {
  $headers = 'From: your_email@example.com' . "\r
";
  mail($to_email, $subject, $body, $headers);
}
?>


<?php

// Configuration
define('PASSWORD_RESET_TOKEN_LENGTH', 32);

// Database connection settings
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function generateToken() {
    // Generate a random token for password reset
    return bin2hex(random_bytes(PASSWORD_RESET_TOKEN_LENGTH));
}

function sendResetEmail($email, $token) {
    // Email sending logic (using PHPMailer or similar library)
    // For simplicity, we'll use the built-in mail() function
    $subject = "Password Reset Request";
    $body = "Click this link to reset your password: <a href='http://your-domain.com/reset-password.php?token=$token'>Reset Password</a>";
    mail($email, $subject, $body);
}

if (isset($_POST['forgot'])) {
    // Handle forgot password request
    $email = $_POST['email'];
    if (!empty($email)) {
        // Check if user exists in database
        $query = "SELECT id FROM users WHERE email = '$email'";
        $result = $conn->query($query);
        if ($result->num_rows > 0) {
            // Generate a token for password reset
            $token = generateToken();
            
            // Update user's token in database
            $updateQuery = "UPDATE users SET token = '$token' WHERE email = '$email'";
            $conn->query($updateQuery);
            
            // Send password reset email
            sendResetEmail($email, $token);
            
            echo "An email with a password reset link has been sent to your registered email address.";
        } else {
            echo "No account found with the provided email address.";
        }
    } else {
        echo "Please enter a valid email address.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('PASSWORD_RESET_TOKEN_LENGTH', 32);

// Database connection settings
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function validateToken() {
    // Check if the provided token is valid and has not been used before
    return true; // Implement your own logic here
}

// Validate token from URL parameter
$token = $_GET['token'];
if (validateToken($token)) {
    echo "Enter new password:";
} else {
    echo "Invalid or expired token.";
}

?>


<?php

// Configuration
$db_host = 'your_database_host';
$db_user = 'your_database_username';
$db_pass = 'your_database_password';
$db_name = 'your_database_name';

// Create connection
$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Define function to reset password
function reset_password($email, $password_new) {
  global $conn;
  
  // Select user by email
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);
  
  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      // Reset password using password_hash()
      $new_password_hash = password_hash($password_new, PASSWORD_DEFAULT);
      
      // Update user data
      $sql = "UPDATE users SET password_hash = '$new_password_hash' WHERE email = '$email'";
      if ($conn->query($sql) === TRUE) {
        echo "Password has been updated";
      } else {
        echo "Error updating password: " . $conn->error;
      }
    }
  } else {
    echo "User not found with this email";
  }
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get email and new password from form
  $email = $_POST['email'];
  $password_new = $_POST['new_password'];

  // Reset password
  reset_password($email, $password_new);
}

// If email only was submitted (no new password), generate a reset link
if (isset($_GET["email"]) && !isset($_GET["token"])) {
  $email = $_GET["email"];
  
  // Generate random token for reset link
  $token = substr(str_shuffle("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), 0, 32);
  
  // Insert new record into tokens table (or use a session cookie)
  $sql = "INSERT INTO tokens (email, token) VALUES ('$email', '$token')";
  if ($conn->query($sql) === TRUE) {
    // Send email with reset link
    send_reset_email($email, $token);
  } else {
    echo "Error generating reset link: " . $conn->error;
  }
}

// Function to send password reset email
function send_reset_email($email, $token) {
  // Email content (you can customize this)
  $subject = 'Reset your password';
  $message = "
  <p>Dear user,</p>
  <p>To reset your password, click on the following link:</p>
  <p><a href='https://your-website.com/reset_password.php?email=$email&token=$token'>Reset Password</a></p>
  ";
  
  // Send email using PHPMailer (or use a library like SwiftMailer)
  $headers = 'From: your-email@example.com' . "\r
" .
             'Reply-To: your-email@example.com' . "\r
" .
             'X-Mailer: PHP/' . phpversion();
  
  mail($email, $subject, $message, $headers);
}

?>


// db.php
<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASSWORD', 'password');
define('DB_NAME', 'database_name');

function connectToDatabase() {
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}
?>


<?php
require_once 'db.php';

if (isset($_POST['submit'])) {

    // Connect to database
    $conn = connectToDatabase();

    // Sanitize input
    $username = sanitizeInput($_POST['username']);

    // Query for user's email and password
    $query = "SELECT email, password FROM users WHERE username='$username'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $email = $row['email'];
            $password = $row['password'];

            // Send email to user with password
            sendEmail($username, $email, $password);
            echo "Password has been sent to your registered email address.";
        }
    } else {
        echo "User not found.";
    }

    // Close database connection
    $conn->close();

} else {
?>
<!-- Form for forgot password -->
<form action="" method="post">
    <label>Username:</label>
    <input type="text" name="username"><br><br>
    <input type="submit" name="submit" value="Submit">
</form>
<?php
}

// Function to send email with user's password
function sendEmail($username, $email, $password) {
    // Email subject and body
    $subject = 'Your Password for '.$username.'';
    $body = 'Your current password is: '.$password.'';

    // Send email using PHP mail function (for simplicity)
    if(mail($email, $subject, $body)) {
        echo "Email sent successfully.";
    } else {
        echo "Failed to send email.";
    }
}
?>


// Update db.php with the following code:
function hashPassword($password) {
    return password_hash($password, PASSWORD_DEFAULT);
}

function verifyPassword($input_password, $stored_password) {
    if(password_verify($input_password, $stored_password)) {
        return true;
    } else {
        return false;
    }
}


<?php

// Configuration
$site_name = "Your Site Name";
$from_email = "your_email@example.com";

// Connect to database
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        exit;
    }

    // Query database for user with matching email address
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows == 0) {
        echo "No account found with that email address.";
        exit;
    }

    // Get user data from database
    $row = $result->fetch_assoc();

    // Generate a random password and store it in the database
    $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);
    $new_password_hash = hash('sha256', $password);

    // Update user data in database
    $query = "UPDATE users SET password_hash = '$new_password_hash' WHERE email = '$email'";
    $conn->query($query);

    // Send email to user with new password
    $to_email = $row['email'];
    $subject = "Your new password for $site_name";
    $body = "Dear user, your new password is: $password";

    // Email sending function (e.g. using PHPMailer or mail())
    sendEmail($to_email, $subject, $body);

    echo "A new password has been sent to your email address.";

} else {

    // Display form
    ?>
    <h2>Forgot Password</h2>
    <p>Please enter your email address and we will send you a new password.</p>
    <form action="" method="post">
        <label for="email">Email Address:</label>
        <input type="text" id="email" name="email" required>
        <button type="submit">Send New Password</button>
    </form>

<?php
}
?>

// Email sending function (e.g. using PHPMailer or mail())
function sendEmail($to_email, $subject, $body) {
    // Using PHPMailer example
    require_once 'PHPMailer/PHPMailerAutoload.php';
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->From = $from_email;
    $mail->AddAddress($to_email);
    $mail->Subject = $subject;
    $mail->Body = $body;
    if (!$mail->Send()) {
        echo "Error sending email: " . $mail->ErrorInfo;
    }
}

?>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

// Get input from user
$usernameOrEmail = $_POST['username_or_email'];
$token = md5(uniqid(rand(), true));

// Check if username or email exists in database
$query = "SELECT * FROM users WHERE (username = '$usernameOrEmail' OR email = '$usernameOr Email') AND password IS NOT NULL";
$result = mysqli_query($conn, $query);

if ($result) {
  while ($row = mysqli_fetch_assoc($result)) {
    // Send reset link to user
    $to = $row['email'];
    $subject = 'Reset Your Password';
    $message = "Hi " . $row['username'] . ",

Click on the following link to reset your password:

<a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>

Best regards,
The Admin";
    mail($to, $subject, $message);

    // Update token in database
    $updateQuery = "UPDATE users SET forgot_token = '$token' WHERE id = '" . $row['id'] . "'";
    mysqli_query($conn, $updateQuery);
  }
} else {
  echo "Username or email not found.";
}

// Close connection
mysqli_close($conn);

?>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

// Get input from user
$token = $_GET['token'];
$newPassword = $_POST['new_password'];

// Check if token exists in database
$query = "SELECT * FROM users WHERE forgot_token = '$token'";
$result = mysqli_query($conn, $query);

if ($result) {
  while ($row = mysqli_fetch_assoc($result)) {
    // Update password in database
    $updateQuery = "UPDATE users SET password = '$newPassword' WHERE id = '" . $row['id'] . "'";
    mysqli_query($conn, $updateQuery);
    
    // Reset forgot token
    $resetQuery = "UPDATE users SET forgot_token = NULL WHERE id = '" . $row['id'] . "'";
    mysqli_query($conn, $resetQuery);
  }
} else {
  echo "Invalid token.";
}

// Close connection
mysqli_close($conn);

?>


<?php

require_once 'db.php'; // include your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  $query = "SELECT * FROM users WHERE email='$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // user exists, generate a reset token
    $token = bin2hex(random_bytes(32));
    $user_id = mysqli_fetch_assoc($result)['id'];

    // insert the reset token into the database
    $query = "INSERT INTO password_resets (user_id, token) VALUES ('$user_id', '$token')";
    mysqli_query($conn, $query);

    // send an email with a reset link
    $subject = 'Reset Password';
    $message = '<p>Click this link to reset your password: <a href="reset_password.php?token=' . $token . '">Reset Password</a></p>';
    $headers = 'From: your-email@example.com' . "\r
" .
      'Reply-To: your-email@example.com' . "\r
" .
      'Content-Type: text/html; charset=UTF-8';
    mail($email, $subject, $message, $headers);

    echo "Reset link sent to your email!";
  } else {
    echo "Email not found.";
  }
} else {
  echo "Invalid request method";
}

?>


<?php

require_once 'db.php'; // include your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
  $token = $_GET['token'];

  $query = "SELECT * FROM users WHERE id=(SELECT user_id FROM password_resets WHERE token='$token')";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // reset token is valid, allow user to change their password
    echo "<form action='update_password.php' method='post'>";
    echo "<input type='password' name='new_password' placeholder='New Password'>";
    echo "<button type='submit'>Change Password</button>";
    echo "</form>";

  } else {
    echo "Invalid reset token";
  }
} else {
  echo "Invalid request method";
}

?>


<?php

require_once 'db.php'; // include your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $new_password = $_POST['new_password'];
  $token = $_GET['token'];

  $query = "SELECT * FROM users WHERE id=(SELECT user_id FROM password_resets WHERE token='$token')";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // update the user's password
    $user_id = mysqli_fetch_assoc($result)['id'];
    $query = "UPDATE users SET password= '$new_password' WHERE id='$user_id'";
    mysqli_query($conn, $query);

    // delete the reset token from the database
    $query = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $query);

    echo "Password updated successfully!";
  } else {
    echo "Invalid reset token";
  }
} else {
  echo "Invalid request method";
}

?>


<?php

require_once 'database.php'; // assuming you have a database connection script

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($db, $query);
    
    if ($result && mysqli_num_rows($result) > 0) {
        // Email found, generate a reset token and send an email with a link to reset the password
        
        $user_data = mysqli_fetch_assoc($result);
        
        // Generate a random reset token
        $reset_token = bin2hex(random_bytes(32));
        
        // Update the user data in the database with the new reset token
        $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
        mysqli_query($db, $update_query);
        
        // Send an email to the user with a link to reset their password
        $subject = 'Reset your password';
        $message = "Click here to reset your password: <a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?email=$email&token=$reset_token'>Reset Password</a>";
        mail($email, $subject, $message);
        
        echo "A link has been sent to your email to reset your password.";
    } else {
        echo "Email not found in our database. Please try again with a different email.";
    }
} else {
    // Display the forgot password form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Email:</label>
        <input type="email" name="email" required />
        <button type="submit">Send Reset Link</button>
    </form>
    <?php
}


<?php

require_once 'database.php'; // assuming you have a database connection script

if (isset($_GET['email']) && isset($_GET['token'])) {
    $email = $_GET['email'];
    $token = $_GET['token'];
    
    // Check if the token is valid and not expired
    $query = "SELECT * FROM users WHERE email = '$email' AND reset_token = '$token'";
    $result = mysqli_query($db, $query);
    
    if ($result && mysqli_num_rows($result) > 0) {
        // Token is valid, allow user to reset their password
        
        $user_data = mysqli_fetch_assoc($result);
        
        // Display the reset password form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label>New Password:</label>
            <input type="password" name="new_password" required />
            <label>Confirm New Password:</label>
            <input type="password" name="confirm_new_password" required />
            <button type="submit">Reset Password</button>
        </form>
        <?php
        
    } else {
        echo "Invalid token or expired. Please try again with a different link.";
    }
} elseif (isset($_POST['new_password']) && isset($_POST['confirm_new_password'])) {
    // User submitted the reset password form
    
    $new_password = $_POST['new_password'];
    $confirm_new_password = $_POST['confirm_new_password'];
    
    if ($new_password === $confirm_new_password) {
        // Update the user's password in the database
        $update_query = "UPDATE users SET password = '$new_password' WHERE email = '" . $_GET['email'] . "'";
        mysqli_query($db, $update_query);
        
        echo "Password reset successfully!";
    } else {
        echo "Passwords do not match. Please try again.";
    }
}


<?php

// Configuration variables
$db_host = 'your_host';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        exit;
    }

    // Prepare SQL query to retrieve user data
    $query = "SELECT * FROM users WHERE email = '$email'";

    // Execute query and get result
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {

        // Retrieve user data from result set
        while ($row = mysqli_fetch_assoc($result)) {
            $user_id = $row['id'];
            $username = $row['username'];

            // Generate new password and send to email
            $new_password = 'your_new_password'; // Change this to a more secure method of generating passwords
            $email_to = $email;
            $subject = "Your new password is: $new_password";

            // Send email using PHPMailer or any other library
            // Here, we'll use mail() function for simplicity

            mail($email_to, $subject, 'Dear ' . $username . ', your new password is: ' . $new_password);

            echo "Email sent with new password.";
        }
    } else {
        echo "No user found with this email address.";
    }

} else {

    // Display form if not submitted
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Enter your email address:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type="submit" value="Get new password">
</form>

<?php
}
?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($usernameOrEmail) {
  // Check if username or email exists in the database
  $query = "SELECT * FROM users WHERE username = '$usernameOrEmail' OR email = '$usernameOrEmail'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Get user data from result set
    while($row = $result->fetch_assoc()) {
      $userId = $row['id'];
      $userEmail = $row['email'];

      // Generate a password reset token
      $token = bin2hex(random_bytes(32));

      // Update user's password reset token in database
      $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
      $conn->query($query);

      // Send email with password reset link to user
      sendPasswordResetEmail($userEmail, $token);
    }
  } else {
    echo "Error: No account found with the provided username or email.";
  }

  return true;
}

function sendPasswordResetEmail($email, $token) {
  // Email settings
  $from = 'your_email@example.com';
  $subject = 'Password Reset Link';

  // Create password reset link
  $resetLink = "http://example.com/reset-password.php?token=$token";

  // Set email headers and body
  $headers = "From: $from
";
  $headers .= "MIME-Version: 1.0
";
  $headers .= "Content-Type: text/html; charset=UTF-8
";

  $body = '<html><body>';
  $body .= 'Hello!<br>';
  $body .= 'To reset your password, click the following link:<br>';
  $body .= '<a href="' . $resetLink . '">Reset Password</a><br>';
  $body .= '</body></html>';

  // Send email using PHPMailer or mail()
}

function resetPassword($token) {
  // Check if token is valid
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
      $userId = $row['id'];

      // Get new password from user
      $newPassword = $_POST['new_password'];
      $confirmPassword = $_POST['confirm_password'];

      // Validate new password and confirm password
      if ($newPassword === $confirmPassword && strlen($newPassword) >= 8) {
        // Update user's password in database
        $query = "UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'";
        $conn->query($query);

        // Delete password reset token from database
        $query = "DELETE FROM users WHERE password_reset_token = '$token'";
        $conn->query($query);
      } else {
        echo "Error: New passwords do not match or are too short.";
      }
    }
  } else {
    echo "Error: Invalid password reset token.";
  }

  return true;
}

// Call forgotPassword function
if (isset($_POST['forgot_password'])) {
  forgotPassword($_POST['username_or_email']);
}

?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // Generate a random secret key for security
$email_subject = 'Reset Password';

// Validate input data
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die('Invalid email address');
  }

  // Query database to get user's password hash
  $db = new mysqli('localhost', 'username', 'password', 'database_name');
  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $db->query($query);

  // Check if user exists
  if (!$result || $result->num_rows === 0) {
    die('Email not found');
  }

  // Get password hash from database
  $row = $result->fetch_assoc();
  $password_hash = $row['password_hash'];

  // Generate reset token
  $reset_token = bin2hex(random_bytes(32));

  // Update user's reset token in database
  $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
  $db->query($update_query);

  // Send password reset link via email
  $to = $email;
  $subject = $email_subject;
  $message = 'Click this link to reset your password: <a href="' . url('password_reset.php?reset_token=' . $reset_token) . '">Reset Password</a>';
  mail($to, $subject, $message);

  die('Password reset link sent to your email');
}

?>


<?php

// Validate input data
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $reset_token = $_POST['reset_token'];
  $new_password = $_POST['new_password'];
  $confirm_password = $_POST['confirm_password'];

  // Check if reset token matches user's record in database
  $db = new mysqli('localhost', 'username', 'password', 'database_name');
  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }
  $query = "SELECT * FROM users WHERE reset_token = '$reset_token'";
  $result = $db->query($query);

  // Check if user exists
  if (!$result || $result->num_rows === 0) {
    die('Invalid reset token');
  }

  // Get user's id from database
  $row = $result->fetch_assoc();
  $user_id = $row['id'];

  // Update password hash in database
  $update_query = "UPDATE users SET password_hash = '$new_password' WHERE id = '$user_id'";
  $db->query($update_query);

  die('Password updated successfully');
}

?>


// forgot_password.php

<?php

require 'config.php'; // include your database configuration file

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $token = bin2hex(random_bytes(16));

    // Query to retrieve user's email and insert password reset token into a new table
    $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ((SELECT id FROM users WHERE email = ?), ?)";
    $stmt = $pdo->prepare($query);
    $stmt->execute([$email, $token]);

    // Send the password reset email to the user
    $to = $email;
    $subject = "Reset your password";
    $body = "
        <p>Hello $name,</p>
        <p>Click on the following link to reset your password: 
            <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
        </p>
    ";

    // Use a library like PHPMailer or sendmail to send the email
    mail($to, $subject, $body);

    echo "Email sent successfully!";
} else {
    // Display the forgot password form
    ?>
    <h1>Forgot Password?</h1>
    <form action="" method="post">
        <label for="email">Email:</label>
        <input type="text" name="email" id="email"><br><br>
        <input type="submit" value="Submit">
    </form>
    <?php
}
?>


// reset-password.php

<?php

require 'config.php'; // include your database configuration file

// Check if the token is valid
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    $query = "SELECT * FROM password_reset_tokens WHERE token = ?";
    $stmt = $pdo->prepare($query);
    $stmt->execute([$token]);

    // Get the user's ID from the token
    $user_id = $stmt->fetchColumn();

    if ($user_id) {
        // Display the reset password form
        ?>
        <h1>Reset Password</h1>
        <form action="" method="post">
            <label for="password">New Password:</label>
            <input type="text" name="password" id="password"><br><br>
            <label for="confirm_password">Confirm New Password:</label>
            <input type="text" name="confirm_password" id="confirm_password"><br><br>
            <input type="submit" value="Submit">
        </form>

        <?php
    } else {
        echo "Invalid token!";
    }
} else {
    // Display an error message if the token is missing
    echo "Token not provided!";
}
?>


// reset-password.php

<?php

require 'config.php'; // include your database configuration file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password === $confirm_password) {
        // Update the user's password in the `users` table
        $query = "UPDATE users SET password = ? WHERE id = ?";
        $stmt = $pdo->prepare($query);
        $stmt->execute([$password, $user_id]);

        // Remove the password reset token from the database
        $query = "DELETE FROM password_reset_tokens WHERE user_id = ?";
        $stmt->execute([$user_id]);
    } else {
        echo "Passwords do not match!";
    }
}
?>


<?php

// Configuration variables
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_user');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Get the username from the input field
$username = $_POST['username'];

// Query to retrieve user's email address
$query = "SELECT email FROM users WHERE username = '$username'";
$result = $mysqli->query($query);

if ($result->num_rows > 0) {
    // Get the user's email address
    while ($row = $result->fetch_assoc()) {
        $email = $row['email'];
    }

    // Generate a random password
    $password = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 12);

    // Send an email with new password
    send_email($email, $password);
} else {
    echo "No user found with that username.";
}

// Function to send email
function send_email($to, $password) {
    // Configuration variables for sending email
    define('FROM_EMAIL', 'your_email_address');
    define('FROM_NAME', 'Your Website');

    $subject = 'Password Reset';
    $body = "Dear $username,
Your new password is: $password";

    $headers = 'From: '.FROM_NAME.' <'.$FROM_EMAIL.'>' . "\r
" .
               'Reply-To: '.$FROM_EMAIL.'' . "\r
" .
               'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $body, $headers);
}

// Close database connection
$mysqli->close();
?>


<?php

// Include configuration file
include 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from user
    $email = $_POST['email'];

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // If email exists, generate a token and store it in the password_recovery table
        $token = bin2hex(random_bytes(16));
        $expires_at = date('Y-m-d H:i:s', strtotime('+1 day'));

        $query = "INSERT INTO `password_recovery` (`email`, `token`, `expires_at`) VALUES ('$email', '$token', '$expires_at')";
        mysqli_query($conn, $query);

        // Send email with password reset link
        send_email($email, $token);
    } else {
        echo 'Email does not exist in the database.';
    }
} else {
    echo '<form action="" method="post">';
    echo '<input type="text" name="email" placeholder="Enter your email address">';
    echo '<button type="submit">Send Password Reset Link</button>';
    echo '</form>';
}

// Function to send password reset link via email
function send_email($to, $token) {
    // Email configuration settings
    $subject = 'Password Recovery';
    $body = '<p>Click on the following link to reset your password:</p>
            <p><a href="http://example.com/reset_password.php?token=' . $token . '">Reset Password</a></p>';
    $from = 'your_email@example.com';

    // Send email using PHPMailer
    require_once 'PHPMailerAutoload.php';
    $mail = new PHPMailer;

    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->Port = 587;

    $mail->setFrom($from, 'Your Name');
    $mail->addAddress($to);

    $mail->isHTML(true);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
        echo 'Mailer Error: ' . $mail->ErrorInfo;
    } else {
        echo 'A password reset link has been sent to your email.';
    }
}


<?php

// Include configuration file
include 'config.php';

// Check if token is set in URL
if (isset($_GET['token'])) {
    // Get token from URL
    $token = $_GET['token'];

    // Check if token exists in password_recovery table and has not expired
    $query = "SELECT * FROM `password_recovery` WHERE token = '$token' AND expires_at > NOW()";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // If token is valid, create form for password reset
        echo '<form action="" method="post">';
        echo 'Enter new password: <input type="password" name="new_password"><br>';
        echo 'Confirm new password: <input type="password" name="confirm_new_password"><br>';
        echo '<button type="submit">Reset Password</button>';
        echo '</form>';

        // Check if form has been submitted
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Get new password from user
            $new_password = $_POST['new_password'];
            $confirm_new_password = $_POST['confirm_new_password'];

            // Check if new passwords match
            if ($new_password === $confirm_new_password) {
                // If passwords match, update user's password in database
                $query = "UPDATE users SET `password` = '$new_password' WHERE email = (SELECT email FROM `password_recovery` WHERE token = '$token')";
                mysqli_query($conn, $query);

                // Delete token from password_recovery table
                $query = "DELETE FROM `password_recovery` WHERE token = '$token'";
                mysqli_query($conn, $query);

                echo 'Password reset successfully.';
            } else {
                echo 'Passwords do not match. Please try again.';
            }
        }
    } else {
        echo 'Token is invalid or has expired.';
    }
} else {
    echo 'No token provided.';
}

// Close database connection
mysqli_close($conn);
?>


CREATE TABLE users (
  id INT PRIMARY KEY AUTO_INCREMENT,
  email VARCHAR(255) NOT NULL,
  password_hash VARCHAR(255) NOT NULL
);


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // Keep this secret!
$max_attempts = 5; // Maximum number of attempts before locking account
$lockout_time = 300; // Time in seconds to lock out account (e.g. 5 minutes)

// Validate request
if ($_SERVER['REQUEST_METHOD'] != 'POST') {
    header('Location: index.php');
    exit;
}

// Extract data from form submission
$email = $_POST['email'];

// Check if email exists in database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);
if (mysqli_num_rows($result) == 0) {
    echo 'Email not found.';
    exit;
}

// Get user ID and password hash
$user_id = mysqli_fetch_assoc($result)['id'];
$password_hash = mysqli_fetch_assoc($result)['password_hash'];

// Check for lockout status
$lockout_timestamp = isset($_SESSION['lockout_timestamp']) ? $_SESSION['lockout_timestamp'] : 0;
if ($lockout_timestamp > time()) {
    echo 'Your account has been locked out. Please try again in 5 minutes.';
    exit;
}

// Generate random password and send email with reset link
$password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);
$email_body = "Reset your password: <a href='reset_password.php?token=$password&user_id=$user_id'>Click here</a>";
$subject = 'Password Reset';

// Send email using PHPMailer or similar library
$mail->setFrom('your_email@example.com', 'Your Name');
$mail->addAddress($email);
$mail->Subject = $subject;
$mail->Body = $email_body;
if (!$mail->send()) {
    echo 'Error sending email: ' . $mail->ErrorInfo;
    exit;
}

// Store password in session for later use
$_SESSION['password'] = $password;

echo "A password reset link has been sent to your email. Please click on the link and follow instructions.";

?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // Keep this secret!

// Validate request
if ($_SERVER['REQUEST_METHOD'] != 'POST') {
    header('Location: index.php');
    exit;
}

// Extract data from form submission
$token = $_GET['token'];
$user_id = $_GET['user_id'];

// Check if token is valid
if (isset($_SESSION['password']) && $_SESSION['password'] == $token) {
    // User has already submitted new password, redirect to login page
    header('Location: login.php');
    exit;
}

// Generate random password and store it in session for later use
$password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);
$_SESSION['password'] = $password;

echo "Enter your new password below. You will be redirected to the login page after submission.";

?>


<?php

// Validate request
if ($_SERVER['REQUEST_METHOD'] != 'POST') {
    header('Location: index.php');
    exit;
}

// Extract data from form submission
$email = $_POST['email'];
$password = $_POST['password'];

// Check if user has already submitted new password
if (isset($_SESSION['password'])) {
    // User has already reset their password, remove session variable and proceed to login
    unset($_SESSION['password']);
}

// Login logic goes here...

?>


<?php

// Configuration variables
$siteName = 'Your Website Name';
$siteEmail = 'yourwebsite@example.com'; // email address where you want to send the reset link

// Define the forgot password form
if (isset($_POST['forgot-password'])) {
    $email = $_POST['email'];

    // Validate the email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address.';
        exit;
    }

    // Generate a unique reset link
    $token = bin2hex(random_bytes(16));

    // Insert the token into the database (you'll need to create a users table with an email and reset_token column)
    $conn = new PDO('sqlite:users.db');
    $stmt = $conn->prepare("INSERT INTO users (email, reset_token) VALUES (:email, :token)");
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    // Send the reset link to the user
    $subject = 'Reset your password';
    $message = '
        Dear ' . $siteName . ' user,
        
        You have requested a password reset. Click on this link to create a new password:
        
        <a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '">' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '</a>
        
        Best regards,
        The ' . $siteName . ' team
    ';
    mail($email, $subject, $message);

    echo 'A password reset link has been sent to your email address.';
} else {
?>

<!-- Form for submitting the forgot password request -->
<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <button type="submit" name="forgot-password">Submit</button>
</form>

<?php
}
?>


<?php

// Configuration variables
$siteName = 'Your Website Name';

// Define the reset password form
if (isset($_POST['reset-password'])) {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];

    // Validate the token and password
    if (!$token) {
        echo 'Invalid or expired reset link.';
        exit;
    }

    // Check if the user exists in the database with the provided token
    $conn = new PDO('sqlite:users.db');
    $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = :token");
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    $user = $stmt->fetch();

    if (!$user) {
        echo 'Invalid or expired reset link.';
        exit;
    }

    // Hash the new password
    $hashedPassword = hash('sha256', $newPassword);

    // Update the user's password in the database
    $stmt = $conn->prepare("UPDATE users SET password = :password WHERE email = :email");
    $stmt->bindParam(':password', $hashedPassword);
    $stmt->bindParam(':email', $user['email']);
    $stmt->execute();

    echo 'Your password has been updated successfully!';
} else {
?>

<!-- Form for submitting the new password -->
<form action="" method="post">
    <label for="password">New Password:</label>
    <input type="password" id="password" name="password"><br><br>
    <button type="submit" name="reset-password">Submit</button>
</form>

<?php
}
?>


<?php

// Include our database connection file
include 'db_connection.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
  $email = $_POST['email'];

  // Check if the user exists in the database
  $query = "SELECT email FROM users WHERE email = '$email'";
  $result = mysqli_query($connection, $query);

  if ($result->num_rows > 0) {
    // Generate a random token for the user's reset password link
    $token = bin2hex(random_bytes(16));

    // Insert the token into the database
    $insert_token = "INSERT INTO `reset_password_tokens` (`email`, `token`) VALUES ('$email', '$token')";
    mysqli_query($connection, $insert_token);

    // Send an email to the user with their reset password link
    send_email($email, $token);
  } else {
    echo 'User not found!';
  }
} else {
?>

<!-- Create a form for the user to input their email address -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="text" name="email" placeholder="Email Address">
  <button type="submit" name="submit">Send Password Reset Link</button>
</form>

<?php } ?>


function send_email($email, $token) {
  // Use PHPMailer to send an email
  require_once 'PHPMailer/src/PHPMailer.php';
  require_once 'PHPMailer/src/SMTP.php';

  $mail = new PHPMailer\PHPMailer\PHPMailer();
  $mail->isSMTP();

  // Your SMTP settings here
  $mail->Host       = '';
  $mail->Username   = '';
  $mail->Password   = '';
  $mail->Port       = '';

  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($email);

  $body = "Click here to reset your password: <a href='reset_password.php?token=$token'>Reset Password</a>";

  $mail->isHTML(true);
  $mail->Subject    = 'Password Reset Link';
  $mail->Body       = $body;

  if (!$mail->send()) {
    echo "Mailer Error: " . $mail->ErrorInfo;
  }
}


<?php

// Include our database connection file
include 'db_connection.php';

// Get the token from the URL
$token = $_GET['token'];

// Check if the token exists in the database
$query = "SELECT email FROM reset_password_tokens WHERE token = '$token'";
$result = mysqli_query($connection, $query);

if ($result->num_rows > 0) {
  // Get the user's email address from the database
  $row = $result->fetch_assoc();
  $email = $row['email'];

  // Check if the form has been submitted
  if (isset($_POST['submit'])) {
    // Get the new password from the form
    $new_password = $_POST['password'];

    // Hash the new password and update it in the database
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $update_password = "UPDATE users SET password = '$hashed_password' WHERE email = '$email'";
    mysqli_query($connection, $update_password);

    // Delete the token from the database
    $delete_token = "DELETE FROM reset_password_tokens WHERE email = '$email'";
    mysqli_query($connection, $delete_token);
  }
?>

<!-- Create a form for the user to input their new password -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="password" name="password" placeholder="New Password">
  <button type="submit" name="submit">Reset Password</button>
</form>

<?php } else {
  echo 'Invalid Token!';
} ?>


<?php

// Configuration
require_once 'config.php';

// Define the reset token and expiration time (in minutes)
define('RESET_TOKEN_EXPIRATION', 60);

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get the email address from the form input
  $email = $_POST['email'];

  // Validate the email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    header('Location: forgot-password.php?error=Invalid%20email');
    exit;
  }

  // Check if a user with the given email exists
  $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  if ($stmt->rowCount() === 0) {
    header('Location: forgot-password.php?error=Email%20not%20found');
    exit;
  }

  // Generate a reset token
  $resetToken = bin2hex(random_bytes(32));

  // Store the reset token in the database
  $stmt = $pdo->prepare("UPDATE users SET reset_token = :token WHERE email = :email");
  $stmt->bindParam(':token', $resetToken);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Send an email with a link to reset the password
  $subject = "Reset Your Password";
  $body = "Click here to reset your password: <a href='" . $url . "/reset-password.php?token=" . $resetToken . "'>Reset Password</a>";
  mail($email, $subject, $body);

  // Redirect the user to a confirmation page
  header('Location: forgot-password-confirm.php');
  exit;
}

?>


<?php

// Configuration
require_once 'config.php';

// Get the reset token from the URL parameter
$resetToken = $_GET['token'];

// Validate the reset token
$stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = :token");
$stmt->bindParam(':token', $resetToken);
$stmt->execute();

if ($stmt->rowCount() === 0) {
  header('Location: index.php');
  exit;
}

?>


<?php

// Configuration
require_once 'config.php';

// Get the reset token from the URL parameter
$resetToken = $_GET['token'];

// Validate the reset token
$stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = :token");
$stmt->bindParam(':token', $resetToken);
$stmt->execute();

if ($stmt->rowCount() === 0) {
  header('Location: index.php');
  exit;
}

// Update the user's password hash with the new password
$newPassword = $_POST['new_password'];
$confirmPassword = $_POST['confirm_password'];

if ($newPassword !== $confirmPassword) {
  // Passwords do not match
  header('Location: reset-password.php?error=Passwords%20do%20not%20match');
  exit;
}

$stmt = $pdo->prepare("UPDATE users SET password_hash = :hash, reset_token = NULL WHERE reset_token = :token");
$stmt->bindParam(':hash', password_hash($newPassword, PASSWORD_DEFAULT));
$stmt->bindParam(':token', $resetToken);
$stmt->execute();

// Redirect the user to a confirmation page
header('Location: login.php');
exit;

?>


<?php
// Include configuration file (database connection, etc.)
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Retrieve email address from form
    $email = $_POST['email'];

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    $user = mysqli_fetch_assoc($result);

    // If user exists, send password reset link to their email
    if ($user) {
        // Generate a random token for the password reset
        $token = bin2hex(random_bytes(16));

        // Update user's token in database
        $query = "UPDATE users SET token = '$token' WHERE email = '$email'";
        mysqli_query($conn, $query);

        // Send email with password reset link
        $subject = 'Reset your password';
        $body = "Click this link to reset your password: <a href='http://your-website.com/reset-password.php?email=$email&token=$token'>Reset Password</a>";
        $headers = 'From: no-reply@your-website.com' . "\r
" .
                   'Content-Type: text/html; charset=UTF-8';
        mail($email, $subject, $body, $headers);

        echo 'A password reset link has been sent to your email';
    } else {
        echo 'User does not exist';
    }
} else {
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="text" name="email" placeholder="Enter your email address">
    <button type="submit">Send password reset link</button>
</form>
<?php
}
?>


<?php
// Include configuration file (database connection, etc.)
require_once 'config.php';

// Check if token is valid
if (!empty($_GET['token'])) {
    $email = $_GET['email'];
    $token = $_GET['token'];

    // Retrieve user's data from database
    $query = "SELECT * FROM users WHERE email = '$email' AND token = '$token'";
    $result = mysqli_query($conn, $query);
    $user = mysqli_fetch_assoc($result);

    // If user exists and token is valid, display password reset form
    if ($user) {
        ?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="password" name="new_password" placeholder="Enter new password">
    <button type="submit">Reset Password</button>
    <?php
} else {
    // If token is invalid, display error message
    echo 'Invalid or expired token';
}
?>


<?php
// Include configuration file (database connection, etc.)
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Retrieve email address and new password from form
    $email = $_GET['email'];
    $new_password = $_POST['new_password'];

    // Update user's password in database
    $query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    echo 'Password has been updated';
}
?>


<?php

// Configuration
define('ROOT_DIR', dirname(__FILE__));
define('PASSWORD_SALT', 'your-salt-value-here');

// Include database connection script
require_once ROOT_DIR . '/includes/db.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get the email from the request
  $email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);

  // If email is valid, proceed with password reset
  if ($email) {
    try {
      // Retrieve user data from database
      $user = fetchUser($db, $email);
      if ($user) {
        // Generate new password and send it via email
        $newPassword = generateRandomPassword();
        $passwordHash = hash('sha256', $newPassword . PASSWORD_SALT);

        // Update user's password in database
        updatePassword($db, $user['id'], $passwordHash);

        // Send email with new password
        sendEmailNotification($email, 'Your new password is: ' . $newPassword);
        echo '<p>Password reset link sent to your email.</p>';
      } else {
        throw new Exception('User not found');
      }
    } catch (Exception $e) {
      echo '<p>Something went wrong: ' . $e->getMessage() . '</p>';
    }
  } else {
    echo '<p>Please enter a valid email address.</p>';
  }
}

// Function to fetch user data from database
function fetchUser($db, $email)
{
  // Execute query to retrieve user data
  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  return $stmt->fetch();
}

// Function to update user's password in database
function updatePassword($db, $userId, $passwordHash)
{
  // Execute query to update password
  $stmt = $db->prepare('UPDATE users SET password_hash = :passwordHash WHERE id = :id');
  $stmt->bindParam(':passwordHash', $passwordHash);
  $stmt->bindParam(':id', $userId);
  $stmt->execute();
}

// Function to send email notification with new password
function sendEmailNotification($email, $message)
{
  // Replace this with your own email sending library or service
  mail($email, 'Your Password Reset Link', $message);
}


<?php

// Connect to database
include 'db_connection.php'; // Replace with your own db connection script

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user input data
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Query database to retrieve user ID and password reset token
    $query = "SELECT id, password_reset_token FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get the user's ID and password reset token from the result
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];
        $password_reset_token = $row['password_reset_token'];

        // Verify that the password reset token is valid (e.g., has not expired)
        if ($password_reset_token !== null) {
            // Send email with password reset link
            send_password_reset_email($email, $user_id, $password_reset_token);
        } else {
            echo "Password reset token is invalid or has expired.";
        }
    } else {
        echo "User not found";
    }

    // Close database connection
    mysqli_close($conn);
}

// Function to send password reset email
function send_password_reset_email($email, $user_id, $password_reset_token) {
    // Define the email headers and body
    $subject = 'Password Reset';
    $body = "Click on this link to reset your password: http://example.com/reset_password.php?token=$password_reset_token&id=$user_id";

    // Send email using PHP's mail function or a library like SwiftMailer
    // For demonstration purposes, we'll use the PHP mail function
    $headers = "From: example@example.com\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    mail($email, $subject, $body, $headers);

    echo "Password reset email sent successfully!";
}

?>


<?php

// Connect to database
include 'db_connection.php'; // Replace with your own db connection script

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user input data
    $token = $_GET['token'];
    $user_id = $_GET['id'];

    // Verify that the password reset token is valid (e.g., has not expired)
    $query = "SELECT id, password_reset_token FROM users WHERE id = '$user_id' AND password_reset_token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get the user's ID from the result
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];

        // Hash and store new password in database
        $new_password = hash('sha256', $_POST['password']);
        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        mysqli_query($conn, $query);

        echo "Password updated successfully!";
    } else {
        echo "Invalid or expired token";
    }

    // Close database connection
    mysqli_close($conn);
}

?>


function forgotPassword($email) {
  // Connect to database
  $db = new mysqli('localhost', 'username', 'password', 'database');

  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }

  // Check if email exists in database
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $db->query($sql);

  if ($result->num_rows > 0) {
    // If email exists, generate new password and send reset link via email
    $newPassword = substr(md5(uniqid()), 0, 8);
    $hashedPassword = hash('sha256', $newPassword);

    $sql = "UPDATE users SET password = '$hashedPassword' WHERE email = '$email'";
    $db->query($sql);

    // Send reset link via email
    $to = $email;
    $subject = 'Reset Password';
    $message = "Click here to reset your password: <a href='http://yourwebsite.com/reset-password/$newPassword'>$newPassword</a>";
    mail($to, $subject, $message);

    return true; // Email sent successfully
  } else {
    return false; // Email not found in database
  }

  $db->close();
}


function resetPassword($password) {
  // Connect to database
  $db = new mysqli('localhost', 'username', 'password', 'database');

  if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
  }

  // Check if password is valid (not too short, not too common)
  if (strlen($password) < 8 || strpos($password, strtolower($password)) === false) {
    return false; // Invalid password
  }

  // Update user's password in database
  $sql = "UPDATE users SET password = '$password' WHERE reset_password_code = '$password'";
  $db->query($sql);

  return true; // Password updated successfully
}

$db->close();


<?php

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

?>

<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <button type="submit" name="forgot-password">Forgot Password</button>
</form>

<?php
if (isset($_POST['forgot-password'])) {
    // Check if email is valid
    $email = $_POST['email'];
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Generate a new password and send it to the user's email
        $newPassword = substr(md5(uniqid()), 0, 8);
        $to      = $email;
        $subject = 'Your new password';
        $message = 'Dear user, your new password is: '.$newPassword;
        mail($to, $subject, $message);

        // Update the user's password in the database
        $query = "UPDATE users SET password='$newPassword' WHERE email='$email'";
        mysqli_query($conn, $query);
        
        echo 'Your new password has been sent to your email. Please check your email for more information.';
    } else {
        echo 'Email not found. Please try again.';
    }
}
?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send reset link via email
function send_reset_link($email) {
    // Generate random token for password reset
    $token = bin2hex(random_bytes(32));

    // Insert new record into database with token and email
    $sql = "INSERT INTO users (email, password_reset_token) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $email, $token);
    $stmt->execute();

    // Send email with reset link
    $subject = "Reset Password";
    $body = "Click here to reset your password: <a href='https://your_domain.com/reset_password.php?token=$token'>Reset Password</a>";
    $headers = "From: no-reply@your_domain.com\r
";
    mail($email, $subject, $body, $headers);

    return true;
}

// Function to verify reset token and update password
function verify_reset_token($token) {
    // Get user ID from database using token
    $sql = "SELECT id FROM users WHERE password_reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return false;
    }

    // Get user ID from result
    $user_id = $result->fetch_assoc()['id'];

    // Update password using token and user ID
    $sql = "UPDATE users SET password_hash = ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $new_password = 'your_new_password'; // Replace with new password
    $stmt->bind_param("ss", $new_password, $user_id);
    $stmt->execute();

    return true;
}

// Handle forgot password request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form submission
    $email = $_POST['email'];

    // Send reset link via email if user exists in database
    if (send_reset_link($email)) {
        echo "Reset link sent to your email.";
    } else {
        echo "User not found or error sending email.";
    }
}

// Verify reset token and update password if submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['token'])) {
    $token = $_POST['token'];
    if (verify_reset_token($token)) {
        echo "Password updated successfully!";
    } else {
        echo "Invalid token or error updating password.";
    }
}

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

function sendResetLink($email) {
  // Generate a random token
  $token = bin2hex(random_bytes(32));

  // Update user's reset token and expiration time
  $sql = "UPDATE users SET reset_token = '$token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'";
  if ($conn->query($sql) === TRUE) {
    // Send email with reset link
    sendEmail($email, $token);
  } else {
    echo "Error updating user's reset token: " . $conn->error;
  }
}

function sendEmail($email, $token) {
  // Generate reset link
  $resetLink = "http://your-website.com/reset-password?token=$token";

  // Email content
  $subject = "Reset Password";
  $body = "Click the following link to reset your password: $resetLink";

  // Send email using PHPMailer or any other library
  mail($email, $subject, $body);
}

// Handle forgot password form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  sendResetLink($email);
} else {
  echo "Invalid request method";
}

$conn->close();
?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

function resetPassword($token) {
  // Get user's email from token
  $sql = "SELECT email FROM users WHERE reset_token = '$token'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      // Allow user to reset password
      echo "Password successfully reset";
      break;
    }
  } else {
    echo "Invalid token or expired";
  }

  $conn->close();
}

// Handle reset link submission
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
  $token = $_GET['token'];
  resetPassword($token);
} else {
  echo "Invalid request method";
}
?>


<?php

// Include configuration files
require_once 'config.php';

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $email = trim($_POST['email']);

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die('Invalid email address');
    }

    // Check if the user exists in the database
    $stmt = $mysqli->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die('No account found with this email address');
    }

    // Generate a reset token
    $reset_token = bin2hex(random_bytes(32));
    $expiry_time = time() + (60 * 5); // 5 minutes

    // Update the user's reset token in the database
    $stmt = $mysqli->prepare("UPDATE users SET reset_token = ?, expiry_time = ? WHERE email = ?");
    $stmt->bind_param("ss", $reset_token, $expiry_time, $email);
    $stmt->execute();

    // Send a password reset email to the user
    send_reset_email($email, $reset_token);

    echo 'A password reset email has been sent to your email address';
} else {
?>
<form action="" method="post">
    <label for="email">Email Address:</label>
    <input type="email" id="email" name="email" required><br><br>
    <button type="submit">Reset Password</button>
</form>
<?php
}


function send_reset_email($email, $reset_token) {
    // Configuration variables
    $from_email = 'your-email@example.com';
    $from_password = 'your-password';

    // Create a message
    $subject = 'Password Reset for Your Account';
    $body = "Click here to reset your password: <a href='http://your-website.com/reset_password.php?email=$email&reset_token=$reset_token'>Reset Password</a>";

    // Send the email using PHPMailer
    require_once 'PHPMailerAutoload.php';

    $mail = new PHPMailer();

    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = $from_email;
    $mail->Password = $from_password;

    $mail->setFrom($from_email, 'Your Name');
    $mail->addAddress($email);

    $mail->Subject = $subject;
    $mail->Body = $body;
    $mail->AltBody = 'This is a plain-text message body';

    if (!$mail->send()) {
        echo 'Error sending email';
    } else {
        // Update the user's reset token in the database
        // (not shown in this example)
    }
}


<?php

// Include configuration files
require_once 'config.php';

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $email = trim($_POST['email']);
    $reset_token = trim($_POST['reset_token']);

    // Validate reset token and email address
    $stmt = $mysqli->prepare("SELECT id FROM users WHERE email = ? AND reset_token = ?");
    $stmt->bind_param("ss", $email, $reset_token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die('Invalid reset token or email address');
    }

    // Get the user's current password hash
    $user_id = $result->fetch_assoc()['id'];
    $current_password_hash = get_password_hash($user_id);

    // Check if the reset token has expired
    if (time() > $stmt->get_result()->fetch_assoc()['expiry_time']) {
        die('Reset token has expired');
    }

    // Get the new password from user input
    $new_password = trim($_POST['new_password']);

    // Hash and store the new password in the database
    update_password_hash($user_id, hash_password($new_password));

    echo 'Password reset successfully';
} else {
?>
<form action="" method="post">
    <label for="email">Email Address:</label>
    <input type="email" id="email" name="email" value="<?php echo $_GET['email'] ?>" required readonly><br><br>
    <label for="reset_token">Reset Token:</label>
    <input type="text" id="reset_token" name="reset_token" value="<?php echo $_GET['reset_token'] ?>" required readonly><br><br>
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password" required><br><br>
    <button type="submit">Reset Password</button>
</form>
<?php
}


function get_password_hash($user_id) {
    $stmt = $mysqli->prepare("SELECT password FROM users WHERE id = ?");
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    return $stmt->get_result()->fetch_assoc()['password'];
}

function update_password_hash($user_id, $new_password_hash) {
    $stmt = $mysqli->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $new_password_hash, $user_id);
    $stmt->execute();
}

function hash_password($password) {
    // Use a strong hashing algorithm like bcrypt or Argon2
    return password_hash($password, PASSWORD_DEFAULT);
}


<form action="forgot_password.php" method="post">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="reset_password">Reset Password</button>
</form>


<?php

// Define database connection parameters
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check if the form has been submitted
if (isset($_POST['reset_password'])) {
  // Get the email address from the form submission
  $email = $_POST['email'];

  // Query to check if the email exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  // Check if the query returned any results
  if (mysqli_num_rows($result) > 0) {
    // Generate a password reset token and store it in the database
    $token = bin2hex(random_bytes(32));
    $update_query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $update_query);

    // Send an email to the user with instructions on how to reset their password
    send_password_reset_email($email, $token);
  } else {
    echo 'Email not found in database';
  }
}

// Function to send password reset email
function send_password_reset_email($email, $token) {
  // Define email settings
  $from_email = 'your_email@example.com';
  $subject = 'Reset Your Password';

  // Create email message
  $message = "To reset your password, click on the following link: <a href='reset_password.php?token=" . $token . "'>Reset Password</a>";

  // Send email using mail function or a library like SwiftMailer
  mail($email, $subject, $message, 'From:' . $from_email);
}

// Close database connection
mysqli_close($conn);

?>


<form action="reset_password.php" method="post">
  <label for="token">Token:</label>
  <input type="text" id="token" name="token"><br><br>
  <label for="password">New Password:</label>
  <input type="password" id="password" name="password"><br><br>
  <button type="submit" name="reset_password">Reset Password</button>
</form>


<?php

// Define database connection parameters
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check if the form has been submitted
if (isset($_POST['reset_password'])) {
  // Get the token and password from the form submission
  $token = $_POST['token'];
  $password = $_POST['password'];

  // Query to check if the token exists in the database
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($conn, $query);

  // Check if the query returned any results
  if (mysqli_num_rows($result) > 0) {
    // Update the user's password and remove the reset token from the database
    $update_query = "UPDATE users SET password = '$password' WHERE password_reset_token = '$token'";
    mysqli_query($conn, $update_query);

    // Remove the reset token from the database
    $remove_query = "DELETE FROM users WHERE password_reset_token = '$token'";
    mysqli_query($conn, $remove_query);
  } else {
    echo 'Invalid token';
  }
}

// Close database connection
mysqli_close($conn);

?>


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send email using PHPMailer
function send_email($to, $subject, $body) {
    require_once 'PHPMailer/PHPMailer.php';
    $mail = new PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // your SMTP host
    $mail->Port = 587; // or other port
    $mail->Username = 'your_email@gmail.com'; // your email
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@gmail.com', 'Your Name');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $body;
    if (!$mail->send()) {
        echo 'Error sending email: ' . $mail->ErrorInfo;
    }
}

// Function to check if the user exists
function check_user_exists($username) {
    $sql = "SELECT * FROM users WHERE username='" . mysqli_real_escape_string($conn, $username) . "'";
    $result = $conn->query($sql);
    return $result->num_rows > 0;
}

// Function to reset password
function reset_password($token, $new_password) {
    $sql = "UPDATE users SET password='" . mysqli_real_escape_string($conn, $new_password) . "' WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        echo 'Error updating user data: ' . $conn->error;
        return false;
    }
}

// Forgot password function
function forgot_password() {
    // Check if the form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get user input
        $username = $_POST['username'];
        $email = $_POST['email'];

        // Check if the username exists
        if (check_user_exists($username)) {
            // Generate token and insert into database
            $token = bin2hex(random_bytes(32));
            $sql = "UPDATE users SET token='" . mysqli_real_escape_string($conn, $token) . "' WHERE username='" . mysqli_real_escape_string($conn, $username) . "'";
            if ($conn->query($sql) === TRUE) {
                // Send email with reset link
                send_email($email, 'Reset Password', '
                    <p>Click the following link to reset your password:</p>
                    <a href="reset_password.php?token=' . $token . '">Reset Password</a>');
            } else {
                echo 'Error updating user data: ' . $conn->error;
            }
        } else {
            echo 'User not found';
        }
    }

    // If the form was not submitted, show the form
    if (isset($_GET['email'])) {
        echo '
            <form action="" method="post">
                <input type="hidden" name="username" value="' . $_GET['email'] . '">
                <button type="submit">Reset Password</button>
            </form>';
    } else {
        echo '
            <form action="" method="post">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username"><br><br>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email"><br><br>
                <button type="submit">Reset Password</button>
            </form>';
    }
}

// Call the forgot password function
forgot_password();

?>


<?php

// Configuration
$databaseHost = 'localhost';
$databaseName = 'mydatabase';
$databaseUsername = 'myusername';
$databasePassword = 'mypassword';

// Connect to database
$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendResetEmail($email) {
  // Generate random token for password reset
  $token = substr(md5(uniqid(mt_rand(), true)), 0, 32);

  // Insert token into database
  $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
  if ($conn->query($sql) === TRUE) {
    // Send email with reset link
    $subject = 'Reset Password';
    $body = '<p>Please click on the following link to reset your password:</p>
            <p><a href="http://example.com/reset_password.php?token=' . $token . '">Reset Password</a></p>';
    mail($email, $subject, $body);
  } else {
    echo "Error updating record: " . $conn->error;
  }
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get email from form input
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
  } else {
    // Call function to send reset email
    sendResetEmail($email);

    // Display success message
    echo "Password reset link has been sent to your email.";
  }
} else {
  // Display form if not submitted
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <input type="submit" value="Reset Password">
</form>

<?php
}
?>


// Include the database connection script
require_once 'db_connection.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user input
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }

  // Query database to retrieve user data
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) == 1) {
    // Retrieve user data from result set
    $user_data = mysqli_fetch_assoc($result);

    // Generate a reset token and store it in the database
    $reset_token = bin2hex(random_bytes(16));
    $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
    mysqli_query($conn, $update_query);

    // Send email with password reset link to user's email address
    send_password_reset_email($user_data['email'], $reset_token);
  } else {
    echo "Email not found in our database.";
  }
}

// Function to send password reset email
function send_password_reset_email($email, $reset_token) {
  // Set up email headers and body
  $subject = 'Password Reset Request';
  $body = "
    Hello!

    You have requested a password reset for your account. Please click on the following link to reset your password:

    <a href='http://example.com/reset_password.php?reset_token=$reset_token'>Reset Password</a>

    If you did not request a password reset, please ignore this email.

    Best regards,
    [Your Name]
  ";

  // Send email using PHP's mail function
  $headers = 'From: your-email@example.com' . "\r
";
  $headers .= 'Content-Type: text/html; charset=UTF-8' . "\r
";
  mail($email, $subject, $body, $headers);

  echo "Email sent successfully.";
}

// Function to reset password (not implemented in this example)
function reset_password() {
  // TO DO: implement password reset logic here
}


<?php
// Configuration
$dbHost = 'your_database_host';
$dbUsername = 'your_database_username';
$dbPassword = 'your_database_password';
$dbName = 'your_database_name';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($email) {
    // Retrieve user data from email address
    $sql = "SELECT id, password_hash FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();

        // Generate a random password and salt
        $salt = bin2hex(random_bytes(16));
        $password = hash('sha256', 'your_secret_key' . $email . $salt);
        $newPasswordHash = hash('sha256', $password);

        // Update user's password in database
        $sql = "UPDATE users SET password_hash = '$newPasswordHash' WHERE id = '" . $row['id'] . "'";
        if ($conn->query($sql) === TRUE) {
            // Send new password to user via email
            sendEmailNotification($email, $password);
        } else {
            echo "Error updating user's password: " . $conn->error;
        }
    } else {
        echo "No user found with the given email address.";
    }

    $conn->close();
}

function sendEmailNotification($toEmail, $newPassword) {
    // Configuration
    $fromEmail = 'your_email@example.com';
    $smtpHost = 'your_smtp_host';
    $smtpUsername = 'your_smtp_username';
    $smtpPassword = 'your_smtp_password';

    // Send email using PHPMailer (or any other library)
    $email = new PHPMailer\PHPMailer\PHPMailer();

    $email->isSMTP();
    $email->Host       = $smtpHost;
    $email->Username   = $smtpUsername;
    $email->Password   = $smtpPassword;
    $email->Port       = 587;

    $email->setFrom($fromEmail, 'Your Name');
    $email->addAddress($toEmail);

    $email->Subject = 'New Password';
    $email->Body = "Hello User,

Your new password is: $newPassword";

    if (!$email->send()) {
        echo "Error sending email: ";
        print_r($email->getDebugOutput());
    } else {
        echo "Email sent successfully.";
    }
}


forgotPassword('user@example.com');


<?php

// Define the email address of the site admin (for password reset notifications)
$admin_email = 'your-email@example.com';

// Validate the input email address
if (!isset($_POST['email']) || !filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
  header('Location: forgot-password.php?error=Invalid email');
  exit;
}

// Get the user's email address from the database
$email = $_POST['email'];
$sql = 'SELECT * FROM users WHERE email = ?';
$stmt = $conn->prepare($sql);
$stmt->execute([$email]);
$user = $stmt->fetch();

if (!$user) {
  header('Location: forgot-password.php?error=No account found');
  exit;
}

// Generate a new password and store it in the user's database record
$new_password = substr(md5(rand()), 0, 8);
$sql = 'UPDATE users SET password_hash = ? WHERE id = ?';
$stmt = $conn->prepare($sql);
$stmt->execute([$new_password, $user['id']]);

// Send a password reset email to the user
$message = "Hello $user[name],

Your new password is: $new_password

Best regards, [Site Admin]";
mail($email, 'Password Reset', $message);

header('Location: login.php');
exit;

?>


<?php

require_once 'connect_to_database.php'; // Assuming you have this set up for database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {

    $email = trim($_POST['email']);
    
    if (empty($email)) {
        echo json_encode(["error" => "Email is required."]);
        exit;
    }

    $query = "SELECT * FROM users WHERE email = :email";
    try {
        $stmt = $pdo->prepare($query);
        $stmt->execute([':email' => $email]);

        if ($stmt->fetch()) {

            // Send Reset Link
            send_reset_link($email, $_SERVER['HTTP_HOST']);

            echo json_encode(["success" => "Password reset link has been sent to your email."]);
        } else {
            echo json_encode(["error" => "Email not found in our database."]);
        }
    } catch (PDOException $e) {
        echo json_encode(["error" => "Database error: " . $e->getMessage()]);
    }
} ?>

<form method="post">
    Email: <input type="email" name="email" required>
    <button type="submit">Reset Password</button>
</form>

<?php
function send_reset_link($email, $host) {
    // Assuming we have a function to generate token and store it in database temporarily
    $token = generate_token();
    
    // Query to store the temporary token for resetting password
    $query = "UPDATE users SET reset_password_token = :token WHERE email = :email";
    try {
        $stmt = $pdo->prepare($query);
        $stmt->execute([':token' => $token, ':email' => $email]);
        
        // Generate and send the email with link
        $reset_link = "http://$host/reset_password.php?token=$token";
        send_email($email, $reset_link);
    } catch (PDOException $e) {
        echo json_encode(["error" => "Database error: " . $e->getMessage()]);
    }
}
?>


<?php

require_once 'connect_to_database.php';

if ($_SERVER["REQUEST_METHOD"] == "GET") {

    $token = $_GET['token'];

    if (empty($token)) {
        echo json_encode(["error" => "Invalid request."]);
        exit;
    }

    // Check token exists in database
    $query = "SELECT * FROM users WHERE reset_password_token = :token";
    try {
        $stmt = $pdo->prepare($query);
        $stmt->execute([':token' => $token]);

        if ($user = $stmt->fetch()) {

            // Display form to change password
            ?>

            <form method="post">
                New Password: <input type="password" name="new_password" required>
                Confirm Password: <input type="password" name="confirm_password" required>
                <button type="submit">Change Password</button>
            </form>

            <?php

            if ($_SERVER["REQUEST_METHOD"] == "POST") {

                $new_password = trim($_POST['new_password']);
                $confirm_password = trim($_POST['confirm_password']);

                if ($new_password === $confirm_password && strlen($new_password) > 7) { // Simple password requirement check

                    // Update user's password
                    $query = "UPDATE users SET password = :password, reset_password_token = NULL WHERE email = :email";
                    try {
                        $stmt = $pdo->prepare($query);
                        $stmt->execute([':password' => password_hash($new_password, PASSWORD_DEFAULT), ':email' => $user['email']]);

                        echo json_encode(["success" => "Password updated successfully."]);
                    } catch (PDOException $e) {
                        echo json_encode(["error" => "Database error: " . $e->getMessage()]);
                    }
                } else {
                    echo json_encode(["error" => "Passwords do not match or are too short."]);
                }
            }
        } else {
            echo json_encode(["error" => "Invalid token."]);
        }
    } catch (PDOException $e) {
        echo json_encode(["error" => "Database error: " . $e->getMessage()]);
    }
} ?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USERNAME, DB_PASSWORD);

// Function to send password reset email
function sendResetEmail($email) {
  $subject = "Password Reset";
  $message = "Click on the following link to reset your password: <a href='" . $_SERVER['HTTP_ORIGIN'] . "/reset_password.php?token=" . uniqid() . "'>" . $_SERVER['HTTP_ORIGIN'] . "/reset_password.php</a>";
  mail($email, $subject, $message);
}

// Process forgot password request
if (isset($_POST['username']) && isset($_POST['email'])) {
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Check if user exists
  $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username AND email = :email");
  $stmt->bindParam(':username', $username);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $result = $stmt->fetch();

  if ($result) {
    // Send password reset email
    sendResetEmail($email);

    echo "A password reset link has been sent to your email.";
  } else {
    echo "Username or email is incorrect.";
  }
} else {
  echo "Please fill out the form below to request a password reset:";
}

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USERNAME, DB_PASSWORD);

// Function to update password
function updatePassword($email, $token) {
  // Check if token is valid
  $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email AND reset_token = :token");
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $result = $stmt->fetch();

  if ($result) {
    // Update password
    $newPassword = $_POST['password'];
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $stmt = $conn->prepare("UPDATE users SET password_hash = :password_hash WHERE email = :email");
    $stmt->bindParam(':password_hash', $hashedPassword);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    echo "Your password has been updated successfully.";
  } else {
    echo "Invalid token or email.";
  }
}

// Process reset password request
if (isset($_POST['token'])) {
  $token = $_POST['token'];
  updatePassword($_SESSION['email'], $token);
} else {
  echo "Please fill out the form below to reset your password:";
}
?>


<?php

// Configuration
$site_url = 'http://example.com';
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_reset_email($email) {
    // Generate a random token for the user
    $token = bin2hex(random_bytes(16));

    // Update user's token in database
    $query = "UPDATE users SET token='" . $conn->real_escape_string($token) . "' WHERE email='" . $conn->real_escape_string($email) . "'";
    $conn->query($query);

    // Send password reset email
    $to = $email;
    $subject = 'Reset your password';
    $body = 'Click here to reset your password: <a href="' . $site_url . '/reset-password.php?token=' . $token . '">Reset Password</a>';
    mail($to, $subject, $body);

    return $token;
}

// Function to check if email exists
function check_email_exists($email) {
    // Check if user with given email exists in database
    $query = "SELECT * FROM users WHERE email='" . $conn->real_escape_string($email) . "'";
    $result = $conn->query($query);

    return ($result->num_rows > 0);
}

// Function to handle forgot password form submission
function forgot_password() {
    // Check if request method is POST
    if ($_SERVER['REQUEST_METHOD'] != 'POST') {
        die('Invalid request');
    }

    // Get email from form submission
    $email = $_POST['email'];

    // Check if email exists in database
    if (check_email_exists($email)) {
        // Generate a random token for the user
        $token = send_reset_email($email);

        echo 'Email sent with password reset link. Click on the link to reset your password.';
    } else {
        echo 'Invalid email address';
    }
}

// Check if forgot password form submission was made
if (isset($_POST['submit'])) {
    forgot_password();
}
?>


<?php

require_once 'dbconnect.php'; // include your database connection script here

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Check if username and email are not empty
  if (empty($username) || empty($email)) {
    echo "Error: Both username and email are required.";
    exit();
  }

  // Query the database to get the user's data
  $query = "SELECT * FROM users WHERE username='$username' AND email='$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) == 1) {
    // Get the user's id and password hash from the database
    $user_data = mysqli_fetch_assoc($result);
    $user_id = $user_data['id'];

    // Generate a new random password
    $new_password = generateRandomPassword();

    // Update the user's password in the database
    $query = "UPDATE users SET password_hash='$new_password' WHERE id='$user_id'";
    mysqli_query($conn, $query);

    // Send an email to the user with their new password
    sendEmail($email, $new_password);
  } else {
    echo "Error: Invalid username or email.";
  }
}

function generateRandomPassword() {
  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-={}:<>?,./';
  return substr(str_shuffle($chars), 0, 10); // Generate a random password of length 10
}

function sendEmail($email, $new_password) {
  $subject = "Your new password";
  $body = "Dear user,

Your new password is: $new_password

Best regards, The System";

  $mail = mail($email, $subject, $body);
  if ($mail) {
    echo "Email sent successfully.";
  } else {
    echo "Error sending email.";
  }
}

?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // Replace with your secret key

// Function to send password reset email
function send_reset_email($email, $token) {
  $subject = 'Reset Password';
  $body = '<p>Click on the link below to reset your password:</p><a href="' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $token . '">Reset Password</a>';
  mail($email, $subject, $body);
}

// Function to handle forgot password request
function forgot_password() {
  if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
      echo 'Invalid email address';
      exit;
    }

    // Retrieve user from database
    $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');
    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email AND reset_token IS NULL');
    $stmt->execute([':email' => $email]);
    $user = $stmt->fetch();

    if ($user) {
      // Generate random token
      $token = bin2hex(random_bytes(16));

      // Store token in database
      $db->exec('UPDATE users SET reset_token = :token, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = :email');
      $db->close();

      // Send password reset email
      send_reset_email($email, $token);

      echo 'Reset email sent';
    } else {
      echo 'Email not found';
    }
  } else {
    // Display form
    ?>
    <h1>Forgot Password</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
      <label for="email">Email:</label>
      <input type="text" id="email" name="email"><br><br>
      <button type="submit">Submit</button>
    </form>
    <?php
  }
}

forgot_password();

?>


<?php
require_once 'dbconnect.php'; // connect to database

if (isset($_POST['submit'])) {
  $email = $_POST['email'];
  
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }
  
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $sql);
  
  if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
      $user_id = $row['id'];
      $username = $row['username'];
      
      // generate reset password token
      $token = bin2hex(random_bytes(32));
      $sql = "UPDATE users SET reset_token = '$token' WHERE id = '$user_id'";
      mysqli_query($conn, $sql);
      
      // send email with reset link
      $subject = 'Reset your password';
      $message = "Click on the link below to reset your password:
<a href='http://example.com/reset_password.php?token=$token&email=$email'>Reset Password</a>";
      mail($email, $subject, $message);
      
      echo 'Password reset email sent. Please check your email for further instructions.';
    }
  } else {
    echo 'Email not found in database';
  }
} else {
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Enter your email address:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="submit">Send Reset Email</button>
</form>
<?php } ?>


<?php
require_once 'dbconnect.php'; // connect to database

if (isset($_GET['token']) && isset($_GET['email'])) {
  $token = $_GET['token'];
  $email = $_GET['email'];
  
  $sql = "SELECT * FROM users WHERE email = '$email' AND reset_token = '$token'";
  $result = mysqli_query($conn, $sql);
  
  if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
      $user_id = $row['id'];
      
      // allow user to change password
      ?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="new_password">Enter new password:</label>
  <input type="password" id="new_password" name="new_password"><br><br>
  <button type="submit" name="submit">Change Password</button>
</form>
<?php
    }
  } else {
    echo 'Invalid token';
  }
} else {
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Enter your email address:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="submit">Send Reset Email</button>
</form>
<?php } ?>

<?php
if (isset($_POST['submit'])) {
  $new_password = $_POST['new_password'];
  
  if (!preg_match('/^(?=.*[a-zA-Z])(?=.*[0-9]).{8,}$/', $new_password)) {
    echo 'Password must be at least 8 characters long and contain a letter and a number';
    exit;
  }
  
  $sql = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
  mysqli_query($conn, $sql);
  
  echo 'Password changed successfully!';
}
?>


// config.php (database connection settings)
require 'config.php';

function forgotPassword() {
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Check if username exists in database
  $query = "SELECT * FROM users WHERE username = '$username'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    $user_data = mysqli_fetch_assoc($result);

    // Generate a random password and store it temporarily in the database
    $random_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);
    $query = "UPDATE users SET password = '$random_password' WHERE username = '$username'";
    mysqli_query($conn, $query);

    // Send email with new temporary password
    sendEmail($user_data['email'], $random_password);
  } else {
    echo 'Username not found.';
  }
}

function sendEmail($to_email, $password) {
  $subject = 'Temporary Password for your account';
  $body = 'Your temporary password is: '.$password;
  $headers = 'From: no-reply@example.com' . "\r
";
  $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";

  mail($to_email, $subject, $body, $headers);
}

if (isset($_POST['forgot_password'])) {
  forgotPassword();
}


<form action="" method="post">
  <label>Username:</label>
  <input type="text" name="username"><br><br>
  <label>Email:</label>
  <input type="email" name="email"><br><br>
  <button type="submit" name="forgot_password">Forgot Password</button>
</form>


<?php

// Configuration variables
$database_host = 'your_database_host';
$database_username = 'your_database_username';
$database_password = 'your_database_password';
$database_name = 'your_database_name';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the username from the form submission
$username = $_POST['username'];

// Check if the username exists in the database
$sql = "SELECT * FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Get the user's email address
    $row = $result->fetch_assoc();
    $user_email = $row['email'];

    // Generate a new password reset token and store it in the database
    $token = bin2hex(random_bytes(32));
    $sql = "UPDATE users SET password_reset_token = '$token' WHERE username = '$username'";
    $conn->query($sql);

    // Send an email to the user with a link to reset their password
    $subject = 'Reset your password';
    $message = '
        <p>Hello ' . $username . ',</p>
        <p>To reset your password, click on this link:</p>
        <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
        ';
    mail($user_email, $subject, $message);

    echo 'A password reset email has been sent to your email address.';
} else {
    echo 'Username not found.';
}

// Close database connection
$conn->close();

?>


<?php

// Configuration variables
$database_host = 'your_database_host';
$database_username = 'your_database_username';
$database_password = 'your_database_password';
$database_name = 'your_database_name';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the password reset token from the query string
$token = $_GET['token'];

// Check if the token is valid and belongs to a user in the database
$sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Get the user's information
    $row = $result->fetch_assoc();
    $username = $row['username'];
    $email = $row['email'];

    // Create a form to input new password
    echo '
        <h2>Reset Password</h2>
        <form method="post" action="reset_password_complete.php">
            <label for="new_password">New Password:</label>
            <input type="password" id="new_password" name="new_password"><br><br>
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password"><br><br>
            <input type="hidden" name="username" value="' . $username . '">
            <button type="submit">Reset Password</button>
        </form>
        ';

} else {
    echo 'Invalid password reset token.';
}

// Close database connection
$conn->close();

?>


<?php

// Configuration variables
$database_host = 'your_database_host';
$database_username = 'your_database_username';
$database_password = 'your_database_password';
$database_name = 'your_database_name';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the username and new password from the form submission
$username = $_POST['username'];
$new_password = $_POST['new_password'];

// Check if the new password matches the confirmed password
if ($_POST['confirm_password'] != $new_password) {
    echo 'Passwords do not match.';
} else {
    // Update the user's password in the database
    $sql = "UPDATE users SET password_hash = '$new_password' WHERE username = '$username'";
    $conn->query($sql);

    // Remove the password reset token from the user's record in the database
    $sql = "UPDATE users SET password_reset_token = '' WHERE username = '$username'";
    $conn->query($sql);

    echo 'Password updated successfully.';
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database_name';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendResetEmail($email, $resetToken) {
    // You can use a library like PHPMailer or SwiftMailer to send emails
    // For simplicity, we'll just print the email content
    echo "Subject: Reset Password
";
    echo "To: $email
";
    echo "Content-Type: text/plain; charset=utf-8
";
    echo "
";
    echo "Click here to reset your password: http://example.com/reset_password.php?token=$resetToken
";
}

function generateResetToken() {
    // Generate a random token
    return bin2hex(random_bytes(32));
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);
    
    if ($result->num_rows > 0) {
        // User found, generate reset token and send email
        $resetToken = generateResetToken();
        
        // Update user record with new reset token
        $updateQuery = "UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'";
        $conn->query($updateQuery);
        
        // Send reset email to user
        sendResetEmail($email, $resetToken);
    } else {
        echo "User not found!";
    }
} else {
    ?>
    
    <form action="" method="post">
        Email: <input type="text" name="email"><br>
        <input type="submit" value="Send reset email">
    </form>
    
    <?php
}

?>


<?php
  // Configuration variables
  $db_host = 'your_database_host';
  $db_username = 'your_database_username';
  $db_password = 'your_database_password';
  $db_name = 'your_database_name';

  // Connect to the database
  try {
    $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  } catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
    exit;
  }

  // Get the user's email
  $email = $_POST['email'];

  // Check if the email exists in the database
  $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->execute([$email]);
  $user_data = $stmt->fetch();

  // If the email doesn't exist, throw an exception
  if (!$user_data) {
    throw new Exception('Email not found');
  }

  // Generate a password reset token
  $token = bin2hex(random_bytes(32));
  $email_token = hash('sha256', $token . 'secret_key');

  // Store the email and token in the database (for temporary use)
  $stmt = $conn->prepare("INSERT INTO password_reset_tokens (email, token) VALUES (?, ?)");
  $stmt->execute([$email, $token]);

  // Send a reset password email to the user
  send_password_reset_email($user_data['email'], $token);

  echo "A password reset email has been sent to your email address. Please check your inbox.";

  // Disconnect from the database
  $conn = null;
}

// Function to send a password reset email
function send_password_reset_email($email, $token) {
  // Replace with your actual mail service settings
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'your_smtp_host';
  $mail->SMTPAuth = true;
  $mail->Username = 'your_smtp_username';
  $mail->Password = 'your_smtp_password';
  $mail->Port = 587;

  $mail->setFrom('no-reply@example.com', 'Example');
  $mail->addAddress($email);
  $mail->Subject = 'Reset Your Password';
  $mail->Body = "Click on the link below to reset your password: <a href='http://your_website.com/reset-password?token=" . $token . "'>Reset Password</a>";

  if (!$mail->send()) {
    echo 'Mailer Error: ' . $mail->ErrorInfo;
  }
}
?>


<?php
  // Configuration variables
  $db_host = 'your_database_host';
  $db_username = 'your_database_username';
  $db_password = 'your_database_password';
  $db_name = 'your_database_name';

  // Connect to the database
  try {
    $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  } catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
    exit;
  }

  // Get the token from the URL
  $token = $_GET['token'];

  // Check if the token exists in the database
  $stmt = $conn->prepare("SELECT * FROM password_reset_tokens WHERE token = ?");
  $stmt->execute([$token]);
  $user_data = $stmt->fetch();

  // If the token doesn't exist, throw an exception
  if (!$user_data) {
    throw new Exception('Invalid token');
  }

  // Allow the user to set a new password
  echo "Enter your new password: <input type='password' id='new_password'><br>";
  echo "<button id='submit-new-password'>Submit New Password</button>";

  $js_code = "
    <script>
      document.getElementById('submit-new-password').addEventListener('click', function() {
        var newPassword = document.getElementById('new_password').value;
        // Insert the new password into the database
        var xhr = new XMLHttpRequest();
        xhr.open('POST', 'reset-password-insert.php', true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.send('token=" . $token . "&new_password=' + encodeURIComponent(newPassword));
      });
    </script>
  ";

  echo $js_code;

  // Disconnect from the database
  $conn = null;
}

// Page to insert the new password into the database
?>


<!-- forgot-password.php -->

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Validate input data
    if (empty($username) || empty($email)) {
        echo "Please enter both username and email.";
        exit;
    }

    // Find user by username or email
    $user = findUser($username, $email);
    if (!$user) {
        echo "No account found with this username or email.";
        exit;
    }

    // Send reset link via email
    sendResetEmail($user['id']);
}
?>

<form method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username"><br><br>
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <button type="submit">Send Reset Link</button>
</form>


// findUser.php

function findUser($username, $email) {
    global $db;

    // Check if user exists by username or email
    $query = "SELECT * FROM users WHERE (username = '$username' OR email = '$email')";
    return $db->fetchObject($query);
}


// sendResetEmail.php

function sendResetEmail($userId) {
    global $config;

    // Generate reset link and email body
    $resetLink = "http://example.com/reset-password?token=" . generateToken($userId);
    $emailBody = "
        Hello,

        You have requested a password reset for your account. Click the following link to change your password:
        $resetLink

        Best regards,
        [Your Name]
    ";

    // Send email using PHPMailer or similar library
    $mail->setFrom($config['adminEmail'], $config['siteName']);
    $mail->addAddress($userId);
    $mail->Subject = "Password Reset Link";
    $mail->msgHTML($emailBody);

    if (!$mail->send()) {
        echo "Error sending email.";
    }
}

// generateToken.php

function generateToken($userId) {
    return hash('sha256', uniqid('', true));
}


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword() {
  // Get user email from form submission
  $email = $_POST['email'];

  // Query database to retrieve user's reset token and password
  $query = "SELECT * FROM users WHERE email='$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
      $user_id = $row['id'];
      $current_token = $row['reset_token'];

      // Generate new reset token
      $newToken = bin2hex(random_bytes(16));
      $conn->query("UPDATE users SET reset_token='$newToken' WHERE id=$user_id");

      // Send email with password reset link (example using PHPMailer)
      require_once 'PHPMailer/PHPMailerAutoload.php';
      $mail = new PHPMailer;
      $mail->isSMTP();
      $mail->Host = 'smtp.example.com';
      $mail->SMTPAuth = true;
      $mail->Username = 'your_email@example.com';
      $mail->Password = 'your_password';
      $mail->Port = 587;

      $mail->setFrom('your_email@example.com', 'Your Name');
      $mail->addAddress($email);
      $mail->Subject = 'Reset Password';

      $password_reset_link = "http://example.com/reset-password.php?token=$newToken&user_id=$user_id";
      $messageBody = "
        <p>Dear user,</p>
        <p>To reset your password, please click on the following link:</p>
        <a href=\"$password_reset_link\">Reset Password</a>
        ";
      $mail->msgHTML($messageBody);
      if (!$mail->send()) {
          echo 'Message could not be sent.';
          echo 'Mailer Error: ' . $mail->ErrorInfo;
      } else {
          echo "Password reset link has been sent to your email.";
      }
    }
  } else {
    echo "Email not found in database.";
  }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  forgotPassword();
}
?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function resetPassword() {
  // Get user ID and token from URL parameters
  $user_id = $_GET['user_id'];
  $token = $_GET['token'];

  // Query database to retrieve user's password
  $query = "SELECT * FROM users WHERE id=$user_id AND reset_token='$token'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
      // Hash and store new password in database
      $new_password = password_hash($_POST['password'], PASSWORD_DEFAULT);
      $conn->query("UPDATE users SET password='$new_password' WHERE id=$user_id");
      echo "Password reset successfully.";
    }
  } else {
    echo "Invalid token or user ID.";
  }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  resetPassword();
}
?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgot_password() {
  if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $email = $_POST['email'];

    // Validate email
    if (empty($email)) {
      echo 'Error: Email cannot be empty!';
      return;
    }

    // Check if user exists
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // Get user data
      while ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
      }

      // Generate new password and store it in database
      $new_password = bin2hex(random_bytes(16));
      $sql = "UPDATE users SET password_hash = SHA256('$new_password') WHERE id = '$user_id'";
      $conn->query($sql);

      // Send reset email to user
      $to = $email;
      $subject = 'Reset Password';
      $body = "Your new password is: $new_password";
      mail($to, $subject, $body);
      echo 'Password reset email sent!';
    } else {
      echo 'Error: Email not found in database.';
    }
  }
}

// Call forgot_password function
forgot_password();

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASSWORD', 'password');
define('DB_NAME', 'database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send reset password email
function sendResetEmail($email) {
    // Generate random token for password reset
    $token = bin2hex(random_bytes(32));
    
    // Insert new record into tokens table (assuming we have one)
    $insertTokenQuery = "INSERT INTO tokens (user_email, token) VALUES (?, ?)";
    $stmt = $conn->prepare($insertTokenQuery);
    $stmt->bind_param("ss", $email, $token);
    $stmt->execute();
    
    // Send email with link to reset password
    $to = $email;
    $subject = "Reset your password";
    $body = "
        Click on the following link to reset your password:
        http://example.com/reset-password?token=" . urlencode($token)
        
    ";
    mail($to, $subject, $body);
}

// Function to update user's password
function updatePassword($email, $newPassword) {
    // Update user's password in database
    $updatePasswordQuery = "UPDATE users SET password = ? WHERE email = ?";
    $stmt = $conn->prepare($updatePasswordQuery);
    $stmt->bind_param("ss", $newPassword, $email);
    $stmt->execute();
}

// Function to handle forgotten password form submission
function forgotPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get email from form input
        $email = $_POST['email'];
        
        // Check if user exists in database
        $getUserQuery = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($getUserQuery);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Send reset password email
            sendResetEmail($email);
            echo "An email has been sent to your registered email address with a link to reset your password.";
        } else {
            echo "No user found with this email address.";
        }
    }
}

// Function to handle password reset form submission
function resetPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get token and new password from form input
        $token = $_POST['token'];
        $newPassword = $_POST['password'];
        
        // Check if token is valid (we'll assume it's stored in a separate table)
        $getTokenQuery = "SELECT * FROM tokens WHERE token = ?";
        $stmt = $conn->prepare($getTokenQuery);
        $stmt->bind_param("s", $token);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Update user's password
            updatePassword($_POST['email'], $newPassword);
            echo "Your password has been updated successfully.";
        } else {
            echo "Invalid token. Please try again.";
        }
    }
}

// Call functions to handle form submissions
forgotPassword();
if (isset($_GET['token'])) {
    resetPassword();
}
?>


<?php

// Configuration
define('PASSWORD_RESET_TOKEN_EXPIRATION', 3600); // 1 hour in seconds
define('PASSWORD_RESET_TOKEN_SECRET', 'your_secret_key_here');

// Function to generate password reset token
function generate_reset_token($email) {
  $token = bin2hex(random_bytes(32));
  return array(
    'token' => $token,
    'expiration_time' => time() + PASSWORD_RESET_TOKEN_EXPIRATION
  );
}

// Function to send email with reset link
function send_password_reset_email($email, $reset_token) {
  // Load email template (e.g. using Twig or Mustache)
  $template = '
  <p>Hello {{ name }},</p>
  <p>Click the link below to reset your password:</p>
  <a href="{{ link }}">{{ link }}</a>
  ';

  // Replace placeholders
  $template = str_replace('{{ name }}', 'John Doe', $template);
  $template = str_replace('{{ link }}', 'http://example.com/reset-password?token=' . $reset_token, $template);

  // Send email using your preferred library (e.g. PHPMailer)
  // ...
}

// Handle forgot password request
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo json_encode(array('error' => 'Invalid email'));
    exit;
  }

  // Check if user exists
  $user = db_query("SELECT * FROM users WHERE email = '$email'");
  if ($user->num_rows === 0) {
    echo json_encode(array('error' => 'User not found'));
    exit;
  }

  // Generate reset token
  $reset_token_data = generate_reset_token($email);
  $token = $reset_token_data['token'];
  $expiration_time = $reset_token_data['expiration_time'];

  // Save reset token in database (e.g. create a new table for tokens)
  db_query("INSERT INTO password_reset_tokens (user_id, token, expiration_time) VALUES ('" . $user->id . "', '$token', '" . $expiration_time . "')");

  // Send email with reset link
  send_password_reset_email($email, $token);

  echo json_encode(array('success' => 'Email sent'));
} else {
  echo json_encode(array('error' => 'Invalid request method'));
}


<?php
// Define constants for database connection and email settings
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Email settings
define('EMAIL_FROM', 'your_email@example.com');
define('EMAIL_TO', '%s'); // Recipient's email address (will be replaced with user's email)

require_once 'dbconnect.php'; // Database connection script

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    try {
        // Retrieve user data from database
        $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username OR email = :email');
        $stmt->execute([':username' => $username, ':email' => $email]);
        $user_data = $stmt->fetch();

        if ($user_data) {
            // Generate a unique password reset token
            $token = bin2hex(random_bytes(16));

            // Update user data with password reset token in database
            $stmt = $pdo->prepare('UPDATE users SET password_reset_token = :token WHERE id = :id');
            $stmt->execute([':token' => $token, ':id' => $user_data['id']]);

            // Send email to user with password reset link
            $subject = 'Password Reset for '. $username;
            $message = sprintf(
                'Hello %s,
                Click the following link to reset your password:
                <a href="%s">Reset Password</a>
                Best regards, 
                Your Website Team',
                $_POST['email'],
                'reset_password.php?token='. $token
            );

            // Send email using PHP's mail function or a library like SwiftMailer
            mail(EMAIL_TO, $subject, $message);

            echo "Email sent with password reset link!";
        } else {
            echo "No user found with the provided credentials.";
        }
    } catch (PDOException $e) {
        echo "Error: ". $e->getMessage();
    }
} else {
    ?>
    <h1>Forgot Password</h1>
    <form method="POST">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>
        <button type="submit">Reset Password</button>
    </form>
    <?php
}
?>


<?php
// Define constants for database connection and email settings (same as forgot_password.php)

require_once 'dbconnect.php'; // Database connection script

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $token = $_GET['token'];
    $password = $_POST['password'];

    try {
        // Retrieve user data from database using password reset token
        $stmt = $pdo->prepare('SELECT * FROM users WHERE password_reset_token = :token');
        $stmt->execute([':token' => $token]);
        $user_data = $stmt->fetch();

        if ($user_data) {
            // Update user's password in database
            $password_hash = password_hash($password, PASSWORD_DEFAULT);
            $stmt = $pdo->prepare('UPDATE users SET password_hash = :hash WHERE id = :id');
            $stmt->execute([':hash' => $password_hash, ':id' => $user_data['id']]);

            // Delete password reset token from database
            $stmt = $pdo->prepare('DELETE FROM users WHERE password_reset_token = :token AND id = :id');
            $stmt->execute([':token' => $token, ':id' => $user_data['id']]);

            echo "Password updated successfully!";
        } else {
            echo "Invalid password reset token.";
        }
    } catch (PDOException $e) {
        echo "Error: ". $e->getMessage();
    }
} else {
    ?>
    <h1>Reset Password</h1>
    <?php
    if (!isset($_GET['token'])) {
        // Display a message to the user asking for their email address
        echo 'Please enter your email address and we will send you a password reset link.';
    } else {
        // Verify token and display form to update password
        $token = $_GET['token'];
        try {
            $stmt = $pdo->prepare('SELECT * FROM users WHERE password_reset_token = :token');
            $stmt->execute([':token' => $token]);
            $user_data = $stmt->fetch();

            if ($user_data) {
                ?>
                <form method="POST">
                    <label for="password">New Password:</label><br>
                    <input type="password" id="password" name="password"><br>
                    <button type="submit">Reset Password</button>
                </form>
                <?php
            } else {
                echo "Invalid password reset token.";
            }
        } catch (PDOException $e) {
            echo "Error: ". $e->getMessage();
        }
    }
}
?>


<?php

require_once 'database.php'; // assuming you have a database connection class

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  
  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    header('Location: forgot_password.php?error=invalid_email');
    exit;
  }
  
  // Query the database to retrieve the user's ID and password hash
  $query = "SELECT id, password_hash FROM users WHERE email = ?";
  $stmt = $db->prepare($query);
  $stmt->execute([$email]);
  $result = $stmt->fetch();
  
  if ($result) {
    // Generate a reset token
    $token = bin2hex(random_bytes(32));
    
    // Update the user's record with the new reset token
    $query = "UPDATE users SET password_reset_token = ? WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->execute([$token, $result['id']]);
    
    // Send a password reset email to the user
    send_password_reset_email($email, $token);
    
    header('Location: login.php?success=forgot_password');
    exit;
  } else {
    header('Location: forgot_password.php?error=invalid_email_or_password');
    exit;
  }
}

// Function to generate and send a password reset email
function send_password_reset_email($email, $token) {
  $subject = 'Password Reset';
  $message = "Click the link below to reset your password:
  <a href='reset_password.php?token={$token}'>Reset Password</a>";
  
  mail($email, $subject, $message);
}

// Display the forgot password form
?>

<form action="" method="post">
  <label for="email">Email:</label>
  <input type="email" name="email" id="email" required>
  <button type="submit">Submit</button>
</form>

<?php if (isset($_GET['error'])): ?>
  <p style="color: red;">Error: <?= $_GET['error'] ?></p>
<?php endif; ?>


<?php

class Database {
  private $db;
  
  public function __construct() {
    // Connect to the database
    $this->db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');
  }
  
  public function prepare($query) {
    return $this->db->prepare($query);
  }
  
  public function execute($stmt, $params) {
    return $stmt->execute($params);
  }
  
  public function fetch($result) {
    return $result->fetch();
  }
}


<?php

// Include configuration file
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Query database to retrieve user ID and password reset token
    $query = "SELECT id, password_reset_token FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);

        // Generate new password reset link
        $passwordResetLink = "http://example.com/reset-password?token=" . $row['password_reset_token'] . "&email=$email";

        // Send email with password reset link
        sendEmail($email, 'Reset Password', $passwordResetLink);
    } else {
        echo "Invalid email or account not found.";
    }
}

// Function to send email using PHPMailer (or your preferred library)
function sendEmail($toEmail, $subject, $message) {
    require_once 'PHPMailer/PHPMailerAutoload.php';
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->CharSet = 'UTF-8';
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($toEmail);
    $mail->Subject = $subject;
    $mail->Body = $message;
    if (!$mail->send()) {
        echo "Error sending email: " . $mail->ErrorInfo;
    }
}

// Include HTML form
include_once 'forgot-password-form.php';

?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required>
    <button type="submit">Reset Password</button>
</form>

<?php
// Display error message if form submission was unsuccessful
if (isset($_GET['error'])) {
    echo '<p style="color: red;">' . $_GET['error'] . '</p>';
}
?>

</body>
</html>


<?php

// Configuration
$db_host = 'your_database_host';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Form data
$email = $_POST['email'];

// Check if email exists in database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Email found, proceed with password reset

    // Generate a random password
    $new_password = bin2hex(random_bytes(16));

    // Update user's password in database
    $update_query = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email'";
    $conn->query($update_query);

    // Send email to user with new password
    $subject = 'Your temporary password';
    $body = "Dear user,

Your temporary password is: $new_password

Best regards,
[Your Name]";
    mail($email, $subject, $body);

    echo "Password reset successfully sent to your email.";
} else {
    echo "Email not found in our database. Please try again.";
}

// Close connection
$conn->close();

?>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Handle form submission
  $email = $_POST['email'];
  $username = $_POST['username'];

  // Query database to retrieve user's email and password
  $query = "SELECT * FROM users WHERE email = '$email' AND username = '$username'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // User exists, generate new password and send reset link via email
    $user_data = mysqli_fetch_assoc($result);
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
    $reset_link = "http://example.com/reset-password?email=$email&username=$username&password=$new_password";

    // Send password reset email
    mail($user_data['email'], 'Password Reset', "Your new password is: $new_password

Click the link below to reset your password:
$reset_link");

    echo "A password reset link has been sent to your email.";
  } else {
    echo "Invalid email or username.";
  }
}
?>

<form action="" method="post">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <input type="submit" value="Send Reset Link">
</form>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
  $email = $_GET['email'];
  $username = $_GET['username'];
  $password = $_GET['password'];

  // Verify password reset link and update user's password
  if ($email && $username && $password) {
    $query = "UPDATE users SET password = '$password' WHERE email = '$email' AND username = '$username'";
    mysqli_query($conn, $query);

    echo "Your password has been successfully updated.";
  } else {
    echo "Invalid reset link.";
  }
}
?>

<form action="" method="post">
  <label for="new_password">New Password:</label>
  <input type="password" id="new_password" name="new_password"><br><br>
  <input type="submit" value="Update Password">
</form>


<?php

// Configuration - adjust paths according to your environment
define('ROOT', dirname(__FILE__));

// Email Sending Function
function sendEmail($to, $subject, $body) {
    // Use a mail library or function here. This example uses PHP's built-in mail()
    $headers = 'From: your-website@example.com';
    mail($to, $subject, $body, $headers);
}

// Forgot Password Function
function forgotPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Form Data Validation
        if (!empty($_POST['username']) && !empty($_POST['email'])) {
            $username = $_POST['username'];
            $email = $_POST['email'];

            // Query Database to verify the user exists and update their details.
            try {
                require_once('database.php'); // Assuming database connection file
                $sql = "SELECT * FROM users WHERE username = ? OR email = ?";
                $stmt = $db->prepare($sql);
                $stmt->execute([$username, $email]);
                $result = $stmt->fetch();

                if ($result) {
                    // Generate a random reset token
                    $resetToken = bin2hex(random_bytes(32));
                    $sql = "UPDATE users SET reset_link = ? WHERE username = ? OR email = ?";
                    $stmt = $db->prepare($sql);
                    $stmt->execute([$resetToken, $username, $email]);

                    // Email with Reset Link
                    $subject = 'Reset Password';
                    $body = "Click this link to reset your password: http://example.com/reset?token=$resetToken";
                    sendEmail($email, $subject, $body);

                    echo 'A password reset email has been sent to you.';
                } else {
                    echo 'User not found.';
                }
            } catch (PDOException $e) {
                // Handle any database errors here
            }
        } else {
            echo 'Please fill in all fields.';
        }
    } else {
        // Display the forgot password form if not a POST request.
        ?>
        <form method="post">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username"><br><br>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email"><br><br>
            <input type="submit" value="Send Password Reset Link">
        </form>
        <?php
    }
}

// Call the forgot password function
forgotPassword();

?>


<?php
require_once('database.php'); // Assuming database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        $resetToken = $_GET['token'];
        $newPassword = $_POST['password'];

        if (!empty($resetToken) && !empty($newPassword)) {
            $sql = "UPDATE users SET reset_link = ?, password_hash = ? WHERE reset_link = ?";
            $stmt = $db->prepare($sql);
            $hashedNewPassword = password_hash($newPassword, PASSWORD_DEFAULT); // Use a secure hashing method
            $stmt->execute([$resetToken, $hashedNewPassword, $resetToken]);

            echo 'Your password has been successfully updated.';
        } else {
            echo 'Invalid request';
        }
    } catch (PDOException $e) {
        // Handle any database errors here
    }
} else {
    ?>
    <form method="post">
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password"><br><br>
        <input type="submit" value="Update Password">
    </form>
    <?php
}
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database');

// Connect to database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if email is set
if (isset($_POST['email'])) {

    // Sanitize input
    $email = trim($_POST['email']);

    // Query to check if user exists with given email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {

        // Get user's ID and password reset token
        $user_data = mysqli_fetch_assoc($result);
        $password_reset_token = bin2hex(random_bytes(32));

        // Update user data with new password reset token
        $query_update = "UPDATE users SET password_reset_token = '$password_reset_token' WHERE id = '" . $user_data['id'] . "'";
        mysqli_query($conn, $query_update);

        // Send email to user with password reset link
        send_password_reset_email($email, $password_reset_token);
    } else {
        echo "Email not found.";
    }

} else {
    echo "Please enter your email address.";
}

// Close database connection
mysqli_close($conn);

// Function to send password reset email
function send_password_reset_email($email, $token) {
    // Send mail using PHPMailer or your preferred method
    $subject = 'Password Reset';
    $body = "Click this link to reset your password: <a href='reset_password.php?token=" . $token . "'>Reset Password</a>";
    $headers = "From: info@example.com";

    if (mail($email, $subject, $body, $headers)) {
        echo "Email sent.";
    } else {
        echo "Error sending email.";
    }
}

?>


<?php

// Configuration
$dsn = 'mysql:host=localhost;dbname=your_database_name';
$username = 'your_database_username';
$password = 'your_database_password';

try {
    // Connect to database
    $conn = new PDO($dsn, $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Forgot password form handler
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Get email from POST request
    $email = $_POST['email'];

    try {
        // Retrieve user data from database
        $stmt = $conn->prepare('SELECT * FROM users WHERE email = :email');
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() === 0) {
            echo "Email not found.";
            return;
        }

        // Generate reset token
        $token = bin2hex(random_bytes(32));

        // Update user data in database with new token
        $updateStmt = $conn->prepare('UPDATE users SET token = :token WHERE email = :email');
        $updateStmt->bindParam(':token', $token);
        $updateStmt->bindParam(':email', $email);
        $updateStmt->execute();

        // Send reset link via email
        sendResetEmail($token, $email);

        echo "Password reset link sent to your email. Please check your inbox.";

    } catch (PDOException $e) {
        echo "Database error: " . $e->getMessage();
    }

}

// Function to send password reset link via email
function sendResetEmail($token, $email) {

    // Send mail using PHPMailer library or any other mail function
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com'; // Use your SMTP host here
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;

    $mail->Username = 'your_smtp_email@gmail.com'; // Your email address
    $mail->Password = 'your_smtp_password'; // Your SMTP password

    $mail->setFrom('your_smtp_email@gmail.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Reset Password Link';
    $mail->Body = 'Click on the link below to reset your password: <a href="http://your-website.com/reset-password.php?token=' . $token . '">Reset Password</a>';

    if (!$mail->send()) {
        echo "Error sending email: " . $mail->ErrorInfo;
    }
}

?>


<?php

// Define database connection settings
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get input values
$username_or_email = $_POST['username_or_email'];

// SQL query to retrieve user ID
$sql = "SELECT id FROM users WHERE username = '$username_or_email' OR email = '$username_or_email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // Get the user's ID
  $user_id = $result->fetch_assoc()['id'];

  // Generate a reset token
  $reset_token = bin2hex(random_bytes(32));

  // Insert the reset token into the database
  $sql = "INSERT INTO password_resets (user_id, reset_token) VALUES ('$user_id', '$reset_token')";
  $conn->query($sql);

  // Send an email with a link to reset the password
  send_reset_email($username_or_email, $reset_token);
} else {
  echo "Username or email not found.";
}

// Close database connection
$conn->close();

function send_reset_email($email, $token) {
  // Your SMTP settings here (e.g. Gmail)
  $smtp_host = "smtp.gmail.com";
  $smtp_username = "your_email@gmail.com";
  $smtp_password = "your_email_password";

  $subject = "Reset Password Link";
  $body = "Click this link to reset your password: <a href='reset-password.php?token=$token'>Reset Password</a>";

  // Send the email
  $headers = "From: no-reply@yourdomain.com\r
";
  $headers .= "MIME-Version: 1.0\r
";
  $headers .= "Content-Type: text/html; charset=UTF-8\r
";

  mail($email, $subject, $body, $headers);
}

?>


<?php

// Define database connection settings
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get input values
$token = $_GET['token'];

// SQL query to retrieve the user's ID
$sql = "SELECT id FROM password_resets WHERE reset_token = '$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // Get the user's ID
  $user_id = $result->fetch_assoc()['id'];

  // Create a new form to change the password
  echo "<form action='update-password.php' method='post'>";
  echo "New Password: <input type='password' name='new_password'/>";
  echo "<button type='submit'>Change Password</button>";
  echo "</form>";

} else {
  echo "Invalid reset token.";
}

// Close database connection
$conn->close();

?>


<?php

// Define database connection settings
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get input values
$new_password = $_POST['new_password'];

// SQL query to update the user's password
$sql = "UPDATE users SET password_hash = '$new_password' WHERE id = 'user_id'";
$conn->query($sql);

// Close database connection
$conn->close();

?>


<?php

// Configuration variables
$database_host = 'your_database_host';
$database_username = 'your_database_username';
$database_password = 'your_database_password';
$database_name = 'your_database_name';

// Connect to database
$conn = new mysqli($database_host, $database_username, $database_password, $database_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Validate form data
if (isset($_POST['email'])) {
  // Sanitize email address
  $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

  // Check if user exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Retrieve user data
    $row = $result->fetch_assoc();

    // Generate a new password and send it to the user via email
    $new_password = generate_new_password();
    send_email($email, $new_password);
  } else {
    echo "Email not found.";
  }
}

// Function to generate a new password
function generate_new_password() {
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < 10; $i++) {
    $password .= substr($characters, rand(0, strlen($characters) - 1), 1);
  }
  return $password;
}

// Function to send email
function send_email($email, $new_password) {
  $to = $email;
  $subject = 'New Password';
  $message = "Your new password is: $new_password";
  $headers = 'From: your_email@example.com' . "\r
" .
             'Reply-To: your_email@example.com' . "\r
" .
             'X-Mailer: PHP/' . phpversion();
  mail($to, $subject, $message, $headers);
}

?>


<form action="forgot_password.php" method="post">
  <input type="email" name="email" placeholder="Enter your email address">
  <button type="submit">Submit</button>
</form>


<?php

// Include database connection file
require_once 'db_connection.php';

// Define variables for the forgot password form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input from the form
    $email = $_POST['email'];

    // Query to check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    // Check if result is not empty
    if (mysqli_num_rows($result) > 0) {

        // Get user's ID from the query results
        $user_id = mysqli_fetch_assoc($result)['id'];

        // Generate a new password
        $new_password = bin2hex(random_bytes(10));

        // Query to update user's password in the database
        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        mysqli_query($conn, $query);

        // Send email with the new password
        sendEmail($email, $new_password);

        echo "Password has been sent to your email. Please check your inbox.";
    } else {
        echo "Email does not exist in our database.";
    }

    // Close connection
    mysqli_close($conn);
} else {

    // Display forgot password form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="email" name="email"><br>
        <button type="submit">Send Password</button>
    </form>
    <?php
}

// Function to send email with new password
function sendEmail($to_email, $new_password) {
    // Use PHPMailer library or a similar library to send email
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();

    $mail->isSMTP();
    $mail->Host       = 'smtp.example.com';
    $mail->Username   = 'example@example.com';
    $mail->Password   = 'password';
    $mail->Port       = 587;
    $mail->CharSet     = 'UTF-8';

    $mail->setFrom('example@example.com', 'Your Name');
    $mail->addAddress($to_email);
    $mail->isHTML(true);

    $body = '
        <p>Dear User,</p>
        <p>Your new password is:</p>
        <h2>' . $new_password . '</h2>
        <p>Thank you for using our website!</p>
    ';

    $mail->Body = $body;
    $mail->AltBody = 'This is a plain-text message body';

    if (!$mail->send()) {
        echo "Message could not be sent. Error: ";
        echo $mail->ErrorInfo;
    }
}
?>


<?php

// Include config file
require_once 'config.php';

if (isset($_POST['submit'])) {
    // Get user input from form submission
    $email = $_POST['email'];

    try {
        // Check if email exists in database
        $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Email exists, generate reset token and send email with link to reset password
            $user = $stmt->fetch();
            $resetToken = bin2hex(random_bytes(50));
            $pdo->exec("UPDATE users SET reset_token = '$resetToken' WHERE id = " . $user['id']);

            // Send email with reset link
            $to      = $email;
            $subject = 'Reset Password Link';
            $message = '
                <html>
                    <body>
                        <p>Hello, please click on the link below to reset your password:</p>
                        <a href="reset_password.php?token=' . $resetToken . '">Reset Password</a>
                    </body>
                </html>
            ';
            $headers  = 'MIME-Version: 1.0' . "\r
";
            $headers .= 'Content-type:text/html; charset=iso-8859-1' . "\r
";
            mail($to, $subject, $message, $headers);

            // Display success message
            echo '<p>Reset link has been sent to your email.</p>';
        } else {
            // Email does not exist in database
            echo '<p>Email address is not registered.</p>';
        }
    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

?>


<?php

// Include config file
require_once 'config.php';

if (isset($_GET['token'])) {
    // Get user input from form submission
    $resetToken = $_GET['token'];

    try {
        // Check if reset token exists in database
        $stmt = $pdo->prepare('SELECT * FROM users WHERE reset_token = :reset_token');
        $stmt->bindParam(':reset_token', $resetToken);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Reset token exists, display form to enter new password
            echo '<form action="update_password.php" method="post">
                <label for="new_password">New Password:</label>
                <input type="password" id="new_password" name="new_password"><br><br>
                <label for="confirm_new_password">Confirm New Password:</label>
                <input type="password" id="confirm_new_password" name="confirm_new_password"><br><br>
                <input type="hidden" name="reset_token" value="' . $resetToken . '">
                <input type="submit" name="submit" value="Update Password">
            </form>';
        } else {
            // Reset token does not exist in database
            echo '<p>Invalid reset token.</p>';
        }
    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

?>


<?php

// Include config file
require_once 'config.php';

if (isset($_POST['submit'])) {
    // Get user input from form submission
    $newPassword = $_POST['new_password'];
    $confirmNewPassword = $_POST['confirm_new_password'];
    $resetToken = $_POST['reset_token'];

    try {
        // Check if new password and confirm new password match
        if ($newPassword == $confirmNewPassword) {
            // Update user's password in database
            $stmt = $pdo->prepare('UPDATE users SET password = :password WHERE reset_token = :reset_token');
            $stmt->bindParam(':password', $newPassword);
            $stmt->bindParam(':reset_token', $resetToken);
            $stmt->execute();

            // Display success message
            echo '<p>Password updated successfully.</p>';
        } else {
            // New password and confirm new password do not match
            echo '<p>New passwords do not match.</p>';
        }
    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

?>


<?php

// Configuration settings
$site_name = 'Your Site Name';
$from_email = 'your-email@example.com';
$smtp_password = 'your-smtp-password'; // if using SMTP server, set your password here

// Database connection settings
$db_host = 'localhost';
$db_username = 'your-db-username';
$db_password = 'your-db-password';
$db_name = 'your-db-name';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check if the user has submitted the forgot password form
if (isset($_POST['submit'])) {

    // Get the email address from the form data
    $email = $_POST['email'];

    // Query to retrieve the user's data
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    // If a user is found, generate a temporary password and send them an email with the link to reset their password
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {

            // Generate a random temporary password
            $password = uniqid('', true);
            $hashed_password = md5($password);

            // Query to update the user's hashed password in the database
            $query_update = "UPDATE users SET hashed_password = '$hashed_password' WHERE email = '$email'";
            mysqli_query($conn, $query_update);

            // Send an email with a link to reset their password
            $subject = 'Temporary Password Reset Link';
            $body = '
                <html>
                    <head></head>
                    <body>
                        Hello '.$row['first_name'].',
                        <p>Please click on the following link to reset your password:</p>
                        <a href="reset-password.php?email='.$email.'&hashed_password='.$hashed_password.'">Reset Password</a>
                    </body>
                </html>';

            // If using SMTP server, use this configuration
            if (isset($smtp_password)) {
                $headers = 'From: ' . $from_email . "\r
" .
                            'Reply-To: ' . $email . "\r
" .
                            'X-Mailer: PHP/' . phpversion();
                mail($email, $subject, $body, $headers);
            } else { // If not using SMTP server, use this configuration
                mail($email, $subject, $body);
            }
        }
    }

    // Display a message to let the user know their password has been reset and an email sent with the link to reset it.
    echo 'A temporary password has been generated and emailed to you. Please check your email for further instructions.';
} else {
    ?>
    <form action="" method="post">
        <input type="email" name="email" placeholder="Enter your Email Address">
        <button type="submit" name="submit">Submit</button>
    </form>
    <?php
}
?>


<?php

// Configuration settings
$site_name = 'Your Site Name';
$from_email = 'your-email@example.com';

// Database connection settings
$db_host = 'localhost';
$db_username = 'your-db-username';
$db_password = 'your-db-password';
$db_name = 'your-db-name';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Get the email address and hashed password from the URL parameters
$email = $_GET['email'];
$hashed_password = $_GET['hashed_password'];

// Query to retrieve the user's data
$query = "SELECT * FROM users WHERE email = '$email' AND hashed_password = '$hashed_password'";
$result = mysqli_query($conn, $query);

// If a user is found and their hashed password matches, display a form to let them change their password.
if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        ?>
        <form action="" method="post">
            <input type="hidden" name="email" value="<?php echo $email; ?>">
            <input type="password" name="new_password" placeholder="Enter New Password">
            <button type="submit" name="change_password">Change Password</button>
        </form>
        <?php
    }
} else {
    // Display an error message if the user does not exist or their hashed password does not match.
    echo 'Invalid email address or temporary password.';
}

// If the form has been submitted, update the user's hashed password in the database with their new password.
if (isset($_POST['change_password'])) {

    // Get the email address and new password from the form data
    $email = $_POST['email'];
    $new_password = md5($_POST['new_password']);

    // Query to update the user's hashed password in the database
    $query_update = "UPDATE users SET hashed_password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query_update);

    // Display a success message and let them log in with their new password.
    echo 'Password changed successfully. You can now log in with your new password.';
}
?>


<?php

// Configuration settings
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define ('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to Database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle the form submission
if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Query to check for user existence
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();

        // Generate a new password
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
        
        // Update the user's password in database
        $update_sql = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
        $conn->query($update_sql);

        // Email settings
        $to = $email;
        $subject = 'Your new password';
        $message = 'Dear User, your new password is: '.$new_password;

        // Send the email using mail() function (this is a basic example and may require configuration)
        if(mail($to,$subject,$message)) {
            echo '<div class="alert alert-success">New password sent successfully!</div>';
        } else {
            echo '<div class="alert alert-danger">Failed to send new password.</div>';
        }
    } else {
        echo '<div class="alert alert-danger">User not found.</div>';
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .alert {
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .success {
            background-color: #3e8e41;
            color: white;
        }
        .danger {
            background-color: #dc3545;
            color: white;
        }
    </style>
</head>
<body>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Enter your email address"><br><br>
    <button type="submit" class="btn btn-primary" name="submit">Send new password</button>
</form>

<?php
// Display any messages here
?>

</body>
</html>


<?php

// Configuration variables
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_database_username';
$password = 'your_database_password';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

// Get the username and email from the form data
$username = $_POST['username'];
$email = $_POST['email'];

// Query to get user's ID based on username and email
$query = "SELECT id FROM users WHERE username='$username' AND email='$email'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    echo 'Username or Email not found';
} else {
    // Get the user's ID
    $user_id = mysqli_fetch_assoc($result)['id'];

    // Generate a new password and store it in the database
    $new_password = substr(md5(uniqid()), 0, 8);
    $query = "UPDATE users SET password='$new_password' WHERE id='$user_id'";
    mysqli_query($conn, $query);

    // Send an email with the new password to the user's email address
    $subject = 'Your New Password';
    $message = "Dear $username,

Your new password is: $new_password";
    $from = 'your_email@example.com';
    $to = $email;
    mail($to, $subject, $message, 'From: ' . $from);

    echo 'New password sent to your email address.';
}

// Close the database connection
mysqli_close($conn);
?>


<?php

// Define the database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define the email validation function
function validate_email($email) {
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return true;
    } else {
        return false;
    }
}

// Define the password reset function
function forgot_password($email) {
    // Check if the user exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Get the user's ID and name from the result set
        $row = $result->fetch_assoc();
        $user_id = $row['id'];
        $name = $row['name'];

        // Generate a random password reset token
        $token = bin2hex(random_bytes(32));

        // Insert the token into the database for this user
        $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
        $conn->query($query);

        // Send an email with a link to reset the password
        send_password_reset_email($email, $name, $token);
    } else {
        return false; // Email not found in database
    }
}

// Define the function to send the password reset email
function send_password_reset_email($email, $name, $token) {
    // Send an email with a link to reset the password
    $subject = 'Reset your password';
    $body = '
        Dear ' . $name . ',
        
        To reset your password, click on this link:
        <a href="http://yourwebsite.com/reset-password.php?email=' . $email . '&token=' . $token . '">Reset Password</a>
        
        Best regards,
        Your Website
    ';

    // Send the email using PHP's mail function or a library like SwiftMailer
    // For example:
    mail($email, $subject, $body);
}

?>


<?php

// Include the forgot password function code above
include 'forgot_password.php';

if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    if (validate_email($email)) {
        // Call the forgot password function to generate a new token and send an email
        forgot_password($email);
        echo 'Email sent with reset link.';
    } else {
        echo 'Invalid email address';
    }
}

?>

<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" name="email" id="email"><br><br>
    <input type="submit" name="submit" value="Send Email with Reset Link">
</form>


<?php

// Include the forgot password function code above
include 'forgot_password.php';

if (isset($_GET['email']) && isset($_GET['token'])) {
    $email = $_GET['email'];
    $token = $_GET['token'];

    // Validate the token and reset the password if it's valid
    validate_token($email, $token);
}

?>

<form action="" method="post">
    <label for="new_password">New Password:</label>
    <input type="password" name="new_password" id="new_password"><br><br>
    <label for="confirm_new_password">Confirm New Password:</label>
    <input type="password" name="confirm_new_password" id="confirm_new_password"><br><br>
    <input type="submit" name="reset" value="Reset Password">
</form>

<?php
function validate_token($email, $token) {
    // Check if the token is valid for this user
    $query = "SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // If the token is valid, reset the password to a new random value
        $row = $result->fetch_assoc();
        $user_id = $row['id'];
        $new_password = bin2hex(random_bytes(32));

        // Update the user's password in the database
        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        $conn->query($query);

        echo 'Password reset successfully.';
    } else {
        return false; // Token not valid for this user
    }
}
?>


// config.php (store database credentials and other settings)
<?php

define('DB_HOST', 'localhost');
define('DB_USERNAME', 'username');
define('DB_PASSWORD', 'password');
define('DB_NAME', 'database_name');

?>


// forgot_password.php
<?php

require_once 'config.php';

// If the user has clicked on the "Forgot Password" link, this script will run.
if (isset($_POST['email'])) {
  // Get the email address from the form submission.
  $email = $_POST['email'];

  // Check if the email address is associated with an account in the database.
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $sql);

  if (mysqli_num_rows($result) > 0) {
    // If the email address is found, generate a password reset token and send an email to the user.
    $token = bin2hex(random_bytes(32));
    $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $sql);

    // Send an email to the user with a link to reset their password.
    $to = $email;
    $subject = 'Reset Your Password';
    $message = "
      <html>
        <body>
          <p>Click on this link to reset your password:</p>
          <a href='reset_password.php?token=$token'>Reset Password</a>
        </body>
      </html>
    ";

    // Send the email using PHP's mail function or a library like SwiftMailer.
    $headers = 'From: example@example.com' . "\r
" .
      'Content-type: text/html; charset=UTF-8' . "\r
";
    mail($to, $subject, $message, $headers);

    // Display a success message to the user.
    echo 'A password reset link has been sent to your email address.';
  } else {
    // If the email address is not found in the database, display an error message.
    echo 'Email address not found. Please try again.';
  }
}

?>


// reset_password.php
<?php

require_once 'config.php';

// Get the password reset token from the URL parameter.
$token = $_GET['token'];

// Check if the password reset token is valid and associated with an account in the database.
$sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
  // If the token is valid, display a form for the user to enter their new password.
  echo '<h1>Reset Your Password</h1>';
  echo '
    <form action="reset_password.php" method="post">
      <label for="password">New Password:</label>
      <input type="password" id="password" name="password"><br><br>
      <label for="confirm_password">Confirm New Password:</label>
      <input type="password" id="confirm_password" name="confirm_password"><br><br>
      <input type="submit" value="Reset Password">
    </form>
  ';

  // If the form is submitted, update the user's password in the database.
  if (isset($_POST['password'])) {
    $newPassword = $_POST['password'];
    $sql = "UPDATE users SET password = '$newPassword', password_reset_token = '' WHERE email = '$email'";
    mysqli_query($conn, $sql);

    // Display a success message to the user.
    echo 'Your password has been successfully reset.';
  }
} else {
  // If the token is not valid or associated with an account in the database, display an error message.
  echo 'Invalid password reset link. Please try again.';
}

?>


<?php

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the email address from the form
    $email = $_POST['email'];

    // Connect to the database (assuming you have a MySQL db with users table)
    $conn = new mysqli('localhost', 'username', 'password', 'database_name');

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Query to retrieve user data based on email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Retrieve the user's ID and name
        while ($row = $result->fetch_assoc()) {
            $userId = $row['id'];
            $userName = $row['name'];

            // Generate a password reset token (a random string of characters)
            $token = bin2hex(random_bytes(32));

            // Insert the new token into the users table
            $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
            $conn->query($query);

            // Send an email to the user with a link to reset their password
            send_password_reset_email($email, $token);
        }
    } else {
        echo 'Email not found';
    }

    // Close database connection
    $conn->close();
}

// Function to send password reset email
function send_password_reset_email($email, $token) {
    // Your email server settings here (e.g. SMTP)
    require_once 'PHPMailer.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();

    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Reset your password';
    $mail->Body = "Click here to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>";

    if (!$mail->send()) {
        echo 'Error sending email';
    }
}

?>


<?php

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the token from the form
    $token = $_POST['token'];

    // Connect to the database (assuming you have a MySQL db with users table)
    $conn = new mysqli('localhost', 'username', 'password', 'database_name');

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Query to retrieve user data based on token
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Retrieve the user's ID and name
        while ($row = $result->fetch_assoc()) {
            $userId = $row['id'];
            $userName = $row['name'];

            // Prompt user to enter new password and confirm it
            echo 'Enter your new password: <input type="password" id="new_password"><br>';
            echo 'Confirm your new password: <input type="password" id="confirm_password"><br>';

            if (isset($_POST['submit'])) {
                $newPassword = $_POST['new_password'];
                $confirmPassword = $_POST['confirm_password'];

                // Validate user input
                if ($newPassword == $confirmPassword) {
                    // Update the user's password in the database
                    $query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
                    $conn->query($query);

                    // Remove the token from the database
                    $query = "UPDATE users SET password_reset_token = '' WHERE id = '$userId'";
                    $conn->query($query);
                } else {
                    echo 'Passwords do not match';
                }
            }
        }
    } else {
        echo 'Invalid token';
    }

    // Close database connection
    $conn->close();
}

?>


<?php

// Set the email address to send the password reset link from
$fromEmail = "your-email@example.com";

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_errno()) {
    echo "Failed to connect to MySQL: " . mysqli_connect_error();
}

// Get user's email address from form submission
$email = $_POST['email'];

// Check if email is valid and exists in database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // Email found, generate password reset token and send email
    $token = bin2hex(random_bytes(32));
    $passwordResetLink = "https://your-website.com/reset-password.php?token=$token";

    // Send email with password reset link
    $subject = "Password Reset Link";
    $body = "Click on the following link to reset your password: $passwordResetLink";
    mail($email, $subject, $body, "From: $fromEmail");

    // Store token in database for future use (optional)
    $updateQuery = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $updateQuery);

    echo "Password reset link sent to your email. Please check your inbox.";
} else {
    echo "Email not found in database.";
}

// Close database connection
mysqli_close($conn);
?>


<?php

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_errno()) {
    echo "Failed to connect to MySQL: " . mysqli_connect_error();
}

// Get password reset token from form submission
$token = $_POST['token'];

// Check if token is valid and exists in database
$query = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // Token found, update user's password
    $newPassword = $_POST['new_password'];
    $updateQuery = "UPDATE users SET password = '$newPassword', password_reset_token = '' WHERE password_reset_token = '$token'";
    mysqli_query($conn, $updateQuery);

    echo "Password updated successfully.";
} else {
    echo "Invalid token.";
}

// Close database connection
mysqli_close($conn);
?>


<?php

// Define database connection settings
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Set content type to JSON
header('Content-Type: application/json');

// Get the email address from the form data
$email = $_POST['email'];

// Sanitize and validate email
$email = filter_var($email, FILTER_SANITIZE_EMAIL);

// Check if email exists in database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // If email exists, generate a new password and send it to the user's email address

    // Generate a random password
    $new_password = substr(str_shuffle("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"), 0, 10);

    // Update the user's password in database
    $query = "UPDATE users SET password_hash = ? WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", password_hash($new_password, PASSWORD_DEFAULT), $email);
    $stmt->execute();
    $stmt->close();

    // Send the new password to the user's email address
    $to = $email;
    $subject = "Your new password";
    $message = "Your new password is: $new_password";

    mail($to, $subject, $message);

    echo json_encode(array('success' => true, 'message' => "New password sent to your email address."));
} else {
    // If email does not exist in database
    echo json_encode(array('success' => false, 'message' => "Email address not found."));
}

// Close the database connection
$conn->close();

?>


<?php

// Configuration variables
define('BASE_URL', 'http://example.com');
define('EMAIL_SUBJECT', 'Reset your password');
define('EMAIL_BODY', 'Click the link below to reset your password.');

// Email configuration
$emailConfig = array(
    'host' => 'smtp.example.com',
    'username' => 'your_email@example.com',
    'password' => 'your_password',
);

// Function to send email using PHPMailer
function sendEmail($email, $subject, $body) {
  require_once 'PHPMailer/PHPMailerAutoload.php';
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = $emailConfig['host'];
  $mail->Username = $emailConfig['username'];
  $mail->Password = $emailConfig['password'];
  $mail->Port = 587;
  $mail->IsHTML(true);
  $mail->setFrom($emailConfig['username'], 'Your Name');
  $mail->addAddress($email, '');
  $mail->Subject = $subject;
  $mail->Body = $body;
  return $mail->send();
}

// Handle forgot password request
if (isset($_POST['forgot_password'])) {
  // Get user input
  $email = $_POST['email'];

  // Validate email
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address.';
    exit;
  }

  // Query database for user
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if ($row = mysqli_fetch_assoc($result)) {
    // Generate random token
    $token = bin2hex(random_bytes(32));

    // Update password reset token in database
    $updateQuery = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $updateQuery);

    // Send email with password reset link
    $link = BASE_URL . '/reset_password.php?token=' . $token;
    sendEmail($email, EMAIL_SUBJECT, sprintf(EMAIL_BODY, $link));
    echo 'A password reset link has been sent to your email.';
  } else {
    echo 'No account found with that email address.';
  }
}
?>

<!-- Form for forgot password -->
<form action="" method="post">
  <input type="email" name="email" placeholder="Email Address">
  <button type="submit" name="forgot_password">Send Password Reset Link</button>
</form>


<?php

// Configuration
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get email from form
    $email = $_POST['email'];

    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Query database for user with matching email
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->execute([':email' => $email]);

    if ($user = $stmt->fetch()) {
        // Generate random reset token and expiration time
        $resetToken = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

        // Update user with new reset token and expiration time
        $stmt = $pdo->prepare("UPDATE users SET reset_token = :token, reset_expires = :expires WHERE email = :email");
        $stmt->execute([':token' => $resetToken, ':expires' => $expires, ':email' => $email]);

        // Send password reset link via email
        $subject = 'Password Reset Link';
        $message = "Click here to reset your password: <a href='" . $_SERVER['HTTP_HOST'] . "/reset-password.php?token=$resetToken'>Reset Password</a>";
        mail($user['email'], $subject, $message);

        echo "Email with password reset link sent";
    } else {
        echo "User not found";
    }
} else {
    // Display form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <button type="submit">Send Reset Link</button>
    </form>
    <?php
}
?>


<?php

// Configuration
require_once 'config.php';

// Check if token is valid
$token = $_GET['token'];
if (empty($token)) {
    echo "Invalid token";
    exit;
}

// Query database for user with matching reset token
$stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = :token AND reset_expires > NOW()");
$stmt->execute([':token' => $token]);

if ($user = $stmt->fetch()) {
    // Display password reset form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="new_password">New Password:</label>
        <input type="password" id="new_password" name="new_password" required>
        <button type="submit">Reset Password</button>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
    </form>
    <?php
} else {
    // Token has expired or is invalid
    echo "Invalid token";
}

// Handle password reset form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get new password from form
    $newPassword = $_POST['new_password'];

    // Validate new password
    if (empty($newPassword) || strlen($newPassword) < 8) {
        echo "Invalid password";
        exit;
    }

    // Hash new password and update user in database
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $stmt = $pdo->prepare("UPDATE users SET password_hash = :password WHERE reset_token = :token");
    $stmt->execute([':password' => $hashedPassword, ':token' => $token]);

    echo "Password updated successfully";
}
?>


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_user');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword() {
    // Get email from form submission
    $email = $_POST['email'];

    // Validate email input
    if (empty($email)) {
        echo 'Email is required';
        return;
    }

    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    // Check if user exists
    if ($result->num_rows > 0) {
        // Get user ID from result
        $user_id = $result->fetch_assoc()['id'];

        // Generate new password and store it in a secure location (e.g. session)
        $new_password = bin2hex(random_bytes(16));
        $_SESSION['new_password'] = $new_password;

        // Send email with reset link to user
        sendResetEmail($user_id, $email);

    } else {
        echo 'User not found';
    }
}

function sendResetEmail($user_id, $email) {
    // Get user data from database
    $query = "SELECT name FROM users WHERE id = '$user_id'";
    $result = $conn->query($query);
    $name = $result->fetch_assoc()['name'];

    // Send email using PHPMailer or a similar library
    // Example using PHPMailer:
    require 'PHPMailerAutoload.php';
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'your_smtp_host';
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email_address';
    $mail->Password = 'your_email_password';

    // Set email content
    $body = "Hello $name,

You requested a password reset for your account. Your new password is: $new_password.

Best regards, [Your Name]";

    // Send email
    $mail->setFrom('your_email_address', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = "Password Reset";
    $mail->Body = $body;
    if (!$mail->send()) {
        echo 'Message could not be sent.';
        echo 'Mailer Error: ' . $mail->ErrorInfo;
    } else {
        // Password reset successful, log user in or redirect to login page
        $_SESSION['new_password'] = $new_password;
        header('Location: login.php');
        exit();
    }
}

// Check if form has been submitted
if (isset($_POST['submit'])) {
    forgotPassword();
}
?>


// config.php (assuming you have a database connection configuration file)
require 'config.php';

// functions.php (assuming you have a custom functions file)
function send_reset_email($email, $token) {
  // Send an email with the reset link
  $to = $email;
  $subject = "Reset Your Password";
  $body = "Click here to reset your password: <a href='http://example.com/reset-password?token=" . $token . "'>Reset Password</a>";
  mail($to, $subject, $body);
}

function forgot_password() {
  // Get the email from the form
  $email = $_POST['email'];

  // Check if the email exists in the database
  $query = "SELECT * FROM users WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user) {
    // Generate a random token
    $token = bin2hex(random_bytes(16));

    // Update the user's reset token in the database
    $query = "UPDATE users SET reset_token = :token WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Send a reset email to the user
    send_reset_email($email, $token);

    // Display a success message to the user
    echo "Password reset link sent to your email.";
  } else {
    // Display an error message if the email is not found
    echo "Email not found in our records.";
  }
}

// Handle form submission
if (isset($_POST['submit'])) {
  forgot_password();
}


<?php

// Configuration settings
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database_name';

// Connect to database
$conn = mysqli_connect($dbHost, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

// Function to send email with password reset link
function sendEmailResetLink($to, $username, $token) {
  // Email configuration settings
  $from = 'your_email@example.com';
  $subject = 'Password Reset Link';

  // Prepare email body
  $emailBody = "Dear $username,

";
  $emailBody .= "Click on the following link to reset your password:
";
  $emailBody .= "http://your_website_url/forgot_password.php?token=$token";

  // Send email using PHPMailer or any other mail library
  mail($to, $subject, $emailBody, 'From: ' . $from);
}

// Function to verify token and update password
function verifyTokenAndUpdatePassword($token) {
  // Verify token with database query
  $query = "SELECT * FROM users WHERE token = '$token'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Update password in database
    $row = mysqli_fetch_assoc($result);
    $password = $_POST['new_password'];
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password = '$hashedPassword' WHERE token = '$token'";
    mysqli_query($conn, $query);

    // Set session variables
    $_SESSION['username'] = $row['username'];
    $_SESSION['email'] = $row['email'];

    // Redirect to login page
    header('Location: login.php');
  }
}

// Check if user submitted the forgot password form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user's email from database
  $query = "SELECT * FROM users WHERE email = '".$_POST['email']."'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Generate random token for password reset link
    $token = bin2hex(random_bytes(16));

    // Update user's record with new token in database
    $row = mysqli_fetch_assoc($result);
    $query = "UPDATE users SET token = '$token' WHERE email = '".$_POST['email']."'";
    mysqli_query($conn, $query);

    // Send email to user with password reset link
    sendEmailResetLink($_POST['email'], $_POST['username'], $token);
  } else {
    echo 'Error: User not found.';
  }
} elseif (isset($_GET['token'])) {
  // Verify token and update password
  verifyTokenAndUpdatePassword($_GET['token']);
}

?>


<?php

// Configuration settings
define('EMAIL_SENDER', 'your_email@example.com');
define('EMAIL_PASSWORD_RESET_LINK', 'http://example.com/reset_password.php');

// Database connection
$conn = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_error()) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendEmail($email, $token) {
    $subject = "Reset Password";
    $message = "Click the link below to reset your password:
" . EMAIL_PASSWORD_RESET_LINK . "?token=" . $token;
    $headers = "From: " . EMAIL_SENDER . "\r
";
    
    mail($email, $subject, $message, $headers);
}

// Check if form has been submitted
if (isset($_POST['recover_password'])) {
    // Get the email address from the input field
    $email = $_POST['email'];
    
    // Query to check if the user exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Get the token for this user
        $token = md5(uniqid(rand(), true));
        
        // Insert the token into the database
        $sql = "UPDATE users SET password_token = '$token' WHERE email = '$email'";
        mysqli_query($conn, $sql);
        
        // Send an email to the user with a reset link
        sendEmail($email, $token);
        
        echo "A password recovery email has been sent to your inbox.";
    } else {
        echo "No account exists with this email address.";
    }
}

?>

<form action="" method="post">
    <input type="email" name="email" placeholder="Enter your email address"><br>
    <input type="submit" name="recover_password" value="Recover Password">
</form>


<?php

// Configuration settings
define('EMAIL_SENDER', 'your_email@example.com');

// Database connection
$conn = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_error()) {
    die("Connection failed: " . mysqli_connect_error());
}

function verifyToken($token) {
    // Query to check if the token exists in the database
    $sql = "SELECT * FROM users WHERE password_token = '$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return true;
    } else {
        return false;
    }
}

// Check if form has been submitted
if (isset($_POST['reset_password'])) {
    // Get the token from the input field
    $token = $_POST['token'];
    
    // Verify the token
    if (!verifyToken($token)) {
        echo "Invalid token.";
    } else {
        // Reset password code here...
        
        // Query to update the password in the database
        $sql = "UPDATE users SET password_token = NULL, password = '$new_password' WHERE password_token = '$token'";
        mysqli_query($conn, $sql);
        
        echo "Your password has been successfully reset.";
    }
}

?>

<form action="" method="post">
    <input type="text" name="token" value="<?php echo $_GET['token']; ?>" style="display: none"><br>
    <input type="password" name="new_password" placeholder="Enter your new password"><br>
    <input type="submit" name="reset_password" value="Reset Password">
</form>


<?php

// Database connection settings
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Email sending configuration (if using mail() function)
define('MAIL_SUBJECT', 'Forgot Password');
define('MAIL_FROM_EMAIL', 'your_email@example.com');

// Function to send password reset link
function sendPasswordResetLink($email) {
    // Retrieve user data from database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get user data
        while ($row = $result->fetch_assoc()) {
            $userId = $row['id'];
            $passwordHash = $row['password'];

            // Generate password reset token (e.g., random string)
            $token = substr(md5(uniqid()), 0, 32);

            // Update user data with new password reset token
            $updateSql = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
            $conn->query($updateSql);

            // Send email with password reset link
            $emailSubject = MAIL_SUBJECT;
            $emailBody = "Click this link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>";
            mail(MAIL_FROM_EMAIL, $emailSubject, $emailBody);

            echo "Password reset link sent to $email.";
        }
    } else {
        echo "User not found.";
    }

    // Close database connection
    $conn->close();
}

// Handle form submission (e.g., from a simple HTML form)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    if (!empty($email)) {
        sendPasswordResetLink($email);
    } else {
        echo "Email address is required.";
    }
}

?>


<?php

// Connect to your database
$servername = "your_database_server";
$username = "your_database_username";
$password = "your_database_password";
$dbname = "your_database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if the email is valid
$email = $_POST['email'];

$sql = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($sql);

if (!$result->num_rows > 0) {
    echo "Invalid email";
    exit;
}

// Get the user's ID
$user_id = $result->fetch_assoc()['id'];

// Generate a random password
$password = substr(md5(uniqid(rand(), true)), 0, 8);
$new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);

// Update the user's password in the database
$sql = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
$conn->query($sql);

// Insert a new record into the forgot_password table with the email and new password
$sql = "INSERT INTO forgot_password (email, new_password) VALUES ('$email', '$new_password')";
$conn->query($sql);

echo "A reset link has been sent to your email. Please check your inbox.";

?>


<?php

// Connect to your database
$servername = "your_database_server";
$username = "your_database_username";
$password = "your_database_password";
$dbname = "your_database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the email and new password from the forgot_password table
$email = $_GET['email'];
$new_password = $_GET['new_password'];

// Send an email with a reset link
$subject = "Reset your password";
$body = "
Hello,
Your new password is: $new_password

To change it, click on this link:
<a href='reset.php?email=$email&new_password=$new_password'>Reset Password</a>

Best regards,
[Your Name]
";

mail($email, $subject, $body);

echo "Email sent.";

?>


<?php

// Connect to your database
$servername = "your_database_server";
$username = "your_database_username";
$password = "your_database_password";
$dbname = "your_database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the email and new password from the URL
$email = $_GET['email'];
$new_password = $_GET['new_password'];

// Update the user's password in the database
$sql = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
$conn->query($sql);

echo "Password changed successfully.";

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if (isset($_POST['submit'])) {

    // Get username from form
    $username = $_POST['username'];

    // Query database to find user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // User found, generate temporary password and send email
        $row = $result->fetch_assoc();
        $email = $row['email'];
        $password = bin2hex(random_bytes(10));

        // Update user's password in database
        $query = "UPDATE users SET password='$password' WHERE id='{$row['id']}'";
        $conn->query($query);

        // Send email with temporary password
        $subject = 'Temporary Password';
        $body = "Hello $username, your temporary password is: $password. Please change it as soon as possible.";
        mail($email, $subject, $body);

        echo "<p>Password sent to your email address.</p>";
    } else {
        echo "<p>Username not found.</p>";
    }
}

?>


<?php require_once 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>

<h1>Forgot Password</h1>

<form action="" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <input type="submit" value="Submit" name="forgot_password">
</form>

<?php if (isset($_POST['forgot_password'])) { 
    require_once 'forgot_password_process.php'; 
} ?>

</body>
</html>


<?php

// Get user input from form
$email = $_POST['email'];

// Check if email is in database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // Email exists, generate new password and send reset link
    $row = mysqli_fetch_assoc($result);
    $new_password = substr(str_shuffle("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"), 0, 8);
    
    // Update user's password in database
    $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $update_query);

    // Send password reset link to user via email
    $to = $email;
    $subject = "Password Reset";
    $message = "Your new password is: $new_password. Click this link to login: <a href='login.php'>Login</a>";
    mail($to, $subject, $message);

    echo "<p>Password reset email sent to $email.</p>";
} else {
    echo "<p>Email not found in database.</p>";
}

?>


<?php

// Database connection settings
$conn = mysqli_connect("localhost", "username", "password", "database");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

?>


<?php

// Assuming you are using a database with username and email columns for users.
$database = 'your_database.db';
$username = 'your_username';

function generateToken() {
    return bin2hex(random_bytes(32));
}

function sendEmail($email, $token) {
    // You will need to set up an SMTP server or use PHP's mail function
    // For demonstration purposes, I'll leave it here but note it won't work in all environments.
    $to = $email;
    $subject = "Reset Your Password";
    $body = "
    Click on the link below to reset your password:
    http://yourwebsite.com/resetpassword.php?token=$token

    This token will expire after 30 minutes, so please reset your password before then.

    ";

    // mail($to,$subject,$body);
}

// Function to update user's password
function resetPassword($useremail) {
    $conn = new PDO("sqlite:$database");
    
    try {
        $tokenQuery = $conn->prepare("SELECT * FROM users WHERE email=:email");
        $tokenQuery->execute(array(':email' => $useremail));
        
        if ($tokenQuery->rowCount() > 0) {
            // Retrieve token (in this example, it's stored in a column called 'password_token')
            $row = $tokenQuery->fetch(PDO::FETCH_ASSOC);
            $oldToken = $row['password_token'];
            
            // Check token expiration
            if ($oldToken == $_POST['token']) {  // Assuming the token is passed through POST method when resetting password.
                // Update user's password in database
                $newPasswordHash = hash('sha256', $_POST['new_password']);
                $updateQuery = $conn->prepare("UPDATE users SET password=:password, password_token=NULL WHERE email=:email");
                $updateQuery->execute(array(':email' => $useremail, ':password' => $newPasswordHash));
                
                echo "Your password has been updated successfully.";
            } else {
                echo "Invalid token. Please try again or contact us for assistance.";
            }
        } else {
            echo "Email not found in our system.";
        }
    } catch (PDOException $e) {
        echo "An error occurred: " . $e->getMessage();
    }
    
    $conn = null;
}

if ($_POST['action'] == 'send_token') {
    // Generate token for resetting password
    $token = generateToken();

    try {
        $updateQuery = new PDO("sqlite:$database")->prepare("UPDATE users SET password_token=:token WHERE email=:email");
        $updateQuery->execute(array(':email' => $_POST['email'], ':token' => $token));

        // Send email with token
        sendEmail($_POST['email'], $token);
        
    } catch (PDOException $e) {
        echo "An error occurred: " . $e->getMessage();
    }
    
} elseif ($_POST['action'] == 'reset_password') {
    resetPassword($_POST['email']);
}

?>


// forgot_password.php

if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $_SESSION['forgot_username'] = $username;
}


// forgot_password.php (continued)

if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $_SESSION['forgot_username'] = $username;

    // Connect to database
    $conn = new mysqli("localhost", "username", "password", "database");

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get user ID and email address from database
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Send password reset email
            $email_address = $row['email'];
            $user_id = $row['id'];

            $subject = "Password Reset Request";
            $body = "Click on the link below to reset your password: <a href='reset_password.php?id=$user_id'>Reset Password</a>";

            mail($email_address, $subject, $body);

            echo "Email sent successfully.";
        }
    } else {
        echo "Username not found.";
    }

    // Close database connection
    $conn->close();
}


// reset_password.php

if (isset($_GET['id'])) {
    $user_id = $_GET['id'];

    // Connect to database
    $conn = new mysqli("localhost", "username", "password", "database");

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get user data from database
    $stmt = $conn->prepare("SELECT * FROM users WHERE id = ?");
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display form to enter new password
            ?>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="password" name="new_password">
                <input type="hidden" name="user_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Submit</button>
            </form>

            <?php
        }
    } else {
        echo "User not found.";
    }

    // Close database connection
    $conn->close();
}


// reset_password.php (continued)

if (isset($_POST['submit'])) {
    $user_id = $_POST['user_id'];
    $new_password = md5($_POST['new_password']);

    // Connect to database
    $conn = new mysqli("localhost", "username", "password", "database");

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Update user password in database
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $new_password, $user_id);
    $stmt->execute();

    echo "Password updated successfully.";
}

// Close database connection
$conn->close();


<?php

// Function to send an email with a reset link
function sendResetEmail($email) {
  // Generate a random reset token
  $resetToken = bin2hex(random_bytes(32));

  // Update the user's record in the database
  $db = new PDO('sqlite:users.db');
  $stmt = $db->prepare('UPDATE users SET reset_token = :token WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':token', $resetToken);
  $stmt->execute();

  // Send an email with a link to reset the password
  $subject = 'Reset your password';
  $body = '
    <p>Click this link to reset your password:</p>
    <a href="https://example.com/reset-password.php?token=' . $resetToken . '">Reset Password</a>
  ';
  mail($email, $subject, $body);

  return $resetToken;
}

// Function to process the reset token
function processResetToken($token) {
  // Get the user's email address from the database
  $db = new PDO('sqlite:users.db');
  $stmt = $db->prepare('SELECT email FROM users WHERE reset_token = :token');
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $email = $stmt->fetchColumn();

  // If the token is valid, allow the user to change their password
  if ($email) {
    // Remove the reset token from the database
    $db = new PDO('sqlite:users.db');
    $stmt = $db->prepare('UPDATE users SET reset_token = NULL WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    return true;
  } else {
    return false;
  }
}

?>


<?php

require_once 'forgot-password.php';

// Check if the user has submitted the form
if (isset($_POST['email'])) {
  // Send an email with a reset link
  $token = sendResetEmail($_POST['email']);

  // If the token was generated successfully, display a success message
  if ($token) {
    echo 'A password reset link has been sent to your email.';
  } else {
    echo 'Error sending email';
  }
} elseif (isset($_GET['token'])) {
  // Process the reset token
  $process = processResetToken($_GET['token']);

  // If the token is valid, display a form to change the password
  if ($process) {
    ?>
    <h1>Change your password</h1>
    <form action="" method="post">
      <input type="password" name="new_password" placeholder="New Password">
      <input type="submit" value="Submit">
    </form>
    <?php
  } else {
    echo 'Invalid token';
  }
} else {
  // Display the form to enter the email address
  ?>
  <h1>Forgot password?</h1>
  <form action="" method="post">
    <input type="email" name="email" placeholder="Email Address">
    <input type="submit" value="Send Reset Link">
  </form>
  <?php
}

?>


<?php

require_once 'config.php'; // assuming you have a config file with database credentials

// Define a function to send email
function send_email($email, $token) {
  $to = $email;
  $subject = "Reset Password";
  $body = "Click here to reset your password: <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a>";
  mail($to, $subject, $body);
}

// Define a function to handle forgot password request
function forgot_password() {
  if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form submission
    $email = $_POST['email'];

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
      // Email exists, generate a token and send it to user's email
      $token = bin2hex(random_bytes(32));
      insert_token_into_database($email, $token);

      // Send email with reset link
      send_email($email, $token);
    } else {
      echo "Email not found";
    }
  }
}

// Function to insert token into database
function insert_token_into_database($email, $token) {
  $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
  mysqli_query($conn, $query);
}

?>


function hash_password($password) {
    return password_hash($password, PASSWORD_DEFAULT);
}

function verify_password($hashed_password, $password) {
    return password_verify($password, $hashed_password);
}


function forgot_password($email) {
    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 0) {
        echo "User not found.";
        return;
    }

    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Update user's password reset token in database
    $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send password reset link to user via email
    $subject = "Reset Password";
    $message = "Click here to reset your password: <a href='https://example.com/reset-password/$token'>Reset Password</a>";
    mail($email, $subject, $message);
}


function reset_password($token) {
    // Check if token is valid
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 0) {
        echo "Invalid token.";
        return;
    }

    // Get user's email from database
    $row = mysqli_fetch_assoc($result);
    $email = $row['email'];

    // Display password reset form to user
    ?>
    <form action="reset-password.php" method="post">
        <input type="password" name="new_password" placeholder="New Password">
        <button type="submit">Reset Password</button>
    </form>
    <?php

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Verify new password
        $new_password = $_POST['new_password'];
        if (strlen($new_password) < 8) {
            echo "Password must be at least 8 characters long.";
            return;
        }

        // Update user's password in database
        $hashed_password = hash_password($new_password);
        $query = "UPDATE users SET password = '$hashed_password', password_reset_token = '' WHERE email = '$email'";
        mysqli_query($conn, $query);

        echo "Password reset successfully.";
    }
}


forgot_password('example@example.com');


// forgot_password_process.php

// Include your database connection file here or make sure you have db credentials in scope.
// Assuming we're using PDO for simplicity.

require_once 'database_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Query to get user by email. This assumes a simple table structure with an ID, name, and password_hash column.
    try {
        $query = "SELECT * FROM users WHERE email = :email";
        
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Generate a token for password reset
            $token = bin2hex(random_bytes(32));
            
            // Update the user's data with the new token.
            $query = "UPDATE users SET token = :token, last_reset = NOW() WHERE email = :email";
            
            $stmt = $pdo->prepare($query);
            $stmt->bindParam(':token', $token);
            $stmt->bindParam(':email', $email);
            $stmt->execute();
            
            // Send an email with instructions on how to reset the password.
            sendResetEmail($user['name'], $email, $token);
            echo "An email has been sent with a link to reset your password.";
        } else {
            echo "No account associated with this email exists.";
        }
    } catch (PDOException $e) {
        echo "Database error: " . $e->getMessage();
    }
}

function sendResetEmail($name, $email, $token)
{
    // Use a library like PHPMailer or directly use mail() function.
    // This example uses mail() for simplicity but consider using a proper email library for production.
    
    $subject = 'Password Reset Request';
    $body = "Dear $name,

A password reset request was made from your account. Click the following link to reset your password.

";
    $body .= "https://yourdomain.com/reset_password.php?token=$token

Best regards, Your App.";
    
    // Mail headers
    $headers[] = 'From: yourapp@example.com';
    $headers[] = 'Bcc: yourapp@example.com';
    
    mail($email, $subject, $body, implode("
", $headers));
}


// reset_password.php

require_once 'database_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_GET['token'];
    
    // Query to get user by token. This assumes you stored the token when sending the email.
    try {
        $query = "SELECT * FROM users WHERE token = :token";
        
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':token', $email);
        $stmt->execute();
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Hash the new password and update user's data.
            $newPassword = $_POST['password'];
            $hashedNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);
            
            $query = "UPDATE users SET password_hash = :password_hash, token = NULL WHERE email = :email";
            
            $stmt = $pdo->prepare($query);
            $stmt->bindParam(':password_hash', $hashedNewPassword);
            $stmt->bindParam(':email', $user['email']);
            $stmt->execute();
            
            echo "Your password has been successfully reset.";
        } else {
            echo "Invalid token. Please try again.";
        }
    } catch (PDOException $e) {
        echo "Database error: " . $e->getMessage();
    }
}

?>

<form action="reset_password.php" method="post">
    <label for="password">New Password:</label>
    <input type="password" name="password" id="password"><br><br>
    <label for="confirmPassword">Confirm New Password:</label>
    <input type="password" name="confirmPassword" id="confirmPassword"><br><br>
    <input type="submit" value="Reset Password">
</form>


<?php

// Configuration
define('RESET_TOKEN_LENGTH', 32);

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendEmail($to_email, $subject, $message)
{
    // Email settings
    $from_email = 'your_email@example.com';
    $from_password = 'your_password';

    // Create email message
    $headers = 'From: ' . $from_email . "\r
";
    $headers .= 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-Type: text/html; charset=UTF-8' . "\r
";

    // Send email using PHPMailer (not included in this example, but you can use it)
    mail($to_email, $subject, $message, $headers);
}

function generateResetToken()
{
    return bin2hex(random_bytes(RESET_TOKEN_LENGTH));
}

function isValidResetToken($token)
{
    global $conn;
    $query = "SELECT * FROM users WHERE reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        return true;
    }

    return false;
}

function resetPassword()
{
    global $conn;

    // Get user ID from token
    $token = $_GET['token'];
    $userId = getUserIdFromToken($token);

    if (!$userId) {
        echo "Invalid token";
        exit();
    }

    // Get new password from form data (if submitted)
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $newPassword = trim($_POST['password']);
        $confirmNewPassword = trim($_POST['confirm_password']);

        if ($newPassword !== $confirmNewPassword) {
            echo "Passwords do not match";
            exit();
        }

        // Update user password
        $query = "UPDATE users SET password_hash = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param('si', password_hash($newPassword, PASSWORD_DEFAULT), $userId);

        if ($stmt->execute()) {
            echo "Password updated successfully";
        } else {
            echo "Error updating password: " . $stmt->error;
        }
    }

    // Render reset form
    ?>
    <h1>Reset Password</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password"><br><br>
        <label for="confirm_password">Confirm New Password:</label>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <button type="submit">Reset Password</button>
    </form>
    <?php
}

function getUserIdFromToken($token)
{
    global $conn;
    $query = "SELECT id FROM users WHERE reset_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        return $result->fetch_assoc()['id'];
    }

    return false;
}

function forgotPassword()
{
    global $conn;

    // Get user email from form data
    $email = trim($_POST['email']);

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Generate reset token
        $resetToken = generateResetToken();

        // Update user reset token and expiration time
        $query = "UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param('ss', $resetToken, $email);

        if ($stmt->execute()) {
            // Send password reset email
            $subject = 'Password Reset';
            $message = '
                <p>Dear user,</p>
                <p>You have requested to reset your password. Please click the following link to reset your password:</p>
                <a href="' . $_SERVER['PHP_SELF'] . '?token=' . $resetToken . '">Reset Password</a>
                ';
            sendEmail($email, $subject, $message);
        }
    } else {
        echo "User not found";
    }

    // Render forgot form
    ?>
    <h1>Forgot Password</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br><br>
        <button type="submit">Reset Password</button>
    </form>
    <?php
}

// Check if user submitted the forgot form
if (isset($_POST['forgot'])) {
    forgotPassword();
} else {
    // Render default page
    ?>
    <h1>Forgot Password</h1>
    <p>If you have forgotten your password, please submit the following form.</p>
    <?php
}

// Check if user submitted the reset form
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    if (isValidResetToken($token)) {
        resetPassword();
    } else {
        echo "Invalid token";
    }
}


<?php

require_once 'config.php'; // load database connection settings

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    try {
        // get user data from database
        $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($user = $stmt->fetch()) {
            // generate reset token
            $resetToken = bin2hex(random_bytes(32));

            // update user data with new reset token and expiration time
            $pdo->prepare('UPDATE users SET reset_token = :token, reset_expires_at = NOW() + INTERVAL 1 HOUR WHERE id = :id')
                ->bindParam(':token', $resetToken)
                ->bindParam(':id', $user['id'])
                ->execute();

            // send email with reset link
            $to = $email;
            $subject = 'Reset your password';
            $message = '<p>Please click the following link to reset your password:</p>' .
                      '<p><a href="http://example.com/reset-password?token=' . $resetToken . '">' .
                      'Reset Password</a></p>';

            mail($to, $subject, $message);
        } else {
            echo 'Email address not found';
        }
    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
} else {
    ?>
    <form method="post" action="">
        <label>Email Address:</label>
        <input type="email" name="email">
        <button type="submit">Submit</button>
    </form>
    <?php
}


<?php

require_once 'config.php'; // load database connection settings

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    try {
        // get user data from database
        $stmt = $pdo->prepare('SELECT * FROM users WHERE reset_token = :token AND reset_expires_at > NOW()');
        $stmt->bindParam(':token', $token);
        $stmt->execute();

        if ($user = $stmt->fetch()) {
            ?>
            <form method="post" action="">
                <label>Password:</label>
                <input type="password" name="password">
                <label>Confirm Password:</label>
                <input type="password" name="confirm_password">
                <button type="submit">Submit</button>
            </form>

            <?php
        } else {
            echo 'Invalid reset token or has expired';
        }
    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
} else {
    ?>
    <p>Invalid request.</p>
    <?php
}


<?php

require_once 'config.php'; // load database connection settings

if (isset($_POST['password'])) {
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    if ($newPassword !== $confirmPassword) {
        echo 'Passwords do not match';
        exit;
    }

    try {
        // update user data with new password
        $stmt = $pdo->prepare('UPDATE users SET password = :password WHERE id = :id');
        $stmt->bindParam(':password', $newPassword)
              ->bindParam(':id', $_POST['user_id'])
              ->execute();

        echo 'Password reset successfully!';
    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
}


// Database connection settings
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset link via email
function sendResetLink($email) {
    // Get user data from database (assuming 'users' table)
    $sql = "SELECT id, name, email FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Generate random password
            $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);
            echo "New Password: $new_password <br>";

            // Update user data with new password (hashed for security)
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

            $sql = "UPDATE users SET password = '$hashed_password' WHERE email = '$email'";
            if ($conn->query($sql) === TRUE) {
                echo "Password updated <br>";
            } else {
                echo "Error updating user data: " . $conn->error;
            }
        }

        // Send reset link via email (using PHPMailer or mail() function)
        $email_body = "
            Dear $row[name],

            Your new password is: $new_password
            Please log in to your account with this new password.

            Best regards,
            [Your Name]
        ";

        // Using PHPMailer for simplicity, but you may want to use a more secure method like sending an email using mail()
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/SMTP.php';

        $mail = new PHPMailer\PHPMailer\PHPMailer(true);
        try {
            $mail->isSMTP();
            $mail->Host       = 'smtp.example.com'; // Replace with your SMTP server
            $mail->SMTPAuth   = true;
            $mail->Username   = 'username@example.com'; // Replace with your email address
            $mail->Password   = 'password';
            $mail->Port       = 587;

            $mail->setFrom('from@example.com', 'Your Name');
            $mail->addAddress($email, '');
            $mail->Subject = 'Reset Password';
            $mail->Body    = $email_body;
            $mail->AltBody = '';

            if ($mail->send()) {
                echo "Email sent successfully";
            } else {
                echo "Error sending email: " . $mail->ErrorInfo;
            }
        } catch (Exception $e) {
            echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
        }

    } else {
        echo "No user found with this email address";
    }
}

// Test the function
sendResetLink('example@example.com');


<?php
// Set the email address that will be used to send the password reset link
$email = $_POST['email'];

// Check if the user exists in the database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    // User found, generate a new password and send it to their email
    $row = mysqli_fetch_assoc($result);
    $username = $row['username'];
    $hashed_password = md5(random_string(8)); // Generate a random salted hash

    // Update the user's password in the database
    $query = "UPDATE users SET password = '$hashed_password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send an email with the new password to the user
    $subject = "Your new password is: ";
    $message = "Dear $username,

Your new password is: $hashed_password

Best regards,
[Your Name]";
    mail($email, $subject, $message);

    echo "A new password has been sent to your email.";
} else {
    echo "Email not found in our records.";
}
?>


<!-- forgot-password.php -->
<form action="forgot-password-process.php" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <input type="submit" value="Submit">
</form>


// forgot-password-process.php
require_once 'db.php'; // Your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Query to retrieve user data
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // User exists, generate a password reset token and send it via email

        // Generate a random token
        $token = bin2hex(random_bytes(32));

        // Update the user's row with the new token
        $sql = "UPDATE users SET token = '$token' WHERE email = '$email'";
        mysqli_query($conn, $sql);

        // Send password reset link via email (using a library like PHPMailer)
        // For simplicity, we'll just echo out the link here
        echo "Password reset link sent to your email. Please click on it to reset your password:<br>";
        echo "<a href='reset-password.php?token=$token'>$token</a>";

    } else {
        echo 'No account found with that email.';
    }
}


<!-- reset-password.php -->
<?php
require_once 'db.php'; // Your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];

    // Verify token and update user's password
    $sql = "SELECT * FROM users WHERE token = '$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Update the user's row with the new password
        $sql = "UPDATE users SET password = '$new_password' WHERE token = '$token'";
        mysqli_query($conn, $sql);
        
        echo 'Password updated successfully!';
    
    } else {
        echo 'Invalid token. Please try again.';
    }
}
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password"><br><br>
    <input type="submit" value="Submit">
</form>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if (isset($_POST['submit'])) {

    // Get user input
    $email = $_POST['email'];

    // Query to get user's email and password reset token
    $query = "SELECT * FROM users WHERE email = '$email'";

    // Execute query
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Get user data from result
        $row = $result->fetch_assoc();

        // Generate password reset token
        $token = bin2hex(random_bytes(32));

        // Update user's password reset token in database
        $update_query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        $conn->query($update_query);

        // Send password reset email to user
        send_password_reset_email($row['email'], $token);
    } else {
        echo 'Email not found';
    }
}

// Function to send password reset email
function send_password_reset_email($email, $token) {
    // Email settings
    $from_email = 'your_email@example.com';
    $subject = 'Reset Your Password';

    // Message body
    $message = '
        <html>
            <body>
                <h1>Reset Your Password</h1>
                <p>Hello ' . $email . '</p>
                <p>To reset your password, click on the following link:</p>
                <p><a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a></p>
            </body>
        </html>
    ';

    // Send email
    mail($email, $subject, $message, 'From: ' . $from_email);
}

?>

<!-- Form to enter user's email -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="text" name="email" placeholder="Email">
    <button type="submit" name="submit">Send Reset Link</button>
</form>

<?php
// Close database connection
$conn->close();
?>


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL parameter
$token = $_GET['token'];

// Query to get user's email and password reset token
$query = "SELECT * FROM users WHERE password_reset_token = '$token'";

// Execute query
$result = $conn->query($query);

if ($result->num_rows > 0) {

    // Get user data from result
    $row = $result->fetch_assoc();

    // Display form to enter new password
    echo '<form action="" method="post">';
    echo '<input type="password" name="new_password" placeholder="New Password">';
    echo '<input type="password" name="confirm_password" placeholder="Confirm New Password">';
    echo '<button type="submit" name="reset">Reset Password</button>';
    echo '</form>';

} else {
    echo 'Invalid token';
}

// Function to update user's password
function update_password($new_password, $email) {
    // Update user's password in database
    $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    $conn->query($update_query);
}

// Check if form has been submitted
if (isset($_POST['reset'])) {

    // Get new password and confirm password from form
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if new password and confirm password match
    if ($new_password === $confirm_password) {

        // Update user's password in database
        update_password($new_password, $email);

        // Send confirmation email to user
        send_confirmation_email($email);
    } else {
        echo 'Passwords do not match';
    }
}

// Function to send confirmation email
function send_confirmation_email($email) {
    // Email settings
    $from_email = 'your_email@example.com';
    $subject = 'Password Reset Confirmation';

    // Message body
    $message = '
        <html>
            <body>
                <h1>Password Reset Confirmation</h1>
                <p>Hello ' . $email . '</p>
                <p>Your password has been successfully reset.</p>
            </body>
        </html>
    ';

    // Send email
    mail($email, $subject, $message, 'From: ' . $from_email);
}

?>

<?php
// Close database connection
$conn->close();
?>


<?php

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Validate user input
if (isset($_POST['email'])) {

    // Sanitize email
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Query database to retrieve the user ID and token
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {

        // Retrieve user ID from result
        $userId = mysqli_fetch_assoc($result)['id'];

        // Generate token for password reset
        $token = md5(uniqid(mt_rand(), true));

        // Insert new record into password_resets table
        $query = "INSERT INTO password_resets (user_id, token) VALUES ('$userId', '$token')";
        mysqli_query($conn, $query);

        // Send email to user with reset link
        sendResetEmail($email, $token);
    } else {
        echo "User not found.";
    }
} else {
    echo "Invalid request. Please try again later.";
}

// Close database connection
mysqli_close($conn);
?>

// Function to send password reset email
function sendResetEmail($email, $token) {

    // Mail server settings (change these according to your mail service provider)
    $mailServer = "smtp.gmail.com";
    $mailUsername = "your-username@gmail.com";
    $mailPassword = "your-password";

    // Email subject and body
    $subject = "Reset Your Password";
    $body = "Click this link to reset your password: <a href='http://example.com/reset-password?token=" . $token . "'>Reset Password</a>";

    // Send email using PHP's mail() function or any other library (e.g., SwiftMailer, PHPMailer)
    // Here we're using the mail() function for simplicity
    $headers = "From: Your Email <" . $mailUsername . ">" . "\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    if (mail($email, $subject, $body, $headers)) {
        echo "Email sent successfully.";
    } else {
        echo "Error sending email. Please try again later.";
    }
}

?>


<?php

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Validate user input
if (isset($_POST['token'], $_POST['new_password'])) {

    // Retrieve token from URL
    $token = $_GET['token'];

    // Query database to retrieve the user ID and reset token
    $query = "SELECT id FROM password_resets WHERE token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {

        // Retrieve user ID from result
        $userId = mysqli_fetch_assoc($result)['id'];

        // Update user's password in the users table
        $newPassword = $_POST['new_password'];
        $hashNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $query = "UPDATE users SET password = '$hashNewPassword' WHERE id = '$userId'";
        mysqli_query($conn, $query);

        // Delete reset token from the password_resets table
        $query = "DELETE FROM password_resets WHERE user_id = '$userId'";
        mysqli_query($conn, $query);
    } else {
        echo "Invalid token.";
    }
} else {
    echo "Invalid request. Please try again later.";
}

// Close database connection
mysqli_close($conn);
?>

<!-- HTML form for new password input -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password"><br><br>
    <label for="confirm_password">Confirm New Password:</label>
    <input type="password" id="confirm_password" name="confirm_password"><br><br>
    <button type="submit">Submit</button>
</form>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_db_username';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form submission
$email = $_POST['email'];

// Check if email exists in database
$stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // Email exists, generate a reset token and send password reset link
    $user_data = $result->fetch_assoc();
    $reset_token = bin2hex(random_bytes(32));
    $update_stmt = $conn->prepare("UPDATE users SET reset_token = ? WHERE id = ?");
    $update_stmt->bind_param('si', $reset_token, $user_data['id']);
    $update_stmt->execute();

    // Send password reset email
    $subject = "Reset Your Password";
    $message = "
        <p>Hello $email,</p>
        <p>Click on the link below to reset your password:</p>
        <a href='http://your-website.com/reset_password.php?token=$reset_token'>Reset Password</a>
    ";
    $headers = "From: your-email@example.com";
    mail($email, $subject, $message, $headers);

    echo "A password reset email has been sent to your email address.";
} else {
    echo "Email not found. Please try again.";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_db_username';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get reset token from URL
$reset_token = $_GET['token'];

// Check if reset token exists in database
$stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = ?");
$stmt->bind_param('s', $reset_token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // Reset token exists, update password and reset token
    $user_data = $result->fetch_assoc();
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password == $confirm_password) {
        // Update password in database
        $update_stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = '' WHERE id = ?");
        $update_stmt->bind_param('si', $new_password, $user_data['id']);
        $update_stmt->execute();

        echo "Your password has been successfully updated.";
    } else {
        echo "Passwords do not match. Please try again.";
    }
} else {
    echo "Invalid reset token.";
}

// Close database connection
$conn->close();

?>


CREATE TABLE users (
  id INT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  password_hash VARCHAR(255) NOT NULL
);


<?php

// Configuration
define('MAX_ATTEMPTS', 5);

// Function to send reset email
function sendResetEmail($email, $token)
{
  // Send email with token
  $subject = 'Reset Password';
  $body = "Click this link to reset your password: <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>";
  mail($email, $subject, $body);
}

// Function to handle forgot password form submission
function handleForgotPasswordForm()
{
  // Get form data
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = :email";
  try {
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user = $stmt->fetch();

    // If user exists, generate reset token and send email
    if ($user) {
      $token = bin2hex(random_bytes(32));
      $query = "UPDATE users SET password_reset_token = :token WHERE id = :id";
      try {
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':token', $token);
        $stmt->bindParam(':id', $user['id']);
        $stmt->execute();
        sendResetEmail($email, $token);
        echo "An email has been sent to your email address with a link to reset your password.";
      } catch (PDOException $e) {
        echo "Error updating user data: " . $e->getMessage();
      }
    } else {
      echo "User not found";
    }
  } catch (PDOException $e) {
    echo "Error querying database: " . $e->getMessage();
  }
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  handleForgotPasswordForm();
} else {
  // Display forgot password form
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Enter your email address">
    <button type="submit">Send Reset Email</button>
  </form>
  <?php
}
?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Set POST variables from form submission
$email = $_POST['email'];
$token = md5(uniqid(mt_rand(), true));

// Check if email is in database
$stmt = $mysqli->prepare("SELECT id, email FROM users WHERE email = ?");
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // Email found in database, generate and send password reset token
    $row = $result->fetch_assoc();
    $token = base64_encode(serialize($row));
    $subject = 'Reset your password';
    $message = 'Click this link to reset your password: <a href="http://your-website.com/reset_password.php?token=' . $token . '">Reset Password</a>';
    mail($email, $subject, $message);

    // Store token in database for future use
    $stmt2 = $mysqli->prepare("UPDATE users SET password_token = ? WHERE email = ?");
    $stmt2->bind_param('ss', $token, $email);
    $stmt2->execute();
} else {
    echo 'Email not found in database';
}

// Close connection to database
$mysqli->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USER', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Get token from URL parameter
$token = base64_decode($_GET['token']);
$token_array = unserialize($token);

// Check if token is valid and matches email in database
$stmt = $mysqli->prepare("SELECT id, email FROM users WHERE password_token = ? AND email = ?");
$stmt->bind_param('ss', $token, $token_array['email']);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // Token is valid, prompt user to enter new password
    echo 'Enter your new password: <input type="password" name="new_password">';
    echo '<input type="submit" value="Reset Password">';

    // Update database with new password when form submitted
    if ($_POST['new_password']) {
        $stmt2 = $mysqli->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt2->bind_param('ss', $_POST['new_password'], $token_array['id']);
        $stmt2->execute();

        // Clear token from database
        $stmt3 = $mysqli->prepare("UPDATE users SET password_token = NULL WHERE email = ?");
        $stmt3->bind_param('s', $token_array['email']);
        $stmt3->execute();
    }
} else {
    echo 'Invalid or expired token';
}

// Close connection to database
$mysqli->close();

?>


// Include the PHPMailer library for sending emails (optional)
require_once 'PHPMailerAutoload.php';

function forgot_password($email) {
  // Check if the user exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if ($result->num_rows == 0) {
    // User not found, return an error message
    echo 'User not found';
    return;
  }

  // Retrieve the user's ID and password hash from the database
  $row = $result->fetch_assoc();
  $userId = $row['id'];
  $passwordHash = $row['password_hash'];

  // Generate a new password (for testing purposes only, in a real application you should use a more secure method)
  $newPassword = str_random(8);

  // Update the user's password hash in the database
  $query = "UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'";
  mysqli_query($conn, $query);

  // Send an email to the user with their new password (optional)
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->Username = 'your-email@example.com';
  $mail->Password = 'your-password';
  $mail->setFrom('your-email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = 'Your new password is: ' . $newPassword;
  $mail->Body = 'Please change your password immediately.';
  $mail->send();

  // Return the user's ID and new password (for further processing or storage)
  echo "New Password: $newPassword";
}

// Example usage:
$email = 'user@example.com';
forgot_password($email);


<?php

// Database settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($username)
{
    global $conn;

    // Check if username exists
    $sql = "SELECT * FROM users WHERE username='" . $username . "'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Hash a random password
        $password = hash('sha256', uniqid());

        // Update user password in database
        $sql = "UPDATE users SET password='" . $password . "' WHERE username='" . $username . "'";
        $conn->query($sql);

        // Email the new password to the user ( implementation not included )

        return true; // Password reset successful
    } else {
        return false; // Username not found
    }
}

// Forgot password form submission handler
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    if (empty($username)) {
        echo "Please enter your username";
    } elseif (strlen($username) > 255 || !preg_match('/^[a-zA-Z0-9]+$/', $username)) {
        echo "Invalid username format. Please use only alphanumeric characters.";
    } else {
        $result = forgotPassword($username);
        if ($result === true) {
            echo "Password reset email sent to your registered email address.";
        } else {
            echo "Username not found in our database. Please try again or contact support.";
        }
    }
}
?>


<?php
require_once 'dbconnect.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo json_encode(array('error' => 'Invalid email address'));
        exit;
    }

    // Query database for user
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        echo json_encode(array('error' => 'Email not found'));
        exit;
    }

    // Get user ID
    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];

    // Generate token for password reset
    $token = bin2hex(random_bytes(32));

    // Update database with new token
    $query = "UPDATE users SET token = '$token' WHERE id = '$userId'";
    mysqli_query($conn, $query);

    // Send email to user
    $subject = 'Reset your password';
    $message = '
        <p>Dear user,</p>
        <p>You are receiving this email because we received a request to reset your password.</p>
        <p>To reset your password, click on the following link:</p>
        <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
        <p>Sincerely,</p>
        <p>Your website admin</p>
    ';
    $headers = 'From: your_email@example.com' . "\r
" .
               'Content-Type: text/html; charset=utf-8';
    mail($email, $subject, $message, $headers);

    echo json_encode(array('success' => 'Password reset link sent to email'));
} else {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="email" placeholder="Email address">
        <button type="submit">Send Password Reset Link</button>
    </form>
    <?php
}
?>


<?php
require_once 'dbconnect.php';

$token = $_GET['token'];

// Check if token is valid
$query = "SELECT * FROM users WHERE token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    echo json_encode(array('error' => 'Invalid token'));
    exit;
}

// Get user ID
$row = mysqli_fetch_assoc($result);
$userId = $row['id'];

// Generate new password
$newPassword = bin2hex(random_bytes(32));

// Update database with new password
$query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
mysqli_query($conn, $query);

echo json_encode(array('success' => 'Password reset successful'));
?>


<?php
$conn = mysqli_connect("localhost", "username", "password", "database");
if (!$conn) {
    die("Connection failed: " . mysqli_error($conn));
}
?>


// include the necessary libraries
require_once 'db.php'; // assume we have a db connection library

// function to send forgot password email
function sendForgotPasswordEmail($email) {
  // get user data from database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();

    // generate new password and hash it
    $newPassword = substr(md5(uniqid(mt_rand(), true)), 0, 8);
    $hashedNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);

    // update user's password in database
    $query = "UPDATE users SET password_hash = '$hashedNewPassword' WHERE id = '$user[id]'";
    mysqli_query($conn, $query);

    // send email with new password
    $to = $email;
    $subject = "Reset your password";
    $body = "Your new password is: $newPassword";
    mail($to, $subject, $body);
  }
}

// function to handle forgot password request
function forgotPassword() {
  // get form data (username or email)
  $usernameOrEmail = $_POST['username_or_email'];

  if (!empty($usernameOrEmail)) {
    // check if user exists in database
    $query = "SELECT * FROM users WHERE username = '$usernameOrEmail' OR email = '$usernameOrEmail'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows > 0) {
      // send forgot password email
      sendForgotPasswordEmail($_POST['email']);
      echo "An email with new password has been sent to your email address.";
    } else {
      echo "No user found with this username or email.";
    }
  } else {
    echo "Please enter your username or email.";
  }
}


// Require the configuration file
require_once 'config.php';

// Define a function to send a password reset email
function send_password_reset_email($email) {
  // Connect to the database
  $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
  
  if ($db->connect_errno > 0) {
    die('Connection failed: ' . $db->connect_error());
  }
  
  // Get the user's ID and password hash from the database
  $stmt = $db->prepare("SELECT id, password_hash FROM users WHERE email = ?");
  $stmt->bind_param("s", $email);
  $stmt->execute();
  $result = $stmt->get_result();
  
  if ($result->num_rows === 0) {
    // If the user doesn't exist, send an error message
    echo 'Error: User not found';
    return;
  }
  
  // Get the user's ID and password hash from the result
  $user_id = $result->fetch_assoc()['id'];
  $password_hash = $result->fetch_assoc()['password_hash'];
  
  // Generate a random password reset token
  $token = bin2hex(random_bytes(32));
  
  // Insert the token into the database
  $stmt = $db->prepare("INSERT INTO password_resets (user_id, token) VALUES (?, ?)");
  $stmt->bind_param("is", $user_id, $token);
  $stmt->execute();
  
  // Send an email to the user with a link to reset their password
  $subject = 'Reset your password';
  $message = '
    <p>Dear ' . $email . ',</p>
    <p>You are receiving this email because we received a request to reset your password.</p>
    <p>To reset your password, click on the following link:</p>
    <a href="' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . urlencode($token) . '">Reset Password</a>
  ';
  
  // Use PHPMailer or any other email library to send the email
  $mail = new PHPMailer();
  $mail->isHTML(true);
  $mail->setFrom('no-reply@example.com', 'Password Reset');
  $mail->addAddress($email);
  $mail->Subject($subject);
  $mail->Body($message);
  
  if (!$mail->send()) {
    echo 'Error: Email not sent';
    return;
  }
}

// Define a function to reset the user's password
function reset_password($token) {
  // Connect to the database
  $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
  
  if ($db->connect_errno > 0) {
    die('Connection failed: ' . $db->connect_error());
  }
  
  // Get the user's ID from the database using the token
  $stmt = $db->prepare("SELECT id FROM password_resets WHERE token = ?");
  $stmt->bind_param("s", $token);
  $stmt->execute();
  $result = $stmt->get_result();
  
  if ($result->num_rows === 0) {
    // If the token is invalid, send an error message
    echo 'Error: Invalid token';
    return;
  }
  
  // Get the user's ID from the result
  $user_id = $result->fetch_assoc()['id'];
  
  // Reset the user's password using a new password
  $new_password = 'newpassword'; // Replace with a secure way to get the new password from the user
  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
  
  // Update the user's password in the database
  $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
  $stmt->bind_param("si", $hashed_password, $user_id);
  $stmt->execute();
}


<!-- forgot_password_form.php -->
<form action="forgot_password.php" method="post">
  <label>Username/Email:</label>
  <input type="text" name="username_or_email" required>
  <button type="submit">Submit</button>
</form>


<!-- forgot_password.php -->
<?php

require 'db.php'; // your database connection file

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $username_or_email = $_POST['username_or_email'];

  $query = "SELECT * FROM users WHERE username = :username_or_email OR email = :username_or_email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':username_or_email', $username_or_email);
  $stmt->execute();

  if ($row = $stmt->fetch()) {
    // Generate a password reset token
    $token = bin2hex(random_bytes(32));

    // Insert the token into the password_resets table
    $query = "INSERT INTO password_resets (user_id, token) VALUES (:user_id, :token)";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':user_id', $row['id']);
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    // Send the password reset email
    mail(
      $row['email'],
      'Password Reset',
      'Click this link to reset your password: <a href="reset_password.php?token=' . $token . '">Reset Password</a>'
    );

    echo "Email sent with password reset link.";
  } else {
    echo "Username or email not found.";
  }
}

?>


<!-- reset_password.php -->
<?php

require 'db.php'; // your database connection file

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $token = $_GET['token'];

  $query = "SELECT * FROM password_resets WHERE token = :token";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->execute();

  if ($row = $stmt->fetch()) {
    // Update the user's password
    $new_password = $_POST['new_password'];
    $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);

    $query = "UPDATE users SET password_hash = :password_hash WHERE id = :user_id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':password_hash', $hashed_new_password);
    $stmt->bindParam(':user_id', $row['user_id']);
    $stmt->execute();

    // Delete the token from the password_resets table
    $query = "DELETE FROM password_resets WHERE id = :id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':id', $row['id']);
    $stmt->execute();

    echo "Password updated successfully.";
  } else {
    echo "Invalid token.";
  }
}

?>


// Require the configuration file and database connection script
require_once 'config.php';
require_once 'db_connection.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user's email
    $email = $_POST['email'];

    // Query database to find user by email
    $stmt = $mysqli->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // User exists, generate and store token
        $user = $result->fetch_assoc();
        $token = bin2hex(random_bytes(32));

        // Update user's token in database
        $update_stmt = $mysqli->prepare("UPDATE users SET token = ? WHERE id = ?");
        $update_stmt->bind_param('si', $token, $user['id']);
        $update_stmt->execute();

        // Send email with reset link
        send_reset_email($email, $token);

        echo "A password reset link has been sent to your email.";
    } else {
        echo "User not found.";
    }
}

// Function to send password reset email
function send_reset_email($email, $token) {
    // Your mail configuration settings
    $mail_config = array(
        'host' => 'smtp.example.com',
        'port' => 587,
        'username' => 'your-email@example.com',
        'password' => 'your-password'
    );

    // Create a new instance of PHPMailer
    require_once 'phpmailer/PHPMailer.php';
    $mail = new \PHPMailer\PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = $mail_config['host'];
    $mail->Port = $mail_config['port'];
    $mail->SMTPAuth = true;
    $mail->Username = $mail_config['username'];
    $mail->Password = $mail_config['password'];

    // Set From and To email addresses
    $mail->setFrom($mail_config['username'], 'Your Name');
    $mail->addAddress($email);

    // Set email content
    $reset_link = "http://example.com/reset-password.php?token=$token";
    $body = "Hello,

Click this link to reset your password: $reset_link

Best regards, The System";

    $mail->isHTML(true);
    $mail->Subject = 'Reset Your Password';
    $mail->Body = $body;

    // Send the email
    if (!$mail->send()) {
        echo 'Error sending mail: ' . $mail->ErrorInfo;
    }
}


require 'vendor/autoload.php';
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// Function to send an email with a reset link
function sendPasswordResetEmail($email, $username) {
    try {
        // Create a new PHPMailer instance
        $mail = new PHPMailer();

        // Set the transport method to SMTP (You may need to adjust this for your mail server)
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com'; // Change to your email provider's SMTP host
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com'; // Your email address
        $mail->Password = 'your_password';
        $mail->Port = 587;

        // Set the sender and receiver emails
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email, $username);

        // Set the mail subject and body
        $subject = 'Reset your password';
        $body = 'Click this link to reset your password: <a href="http://example.com/reset-password?email=' . $email . '&username=' . $username . '">Reset Password</a>';
        
        $mail->isHTML(true);
        $mail->Subject = $subject;
        $mail->Body = $body;

        // Send the email
        if (!$mail->send()) {
            echo 'Error occurred while sending email: ';
            return false; // Return False on error to indicate failure
        } else {
            echo 'Email sent successfully!';
            return true;
        }
    } catch (Exception $e) {
        // Handle exceptions here
        echo 'An error occurred: ' . $mail->ErrorInfo;
        return false;
    }
}


// Check if the request method is POST (assuming you're using an HTML form for this)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get the email and username from GET parameters
    $email = $_GET['email'];
    $username = $_GET['username'];

    try {
        // Assume you have stored the new password securely in a session or database before redirecting back to login
        if (isset($_SESSION['new_password'])) {
            $newPassword = $_SESSION['new_password'];
            unset($_SESSION['new_password']); // Clean up
        } else {
            throw new Exception('New password not found');
        }

        // Update the user's password in your database with the new one.
        require_once 'db_config.php';
        $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Update password using the hashed version
        $newPasswordHash = password_hash($newPassword, PASSWORD_DEFAULT); // Use a secure hashing algorithm

        $sql = "UPDATE users SET password_hash = '$newPasswordHash' WHERE email='$email'";
        if ($conn->query($sql) === TRUE) {
            echo "Your password has been successfully updated.";
            header('Location: index.php');
            exit();
        } else {
            throw new Exception("Error updating password");
        }

        $conn->close();
    } catch (Exception $e) {
        // Handle any exceptions that might occur during the update process
        echo 'An error occurred while updating your password: ' . $e->getMessage();
    }
} else {
    echo "Invalid request method.";
}


CREATE TABLE users (
  id INT PRIMARY KEY AUTO_INCREMENT,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


<?php

require_once 'db_connect.php'; // assuming you have db_connect.php set up to connect to your database

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Validate input data
  if (empty($username) || empty($email)) {
    echo "Please enter both username and email";
    exit;
  }

  // Check if user exists in database
  $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Get the user's ID
    $row = mysqli_fetch_assoc($result);
    $user_id = $row['id'];

    // Generate a new password and store it in the database
    $new_password = generateRandomPassword();
    $query = "UPDATE users SET password_hash = SHA2('$new_password', 256) WHERE id = '$user_id'";
    mysqli_query($conn, $query);

    // Send email with new password to user
    sendEmailNotification($email, 'Your New Password is:', $new_password);

    echo "New password sent to your email. Please check your inbox.";
  } else {
    echo "Username or email not found";
  }
} else {
  ?>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Username:</label>
    <input type="text" name="username"><br><br>
    <label>Email:</label>
    <input type="email" name="email"><br><br>
    <button type="submit">Send New Password</button>
  </form>
  <?php
}

// Helper function to generate a random password
function generateRandomPassword() {
  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < 8; $i++) {
    $password .= substr($chars, rand(0, strlen($chars) - 1), 1);
  }
  return $password;
}

// Helper function to send email notification
function sendEmailNotification($email, $subject, $message) {
  // Use a library like PHPMailer or SwiftMailer to send emails
  // For simplicity, we'll just use PHP's mail() function
  $to = $email;
  $from = 'your_email@example.com';
  $headers = 'From: ' . $from . "\r
";
  $headers .= 'Subject: ' . $subject . "\r
";
  mail($to, $subject, $message, $headers);
}

?>


// Include connection details and required files
include_once 'db.php'; // Make sure you have your db connection file named as 'db.php'

function sendForgotPasswordEmail($username) {
    $email = fetchEmailByUser($username);
    
    if ($email) {
        // Generate a random token for password reset.
        $token = generateRandomToken();
        
        // Insert the username and token into the `reset_password` table
        insertIntoResetPasswordTable($username, $token);
        
        // Send email to user with instructions on how to reset their password
        sendEmail($email['email'], "Reset Your Password", 'password_reset_email.php?user=' . $username);
    }
}

function fetchEmailByUser($username) {
    global $conn;
    
    $sql = "SELECT * FROM `users` WHERE `username`= '$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return mysqli_fetch_assoc($result);
    } else {
        return null;
    }
}

function generateRandomToken() {
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    return substr(str_shuffle(str_repeat($characters, 5)), 0, 32);
}

function insertIntoResetPasswordTable($username, $token) {
    global $conn;
    
    $sql = "INSERT INTO `reset_password` (`username`, `token`) VALUES ('$username', '$token')";
    mysqli_query($conn, $sql);
}


// password_reset_email.php
<?php
if (isset($_GET['user'])) {
    $username = $_GET['user'];
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Your Password</title>
</head>
<body>
    <h1>Reset Your Password for <?= $username ?></h1>
    
    <p>Please click on the following link to reset your password:</p>
    <a href="reset_password.php?token=<?= $_GET['token'] ?>&user=<?= $_GET['user'] ?>">Click Here</a>
    
    <p>Alternatively, you can enter the token below and proceed.</p>
    <form action="reset_password_form.php" method="post">
        <input type="hidden" name="username" value="<?= $username ?>">
        <input type="text" name="token" placeholder="Enter Token Here...">
        <button type="submit">Submit</button>
    </form>
    
</body>
</html>


// reset_password_form.php
<?php
if (isset($_POST['token']) && isset($_POST['username'])) {
    global $conn;
    
    $sql = "UPDATE `users` SET `password`= SHA2('" . $_POST['newpass'] . "', 256) WHERE `username`= '" . $_POST['username'] . "' AND `token`= '" . $_POST['token'] . "'";
    mysqli_query($conn, $sql);
    
    // You can delete the token from reset_password table here for security.
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Your Password</title>
</head>
<body>
    <?php
    if (isset($_POST['token']) && isset($_POST['username'])) {
        echo 'Your password has been changed successfully!';
    } else {
    ?>
    <form action="reset_password_form.php" method="post">
        <input type="hidden" name="username" value="<?= $_GET['user'] ?>">
        <label for="newpass">New Password:</label>
        <input type="password" id="newpass" name="newpass"><br><br>
        <button type="submit">Submit</button>
    </form>
    
    <?php } ?>
    
</body>
</html>


<?php

// Configuration settings
define('SITE_URL', 'http://example.com');
define('SECRET_KEY', 'your_secret_key_here');

require_once 'db_connect.php'; // assume this is your database connection script

if (isset($_POST['username'])) {
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Check if the user exists
  $query = "SELECT id FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Generate a random token and store it in the database
    $token = bin2hex(random_bytes(32));
    $updateQuery = "UPDATE users SET resetToken = '$token' WHERE username = '$username'";
    mysqli_query($conn, $updateQuery);

    // Send password reset email to the user's email address
    sendPasswordResetEmail($email, $token);
  } else {
    echo 'Error: User not found';
  }
} else {
  ?>

  <form action="" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username"><br><br>
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <button type="submit" name="submit">Send Reset Link</button>
  </form>

  <?php
}

function sendPasswordResetEmail($email, $token) {
  $subject = 'Reset Your Password';
  $body = "Click on the following link to reset your password: <a href='" . SITE_URL . "/reset_password.php?token=$token'>$siteUrl/reset_password.php?token=$token</a>";
  mail($email, $subject, $body);
}


<?php

require_once 'db_connect.php'; // assume this is your database connection script

if (isset($_GET['token'])) {
  $token = $_GET['token'];

  // Check if the token exists in the database
  $query = "SELECT id FROM users WHERE resetToken = '$token'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Get the user's data from the database
    $userQuery = "SELECT * FROM users WHERE resetToken = '$token'";
    $userData = mysqli_fetch_assoc(mysqli_query($conn, $userQuery));

    // Allow the user to reset their password
    echo 'Enter your new password: ';
    echo '<input type="password" id="newPassword" name="newPassword"><br><br>';
    echo '<button type="submit" name="reset">Reset Password</button>';

    if (isset($_POST['reset'])) {
      $newPassword = $_POST['newPassword'];
      $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

      // Update the user's password in the database
      $updateQuery = "UPDATE users SET passwordHash = '$hashedPassword' WHERE resetToken = '$token'";
      mysqli_query($conn, $updateQuery);

      echo 'Your password has been successfully updated!';
    }
  } else {
    echo 'Error: Invalid token';
  }
}
?>


// config.php (connects to database)
<?php
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myusername';
$password = 'mypassword';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

// forgot_password.php
<?php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Check if form was submitted
    $email = trim($_POST['email']);

    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Find user by email
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() > 0) {
        // User found, generate new password and send reset link via email
        $user_data = $stmt->fetch();
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);
        $reset_link = 'http://' . $_SERVER['HTTP_HOST'] . '/reset_password.php?email=' . urlencode($email) . '&token=' . hash_hmac('sha256', $user_data['id'], 'mysecretkey');

        // Send email
        $subject = "Reset Password";
        $message = "Click the following link to reset your password: " . $reset_link;
        $headers = "From: no-reply@example.com\r
Content-Type: text/html; charset=UTF-8\r
";

        mail($email, $subject, $message, $headers);

        echo "An email with a reset link has been sent to your inbox.";
    } else {
        echo "No user found with the given email address";
    }
} else {
    // Display form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Email:</label>
    <input type="email" name="email"><br><br>
    <input type="submit" value="Send Reset Link">
</form>

<?php
}
?>


// reset_password.php
<?php
if ($_SERVER['REQUEST_METHOD'] === 'GET') {
    $email = $_GET['email'];
    $token = $_GET['token'];

    // Validate token and email
    if (!empty($email) && !empty($token)) {
        // Find user by email
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            $user_data = $stmt->fetch();
            $stored_token = hash_hmac('sha256', $user_data['id'], 'mysecretkey');

            // Check if token is valid
            if ($token === $stored_token) {
                // User found, allow password change
                ?>
                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                    <label>New Password:</label>
                    <input type="password" name="new_password"><br><br>
                    <label>Confirm New Password:</label>
                    <input type="password" name="confirm_new_password"><br><br>
                    <input type="submit" value="Change Password">
                </form>

                <?php
            } else {
                echo "Invalid token";
            }
        } else {
            echo "No user found with the given email address";
        }
    } else {
        echo "Invalid request";
    }
} else if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Change password
    $new_password = trim($_POST['new_password']);
    $confirm_new_password = trim($_POST['confirm_new_password']);

    if (!empty($new_password) && !empty($confirm_new_password)) {
        if ($new_password === $confirm_new_password) {
            // Update user password
            $stmt = $conn->prepare("UPDATE users SET password_hash = :password WHERE email = :email");
            $stmt->bindParam(':password', password_hash($new_password, PASSWORD_DEFAULT));
            $stmt->bindParam(':email', $_GET['email']);
            $stmt->execute();

            echo "Password changed successfully";
        } else {
            echo "Passwords do not match";
        }
    } else {
        echo "Please fill out all fields";
    }
}
?>


<?php

// Configuration variables
define('EMAIL_SUBJECT', 'Forgot Password');
define('EMAIL_TEMPLATE', '<p>Hello %s,</p><p>A password reset link is provided below.</p><p><a href="%s">Reset Password</a></p>');

// Database connection settings
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to send email
function send_email($email, $password_reset_link) {
  // Email configuration settings
  $smtp_host = 'smtp.gmail.com';
  $smtp_username = 'your-email@gmail.com';
  $smtp_password = 'your-password';

  // Create a new PHPMailer instance
  require_once 'phpmailer/class.phpmailer.php';
  $mail = new PHPMailer();

  // Set the SMTP server configuration
  $mail->isSMTP();
  $mail->Host = $smtp_host;
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = $smtp_username;
  $mail->Password = $smtp_password;

  // Send email
  $mail->setFrom($smtp_username, 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = EMAIL_SUBJECT;
  $mail->Body = sprintf(EMAIL_TEMPLATE, $email, $password_reset_link);

  if (!$mail->send()) {
    echo 'Error sending email: ' . $mail->ErrorInfo;
  }
}

// Function to reset password
function reset_password($id) {
  // Generate a new password
  $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 8);

  // Update the user's password in the database
  $sql = "UPDATE users SET password_hash = '$new_password' WHERE id = '$id'";
  $conn->query($sql);
}

// Forgot password function
function forgot_password($username) {
  // Query the database to retrieve the user's email and ID
  $sql = "SELECT email, id FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // Retrieve the user's email and ID from the result set
    $row = $result->fetch_assoc();
    $email = $row['email'];
    $id = $row['id'];

    // Generate a password reset link
    $password_reset_link = 'http://your-website.com/reset-password.php?id=' . $id;

    // Send email with the password reset link
    send_email($email, $password_reset_link);

    echo 'A password reset link has been sent to your email.';
  } else {
    echo 'User not found.';
  }
}

// Example usage:
forgot_password('example-username');

?>


function forgot_password($email) {
  // Check if email exists in database
  $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  // If user doesn't exist, throw an exception
  if (!$user) {
    throw new Exception('Email not found');
  }

  // Generate a random reset token
  $reset_token = bin2hex(random_bytes(32));

  // Update the user's reset token and expiration time
  $stmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expires = CURRENT_TIMESTAMP + INTERVAL 30 MINUTE WHERE email = :email");
  $stmt->bindParam(':token', $reset_token);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Send password reset email
  $subject = 'Reset your password';
  $body = '
    <p>Hello ' . htmlspecialchars($user['name']) . '</p>
    <p>To reset your password, click on the following link:</p>
    <a href="' . url('/reset-password', ['token' => $reset_token]) . '">Reset Password</a>
  ';

  // Mail library (e.g. PHPMailer)
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPSecure = 'tls';
  $mail->SMTPAuth = true;
  $mail->Username = 'your-email@example.com';
  $mail->Password = 'your-password';

  // Send email
  $mail->setFrom('your-email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $body;
  if (!$mail->send()) {
    throw new Exception('Failed to send email');
  }
}


function reset_password($token) {
  // Check if token exists in database
  $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = :token AND reset_expires > CURRENT_TIMESTAMP");
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $user = $stmt->fetch();

  // If user doesn't exist or token has expired, throw an exception
  if (!$user) {
    throw new Exception('Invalid token');
  }

  // Get the user's current password hash
  $stmt = $conn->prepare("SELECT password_hash FROM users WHERE id = :id");
  $stmt->bindParam(':id', $user['id']);
  $stmt->execute();
  $current_password_hash = $stmt->fetch();

  // Prompt user to enter new password
  $new_password = readline('Enter your new password: ');
  $confirm_new_password = readline('Confirm your new password: ');

  // If passwords don't match, throw an exception
  if ($new_password !== $confirm_new_password) {
    throw new Exception('Passwords do not match');
  }

  // Hash the new password
  $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);

  // Update the user's password hash and reset token
  $stmt = $conn->prepare("UPDATE users SET password_hash = :password_hash, reset_token = NULL WHERE id = :id");
  $stmt->bindParam(':password_hash', $hashed_new_password);
  $stmt->bindParam(':id', $user['id']);
  $stmt->execute();

  // Log the user in (if desired)
}


forgot_password('example@example.com');


reset_password($token);


<?php
// Include your database connection script here or establish it directly in this file.
require_once 'db.php';

if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Validate the input email address
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {

        // Check if the user exists in the database
        $query = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                $userId = $row['id'];
                // Generate a reset token and store it in the database for this user
                $token = bin2hex(random_bytes(32));

                // Update the user's information to include the reset token.
                $updateQuery = "UPDATE users SET reset_token = '$token' WHERE id = '$userId'";
                mysqli_query($conn, $updateQuery);

                // Send an email with a link for resetting the password
                $subject = 'Reset Password';
                $message = "Click here to reset your password: <a href='http://example.com/reset-password.php?email=$email&token=$token'>Reset Password</a>";
                mail($email, $subject, $message);

                echo "<p>Check your email for the reset link.</p>";
            }
        } else {
            echo "User not found.";
        }
    } else {
        echo "Invalid email address.";
    }

} else {
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>

<h2>Reset Your Password</h2>

<form action="" method="post">
    <label for="email">Email Address:</label><br>
    <input type="text" id="email" name="email" required placeholder="example@example.com"><br>
    <input type="submit" name="submit" value="Send Reset Link">
</form>

<?php
}
?>


<?php
// Include your database connection script here or establish it directly in this file.
require_once 'db.php';

if (isset($_GET['email']) && isset($_GET['token'])) {
    $email = $_GET['email'];
    $token = $_GET['token'];

    // Validate the token and ensure it's within a certain timeframe
    // For simplicity, we're not implementing this here. You should add logic to check if the token is valid (hasn't expired, etc.).

    $query = "SELECT * FROM users WHERE email = '$email' AND reset_token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Allow the user to set a new password
            echo "Set your new password:<br>";
            echo "<form action='' method='post'>";
            echo "<input type='password' name='new_password'><br>";
            echo "<input type='submit' value='Change Password'>";
            echo "</form>";

            if (isset($_POST['new_password'])) {
                $newPassword = $_POST['new_password'];
                // Update the user's password in the database
                $updateQuery = "UPDATE users SET password = '$newPassword', reset_token = NULL WHERE email = '$email'";
                mysqli_query($conn, $updateQuery);

                echo "<p>Password updated.</p>";
            }
        }
    } else {
        echo "Invalid token.";
    }

} else {
    header('Location: forgot-password.php');
}
?>


<?php

// Configuration
define('APP_URL', 'http://example.com');

// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_database_username';
$password = 'your_database_password';

// Connect to database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Get the user's email
    $email = $_POST['email'];

    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Fetch the user data
    $user_data = $stmt->fetch();

    if ($user_data) {

        // Generate a random token for password reset
        $token = bin2hex(random_bytes(16));

        // Update the user's token in the database
        $update_stmt = $conn->prepare("UPDATE users SET password_token=:token WHERE email=:email");
        $update_stmt->bindParam(':token', $token);
        $update_stmt->bindParam(':email', $email);
        $update_stmt->execute();

        // Send an email with a link to reset the password
        $subject = 'Reset your password';
        $message = '
            <p>Click on the following link to reset your password:</p>
            <p><a href="' . APP_URL . '/reset_password.php?email=' . urlencode($email) . '&token=' . $token . '">Reset Password</a></p>
            ';
        $headers = 'From: no-reply@example.com' . "\r
" .
            'Content-Type: text/html; charset=UTF-8' . "\r
";

        mail($email, $subject, $message, $headers);

        echo "An email with password reset link has been sent to your registered email address.";
    } else {
        echo "Email not found in the database.";
    }
}

?>

<!-- HTML Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Enter your email:</label>
    <input type="email" id="email" name="email" required>

    <button type="submit">Send Password Reset Link</button>
</form>


<?php

// Configuration
define('APP_URL', 'http://example.com');

// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_database_username';
$password = 'your_database_password';

// Connect to database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get the email and token from the URL query string
$email = $_GET['email'];
$token = $_GET['token'];

// Check if the user's token matches the one in the database
$stmt = $conn->prepare("SELECT * FROM users WHERE email=:email AND password_token=:token");
$stmt->bindParam(':email', $email);
$stmt->bindParam(':token', $token);
$stmt->execute();

// Fetch the user data
$user_data = $stmt->fetch();

if ($user_data) {

    // Display a form to enter new password
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="new_password">Enter your new password:</label>
    <input type="password" id="new_password" name="new_password" required>

    <button type="submit">Reset Password</button>
</form>

<?php
} else {
    echo "Invalid token.";
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Get the new password from the form
    $new_password = $_POST['new_password'];

    // Update the user's password in the database
    $update_stmt = $conn->prepare("UPDATE users SET password=:password, password_token=NULL WHERE email=:email");
    $update_stmt->bindParam(':password', hash('sha256', $new_password));
    $update_stmt->bindParam(':email', $email);
    $update_stmt->execute();

    echo "Password reset successfully!";
}

?>

</body>
</html>


<?php

// Configuration settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
    exit();
}

// Function to send password reset email
function send_password_reset_email($email, $password_reset_link) {
    // Create a new mailer object
    $mailer = Mailer::instance();

    // Set the sender and recipient emails
    $from_email = 'no-reply@example.com';
    $to_email = $email;

    // Set the email subject and body
    $subject = 'Password Reset Request';
    $body = "Click on this link to reset your password: <a href='$password_reset_link'>$password_reset_link</a>";

    // Send the email
    try {
        $mailer->sendEmail($from_email, $to_email, $subject, $body);
        echo "Email sent successfully!";
    } catch (Exception $e) {
        echo "Error sending email: " . $e->getMessage();
    }
}

// Function to generate a password reset link
function generate_password_reset_link($email) {
    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Insert the token into the database
    $query = "INSERT INTO password_resets (email, token) VALUES ('$email', '$token')";
    if (!$mysqli->query($query)) {
        echo "Error generating password reset link: (" . $mysqli->errno . ") " . $mysqli->error;
        exit();
    }

    // Return the password reset link
    return "http://example.com/reset-password?token=$token";
}

// Forgot password function
function forgot_password() {
    // Get the email address from the request
    if (!isset($_POST['email'])) {
        echo "Error: Email is required.";
        exit();
    }
    $email = $_POST['email'];

    // Check if the user exists in the database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = $mysqli->query($query);
    if (!$result || !$row = $result->fetch_assoc()) {
        echo "Error: User not found.";
        exit();
    }

    // Generate a password reset link and send an email
    $password_reset_link = generate_password_reset_link($email);
    send_password_reset_email($email, $password_reset_link);

    echo "Email sent successfully. Please check your inbox for the password reset link.";
}

// Check if the request is a POST request to the forgot password endpoint
if ($_SERVER['REQUEST_METHOD'] == 'POST' && $_POST['action'] == 'forgot-password') {
    // Call the forgot password function
    forgot_password();
} else {
    echo "Error: Invalid request method or action.";
}


// functions.php

function forgot_password($email) {
  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) == 0) {
    // Email not found, return error message
    echo "Email not found.";
    return;
  }

  // Email exists, generate a random password reset token
  $token = bin2hex(random_bytes(32));
  $token_expires_at = date("Y-m-d H:i:s", strtotime("+1 hour"));

  // Update user's password reset token in database
  $query = "UPDATE users SET password_reset_token = '$token', password_reset_expires_at = '$token_expires_at' WHERE email = '$email'";
  mysqli_query($conn, $query);

  // Send email with password reset link
  send_password_reset_email($token, $email);
}

function send_password_reset_email($token, $email) {
  // Set up email variables
  $subject = "Password Reset Request";
  $body = "Click here to reset your password: <a href='" . URL . "/reset-password?token=" . $token . "'>Reset Password</a>";
  $from_email = "your-email@example.com";

  // Send email using PHPMailer or another library
  // ...
}


// functions.php

function reset_password($token) {
  // Check if token exists in database
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) == 0) {
    // Token not found or has expired, return error message
    echo "Invalid token.";
    return;
  }

  // Token exists and hasn't expired, prompt user to enter new password
  $new_password = $_POST['new_password'];
  $confirm_new_password = $_POST['confirm_new_password'];

  if ($new_password !== $confirm_new_password) {
    // Passwords don't match, return error message
    echo "Passwords do not match.";
    return;
  }

  // Update user's password in database
  $query = "UPDATE users SET password = '$new_password', password_reset_token = NULL WHERE password_reset_token = '$token'";
  mysqli_query($conn, $query);

  // User's password has been updated successfully!
  echo "Password reset successful!";
}


forgot_password($_POST['email']);


<?php
// Configuration
$db_host = 'localhost';
$db_user = 'your_username';
$db_pass = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle form submission
if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Query database for user with matching email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $reset_token = bin2hex(random_bytes(32));
            $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
            $conn->query($update_query);

            // Send password reset email
            send_password_reset_email($row['email'], $reset_token);
        }
    } else {
        echo "Email not found";
    }
}

// Send password reset email function
function send_password_reset_email($email, $reset_token) {
    // Email configuration
    $to = $email;
    $subject = 'Password Reset';
    $body = "Click here to reset your password: <a href='reset_password.php?token=$reset_token'>Reset Password</a>";

    // Send email using PHP's mail function or a library like SwiftMailer
}
?>

<!-- HTML Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Email: <input type="email" name="email" required>
    <button type="submit" name="submit">Send Reset Link</button>
</form>


<?php
// Configuration
$db_host = 'localhost';
$db_user = 'your_username';
$db_pass = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle form submission (password reset)
if (isset($_POST['submit'])) {
    $reset_token = $_POST['token'];
    $new_password = $_POST['new_password'];

    // Validate new password
    if (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/', $new_password)) {
        echo "Invalid password";
        exit;
    }

    // Query database for user with matching reset token
    $query = "SELECT * FROM users WHERE reset_token = '$reset_token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $update_query = "UPDATE users SET password = '$new_password', reset_token = NULL WHERE email = '$row[email]'";
            $conn->query($update_query);
        }
    } else {
        echo "Invalid reset token";
    }
}

// Display form for entering new password
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
    New Password: <input type="password" name="new_password" required>
    Confirm Password: <input type="password" name="confirm_password" required>
    <button type="submit" name="submit">Reset Password</button>
</form>


<?php

require_once 'db.php';

function forgot_password($email) {
    // Check if the email exists in our database.
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() == 0) {
        return 'Email not found!';
    }

    // Generate a reset code.
    $reset_code = substr(md5(uniqid()), 0, 50);

    // Insert the reset code into our database.
    $query = "INSERT INTO passwords_reset (user_id, reset_code) VALUES (:user_id, :reset_code)";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':user_id', $stmt->fetchColumn('id'));
    $stmt->bindParam(':reset_code', $reset_code);
    $stmt->execute();

    // Send a password reset link to the user's email.
    send_reset_link($email, $reset_code);

    return 'Password reset link has been sent to your email!';
}

function send_reset_link($email, $reset_code) {
    $message = "Click on this link to reset your password: <a href='http://example.com/reset-password/$reset_code'>Reset Password</a>";
    mail($email, 'Forgot Password', $message);
}

// Example usage.
$email = 'user@example.com';
echo forgot_password($email);

?>


<?php

require_once 'db.php';

function reset_password($reset_code) {
    // Check if the reset code exists in our database.
    $query = "SELECT * FROM passwords_reset WHERE reset_code = :reset_code";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':reset_code', $reset_code);
    $stmt->execute();

    if ($stmt->rowCount() == 0) {
        return 'Invalid reset code!';
    }

    // Get the user's ID.
    $user_id = $stmt->fetchColumn('user_id');

    // Prompt the user to enter a new password and confirm it.
    $new_password = trim(fgets(STDIN));
    if (empty($new_password) || empty(trim(fgets(STDIN)))) {
        return 'Password fields cannot be empty!';
    }

    // Hash the new password and update the user's password in our database.
    $query = "UPDATE users SET password = :password WHERE id = :user_id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':password', password_hash($new_password, PASSWORD_DEFAULT));
    $stmt->bindParam(':user_id', $user_id);
    $stmt->execute();

    // Delete the reset code from our database.
    $query = "DELETE FROM passwords_reset WHERE user_id = :user_id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':user_id', $user_id);
    $stmt->execute();

    return 'Password has been successfully reset!';
}

// Example usage.
$reset_code = '123456789012345678901234567890';
echo reset_password($reset_code);

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the email address from the form submission
$email = $_POST['email'];

// Check if the email is valid
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
}

// Query to select the user's ID and hashed password
$query = "SELECT id, password FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get the user's data from the result
    $row = $result->fetch_assoc();
    $userId = $row['id'];
    $hashedPassword = $row['password'];

    // Generate a random password reset token
    $token = bin2hex(random_bytes(32));

    // Store the token in the database (you can use a separate table for this)
    $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$userId', '$token')";
    $conn->query($query);

    // Send an email with the reset link
    sendPasswordResetEmail($email, $token);
} else {
    echo 'Email not found';
}

// Function to send the password reset email
function sendPasswordResetEmail($email, $token) {
    // Configuration for your email provider (e.g. Gmail)
    $from = 'your_email@example.com';
    $to = $email;
    $subject = 'Reset your password';
    $body = '
        <p>Hello,</p>
        <p>To reset your password, click on this link:</p>
        <a href="' . $_SERVER['PHP_SELF'] . '?token=' . $token . '">Reset Password</a>
        <p>Best regards,
        [Your Name]</p>';

    // Send the email using PHPMailer (you'll need to install it first)
    require 'phpmailer/PHPMailerAutoload.php';
    $mail = new PHPMailer;
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom($from, 'Your Name');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $body;
    if (!$mail->send()) {
        echo 'Error sending email: ' . $mail->ErrorInfo;
    }
}

// Close the database connection
$conn->close();

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the token from the URL parameter
$token = $_GET['token'];

// Check if the token is valid
$query = "SELECT * FROM password_reset_tokens WHERE token = '$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get the user's data from the result
    $row = $result->fetch_assoc();
    $userId = $row['user_id'];

    // Generate a new password for the user
    $newPassword = bin2hex(random_bytes(32));

    // Update the user's hashed password in the database
    $query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
    $conn->query($query);

    // Delete the password reset token from the database
    $query = "DELETE FROM password_reset_tokens WHERE token = '$token'";
    $conn->query($query);
} else {
    echo 'Invalid token';
}

// Close the database connection
$conn->close();

?>


<?php

// Configuration settings
$database_host = 'localhost';
$database_username = 'your_username';
$database_password = 'your_password';
$database_name = 'your_database';

// Connect to database
$mysqli = new mysqli($database_host, $database_username, $database_password, $database_name);
if ($mysqli->connect_errno) {
    die("Error connecting to database: " . $mysqli->connect_error);
}

// Function to send reset link via email
function send_reset_link($email, $reset_token) {
    // Send email using your preferred method (e.g., PHPMailer)
    // For demonstration purposes, we'll just print the email body
    echo "Subject: Reset Password
";
    echo "To: $email
";
    echo "From: your_email@example.com
";
    echo "
";
    echo "Click here to reset password: http://your-website.com/reset-password.php?token=$reset_token
";
}

// Handle form submission
if (isset($_POST['submit'])) {
    // Get email from form input
    $email = $_POST['email'];

    // Check if user exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);
    if ($result->num_rows > 0) {
        // User found, generate reset token and send email
        $reset_token = bin2hex(random_bytes(32));
        $mysqli->query("UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'");
        send_reset_link($email, $reset_token);
        echo "Reset link sent to your email!";
    } else {
        echo "Email not found. Please try again.";
    }
}

// Display form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" value="Send Reset Link" name="submit">
</form>


// Forgot Password Function

function forgot_password($email) {
  // Check if email exists in database
  $user = getUserByEmail($email);
  
  if ($user !== false) {
    // Generate a new reset token and set expiration time to 1 hour
    $reset_token = bin2hex(random_bytes(32));
    $expires_at = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Update user record with new reset token and expiration time
    updateUserResetToken($user['id'], $reset_token, $expires_at);
    
    // Send email to user with password reset link
    sendPasswordResetEmail($email, $reset_token);
    
    return true; // Password reset email sent successfully
  } else {
    return false; // Email not found in database
  }
}

// Get User by Email Function

function getUserByEmail($email) {
  global $db;
  
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($db, $query);
  
  if (mysqli_num_rows($result) == 1) {
    return mysqli_fetch_assoc($result);
  } else {
    return false; // Email not found in database
  }
}

// Update User Reset Token Function

function updateUserResetToken($user_id, $reset_token, $expires_at) {
  global $db;
  
  $query = "UPDATE users SET reset_token = '$reset_token', reset_expires = '$expires_at' WHERE id = '$user_id'";
  mysqli_query($db, $query);
}

// Send Password Reset Email Function

function sendPasswordResetEmail($email, $reset_token) {
  // Implement email sending logic here using a library like PHPMailer
  echo "Sending password reset email to $email with token: $reset_token";
}


<?php

require_once 'config.php'; // database connection settings

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    if (empty($username) || empty($email)) {
        echo "Please enter both username and email";
        exit;
    }

    try {
        // Get user data from database
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = :username AND email = :email");
        $stmt->execute([':username' => $username, ':email' => $email]);
        $user = $stmt->fetch();

        if ($user) {
            // Generate a password reset token
            $token = bin2hex(random_bytes(32));

            // Store the token in the database (you can use a separate table for tokens)
            $stmt = $pdo->prepare("INSERT INTO password_reset_tokens (user_id, token) VALUES (:user_id, :token)");
            $stmt->execute([':user_id' => $user['id'], ':token' => $token]);

            // Send the reset link to the user's email
            $subject = "Password Reset Link";
            $body = "<a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=" . $token . "'>Click here to reset your password</a>";
            sendEmail($email, $subject, $body);

            echo "A password reset link has been sent to your email.";
        } else {
            echo "Username or email is incorrect";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    // Display the form
?>

<form action="" method="post">
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit">Send Password Reset Link</button>
</form>

<?php
}


<?php

require_once 'config.php'; // database connection settings

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $token = $_POST['token'];
    $newPassword = $_POST['newPassword'];

    if (empty($token) || empty($newPassword)) {
        echo "Please enter both token and new password";
        exit;
    }

    try {
        // Get user data from database using the token
        $stmt = $pdo->prepare("SELECT * FROM users WHERE id IN (SELECT user_id FROM password_reset_tokens WHERE token = :token)");
        $stmt->execute([':token' => $token]);
        $user = $stmt->fetch();

        if ($user) {
            // Update the user's password
            $newPasswordHash = password_hash($newPassword, PASSWORD_DEFAULT);
            $stmt = $pdo->prepare("UPDATE users SET password_hash = :password_hash WHERE id = :id");
            $stmt->execute([':password_hash' => $newPasswordHash, ':id' => $user['id']]);

            // Delete the token from the database
            $stmt = $pdo->prepare("DELETE FROM password_reset_tokens WHERE token = :token AND user_id = :user_id");
            $stmt->execute([':token' => $token, ':user_id' => $user['id']]);

            echo "Password updated successfully!";
        } else {
            echo "Invalid token";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    // Display the form
?>

<form action="" method="post">
  <label for="token">Token:</label>
  <input type="text" id="token" name="token"><br><br>
  <label for="newPassword">New Password:</label>
  <input type="password" id="newPassword" name="newPassword"><br><br>
  <button type="submit">Reset Password</button>
</form>

<?php
}


// Database connection settings
$pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');


// Configuration file (config.php)
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'mydatabase');

// Connect to the database
$dsn = "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME;
$dbh = new PDO($dsn, DB_USER, DB_PASSWORD);

// Forgot password function
function forgot_password($email) {
  global $dbh;

  // Check if email exists in the database
  $stmt = $dbh->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->execute([$email]);
  $user = $stmt->fetch();

  if (!$user) {
    return array('error' => 'Email not found');
  }

  // Generate a random reset token
  $reset_token = bin2hex(random_bytes(32));

  // Update the user's reset token in the database
  $stmt = $dbh->prepare("UPDATE users SET reset_token = ? WHERE email = ?");
  $stmt->execute([$reset_token, $email]);

  // Send a password reset email to the user
  send_reset_email($email, $reset_token);

  return array('success' => 'Password reset link sent to your email');
}

// Function to send password reset email
function send_reset_email($email, $reset_token) {
  // Email configuration (e.g. Gmail)
  define('EMAIL_HOST', 'smtp.gmail.com');
  define('EMAIL_PORT', 587);
  define('EMAIL_USERNAME', 'your-email@gmail.com');
  define('EMAIL_PASSWORD', 'your-password');

  // Send email using PHPMailer
  require_once 'PHPMailer.php';
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = EMAIL_HOST;
  $mail->Port = EMAIL_PORT;
  $mail->Username = EMAIL_USERNAME;
  $mail->Password = EMAIL_PASSWORD;
  $mail->setFrom(EMAIL_USERNAME, 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = 'Reset your password';
  $mail->Body = "Click on this link to reset your password: <a href='http://example.com/reset-password?token=" . $reset_token . "'>Reset Password</a>";
  $mail->send();

  return true;
}

// Handle forgot password request
if (isset($_POST['email'])) {
  $email = $_POST['email'];
  $result = forgot_password($email);

  if ($result['success']) {
    echo 'Password reset link sent to your email';
  } else {
    echo json_encode($result);
  }
}


<?php

// Include database connection settings
require_once 'db_config.php';

// Set error reporting level
error_reporting(E_ALL);

// Set password reset time limit to 1 hour
$reset_time_limit = 3600;

function send_reset_email($email) {
    // Send email with password reset link
    $to      = $email;
    $subject = 'Password Reset';
    $message = '
        <html>
            <body>
                <p>Dear User, please click on the following link to reset your password.</p>
                <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . generate_reset_token($email) . '">Reset Password</a>
            </body>
        </html>
    ';

    // Send email using PHPMailer or mail() function
    $headers = 'From: no-reply@example.com' . "\r
" .
               'Content-type: text/html; charset=UTF-8';
    mail($to, $subject, $message, $headers);
}

function generate_reset_token($email) {
    // Generate random token for password reset
    return md5(uniqid(mt_rand(), true)) . md5(uniqid(mt_rand(), true));
}

function verify_reset_token($token, $email) {
    // Verify password reset token and email
    global $db;
    $query = "SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'";
    $result = mysqli_query($db, $query);
    return mysqli_num_rows($result) > 0;
}

function update_password($token, $new_password) {
    // Update user's password using the reset token
    global $db;
    $query = "UPDATE users SET password_hash = SHA1('$new_password'), password_reset_token = '' WHERE password_reset_token = '$token'";
    mysqli_query($db, $query);
}

if (isset($_POST['submit'])) {
    // Validate form input
    if (!empty($_POST['email']) && filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
        send_reset_email($_POST['email']);
        echo 'Email sent with password reset link';
    } else {
        echo 'Invalid email address';
    }
} elseif (isset($_GET['token'])) {
    // Verify reset token and display password update form
    $reset_token = $_GET['token'];
    $email = get_reset_email_from_token($reset_token);
    if ($email !== false && verify_reset_token($reset_token, $email)) {
        echo '<h2>Reset Password</h2>';
        echo '<form action="update_password.php" method="post">';
        echo '<input type="hidden" name="token" value="' . $reset_token . '">';
        echo '<label for="new_password">New Password:</label><br>';
        echo '<input type="password" id="new_password" name="new_password"><br>';
        echo '<button type="submit" name="update_password">Update Password</button>';
        echo '</form>';
    } else {
        echo 'Invalid reset token or email';
    }
}

function get_reset_email_from_token($token) {
    // Get user's email from the reset token
    global $db;
    $query = "SELECT email FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($db, $query);
    return mysqli_fetch_assoc($result)['email'];
}

?>


<?php

require_once 'forgot_password.php';

if (isset($_POST['update_password'])) {
    // Update user's password using the reset token
    update_password($_POST['token'], $_POST['new_password']);
    echo 'Password updated successfully!';
}

?>


function forgot_password($email) {
  // Connect to database (assuming you're using MySQL)
  $db = mysqli_connect("localhost", "username", "password", "database");

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($db, $query);
  if (mysqli_num_rows($result) == 0) {
    return "Email not found";
  }

  // Generate a random token for the user to reset their password
  $token = bin2hex(random_bytes(16));

  // Update the user's record with the new token
  $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
  mysqli_query($db, $query);

  // Send an email to the user with a link to reset their password
  $subject = "Reset your password";
  $message = "
    <p>Hello $email,</p>
    <p>Click on the following link to reset your password:</p>
    <p><a href='" . url('reset-password', ['token' => $token]) . "'>Reset Password</a></p>
  ";
  mail($email, $subject, $message);

  return "Password reset email sent";
}


function reset_password($token, $new_password) {
  // Connect to database (assuming you're using MySQL)
  $db = mysqli_connect("localhost", "username", "password", "database");

  // Check if token is valid
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($db, $query);
  if (mysqli_num_rows($result) == 0) {
    return "Invalid token";
  }

  // Update the user's record with the new password
  $query = "UPDATE users SET password = '$new_password', password_reset_token = NULL WHERE password_reset_token = '$token'";
  mysqli_query($db, $query);

  return "Password reset successfully";
}


$email = "user@example.com";
$password = "new_password";

// Call forgot_password function to send email with reset link
echo forgot_password($email);

// Call reset_password function to update user's password
echo reset_password($token, $password);


// config.php (assumed you have this setup for database connection)
<?php
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
}

function sendVerificationEmail($email, $token)
{
    // Email setup (you may need to adjust these for your SMTP server)
    $to = $email;
    $subject = 'Password Recovery';
    $headers .= 'From: your_email@example.com' . "\r
";
    $msgBody = "Your password recovery link: <a href='http://yourdomain.com/reset_password.php?token=$token'>Click here to reset</a>";
    
    mail($to, $subject, $msgBody, $headers);
}

function forgotPassword()
{
    global $mysqli;
    
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $email = $_POST['email'];
        
        // Verify email exists
        $query = "SELECT id FROM users WHERE email = '$email'";
        $result = $mysqli->query($query);
        if ($result->num_rows > 0) {
            // Generate token
            $token = hash('sha256', uniqid());
            
            // Insert into a separate table for tokens (for security)
            $insertTokenQuery = "INSERT INTO password_tokens (user_id, token) VALUES ((SELECT id FROM users WHERE email = '$email'), '$token')";
            if (!$mysqli->query($insertTokenQuery)) {
                echo "Error generating token.";
            }
            
            // Send verification email
            sendVerificationEmail($email, $token);
            
            echo "An email has been sent to $email with a link to reset your password.";
        } else {
            echo "No account exists with this email.";
        }
    }
}

// Call the forgotPassword function when form is submitted
forgotPassword();


<?php

require_once 'config.php';

function verifyTokenAndReset($token)
{
    global $mysqli;
    
    // Retrieve user from the token
    $query = "SELECT u.id, pt.token FROM users u INNER JOIN password_tokens pt ON u.id = pt.user_id WHERE pt.token = '$token'";
    $result = $mysqli->query($query);
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Create a new password and hash it
        $newPassword = 'your_new_password'; // Use something secure here, not hardcoded!
        $hashedPassword = md5($newPassword); // Again, this should be more secure; consider using bcrypt or similar.
        
        // Update user's password in the database
        $updateQuery = "UPDATE users SET password = '$hashedPassword' WHERE id = {$row['id']}";
        if (!$mysqli->query($updateQuery)) {
            echo "Error resetting password.";
        }
        
        // Clean up: Remove token from tokens table to prevent reuse
        $removeTokenQuery = "DELETE FROM password_tokens WHERE user_id = {$row['id']} AND token = '$token'";
        $mysqli->query($removeTokenQuery);
        
        echo "Password has been reset successfully!";
    } else {
        echo "Invalid or expired token.";
    }
}

// Example usage
if (isset($_GET['token'])) {
    verifyTokenAndReset($_GET['token']);
}
?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // change this to a random secret key
$reset_token_expiration = 60 * 15; // 15 minutes in seconds

// Function to generate a reset token
function generate_reset_token($email) {
  $token = bin2hex(random_bytes(32));
  return array(
    'token' => $token,
    'expires_at' => time() + $reset_token_expiration
  );
}

// Function to send the password reset email
function send_password_reset_email($email, $token) {
  $subject = "Reset your password";
  $body = "
  Dear user,

  You are receiving this email because we received a request to reset your password.

  To reset your password, click on the following link:
  <a href='" . $GLOBALS['base_url'] . "/reset_password?token=" . $token . "'>Reset Password</a>

  If you did not request this change, please ignore this email.
";

  // Send the email using a mail library (e.g. PHPMailer)
  // ...
}

// Handle the forgot password form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];
  if ($email !== '') {
    try {
      // Get the user from the database
      $user = get_user_from_email($email);
      if ($user) {
        // Generate a reset token and send the email
        $reset_token = generate_reset_token($email);
        send_password_reset_email($email, $reset_token['token']);
        echo "Email sent with password reset link.";
      } else {
        throw new Exception("User not found");
      }
    } catch (Exception $e) {
      echo "Error: " . $e->getMessage();
    }
  } else {
    echo "Please enter your email address.";
  }
}

function get_user_from_email($email) {
  // Query the database to retrieve the user
  $query = "
    SELECT id, email, password_hash
    FROM users
    WHERE email = :email
  ";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  return $stmt->fetch();
}

?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // change this to a random secret key

// Function to validate the reset token
function validate_reset_token($token) {
  $query = "
    SELECT id, email, expires_at
    FROM users
    WHERE reset_token = :token
  ";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $result = $stmt->fetch();
  if ($result) {
    return array(
      'id' => $result['id'],
      'email' => $result['email']
    );
  } else {
    throw new Exception("Invalid token");
  }
}

// Handle the reset password form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $token = $_POST['token'];
  try {
    // Validate the reset token
    $user_data = validate_reset_token($token);
    $email = $user_data['email'];

    // Hash and store the new password
    $new_password = hash('sha256', $_POST['password']);
    $query = "
      UPDATE users
      SET password_hash = :new_password, reset_token = NULL
      WHERE id = :id AND email = :email
    ";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':new_password', $new_password);
    $stmt->bindParam(':id', $user_data['id']);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    echo "Password reset successfully.";
  } catch (Exception $e) {
    echo "Error: " . $e->getMessage();
  }
}

?>


<?php
require 'dbconnect.php'; // assume dbconnect.php contains database connection settings

// validate form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // query to retrieve user data
    $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        $user_data = mysqli_fetch_assoc($result);
        // generate and send password reset link
        require 'send_email.php'; // assume send_email.php contains email sending function

        header('Location: reset_password.php?token=' . $user_data['reset_token']);
    } else {
        echo "Invalid username or email";
    }
}
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Username:</label>
    <input type="text" name="username"><br><br>
    <label>Email:</label>
    <input type="email" name="email"><br><br>
    <input type="submit" value="Submit">
</form>


<?php
require 'dbconnect.php'; // assume dbconnect.php contains database connection settings

// validate token and retrieve user data
$token = $_GET['token'];
$query = "SELECT * FROM users WHERE reset_token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    $user_data = mysqli_fetch_assoc($result);
    // display form to update password
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Enter new password:</label>
    <input type="password" name="new_password"><br><br>
    <label>Confirm new password:</label>
    <input type="password" name="confirm_password"><br><br>
    <input type="submit" value="Submit">
</form>

<?php
} else {
    echo "Invalid token";
}
?>

<?php
// update password if form submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // validate new password and confirm password
    if ($new_password == $confirm_password) {
        // hash new password (use a library like PHPass or Password Hashing for security)
        $hashed_new_password = hash('sha256', $new_password);

        // update user data with new hashed password
        $query = "UPDATE users SET password_hash = '$hashed_new_password' WHERE reset_token = '$token'";
        mysqli_query($conn, $query);

        echo "Password updated successfully!";
    } else {
        echo "Passwords do not match";
    }
}
?>


// forgot_password.php

require_once 'database.php'; // assumes database connection script is in a file named database.php

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows > 0) {
        // User exists, generate password reset token
        $user = $result->fetch_assoc();
        $token = bin2hex(random_bytes(32));
        update_password_reset_token($user['id'], $token);
        send_password_reset_email($email, $token);
    } else {
        echo "Email not found";
    }
} elseif (isset($_POST['token'])) {
    // Password reset token was provided
    $token = $_POST['token'];
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows > 0) {
        // User exists with matching token
        $user = $result->fetch_assoc();
        echo "<form action='reset_password.php' method='post'>
            <label for='new_password'>New Password:</label>
            <input type='password' id='new_password' name='new_password'>
            <input type='hidden' name='token' value='$token'>
            <button type='submit'>Reset Password</button>
        </form>";
    } else {
        echo "Invalid token";
    }
}

function update_password_reset_token($user_id, $token) {
    // Update password reset token in database
    $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
    mysqli_query($conn, $query);
}

function send_password_reset_email($email, $token) {
    // Send email with password reset link
    $subject = 'Password Reset Request';
    $body = "Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>";
    mail($email, $subject, $body);
}


<?php

function sendResetLink($email, $username) {
  global $pdo; // Assuming PDO connection already established

  try {
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($row = $stmt->fetch()) {
      $token = bin2hex(random_bytes(32));
      $expiresAt = date('Y-m-d H:i:s', strtotime('+1 hour'));

      $stmt = $pdo->prepare("INSERT INTO password_resets (user_id, token, expires_at) VALUES (:user_id, :token, :expires_at)");
      $stmt->bindParam(':user_id', $row['id']);
      $stmt->bindParam(':token', $token);
      $stmt->bindParam(':expires_at', $expiresAt);
      $stmt->execute();

      $resetLink = "http://yourdomain.com/reset-password?token=" . $token;
      sendEmail($email, 'Reset Password Link', "Dear $username,

Click the following link to reset your password: $resetLink

Best Regards,
[Your Name]");
    } else {
      throw new Exception('User not found');
    }
  } catch (Exception $e) {
    echo "Error: " . $e->getMessage();
  }
}

function sendEmail($email, $subject, $body) {
  // Implement your email sending logic here
  // You can use PHPMailer or any other library to send emails
}

// Example usage:
sendResetLink("user@example.com", "John Doe");

?>


function resetPassword($token, $password) {
  global $pdo;

  try {
    $stmt = $pdo->prepare("SELECT * FROM password_resets WHERE token = :token AND expires_at > NOW()");
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    if ($row = $stmt->fetch()) {
      $userStmt = $pdo->prepare("UPDATE users SET password = :password WHERE id = :id");
      $userStmt->bindParam(':password', $password);
      $userStmt->bindParam(':id', $row['user_id']);
      $userStmt->execute();

      $resetStmt = $pdo->prepare("DELETE FROM password_resets WHERE token = :token");
      $resetStmt->bindParam(':token', $token);
      $resetStmt->execute();
    } else {
      throw new Exception('Invalid or expired token');
    }
  } catch (Exception $e) {
    echo "Error: " . $e->getMessage();
  }
}

// Example usage:
resetPassword("your_token", "new_password");
?>


<?php
require_once 'dbconfig.php'; // assume this contains your database connection settings

if (isset($_POST['forgot-password'])) {
  $email = $_POST['email'];
  
  // validate input
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }
  
  // generate reset token
  $resetToken = bin2hex(random_bytes(32));
  
  // update user's password reset field in database
  try {
    $stmt = $pdo->prepare("UPDATE users SET password_reset_token = :token WHERE email = :email");
    $stmt->execute([':token' => $resetToken, ':email' => $email]);
    
    // send password reset link to user via email
    sendPasswordResetEmail($email, $resetToken);
  } catch (PDOException $e) {
    echo "Error updating password reset token";
    exit;
  }
}

// function to send password reset email
function sendPasswordResetEmail($email, $resetToken)
{
  // configure email settings (SMTP server, from address, etc.)
  $fromEmail = 'your-email@example.com';
  $subject = 'Reset Your Password';
  
  // construct email body with password reset link
  $body = "<p>Click this link to reset your password:</p><a href='reset-password.php?token=$resetToken'>Reset Password</a>";
  
  try {
    mail($email, $subject, $body, 'From: ' . $fromEmail);
    echo "Password reset email sent to $email";
  } catch (Exception $e) {
    echo "Error sending password reset email: " . $e->getMessage();
  }
}

// function to handle password reset form submission
if (isset($_POST['reset-password'])) {
  // extract token from URL
  $token = $_GET['token'];
  
  // validate input fields
  if (!isset($_POST['new-password']) || !isset($_POST['confirm-new-password'])) {
    echo "Error: both new password and confirm new password are required";
    exit;
  }
  
  // hash new password and update user's password in database
  try {
    $stmt = $pdo->prepare("UPDATE users SET password = :password WHERE password_reset_token = :token");
    $stmt->execute([':password' => password_hash($_POST['new-password'], PASSWORD_DEFAULT), ':token' => $token]);
    
    // reset password reset token in database
    $stmt = $pdo->prepare("UPDATE users SET password_reset_token = NULL WHERE password_reset_token = :token");
    $stmt->execute([':token' => $token]);
  } catch (PDOException $e) {
    echo "Error updating user's password";
  }
}
?>


<?php
require_once 'connect.php'; // Your database connection script

if (isset($_POST['submit'])) {
  $username = $_POST['username'];
  
  // Check if username exists
  $query = "SELECT * FROM users WHERE username=:username";
  try {
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':username', $username);
    $stmt->execute();
    
    if ($stmt->rowCount() > 0) {
      // User found, send reset password email
      $user = $stmt->fetch(PDO::FETCH_ASSOC);
      
      // Generate a new random token
      $token = bin2hex(random_bytes(32));
      // Set it as the user's new password (insecure for this example)
      $newPassword = password_hash($token, PASSWORD_DEFAULT);
      try {
        // Update the user's password and email
        $query = "UPDATE users SET password=:password WHERE username=:username";
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':password', $newPassword);
        $stmt->bindParam(':username', $username);
        $stmt->execute();
        
        // Email to reset password (for simplicity, email is sent here directly)
        mail($user['email'], "Reset Password", "Your new temporary password: $token");
        
        echo "Email has been sent with a new password. Please note that this is an insecure example.";
      } catch(PDOException $e) {
        die('Error updating user password');
      }
    } else {
      echo "Username not found";
    }
  } catch (PDOException $e) {
    die("Database query error: " . $e->getMessage());
  }
}
?>

<!-- Form to request a new password -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="text" name="username" placeholder="Username" required>
  <button type="submit" name="submit">Reset Password</button>
</form>


<?php

// Configuration settings
$hostname = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to the database
$conn = new mysqli($hostname, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_reset_email($email, $token)
{
    // Use a mail library like PHPMailer or SwiftMailer for sending emails
    $subject = 'Reset Password';
    $body = 'Click here to reset your password: <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>';
    $headers = 'From: your_email@example.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8' . "\r
";
    mail($email, $subject, $body, $headers);
}

// Function to reset password
function reset_password($token)
{
    // Get user data using the token
    $sql = "SELECT * FROM users WHERE token = '$token'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $id = $row['id'];
            $email = $row['email'];

            // Reset password
            $new_password = 'your_new_password'; // Generate a new random password using a library like RandomLib
            $sql = "UPDATE users SET password = '$new_password' WHERE id = '$id'";
            $conn->query($sql);

            return true;
        }
    } else {
        return false;
    }

    return false;
}

// Handle forgot password form submission
if (isset($_POST['forgot'])) {
    // Get email from form input
    $email = $_POST['email'];

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $id = $row['id'];
            $email = $row['email'];

            // Generate token
            $token = hash('sha256', uniqid());

            // Update user data with new token
            $sql = "UPDATE users SET token = '$token' WHERE id = '$id'";
            $conn->query($sql);

            // Send password reset email
            send_reset_email($email, $token);
        }
    } else {
        echo 'Email not found.';
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_errno) {
  echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
  exit();
}

// Check if form has been submitted
if (isset($_POST['submit'])) {
  // Get email from form submission
  $email = $_POST['email'];

  // Query database for user with matching email
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $mysqli->query($query);

  if ($result->num_rows > 0) {
    // Get user data from result
    $user_data = $result->fetch_assoc();

    // Generate temporary password
    $temp_password = substr(md5(uniqid()), 0, 10);
    echo "Temporary password sent to email";

    // Update user password in database
    $query = "UPDATE users SET password = '$temp_password' WHERE id = '" . $user_data['id'] . "'";
    $mysqli->query($query);

    // Send email with temporary password
    $to = $email;
    $subject = 'Temporary Password';
    $body = "Your temporary password is: $temp_password";
    mail($to, $subject, $body);
  } else {
    echo "Email not found in database";
  }
}

// Close database connection
$mysqli->close();

?>


<?php include 'forgot_password.php'; ?>

<h1>Forgot Password</h1>

<form action="" method="post">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="submit">Send Temporary Password</button>
</form>


<?php

// Include database connection settings
require_once 'database_config.php';

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user input
  $usernameOrEmail = $_POST['username_or_email'];
  
  // Validate input
  if (empty($usernameOrEmail)) {
    echo 'Please enter your username or email address.';
    exit;
  }
  
  // Query database to retrieve user ID and password reset token
  $query = "SELECT id, password_reset_token FROM users WHERE (username = ? OR email = ?)";
  $stmt = $db->prepare($query);
  $stmt->execute([$usernameOrEmail, $usernameOrEmail]);
  $user = $stmt->fetch();
  
  // If user exists and has not used password reset token yet
  if ($user && !$user['password_reset_token']) {
    // Generate new password reset token
    $token = bin2hex(random_bytes(16));
    
    // Update database with new password reset token
    $query = "UPDATE users SET password_reset_token = ? WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->execute([$token, $user['id']]);
    
    // Send password reset email
    sendPasswordResetEmail($user['email'], $token);
  } else {
    echo 'Invalid username or email address.';
  }
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
  // Set up email headers and body
  $subject = 'Password Reset Request';
  $body = "Click this link to reset your password: <a href='https://example.com/reset-password?token=$token'>Reset Password</a>";
  
  // Send email using PHPMailer (or any other email library)
  require_once 'PHPMailer.php';
  $mail = new PHPMailer\PHPMailer\PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = 'your_email@example.com';
  $mail->Password = 'your_password';
  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $body;
  if (!$mail->send()) {
    echo 'Error sending email: ' . $mail->ErrorInfo;
  }
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendForgotPasswordEmail($email, $token) {
    // Send email using your preferred method (e.g. PHPMailer)
    $subject = 'Reset Your Password';
    $body = 'Click the link below to reset your password:<br><a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '">Reset Password</a>';
    mail($email, $subject, $body);
}

function forgotPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get email from form
        $email = $_POST['email'];

        // Validate email
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email address.";
            return;
        }

        // Query database to get user data
        $query = "SELECT * FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) > 0) {
            // Get user data
            $user = mysqli_fetch_assoc($result);
            $token = bin2hex(random_bytes(32));

            // Update token in database
            $query = "UPDATE users SET token='" . mysqli_real_escape_string($conn, $token) . "' WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
            mysqli_query($conn, $query);

            // Send forgot password email
            sendForgotPasswordEmail($email, $token);
        } else {
            echo "No account found with this email.";
        }
    }
}

function resetPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get token from URL
        $token = $_GET['token'];

        // Validate token
        if (!$token) {
            echo "Invalid token.";
            return;
        }

        // Query database to get user data
        $query = "SELECT * FROM users WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) > 0) {
            // Get user data
            $user = mysqli_fetch_assoc($result);
            echo "Please enter new password:<br>";
            echo "<form action='reset-password.php' method='post'>";
            echo "<input type='password' name='new_password'><br>";
            echo "<input type='submit' value='Submit'>";
            echo "</form>";

            if ($_SERVER['REQUEST_METHOD'] == 'POST') {
                // Get new password
                $new_password = $_POST['new_password'];

                // Validate new password
                if (strlen($new_password) < 8 || !preg_match("#[a-zA-Z]#", $new_password) || !preg_match("#[0-9]#", $new_password)) {
                    echo "Invalid new password.";
                } else {
                    // Update password in database
                    $query = "UPDATE users SET password_hash='" . mysqli_real_escape_string($conn, hash('sha256', $new_password)) . "' WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
                    mysqli_query($conn, $query);

                    // Remove token from database
                    $query = "UPDATE users SET token=NULL WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
                    mysqli_query($conn, $query);
                }
            }
        } else {
            echo "Invalid token.";
        }
    }
}

// Forgot password form
if (isset($_GET['forgot-password'])) {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="email" name="email"><br>
        <input type="submit" value="Send Reset Link">
    </form>
    <?php
}

// Reset password form
if (isset($_GET['token'])) {
    ?>
    <h2>Reset Password</h2>
    <?php
    resetPassword();
} else if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    forgotPassword();
}
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check connection
if ($mysqli->connect_errno) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Get username and email from form submission
$username = $_POST['username'];
$email = $_POST['email'];

// Query to retrieve user data
$stmt = $mysqli->prepare("SELECT * FROM users WHERE username = ? AND email = ?");
$stmt->bind_param('ss', $username, $email);
$stmt->execute();
$result = $stmt->get_result();

// Check if user exists
if ($result->num_rows == 0) {
    echo "User not found.";
} else {
    // Retrieve user data
    $user_data = $result->fetch_assoc();

    // Generate new password and store it in session
    $new_password = generateRandomPassword();
    $_SESSION['new_password'] = $new_password;

    // Send email with new password
    sendEmail($email, $new_password);

    echo "New password sent to your email.";
}

// Close database connection
$mysqli->close();

// Functions

function generateRandomPassword() {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $password = '';
    for ($i = 0; $i < 10; $i++) {
        $password .= substr($chars, rand(0, strlen($chars) - 1), 1);
    }
    return $password;
}

function sendEmail($email, $new_password) {
    // Configuration
    define('EMAIL_FROM', 'your_email@example.com');
    define('EMAIL_PASSWORD', 'your_email_password');

    // Email subject and body
    $subject = "New Password for your account";
    $body = "Hello,

Your new password is: $new_password

Best regards, Your App";

    // Send email using PHPMailer or mail function (commented out)
    //require_once 'phpmailer/PHPMailerAutoload.php';
    // $mail = new PHPMailer;
    // $mail->isSMTP();
    // $mail->Host = 'smtp.example.com';
    // $mail->Port = 587;
    // $mail->Username = EMAIL_FROM;
    // $mail->Password = EMAIL_PASSWORD;
    // $mail->setFrom(EMAIL_FROM, 'Your App');
    // $mail->addAddress($email);
    // $mail->Subject = $subject;
    // $mail->Body = $body;

    // mail($email, $subject, $body, "Content-Type: text/plain; charset=UTF-8");

    echo "Email sent successfully!";
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myuser';
$password = 'mypass';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Error connecting to database: " . $e->getMessage());
}
?>


<?php
// Include the database connection settings
require_once 'database.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Get the email from the form input
    $email = $_POST['email'];

    // Query to get the user's data from the database
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Check if the user exists in the database
    if ($stmt->rowCount() > 0) {
        // Get the user's data from the query result
        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

        // Generate a new password and hash it
        $new_password = substr(md5(uniqid(rand(), true)), 0, 8);
        $hashed_new_password = hash('sha256', $new_password);

        // Update the user's password in the database
        $update_stmt = $pdo->prepare("UPDATE users SET password = :password WHERE email = :email");
        $update_stmt->bindParam(':password', $hashed_new_password);
        $update_stmt->bindParam(':email', $email);
        $update_stmt->execute();

        // Send an email with a link to reset the password
        send_email($user_data['username'], $new_password);

        echo "Password sent to your email. Please check and reset it.";
    } else {
        echo "Email not found in our database.";
    }
}

// Function to send an email with a link to reset the password
function send_email($username, $new_password) {
    // Email settings
    $from_email = 'your-email@example.com';
    $to_email = $_POST['email'];
    $subject = "Reset Your Password";
    $message = "Hello $username,

You can reset your password by clicking on this link:

http://example.com/reset_password.php?email=$email&new_password=$new_password";

    // Send the email using mail()
    if (mail($to_email, $subject, $message, 'From: ' . $from_email)) {
        echo "Email sent successfully.";
    } else {
        echo "Failed to send email.";
    }
}
?>


// forgot_password.php
require_once 'db_connect.php'; // assume you have a db connection script here

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = $_POST['email'];

  // Check if the email address is in the database
  $query = "SELECT * FROM users WHERE email = :email";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  if ($stmt->rowCount() === 1) {
    // If we found a match, send an email with a reset link
    $user_id = $stmt->fetchColumn(0);

    $token = bin2hex(random_bytes(16)); // generate a random token

    // Store the token in the database (for this example, let's assume it's stored as `reset_token`)
    $query = "UPDATE users SET reset_token = :token WHERE id = :user_id";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':user_id', $user_id);
    $stmt->execute();

    // Send an email with a reset link
    $subject = 'Reset your password';
    $message = '
      <p>Hello,</p>
      <p>To reset your password, click this link:</p>
      <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
    ';

    send_email($email, $subject, $message);
  } else {
    echo 'Email address not found.';
  }
}

// Helper function to send an email
function send_email($to, $subject, $message) {
  // Use a library like PHPMailer or SwiftMailer to send the email
}


// reset_password.php
require_once 'db_connect.php'; // assume you have a db connection script here

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $token = $_POST['token'];
  $new_password = $_POST['new_password'];

  // Check if the token is valid and matches the user's reset token in the database
  $query = "SELECT * FROM users WHERE reset_token = :token";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->execute();

  if ($stmt->rowCount() === 1) {
    // If we found a match, update the user's password
    $user_id = $stmt->fetchColumn(0);

    // Hash the new password using a library like bcrypt
    $new_password_hash = hash_password($new_password); // assume you have a function to hash passwords

    // Update the user's password in the database
    $query = "UPDATE users SET password = :password WHERE id = :user_id";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':password', $new_password_hash);
    $stmt->bindParam(':user_id', $user_id);
    $stmt->execute();

    // Clear the reset token in the database
    $query = "UPDATE users SET reset_token = NULL WHERE id = :user_id";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':user_id', $user_id);
    $stmt->execute();
  } else {
    echo 'Invalid or expired token.';
  }
}

// Helper function to hash passwords
function hash_password($password) {
  // Use a library like bcrypt to hash the password
}


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate password reset link
function generateResetLink($email)
{
    // Generate a random token
    $token = bin2hex(random_bytes(16));

    // Insert token into database
    $sql = "INSERT INTO reset_tokens (email, token) VALUES ('$email', '$token')";
    if ($conn->query($sql) === TRUE) {
        return $token;
    } else {
        return NULL; // Token already exists or query failed
    }
}

// Function to send password reset email
function sendResetEmail($email, $token)
{
    // Your SMTP settings here (e.g. using PHPMailer or mail())
    // ...

    // Email body with reset link
    $body = "Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>";

    // Send email
    mail($email, 'Password Reset', $body);
}

// Forgot password form handling
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Generate reset token and send password reset email
        $token = generateResetLink($email);
        if ($token !== NULL) {
            sendResetEmail($email, $token);
            echo "Password reset link sent to your email.";
        } else {
            echo "Error generating reset token.";
        }
    } else {
        echo "Email not found in database.";
    }
}

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($email) {
    global $conn;
    
    // Check if user exists with given email address
    $query = "SELECT id FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Get user ID from query result
        $user_id = $result->fetch_assoc()['id'];
        
        // Generate random password and store it in session for later use
        $password = substr(md5(uniqid()), 0, 8);
        $_SESSION['new_password'] = $password;
        
        // Update user's password with new password (hashed using bcrypt or hash library)
        $query = "UPDATE users SET password='" . mysqli_real_escape_string($conn, hash('sha256', $password)) . "' WHERE id=" . (int) $user_id;
        $result = $conn->query($query);
        
        // Send email to user with new password
        sendPasswordResetEmail($email, $password);
    }
    
    return true; // or false if user does not exist
}

function sendPasswordResetEmail($email, $new_password) {
    // Email configuration (e.g. SMTP server settings)
    $to = $email;
    $subject = "Your new password";
    $message = "Dear user,

Your new password is: $new_password

Best regards,";

    mail($to, $subject, $message);
}

// Example usage:
$email = $_POST['email'];
if (forgotPassword($email)) {
    echo 'Password reset email sent to ' . $email;
} else {
    echo 'Email not found';
}


<?php
// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = mysqli_connect($dbHost, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

function sendEmail($to_email, $token) {
  // Email configuration
  $fromEmail = 'your_email@example.com';
  $fromName = 'Your Name';
  $subject = 'Reset Your Password';
  $body = "
    Hi,
    
    Click on the following link to reset your password:
    <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>
    
    Best regards,
    Your Name
  ";

  // Send email using mail() function
  $headers = 'From: ' . $fromEmail . "\r
" .
             'Subject: ' . $subject . "\r
";
  mail($to_email, $subject, $body, $headers);
}

function checkTokenExists($token) {
  global $conn;
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    return true;
  } else {
    return false;
  }
}

function updatePassword($token, $new_password) {
  global $conn;
  $query = "UPDATE users SET password_hash = '$new_password', reset_token = NULL WHERE reset_token = '$token'";
  mysqli_query($conn, $query);
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user email
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Get user data
    $row = mysqli_fetch_assoc($result);
    $token = md5(uniqid(mt_rand(), true));

    // Update user data in database with new reset token
    $updateQuery = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $updateQuery);

    // Send email to user
    sendEmail($email, $token);
  } else {
    echo 'Email not found!';
  }
}

// If GET request with token is made
if (isset($_GET['token'])) {
  // Check if token exists in database
  $checkToken = checkTokenExists($_GET['token']);

  if ($checkToken) {
    // Update password using the provided token
    updatePassword($_GET['token'], $_POST['new_password']);
    echo 'Password updated!';
  } else {
    echo 'Invalid token!';
  }
}
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Handle forgot password form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user email from POST data
    $email = $_POST['email'];

    // Query database for user with matching email
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {

        // Get user data from query result
        $row = $result->fetch_assoc();

        // Generate new token and update database
        $newToken = generateToken();
        $conn->query("UPDATE users SET token = '$newToken' WHERE email = '$email'");

        // Send password reset email with token
        sendPasswordResetEmail($email, $newToken);

    } else {
        echo "User not found.";
    }
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Email configuration (use your own email settings)
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@gmail.com';
    $mail->Password = 'your_password';

    // Set email content
    $subject = "Reset Your Password";
    $body = "Click on this link to reset your password: <a href='http://localhost/reset_password.php?token=$token'>$email</a>";

    // Send email
    $mail->setFrom('your_email@gmail.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
        echo "Mailer Error: " . $mail->ErrorInfo;
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL parameter
$token = $_GET['token'];

// Query database for user with matching token
$sql = "SELECT * FROM users WHERE token = '$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {

    // Get user data from query result
    $row = $result->fetch_assoc();

    // Allow user to reset password
    echo "Enter new password: <input type='password' id='newPassword'><br>";
    echo "<button id='resetBtn'>Reset Password</button>";

    // JavaScript code to handle form submission and update database
    ?>
    <script>
        document.getElementById('resetBtn').addEventListener('click', function() {
            var newPassword = document.getElementById('newPassword').value;
            var sql = "UPDATE users SET password = '$newPassword' WHERE token = '$token'";
            <?php $conn->query($sql); ?>
            window.location.href = 'login.php';
        });
    </script>
<?php

} else {
    echo "Invalid token.";
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
$site_name = "Example Website";
$reset_link_expires_in = 3600; // 1 hour

// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function send_reset_link($email, $reset_token)
{
    // Generate reset link URL
    $reset_link_url = "http://" . $_SERVER['HTTP_HOST'] . "/reset-password.php?token=" . $reset_token;

    // Send email with reset link
    $to = $email;
    $subject = "Reset Password for $site_name";
    $message = "
        Dear User,

        Please click the following link to reset your password:

        $reset_link_url

        If you did not request a password reset, please ignore this email.

        Best regards,
        $site_name
    ";

    mail($to, $subject, $message);
}

function reset_password()
{
    // Get POST variables
    $email = $_POST['email'];

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Generate reset token
        $reset_token = bin2hex(random_bytes(16));

        // Update user with new reset token
        $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
        $conn->query($update_query);

        // Send reset link to user's email
        send_reset_link($email, $reset_token);
    } else {
        echo "Error: User not found.";
    }
}

if (isset($_POST['submit'])) {
    reset_password();
} else {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="email" placeholder="Email">
        <button type="submit" name="submit">Send Reset Link</button>
    </form>
    <?php
}
?>


<?php

// Connect to database
$conn = new mysqli('localhost', 'your_username', 'your_password', 'your_database');

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get reset token from URL parameter
$reset_token = $_GET['token'];

// Check if user has a valid reset token
$query = "SELECT * FROM users WHERE reset_token = '$reset_token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // User has a valid reset token, display password form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="new_password">
        <button type="submit">Reset Password</button>
    </form>
    <?php
} else {
    // User does not have a valid reset token, display error message
    echo "Error: Invalid reset token.";
}
?>


<?php

require_once 'config.php'; // Include your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL);

    if (empty($email)) {
        echo "Email is required.";
        exit;
    }

    try {
        $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Get the user's information
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            // Generate a new password and hash it
            $new_password = generateRandomPassword();
            $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);
            $salt = uniqid();

            // Update the user's password in the database
            try {
                $stmt = $pdo->prepare("UPDATE users SET password_hash = :password_hash, salt = :salt WHERE email = :email");
                $stmt->bindParam(':password_hash', $hashed_new_password);
                $stmt->bindParam(':salt', $salt);
                $stmt->bindParam(':email', $email);
                $stmt->execute();
            } catch (PDOException $e) {
                echo "Error updating user's password: " . $e->getMessage();
                exit;
            }

            // Send an email to the user with a link to reset their password
            sendPasswordResetEmail($user, $new_password);

        } else {
            echo "No account found with that email.";
        }
    } catch (PDOException $e) {
        echo "Error retrieving user information: " . $e->getMessage();
        exit;
    }

} else {

    // Display the forgot password form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Email Address">
    <button type="submit">Submit</button>
</form>

<?php

}

function generateRandomPassword() {
    $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $password = '';
    for ($i = 0; $i < 10; $i++) {
        $password .= substr($alphabet, rand(0, strlen($alphabet) - 1), 1);
    }
    return $password;
}

function sendPasswordResetEmail($user, $new_password) {
    // Set email headers
    $to = $user['email'];
    $subject = 'Forgot Password: Reset your password';
    $headers = "From: Your Email <your_email@example.com>";

    // Compose email body
    $body = "
        Dear user,
        
        We have changed your password. Please use the following to reset it:
        
        Username: {$user['username']}
        Password: {$new_password}
        
        Best regards,
        Your Website
        ";

    // Send email using mail()
    if (mail($to, $subject, $body, $headers)) {
        echo "Email sent successfully.";
    } else {
        echo "Error sending email.";
    }
}

?>


<?php

// Configuration
$config = array(
    'db_host' => 'localhost',
    'db_username' => 'root',
    'db_password' => '',
    'db_name' => 'your_database'
);

// Connect to database
$conn = new mysqli($config['db_host'], $config['db_username'], $config['db_password'], $config['db_name']);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user input
$usernameOrEmail = $_POST['usernameOrEmail'];
$passwordResetCode = $_POST['passwordResetCode'];

// Check if username or email is valid
$query = "SELECT * FROM users WHERE username = '$usernameOrEmail' OR email = '$usernameOrEmail'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user's ID
    while ($row = $result->fetch_assoc()) {
        $userId = $row['id'];

        // Generate a new password reset code
        $passwordResetCodeGenerated = bin2hex(random_bytes(32));

        // Update user's record with the new password reset code
        $query = "UPDATE users SET password_reset_code = '$passwordResetCodeGenerated' WHERE id = '$userId'";
        $conn->query($query);

        // Send an email to the user with a link to reset their password
        $to = $row['email'];
        $subject = 'Forgot Password - Click here to reset';
        $message = '<a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?userId=' . $userId . '&passwordResetCode=' . urlencode($passwordResetCodeGenerated) . '">Click here to reset your password</a>';
        mail($to, $subject, $message);

        echo "Email sent successfully. Please check your email and click on the link provided.";
    }
} else {
    echo "Invalid username or email";
}

$conn->close();

?>


<?php

// Configuration
$config = array(
    'db_host' => 'localhost',
    'db_username' => 'root',
    'db_password' => '',
    'db_name' => 'your_database'
);

// Connect to database
$conn = new mysqli($config['db_host'], $config['db_username'], $config['db_password'], $config['db_name']);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user input
$userId = $_GET['userId'];
$passwordResetCodeGenerated = $_GET['passwordResetCode'];

// Check if the password reset code is valid
$query = "SELECT * FROM users WHERE id = '$userId' AND password_reset_code = '$passwordResetCodeGenerated'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user's ID and email
    while ($row = $result->fetch_assoc()) {
        $email = $row['email'];

        // Display a form to input the new password
        echo '<form action="" method="post">';
        echo '<label for="newPassword">New Password:</label>';
        echo '<input type="password" id="newPassword" name="newPassword"><br><br>';
        echo '<label for="confirmPassword">Confirm Password:</label>';
        echo '<input type="password" id="confirmPassword" name="confirmPassword"><br><br>';
        echo '<button type="submit">Reset Password</button>';
        echo '</form>';

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Get the new password and confirm password
            $newPassword = $_POST['newPassword'];
            $confirmPassword = $_POST['confirmPassword'];

            // Check if the passwords match
            if ($newPassword === $confirmPassword) {
                // Update user's record with the new password
                $query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
                $conn->query($query);

                echo "Password reset successfully.";
            } else {
                echo "Passwords do not match";
            }
        }
    }
} else {
    echo "Invalid password reset code";
}

$conn->close();

?>


<?php
if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];
    
    // Validate the email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }
    
    // Connect to database
    $db = mysqli_connect('localhost', 'username', 'password', 'database');
    
    if (!$db) {
        die('Error connecting to database: ' . mysqli_error());
    }
    
    // Prepare SQL query
    $query = "SELECT * FROM users WHERE email = '$email'";
    
    // Execute the query and fetch the result
    $result = mysqli_query($db, $query);
    if (!$result) {
        die('Error executing query: ' . mysqli_error());
    }
    
    // Check if a user exists with the given email address
    $row = mysqli_fetch_assoc($result);
    if ($row) {
        // Generate a reset password token
        $token = substr(md5(uniqid(mt_rand(), true)), 0, 32);
        
        // Insert the token into the database
        $query = "UPDATE users SET token = '$token' WHERE email = '$email'";
        mysqli_query($db, $query);
        
        // Send a password reset link to the user's email address
        $to = $email;
        $subject = 'Reset Your Password';
        $message = 'Click this link to reset your password: <a href="' . $_SERVER['PHP_SELF'] . '?token=' . $token . '">Reset Password</a>';
        mail($to, $subject, $message);
        
        echo 'A password reset link has been sent to your email address';
    } else {
        echo 'No user found with that email address';
    }
    
    // Close database connection
    mysqli_close($db);
}
?>


<?php
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Connect to database
    $db = mysqli_connect('localhost', 'username', 'password', 'database');
    
    if (!$db) {
        die('Error connecting to database: ' . mysqli_error());
    }
    
    // Prepare SQL query
    $query = "SELECT * FROM users WHERE token = '$token'";
    
    // Execute the query and fetch the result
    $result = mysqli_query($db, $query);
    if (!$result) {
        die('Error executing query: ' . mysqli_error());
    }
    
    // Check if a user exists with the given token
    $row = mysqli_fetch_assoc($result);
    if ($row) {
        // Display password reset form
        ?>
        <form action="" method="post">
            <label for="new_password">New Password:</label>
            <input type="password" id="new_password" name="new_password"><br><br>
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password"><br><br>
            <input type="submit" value="Reset Password">
        </form>
        
        <?php
    } else {
        echo 'Invalid token';
    }
    
    // Close database connection
    mysqli_close($db);
}
?>


<?php
session_start();

// Check if the form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the email from the form
    $email = $_POST['email'];

    // Validate the email (very basic validation)
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email";
        return;
    }

    // Check if the user exists in the database
    include_once 'db.php'; // assuming your db connection is in a separate file called db.php
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 0) {
        echo "Email not found";
        return;
    }

    // Generate a random password and store it in the user's account
    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 10);
    $query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send an email to the user with their new password
    include_once 'send-email.php'; // assuming you have a separate file for sending emails called send-email.php
    send_email($email, "Your new password is: $new_password");

    echo "Password reset successfully! You will receive an email with your new password.";
}
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <label>Email:</label>
    <input type="email" name="email">
    <button type="submit">Send Reset Link</button>
</form>


<?php
function send_email($to, $subject, $body) {
    $from = "your-email@example.com";
    $headers = "From: $from\r
Content-Type: text/html; charset=UTF-8\r
";

    mail($to, $subject, $body, $headers);
}
?>


<?php
$servername = "localhost";
$username = "your-username";
$password = "your-password";
$dbname = "your-database";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


require_once 'db.php'; // assume you have a db.php file for database connection

function forgotPassword($email) {
  $query = "SELECT * FROM users WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user && !$user['reset_token']) {
    // generate a random reset token
    $token = bin2hex(random_bytes(32));
    $query = "UPDATE users SET reset_token = :token WHERE id = :id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();

    // send email with password reset link
    $subject = "Reset Password Link";
    $body = "
      Click this link to reset your password: <a href=\"https://yourdomain.com/reset-password?token=$token\">Reset Password</a>
    ";
    mail($user['email'], $subject, $body);

    return true;
  }

  return false;
}


require_once 'db.php'; // assume you have a db.php file for database connection

function resetPassword($token) {
  $query = "SELECT * FROM users WHERE reset_token = :token";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user && $token === $user['reset_token']) {
    // allow user to change password
    echo "Enter new password: <input type='password' name='new_password'><br>";
    echo "Confirm new password: <input type='password' name='confirm_new_password'><br>";

    if (isset($_POST['new_password'])) {
      $newPassword = $_POST['new_password'];
      $confirmNewPassword = $_POST['confirm_new_password'];

      if ($newPassword === $confirmNewPassword) {
        // hash and update password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $query = "UPDATE users SET password_hash = :password WHERE id = :id";
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':password', $hashedPassword);
        $stmt->bindParam(':id', $user['id']);
        $stmt->execute();

        // reset token
        $query = "UPDATE users SET reset_token = NULL WHERE id = :id";
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':id', $user['id']);
        $stmt->execute();

        return true;
      } else {
        echo "Passwords do not match.";
      }
    }

    return false;
  }

  return false;
}


<form action="forgot_password.php" method="post">
  <input type="email" name="email" placeholder="Enter email address">
  <button type="submit">Send Reset Link</button>
</form>


<a href="https://yourdomain.com/reset-password?token=$token">Reset Password</a>


<!-- index.php -->

<form action="forgot_password.php" method="post">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type of="submit" value="Send Reset Link">
</form>


<!-- forgot_password.php -->

<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user's email from form submission
$email = $_POST['email'];

// Query to retrieve user's ID based on their email address
$stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

// Check if user exists in database
if ($result->num_rows == 0) {
    echo "User not found!";
} else {
    // User exists, retrieve their ID and generate a new password
    while($row = $result->fetch_assoc()) {
        $userId = $row['id'];
        $newPassword = bin2hex(random_bytes(10));
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update user's password in database
        $update_stmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
        $update_stmt->bind_param("ss", $hashedPassword, $userId);
        $update_stmt->execute();
    }
    
    // Send email with new password to user
    $to = $email;
    $subject = "Reset Password";
    $body = "Hello! Your new password is: $newPassword";
    $headers = "From: your_email@example.com\r
";
    mail($to, $subject, $body, $headers);
    
    echo "A reset link has been sent to your email.";
}

?>


<?php

// Configuration settings
define('EMAIL_ADDRESS', 'your_email@example.com');
define('PASSWORD_RESET_LINK_EXPIRE_TIME', 3600); // 1 hour in seconds

require_once 'db_config.php'; // Load database connection configuration

function sendEmail($to, $subject, $body) {
    $headers = 'From: '.EMAIL_ADDRESS.'\r
';
    mail($to, $subject, $body, $headers);
}

// Handle form submission
if (isset($_POST['submit'])) {

    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die('Invalid email address.');
    }

    try {
        // Retrieve user ID from database
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->execute([':email' => $email]);
        $user_id = $stmt->fetchColumn();

        if ($user_id === false) {
            die('User not found.');
        }

        // Generate password reset link
        $token = bin2hex(random_bytes(32));
        $password_reset_link = 'http://example.com/reset_password.php?email='.urlencode($email).'&token='.$token;

        // Store password reset token in database
        $stmt = $pdo->prepare("UPDATE users SET password_reset_token = :token, password_reset_expires_at = NOW() + INTERVAL :expires AT SECOND WHERE id = :id");
        $stmt->execute([':token' => $token, ':expires' => PASSWORD_RESET_LINK_EXPIRE_TIME, ':id' => $user_id]);

        // Send email with password reset link
        sendEmail($email, 'Reset Password', "Click the following link to reset your password:

".$password_reset_link);

    } catch (PDOException $e) {
        die('Database error: '.$e->getMessage());
    }
}

?>

<form action="" method="post">
    <input type="email" name="email" placeholder="Enter email address" required>
    <button type="submit" name="submit">Reset Password</button>
</form>


<?php

require_once 'db_config.php'; // Load database connection configuration

function validateToken($token, $email) {
    try {
        // Retrieve user ID from database
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = :email AND password_reset_token = :token");
        $stmt->execute([':email' => $email, ':token' => $token]);
        return $stmt->fetchColumn();

    } catch (PDOException $e) {
        die('Database error: '.$e->getMessage());
    }
}

// Handle form submission
if (isset($_POST['submit'])) {

    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate email address and token
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die('Invalid email address.');
    }
    $user_id = validateToken($_GET['token'], $email);

    if ($user_id === false) {
        die('Invalid password reset link.');
    }

    // Update user password in database
    try {
        $stmt = $pdo->prepare("UPDATE users SET password = :password, password_reset_token = NULL, password_reset_expires_at = NULL WHERE id = :id");
        $stmt->execute([':password' => password_hash($password, PASSWORD_DEFAULT), ':id' => $user_id]);

        // Redirect to login page
        header('Location: http://example.com/login.php');
        exit;

    } catch (PDOException $e) {
        die('Database error: '.$e->getMessage());
    }
}

?>

<form action="" method="post">
    <input type="password" name="password" placeholder="Enter new password" required>
    <input type="password" name="confirm_password" placeholder="Confirm new password" required>
    <button type="submit" name="submit">Reset Password</button>
</form>


// config.php (database connection settings)
<?php
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to the database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

// forgot-password.php (forgot password form)
<?php
if (isset($_POST['submit'])) {
    // Retrieve submitted email address
    $email = $_POST['email'];

    // Query database to check if email exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Email found, send password reset link
        $row = $result->fetch_assoc();
        $hashed_id = $row['id'];

        // Generate random password and hash it
        $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Update user's password in database
        $query = "UPDATE users SET password = '$hashed_password' WHERE id = '$hashed_id'";
        $conn->query($query);

        // Send email with reset link (using PHPMailer or another mail library)
        $mail = new PHPMailer();
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->Port = 587;
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email, $email);
        $mail->Subject = "Password Reset Link";
        $mail->Body = "Click this link to reset your password: <a href='http://example.com/reset-password.php?id=$hashed_id&password=$password'>Reset Password</a>";

        // Send the email
        if ($mail->send()) {
            echo "Email sent with reset link.";
        } else {
            echo "Error sending email.";
        }
    } else {
        echo "Email not found in database.";
    }

    // Close database connection
    $conn->close();
}
?>

<!-- HTML form for user to enter their email address -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Enter your email address">
    <button type="submit" name="submit">Submit</button>
</form>


<?php
if (isset($_GET['id']) && isset($_GET['password'])) {
    // Retrieve user ID and new password from GET parameters
    $hashed_id = $_GET['id'];
    $new_password = $_GET['password'];

    // Query database to update user's password
    $query = "UPDATE users SET password = '$new_password' WHERE id = '$hashed_id'";
    $conn->query($query);

    echo "Password updated successfully.";
} else {
    echo "Invalid request.";
}
?>


<?php

// Include database connection settings
require_once 'db_config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get email from form input
  $email = $_POST['email'];

  // Validate email
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }

  // Query database for user with matching email
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  // If user exists, send reset token via email and update database
  if ($row = mysqli_fetch_assoc($result)) {
    // Generate random reset token
    $reset_token = bin2hex(random_bytes(32));

    // Send email with reset link (we'll use a simple link for demonstration purposes)
    $to      = $email;
    $subject = 'Reset Password';
    $message = 'Click here to reset your password: <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $reset_token . '">Reset</a>';
    $headers = 'From: info@example.com' . "\r
" .
      'Content-Type: text/html; charset=UTF-8';
    mail($to, $subject, $message, $headers);

    // Update database with reset token
    $query = "UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'";
    mysqli_query($conn, $query);

    echo 'Reset link sent to your email';
  } else {
    echo 'Email address not found in our database';
  }
}

?>


<?php

// Include database connection settings
require_once 'db_config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get token from URL parameter
  $token = $_GET['token'];

  // Validate token (we'll use a simple validation for demonstration purposes)
  if (!empty($token)) {
    // Query database for user with matching token
    $query = "SELECT * FROM users WHERE reset_token = '$token'";
    $result = mysqli_query($conn, $query);

    // If user exists, update password and remove reset token from database
    if ($row = mysqli_fetch_assoc($result)) {
      // Get new password from form input
      $new_password = $_POST['password'];

      // Hash new password (we'll use a simple hashing algorithm for demonstration purposes)
      $hashed_password = hash('sha256', $new_password);

      // Update database with new password
      $query = "UPDATE users SET password_hash = '$hashed_password' WHERE reset_token = '$token'";
      mysqli_query($conn, $query);

      echo 'Password updated successfully';
    } else {
      echo 'Invalid token';
    }
  }
}

?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to reset password
function forgot_password($email)
{
    // SQL query to select user by email
    $sql = "SELECT * FROM users WHERE email = '$email'";
    
    // Execute query and get result
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get the user's ID and password hash
        $user = $result->fetch_assoc();

        // Generate a random password
        $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);

        // Update the password in database (with hashing)
        $new_password_hash = password_hash($password, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password_hash = '$new_password_hash' WHERE id = '" . $user['id'] . "'";
        $conn->query($sql);

        // Send email with new password
        $to = $email;
        $subject = 'Reset Password';
        $body = 'Your new password is: ' . $password;

        mail($to, $subject, $body);
        
        echo "New password sent to your email";
    } else {
        echo "Email not found in database";
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if email is valid (e.g. contains '@')
    if (strpos($email, '@') !== false) {
        forgot_password($email);
    } else {
        echo "Invalid email address";
    }
}

// Close database connection
$conn->close();

?>


<?php
require_once 'config.php'; // include your database connection settings

// Set email and password reset URLs
$emailResetUrl = 'http://example.com/reset-password';
$passwordResetUrl = 'http://example.com/new-password';

// Handle form submission
if (isset($_POST['email'])) {
  $email = $_POST['email'];

  // Validate email
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // Check if user exists in database
  $query = "SELECT * FROM users WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if (!$user) {
    echo "Email address not found";
    exit;
  }

  // Generate password reset token
  $token = bin2hex(random_bytes(32));

  // Store password reset token in database
  $query = "UPDATE users SET password_reset_token = :token WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Send password reset email
  $subject = 'Reset your password';
  $message = "Click here to reset your password: <a href='$passwordResetUrl?token=$token'>$passwordResetUrl</a>";
  mail($email, $subject, $message);

  echo "Email sent with password reset link";
} else {
  // Display form
  ?>
  <form action="" method="post">
    Email address:
    <input type="email" name="email">
    <button type="submit">Send me a new password</button>
  </form>
  <?php
}


<?php
require_once 'config.php'; // include your database connection settings

// Handle form submission
if (isset($_POST['new_password'])) {
  $email = $_GET['token'];
  $passwordResetToken = $_POST['token'];

  // Validate password reset token
  $query = "SELECT * FROM users WHERE email = :email AND password_reset_token = :token";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':token', $passwordResetToken);
  $stmt->execute();
  $user = $stmt->fetch();

  if (!$user) {
    echo "Invalid password reset token";
    exit;
  }

  // Update user password
  $newPasswordHash = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
  $query = "UPDATE users SET password = :password WHERE email = :email";
  $stmt = $pdo->prepare($query);
  $stmt->bindParam(':password', $newPasswordHash);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  echo "Password updated successfully!";
} else {
  // Display form
  ?>
  <form action="" method="post">
    New password:
    <input type="password" name="new_password">
    <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
    <button type="submit">Update my password</button>
  </form>
  <?php
}


<?php
require_once 'db.php'; // database connection

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);
  
  if ($email) {
    // Check if user exists in the database
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    if ($stmt->rowCount() === 1) {
      // Generate a temporary reset token
      $resetToken = bin2hex(random_bytes(32));
      
      // Update the user's reset token in the database
      $query = "UPDATE users SET reset_token = :resetToken WHERE email = :email";
      $stmt = $db->prepare($query);
      $stmt->bindParam(':resetToken', $resetToken);
      $stmt->bindParam(':email', $email);
      $stmt->execute();
      
      // Send an email with a password reset link
      sendResetEmail($email, $resetToken);
    }
  }
}

function sendResetEmail($email, $resetToken) {
  // Email configuration (replace with your own)
  $to = $email;
  $subject = 'Password Reset Link';
  $body = "Click this link to reset your password: http://example.com/reset-password/$resetToken";
  
  mail($to, $subject, $body);
}

?>


<?php
require_once 'db.php'; // database connection

$token = filter_input(INPUT_GET, 'token');

if ($token) {
  // Check if the token is valid
  $query = "SELECT * FROM users WHERE reset_token = :token";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  
  if ($stmt->rowCount() === 1) {
    // Display the password update form
    ?>
    
    <h2>Reset Password</h2>
    
    <?php
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
      $password = filter_input(INPUT_POST, 'password', FILTER_DEFAULT);
      
      if ($password) {
        // Hash the new password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the user's password in the database
        $query = "UPDATE users SET password = :password WHERE reset_token = :token";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':password', $hashedPassword);
        $stmt->bindParam(':token', $token);
        $stmt->execute();
        
        // Clear the reset token
        $query = "UPDATE users SET reset_token = NULL WHERE reset_token = :token";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':token', $token);
        $stmt->execute();
      }
    } else {
      ?>
      
      <form action="" method="post">
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password"><br><br>
        <button type="submit">Update Password</button>
      </form>
      
      <?php
    }
  } else {
    echo "Invalid token.";
  }
} else {
  echo "No token provided.";
}
?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if user exists
$email = $_POST['email'];
$stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo "Email not found.";
    exit;
}

// Generate reset token
$token = bin2hex(random_bytes(32));
$expires_at = date('Y-m-d H:i:s', strtotime('+1 day'));

// Update user with reset token
$stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires_at = ? WHERE email = ?");
$stmt->bind_param('ss', $token, $expires_at, $email);
$stmt->execute();

// Send password reset email
$subject = "Reset your password";
$body = "Click this link to reset your password: <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a>";
mail($email, $subject, $body);

echo "Password reset email sent.";

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is valid
$token = $_GET['token'];
$stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = ? AND reset_expires_at >= NOW()");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo "Invalid or expired token.";
    exit;
}

// Get user email
$email = $result->fetch_assoc()['email'];

// Let user reset password
echo "Enter new password: ";
$new_password = trim(fgets(STDIN));
$hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

// Update user with new password
$stmt = $conn->prepare("UPDATE users SET password_hash = ?, reset_token = NULL, reset_expires_at = NULL WHERE email = ?");
$stmt->bind_param('ss', $hashed_password, $email);
$stmt->execute();

echo "Password updated.";

?>


<?php
require_once 'dbconnect.php'; // Assuming dbconnect.php contains database connection settings

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];

    if (empty($email)) {
        echo "Please enter your email address.";
        return;
    }

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) === 0) {
        echo "Email not found in our records.";
        return;
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));

    // Update the user's password reset token
    $updateQuery = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    mysqli_query($conn, $updateQuery);

    // Send a password reset link to the user's email
    sendPasswordResetLink($email, $token);
}
?>

<form action="" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email" required>
    <button type="submit">Forgot Password</button>
</form>



function sendPasswordResetLink($email, $token) {
    // Use mail() function or any library for sending emails (e.g., PHPMailer)
    $subject = "Password Reset";
    $body = "
        Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>
    ";

    mail($email, $subject, $body);
}



<?php
require_once 'dbconnect.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    if (empty($token) || empty($newPassword) || empty($confirmPassword)) {
        echo "Please enter all fields.";
        return;
    }

    if ($newPassword !== $confirmPassword) {
        echo "Passwords do not match.";
        return;
    }

    // Check if the token is valid
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) === 0) {
        echo "Invalid token. Please try again.";
        return;
    }

    // Update the user's password
    $updateQuery = "UPDATE users SET password = '$newPassword', password_reset_token = '' WHERE password_reset_token = '$token'";
    mysqli_query($conn, $updateQuery);

    echo "Your password has been successfully reset.";
}
?>

<form action="" method="post">
    <label for="password">New Password:</label>
    <input type="password" id="password" name="password" required>
    <label for="confirm_password">Confirm New Password:</label>
    <input type="password" id="confirm_password" name="confirm_password" required>
    <button type="submit">Reset Password</button>
</form>



<?php

// Configuration
$secret_key = 'your_secret_key_here';
$from_email = 'noreply@example.com';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get form data
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die('Invalid email address');
  }

  // Retrieve user from database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($db_connection, $query);
  $user = mysqli_fetch_assoc($result);

  if ($user) {
    // Generate password reset token
    $token = bin2hex(random_bytes(32));

    // Update user's password reset token in database
    $update_query = "UPDATE users SET password_reset_token = '$token' WHERE id = '" . $user['id'] . "'";
    mysqli_query($db_connection, $update_query);

    // Send email with password reset link
    $subject = 'Reset your password';
    $body = "
      <p>Hello $username,</p>
      <p>Click on the following link to reset your password:</p>
      <a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=$token'>Reset Password</a>
    ";
    mail($email, $subject, $body, 'Content-Type: text/html; charset=UTF-8', $from_email);

    echo 'Password reset link has been sent to your email address.';
  } else {
    die('User not found');
  }
}

?>


<?php

// Configuration
$secret_key = 'your_secret_key_here';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get form data
  $token = $_POST['token'];
  $new_password = $_POST['new_password'];

  // Validate password reset token
  if (bin2hex(random_bytes(32)) !== $token) {
    die('Invalid password reset token');
  }

  // Retrieve user from database
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($db_connection, $query);
  $user = mysqli_fetch_assoc($result);

  if ($user) {
    // Hash new password using your favorite hashing algorithm (e.g. bcrypt)
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update user's password in database
    $update_query = "UPDATE users SET password_hash = '$hashed_password' WHERE id = '" . $user['id'] . "'";
    mysqli_query($db_connection, $update_query);

    echo 'Password has been updated successfully.';
  } else {
    die('Invalid password reset token');
  }
}

?>


<?php

// Configuration
$secret_key = 'your_secret_key_here'; // Keep this secure!
$max_attempts = 3;

function forgot_password($email)
{
    global $conn, $secret_key, $max_attempts;

    try {
        // Check if user exists
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        $user = $stmt->fetch();

        if (!$user) {
            throw new Exception('User not found');
        }

        // Generate reset token
        $reset_token = hash_hmac('sha256', $secret_key, bin2hex(random_bytes(16)));
        $expires_at = time() + 3600; // 1 hour

        // Update user data with reset token and expiration date
        $stmt = $conn->prepare("UPDATE users SET password_reset_token = :token, expires_at = :expires WHERE email = :email");
        $stmt->bindParam(':token', $reset_token);
        $stmt->bindParam(':expires', $expires_at);
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        // Send reset link to user via email
        send_reset_link($user, $reset_token);

    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

function send_reset_link($user, $reset_token)
{
    $to = $user['email'];
    $subject = 'Reset your password';

    $message = '
        <html>
            <body>
                <h1>Reset your password</h1>
                <p>Hello ' . $user['name'] . ',</p>
                <p>You are receiving this email because you requested a password reset. Please click on the link below to reset your password.</p>
                <a href="' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $reset_token . '">Reset Password</a>
            </body>
        </html>
    ';

    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type:text/html; charset=UTF-8' . "\r
";

    mail($to, $subject, $message, $headers);
}

// Example usage:
$email = $_POST['email'];
forgot_password($email);

?>


<?php

// Configuration
require_once 'config.php';

// Input validation
if (!isset($_POST['email'])) {
    die('Invalid request');
}

$email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);
if (!$email) {
    die('Invalid email address');
}

// Query database for user with matching email
$stmt = $db->prepare("SELECT id, username FROM users WHERE email = ?");
$stmt->execute([$email]);
$user_data = $stmt->fetch();

if ($user_data === false) {
    echo 'Email not found';
} else {
    // Generate password reset token and store in database
    $token = bin2hex(random_bytes(32));
    $stmt = $db->prepare("UPDATE users SET password_reset_token = ? WHERE id = ?");
    $stmt->execute([$token, $user_data['id']]);

    // Send email with password reset link
    $subject = 'Password Reset Link';
    $message = '
        <p>Click the following link to reset your password:</p>
        <a href="' . URL . '/reset_password.php?token=' . $token . '">Reset Password</a>
    ';
    mail($email, $subject, $message);

    echo 'Password reset link sent to email';
}

?>


<?php

// Configuration
require_once 'config.php';

// Input validation
if (!isset($_GET['token'])) {
    die('Invalid request');
}

$token = filter_input(INPUT_GET, 'token', FILTER_SANITIZE_STRING);
if (!$token) {
    die('Invalid token');
}

// Query database for user with matching password reset token
$stmt = $db->prepare("SELECT id, username FROM users WHERE password_reset_token = ?");
$stmt->execute([$token]);
$user_data = $stmt->fetch();

if ($user_data === false) {
    echo 'Invalid token';
} else {
    // Prompt user to enter new password
    ?>
    <h1>Reset Password</h1>
    <form action="" method="post">
        <input type="password" name="new_password" placeholder="New Password">
        <input type="password" name="confirm_password" placeholder="Confirm New Password">
        <button type="submit">Submit</button>
    </form>

    <?php
}

?>


<?php

// Configuration
require_once 'config.php';

// Input validation
if (!isset($_POST['new_password']) || !isset($_POST['confirm_password'])) {
    die('Invalid request');
}

$new_password = filter_input(INPUT_POST, 'new_password', FILTER_SANITIZE_STRING);
$confirm_password = filter_input(INPUT_POST, 'confirm_password', FILTER_SANITIZE_STRING);

if ($new_password !== $confirm_password) {
    echo 'Passwords do not match';
} else {
    // Update user password in database
    $stmt = $db->prepare("UPDATE users SET password = ?, password_reset_token = NULL WHERE id = ?");
    $password_hash = password_hash($new_password, PASSWORD_DEFAULT);
    $stmt->execute([$password_hash, $_POST['user_id']]);

    echo 'Password updated successfully';
}

?>


function forgot_password($email) {
    // Check if email exists in database
    $conn = new mysqli("localhost", "username", "password", "database_name");
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    if (!$result || !mysqli_num_rows($result)) {
        return false; // Email not found
    }

    // Generate reset token
    $reset_token = generateRandomString(32); // See below for function definition

    // Update user's reset token
    $update_sql = "UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'";
    if (!$conn->query($update_sql)) {
        echo "Error updating user: " . $conn->error;
        return false;
    }

    // Send reset link to user via email (this part is not covered but you can use PHPMailer)
    send_reset_email($reset_token, $email);

    return true; // Email sent successfully
}

function generateRandomString($length) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $string = '';
    for ($i = 0; $i < $length; $i++) {
        $string .= substr($characters, rand(0, strlen($characters)-1), 1);
    }
    return $string;
}

function send_reset_email($reset_token, $email) {
    // This function is a placeholder for sending an email with the reset token
    // You would use an email library like PHPMailer to actually send the email
}


<?php

// Configuration
$databaseHost = 'localhost';
$databaseUsername = 'username';
$databasePassword = 'password';
$databaseName = 'database_name';

// Connect to database
$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email) {
    // Generate a random token for the user
    $token = bin2hex(random_bytes(32));

    // Update user's token in database
    $sql = "UPDATE users SET token = '$token' WHERE email = '$email'";
    if ($conn->query($sql) === TRUE) {
        // Send email to user with password reset link
        $to      = $email;
        $subject = 'Reset Your Password';
        $message  = '<p>Click this link to reset your password: <a href="' . site_url('reset-password/' . $token) . '">Reset Password</a></p>';
        $headers[] = 'From: ' . 'your-email@example.com' . "\r
";
        mail($to, $subject, $message, implode("\r
", $headers));
    } else {
        echo "Error updating user's token: " . $conn->error;
    }
}

// Function to check if email exists in database
function email_exists($email) {
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    return ($result->num_rows > 0);
}

// Handle forgot password form submission
if (isset($_POST['forgot-password'])) {
    $email = $_POST['email'];
    if (email_exists($email)) {
        send_password_reset_email($email);
        echo 'Email sent with password reset link';
    } else {
        echo 'Email does not exist in our database';
    }
}

// Close connection
$conn->close();

?>


// forgot_password.php

require_once 'config.php'; // load database config

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // process the form data
    $email = $_POST['email'];

    // validate email input
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // retrieve user from database
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user = $stmt->fetch();

    if (!$user) {
        echo 'Email not found';
        exit;
    }

    // generate reset token
    $resetToken = bin2hex(random_bytes(32));
    $expiresAt = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // update user's reset token and expires at time
    $stmt = $pdo->prepare('UPDATE users SET reset_token = :token, expires_at = :expires WHERE email = :email');
    $stmt->bindParam(':token', $resetToken);
    $stmt->bindParam(':expires', $expiresAt);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // send password reset email
    $to = $email;
    $subject = 'Reset your password';
    $message = '<p>Click this link to reset your password: <a href="' . $_SERVER['PHP_SELF'] . '?token=' . $resetToken . '">Reset Password</a></p>';
    mail($to, $subject, $message);

    echo 'Password reset email sent. Check your inbox and click on the link to reset your password.';
} else {
    // display forgot password form
    ?>
    <h1>Forgot Password?</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="text" name="email" id="email" required>
        <button type="submit">Submit</button>
    </form>
    <?php
}


<?php

// Configuration
define('RESET_TOKEN_EXPIRE', 60 * 15); // 15 minutes
define('RESET_PASSWORD_LINK_LENGTH', 30);

// Function to send password reset email
function sendPasswordResetEmail($email, $resetToken) {
  $subject = 'Reset Your Password';
  $message = '
    <p>Dear user,</p>
    <p>You are receiving this email because you requested a password reset for your account.</p>
    <p>To reset your password, click on the following link:</p>
    <a href="' . site_url('reset-password/' . $resetToken) . '">' . site_url('reset-password/' . $resetToken) . '</a>
  ';
  mail($email, $subject, $message);
}

// Function to generate reset token
function generateResetToken() {
  return bin2hex(random_bytes(16));
}

// Function to verify password reset link
function verifyPasswordResetLink($token) {
  global $wpdb;
  $result = $wpdb->get_row("SELECT * FROM users WHERE reset_token = '$token'");
  if ($result && time() <= strtotime($result->reset_expires)) {
    return true;
  }
  return false;
}

// Function to update user password
function updatePassword($userId, $newPassword) {
  global $wpdb;
  $wpdb->update('users', array(
    'password' => hash('sha256', $newPassword)
  ), array(
    'id' => $userId
  ));
}

// Forgot Password function
function forgotPassword($email) {
  global $wpdb, $resetToken;
  
  // Check if user exists
  $user = $wpdb->get_row("SELECT * FROM users WHERE email = '$email'");
  if (!$user) {
    return array('success' => false, 'message' => 'User not found');
  }
  
  // Generate reset token and set expiration time
  $resetToken = generateResetToken();
  $expiresAt = date('Y-m-d H:i:s', strtotime('+15 minutes'));
  
  // Update user with new reset token and expiration time
  $wpdb->update('users', array(
    'reset_token' => $resetToken,
    'reset_expires' => $expiresAt
  ), array(
    'id' => $user->id
  ));
  
  // Send password reset email
  sendPasswordResetEmail($email, $resetToken);
  
  return array('success' => true, 'message' => 'A password reset link has been sent to your email');
}

?>


$email = 'user@example.com';
$result = forgotPassword($email);
echo json_encode($result); // Output: {"success":true,"message":"A password reset link has been sent to your email"}


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if request method is POST
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get email from form submission
    $email = $_POST['email'];

    // Validate email input
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        exit;
    }

    // Query database for user with matching email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Get user data from query result
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
        }

        // Generate random password
        $new_password = substr(md5(uniqid(rand(), true)), 0, 8);

        // Update user's password in database
        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        $result = $conn->query($query);

        if ($result) {

            // Send email to user with new password
            send_email($email, $new_password);

            echo "New password sent to your email.";
        } else {
            echo "Error updating user's password.";
        }
    } else {
        echo "User not found with provided email address.";
    }

} else {

    // Display forgot password form if request method is not POST
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <input type="submit" value="Submit">
</form>

<?php

}

// Function to send email with new password
function send_email($to_email, $new_password) {
    // Configuration for your email account
    define('EMAIL_FROM', 'your_email@example.com');
    define('EMAIL_PASSWORD', 'your_email_password');

    // Use PHPMailer or any other mail library to send email
    require_once 'PHPMailerAutoload.php';

    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = EMAIL_FROM;
    $mail->Password = EMAIL_PASSWORD;

    $mail->setFrom(EMAIL_FROM, 'Your Name');
    $mail->addAddress($to_email);
    $mail->Subject = 'New Password';
    $mail->Body = "Hello,

Your new password is: $new_password";

    if ($mail->send()) {
        echo "Email sent successfully.";
    } else {
        echo "Error sending email.";
    }
}

?>


<?php

// Configuration settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to the database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email) {
    // Generate a random token for password reset
    $token = bin2hex(random_bytes(16));

    // Update user's password reset token in the database
    $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    if ($conn->query($sql) === TRUE) {
        // Send an email with a link to reset password
        $subject = 'Reset your password';
        $message = "
            <p>Hello User,
            
            To reset your password, click on the following link:
            http://your-website.com/reset-password.php?token=$token
            
            Best regards,
            Your Website Team
        ";
        
        // Send email using PHPMailer or another library of your choice
        mail($email, $subject, $message);
    } else {
        echo "Error updating user's password reset token: " . $conn->error;
    }
}

// Function to handle forgot password form submission
function forgotPasswordHandler() {
    // Get the email address from the form input
    $email = $_POST['email'];

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // If email exists, send password reset email
        sendPasswordResetEmail($email);
    } else {
        echo "Error: Email not found.";
    }
}

// Handle forgot password form submission
if (isset($_POST['submit'])) {
    forgotPasswordHandler();
} else {
    // Display the forgot password form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" name="submit" value="Submit">
    </form>
    <?php
}
?>


// Define the email sending function
function sendEmail($to, $subject, $body) {
    // Replace with your own mail server settings
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com';
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your-email@gmail.com';
    $mail->Password = 'your-password';

    $mail->setFrom('your-email@gmail.com', 'Your Name');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
        return false;
    }
    return true;
}

// Forgot password function
function forgotPassword() {
    // Get user input
    $email = $_POST['email'];

    // Validate email
    if (!preg_match("/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/", $email)) {
        return "Invalid email address.";
    }

    // Connect to database
    $conn = new mysqli('localhost', 'username', 'password', 'database_name');

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows == 0) {
        return "Email not found.";
    }

    // Generate random password
    $password = bin2hex(random_bytes(16));

    // Update user's password in database
    $updateQuery = "UPDATE users SET password = '$password' WHERE email = '$email'";
    $conn->query($updateQuery);

    // Send email to user with new password
    $subject = 'Reset Password';
    $body = 'Your new password is: <b>' . $password . '</b>';
    sendEmail($email, $subject, $body);

    return "Password sent to your email.";
}

// Call the function and display result
$result = forgotPassword();
echo $result;


<?php

require_once 'db.php'; // assume you have a db.php file for database connection settings

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];

  // Check if user exists
  $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if (!$user) {
    echo 'Email not found';
    exit;
  }

  // Generate random token for password reset
  $token = bin2hex(random_bytes(32));

  // Store token in database
  $stmt = $pdo->prepare("UPDATE users SET password_reset_token = :token WHERE email = :email");
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Send email with reset link
  $subject = 'Reset your password';
  $body = '
    Click this link to reset your password:
    <a href="' . $_SERVER['REQUEST_SCHEME'] . '://' . $_SERVER['HTTP_HOST'] . '/reset_password.php?email=' . urlencode($email) . '&token=' . $token . '">Reset Password</a>
  ';
  mail($email, $subject, $body);

  echo 'Email sent with reset link';
} else {
  // Render form for user to enter email
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="text" name="email" placeholder="Enter your email address">
  <button type="submit">Send Reset Link</button>
</form>

<?php } ?>


<?php

require_once 'db.php'; // assume you have a db.php file for database connection settings

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  $token = $_POST['token'];

  // Check if token is valid
  $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email AND password_reset_token = :token");
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $user = $stmt->fetch();

  if (!$user) {
    echo 'Invalid token';
    exit;
  }

  // Prompt user to enter new password
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="password" name="new_password" placeholder="Enter your new password">
  <button type="submit">Reset Password</button>
</form>

<?php } else {
  // Render form for user to enter email and token
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="text" name="email" placeholder="Enter your email address">
  <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
  <button type="submit">Reset Password</button>
</form>

<?php } ?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define variables
$email = $_POST['email'];

// Validate email
if (empty($email)) {
    echo 'Please enter your email address.';
    exit;
}

// Check if user exists
$stmt = $conn->prepare('SELECT * FROM users WHERE email = ?');
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo 'Email not found. Please try again.';
    exit;
}

// Generate token
$token = bin2hex(random_bytes(16));

// Update user data with token
$stmt = $conn->prepare('UPDATE users SET reset_token = ? WHERE email = ?');
$stmt->bind_param('si', $token, $email);
$stmt->execute();

echo 'A password reset link has been sent to your email.';

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define variables
$email = $_POST['email'];
$token = $_POST['token'];
$new_password = $_POST['new_password'];

// Validate token
$stmt = $conn->prepare('SELECT * FROM users WHERE email = ? AND reset_token = ?');
$stmt->bind_param('si', $email, $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo 'Invalid token. Please try again.';
    exit;
}

// Update user data with new password
$stmt = $conn->prepare('UPDATE users SET password = ? WHERE email = ?');
$stmt->bind_param('si', $new_password, $email);
$stmt->execute();

echo 'Password updated successfully.';

?>


function passwordHasher($password) {
  return password_hash($password, PASSWORD_DEFAULT);
}


function forgetPassword() {
  if (isset($_POST['username']) && isset($_POST['email'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Validate input data
    if (!empty($username) && !empty($email)) {
      // Query the database to retrieve user data
      $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
      $result = mysqli_query($_SESSION['db'], $query);
      
      // Check if a user with matching details exists
      if (mysqli_num_rows($result) > 0) {
        // Retrieve the user's id, generate and store reset token in database
        $user = mysqli_fetch_assoc($result);

        // Generate a random token for password reset
        $resetToken = bin2hex(random_bytes(32));

        // Update the user record with the new token
        $updateQuery = "UPDATE users SET reset_token = '$resetToken' WHERE id = '$user[id]'";
        mysqli_query($_SESSION['db'], $updateQuery);

        // Send an email to the user containing a link for resetting password
        sendResetEmail($email, $resetToken);
      } else {
        echo "Invalid username/email combination";
      }
    } else {
      echo "Please fill all fields";
    }
  } else {
    echo "No input data";
  }
}

function sendResetEmail($email, $token) {
  // Configuration variables
  $mailServer = 'smtp.gmail.com';
  $portNumber = 587;
  $username = 'your-email@gmail.com';
  $password = 'your-password';

  // Email headers and body
  $headers = "MIME-Version: 1.0\r
";
  $headers .= "Content-Type: text/html; charset=UTF-8\r
";
  $headers .= "From: Your Email <your-email@gmail.com>\r
";

  $body = "<a href='http://yourdomain.com/reset-password?token=" . $token . "'>Click here to reset password</a>";

  // Send email
  $mailMessage = mail($email, 'Reset Password', $body, $headers);

  if ($mailMessage) {
    echo "Email sent successfully";
  } else {
    echo "Failed to send email";
  }
}


<?php

require 'config.php'; // include database connection settings

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }

  // Retrieve user data from database
  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  if ($user = $stmt->fetch()) {
    // Generate a new reset token
    $resetToken = bin2hex(random_bytes(32));
    $resetTokenExpires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update user data with new reset token and expiration time
    $stmt = $db->prepare('UPDATE users SET reset_token = :resetToken, reset_token_expires = :resetTokenExpires WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':resetToken', $resetToken);
    $stmt->bindParam(':resetTokenExpires', $resetTokenExpires);
    $stmt->execute();

    // Send password reset email
    sendPasswordResetEmail($user['id'], $resetToken);

    echo 'Password reset email sent. Please check your inbox and follow the link to reset your password.';
  } else {
    echo 'No user found with that email address';
  }
} else {
  // Display forgot password form
  ?>
  <form action="" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required><br><br>
    <button type="submit">Send Password Reset Email</button>
  </form>
  <?php
}

// Function to send password reset email
function sendPasswordResetEmail($userId, $resetToken) {
  // Retrieve user data from database
  $stmt = $db->prepare('SELECT * FROM users WHERE id = :id');
  $stmt->bindParam(':id', $userId);
  $stmt->execute();

  if ($user = $stmt->fetch()) {
    // Send email using PHPMailer or SwiftMailer library
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Username = 'your-email@example.com';
    $mail->Password = 'your-password';
    $mail->SMTPSecure = 'tls';
    $mail->Port = 587;

    $mail->setFrom('your-email@example.com', 'Your Name');
    $mail->addAddress($user['email']);

    $mail->Subject = 'Reset Your Password';
    $mail->Body = '
      <p>Dear '.$user['username'].'</p>
      <p>To reset your password, click on the following link:</p>
      <a href="https://example.com/reset-password/'.$resetToken.'">Reset Password</a>
    ';

    if ($mail->send()) {
      echo 'Email sent successfully';
    } else {
      echo 'Error sending email: '.$mail->ErrorInfo;
    }
  }
}

?>


<?php
require_once 'config/db.php'; // Database connection settings
require_once 'vendor/autoload.php'; // Composer autoloader for PHPMailer

use PHPMailer\PHPMailer;

function sendResetEmail($email) {
  // Retrieve user data from database
  $user = getUserByEmail($email);
  
  if ($user !== false) {
    // Generate reset token
    $token = generateToken();
    
    // Update user's reset token in database
    updateUserResetToken($token, $user['id']);
    
    // Send email with reset link
    sendEmailWithLink($email, $token);
  } else {
    echo "User not found.";
  }
}

function sendEmailWithLink($email, $token) {
  require_once 'config/email.php'; // Email configuration settings
  
  $mail = new PHPMailer();
  
  try {
    $mail->isSMTP();
    $mail->Host = EMAIL_HOST;
    $mail->Port = EMAIL_PORT;
    $mail->SMTPSecure = EMAIL_SECURE;
    $mail->SMTPAuth = true;
    $mail->Username = EMAIL_USERNAME;
    $mail->Password = EMAIL_PASSWORD;
    
    $mail->setFrom(EMAIL_FROM, 'Your Company');
    $mail->addAddress($email);
    $mail->Subject = "Reset Password";
    $mail->Body = '<p>Click the link below to reset your password:</p><a href="http://' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '">Reset Password</a>';
    
    if (!$mail->send()) {
      echo "Mailer Error: " . $mail->ErrorInfo;
    }
  } catch (Exception $e) {
    echo "Message could not be sent. Mailer Error: " . $e->getMessage();
  }
}

function resetPassword($token, $newPassword) {
  // Retrieve user data from database
  $user = getUserByToken($token);
  
  if ($user !== false) {
    // Update user's password in database
    updateUserPassword($newPassword, $user['id']);
    
    echo "Your password has been changed successfully.";
  } else {
    echo "Invalid token.";
  }
}

// Helper functions

function getUserByEmail($email) {
  global $db;
  
  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  
  return $stmt->fetch(PDO::FETCH_ASSOC);
}

function updateUserResetToken($token, $userId) {
  global $db;
  
  $stmt = $db->prepare('UPDATE users SET reset_token = :token WHERE id = :id');
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':id', $userId);
  $stmt->execute();
}

function sendEmailWithLink($email, $token) {
  // Same as above
}

function getUserByToken($token) {
  global $db;
  
  $stmt = $db->prepare('SELECT * FROM users WHERE reset_token = :token');
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  
  return $stmt->fetch(PDO::FETCH_ASSOC);
}

function updateUserPassword($newPassword, $userId) {
  global $db;
  
  // Hash the new password using a library like `phpass`
  $hashedPassword = hash('sha256', $newPassword);
  
  $stmt = $db->prepare('UPDATE users SET password = :password WHERE id = :id');
  $stmt->bindParam(':password', $hashedPassword);
  $stmt->bindParam(':id', $userId);
  $stmt->execute();
}

function generateToken() {
  return bin2hex(random_bytes(16));
}


<?php
require_once 'config/db.php';
require_once 'forgot_password.php';

if (isset($_GET['token'])) {
  $token = $_GET['token'];
  
  if (!empty($token)) {
    $newPassword = trim($_POST['password']);
    
    if (!empty($newPassword)) {
      resetPassword($token, $newPassword);
    } else {
      echo "Please enter a new password.";
    }
  } else {
    echo "Invalid token.";
  }
} else {
  echo "Token not provided.";
}


class User {
  private $db;

  function __construct() {
    require_once 'db.php';
    $this->db = new Database();
  }

  public function forgotPassword($email) {
    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($this->db->getConnection(), $query);

    if (mysqli_num_rows($result) == 0) {
      return false;
    }

    // If user exists, generate a reset token and save it to database
    $resetToken = bin2hex(random_bytes(32));
    $updateQuery = "UPDATE users SET password_reset_token = '$resetToken' WHERE email = '$email'";
    mysqli_query($this->db->getConnection(), $updateQuery);

    // Send the reset link to the user's email
    $subject = 'Reset your password';
    $message = "
      <html>
        <body>
          <p>Click this link to reset your password: <a href='http://example.com/reset-password?token=$resetToken'>Reset Password</a></p>
        </body>
      </html>
    ";
    mail($email, $subject, $message);

    return true;
  }
}


class ForgotPasswordController {
  private $user;

  function __construct() {
    require_once 'User.php';
    $this->user = new User();
  }

  public function forgotPassword() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
      // Check for CSRF token
      $csrfToken = $_SESSION['csrf_token'];
      if ($csrfToken != $_POST['csrf_token']) {
        return array('error' => 'Invalid CSRF token');
      }

      // Get the user's email from form data
      $email = $_POST['email'];

      // Call the User model's forgotPassword method
      $result = $this->user->forgotPassword($email);

      if ($result) {
        return array('message' => 'Check your email to reset password');
      } else {
        return array('error' => 'Email not found');
      }
    }

    // If the request is GET, display the form
    require_once 'view/forgot-password.php';
  }
}


<form action="" method="post">
  <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
  <label>Email:</label>
  <input type="email" name="email"><br><br>
  <button type="submit">Send Reset Link</button>
</form>


// In a new PHP file, call the User model's resetPassword method
require_once 'User.php';
$user = new User();
$result = $user->resetPassword($_GET['token']);

if ($result) {
  // If password is updated successfully, display success message
} else {
  // If there's an error updating the password, display error message
}


<?php

// Configuration
$databaseHost = 'your_database_host';
$databaseUsername = 'your_database_username';
$databasePassword = 'your_database_password';
$databaseName = 'your_database_name';

// Connect to the database
$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to check if user exists and send a reset link via email
function forgot_password($email) {
    global $conn;
    
    // SQL query to select the user based on their email
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            // Generate a random reset password
            $reset_password = bin2hex(random_bytes(16));
            
            // SQL query to update the user's password in the database
            $sql = "UPDATE users SET password = '$reset_password' WHERE email = '$email'";
            if ($conn->query($sql) === TRUE) {
                echo "Password reset link has been sent to your registered email.";
                
                // Send the password reset email (this part is highly dependent on your server setup and may require a mailing library)
                send_reset_email($row['email'], $reset_password);
            } else {
                echo "Error updating user's password: " . $conn->error;
            }
        }
    } else {
        echo "No user found with the provided email address.";
    }
}

// Function to send a password reset email
function send_reset_email($to, $password) {
    // Send the email via your preferred mail library (e.g., PHPMailer, SwiftMailer)
    // For simplicity, this example uses mail()
    
    // Define the subject and body of the email
    $subject = "Password Reset";
    $body = "Your new password is: $password";
    
    // Prepare headers for the email
    $headers .= 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
    
    // Send the email using PHP's mail() function
    if (mail($to, $subject, $body, $headers)) {
        echo "Email sent successfully.";
    } else {
        echo "Error sending email: Unable to send password reset link.";
    }
}

// Handle the forgot password request form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Collect the user's input (email)
    $email = $_POST['email'];
    
    // Call the forgot_password() function with the collected email
    forgot_password($email);
} else {
    echo "Invalid request method. Please use POST.";
}

?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the email address from the form submission
$email = $_POST['email'];

// Validate the email address (optional)
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
}

// Query the database to retrieve the user's ID and password reset token
$query = "SELECT id, password_reset_token FROM users WHERE email = '$email'";
$result = $conn->query($query);

// Check if a result was returned (i.e., the user exists)
if ($result->num_rows > 0) {
    // Get the user's data from the result set
    while ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
        $password_reset_token = $row['password_reset_token'];

        // Generate a password reset link
        $reset_link = "http://your-website.com/reset_password.php?token=" . $password_reset_token;

        // Send an email to the user with the password reset link (optional)
        $to = $email;
        $subject = 'Password Reset Link';
        $body = 'Click this link to reset your password: ' . $reset_link;
        mail($to, $subject, $body);

        echo 'A password reset link has been sent to your email address.';
    }
} else {
    echo 'No user found with that email address';
}

// Close the database connection
$conn->close();

?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the password reset token from the URL parameter
$token = $_GET['token'];

// Query the database to retrieve the user's data
$query = "SELECT id, email FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($query);

// Check if a result was returned (i.e., the token is valid)
if ($result->num_rows > 0) {
    // Get the user's data from the result set
    while ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
        $email = $row['email'];

        // Generate a new password (e.g., using bcrypt)
        $new_password = password_hash('newpassword', PASSWORD_BCRYPT);

        // Update the user's password in the database
        $query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        $conn->query($query);

        echo 'Your password has been successfully reset.';
    }
} else {
    echo 'Invalid password reset token';
}

// Close the database connection
$conn->close();

?>


<?php

require_once 'dbconnect.php'; // assuming dbconnect.php connects to your database

if (isset($_POST['submit'])) {
  $email = $_POST['email'];

  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if ($result->num_rows > 0) {
    // Generate a reset token
    $reset_token = bin2hex(random_bytes(32));
    $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

    // Update the user's record with the reset token and expires timestamp
    $query = "UPDATE users SET reset_token = '$reset_token', reset_expires = '$expires' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send a reset password email to the user
    sendResetEmail($email, $reset_token);
  } else {
    echo 'No account found with that email address.';
  }
}

// Function to send a reset password email
function sendResetEmail($email, $token) {
  // Use PHPMailer or your preferred email library to send an email
  require_once 'phpmailer/PHPMailerAutoload.php';
  $mail = new PHPMailer;
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com'; // change this to your SMTP server
  $mail->SMTPAuth = true;
  $mail->Username = 'your_email@example.com'; // change this to your email address
  $mail->Password = 'your_password'; // change this to your password
  $mail->Port = 587;

  $subject = 'Reset Password';
  $body = "Click on the link below to reset your password:
  <a href='https://example.com/reset-password.php?token=" . $token . "'>Reset Password</a>";

  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $body;

  if (!$mail->send()) {
    echo 'Mailer Error: ' . $mail->ErrorInfo;
  }
}

?>


<?php

require_once 'dbconnect.php';

if (isset($_GET['token'])) {
  $token = $_GET['token'];

  // Validate the reset token and user's session expiration time
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = mysqli_query($conn, $query);

  if ($result->num_rows > 0) {
    // Display a form for the user to enter their new password
    ?>
    <form action="reset-password.php?token=<?php echo $token; ?>" method="post">
      <label for="password">New Password:</label>
      <input type="password" id="password" name="password"><br><br>
      <label for="confirm_password">Confirm New Password:</label>
      <input type="password" id="confirm_password" name="confirm_password"><br><br>
      <button type="submit">Reset Password</button>
    </form>

    <?php
  } else {
    echo 'Invalid reset token.';
  }
}

if (isset($_POST['password'])) {
  $token = $_GET['token'];
  $new_password = $_POST['password'];

  // Update the user's password and reset token in the database
  $query = "UPDATE users SET password = '$new_password', reset_token = NULL, reset_expires = NULL WHERE reset_token = '$token'";
  mysqli_query($conn, $query);

  echo 'Your password has been successfully reset!';
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function generate_reset_token() {
  // Generate a random token using uuid extension
  return bin2hex(random_bytes(32));
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

  // Retrieve input values
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die('Invalid email address');
  }

  // Query database to retrieve user record
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows == 1) {

    // Retrieve user record
    $user = $result->fetch_assoc();

    // Generate reset token
    $reset_token = generate_reset_token();
    $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update database with new reset token and expiration time
    $query = "UPDATE users SET reset_token = '$reset_token', reset_token_expires = '$reset_token_expires' WHERE id = '$user[id]'";
    $result = $conn->query($query);

    if ($result) {
      // Send email with password reset link
      $subject = 'Reset your password';
      $message = "
        Dear user,

        You have requested to reset your password. Click on the following link to reset it:

        <a href='http://your-website.com/reset_password.php?email=$email&reset_token=$reset_token'>
          Reset Password
        </a>

        Best regards,
        Your Website Team
      ";

      // Send email using PHPMailer or another library
      $mail = new PHPMailer();
      $mail->isSMTP();
      $mail->Host = 'smtp.example.com';
      $mail->Port = 587;
      $mail->SMTPAuth = true;
      $mail->Username = 'your-smtp-username';
      $mail->Password = 'your-smtp-password';
      $mail->setFrom('no-reply@example.com', 'Your Website');
      $mail->addAddress($email);
      $mail->Subject = $subject;
      $mail->Body = $message;

      if (!$mail->send()) {
        echo 'Error sending email: ' . $mail->ErrorInfo;
      } else {
        echo "Email sent successfully!";
      }
    } else {
      die("Failed to update reset token");
    }

  } else {
    die('User not found');
  }

}

// Close database connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function validate_reset_token() {
  // Validate reset token and expiration time
  // ...
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

  // Retrieve input values (reset token and new password)
  $reset_token = $_POST['reset_token'];
  $new_password = $_POST['new_password'];

  // Validate reset token using `validate_reset_token()` function
  if (!validate_reset_token($reset_token)) {
    die('Invalid or expired reset token');
  }

  // Retrieve user record from database
  $query = "SELECT * FROM users WHERE reset_token = '$reset_token'";
  $result = $conn->query($query);

  if ($result->num_rows == 1) {

    // Update user password in database
    $query = "UPDATE users SET password = '$new_password' WHERE id = '$user[id]'";
    $result = $conn->query($query);

    if ($result) {
      echo 'Password updated successfully!';
    } else {
      die('Failed to update password');
    }

  } else {
    die('Reset token not found');
  }

}

// Close database connection
$conn->close();

?>


function forgotPassword($email) {
  // Check if user exists in database
  $stmt = $mysqli->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->bind_param("s", $email);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found, return error message
    echo "User not found";
    return;
  }

  // Generate random password and store in database
  $password = substr(md5(uniqid(rand(), true)), 0, 8);
  $hashPassword = password_hash($password, PASSWORD_DEFAULT);

  $stmt = $mysqli->prepare("UPDATE users SET password = ? WHERE email = ?");
  $stmt->bind_param("ss", $hashPassword, $email);
  $stmt->execute();

  // Send password reset link to user's email
  sendEmailResetLink($email, $password);
}

// Function to send password reset link via email (example using PHPMailer)
function sendEmailResetLink($email, $password) {
  require_once 'PHPMailer/PHPMailer.php';
  require_once 'PHPMailer/Exception.php';

  $mail = new PHPMailer\PHPMailer\PHPMailer();

  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = 'your-email@example.com';
  $mail->Password = 'your-password';

  $mail->setFrom('your-email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = 'Reset Your Password';

  $passwordResetLink = "http://example.com/reset-password?token=" . md5(uniqid(rand(), true)) . "&email=$email";
  $mail->Body = "Click on this link to reset your password: $passwordResetLink";

  if (!$mail->send()) {
    echo 'Message could not be sent.';
    echo 'Mailer Error: ' . $mail->ErrorInfo;
  } else {
    echo 'Message has been sent';
  }
}


function resetPassword($token, $email) {
  // Check if token matches email in database
  $stmt = $mysqli->prepare("SELECT * FROM users WHERE email = ? AND password_reset_token = ?");
  $stmt->bind_param("ss", $email, $token);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // Token not found, return error message
    echo "Invalid token";
    return;
  }

  // Get user's current password and hash it for comparison
  $stmt = $mysqli->prepare("SELECT password FROM users WHERE email = ?");
  $stmt->bind_param("s", $email);
  $stmt->execute();
  $currentPassword = $stmt->get_result()->fetch_array()['password'];

  if (password_verify($currentPassword, $result['password'])) {
    // User's current password matches the one in database
    echo "You are already logged in";
    return;
  }

  // Reset user's password and remove token from database
  $newPassword = substr(md5(uniqid(rand(), true)), 0, 8);
  $hashNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);

  $stmt = $mysqli->prepare("UPDATE users SET password = ?, password_reset_token = NULL WHERE email = ?");
  $stmt->bind_param("ss", $hashNewPassword, $email);
  $stmt->execute();

  echo "Your password has been reset successfully";
}


forgotPassword('example@example.com');


resetPassword(md5(uniqid(rand(), true)), 'example@example.com');


<?php

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Establish database connection
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check if database connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get POST data (email)
$email = $_POST['email'];

// Check if email exists in the database
$result = $conn->query("SELECT * FROM users WHERE email='$email'");

// If email exists, generate a temporary password and send it to the user's email address
if ($result->num_rows > 0) {
    // Generate a random temporary password
    $password = substr(md5(uniqid(mt_rand(), true)), 0, 8);

    // Update the user's password in the database
    $update_password_query = "UPDATE users SET password='" . md5($password) . "' WHERE email='$email'";
    if (!$conn->query($update_password_query)) {
        echo 'Error updating password: ' . $conn->error;
        exit();
    }

    // Send a confirmation email with the temporary password
    $subject = "Temporary Password for Your Account";
    $body = "Dear user,

Your temporary password is: $password

Best regards, The Administrator";
    $from_email = "your_email@example.com";
    $to_email = $email;

    // Email sending function using PHPMailer or similar library
    require_once 'PHPMailer/PHPMailerAutoload.php';
    $mail = new PHPMailer(true);
    try {
        $mail->CharSet = 'UTF-8'; 
        $mail->isSMTP();
        $mail->Host       = "smtp.example.com"; 
        $mail->SMTPAuth   = true;
        $mail->Username   = "your_email@example.com";
        $mail->Password   = "your_password";
        $mail->Port       = 587; 

        $mail->setFrom($from_email, 'The Administrator');
        $mail->addAddress($to_email);
        $mail->Subject = $subject;
        $mail->Body    = $body;

        if(!$mail->send()) {
            echo 'Message could not be sent.';
        } else {
            echo 'Email sent successfully!';
        }
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
    }
}

// Close database connection
$conn->close();

?>


<form action="forgot-password.php" method="post">
  <label>Email:</label>
  <input type="email" name="email" required>
  <button type="submit">Send Reset Link</button>
</form>


<?php

// Include database connection settings
require 'config/db.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get email from form
  $email = $_POST['email'];

  // Validate email
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // Check if user exists
  $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if (!$user) {
    echo "User not found";
    exit;
  }

  // Generate reset token
  $resetToken = bin2hex(random_bytes(16));

  // Update user's reset token and expires at
  $stmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expires_at = NOW() + INTERVAL 1 HOUR WHERE id = :id");
  $stmt->bindParam(':token', $resetToken);
  $stmt->bindParam(':id', $user['id']);
  $stmt->execute();

  // Send email with reset link
  $subject = "Reset Password Link";
  $message = "Click this link to reset your password: <a href='https://your-website.com/reset-password.php?token=$resetToken'>Reset Password</a>";
  mail($email, $subject, $message);

  echo "Reset link sent to your email. Click on the link to reset your password.";
} else {
  // Form not submitted
}

?>


<?php

// Include database connection settings
require 'config/db.php';

// Get reset token from URL parameter
$token = $_GET['token'];

// Check if reset token is valid
$stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = :token AND reset_expires_at > NOW()");
$stmt->bindParam(':token', $token);
$stmt->execute();
$user = $stmt->fetch();

if (!$user) {
  echo "Invalid reset link";
  exit;
}

// Display password reset form
?>
<form action="reset-password.php" method="post">
  <label>New Password:</label>
  <input type="password" name="new_password" required>
  <button type="submit">Reset Password</button>
</form>

<?php

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get new password from form
  $newPassword = $_POST['new_password'];

  // Validate new password
  if (strlen($newPassword) < 8) {
    echo "New password must be at least 8 characters";
    exit;
  }

  // Update user's password
  $stmt = $conn->prepare("UPDATE users SET password_hash = :password WHERE id = :id");
  $stmt->bindParam(':password', password_hash($newPassword, PASSWORD_DEFAULT));
  $stmt->bindParam(':id', $user['id']);
  $stmt->execute();

  // Update user's reset token and expires at
  $stmt = $conn->prepare("UPDATE users SET reset_token = NULL, reset_expires_at = NULL WHERE id = :id");
  $stmt->bindParam(':id', $user['id']);
  $stmt->execute();

  echo "Password reset successfully";
}

?>


function hashPassword($password) {
    return password_hash($password, PASSWORD_DEFAULT);
}


function sendResetLink($email) {
    // Generate a unique token
    $token = bin2hex(random_bytes(16));

    // Database query to store the reset token for the given email
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $stmt = $db->prepare("UPDATE users SET reset_token=:token, reset_token_expires=CURRENT_TIMESTAMP + INTERVAL 30 MINUTE WHERE email=:email");
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':email', $email);
    if ($stmt->execute()) {
        // Send the email with a link to reset password
        $to = $email;
        $subject = "Password Reset Link";
        $message = "Click this link to reset your password: http://example.com/reset-password?token=$token";

        try {
            mail($to, $subject, $message);
            echo "Email sent successfully.";
        } catch (Exception $e) {
            echo "Error sending email: " . $e->getMessage();
        }
    } else {
        echo "Error updating reset token in database.";
    }

    $db = null;
}


function resetPassword($token) {
    // Database query to retrieve user data associated with the given token
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $stmt = $db->prepare("SELECT * FROM users WHERE reset_token=:token AND reset_token_expires > CURRENT_TIMESTAMP");
    $stmt->bindParam(':token', $token);
    if ($stmt->execute()) {
        // If user is found, proceed with updating their password
        $user = $stmt->fetch();
        
        // Prompt the user to enter a new password
        echo "Enter your new password: ";
        $newPassword = trim(fgets(STDIN));
        
        // Prompt for confirmation of new password
        echo "Confirm your new password: ";
        $confirmPassword = trim(fgets(STDIN));

        if ($newPassword === $confirmPassword) {
            // Hash the new password and update user data in database
            $hashedNewPassword = hashPassword($newPassword);
            $stmt = $db->prepare("UPDATE users SET password_hash=:password_hash WHERE email=:email");
            $stmt->bindParam(':password_hash', $hashedNewPassword);
            $stmt->bindParam(':email', $user['email']);
            if ($stmt->execute()) {
                echo "Password reset successfully!";
            } else {
                echo "Error updating user data.";
            }
        } else {
            echo "Passwords do not match. Please try again.";
        }
    } else {
        echo "Invalid or expired token.";
    }

    $db = null;
}


function forgotPassword() {
    // Prompt user to enter their email address
    echo "Enter your email address to receive a password reset link: ";
    $email = trim(fgets(STDIN));

    // Send reset link via email
    sendResetLink($email);
}


forgotPassword();


<?php

// Configuration
$DB_HOST = 'your_database_host';
$DB_USER = 'your_database_username';
$DB_PASSWORD = 'your_database_password';
$DB_NAME = 'your_database_name';

// Connect to database
$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password recovery email
function send_password_recovery_email($email) {
    // Generate a random token
    $token = bin2hex(random_bytes(16));

    // Insert into database
    $query = "INSERT INTO passwords (email, token) VALUES ('$email', '$token')";
    $conn->query($query);

    // Send email with password reset link
    $subject = 'Password Recovery';
    $body = '
        <p>Dear user,</p>
        <p>To reset your password, please click on the following link:</p>
        <p><a href="' . url('password_recovery', array('token' => $token)) . '">Reset Password</a></p>
        <p>Sincerely,</p>
    ';

    // Send email using mail() function
    $headers = 'From: your_email@example.com' . "\r
";
    mail($email, $subject, $body, $headers);

    return true;
}

// Function to handle password recovery form submission
function forgot_password() {
    // Get input data from form
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit();
    }

    // Send password recovery email
    send_password_recovery_email($email);
}

// Handle form submission
if (isset($_POST['forgot'])) {
    forgot_password();
} else {
    // Display password recovery form
    ?>
    <form action="" method="post">
        <label for="email">Email:</label>
        <input type="text" id="email" name="email"><br><br>
        <button type="submit" name="forgot">Forgot Password</button>
    </form>
    <?php
}

// Close database connection
$conn->close();

?>


<?php

require_once 'db.inc'; // Connects to your database.

// Define error messages.
$error_messages = [
    'invalid_email' => 'Invalid email address.',
    'email_not_found' => 'Email not found in our system.',
];

if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    // Validate the input data. For simplicity, we'll only check if the email contains an '@'.
    if (!preg_match('/@/', $email)) {
        echo 'Error: ' . $error_messages['invalid_email'];
        exit;
    }
    
    // Check if the user exists in our database.
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        echo 'Error: ' . $error_messages['email_not_found'];
        exit;
    }
    
    // Generate a random confirmation code.
    $confirmation_code = bin2hex(random_bytes(16));
    
    // Update the user's confirmation code in our database.
    $query = "UPDATE users SET confirmation_code = '$confirmation_code' WHERE email = '$email'";
    mysqli_query($conn, $query);
    
    // Send a message to the user with the link.
    $subject = 'Reset Your Password';
    $message_body = "
        <p>Hello!</p>
        <p>You're trying to reset your password. To confirm this is you, please click on this link:
            <a href='http://yourdomain.com/reset_password.php?email=$email&code=$confirmation_code'>Confirm</a>
        </p>
    ";
    $headers = 'From: no-reply@yourdomain.com' . "\r
" .
               'Reply-To: no-reply@yourdomain.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    
    mail($email, $subject, $message_body, $headers);
    
    echo '<p>A confirmation email has been sent to your email address.</p>';
}

?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="text" name="email" placeholder="Email Address">
    <button type="submit">Forgot Password</button>
</form>

<?php

if (isset($_GET['email']) && isset($_GET['code'])) {
    $email = $_GET['email'];
    $confirmation_code = $_GET['code'];
    
    // Check if the user's confirmation code in our database matches the provided one.
    $query = "SELECT * FROM users WHERE email = '$email' AND confirmation_code = '$confirmation_code'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // User confirmed. Now let's change their password.
        
        if (isset($_POST['submit_password'])) {
            $new_password = $_POST['new_password'];
            
            // Hash the new password and store it in our database.
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            $query = "UPDATE users SET confirmation_code = NULL, password_hash = '$hashed_password' WHERE email = '$email'";
            mysqli_query($conn, $query);
            
            echo '<p>Your password has been updated successfully.</p>';
        } else {
            // The user hasn't submitted their new password yet. Let's display the form.
            ?>
                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                    <input type="password" name="new_password" placeholder="New Password">
                    <button type="submit" name="submit_password">Submit</button>
                    <a href="<?php echo $_SERVER['PHP_SELF']; ?>">Cancel</a>
                </form>
            <?php
        }
    } else {
        // Invalid confirmation code.
        echo 'Error: Your confirmation code was incorrect.';
    }
}

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Form data
$username = $_POST['username'];
$email = $_POST['email'];

// Check if username and email exist in database
$sql = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Get user data from result
    $row = $result->fetch_assoc();

    // Generate a new password reset token (e.g. random string of 20 characters)
    $token = bin2hex(random_bytes(10));

    // Update password_reset_token column in database
    $sql = "UPDATE users SET password_reset_token = '$token' WHERE username = '$username'";
    $conn->query($sql);

    // Send email with password reset link (example using PHPMailer)
    require 'PHPMailer/src/Exception.php';
    require 'PHPMailer/src/PHPMailer.php';
    require 'PHPMailer/src/SMTP.php';

    use PHPMailer\PHPMailer\PHPMailer;
    use PHPMailer\PHPMailer\Exception;

    $mail = new PHPMailer(true);
    $mail->isSMTP();
    $mail->Host       = 'smtp.example.com';
    $mail->Username   = 'your_email@example.com';
    $mail->Password   = 'your_password';
    $mail->Port       = 587;
    $mail->CharSet    = 'UTF-8';

    $subject = "Reset Your Password";
    $body = "Click on the following link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>$token</a>";

    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);

    if (!$mail->send()) {
        echo "Message could not be sent. Error: " . $mail->ErrorInfo;
    } else {
        echo "Email sent successfully!";
    }

} else {
    echo "Username or email does not exist.";
}

// Close database connection
$conn->close();

?>


<?php

require 'config.php';

// Get token from URL parameter
$token = $_GET['token'];

// Check if token is valid
$sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Get user data from result
    $row = $result->fetch_assoc();

    // Prompt user to enter new password
    echo "<h1>Reset Your Password</h1>";
    echo "<form action='update-password.php' method='post'>";
    echo "Enter new password: <input type='password' name='new_password'><br><br>";
    echo "Confirm new password: <input type='password' name='confirm_new_password'><br><br>";
    echo "<input type='hidden' name='username' value='".$row['username']."'>";
    echo "<input type='submit' value='Reset Password'>";
    echo "</form>";

} else {
    echo "Invalid token.";
}

// Close database connection
$conn->close();

?>


<?php

require 'config.php';

// Get data from form
$new_password = $_POST['new_password'];
$confirm_new_password = $_POST['confirm_new_password'];

// Check if new password and confirm new password match
if ($new_password == $confirm_new_password) {
    // Hash new password using PHP's built-in hash function (e.g. bcrypt)
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update password column in database
    $sql = "UPDATE users SET password = '$hashed_password' WHERE username = '".$_POST['username']."'";
    $conn->query($sql);

    echo "Password updated successfully!";

} else {
    echo "New passwords do not match.";
}

// Close database connection
$conn->close();

?>


<?php
require_once 'db.php'; // Include your database connection script here.
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    $user = getUserByEmail($email); // Assume this function returns a user object or NULL if not found.
    if ($user) {
        // Send reset link
        sendResetLink($user->id, $user->email);
    } else {
        echo "Email not found.";
    }
}
?>

<form action="" method="post">
    <input type="text" name="email" placeholder="Your Email Address">
    <button type="submit" name="submit">Send Reset Link</button>
</form>


<?php
require_once 'db.php';

function sendResetLink($userId, $userEmail) {
    // Generate unique code for password reset
    $resetCode = uniqid();
    
    // Store the code in database
    updateResetCode($userId, $resetCode);
    
    // Send email with reset link
    sendMail($userEmail, 'Password Reset', "Your password reset link: <a href='https://example.com/reset?code=$resetCode'>Click Here</a>");
}

function updateResetCode($id, $code) {
    global $conn;
    $stmt = $conn->prepare("UPDATE users SET reset_code = ? WHERE id = ?");
    $stmt->execute([$code, $id]);
}
?>


<?php
require_once 'db.php';

if (isset($_GET['code'])) {
    $userId = getUserIdByCode($_GET['code']);
    if ($userId) {
        // Display form for new password and send it to db
        ?>
        <form action="" method="post">
            <input type="password" name="newPassword" placeholder="New Password">
            <button type="submit" name="change">Change Password</button>
        </form>
        <?php
    } else {
        echo "Invalid reset code.";
    }
}

if (isset($_POST['change'])) {
    $userId = getUserIdByCode($_GET['code']);
    if ($userId) {
        // Change password in db
        changePassword($userId, $_POST['newPassword']);
        echo "Password changed successfully.";
    } else {
        echo "Invalid reset code.";
    }
}

function changePassword($id, $password) {
    global $conn;
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->execute([$password, $id]);
}
?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die('Could not connect: ' . mysqli_error());
}

// Define function to send password reset email
function send_password_reset_email($email, $token) {
    // Replace with your own email service (e.g. Mailgun, Sendgrid)
    $subject = 'Password Reset';
    $body = "Click this link to reset your password: <a href='http://example.com/reset-password?token=$token'>Reset Password</a>";
    mail($email, $subject, $body);
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
    // Get email from form input
    $email = $_POST['email'];

    // Query database to get user credentials
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if ($result && mysqli_num_rows($result) > 0) {
        // Get user data from query result
        $user_data = mysqli_fetch_assoc($result);
        $token = bin2hex(random_bytes(32));

        // Update password reset token in database
        $query = "UPDATE users SET password_reset_token='$token' WHERE email='$email'";
        mysqli_query($conn, $query);

        // Send password reset email
        send_password_reset_email($user_data['email'], $token);
    } else {
        echo 'Invalid email or password';
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php

// Configuration variables
define('RESET_LINK_EXPIRE', 60); // minutes
define('RESET_LINK_SECRET', 'your_secret_key_here'); // replace with your own secret key

// Get the user's email from the form submission
$email = $_POST['email'];

// Validate the user's email address
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
}

// Connect to the database (replace with your own connection code)
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');
if (!$db) {
    die('Error connecting to database: ' . mysqli_error($db));
}

// Query the database for the user's account information
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($db, $query);
if (mysqli_num_rows($result) == 0) {
    echo 'No account found with that email address';
    exit;
}

// Retrieve the user's account information from the database
$user_data = mysqli_fetch_array($result);

// Generate a unique reset link for the user
$reset_link = hash_hmac('sha256', $user_data['id'] . time(), RESET_LINK_SECRET);
$reset_link_expires_at = date('Y-m-d H:i:s', time() + (RESET_LINK_EXPIRE * 60));

// Update the database with the new reset link and expiration time
$query = "UPDATE users SET reset_link = '$reset_link', reset_link_expires_at = '$reset_link_expires_at' WHERE id = '" . $user_data['id'] . "'";
mysqli_query($db, $query);

// Send a reset link to the user's email address
$subject = 'Reset your password';
$message = "Click this link to reset your password: <a href='" . BASE_URL . "/reset-password.php?reset_link=" . $reset_link . "'>" . BASE_URL . "/reset-password.php?reset_link=" . $reset_link . "</a>";
$headers = 'From: Your Email Address <your_email@example.com>' . "\r
" .
          'Reply-To: your_email@example.com' . "\r
" .
          'Content-Type: text/html; charset=UTF-8';
mail($email, $subject, $message, $headers);

echo 'A password reset link has been sent to your email address. Check your inbox and follow the instructions to reset your password.';

?>


<?php

// Configuration variables
define('BASE_URL', 'https://your_domain.com'); // replace with your own domain URL

// Get the reset link from the query string
$reset_link = $_GET['reset_link'];

// Validate the reset link
if (!hash_hmac_verify($reset_link, '', RESET_LINK_SECRET)) {
    echo 'Invalid reset link';
    exit;
}

// Connect to the database (replace with your own connection code)
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');
if (!$db) {
    die('Error connecting to database: ' . mysqli_error($db));
}

// Query the database for the user's account information
$query = "SELECT * FROM users WHERE reset_link = '$reset_link' AND reset_link_expires_at > NOW()";
$result = mysqli_query($db, $query);
if (mysqli_num_rows($result) == 0) {
    echo 'Reset link has expired';
    exit;
}

// Retrieve the user's account information from the database
$user_data = mysqli_fetch_array($result);

// Prompt the user to enter their new password
?>
<form action="<?php echo BASE_URL; ?>/update-password.php" method="post">
    <input type="hidden" name="user_id" value="<?php echo $user_data['id']; ?>">
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password"><br><br>
    <label for="confirm_password">Confirm New Password:</label>
    <input type="password" id="confirm_password" name="confirm_password"><br><br>
    <input type="submit" value="Reset Password">
</form>

<?php
?>


<?php

// Get the user's ID from the form submission
$user_id = $_POST['user_id'];

// Get the new password and confirmation from the form submission
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Validate the new password and confirmation
if ($new_password != $confirm_password) {
    echo 'Passwords do not match';
    exit;
}

// Connect to the database (replace with your own connection code)
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');
if (!$db) {
    die('Error connecting to database: ' . mysqli_error($db));
}

// Update the user's password in the database
$query = "UPDATE users SET password = '$new_password' WHERE id = '" . $user_id . "'";
mysqli_query($db, $query);

// Clear the reset link from the database
$query = "UPDATE users SET reset_link = NULL, reset_link_expires_at = NULL WHERE id = '" . $user_id . "'";
mysqli_query($db, $query);

echo 'Your password has been successfully reset. You can now log in with your new credentials.';

?>


<?php
// Define the email address for password reset emails
$admin_email = 'your-admin-email@example.com';

// Check if the user has submitted the form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the username or email from the form submission
    $username_or_email = $_POST['username_or_email'];

    // Query the database to retrieve the user's information
    try {
        $conn = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_database_username', 'your_database_password');
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->bindParam(':username', $username_or_email);
        $stmt->bindParam(':email', $username_or_email);
        $stmt->execute();
        $user_data = $stmt->fetch();

        if ($user_data) {
            // Generate a random password
            $new_password = bin2hex(random_bytes(16));

            // Update the user's password in the database
            $update_stmt = $conn->prepare("UPDATE users SET password = :password WHERE id = :id");
            $update_stmt->bindParam(':password', $new_password);
            $update_stmt->bindParam(':id', $user_data['id']);
            $update_stmt->execute();

            // Send an email to the user with their new password
            send_reset_email($admin_email, $username_or_email, $new_password);

            echo "Your new password has been sent to your email address.";
        } else {
            echo "Username or email not found.";
        }
    } catch (PDOException $e) {
        echo "Error connecting to database: " . $e->getMessage();
    }
}

// Function to send a reset email
function send_reset_email($admin_email, $username_or_email, $new_password) {
    $to = $username_or_email;
    $subject = 'Password Reset';
    $body = "Your new password is: $new_password";
    mail($to, $subject, $body, 'From: ' . $admin_email);
}
?>


<?php
// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get user's email address from form submission
$email = $_POST['email'];

// Query to retrieve user data based on email address
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
  // User found, generate a reset password link and send it via email
  while ($row = $result->fetch_assoc()) {
    $userId = $row['id'];
    $username = $row['username'];

    // Generate a random token for the reset password link
    $token = bin2hex(random_bytes(16));

    // Update user's data with new token
    $updateQuery = "UPDATE users SET token = '$token' WHERE id = '$userId'";
    $conn->query($updateQuery);

    // Send email with reset password link
    $subject = 'Reset Password for ' . $username;
    $message = "Dear $username,

To reset your password, please click the following link:

<a href='reset-password.php?token=$token'>Reset Password</a>

Best regards,
The System";
    $headers = 'From: admin@example.com' . "\r
" .
      'Content-Type: text/html; charset=UTF-8' . "\r
" .
      'MIME-Version: 1.0' . "\r
";

    mail($email, $subject, $message, $headers);

    echo "A reset password link has been sent to your email address.";
  }
} else {
  echo "No user found with that email address.";
}

$conn->close();
?>


<?php
// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get token from URL parameter
$token = $_GET['token'];

// Query to retrieve user data based on token
$query = "SELECT * FROM users WHERE token = '$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
  // User found, display password reset form
  while ($row = $result->fetch_assoc()) {
    $userId = $row['id'];
    $username = $row['username'];

    echo "Reset Password for $username";

    // Display password reset form
    ?>
    <form action="reset-password-confirm.php" method="post">
      <label for="new_password">New Password:</label>
      <input type="password" id="new_password" name="new_password">

      <label for="confirm_password">Confirm New Password:</label>
      <input type="password" id="confirm_password" name="confirm_password">

      <button type="submit" name="submit">Reset Password</button>
    </form>

    <?php
  }
} else {
  echo "Invalid token.";
}

$conn->close();
?>


<?php
// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Get user's ID from URL parameter
$userId = $_GET['id'];

// Get new password and confirm password from form submission
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

if ($new_password == $confirm_password) {
  // Update user's data with new password
  $updateQuery = "UPDATE users SET password = MD5('$new_password') WHERE id = '$userId'";
  $conn->query($updateQuery);

  echo "Password reset successfully.";
} else {
  echo "Passwords do not match.";
}

$conn->close();
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Send an email with a link to reset the password
    $subject = 'Reset your password';
    $body = '
        <p>Dear user,</p>
        <p>To reset your password, click on this link:</p>
        <a href="' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '">Reset Password</a>
        <p>Please enter a new password and confirm it.</p>
    ';

    // Email configuration
    $from = 'your_email@example.com';
    $to = $email;
    $headers = "From: $from\r
";
    $headers .= "Content-type: text/html\r
";

    mail($to, $subject, $body, $headers);
}

// Forgot password form handler
if (isset($_POST['forgot_password'])) {
    // Get the user's email address
    $email = $_POST['email'];

    // Check if the email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get the user's ID and generate a password reset token
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        $token = bin2hex(random_bytes(32));

        // Update the user's record with the new token
        $sql = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
        $conn->query($sql);

        // Send a password reset email to the user
        sendPasswordResetEmail($email, $token);
    } else {
        echo 'Email not found.';
    }
}

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the token from the URL query string
$token = $_GET['token'];

// Check if the token exists in the database
$sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Get the user's ID
    $row = $result->fetch_assoc();
    $userId = $row['id'];

    // Display a form to enter a new password
    echo '<h1>Reset Password</h1>';
    echo '
        <form action="' . $_SERVER['PHP_SELF'] . '?token=' . $token . '" method="post">
            <label for="new_password">New Password:</label>
            <input type="password" id="new_password" name="new_password"><br><br>
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password"><br><br>
            <button type="submit" name="reset_password">Submit</button>
        </form>
    ';
} else {
    echo 'Invalid token.';
}

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the token and user ID from the URL query string
$token = $_GET['token'];
$userId = $_GET['id'];

// Check if the token and user ID match
$sql = "SELECT * FROM users WHERE password_reset_token = '$token' AND id = '$userId'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Get the new password from the form
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];

    // Check if the passwords match
    if ($newPassword === $confirmPassword) {
        // Hash the new password and update the user's record
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password_hash = '$hashedPassword', password_reset_token = '' WHERE id = '$userId'";
        $conn->query($sql);

        echo 'Password reset successfully!';
    } else {
        echo 'Passwords do not match.';
    }
} else {
    echo 'Invalid token or user ID.';
}

?>


<?php

// Configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myuser';
$password = 'mypass';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Handle form submission (forgot password)
    if (isset($_POST['submit'])) {
        // Get the username from the form
        $username = $_POST['username'];

        // Check if the username exists in the database
        $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');
        $stmt->bindParam(':username', $username);
        $stmt->execute();
        $user = $stmt->fetch();

        // If the user exists, send a password reset email
        if ($user) {
            // Generate a random token for the password reset
            $token = bin2hex(random_bytes(32));

            // Update the user's data with the new token
            $stmt = $conn->prepare('UPDATE users SET password_reset_token = :token WHERE username = :username');
            $stmt->bindParam(':token', $token);
            $stmt->bindParam(':username', $username);
            $stmt->execute();

            // Send an email to the user with a link to reset their password
            $to = $user['email'];
            $subject = 'Reset your password';
            $message = 'Click this link to reset your password: <a href="http://yourdomain.com/reset-password.php?token=' . $token . '">Reset Password</a>';
            mail($to, $subject, $message);

            echo 'An email has been sent with a link to reset your password.';
        } else {
            echo 'Username not found.';
        }
    }

} catch (PDOException $e) {
    echo 'Error: ' . $e->getMessage();
}

?>


<?php

// Configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myuser';
$password = 'mypass';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Get the token from the URL parameter
    $token = $_GET['token'];

    // Check if the token is valid and exists in the database
    $stmt = $conn->prepare('SELECT * FROM users WHERE password_reset_token = :token');
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    $user = $stmt->fetch();

    // If the user exists, allow them to reset their password
    if ($user) {
        // Generate a new password hash and update the user's data
        $new_password_hash = password_hash($_POST['password'], PASSWORD_DEFAULT);
        $stmt = $conn->prepare('UPDATE users SET password_hash = :new_password WHERE username = :username');
        $stmt->bindParam(':new_password', $new_password_hash);
        $stmt->bindParam(':username', $user['username']);
        $stmt->execute();

        echo 'Your password has been updated.';
    } else {
        echo 'Invalid token.';
    }

} catch (PDOException $e) {
    echo 'Error: ' . $e->getMessage();
}

?>


// config.php (load configuration settings)
<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Load the database connection
require_once 'db.php';

// Forgot password function
function forgotPassword($email) {
  // Check if email exists in the database
  $stmt = $mysqli->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->bind_param('s', $email);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // Email not found in the database
    return false;
  }

  // Generate a new password and store it as a temporary token
  $new_password = bin2hex(random_bytes(16));
  $token = md5(uniqid(mt_rand(), true));

  // Update user's email with the new password token
  $stmt = $mysqli->prepare("UPDATE users SET password_token = ? WHERE email = ?");
  $stmt->bind_param('ss', $token, $email);
  $stmt->execute();

  // Send an email to the user with the new password
  sendEmail($email, $new_password);

  return true;
}

// Function to send email with the new password
function sendEmail($email, $password) {
  // Your email sending library (e.g., PHPMailer)
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->Username = 'your_email@example.com';
  $mail->Password = 'your_password';

  $body = "Your new password is: $password";
  $mail->Body = $body;

  // Send email to user
  if (!$mail->send()) {
    return false; // Email failed to send
  }

  return true;
}


$email = 'user@example.com';
if (forgotPassword($email)) {
  echo "Email sent with new password";
} else {
  echo "Email not found in database or failed to send";
}


<?php
// Configuration
require_once 'config.php';

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Handle forgot password logic here
    handleForgotPassword();
}

function handleForgotPassword() {
    global $conn;
    
    // Get the email from the form submission
    $email = $_POST['email'];
    
    // Check if user exists with given email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    // If user found
    if (mysqli_num_rows($result) > 0) {
        // Generate a reset token and send an email to the user
        $user = mysqli_fetch_assoc($result);
        $resetToken = bin2hex(random_bytes(16));
        
        // Update user's reset token in database
        $updateQuery = "UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'";
        mysqli_query($conn, $updateQuery);
        
        // Send an email to the user with a link to change password
        sendResetEmail($user['email'], $resetToken);
        
        echo '<script>alert("Password reset link sent to your email. Please check your inbox.")</script>';
    } else {
        echo '<script>alert("User not found with given email.")</script>';
    }
}

function sendResetEmail($email, $token) {
    // Your email sending configuration here
    $subject = "Reset Password";
    $body = '
        <p>Click on this link to reset your password:</p>
        <a href="http://yourwebsite.com/reset_password.php?token=' . $token . '">Reset Password</a>
    ';
    
    // Send the email (you can use PHPMailer or other libraries for sending emails)
    mail($email, $subject, $body);
}
?>


<?php
require_once 'config.php';

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    handleResetPassword();
}

function handleResetPassword() {
    global $conn;
    
    // Get token from URL
    $token = $_GET['token'];
    
    // Validate token and proceed to change password
    validateToken($token);
}

function validateToken($token) {
    global $conn;
    
    // Check if token is valid in database
    $query = "SELECT * FROM users WHERE reset_token = '$token'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        echo 'Token is valid. Please enter new password below:';
        
        // Change password form here...
        changePassword();
    } else {
        echo '<script>alert("Invalid token.")</script>';
    }
}

function changePassword() {
    global $conn;
    
    // Get the new password from the form submission
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword == $confirmPassword) {
        // Hash and update user's password in database
        $updateQuery = "UPDATE users SET password = '$newPassword', reset_token = '' WHERE reset_token = '".$_GET['token']."'";
        mysqli_query($conn, $updateQuery);
        
        echo '<script>alert("Password changed successfully.")</script>';
    } else {
        echo '<script>alert("Passwords do not match.")</script>';
    }
}
?>


<?php
// Database configuration
$conn = mysqli_connect('localhost', 'username', 'password', 'database');

// Email sending configuration (for example using PHPMailer)
$mail_config = array(
    'host' => 'smtp.example.com',
    'port' => 587,
    'username' => 'your_username@example.com',
    'password' => 'your_password'
);
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASSWORD);

// Function to send password recovery email
function sendRecoveryEmail($email) {
  $token = bin2hex(random_bytes(32));
  $query = "UPDATE users SET recovery_token = :token WHERE email = :email";
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  // Send email with token
  $subject = "Reset your password";
  $body = "
    <p>Hello, please click on the following link to reset your password:</p>
    <p><a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>
  ";
  mail($email, $subject, $body);

  return $token;
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get email from form data
  $email = $_POST['email'];

  // Check if user exists and send recovery token
  $query = "SELECT * FROM users WHERE email = :email";
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user) {
    // Send recovery email
    $token = sendRecoveryEmail($email);

    // Display success message
    echo "A password reset link has been sent to your email.";
  } else {
    // Display error message
    echo "User not found.";
  }
}

?>

<!-- Form for entering email address -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="email" name="email" placeholder="Enter your email address">
  <button type="submit">Send Recovery Email</button>
</form>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASSWORD);

// Function to verify recovery token and reset password
function resetPassword($token) {
  $query = "SELECT * FROM users WHERE recovery_token = :token";
  $stmt = $conn->prepare($query);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user) {
    // Reset password
    $newPassword = 'your_new_password';
    $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);

    $query = "UPDATE users SET password = :password WHERE recovery_token = :token";
    $stmt = $conn->prepare($query);
    $stmt->bindParam(':password', $hashPassword);
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    return true;
  } else {
    return false;
  }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get token from URL parameter
  $token = $_GET['token'];

  // Verify recovery token and reset password
  if (resetPassword($token)) {
    echo "Your password has been successfully reset.";
  } else {
    echo "Invalid token.";
  }
}

?>


<?php

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the user's email address from the form data
    $email = $_POST['email'];

    // Query the database to see if a user with that email exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Get the user's ID from the query result
        $user_id = mysqli_fetch_assoc($result)['id'];

        // Generate a new password and store it in a secure location (e.g. a session or cookie)
        $new_password = bin2hex(random_bytes(16));

        // Update the user's password in the database
        $query = "UPDATE users SET password_hash = '$new_password' WHERE id = '$user_id'";
        mysqli_query($conn, $query);

        // Send an email to the user with their new password
        send_email($email, $new_password);
    } else {
        echo 'Email not found.';
    }
} else {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Enter your email address:</label>
        <input type="text" name="email" id="email"><br><br>
        <button type="submit">Submit</button>
    </form>
    <?php
}

// Function to send an email with the new password
function send_email($to, $new_password) {
    // Set up the email headers and body
    $subject = 'Your new password is: ';
    $body = "Your new password is: $new_password";

    // Send the email using a mail library or function (e.g. PHPMailer)
    mail($to, $subject, $body);
}

?>


<?php

// Configuration
require_once 'config.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Get the username from the database
    $username = $_POST['username'];
    
    // Query the database to get the user's email address
    $query = "SELECT email FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        // Get the user's email address from the result
        $row = mysqli_fetch_assoc($result);
        $email = $row['email'];
        
        // Send an email with a password reset link
        sendPasswordResetEmail($username, $email);
    } else {
        echo "Username not found.";
    }
} else {
    // Display the forgot password form
    displayForgotPasswordForm();
}

// Function to send a password reset email
function sendPasswordResetEmail($username, $email) {
    // Generate a random password
    $password = substr(md5(uniqid()), 0, 8);
    
    // Insert the new password into the database (for demonstration purposes only)
    $query = "UPDATE users SET password_hash = '$password' WHERE username = '$username'";
    mysqli_query($conn, $query);
    
    // Send an email with a password reset link
    $subject = 'Reset your password';
    $body = "Hello $username,

Your new password is: $password

Best regards,
The System";
    mail($email, $subject, $body);
}

// Function to display the forgot password form
function displayForgotPasswordForm() {
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <input type="submit" name="submit" value="Submit">
</form>
<?php
}


<?php

// Database connection settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Create a connection to the database
$conn = mysqli_connect(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

function connectToDatabase() {
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

function sendPasswordResetEmail($email, $token) {
    // You can use a library like PHPMailer for more complex email handling
    echo "Sending password reset link to $email..."; // Replace with actual email sending code
}

function forgotPassword() {
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $usernameOrEmail = $_POST['username_or_email'];
        $conn = connectToDatabase();
        
        if ($conn) {
            $query = "SELECT * FROM users WHERE (email='$usernameOrEmail' OR username='$usernameOrEmail')";
            $result = $conn->query($query);
            
            if ($result->num_rows > 0) {
                // Generate a unique token for password reset
                $token = bin2hex(random_bytes(32));
                
                // Store the new token in the database
                $updateQuery = "UPDATE users SET reset_token='$token' WHERE (email='$usernameOrEmail' OR username='$usernameOrEmail')";
                if ($conn->query($updateQuery) === TRUE) {
                    echo "Please check your email for password reset link.";
                    
                    // Send the password reset link to the user
                    sendPasswordResetEmail($usernameOrEmail, $token);
                } else {
                    echo "Error updating user: " . $conn->error;
                }
            } else {
                echo "No account found with that username/email.";
            }
            
            $conn->close();
        } else {
            die("Connection to database failed.");
        }
    }
}

// Display the form for forgotten password
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Enter your email or username:</label>
    <input type="text" name="username_or_email"><br><br>
    <input type="submit" value="Submit">
</form>

<?php
forgotPassword();
?>


<?php

// Configuration
define('RESET_LINK_EXPIRATION', 3600); // 1 hour

// Database connection
require_once 'db_config.php';
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_error($conn));
}

function sendResetLink($email)
{
    global $conn;

    // Generate token and store it in the database
    $token = bin2hex(random_bytes(32));
    $query = "UPDATE users SET token='$token' WHERE email='$email'";
    if (!mysqli_query($conn, $query)) {
        echo "Error updating user: " . mysqli_error($conn);
    }

    // Send reset link via email
    $subject = 'Reset Password Link';
    $message = "<a href='" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=$token'>Click here to reset your password</a>";
    mail($email, $subject, $message);

    echo "Reset link sent successfully!";
}

function validateTokenAndUpdatePassword()
{
    global $conn;

    // Get token from URL
    if (!isset($_GET['token'])) {
        header('Location: forgot_password.php');
        exit;
    }

    $token = $_GET['token'];

    // Validate token and update password
    $query = "SELECT * FROM users WHERE token='$token'";
    $result = mysqli_query($conn, $query);
    if (!$result) {
        echo "Error validating user: " . mysqli_error($conn);
    }

    if (mysqli_num_rows($result) > 0) {
        // Update password
        $newPassword = $_POST['new_password'];
        $confirmNewPassword = $_POST['confirm_new_password'];

        if ($newPassword !== $confirmNewPassword) {
            echo "Passwords do not match!";
        } else {
            $query = "UPDATE users SET password='$newPassword' WHERE token='$token'";
            if (!mysqli_query($conn, $query)) {
                echo "Error updating user: " . mysqli_error($conn);
            }
        }
    }

    // Clear token
    $query = "UPDATE users SET token='' WHERE token='$token'";
    if (!mysqli_query($conn, $query)) {
        echo "Error clearing token: " . mysqli_error($conn);
    }

    header('Location: login.php');
}

if (isset($_POST['email'])) {
    sendResetLink($_POST['email']);
} elseif (isset($_GET['token'])) {
    validateTokenAndUpdatePassword();
}


<?php

require_once 'forgot_password.php';

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
</head>
<body>

<?php if (isset($_GET['token'])) { ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="new_password" id="new_password">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br>

        <label for="confirm_new_password">Confirm New Password:</label><br>
        <input type="password" id="confirm_new_password" name="confirm_new_password"><br>

        <button type="submit">Update Password</button>
    </form>

<?php } else { ?>

    <h1>Forgot Password?</h1>
    <p>Please enter your email address to reset your password.</p>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <button type="submit">Send Reset Link</button>
    </form>

<?php } ?>

</body>
</html>


<?php

require_once 'db_config.php';
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_error($conn));
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label><br>
    <input type="email" id="email" name="email"><br>

    <label for="password">Password:</label><br>
    <input type="password" id="password" name="password"><br>

    <button type="submit">Login</button>
</form>

<?php

if (isset($_POST['email']) && isset($_POST['password'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Validate user credentials
    $query = "SELECT * FROM users WHERE email='$email' AND password=PASSWORD('$password')";
    $result = mysqli_query($conn, $query);
    if (!$result) {
        echo "Error validating user: " . mysqli_error($conn);
    }

    if (mysqli_num_rows($result) > 0) {
        // Login successful
        header('Location: dashboard.php');
        exit;
    } else {
        echo "Invalid email or password!";
    }
}

?>
</body>
</html>


// File: forgot_password.php

require_once 'database.php'; // assume you have a database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Validate email input
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo json_encode(array('error' => 'Invalid email address'));
        exit;
    }
    
    // Retrieve user data from database
    $stmt = $db->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    if ($stmt->rowCount() == 0) {
        echo json_encode(array('error' => 'Email address not found'));
        exit;
    }
    
    // Generate new password and send reset link via email
    $new_password = substr(md5(rand(0, 99999)), 0, 8); // generate a random password
    $reset_link = "http://example.com/reset-password.php?email=" . urlencode($email) . "&token=" . md5($email);
    
    // Update user data in database with new password and reset token
    $stmt = $db->prepare("UPDATE users SET password_hash = :new_password, reset_token = :reset_token WHERE email = :email");
    $stmt->bindParam(':new_password', $new_password);
    $stmt->bindParam(':reset_token', md5($email));
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    // Send email with reset link
    $to = $email;
    $subject = "Reset your password";
    $body = "Click the following link to reset your password: $reset_link";
    mail($to, $subject, $body);
    
    echo json_encode(array('success' => 'Email sent with reset link'));
} else {
    // Handle GET request (display form)
    ?>
    <h1>Forgot Password</h1>
    <form method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
    <?php
}


// File: reset-password.php

require_once 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $email = $_GET['email'];
    $token = $_GET['token'];
    
    // Validate email and token inputs
    if (empty($email) || empty($token)) {
        echo json_encode(array('error' => 'Invalid request'));
        exit;
    }
    
    // Retrieve user data from database using reset token
    $stmt = $db->prepare("SELECT * FROM users WHERE reset_token = :reset_token AND email = :email");
    $stmt->bindParam(':reset_token', $token);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    if ($stmt->rowCount() == 0) {
        echo json_encode(array('error' => 'Invalid reset token'));
        exit;
    }
    
    // Update user data in database with new password
    $new_password = $_POST['new_password'];
    
    // Validate new password input
    if (empty($new_password)) {
        echo json_encode(array('error' => 'New password required'));
        exit;
    }
    
    // Hash new password using PHP's `password_hash()` function
    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user data in database with new password hash
    $stmt = $db->prepare("UPDATE users SET password_hash = :new_password_hash WHERE email = :email");
    $stmt->bindParam(':new_password_hash', $new_password_hash);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    echo json_encode(array('success' => 'Password updated successfully'));
} else {
    // Handle POST request (display form)
    ?>
    <h1>Reset Password</h1>
    <form method="post">
        <label for="new_password">New Password:</label>
        <input type="password" id="new_password" name="new_password"><br><br>
        <button type="submit">Update Password</button>
    </form>
    <?php
}


<?php

require_once 'config.php'; // assume this is where your database connection settings are stored

// Form validation and handling
if (isset($_POST['submit'])) {
    $email = filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL);

    if (!$email) {
        echo "Email address required";
        exit;
    }

    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);

    try {
        $stmt->execute();

        if ($stmt->rowCount() == 1) {
            // Retrieve user data
            $userData = $stmt->fetch(PDO::FETCH_ASSOC);

            // Generate a new password (for demonstration purposes only, do not use in production)
            $newPassword = bin2hex(random_bytes(16));

            // Update the user's password
            $query = "UPDATE users SET password_hash = :password WHERE email = :email";
            $stmt = $pdo->prepare($query);
            $stmt->bindParam(':password', $newPassword);
            $stmt->bindParam(':email', $email);

            if ($stmt->execute()) {
                // Send a password reset email
                sendEmail($userData['email'], $newPassword);

                echo "New password sent to your registered email address";
            } else {
                echo "Error updating user data";
            }
        } else {
            echo "No account found with the given email address";
        }
    } catch (PDOException $e) {
        echo "Database error: " . $e->getMessage();
    }

} // End form validation and handling

// Function to send a password reset email
function sendEmail($email, $newPassword) {
    $subject = 'Password Reset';
    $body = "Your new password is: $newPassword";
    $headers = 'From: no-reply@example.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8' . "\r
";

    mail($email, $subject, $body, $headers);
}

// Form HTML
?>
<form action="" method="post">
  <label for="email">Email:</label>
  <input type="text" name="email" id="email" required>

  <button type="submit" name="submit">Reset Password</button>
</form>


<?php

// Configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'myusername';
$password = 'mypassword';

// Connect to database
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

// Define function to send reset email
function sendResetEmail($email) {
  // Generate random password
  $password = str_random(8);
  
  // Update user's password in database
  $stmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE email = ?");
  $stmt->execute([$password, $email]);
  
  // Send email with new password
  $to = $email;
  $subject = 'Password Reset';
  $body = "Your new password is: $password";
  mail($to, $subject, $body);
}

// Define function to handle forgot password form submission
function forgotPassword() {
  if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form data
    $email = $_POST['email'];
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
      echo "Invalid email address";
      return;
    }
    
    // Check if user exists in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();
    
    if ($user) {
      // Send reset email with new password
      sendResetEmail($email);
      echo "Password reset link sent to your email";
    } else {
      echo "User not found";
    }
  }
}

// Call forgotPassword function when form is submitted
forgotPassword();

?>


<?php
// Database connection settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$connection = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}
?>


<?php
require_once 'dbconnect.php';

// Check if form has been submitted
if (isset($_POST['submit'])) {
    // Get user input
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Validate user input
    if (empty($username) || empty($email)) {
        echo "Please enter both username and email.";
        exit;
    }

    // Prepare SQL query to retrieve user's password reset token
    $query = "SELECT password_reset_token, user_id FROM users WHERE username = '$username' AND email = '$email'";
    $result = $connection->query($query);

    if ($result->num_rows > 0) {
        // User exists, generate a new password reset link and send it to their email
        while ($row = $result->fetch_assoc()) {
            $password_reset_token = $row['password_reset_token'];
            $user_id = $row['user_id'];

            // Generate a new password reset token
            $new_token = bin2hex(random_bytes(32));

            // Update user's password reset token in database
            $update_query = "UPDATE users SET password_reset_token = '$new_token' WHERE id = '$user_id'";
            $connection->query($update_query);

            // Send email with password reset link
            $to = $email;
            $subject = 'Password Reset';
            $message = '
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Click the following link to reset your password:</p>
                        <a href="http://your-site.com/resetpassword.php?token=' . $new_token . '">Reset Password</a>
                    </body>
                </html>
            ';
            mail($to, $subject, $message);

            echo "A password reset email has been sent to your email address.";
        }
    } else {
        // User does not exist
        echo "User does not exist or email is incorrect.";
    }

    // Close database connection
    $connection->close();
} else {
    // Display form if it hasn't been submitted
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Username:</label>
    <input type="text" name="username"><br><br>
    <label>Email:</label>
    <input type="email" name="email"><br><br>
    <input type="submit" name="submit" value="Submit">
</form>
<?php
}
?>


<?php
require_once 'dbconnect.php';

// Get password reset token from URL parameter
$token = $_GET['token'];

// Prepare SQL query to retrieve user's information using password reset token
$query = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $connection->query($query);

if ($result->num_rows > 0) {
    // User exists, display form for new password
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>New Password:</label>
    <input type="password" name="new_password"><br><br>
    <label>Confirm New Password:</label>
    <input type="password" name="confirm_new_password"><br><br>
    <input type="submit" name="submit" value="Submit">
</form>

<?php
} else {
    // Invalid password reset token, display error message
    echo "Invalid password reset token.";
}

// Handle form submission to update user's password
if (isset($_POST['submit'])) {
    $new_password = $_POST['new_password'];
    $confirm_new_password = $_POST['confirm_new_password'];

    if ($new_password != $confirm_new_password) {
        echo "Passwords do not match.";
    } else {
        // Update user's password in database
        $update_query = "UPDATE users SET password_reset_token = NULL, password = '$new_password' WHERE password_reset_token = '$token'";
        $connection->query($update_query);

        echo "Password updated successfully!";
    }
}
?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email)
{
  // Generate random token
  $token = bin2hex(random_bytes(32));

  // Update user's password reset token in database
  $sql = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
  if (!$conn->query($sql)) {
    return false;
  }

  // Send email with password reset link
  $to = $email;
  $subject = "Password Reset";
  $body = "
  <p>Hello,
  You are receiving this email because you requested a password reset for your account.
  Click on the following link to reset your password:
  <a href='http://example.com/reset-password?token=$token'>$token</a>
  Best regards,
  [Your Name]
  ";

  $headers = "From: info@example.com" . "\r
";
  $headers .= "Content-Type: text/html; charset=UTF-8\r
";

  if (mail($to, $subject, $body, $headers)) {
    return true;
  } else {
    return false;
  }
}

// Function to reset password
function resetPassword($token)
{
  // Check if token is valid
  $sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($sql);
  if (!$result) {
    return false;
  }

  // Get user's email from database
  $row = $result->fetch_assoc();
  $email = $row['email'];

  // Prompt user to enter new password
  echo "Enter your new password: ";
  $newPassword = trim(fgets(STDIN));
  echo "Confirm your new password: ";
  $confirmPassword = trim(fgets(STDIN));

  if ($newPassword !== $confirmPassword) {
    return false;
  }

  // Hash and store user's new password in database
  $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
  $sql = "UPDATE users SET password_hash = '$hashedPassword' WHERE email = '$email'";
  if (!$conn->query($sql)) {
    return false;
  }

  // Update user's password reset token to null
  $sql = "UPDATE users SET password_reset_token = NULL WHERE email = '$email'";
  if (!$conn->query($sql)) {
    return false;
  }

  return true;
}

// Forgot password form
echo "Forgot Password? Enter your email address: ";
$email = trim(fgets(STDIN));

if (sendPasswordResetEmail($email)) {
  echo "An email has been sent to $email with a link to reset your password.";
} else {
  echo "Error sending email. Please try again later.";
}

// Reset password form
echo "Enter the token from your email: ";
$token = trim(fgets(STDIN));

if (resetPassword($token)) {
  echo "Your password has been successfully reset!";
} else {
  echo "Invalid token. Please try again with a valid token.";
}
?>


<?php

// Include database connection script
include 'db_connection.php';

// Define variables
$email = $_POST['email'];
$token = md5(uniqid(mt_rand(), true)); // Generate a random token

// Check if email exists in database
$query = "SELECT * FROM users WHERE email = :email";
$stmt = $pdo->prepare($query);
$stmt->bindParam(':email', $email);
$stmt->execute();
$result = $stmt->fetchAll();

if (!empty($result)) {
    // Email found, send reset password email with token
    $subject = 'Reset Password';
    $message = "Click on this link to reset your password: <a href='reset_password.php?token=" . $token . "'>" . $_SERVER['HTTP_HOST'] . "/reset_password.php?token=" . $token . "</a>";
    mail($email, $subject, $message);
    
    // Save token in database for later use
    $query = "UPDATE users SET reset_token = :token WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    echo json_encode(array('message' => 'An email has been sent to your email address with a reset link.'));
} else {
    echo json_encode(array('error' => 'Email not found in our records.'));
}

?>


<?php

// Include database connection script
include 'db_connection.php';

// Define variables
$token = $_GET['token'];
$email = $_POST['email'];

// Check if token exists in database
$query = "SELECT * FROM users WHERE reset_token = :token AND email = :email";
$stmt = $pdo->prepare($query);
$stmt->bindParam(':email', $email);
$stmt->bindParam(':token', $token);
$stmt->execute();
$result = $stmt->fetchAll();

if (!empty($result)) {
    // Token found, allow user to change password
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($new_password == $confirm_password) {
            // Update password in database
            $query = "UPDATE users SET password = :password WHERE reset_token = :token AND email = :email";
            $stmt = $pdo->prepare($query);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':token', $token);
            $stmt->bindParam(':password', $new_password);
            $stmt->execute();
            
            // Remove token from database
            $query = "UPDATE users SET reset_token = NULL WHERE email = :email";
            $stmt = $pdo->prepare($query);
            $stmt->bindParam(':email', $email);
            $stmt->execute();
            
            echo json_encode(array('message' => 'Password changed successfully.'));
        } else {
            echo json_encode(array('error' => 'Passwords do not match.'));
        }
    } else {
        // Render password change form
        include 'reset_password_form.php';
    }
} else {
    echo json_encode(array('error' => 'Invalid token or email.'));
}

?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUser = 'root';
$dbPass = '';
$dbName = 'your_database_name';

// Connect to database
$conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Form data
$usernameOrEmail = $_POST['username_or_email'];
$email = $_POST['email'];

// Validate input
if (empty($usernameOrEmail) || empty($email)) {
  echo 'Please enter both username or email and email address.';
  exit;
}

// Prepare query to select user
$stmt = $conn->prepare("SELECT id, password_hash FROM users WHERE (username = ? OR email = ?)");
$stmt->bind_param('ss', $usernameOrEmail, $email);
$stmt->execute();
$result = $stmt->get_result();

// Check if user exists
if ($result->num_rows == 0) {
  echo 'Username or email not found.';
  exit;
}

// Get user data
$userData = $result->fetch_assoc();

// Generate password reset token and store it in database
$token = bin2hex(random_bytes(32));
$stmt = $conn->prepare("UPDATE users SET password_reset_token = ? WHERE id = ?");
$stmt->bind_param('si', $token, $userData['id']);
$stmt->execute();

// Send email with password reset link
$emailBody = 'Click this link to reset your password: http://your-website.com/reset-password?token=' . $token;
mail($email, 'Reset Password', $emailBody);

echo 'Password reset email sent successfully. Please check your inbox and follow the instructions.';
$conn->close();

?>


// forgot_password.php

// Configuration variables
define('SECRET_KEY', 'your_secret_key_here'); // Secret key for generating reset tokens

function sendResetEmail($email) {
  $subject = "Reset your password";
  $message = "Click the link below to reset your password:
  <a href='" . generateResetLink($email) . "'>Reset Password</a>";
  mail($email, $subject, $message);
}

function generateResetLink($email) {
  // Generate a random token
  $token = bin2hex(random_bytes(32));

  // Store the token in the database
  $conn = new mysqli("your_host", "username", "password", "database_name");
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }
  $query = "UPDATE users SET reset_token='" . $token . "' WHERE email='" . $email . "'";
  if (!$conn->query($query)) {
    echo "Error updating database";
  }

  // Return the link with the token
  return "http://yourwebsite.com/reset-password?token=" . $token;
}

function checkResetLink($token) {
  // Verify the token
  $conn = new mysqli("your_host", "username", "password", "database_name");
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }
  $query = "SELECT * FROM users WHERE reset_token='" . $token . "'";
  if (!$result = $conn->query($query)) {
    echo "Error querying database";
  }
  $row = $result->fetch_assoc();
  return $row;
}

// Forgot password form handler
if (isset($_POST['email'])) {
  $email = $_POST['email'];
  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }

  // Send reset link to the user's email
  sendResetEmail($email);
  echo "An email has been sent with a password reset link. Please check your inbox.";
}


// forgot_password.php

require_once 'connect.php'; // include your database connection script

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $user_data = mysqli_fetch_assoc($result);
        
        // If user data is found, generate a new reset code and send it to the user's email
        if (!empty($user_data)) {
            $new_reset_code = bin2hex(random_bytes(16));
            
            $query = "UPDATE users SET reset_code = '$new_reset_code' WHERE id = '$user_data[id]'";
            mysqli_query($conn, $query);

            // Send an email with a link to the new password page
            $to      = $email;
            $subject = 'Reset Password';
            $message = '<a href="reset_password.php?code=' . $new_reset_code . '">Click here to reset your password</a>';
            mail($to, $subject, $message);

            echo "Email sent with a reset link. Please check your email.";
        } else {
            echo "Email not found in the database";
        }
    } else {
        echo "Error checking user data";
    }

    // Close the connection
    mysqli_close($conn);
} else {
    ?>
    <form action="" method="post">
        Email: <input type="email" name="email"><br>
        <input type="submit" value="Reset Password">
    </form>
    <?php
}


// reset_password.php

require_once 'connect.php'; // include your database connection script

$code = $_GET['code'];

if (isset($code)) {
    $query = "SELECT * FROM users WHERE reset_code = '$code'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $user_data = mysqli_fetch_assoc($result);
        
        // If user data is found and the reset code matches, display a form for entering a new password
        if (!empty($user_data)) {
            ?>
            <form action="" method="post">
                Password: <input type="password" name="new_password"><br>
                Confirm Password: <input type="password" name="confirm_password"><br>
                <input type="hidden" name="code" value="<?php echo $code; ?>">
                <input type="submit" value="Reset Password">
            </form>
            <?php
        } else {
            echo "Invalid reset code";
        }
    } else {
        echo "Error checking user data";
    }

    // Close the connection
    mysqli_close($conn);
} else {
    ?>
    <p>Invalid request</p>
    <?php
}


// update_password.php

require_once 'connect.php'; // include your database connection script

if (isset($_POST['new_password'])) {
    $code = $_POST['code'];
    $new_password = $_POST['new_password'];

    $query = "SELECT * FROM users WHERE reset_code = '$code'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $user_data = mysqli_fetch_assoc($result);
        
        // If user data is found and the reset code matches, update the password
        if (!empty($user_data)) {
            $password_hash = password_hash($new_password, PASSWORD_DEFAULT);
            
            $query = "UPDATE users SET password = '$password_hash', reset_code = '' WHERE id = '$user_data[id]'";
            mysqli_query($conn, $query);

            echo "Password updated successfully";
        } else {
            echo "Invalid reset code";
        }
    } else {
        echo "Error checking user data";
    }

    // Close the connection
    mysqli_close($conn);
}


<?php

// Configuration variables
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function forgotPassword() {
    global $conn;
    
    // Get user input
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        
        // Validate email address
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email address.";
            return false;
        }
        
        // Check if user exists in database
        $sql = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                // Generate new password
                $new_password = substr(md5(uniqid()), 0, 8);
                
                // Update user's password in database
                $sql_update = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email'";
                mysqli_query($conn, $sql_update);
                
                // Send new password to user via email (replace with your own mail function)
                sendEmail($email, 'New Password:', $new_password);
                
                echo "New password has been sent to your email.";
                return true;
            }
        } else {
            echo "User not found.";
            return false;
        }
    }
}

function sendEmail($to_email, $subject, $body) {
    // Your own mail function here (e.g. using PHPMailer)
    // For simplicity, let's use the built-in mail() function
    $mail = mail($to_email, $subject, $body);
    
    if ($mail) {
        echo "Email sent successfully.";
    } else {
        echo "Failed to send email.";
    }
}

if (isset($_POST['submit'])) {
    forgotPassword();
} else {
    // Display form
    ?>
    <form action="" method="post">
        <label for="email">Enter your email address:</label>
        <input type="text" id="email" name="email"><br><br>
        <button type="submit" name="submit">Submit</button>
    </form>
    <?php
}
?>


<?php

// Configuration
$db_host = 'your_host';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die('Connection failed: ' . mysqli_error($conn));
}

// Function to generate reset token
function generateResetToken() {
    return substr(md5(uniqid(rand(), true)), 0, 32);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $reset_token) {
    // Your email sending code here (e.g. using PHPMailer)
    echo "Email sent to $email with reset token: $reset_token";
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Check if user exists
    $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // User found, generate reset token and send email
        $user = mysqli_fetch_assoc($result);
        $reset_token = generateResetToken();
        $updateQuery = "UPDATE users SET reset_token = '$reset_token' WHERE id = '" . $user['id'] . "'";
        mysqli_query($conn, $updateQuery);

        // Send password reset email
        sendPasswordResetEmail($email, $reset_token);
    } else {
        echo "User not found";
    }
}

?>


<?php

// Configuration settings
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_error($conn));
}

function forgotPassword() {
  // Get email from user input
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Get user data from database
    $user_data = mysqli_fetch_assoc($result);

    // Generate new password and send it to the user's email
    $new_password = substr(md5(uniqid(rand(), true)), 0, 10);
    $mail_body = "Your new password is: $new_password";

    // Send mail using PHPMailer (you'll need to install this library)
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';

    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // Your SMTP host
    $mail->Port = 587; // Your SMTP port
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com'; // Your email address
    $mail->Password = 'your_password'; // Your email password

    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Forgot Password';
    $mail->Body = $mail_body;

    if (!$mail->send()) {
      echo "Mailer Error: " . $mail->ErrorInfo;
    } else {
      // Update user's password in database
      $update_query = "UPDATE users SET password_hash = '" . md5($new_password) . "' WHERE email = '$email'";
      mysqli_query($conn, $update_query);

      echo "Password reset successfully sent to your email.";
    }
  } else {
    echo "Email not found. Please try again.";
  }

  // Close database connection
  mysqli_close($conn);
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  forgotPassword();
} else {
  // Display form if user has not submitted it yet
  ?>
  <h2>Forgot Password</h2>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Enter your email address">
    <button type="submit">Send Reset Link</button>
  </form>
  <?php
}

?>


<?php

require_once 'config.php'; // assume you have this file to connect to your database

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];

  try {
    // Query to retrieve user data
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() == 1) {
      // User exists, generate new password and send reset link
      $user_data = $stmt->fetch();
      $new_password = bin2hex(random_bytes(32));
      $new_hashed_password = hash('sha256', $new_password);

      try {
        // Update user data with new hashed password
        $stmt = $pdo->prepare("UPDATE users SET password_hash = :password WHERE id = :id");
        $stmt->bindParam(':password', $new_hashed_password);
        $stmt->bindParam(':id', $user_data['id']);
        $stmt->execute();

        // Send email with reset link
        $reset_link = "https://example.com/reset_password.php?id=" . urlencode($user_data['id']) . "&email=" . urlencode($email);

        // Email code (assuming you're using PHPMailer or a similar library)
        require_once 'vendor/autoload.php';
        $mail = new PHPMailer\PHPMailer\PHPMailer();
        $mail->isSMTP();
        $mail->Host       = 'smtp.example.com';
        $mail->SMTPAuth   = true;
        $mail->Username   = 'your-email@example.com';
        $mail->Password   = 'your-password';
        $mail->Port       = 587;

        $mail->setFrom('your-email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject  = 'Reset Password Link';
        $mail->Body     = "Click this link to reset your password: $reset_link";
        $mail->AltBody  = "Click this link to reset your password: $reset_link";

        if (!$mail->send()) {
          echo 'Error sending email: ' . $mail->ErrorInfo;
          exit;
        }

        // Redirect user to a success page
        header('Location: reset_password_success.php');
        exit;

      } catch (PDOException $e) {
        echo 'Error updating user data: ' . $e->getMessage();
        exit;
      }
    } else {
      echo "Email not found.";
      exit;
    }

  } catch (PDOException $e) {
    echo 'Error retrieving user data: ' . $e->getMessage();
    exit;
  }
}

?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <input type="email" name="email" placeholder="Enter your email">
  <button type="submit">Send Reset Link</button>
</form>


<form action="forgot_password.php" method="post">
    <input type="email" name="email" placeholder="Enter your email address"><br>
    <button type="submit">Submit</button>
</form>


<?php
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Query to select user from database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Get the user's ID and email
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];
        
        // Generate a random password reset token
        $token = bin2hex(random_bytes(32));
        
        // Update the user's password reset token in database
        $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
        mysqli_query($conn, $query);
        
        // Send email with password reset link
        send_email($email, $token);
    } else {
        echo "Email not found";
    }
}

// Function to send email with password reset link
function send_email($email, $token) {
    $subject = "Password Reset Link";
    $body = "
    <p>Click on the following link to reset your password:</p>
    <a href='reset_password.php?token=$token'>$url</a>
    ";
    
    $headers = 'From: your-email@example.com' . "\r
" .
        'Reply-To: your-email@example.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8';
        
    mail($email, $subject, $body, $headers);
}

// Function to reset password
function reset_password() {
    if (isset($_GET['token'])) {
        // Get the user's ID and email from database using the token
        $query = "SELECT * FROM users WHERE password_reset_token = '$_GET[token]'";
        $result = mysqli_query($conn, $query);
        
        if (mysqli_num_rows($result) > 0) {
            // Update the user's password in database
            $new_password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];
            
            if ($new_password == $confirm_password) {
                // Hash the new password and update it in database
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                $query = "UPDATE users SET password = '$hashed_password' WHERE password_reset_token = '$_GET[token]'";
                mysqli_query($conn, $query);
                
                // Redirect user to login page
                header("Location: login.php");
                exit;
            } else {
                echo "Passwords do not match";
            }
        } else {
            echo "Invalid token";
        }
    }
}


<?php

// Include configuration file
require_once 'config.php';

// Sanitize input data
$email = filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL);

// Check if email is valid and exists in database
if (!empty($email) && strpos($email, '@') !== false) {
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() > 0) {
        // Retrieve user data
        $user = $stmt->fetch();

        // Generate a random password and store it securely
        $new_password = openssl_random_pseudo_bytes(32);
        $password_hash = password_hash($new_password, PASSWORD_DEFAULT);

        // Update password in database
        $query = "UPDATE users SET password = :password WHERE id = :id";
        $stmt = $pdo->prepare($query);
        $stmt->bindParam(':password', $password_hash);
        $stmt->bindParam(':id', $user['id']);
        $stmt->execute();

        // Send password reset email
        $subject = 'Password Reset Link';
        $body = "Dear $user[username],

Your new password is: $new_password";
        $headers = 'From: your-email@example.com' . "\r
" .
            'Reply-To: your-email@example.com' . "\r
" .
            'X-Mailer: PHP/' . phpversion();

        mail($user['email'], $subject, $body, $headers);

        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our records.";
    }
} else {
    echo "Invalid email address.";
}

?>


<?php

// Configuration
define('EMAIL_SERVER', 'smtp.gmail.com');
define('FROM_EMAIL', 'your_email@gmail.com');
define('PASSWORD_RESET_TEMPLATE', 'password_reset.html');

// Function to send email notification
function sendEmailNotification($to, $subject, $body) {
    // Set up mail server connection
    $mail = mail();
    $mail->isSMTP();
    $mail->Host = EMAIL_SERVER;
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = FROM_EMAIL;
    $mail->Password = 'your_password';

    // Set email parameters
    $mail->setFrom(FROM_EMAIL, 'Your Name');
    $mail->addAddress($to);

    // Send email
    $mail->isHTML(true);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if ($mail->send()) {
        echo "Email sent successfully!";
    } else {
        echo "Error sending email: " . $mail->ErrorInfo;
    }
}

// Function to generate random password
function generateRandomPassword() {
    $length = 8;
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $password = '';

    for ($i = 0; $i < $length; $i++) {
        $password .= $characters[rand(0, strlen($characters) - 1)];
    }

    return $password;
}

// Function to reset password
function resetPassword($email) {
    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->execute([':email' => $email]);

    if ($row = $stmt->fetch()) {
        // Generate random password
        $newPassword = generateRandomPassword();

        // Update user's account with new password
        $query = "UPDATE users SET password = :password WHERE email = :email";
        $stmt = $pdo->prepare($query);
        $stmt->execute([':password' => $newPassword, ':email' => $email]);

        // Send email notification with new password
        $body = '';
        $body .= 'Your new password is: ' . $newPassword;
        sendEmailNotification($email, 'Password Reset', $body);

        echo "New password sent to your email address!";
    } else {
        echo "No account found with the provided email address.";
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    if (!empty($email)) {
        resetPassword($email);
    } else {
        echo "Please enter your email address to reset password.";
    }
}
?>


function forgotPassword($email)
{
    // Connect to the database
    $conn = mysqli_connect('localhost', 'username', 'password', 'database');

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Query to retrieve the user's ID and password hash
    $query = "SELECT id, password FROM users WHERE email = '$email'";

    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Retrieve the user's data
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];
        $passwordHash = $row['password'];

        // Generate a reset link with a unique token
        $token = bin2hex(random_bytes(32));
        $resetLink = "http://example.com/reset-password.php?token=" . urlencode($token);

        // Query to update the user's password reset token and email
        $query = "UPDATE users SET password_reset_token = '$token', password_reset_email_sent = NOW() WHERE id = '$userId'";

        if (mysqli_query($conn, $query)) {
            // Send an email with the reset link
            sendResetEmail($email, $resetLink);
            return true;
        } else {
            echo "Error updating user data: " . mysqli_error($conn);
        }
    } else {
        echo "User not found.";
    }

    // Close database connection
    mysqli_close($conn);

    return false;
}

// Function to send a password reset email
function sendResetEmail($email, $resetLink)
{
    // Your email settings here (e.g., SMTP server, username, password)
    $from = "your-email@example.com";
    $subject = "Password Reset Request";
    $message = "Click the link below to reset your password:

" . $resetLink;

    // Send email using your preferred method (e.g., PHPMailer, mail())
}


// Check if the token is valid and update the user's password
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    $userId = findUserIdByToken($token);

    if ($userId) {
        // Get the user's current data from the database
        $query = "SELECT * FROM users WHERE id = '$userId'";

        $result = mysqli_query($conn, $query);
        $row = mysqli_fetch_assoc($result);

        // Validate the token (e.g., check if it matches the expected hash)
        if ($token === $row['password_reset_token']) {
            // Update the user's password
            updatePassword($userId, $_POST['new_password']);
            echo "Password reset successfully.";
        } else {
            echo "Invalid token.";
        }
    } else {
        echo "User not found.";
    }
} else {
    echo "Invalid request.";
}


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Retrieve email from form
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Generate a new password and send it to the user via email

    // Generate a random password (for demonstration purposes)
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);

    // Insert new password into database ( temporarily )
    $query = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result) {
      // Send email to user with new password
      $to_email = $email;
      $subject = 'Your temporary password';
      $message = "Dear User, your temporary password is: $new_password";

      // Send email using PHPMailer (or other library)
      // ...

      echo "An email has been sent to your registered email address with a temporary password.";
    } else {
      echo "Error generating new password and sending email.";
    }
  } else {
    echo "Email not found in database.";
  }
}

// Close connection
$conn->close();

?>


<?php

// Configuration settings
define('APP_ROOT', dirname(__FILE__));
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define='DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Include database connection file
include APP_ROOT . '/db.php';

// Define function to generate reset token
function generateResetToken() {
    return bin2hex(random_bytes(32));
}

// Define function to send password reset email
function sendPasswordResetEmail($email, $reset_token) {
    // Email settings
    $from_email = 'your_email@example.com';
    $to_email = $email;
    $subject = 'Reset Password';

    // Send email using PHPMailer or SwiftMailer library
    // (Replace with your preferred email sending library)
}

// Forgot password function
function forgotPassword($username) {
    // Retrieve user data from database
    $sql = "SELECT id, email FROM users WHERE username = ?";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([$username]);
    $user_data = $stmt->fetch();

    if ($user_data) {
        // Generate reset token and store it in user data
        $reset_token = generateResetToken();
        $user_data['reset_token'] = $reset_token;

        // Update database with new reset token
        $sql = "UPDATE users SET reset_token = ? WHERE id = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$reset_token, $user_data['id']]);

        // Send password reset email to user
        sendPasswordResetEmail($user_data['email'], $reset_token);

        return array('success' => true, 'message' => 'Password reset link sent to your email.');
    } else {
        return array('success' => false, 'message' => 'Username not found.');
    }
}

// Process forgot password request
if (isset($_POST['username'])) {
    $username = trim($_POST['username']);
    $result = forgotPassword($username);

    if ($result['success']) {
        echo json_encode($result);
    } else {
        echo json_encode(array('success' => false, 'message' => $result['message']));
    }
} else {
    // Handle invalid or missing input
    echo json_encode(array('success' => false, 'message' => 'Invalid input'));
}


<?php

// Load database configuration settings from an external file or environment variables
$dsn = 'mysql:host=' . DB_HOST . ';dbname=' . DB_NAME;
$username = DB_USERNAME;
$password = DB_PASSWORD;

try {
    $pdo = new PDO($dsn, $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>


<?php

// Configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to database
$conn = mysqli_connect($dbHost, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

function forgotPassword() {
  global $conn;

  // Get form data
  $email = $_POST['email'];

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Get user ID and generate a password reset token
    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];
    $token = bin2hex(random_bytes(16));

    // Insert password reset token into database
    $query = "INSERT INTO password_resets (user_id, token) VALUES ('$userId', '$token')";
    mysqli_query($conn, $query);

    // Send email with password reset link
    sendPasswordResetEmail($email, $token);
  } else {
    echo "Email not found.";
  }
}

function sendPasswordResetEmail($email, $token) {
  // Email configuration (you can use a library like PHPMailer or SwiftMailer)
  $subject = 'Reset your password';
  $body = '
    <p>Click the link below to reset your password:</p>
    <a href="https://example.com/reset-password?token=' . $token . '">Reset Password</a>
  ';
  $fromEmail = 'your_email@example.com';

  // Send email using mail() function (not recommended, use a library instead)
  mail($email, $subject, $body, "From: $fromEmail");
}

// Process form data
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  forgotPassword();
}
?>


<?php

require_once 'config.php'; // Your database configuration file

// Validate form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = trim($_POST['email']);
    
    if (empty($email)) {
        echo json_encode(array('error' => 'Please enter your email address.'));
        exit;
    }

    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    // If the user exists
    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        
        // Generate a random token for password reset
        $token = uniqid('', true);
        $hashed_token = hash('sha256', $token); // Hash the token to prevent SQL injection
        
        // Update user data with new hashed token
        $query_update = "UPDATE users SET token = '$hashed_token' WHERE id = '$user_data[id]'";
        mysqli_query($conn, $query_update);
        
        // Send a password reset link via email
        sendPasswordResetEmail($email, $token);

        echo json_encode(array('success' => 'Please check your email for the password reset link.'));
    } else {
        echo json_encode(array('error' => 'No user found with this email address.'));
    }
    
    // Close database connection
    mysqli_close($conn);
} else {
    header("Location: index.php"); // Your login/index page URL
}

// Function to send password reset email using PHPMailer
function sendPasswordResetEmail($email, $token) {
    require_once 'PHPMailer/PHPMailerAutoload.php'; // Make sure you have the PHPMailer library in your project
    
    $mail = new PHPMailer(true);
    
    try {
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com'; // Your SMTP server
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);
        
        $body = "You can reset your password by clicking on this link: <a href='reset_password.php?token=" . urlencode($token) . "'>Reset Password</a>";
        $mail->isHTML(true);
        $mail->Subject = 'Password Reset';
        $mail->Body = $body;
        
        if (!$mail->send()) {
            echo 'Message could not be sent.';
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        } else {
            // Password reset email sent successfully
        }
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;
    }
}


<?php

require_once 'config.php'; // Your database configuration file

// Validate form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    
    if (empty($token)) {
        echo json_encode(array('error' => 'Please enter the token from your email.'));
        exit;
    }

    $query = "SELECT * FROM users WHERE token = '$token'";
    $result = mysqli_query($conn, $query);
    
    // If the user exists
    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        
        // Update user data with new password
        $new_password = hash('sha256', $_POST['new_password']);
        $query_update = "UPDATE users SET password = '$new_password' WHERE id = '$user_data[id]'";
        mysqli_query($conn, $query_update);
        
        echo json_encode(array('success' => 'Your password has been successfully reset.'));
    } else {
        echo json_encode(array('error' => 'Invalid token. Please try again.'));
    }
    
    // Close database connection
    mysqli_close($conn);
} else {
    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Display the reset password form
        echo '<form method="post">';
        echo '<label for="new_password">New Password:</label>';
        echo '<input type="password" name="new_password" id="new_password"><br><br>';
        echo '<button type="submit">Reset Password</button>';
        echo '</form>';
    } else {
        header("Location: index.php"); // Your login/index page URL
    }
}

?>


<?php

// Include configuration and database connection files
require_once 'config.php';
require_once 'db.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user email from form data
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);

    // Query database for matching user
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $db->prepare($query);
    $stmt->execute([':email' => $email]);

    // If user exists, send reset token via email
    if ($user = $stmt->fetch()) {
        // Generate new reset token and set expiration time
        $token = bin2hex(random_bytes(32));
        $expiresAt = date('Y-m-d H:i:s', strtotime('+1 day'));

        // Update user record with reset token and expires_at
        $query = "UPDATE users SET reset_token = :token, reset_expires_at = :expires_at WHERE email = :email";
        $stmt = $db->prepare($query);
        $stmt->execute([':token' => $token, ':expires_at' => $expiresAt, ':email' => $email]);

        // Send reset token via email
        sendResetEmail($email, $token);

        echo "Password reset link sent to your email.";
    } else {
        echo "User not found.";
    }
} else {
    // Display form for user input (HTML)
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Email Address">
    <button type="submit">Send Password Reset Link</button>
</form>

<?php
}

// Function to send reset email with token (using PHPMailer or similar library)
function sendResetEmail($email, $token) {
    require_once 'PHPMailer.php';
    $mail = new PHPMailer();
    $mail->isHTML(true);
    $mail->setFrom('your-email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = "Password Reset Link";
    $mail->Body = "<p>Click here to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>";
    if (!$mail->send()) {
        echo "Error sending email.";
    }
}


<?php
require 'vendor/autoload.php';
use PHPMailer\PHPMailer\PHPMailer;

$mail = new PHPMailer();
$mail->isHTML(true);
$mail->SMTPDebug = 0;
$mail->Host = 'smtp.example.com';
$mail->Port = 587;
$mail->Username = 'your-email@example.com';
$mail->Password = 'your-password';
$mail->setFrom('your-email@example.com', 'Your Name');
$mail->addAddress($email);
$mail->Subject = "Password Reset Link";
$mail->Body = "<p>Click here to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>";


<?php

// Configuration
$dsn = 'mysql:host=localhost;dbname=mydatabase';
$username = 'myuser';
$password = 'mypassword';

try {
  // Connect to database
  $pdo = new PDO($dsn, $username, $password);
} catch (PDOException $e) {
  echo 'Connection failed: ' . $e->getMessage();
  exit;
}

// Check if user submitted the form
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get email from form data
  $email = $_POST['email'];

  // Validate email
  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email';
    exit;
  }

  // Check if user exists in database
  $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->bindParam(':email', $email);
  $stmt->execute();

  if ($stmt->rowCount() > 0) {
    // Get user ID
    $userId = $stmt->fetchColumn(0);

    // Generate new password and store it in session
    $newPassword = substr(md5(uniqid()), 0, 8);
    $_SESSION['new_password'] = $newPassword;

    // Send email with new password to user
    $to = $email;
    $subject = 'Your new password';
    $message = 'Hello,' . "

" .
      'Your new password is: ' . $newPassword . "

" .
      'Best regards, Your Website';

    mail($to, $subject, $message);

    echo 'New password sent to your email';
  } else {
    echo 'User not found';
  }
} else {
  // Display form if user hasn't submitted it yet
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
</form>

<?php } ?>


// Include the configuration file
require_once 'config.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
  // Get the username from the input field
  $username = trim($_POST['username']);

  // Query the database to get the user's information
  $query = "SELECT * FROM users WHERE username = '$username'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 1) {
    // Get the user's data from the result set
    $user_data = mysqli_fetch_assoc($result);

    // Generate a random reset token
    $reset_token = bin2hex(random_bytes(16));

    // Update the database with the new reset token
    $query = "UPDATE users SET reset_token = '$reset_token' WHERE id = '$user_data[id]'";
    if (mysqli_query($conn, $query)) {
      // Send an email to the user with a link to reset their password
      sendResetEmail($username, $reset_token);

      echo '<p>A password reset email has been sent to your email address.</p>';
    } else {
      echo '<p>Error updating the database.</p>';
    }
  } else {
    echo '<p>User not found.</p>';
  }
} else {
  // Display the form
?>

<form action="" method="post">
  <input type="text" name="username" placeholder="Username">
  <button type="submit" name="submit">Send Reset Email</button>
</form>

<?php
}


function sendResetEmail($username, $reset_token) {
  // Get the user's email from the database
  $query = "SELECT * FROM users WHERE username = '$username'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 1) {
    $user_data = mysqli_fetch_assoc($result);

    // Set the email headers and body
    $to = $user_data['email'];
    $subject = 'Reset Your Password';
    $body = '
      <p>Dear '. $username .'</p>
      <p>To reset your password, click on the following link:</p>
      <p><a href="reset_password.php?token='. $reset_token .'">Reset Password</a></p>
      ';

    // Send the email using PHPMailer
    require_once 'PHPMailerAutoload.php';
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // Change this to your SMTP server
    $mail->Username = 'your_email@example.com'; // Change this to your email address
    $mail->Password = 'your_password'; // Change this to your password
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->From = 'your_email@example.com'; // Change this to your email address
    $mail->FromName = 'Your Name'; // Change this to your name
    $mail->Subject = $subject;
    $mail->Body = $body;
    $mail->addAddress($to);

    if (!$mail->send()) {
      echo 'Mailer Error: ' . $mail->ErrorInfo;
    } else {
      echo 'Email sent successfully.';
    }
  }
}


// Check if the form has been submitted
if (isset($_POST['new_password'])) {
  // Get the reset token from the URL parameter
  $token = $_GET['token'];

  // Query the database to get the user's information
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 1) {
    // Get the user's data from the result set
    $user_data = mysqli_fetch_assoc($result);

    // Update the database with the new password
    $new_password = trim($_POST['new_password']);
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password_hash = '$hashed_password', reset_token = NULL WHERE id = '$user_data[id]'";
    if (mysqli_query($conn, $query)) {
      echo '<p>Password updated successfully.</p>';
    } else {
      echo '<p>Error updating the database.</p>';
    }
  } else {
    echo '<p>Invalid reset token.</p>';
  }
} else {
  // Display the form
?>

<form action="" method="post">
  <input type="password" name="new_password" placeholder="New Password">
  <button type="submit" name="new_password">Reset Password</button>
</form>

<?php
}


<?php

// Check if user has submitted the form
if (isset($_POST['submit'])) {
  // Get username and email from form submission
  $username = $_POST['username'];
  $email = $_POST['email'];

  // Connect to database
  require_once 'db.php';
  $conn = mysqli_connect($host, $user, $password, $database);

  // Check if user exists in database
  $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($conn, $query);
  $row = mysqli_fetch_assoc($result);

  // If user exists, generate a password reset token and send it to their email
  if ($row) {
    // Generate password reset token (e.g. UUID)
    $token = uniqid('', true);

    // Insert token into database for this user
    $query = "UPDATE users SET password_reset_token = '$token' WHERE username = '$username'";
    mysqli_query($conn, $query);

    // Send email to user with link to reset password
    $to = $email;
    $subject = 'Reset Your Password';
    $body = "
      <p>Click this link to reset your password:</p>
      <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
    ";
    mail($to, $subject, $body);

    // Display success message
    echo "Email sent with password reset instructions.";
  } else {
    // If user does not exist, display error message
    echo "Username or email not found.";
  }
}

// Create form for user to enter their username and email
?>
<form action="" method="post">
  <label>Username:</label>
  <input type="text" name="username"><br><br>
  <label>Email:</label>
  <input type="email" name="email"><br><br>
  <button type="submit" name="submit">Send Password Reset Link</button>
</form>


<?php

// Check if user has submitted the form to reset their password
if (isset($_POST['reset'])) {
  // Get token from form submission
  $token = $_POST['token'];
  $new_password = $_POST['new_password'];

  // Connect to database
  require_once 'db.php';
  $conn = mysqli_connect($host, $user, $password, $database);

  // Check if token is valid and user exists in database
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($conn, $query);
  $row = mysqli_fetch_assoc($result);

  // If token is valid, update user's password
  if ($row) {
    // Update user's password in database
    $query = "UPDATE users SET password = '$new_password' WHERE username = '$row[username]'";
    mysqli_query($conn, $query);

    // Remove password reset token from database for this user
    $query = "UPDATE users SET password_reset_token = NULL WHERE username = '$row[username]'";
    mysqli_query($conn, $query);

    // Display success message
    echo "Password updated successfully.";
  } else {
    // If token is not valid or user does not exist, display error message
    echo "Invalid password reset token.";
  }
}

// Create form for user to enter their new password and confirm it
?>
<form action="" method="post">
  <label>New Password:</label>
  <input type="password" name="new_password"><br><br>
  <button type="submit" name="reset">Reset Password</button>
</form>


<?php

// Configuration
$databaseHost = 'localhost';
$databaseName = 'mydb';
$databaseUsername = 'root';
$databasePassword = '';

// Connect to database
$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email, $token) {
    // Mail configuration (e.g., SMTP settings)
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';

    // Set sender and recipient email addresses
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);

    // Set password reset token and expiration time (1 hour)
    $reset_link = 'http://example.com/reset-password.php?token=' . $token;

    // Email body
    $body = '
        <h2>Password Reset Request</h2>
        <p>Hello!</p>
        <p>You are receiving this email because we received a password reset request for your account.</p>
        <p>To reset your password, click the following link:</p>
        <p><a href="' . $reset_link . '">Reset Password</a></p>
        <p>Expiration time: 1 hour</p>';

    // Send email
    $mail->isHTML(true);
    $mail->Subject = 'Password Reset Request';
    $mail->Body = $body;
    if (!$mail->send()) {
        echo 'Error sending email: ';
        print_r($mail->ErrorInfo);
    }
}

// Forgot password form handler
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];

    // Validate email address (e.g., using regular expression)
    if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/', $email)) {
        echo 'Invalid email address';
        exit;
    }

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);
    if ($result->num_rows === 0) {
        echo 'User not found';
        exit;
    }

    // Generate random reset token and expiration time (1 hour)
    $token = bin2hex(random_bytes(32));
    $expires_at = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Store reset token in database
    $query = "INSERT INTO reset_tokens (user_id, token, expires_at) VALUES ((SELECT id FROM users WHERE email = '$email'), '$token', '$expires_at')";
    $conn->query($query);

    // Send password reset email
    send_password_reset_email($email, $token);
}

// Close database connection
$conn->close();

?>


<?php
require_once 'config.php'; // database connection settings

// validate user input
if (isset($_POST['username']) && isset($_POST['email'])) {
  $username = trim($_POST['username']);
  $email = trim($_POST['email']);

  // check if username and email match a user in the database
  $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username AND email = :email');
  $stmt->execute([':username' => $username, ':email' => $email]);
  $user = $stmt->fetch();

  if ($user) {
    // generate a forgot password token
    $token = bin2hex(random_bytes(32));
    $pdo->exec('UPDATE users SET forgot_token = :token WHERE id = :id', ['token' => $token, 'id' => $user['id']]);

    // send email with reset link
    $reset_link = "http://example.com/reset_password.php?token=" . urlencode($token);
    $subject = 'Reset Password';
    $body = 'Click this link to reset your password: ' . $reset_link;
    mail($email, $subject, $body);

    echo 'A password reset email has been sent to you.';
  } else {
    echo 'Username and/or email do not match our records.';
  }
}

// display form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>Username:</label>
  <input type="text" name="username" required>

  <br><br>

  <label>Email:</label>
  <input type="email" name="email" required>

  <button type="submit">Send Reset Link</button>
</form>


<?php
require_once 'config.php'; // database connection settings

// validate token input
if (isset($_GET['token'])) {
  $token = $_GET['token'];

  // check if token is valid and not expired
  $stmt = $pdo->prepare('SELECT * FROM users WHERE forgot_token = :token AND forgot_timestamp > NOW() - INTERVAL 1 HOUR');
  $stmt->execute([':token' => $token]);
  $user = $stmt->fetch();

  if ($user) {
    // display reset password form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>New Password:</label>
  <input type="password" name="new_password" required>

  <br><br>

  <button type="submit">Reset Password</button>
</form>

<?php
    // validate new password input
    if (isset($_POST['new_password'])) {
      $new_password = trim($_POST['new_password']);

      // check if new password is strong enough
      if (strlen($new_password) < 8) {
        echo 'Password must be at least 8 characters long.';
      } else {
        // update user's password
        $pdo->exec('UPDATE users SET password = :password WHERE id = :id', ['password' => password_hash($new_password, PASSWORD_DEFAULT), 'id' => $user['id']]);

        echo 'Password has been successfully reset.';
      }
    }

  } else {
    echo 'Invalid or expired token.';
  }
}
?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_NAME', 'your_database');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');

// Connect to database
$dsn = "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME;
$conn = new PDO($dsn, DB_USER, DB_PASSWORD);

function sendEmail($to, $subject, $message) {
  // Email configuration (change as needed)
  $fromEmail = 'your_email@example.com';
  $fromName = 'Your Name';
  $emailServer = 'smtp.example.com';
  $emailPort = 587;
  $emailUsername = 'your_email_username';
  $emailPassword = 'your_email_password';

  $headers = "From: $fromName <$fromEmail>\r
";
  $headers .= "Reply-To: $fromEmail\r
";
  $headers .= "Content-Type: text/html; charset=UTF-8\r
";

  mail($to, $subject, $message, $headers);
}

function generateToken() {
  return bin2hex(random_bytes(16));
}

// Check for form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

  // Get the email address from the form
  $email = trim($_POST['email']);

  try {
    // Query to get user with matching email
    $stmt = $conn->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($user = $stmt->fetch()) {

      // Generate a new reset token
      $token = generateToken();
      $reset_expires = date('Y-m-d H:i:s', strtotime('+1 day'));

      // Update user's reset token and expires timestamp
      $stmt = $conn->prepare('UPDATE users SET reset_token = :token, reset_expires = :expires WHERE id = :id');
      $stmt->bindParam(':token', $token);
      $stmt->bindParam(':expires', $reset_expires);
      $stmt->bindParam(':id', $user['id']);
      $stmt->execute();

      // Send email with reset link
      $subject = 'Reset your password';
      $message = '<p>Hello ' . $user['name'] . ',</p>';
      $message .= '<p>Click the following link to reset your password: ';
      $message .= '<a href="' . $_SERVER['PHP_SELF'] . '?token=' . $token . '">Reset Password</a></p>';
      sendEmail($email, $subject, $message);

      echo 'Check your email for a reset link.';
    } else {
      throw new Exception('User not found');
    }
  } catch (Exception $e) {
    echo 'Error: ' . $e->getMessage();
  }

} else {

  // Display the forgot password form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <input type="submit" value="Send Reset Link">
</form>

<?php

}
?>


<form action="forgot_password.php" method="post">
    <label for="email">Email:</label>
    <input type="text" id="email" name="email" required>
    <button type="submit">Submit</button>
</form>


// forgot_password.php

// Connect to the database
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');

// Check if the email address is valid
$email = $_POST['email'];
$query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($db, $query);

if (mysqli_num_rows($result) > 0) {
    // Email exists in the database

    // Generate a temporary password and store it in the session
    $new_password = bin2hex(random_bytes(16));
    $_SESSION['temp_password'] = $new_password;

    // Send an email with a temporary password reset link
    $subject = "Password Reset";
    $body = "<a href='" . $_SERVER['PHP_SELF'] . "?reset=true&email=$email'>Click here to reset your password</a>";
    mail($email, $subject, $body);

    echo "Email sent. Please check your email for the password reset link.";
} else {
    echo "Invalid email address";
}


// reset_password.php

// Connect to the database
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');

// Check if the email address and temporary password are valid
$email = $_GET['email'];
$temp_password = $_SESSION['temp_password'];

if (isset($_GET['reset']) && isset($temp_password)) {
    // Temporary password is valid

    // Get the new password from the form submission
    $new_password = $_POST['password'];

    // Update the user's password in the database
    $query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($db, $query);

    echo "Password reset successfully";
} else {
    echo "Invalid temporary password or email address";
}


<?php

// Configuration variables
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');

// Connect to the database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if (isset($_POST['submit'])) {

    // Sanitize input
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Query to get user's information from database
    $query = "SELECT * FROM users WHERE email = '$email'";

    // Execute query and get result
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Get user's ID, username, and password (hashed)
        $user_data = $result->fetch_assoc();
        $user_id = $user_data['id'];
        $username = $user_data['username'];
        $password_hash = $user_data['password'];

        // Generate a new password
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);

        // Update user's password in the database
        $update_query = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        $conn->query($update_query);

        // Send email with new password
        $to_email = $email;
        $subject = 'Your new password';
        $body = 'Dear ' . $username . ', your new password is: ' . $new_password;

        // Email configuration variables (replace with actual settings)
        $from_email = 'your_email@example.com';
        $smtp_host = 'smtp.example.com';
        $smtp_username = 'your_smtp_username';
        $smtp_password = 'your_smtp_password';

        // Send email using PHPMailer or your preferred email library
        require_once 'PHPMailer/PHPMailerAutoload.php'; // Replace with actual location
        $mail = new PHPMailer(true);

        try {
            // Setup email
            $mail->isSMTP();
            $mail->Host = $smtp_host;
            $mail->SMTPAuth = true;
            $mail->Username = $smtp_username;
            $mail->Password = $smtp_password;
            $mail->From = $from_email;
            $mail->FromName = 'Your Website';
            $mail->AddAddress($to_email);
            $mail->IsHTML(true);

            // Set email body
            $mail->Subject = $subject;
            $mail->Body = $body;

            // Send email
            if (!$mail->Send()) {
                throw new Exception('Error sending email');
            }

        } catch (Exception $e) {
            echo 'Email not sent: ' . $mail->ErrorInfo;
        }

    } else {
        echo 'No user found with that email';
    }
}

// Close database connection
$conn->close();

?>


<a href="#" id="forgot-password-link">Forgot Password</a>


<?php require_once 'db.php'; // Include your database connection script ?>

<h1>Forgot Password</h1>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="email" name="email" id="email" required><br><br>
    <button type="submit" name="forgot_password_submit">Submit</button>
</form>

<?php
if (isset($_POST['forgot_password_submit'])) {
    $email = $_POST['email'];

    // Check if the email exists in your database.
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Generate a new password and update it in the database.
            $new_password = bin2hex(random_bytes(16));
            $update_sql = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
            mysqli_query($conn, $update_sql);

            // Send the user their new password via email (not shown here).
        }
    } else {
        echo "Email not found.";
    }

    echo "<p>Password has been sent to your registered email address.</p>";
}
?>


<?php require_once 'db.php'; // Include your database connection script ?>

<h1>Forgot Password</h1>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="email" name="email" id="email" required><br><br>
    <button type="submit" name="forgot_password_submit">Submit</button>
</form>

<?php
if (isset($_POST['forgot_password_submit'])) {
    $email = $_POST['email'];

    // Check if the email exists in your database.
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Generate a random token
            $token = bin2hex(random_bytes(32));
            $update_sql = "UPDATE users SET token = '$token' WHERE email = '$email'";
            mysqli_query($conn, $update_sql);

            // Send the user their new password via email (not shown here).
        }
    } else {
        echo "Email not found.";
    }

    echo "<p>Password reset link has been sent to your registered email address.</p>";
}

// On subsequent requests with a token
if (!empty($_GET['token'])) {
    $query = "SELECT * FROM users WHERE token = '".$_GET['token']."'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Update the user's password after they enter their new password
            echo "Enter your new password:";
            $new_password = $_POST['new_password'];
            $update_sql = "UPDATE users SET password = '$new_password', token = '' WHERE id = '".$row['id']."'";
            mysqli_query($conn, $update_sql);
        }
    } else {
        echo "Invalid token.";
    }

}
?>


Subject: Reset Your Password

Dear [User],

We have been requested to reset your password. To do so, please click on the following link:

<a href="http://yourwebsite.com/reset_password.php?token=<?php echo $row['token']; ?>"><?php echo $row['token']; ?></a>

Best regards,
Your Website


<?php
function forgot_password($email) {
  // Check if email exists in database
  $conn = mysqli_connect("localhost", "username", "password", "database");
  if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
  }

  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    // Email exists, generate new password and send it to user
    $new_password = substr(md5(uniqid()), 0, 8); // Generate new password
    $update_query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $update_query);

    // Send email with new password
    $to = $email;
    $subject = "Reset Password";
    $message = "Your new password is: $new_password";
    mail($to, $subject, $message);
    echo "New password has been sent to your email.";
  } else {
    echo "Email not found in database.";
  }

  mysqli_close($conn);
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $email = $_POST['email'];
  forgot_password($email);
}
?>


<?php
// Database connection settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to the database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}
?>


<?php
require_once 'database.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $email = trim(filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL));

    // Query to get user's details from database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);

    if ($result->num_rows > 0) {
        // Get the user's ID and password reset token
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        $resetToken = bin2hex(random_bytes(32));

        // Update the user's details in database with new password reset token
        $updateQuery = "UPDATE users SET password_reset_token = '$resetToken' WHERE id = '$userId'";
        $mysqli->query($updateQuery);

        // Send a reset password email to the user
        sendResetPasswordEmail($email, $resetToken);
    } else {
        echo 'Email not found.';
    }
}

// Function to send a reset password email to the user
function sendResetPasswordEmail($email, $resetToken) {
    // Email settings
    define('EMAIL_FROM', 'your_email@example.com');
    define('EMAIL_TO', $email);
    define('EMAIL_SUBJECT', 'Reset Password');

    // Email body
    $body = '
        <h1>Reset Your Password</h1>
        <p>Please click on the link below to reset your password:</p>
        <a href="' . $GLOBALS['base_url'] . '?resetToken=' . $resetToken . '">Reset Password</a>

        ';

    // Send email using PHP mail function
    mail(EMAIL_TO, EMAIL_SUBJECT, $body, "From: " . EMAIL_FROM);
}
?>


<?php
require_once 'database.php';

// Check if the reset token is valid
if (isset($_GET['resetToken'])) {
    // Get the user's details from database using the reset token
    $query = "SELECT * FROM users WHERE password_reset_token = '" . $_GET['resetToken'] . "'";
    $result = $mysqli->query($query);

    if ($result->num_rows > 0) {
        // Get the user's ID and password reset token
        $row = $result->fetch_assoc();
        $userId = $row['id'];

        // Create a new password for the user using a secure method (e.g. hash())
        $newPassword = generateRandomPassword(12);
        $hashNewPassword = hash('sha256', $newPassword);

        // Update the user's details in database with new password
        $updateQuery = "UPDATE users SET password = '$hashNewPassword' WHERE id = '$userId'";
        $mysqli->query($updateQuery);

        // Send a confirmation email to the user
        sendConfirmationEmail($email, $newPassword);
    } else {
        echo 'Invalid reset token.';
    }
}

// Function to generate a random password using PHP's random_bytes function
function generateRandomPassword($length) {
    return bin2hex(random_bytes($length));
}

// Function to send a confirmation email to the user
function sendConfirmationEmail($email, $newPassword) {
    // Email settings
    define('EMAIL_FROM', 'your_email@example.com');
    define('EMAIL_TO', $email);
    define('EMAIL_SUBJECT', 'Your Password Has Been Reset');

    // Email body
    $body = '
        <h1>Your Password Has Been Reset</h1>
        <p>Dear user, your password has been reset to:</p>
        <p>' . $newPassword . '</p>

        ';

    // Send email using PHP mail function
    mail(EMAIL_TO, EMAIL_SUBJECT, $body, "From: " . EMAIL_FROM);
}
?>


// forgot_password.php

require_once 'config.php'; // Assuming you have a config file with database credentials

function sendResetEmail($email)
{
    // Retrieve user data from database
    $user = getUserByEmail($email);

    if ($user) {
        // Generate new password and hash it
        $newPassword = generateRandomPassword();
        $hashedPassword = hashPassword($newPassword);

        // Update user's password in database
        updateUserPassword($user['id'], $hashedPassword);

        // Send email with new password
        sendEmail($email, 'Your new password is: ' . $newPassword);
    } else {
        echo "User not found";
    }
}

function generateRandomPassword()
{
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $password = '';
    for ($i = 0; $i < 10; $i++) {
        $password .= substr($characters, rand(0, strlen($characters) - 1), 1);
    }
    return $password;
}

function hashPassword($password)
{
    // Use a secure password hashing algorithm like bcrypt
    $hashedPassword = crypt($password, '$2y$10$');
    return $hashedPassword;
}

function updateUserPassword($id, $newPassword)
{
    // Update user's password in database
    $query = "UPDATE users SET password_hash = :new_password WHERE id = :id";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':id', $id);
    $stmt->bindParam(':new_password', $newPassword);
    $stmt->execute();
}

function sendEmail($email, $message)
{
    // Send email using a library like PHPMailer or SwiftMailer
    // For simplicity, we'll use the built-in mail function
    $subject = "Your new password";
    $body = $message;
    $headers = "From: Your Email <your_email@example.com>\r
".
               "MIME-Version: 1.0\r
".
               "Content-Type: text/plain; charset=UTF-8\r
";

    mail($email, $subject, $body, $headers);
}

function getUserByEmail($email)
{
    // Retrieve user data from database
    $query = "SELECT * FROM users WHERE email = :email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    return $stmt->fetch(PDO::FETCH_ASSOC);
}

// Handle forgotten password request
if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];
    sendResetEmail($email);
}


<?php
// Configuration
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Validate user input
  $email = trim($_POST['email']);
  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Invalid email address");
  }

  // Query database for user with matching email
  $query = "SELECT id, username FROM users WHERE email = :email";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $result = $stmt->fetch();

  if (!$result) {
    die("Email address not found");
  }

  // Generate new password and send reset link to user
  $new_password = generate_password(12); // generate a random password
  $reset_link = "http://example.com/reset-password.php?id=" . $result['id'] . "&password=" . md5($new_password);

  // Send email with reset link
  $subject = "Reset Your Password";
  $body = "Click the following link to reset your password: " . $reset_link;
  mail($email, $subject, $body);

  // Store new password in database (temporary)
  $query = "UPDATE users SET password = :password WHERE id = :id";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':password', md5($new_password));
  $stmt->bindParam(':id', $result['id']);
  $stmt->execute();
}

// Display form for user to input their email
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>Email:</label>
  <input type="email" name="email" required />
  <button type="submit">Reset Password</button>
</form>

<?php
// If form has been submitted, display success message
if (isset($_POST['email'])) {
  echo "Check your email for a password reset link.";
}
?>


<?php
// Database connection settings
$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');

// Generate a random password function
function generate_password($length) {
  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < $length; $i++) {
    $password .= substr($chars, rand(0, strlen($chars)-1), 1);
  }
  return $password;
}
?>


<?php
// Configuration
require_once 'config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Validate user input
  $id = $_GET['id'];
  $password = md5($_POST['password']);
  $query = "UPDATE users SET password = :password WHERE id = :id";
  $stmt = $db->prepare($query);
  $stmt->bindParam(':password', $password);
  $stmt->bindParam(':id', $id);
  $stmt->execute();
}

// Display form for user to input new password
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>New Password:</label>
  <input type="password" name="password" required />
  <button type="submit">Update Password</button>
</form>

<?php
// If form has been submitted, display success message
if (isset($_POST['password'])) {
  echo "Password updated successfully.";
}
?>


<?php
// Configuration Settings
require_once 'config.php';

function sendResetEmail($email, $token) {
    // Email headers and message setup
    $to = $email;
    $subject = "Reset Password";
    $message = "
    Click on the link below to reset your password:
    <a href='http://yourdomain.com/reset-password.php?resetToken=$token'>$token</a>
    ";
    
    // Mail configuration
    $headers = 'From: no-reply@yourdomain.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8' . "\r
" .
        'X-Mailer: PHP/' . phpversion() . "\r
";

    mail($to, $subject, $message, $headers);
}

function resetPassword($token) {
    if (!empty($_POST['new_password']) && !empty($_POST['confirm_password'])) {
        if ($_POST['new_password'] == $_POST['confirm_password']) {
            // Reset logic here
            try {
                $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
                $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

                $sql = "UPDATE users SET password=:password WHERE reset_token=:token";
                $stmt = $conn->prepare($sql);
                $stmt->bindParam(':password', hash('sha256', $_POST['new_password']));
                $stmt->bindParam(':token', $token);
                if ($stmt->execute()) {
                    echo 'Password changed successfully.';
                } else {
                    throw new Exception("Error changing password");
                }
            } catch (PDOException $e) {
                // Handle database error
            }

        } else {
            echo "Passwords don't match!";
        }
    }
}

// Reset Token generation and Email sending
if (isset($_POST['submit'])) {
    if (!empty($_POST['email'])) {
        try {
            $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            $sql = "SELECT * FROM users WHERE email=:email";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(':email', $_POST['email']);
            if ($stmt->execute()) {
                $result = $stmt->fetchAll();
                // If user exists, generate a random reset token
                if (count($result) > 0) {
                    $token = uniqid('', true); // Generate unique ID
                    $sql = "UPDATE users SET reset_token=:token WHERE email=:email";
                    $stmt = $conn->prepare($sql);
                    $stmt->bindParam(':token', $token);
                    $stmt->bindParam(':email', $_POST['email']);
                    if ($stmt->execute()) {
                        sendResetEmail($_POST['email'], $token); // Send the reset token via email
                        echo 'A password reset link has been sent to your email.';
                    } else {
                        throw new Exception("Error sending reset email");
                    }
                } else {
                    echo "User not found!";
                }
            } else {
                throw new Exception("Error retrieving user data");
            }

        } catch (PDOException $e) {
            // Handle database error
        }
    } else {
        echo "Please enter your email.";
    }
}

// Password reset page
if (isset($_GET['resetToken'])) {
    $token = $_GET['resetToken'];
    if (!empty($token)) {
        try {
            $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            $sql = "SELECT * FROM users WHERE reset_token=:token";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(':token', $token);
            if ($stmt->execute()) {
                $result = $stmt->fetchAll();
                // If a valid token is found, allow user to set new password
                if (count($result) > 0) {
                    resetPassword($token); // Handle form submission here
                } else {
                    echo "Invalid or expired token!";
                }
            } else {
                throw new Exception("Error retrieving user data");
            }

        } catch (PDOException $e) {
            // Handle database error
        }
    } else {
        header('Location: index.php');
        exit;
    }
}
?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_db_username';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define variables
$remembered_email = $_POST['email'];

// Check if email is in database
$query = "SELECT * FROM users WHERE email = '$remembered_email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user data
    $row = $result->fetch_assoc();
    $user_id = $row['id'];
    $username = $row['username'];

    // Generate password reset token
    $token = bin2hex(random_bytes(32));
    $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
    $conn->query($query);

    // Send email with password reset link
    $subject = 'Reset your password';
    $body = '
        <p>Dear '.$username.',</p>
        <p>To reset your password, please click on the following link:</p>
        <p><a href="http://your_website.com/reset_password.php?token='.$token.'">Reset Password</a></p>
        <p>Best regards,</p>
    ';
    $headers = 'From: no-reply@your_website.com' . "\r
" .
        'Content-Type: text/html; charset=UTF-8' . "\r
";
    mail($remembered_email, $subject, $body, $headers);

    echo 'An email has been sent to you with instructions on how to reset your password.';
} else {
    echo 'Email not found in database.';
}

// Close connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_db_username';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL parameter
$token = $_GET['token'];

// Check if token is valid
$query = "SELECT * FROM users WHERE password_reset_token = '$token'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Get user data
    $row = $result->fetch_assoc();
    $user_id = $row['id'];
    $username = $row['username'];

    // Display form to enter new password
    echo '
        <h1>Reset Password</h1>
        <form action="reset_password_process.php" method="post">
            <input type="password" name="new_password" placeholder="New Password">
            <input type="password" name="confirm_new_password" placeholder="Confirm New Password">
            <input type="hidden" name="token" value="'.$token.'">
            <button type="submit">Reset Password</button>
        </form>
    ';
} else {
    echo 'Invalid token.';
}

// Close connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_db_username';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token and new password from form data
$token = $_POST['token'];
$new_password = $_POST['new_password'];

// Check if new password matches confirm new password
if ($new_password != $_POST['confirm_new_password']) {
    echo 'Passwords do not match.';
} else {
    // Update user's password
    $query = "UPDATE users SET password = '$new_password', password_reset_token = NULL WHERE password_reset_token = '$token'";
    $conn->query($query);

    echo 'Password has been updated successfully!';
}

// Close connection
$conn->close();

?>


<?php
// Configuration constants
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_errno) {
    echo "Connection failed: " . $mysqli->connect_error;
}

$email = $_POST['email'];

// Validate email and find user
$query = "SELECT id FROM users WHERE email LIKE '%$email%'";
$result = $mysqli->query($query);
$user_id;

if ($result->num_rows > 0) {
    // If the result contains database query rows, fetch them
    while ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Update user's reset token in database
    $update_query = "UPDATE users SET reset_token = '$token' WHERE id = $user_id";
    if ($mysqli->query($update_query)) {
        // Send password reset email with a link to your reset.php page
        // This example uses PHPMailer but can be adapted for your mail sending setup
        require_once 'PHPMailer/src/Exception.php';
        require_once 'PHPMailer/src/PHPMailer.php';
        require_once 'PHPMailer/src/SMTP.php';

        $mail = new PHPMailer\PHPMailer\PHPMailer();
        $mail->IsSMTP();
        $mail->Host = "smtp.example.com"; // Your mail host
        $mail->Port = 587; // Mail port, could be different based on your email service
        $mail->SMTPSecure = 'tls';
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com'; // Use your own email
        $mail->Password = 'your_password';

        $mail->From = "your_email@example.com";
        $mail->FromName = "Your Website Name";
        $mail->addAddress($email);
        
        $mail->Subject = "Reset Your Password";
        $mail->Body = "Click the link below to reset your password. <a href='http://example.com/reset.php?token=$token'>Reset Link</a>";
        
        if (!$mail->send()) {
            echo 'Error sending email: ' . $mail->ErrorInfo;
        } else {
            echo "An email has been sent with a password reset link.";
        }
    } else {
        echo "Error updating user's reset token";
    }
} else {
    echo "Email not found in database. Please try again.";
}

$mysqli->close();
?>


<?php
// Configuration constants and session start
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

session_start();

$token = $_GET['token'];

if ($token) {
    $mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
    
    if ($mysqli->connect_errno) {
        echo "Connection failed: " . $mysqli->connect_error;
    }

    $query = "SELECT id FROM users WHERE reset_token LIKE '%$token%'";
    $result = $mysqli->query($query);

    if ($result->num_rows > 0) {
        // Fetch user's ID and delete the temporary token
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
        }
        
        $update_query = "UPDATE users SET reset_token = NULL WHERE id = $user_id";
        if ($mysqli->query($update_query)) {
            // Reset password form here
            ?>
                <form action="reset.php" method="post">
                    <input type="password" name="new_password" placeholder="Enter new password">
                    <button type="submit">Reset Password</button>
                </form>
                
                <?php
                if ($_SERVER['REQUEST_METHOD'] == 'POST') {
                    $new_password = $_POST['new_password'];
                    
                    // Store hashed version of the new password in database and delete user's reset token
                    $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);
                    $update_query = "UPDATE users SET hashed_password = '$hashed_new_password' WHERE id = $user_id";
                    if ($mysqli->query($update_query)) {
                        echo 'Password successfully changed!';
                    } else {
                        echo 'Error changing password.';
                    }
                }

            } else {
                echo 'Error updating user\'s reset token';
            }
        } else {
            echo "No user found for the given token. Please try again.";
        }
    }

$mysqli->close();
?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email, $username, $reset_token) {
  // Send email using your preferred mail function (e.g. PHPMailer)
  // For this example, we'll use a simple text email
  $subject = 'Reset Your Password';
  $body = "Hello $username,

Please click the link below to reset your password:

<a href='http://your_website.com/reset_password.php?token=$reset_token'>Reset Password</a>

Best regards,
Your Website";
  mail($email, $subject, $body);
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
  // Validate email input
  if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit;
  }

  // Retrieve user data from database
  $query = "SELECT * FROM users WHERE email = '" . $_POST['email'] . "'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      // Generate reset token
      $reset_token = bin2hex(random_bytes(32));

      // Update user data with new reset token
      $query = "UPDATE users SET password_reset_token = '$reset_token' WHERE id = '" . $row['id'] . "'";
      $conn->query($query);

      // Send password reset email
      send_password_reset_email($_POST['email'], $row['username'], $reset_token);
    }
  } else {
    echo 'Email not found in database';
  }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to update user password
function update_user_password($id, $new_password) {
  // Hash new password using a strong hashing algorithm (e.g. bcrypt)
  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

  // Update user data with new hashed password
  $query = "UPDATE users SET password_hash = '$hashed_password' WHERE id = '" . $id . "'";
  $conn->query($query);
}

// Handle reset password form submission
if (isset($_GET['token'])) {
  // Retrieve user data from database using reset token
  $query = "SELECT * FROM users WHERE password_reset_token = '".$_GET['token']."'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      // Update user password
      update_user_password($row['id'], $_POST['new_password']);

      // Reset reset token
      $query = "UPDATE users SET password_reset_token = NULL WHERE id = '" . $row['id'] . "'";
      $conn->query($query);
    }
  } else {
    echo 'Invalid reset token';
  }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
define('SECRET_KEY', 'your_secret_key_here');
define('EMAIL_SUBJECT', 'Forgot Password');

// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_database_username';
$password = 'your_database_password';

// Create a connection to the database
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

// Function to send email with reset token
function sendEmail($email, $token) {
  // Email settings
  $from = 'your_email@example.com';
  $to = $email;
  $subject = EMAIL_SUBJECT;
  $body = "Click this link to reset your password: <a href='http://example.com/reset_password?token=$token'>$token</a>";
  $headers = "From: $from\r
Content-Type: text/html; charset=utf-8\r
";

  // Send email
  mail($to, $subject, $body, $headers);
}

// Handle forgot password request
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get form data
  $email = $_POST['email'];

  // Validate email
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }

  // Retrieve user's details from database
  $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user) {
    // Generate reset token
    $token = bin2hex(random_bytes(32));

    // Store reset token in database (optional)
    $conn->exec("UPDATE users SET reset_token = '$token' WHERE email = :email");
    $conn->exec("UPDATE users SET reset_expires = NOW() + INTERVAL 1 HOUR");

    // Send email with reset token
    sendEmail($email, $token);
    echo "A password reset link has been sent to your email.";
  } else {
    echo "User not found.";
  }
}

?>


<?php

require_once 'config.inc.php'; // database connection settings

// Email settings
$from_email = 'your-email@example.com';
$subject = 'Reset Password';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get form data
  $username = $_POST['username'];
  
  // Check if username exists in database
  $query = "SELECT * FROM users WHERE username='$username'";
  $result = mysqli_query($link, $query);
  
  if (mysqli_num_rows($result) > 0) {
    // Get user ID from query result
    $row = mysqli_fetch_assoc($result);
    $user_id = $row['id'];
    
    // Generate random password and store it in a session variable
    $new_password = substr(md5(uniqid()), 0, 8); // generate 8-character password
    $_SESSION['new_password'] = $new_password;
    
    // Send email with reset link
    $to_email = $row['email'];
    $reset_link = "http://your-website.com/reset-password.php?user_id=$user_id&password=$new_password";
    $body = "Please click on the following link to reset your password: $reset_link";
    
    // Send email using PHPMailer or similar library
    mail($to_email, $subject, $body, 'From: ' . $from_email);
    
    echo "A new password has been sent to your email. Please check your inbox.";
  } else {
    echo "Username not found in database.";
  }
}

?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label for="username">Enter your username:</label>
  <input type="text" id="username" name="username"><br><br>
  <input type="submit" value="Send password reset link">
</form>

<?php
// You can also include a "back to login page" link or button here
?>


<?php

require_once 'config.inc.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
  $user_id = $_GET['user_id'];
  $new_password = $_GET['password'];
  
  // Update user password in database
  $query = "UPDATE users SET password_hash=SHA2('$new_password', 256) WHERE id=$user_id";
  mysqli_query($link, $query);
  
  echo "Password updated successfully. You can now log in with your new credentials.";
}

?>


<?php

// Configuration variables
define('SECRET_KEY', 'your_secret_key_here');
define('RECOVERY_LINK_EXPIRATION_TIME', 60 * 15); // 15 minutes

// Function to send email with recovery link
function send_recovery_link($email, $token) {
    $subject = "Password Recovery Link";
    $body = "<p>Please click on the following link to reset your password:</p>
              <a href='" . BASE_URL . "/recover?token=" . $token . "'>" . BASE_URL . "/recover?token=" . $token . "</a>";
    send_email($email, $subject, $body);
}

// Function to hash and store user's password
function store_password($password) {
    return hash('sha256', SECRET_KEY . str_replace(array('.', '/'), '', $password));
}

// Function to verify token and update password
function recover_password($token) {
    // Retrieve token from database
    $sql = "SELECT email, password_hash FROM users WHERE recovery_token = :token";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([':token' => $token]);
    $user_data = $stmt->fetch();

    if (!$user_data) {
        throw new Exception("Invalid token");
    }

    // Update password
    $new_password = generate_new_password();
    $hashed_password = store_password($new_password);
    $sql = "UPDATE users SET password_hash = :password_hash, recovery_token = NULL WHERE email = :email";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([':password_hash' => $hashed_password, ':email' => $user_data['email']]);

    // Return new password
    return $new_password;
}

// Generate a random token
function generate_token() {
    return bin2hex(random_bytes(32));
}

// Send email with recovery link
if (isset($_POST['forgot-password'])) {
    $email = $_POST['email'];
    $user_data = get_user_by_email($email);

    if (!$user_data) {
        echo "Email address not found";
        exit;
    }

    // Generate token and store it in database
    $token = generate_token();
    $sql = "UPDATE users SET recovery_token = :token WHERE email = :email";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([':token' => $token, ':email' => $email]);

    // Send email with recovery link
    send_recovery_link($email, $token);

    echo "Recovery link sent to your email address. Please check your inbox.";
}

?>


<?php

// Verify token and update password
if (isset($_GET['token'])) {
    try {
        $token = $_GET['token'];
        recover_password($token);
        echo "Password updated successfully!";
    } catch (Exception $e) {
        echo "Invalid token";
    }
}

?>


<?php

// Function to send email using PHPMailer library
function send_email($email, $subject, $body) {
    // Configuration variables
    define('MAIL_HOST', 'your_mail_host_here');
    define('MAIL_USERNAME', 'your_mail_username_here');
    define('MAIL_PASSWORD', 'your_mail_password_here');

    require_once 'PHPMailer.php';

    $mail = new PHPMailer(true);

    try {
        $mail->SMTPDebug = 0;
        $mail->isSMTP();
        $mail->Host = MAIL_HOST;
        $mail->SMTPAuth = true;
        $mail->Username = MAIL_USERNAME;
        $mail->Password = MAIL_PASSWORD;
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        $mail->setFrom(MAIL_USERNAME, 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = $subject;
        $mail->Body = $body;
        $mail->AltBody = '';

        if (!$mail->send()) {
            throw new Exception("Error sending email: " . $mail->ErrorInfo);
        }
    } catch (Exception $e) {
        echo "Error sending email: " . $e->getMessage();
    }
}

?>


<?php

// Set up database connection
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define function to check if user exists
function check_user_exists($email) {
    global $conn;
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($query);
    return $result->num_rows > 0;
}

// Define function to send forgot password email
function send_forgot_password_email($user_id, $email) {
    global $conn;

    // Generate random token (e.g. for email verification)
    $token = bin2hex(random_bytes(32));

    // Update user's email in database with new token
    $query = "UPDATE users SET forgot_password_token = '$token' WHERE id = '$user_id'";
    $conn->query($query);

    // Send email to user with reset link
    $to = $email;
    $subject = 'Reset your password';
    $body = "Click this link to reset your password: <a href='http://your-website.com/reset-password.php?token=$token'>Reset Password</a>";

    $headers = 'From: your-email@example.com' . "\r
";
    mail($to, $subject, $body, $headers);

    return true;
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];

    // Check if user exists
    if (check_user_exists($email)) {
        $user_id = $conn->query("SELECT id FROM users WHERE email = '$email'")->fetch_assoc()['id'];
        send_forgot_password_email($user_id, $email);
    } else {
        echo "Email not found";
    }
}

// Display forgot password form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>Email:</label>
    <input type="text" name="email" value="<?php echo isset($_POST['email']) ? $_POST['email'] : ''; ?>">
    <button type="submit" name="forgot_password">Submit</button>
</form>

<?php
// Close database connection
$conn->close();
?>


<?php

// Set up database connection
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define function to check if token is valid
function check_token_valid($token) {
    global $conn;

    // Get user ID from database using token
    $query = "SELECT id FROM users WHERE forgot_password_token = '$token'";
    $result = $conn->query($query);

    return $result->num_rows > 0;
}

// Define function to update password
function update_password($user_id, $new_password) {
    global $conn;

    // Hash new password and update user's password in database
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password_hash = '$hashed_password' WHERE id = '$user_id'";
    $conn->query($query);

    return true;
}

// Handle reset password form submission
if (isset($_POST['reset_password'])) {
    $token = $_GET['token'];

    // Check if token is valid
    if (check_token_valid($token)) {
        $user_id = $conn->query("SELECT id FROM users WHERE forgot_password_token = '$token'")->fetch_assoc()['id'];
        update_password($user_id, $_POST['new_password']);
    } else {
        echo "Invalid token";
    }
}

// Display reset password form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label>New Password:</label>
    <input type="password" name="new_password" value="<?php echo isset($_POST['new_password']) ? $_POST['new_password'] : ''; ?>">
    <button type="submit" name="reset_password">Submit</button>
</form>

<?php
// Close database connection
$conn->close();
?>


<?php
require_once 'config.php'; // database connection settings

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = trim($_POST['email']);
    
    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }
    
    // Query database to retrieve user's ID and salt
    $stmt = $mysqli->prepare("SELECT id, salt FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        echo 'Email address not found';
        exit;
    }
    
    // Generate new password
    $new_password = substr(md5(uniqid(rand(), true)), 0, 8);
    
    // Update user's password
    $stmt = $mysqli->prepare("UPDATE users SET password = ?, salt = ? WHERE id = ?");
    $stmt->bind_param('sss', md5($new_password), md5(substr($new_password, 0, 8)), $result->fetch_assoc()['id']);
    $stmt->execute();
    
    // Send email with reset link
    $subject = 'Password Reset Link';
    $body = '<a href="' . $_SERVER['PHP_SELF'] . '?email=' . $email . '&token=' . md5($new_password) . '">Click here to reset your password</a>';
    mail($email, $subject, $body);
    
    echo 'Email with reset link sent';
} else {
    // Form has not been submitted
}
?>


<?php
$mysqli = new mysqli('localhost', 'username', 'password', 'database');
if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Database connection settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'username');
define('DB_PASSWORD', 'password');
define('DB_NAME', 'database');

?>


<?php

// Configuration settings
$secret_key = 'your_secret_key_here'; // replace with your secret key
$reset_link_expires_in_minutes = 30; // link expires after 30 minutes

// Database connection settings
$db_host = 'localhost';
$db_username = 'your_db_username';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_reset_email($email, $reset_link)
{
    // Set email headers
    $headers = 'From: Your Email <your-email@example.com>' . "\r
" .
        'Content-Type: text/html; charset=UTF-8' . "\r
";

    // Send email using PHP mail function
    if (mail($email, 'Reset Your Password', $reset_link, $headers)) {
        echo "Email sent successfully!";
    } else {
        echo "Failed to send email.";
    }
}

// Function to check if user exists and generate reset link
function check_user_exists_and_generate_reset_link($email)
{
    global $conn;

    // Query database for user existence
    $sql = "SELECT * FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get user ID from result
        $user_id = $result->fetch_assoc()['id'];

        // Generate reset link using secret key and user ID
        $reset_link = 'https://example.com/reset-password/' . urlencode(base64_encode($secret_key . ':' . $user_id));

        return $reset_link;
    } else {
        echo "User does not exist.";
        return null;
    }
}

// Handle forgot password request
if (isset($_POST['email'])) {
    // Get email from form submission
    $email = $_POST['email'];

    // Check if user exists and generate reset link
    $reset_link = check_user_exists_and_generate_reset_link($email);

    if ($reset_link !== null) {
        // Send password reset email with generated reset link
        send_reset_email($email, $reset_link);
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

function forgotPassword($email)
{
  // Check if email exists in the database
  $query = "SELECT * FROM users WHERE email='$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    // Email found, send password reset link
    $token = bin2hex(random_bytes(32));
    $query = "UPDATE users SET token='$token' WHERE email='$email'";
    mysqli_query($conn, $query);

    // Send email with password reset link
    $subject = 'Reset your password';
    $body = '<a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Click here to reset your password</a>';
    mail($email, $subject, $body);

    echo "A password reset link has been sent to your email.";
  } else {
    echo "Email not found in the database.";
  }
}

if (isset($_POST['forgot_password'])) {
  $email = $_POST['email'];
  forgotPassword($email);
} else {
  // Display form
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>Email:</label>
  <input type="text" name="email"><br><br>
  <input type="submit" name="forgot_password" value="Send Password Reset Link">
</form>

<?php } ?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
  // Get user ID from token
  $query = "SELECT * FROM users WHERE token='$_GET[token]'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    // Update password
    $new_password = $_POST['new_password'];
    $query = "UPDATE users SET password='$new_password' WHERE id=(SELECT id FROM users WHERE token='$_GET[token]')";
    mysqli_query($conn, $query);

    echo "Your password has been updated.";
  } else {
    echo "Invalid token.";
  }
}

?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  <label>New Password:</label>
  <input type="password" name="new_password"><br><br>
  <input type="submit" value="Update Password">
</form>


<?php

// Configuration settings
$secret_key = 'your_secret_key_here'; // Change this to a secure secret key

function sendPasswordResetEmail($email) {
  $subject = 'Reset your password';
  $body = '<p>Please click the following link to reset your password:</p><a href="' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . base64_encode(encrypt_password_reset_token($email)) . '">Reset Password</a>';
  sendEmail($email, $subject, $body);
}

function encrypt_password_reset_token($email) {
  return hash_hmac('sha256', $email, $secret_key);
}

function validate_password_reset_token($token) {
  try {
    $decodedToken = base64_decode($token);
    if (hash_equals($decodedToken, encrypt_password_reset_token($_POST['email']))) {
      // Token is valid
      return true;
    } else {
      throw new Exception('Invalid token');
    }
  } catch (Exception $e) {
    // If there's an error decoding the token or comparing it to the hash, we'll assume it's invalid.
    return false;
  }
}

function resetPassword($token) {
  // Retrieve user data from database using the token
  $user = getUserDataFromDatabaseByToken($token);
  
  if ($user === null) {
    throw new Exception('Invalid token');
  }
  
  // Prompt user to enter a new password and confirm it
  echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
  echo '<input type="password" name="new_password">';
  echo '<input type="password" name="confirm_new_password">';
  echo '<button type="submit">Reset Password</button>';
  echo '</form>';
  
  if ($_POST['new_password'] === $_POST['confirm_new_password']) {
    // Update password in database
    updatePasswordInDatabase($user, $_POST['new_password']);
    
    echo 'Your password has been updated successfully!';
  } else {
    throw new Exception('Passwords do not match');
  }
}

// Helper function to send an email using PHPMailer or similar library (not included here)
function sendEmail($to, $subject, $body) {
  // Implementation omitted for brevity
}

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

function forgot_password($email)
{
  global $conn;

  // Check if email exists in the database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Generate a reset token and store it in the database
    $token = bin2hex(random_bytes(32));
    $query = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
    $conn->query($query);

    // Send an email to the user with the reset link
    send_email($email, $token);
  } else {
    echo 'Email not found';
  }
}

function send_email($email, $token)
{
  // Use a library like SwiftMailer or PHPMailer to send an email
  // For simplicity, we'll just use PHP's mail function
  $subject = "Reset Password";
  $body = "Click this link to reset your password: http://example.com/reset_password?token=$token";

  if (mail($email, $subject, $body)) {
    echo 'Email sent';
  } else {
    echo 'Failed to send email';
  }
}

// Handle form submission
if (isset($_POST['submit'])) {
  forgot_password($_POST['email']);
}

?>


<?php

// Configuration variables
define('DB_HOST', 'your_host');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to hash password
function hashPassword($password) {
    return md5(uniqid(mt_rand(), true));
}

// Function to reset password
function resetPassword($email, $newPassword) {
    global $conn;
    
    // Get user ID
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    $userId = $result->fetch_assoc()['id'];
    
    if ($userId) {
        // Hash new password
        $hashedPassword = hashPassword($newPassword);
        
        // Update user password
        $stmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
        $stmt->bind_param("ss", $hashedPassword, $userId);
        $stmt->execute();
    }
    
    return true;
}

// Function to send reset email
function sendResetEmail($email) {
    global $conn;
    
    // Get user ID
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    $userId = $result->fetch_assoc()['id'];
    
    if ($userId) {
        // Generate reset token
        $resetToken = uniqid(mt_rand(), true);
        
        // Store reset token in database
        $stmt = $conn->prepare("UPDATE users SET reset_token = ? WHERE id = ?");
        $stmt->bind_param("ss", $resetToken, $userId);
        $stmt->execute();
        
        // Send email with reset link
        $to = $email;
        $subject = "Reset Password";
        $body = "Click this link to reset your password: <a href='http://your_website.com/reset_password.php?token=" . $resetToken . "'>Reset Password</a>";
        
        mail($to, $subject, $body);
    }
    
    return true;
}

// Handle forgot password request
if (isset($_POST['email'])) {
    sendResetEmail($_POST['email']);
}

?>


<?php

// Configuration
define('SITE_EMAIL', 'your-email@example.com');
define('PASSWORD_RESET_LINK', 'https://example.com/reset-password');

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Extract user email from form data
  $email = $_POST['email'];

  // Query database for user with matching email
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $sql);
  if ($row = mysqli_fetch_assoc($result)) {
    // Generate temporary password
    $temp_password = generateRandomString(10);

    // Update user's password in database
    $update_sql = "UPDATE users SET password_hash = '$temp_password' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);

    // Send email with reset link
    sendResetEmail($row['id'], $temp_password);
  } else {
    echo 'User not found';
  }
}

// Function to generate random string
function generateRandomString($length) {
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $randomString = '';
  for ($i = 0; $i < $length; $i++) {
    $randomString .= substr($characters, rand(0, strlen($characters) - 1), 1);
  }
  return $randomString;
}

// Function to send reset email
function sendResetEmail($userId, $tempPassword) {
  // Generate reset link with user ID and temporary password
  $resetLink = PASSWORD_RESET_LINK . '/' . $userId . '/' . md5($tempPassword);

  // Send email using PHPMailer or your preferred mail library
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->Username = SITE_EMAIL;
  $mail->Password = 'your-password';
  $mail->setFrom(SITE_EMAIL, 'Your Name');
  $mail->addAddress($_POST['email']);
  $mail->Subject = 'Reset Your Password';
  $mail->Body = 'Click this link to reset your password: ' . $resetLink;
  if (!$mail->send()) {
    echo 'Error sending email: ' . $mail->ErrorInfo;
  }
}

?>


<?php

// Extract user ID and temporary password from URL parameters
$userId = $_GET['id'];
$tempPassword = md5($_GET['password']);

// Query database for user with matching ID
$sql = "SELECT * FROM users WHERE id = '$userId'";
$result = mysqli_query($conn, $sql);
if ($row = mysqli_fetch_assoc($result)) {
  // Update user's password in database
  $update_sql = "UPDATE users SET password_hash = '$tempPassword' WHERE id = '$userId'";
  mysqli_query($conn, $update_sql);

  // Send success message and redirect to login page
  echo 'Your password has been reset. Please log in with your new password.';
} else {
  echo 'Invalid reset link';
}

?>


function reset_password($email) {
  // Connect to database (assuming MySQL)
  $conn = new mysqli("localhost", "username", "password", "database");
  
  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }
  
  // Query to get user ID from email
  $query = "SELECT id FROM users WHERE email = '$email'";
  $result = $conn->query($query);
  
  // Check if user exists
  if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
      $user_id = $row['id'];
      
      // Generate random token (e.g. for password reset link)
      $token = bin2hex(random_bytes(32));
      
      // Insert token into database
      $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$user_id', '$token')";
      $conn->query($query);
      
      // Send email with password reset link to user
      send_password_reset_email($email, $token);
    }
  } else {
    echo "No user found with that email address.";
  }
  
  // Close connection
  $conn->close();
}

function send_password_reset_email($email, $token) {
  // Set up email headers and body
  $subject = 'Reset Your Password';
  $message = "Click here to reset your password: <a href='http://yourwebsite.com/reset-password/$token'>Reset Password</a>";
  
  // Send email using PHPMailer or similar library
  // Example with PHPMailer:
  require_once 'PHPMailer/PHPMailerAutoload.php';
  $mail = new PHPMailer();
  $mail->isSMTP();
  $mail->Host = 'smtp.example.com';
  $mail->Port = 587;
  $mail->Username = 'your_email@example.com';
  $mail->Password = 'your_password';
  $mail->setFrom('your_email@example.com', 'Your Name');
  $mail->addAddress($email);
  $mail->Subject = $subject;
  $mail->Body = $message;
  if (!$mail->send()) {
    echo "Mailer Error: " . $mail->ErrorInfo;
  }
}

// Call the function with email address
reset_password('user@example.com');


<?php

// Define constants for database connection and other settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get email from form submission
  $email = $_POST['email'];

  // Query database to check if user exists
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  // Check if user exists
  if ($result->num_rows > 0) {
    // Get user's ID and other details from result
    while ($row = $result->fetch_assoc()) {
      $userId = $row['id'];
      $username = $row['username'];

      // Generate a random password reset token
      $token = bin2hex(random_bytes(32));

      // Store the token in the database (you should use a more secure method to store passwords)
      $query = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
      $conn->query($query);

      // Send an email with the password reset link
      sendPasswordResetEmail($email, $username, $token);
    }
  } else {
    echo 'No user found with that email address.';
  }

  // Close database connection
  $conn->close();
} else {
  // Display the forgot password form if it's not a post request
  ?>
  <form action="forgot-password.php" method="post">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email"><br><br>
    <input type="submit" value="Send password reset link">
  </form>
  <?php
}

// Function to send an email with the password reset link
function sendPasswordResetEmail($email, $username, $token) {
  // Define email settings (e.g. SMTP server, username, password)
  define('EMAIL_HOST', 'smtp.example.com');
  define('EMAIL_USERNAME', 'your_email_username');
  define('EMAIL_PASSWORD', 'your_email_password');

  // Set up the email headers
  $headers = "From: no-reply@example.com\r
";
  $headers .= "Reply-To: no-reply@example.com\r
";

  // Define the email body (you can customize this as needed)
  $emailBody = "
  Dear $username,

  To reset your password, click on the following link:

  http://example.com/reset-password.php?token=$token

  Best regards,
  The Example Team
  ";

  // Send the email using PHPMailer or a similar library (you can use sendmail too)
  mail($email, 'Password Reset Link', $emailBody, $headers);
}


<?php

// Define constants for database connection and other settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get the password reset token from the URL query string
  $token = $_GET['token'];

  // Query database to check if the token is valid
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($query);

  // Check if the token is valid (you should use a more secure method to verify tokens)
  if ($result->num_rows > 0) {
    // Get user's ID and other details from result
    while ($row = $result->fetch_assoc()) {
      $userId = $row['id'];
      $username = $row['username'];

      // Prompt the user for a new password (you should use a more secure method to store passwords)
      echo 'Enter your new password: ';
      $newPassword = $_POST['new_password'];

      // Update the user's password in the database
      $query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
      $conn->query($query);

      // Clear the password reset token from the database (you should use a more secure method to store passwords)
      $query = "UPDATE users SET password_reset_token = NULL WHERE id = '$userId'";
      $conn->query($query);
    }
  } else {
    echo 'Invalid password reset link.';
  }

  // Close database connection
  $conn->close();
} else {
  // Display the password reset form if it's not a post request
  ?>
  <form action="reset-password.php" method="post">
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password"><br><br>
    <input type="submit" value="Reset Password">
  </form>
  <?php
}

?>


// forgot_password.php

// Check if form has been submitted
if (isset($_POST['email'])) {
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database");
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Get user data from email address
    $email = $_POST['email'];
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // If user exists, generate a reset token and send an email
        $token = bin2hex(random_bytes(32));
        $query = "UPDATE users SET reset_token='$token' WHERE email='$email'";
        mysqli_query($conn, $query);
        
        // Send email with reset link
        $subject = 'Reset your password';
        $message = '
        <html>
            <body>
                <p>Click the link below to reset your password:</p>
                <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
            </body>
        </html>';
        $headers = 'From: no-reply@example.com' . "\r
";
        mail($email, $subject, $message, $headers);
        
        echo "Email sent with reset link.";
    } else {
        echo "User not found.";
    }
    
    // Close connection
    mysqli_close($conn);
} else {
    // If form has not been submitted, display the form again
}


// reset_password.php

// Check if form has been submitted
if (isset($_POST['password'])) {
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database");
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Get reset token from URL parameter
    $token = $_GET['token'];
    
    // Get user data using reset token
    $query = "SELECT * FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // If user exists, update password and remove reset token
        $new_password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($new_password == $confirm_password) {
            // Hash new password before updating it in the database
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            $query = "UPDATE users SET password='$hashed_password' WHERE reset_token='$token'";
            mysqli_query($conn, $query);
            
            echo "Password updated successfully.";
        } else {
            echo "Passwords do not match.";
        }
    } else {
        echo "Invalid reset token.";
    }
    
    // Close connection
    mysqli_close($conn);
} else {
    // If form has not been submitted, display the form again
}


<?php

// Configuration
define('SECRET_KEY', 'your_secret_key_here');
define('MAX_RETRIES', 5);

// Function to send forgot password email
function sendForgotPasswordEmail($email, $retries = 0)
{
    // Check if user exists
    $user = getUserByEmail($email);
    if (!$user) {
        return false;
    }

    // Generate reset token
    $resetToken = generateResetToken();

    // Save reset token to database
    saveResetToken($user['id'], $resetToken);

    // Send email with reset link
    $subject = 'Forgot Password';
    $body = '<p>Click the following link to reset your password:</p>
            <a href="' . $_SERVER['REQUEST_SCHEME'] . '://' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $resetToken . '">Reset Password</a>';
    sendEmail($email, $subject, $body);

    return true;
}

// Function to generate reset token
function generateResetToken()
{
    // Use a cryptographically secure pseudo-random number generator (CSPRNG)
    $randomBytes = random_bytes(32);
    $resetToken = bin2hex($randomBytes);
    return $resetToken;
}

// Function to save reset token in database
function saveResetToken($userId, $resetToken)
{
    // Update user record with reset token
    $query = "UPDATE users SET reset_token = '$resetToken' WHERE id = '$userId'";
    mysqli_query($conn, $query);
}

// Function to send email (using a library like PHPMailer or SwiftMailer)
function sendEmail($email, $subject, $body)
{
    // Implement your own email sending logic here
}

// Example usage:
$email = 'user@example.com';
if (sendForgotPasswordEmail($email)) {
    echo "Reset link sent successfully!";
} else {
    echo "Error sending reset link. Please try again.";
}


<!-- forgot_password.php -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_POST['submit'])) { ?>
        <!-- Display success message -->
        <p>Password reset link sent to your email.</p>
    <?php } else { ?>
        <h1>Forgot Password</h1>
        <form action="" method="post">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>
            <button type="submit" name="submit">Send Reset Link</button>
        </form>
    <?php } ?>
</body>
</html>


// db.php (database connection file)
<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgot_password($email) {
    global $conn;
    
    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Generate reset token and send it to user's email
        $token = bin2hex(random_bytes(16));
        $subject = "Password Reset Link";
        $message = "<a href='reset_password.php?token=$token'>Click here to reset your password</a>";
        
        mail($email, $subject, $message);
    } else {
        // Email does not exist
        echo "Email does not exist.";
    }
}
?>


// forgot_password.php (modified)
<?php
require_once 'db.php';

if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    forgot_password($email);
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_POST['submit'])) { ?>
        <!-- Display success message -->
        <p>Password reset link sent to your email.</p>
    <?php } else { ?>
        <h1>Forgot Password</h1>
        <form action="" method="post">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>
            <button type="submit" name="submit">Send Reset Link</button>
        </form>
    <?php } ?>
</body>
</html>


CREATE TABLE users (
  id INT PRIMARY KEY,
  email VARCHAR(255),
  password_hash VARCHAR(255)
);


<?php

// Configuration settings
define('EMAIL_RECIPIENT', 'your_email@example.com'); // Email address to send reset link
define('RESET_LINK_EXPIRY', 3600); // Reset link expiry time in seconds (1 hour)

// Function to generate a random password
function generate_password($length = 12) {
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < $length; $i++) {
    $password .= substr($characters, rand(0, strlen($characters) - 1), 1);
  }
  return $password;
}

// Function to send reset link via email
function send_reset_link($email, $token) {
  $subject = 'Reset your password';
  $body = '
    Hello!

    You have requested a password reset for your account. To reset your password, click on the following link:
    
    <a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>
    
    If you did not request this email, please ignore it.

    Best regards,
  Your Site Name';
  mail(EMAIL_RECIPIENT, $subject, $body);
}

// Forgot password form handling
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  
  // Check if user exists in database
  $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
  $stmt->execute([':email' => $email]);
  $user = $stmt->fetch();
  
  if ($user) {
    // Generate random password and token
    $new_password = generate_password();
    $token = hash('sha256', $new_password);
    
    // Update user's password in database
    $stmt = $pdo->prepare('UPDATE users SET password_hash = :password_hash, token = :token WHERE email = :email');
    $stmt->execute([':password_hash' => password_hash($new_password, PASSWORD_DEFAULT), ':token' => $token, ':email' => $email]);
    
    // Send reset link via email
    send_reset_link($email, $token);
    
    echo 'A reset link has been sent to your email address. Please click on the link to reset your password.';
  } else {
    echo 'Email not found.';
  }
}

?>


<?php

// Check if token is valid
if (isset($_GET['token'])) {
  $stmt = $pdo->prepare('SELECT * FROM users WHERE token = :token');
  $stmt->execute([':token' => $_GET['token']]);
  $user = $stmt->fetch();
  
  if ($user) {
    // Hash and verify new password
    if (isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
      if ($_POST['new_password'] == $_POST['confirm_password']) {
        $new_password = $_POST['new_password'];
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update user's password in database
        $stmt = $pdo->prepare('UPDATE users SET password_hash = :password_hash WHERE token = :token');
        $stmt->execute([':password_hash' => $hash, ':token' => $_GET['token']]);
        
        echo 'Password updated successfully.';
      } else {
        echo 'Passwords do not match.';
      }
    }
  } else {
    echo 'Invalid token.';
  }
}

?>


// Include configuration and database connection
require_once 'config.php';

function sendPasswordResetEmail($username, $email) {
    // Generate reset link (example: http://example.com/reset-password/<hash>)
    $resetHash = bin2hex(random_bytes(16));
    $resetLink = 'http://' . $_SERVER['HTTP_HOST'] . '/reset-password.php?username=' . urlencode($username) . '&hash=' . $resetHash;

    // Send email with reset link
    $to      = $email;
    $subject = 'Reset Your Password';
    $message = '
        <html>
            <body>
                You are receiving this email because you requested to reset your password.

                Please click on the following link to reset your password: 
                <a href="' . $resetLink . '">' . $resetLink . '</a>

                If you did not request a password reset, no further action is required.
            </body>
        </html>
    ';

    // Send email using PHPMailer or mail() function
    if (mail($to, $subject, $message)) {
        echo "Email sent successfully.";
    } else {
        echo "Error sending email.";
    }

    // Store reset hash in database for later verification
    $query = "INSERT INTO password_resets (username, reset_hash) VALUES (:username, :reset_hash)";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':username', $username);
    $stmt->bindParam(':reset_hash', $resetHash);
    return $stmt->execute();
}

if (isset($_POST['submit'])) {
    // Get user input
    $email = trim($_POST['email']);
    $username = get_username_from_email($email); // Replace with actual function

    if (!$username) {
        echo "Email not found.";
    } else {
        sendPasswordResetEmail($username, $email);
        echo "An email has been sent to reset your password.";
    }
}

function get_username_from_email($email) {
    // Replace this function with actual implementation
    global $pdo;
    $query = "SELECT username FROM users WHERE email=:email";
    $stmt = $pdo->prepare($query);
    $stmt->bindParam(':email', $email);
    return $stmt->execute() ? $stmt->fetchColumn() : null;
}


<?php

// Configuration
define('RECOVERY_TOKEN_EXPIRY', 3600); // 1 hour in seconds
define('MAX_RECOVERY_ATTEMPTS', 5);

// Function to send password recovery email
function send_recovery_email($email, $token) {
  $subject = 'Reset your password';
  $message = 'Click on the link below to reset your password: <a href="' . BASE_URL . '/reset_password.php?token=' . $token . '">Reset Password</a>';
  mail($email, $subject, $message);
}

// Function to generate recovery token
function generate_recovery_token() {
  return bin2hex(random_bytes(32));
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
  $email = trim($_POST['email']);

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address.';
    exit;
  }

  // Check if user exists
  $user = db_query("SELECT * FROM users WHERE email = ?", array($email));
  if (!$user) {
    echo 'No account found with that email address.';
    exit;
  }

  // Generate recovery token
  $token = generate_recovery_token();

  // Update user's reset token
  db_update('users', array('reset_token' => $token), array('id' => $user->id));

  // Send password recovery email
  send_recovery_email($email, $token);

  echo 'A password recovery email has been sent to your registered email address.';
}


<?php

// Function to query database
function db_query($query, $params) {
  global $db;
  try {
    $stmt = $db->prepare($query);
    $stmt->execute($params);
    return $stmt->fetch();
  } catch (PDOException $e) {
    echo 'Database error: ' . $e->getMessage();
    exit;
  }
}

// Function to update database
function db_update($table, $data, $conditions) {
  global $db;
  try {
    $query = "UPDATE $table SET ";
    foreach ($data as $field => $value) {
      $query .= "$field = :$field, ";
    }
    $query .= "WHERE id = :id";
    $stmt = $db->prepare($query);
    $stmt->execute(array_merge($conditions, array_intersect_key($data, function($k) { return !in_array($k, ['id']); })));
  } catch (PDOException $e) {
    echo 'Database error: ' . $e->getMessage();
    exit;
  }
}


<?php

// Database configuration
define('DB_HOST', 'your_host');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Base URL
define('BASE_URL', 'http://example.com');


<?php

require_once 'config.php'; // include your database connection settings

// Check if user has submitted the form
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Query the database to retrieve the user's data
    $query = "SELECT * FROM users WHERE username='$username' AND email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Retrieve the user's data
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];

        // Generate a new password and store it in the database
        $new_password = bin2hex(random_bytes(16));
        $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);

        // Update the user's data in the database
        $query = "UPDATE users SET password_hash='$hashed_new_password' WHERE id='$user_id'";
        mysqli_query($conn, $query);

        // Send a email with the new password to the user
        send_email($email, $new_password);
    } else {
        echo 'Error: User not found.';
    }
}

// Function to send an email with the new password
function send_email($email, $password) {
    $subject = 'Your new password';
    $body = 'Your new password is: '.$password;
    $headers = 'From: your-email@example.com' . "\r
" .
               'Content-Type: text/html; charset=UTF-8' . "\r
";

    mail($email, $subject, $body, $headers);
}

?>


<?php

// Database connection settings
$conn = mysqli_connect('localhost', 'username', 'password', 'database_name');

?>


<?php

// Configuration settings
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to the database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to send password reset email
function sendResetEmail($email, $token) {
    // Email settings
    $subject = 'Password Reset';
    $to = $email;
    $from = 'your_email@example.com';
    $body = '
        <p>Hi there,</p>
        <p>To reset your password, click on the following link:</p>
        <a href="http://example.com/reset-password.php?token=' . $token . '">' . $to . '</a>
        <p>Best regards,<br />Your website</p>';

    // Send email using mail function
    if (mail($to, $subject, $body, 'From: ' . $from)) {
        echo "Email sent successfully!";
    } else {
        echo "Error sending email!";
    }
}

// Check if the form has been submitted
if (isset($_POST['email'])) {
    // Get the user's email address from the form data
    $email = $_POST['email'];

    // Query to get the user's information
    $query = "SELECT id, password FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // If the user exists, send a reset link via email
        while ($row = mysqli_fetch_assoc($result)) {
            $token = bin2hex(random_bytes(32)); // Generate a random token

            // Update the user's token in the database
            $updateQuery = "UPDATE users SET password_reset_token = '$token' WHERE id = '" . $row['id'] . "'";
            mysqli_query($conn, $updateQuery);

            // Send email with reset link
            sendResetEmail($email, $token);
        }
    } else {
        echo "User not found!";
    }

    // Close the database connection
    mysqli_close($conn);
}

?>


<?php

// Set up database connection (e.g. via PDO)
$dsn = 'mysql:host=localhost;dbname=mydatabase';
$username = 'myusername';
$password = 'mypassword';

try {
    $conn = new PDO($dsn, $username, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
    exit;
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Retrieve user input
    $email = $_POST['email'];

    // Validate email address
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        // Prepare SQL query to retrieve user ID and password reset token
        $stmt = $conn->prepare('SELECT id, password_reset_token FROM users WHERE email = :email');
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        // Fetch result (should be a single row)
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Generate new password reset token
            $newToken = bin2hex(random_bytes(32));

            // Update user record with new token and current timestamp
            $stmt = $conn->prepare('UPDATE users SET password_reset_token = :token, last_updated = NOW() WHERE id = :id');
            $stmt->bindParam(':token', $newToken);
            $stmt->bindParam(':id', $user['id']);
            $stmt->execute();

            // Send email with password reset link
            sendPasswordResetEmail($email, $newToken);

            echo 'A password reset email has been sent to your email address. Please check your inbox.';
        } else {
            echo 'No user found with that email address.';
        }
    } else {
        echo 'Invalid email address';
    }
} else {

    // Display form
?>

<form action="" method="post">
    <label for="email">Email Address:</label>
    <input type="email" id="email" name="email" required>

    <button type="submit">Send Password Reset Link</button>
</form>

<?php

}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Set up SMTP connection (e.g. via PHPMailer)
    require_once 'PHPMailer/PHPMailerAutoload.php';
    $mail = new PHPMailer;

    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'myusername@example.com';
    $mail->Password = 'mypassword';

    $mail->setFrom('no-reply@example.com', 'My Website');
    $mail->addAddress($email);
    $mail->Subject = 'Reset Your Password';
    $mail->Body = 'Click the link below to reset your password:

<a href="' . $_SERVER['HTTP_HOST'] . '/password_reset.php?token=' . $token . '">Reset Password</a>';

    if (!$mail->send()) {
        echo 'Error sending email: ' . $mail->ErrorInfo;
    } else {
        // Email sent successfully
    }
}

?>


<?php
// Define database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get user input
  $email = $_POST['email'];

  // Query database to check for matching email address
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // If a match is found, send the user an email with reset link
    $user_id = $result->fetch_assoc()['id'];

    // Generate a random password reset token
    $token = bin2hex(random_bytes(32));

    // Store the token in the database
    $sql = "UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'";
    $conn->query($sql);

    // Send email with reset link
    $to = $email;
    $subject = 'Password Reset Link';
    $message = '
      <p>Click the following link to reset your password:</p>
      <p><a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a></p>
    ';
    mail($to, $subject, $message);

    echo '<div class="alert alert-success">Email sent with reset link!</div>';
  } else {
    echo '<div class="alert alert-danger">No account found with this email address.</div>';
  }
}

// Close the database connection
$conn->close();
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
  <input type="email" name="email" placeholder="Email Address">
  <button type="submit">Send Reset Link</button>
</form>


<?php
// Define database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get user input
  $token = $_POST['token'];
  $new_password = $_POST['new_password'];

  // Query database to check for matching token and password reset status
  $sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // If a match is found, update the user's password
    $user_id = $result->fetch_assoc()['id'];

    // Generate a new password hash
    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password in the database
    $sql = "UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE id = '$user_id'";
    $conn->query($sql);

    echo '<div class="alert alert-success">Password updated successfully!</div>';
  } else {
    echo '<div class="alert alert-danger">Invalid token.</div>';
  }
}

// Close the database connection
$conn->close();
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
  <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
  <label>New Password:</label>
  <input type="password" name="new_password">
  <button type="submit">Change Password</button>
</form>


<?php
// Configuration
define('EMAIL_SUBJECT', 'Reset Password');
define('PASSWORD_RESET_LINK', 'https://your-website.com/reset-password');

// Database connection settings
$host = 'localhost';
$dbname = 'your-database-name';
$username = 'your-username';
$password = 'your-password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die('Could not connect to database: ' . $e->getMessage());
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user input
    $email = trim($_POST['email']);

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        return;
    }

    // Find user by email address
    $stmt = $conn->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($user = $stmt->fetch()) {
        // Generate reset token
        $resetToken = bin2hex(random_bytes(32));

        // Update user record with reset token
        $updateStmt = $conn->prepare('UPDATE users SET password_reset_token = :token WHERE email = :email');
        $updateStmt->bindParam(':token', $resetToken);
        $updateStmt->bindParam(':email', $email);
        $updateStmt->execute();

        // Send reset link via email
        mail($email, EMAIL_SUBJECT,
            'Click the following link to reset your password: <a href="' . PASSWORD_RESET_LINK . '?token=' . $resetToken . '">Reset Password</a>',
            "From: your-email@example.com\r
Content-Type: text/html; charset=UTF-8");

        echo "Password reset email sent. Check your inbox and follow the link to reset your password.";
    } else {
        echo "Email address not found in our database.";
    }
}
?>


<?php

// Configuration settings
$site_url = 'http://example.com';
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';

// Function to send password reset email
function send_reset_email($email, $token) {
  // Set up email headers
  $headers = 'From: Password Reset <passwordreset@example.com>' . "\r
" .
             'MIME-Version: 1.0' . "\r
" .
             'Content-type: text/html; charset=utf-8' . "\r
";

  // Send email using PHPMailer (or your preferred email library)
  $msg = '<html><body><p>Please click the link below to reset your password:</p>';
  $msg .= '<a href="' . $site_url . '/reset-password?token=' . $token . '">Reset Password</a></body></html>';

  mail($email, 'Password Reset', $msg, $headers);
}

// Function to handle forgot password request
function forgot_password() {
  // Get the email address from the form submission
  $email = $_POST['email'];

  // Query database for user with matching email address
  $conn = new mysqli($db_host, $db_username, $db_password);
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);

  // Check if user exists
  if ($result->num_rows > 0) {
    // Get the user ID and password hash from the query result
    $row = $result->fetch_assoc();
    $user_id = $row['id'];
    $password_hash = $row['password_hash'];

    // Generate a random token for password reset
    $token = bin2hex(random_bytes(16));

    // Update the user's password hash with the new token
    $sql = "UPDATE users SET password_hash = '$token' WHERE id = '$user_id'";
    $conn->query($sql);

    // Send email to user with password reset link
    send_reset_email($email, $token);
  }

  // Close database connection
  $conn->close();

  // Output success message or redirect user to login page
}

// Handle form submission
if (isset($_POST['submit'])) {
  forgot_password();
}

?>


<?php

// Include configuration file
require_once 'config.php';

// Check if form has been submitted
if (isset($_POST['submit'])) {
  // Get input values
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }

  // Retrieve user data from database
  $sql = "SELECT * FROM users WHERE email = ?";
  $stmt = $pdo->prepare($sql);
  $stmt->execute([$email]);
  $user = $stmt->fetch();

  if (!$user) {
    echo "No account found with that email address.";
    exit;
  }

  // Generate reset token
  $resetToken = bin2hex(random_bytes(32));
  $expiresAt = time() + (60 * 60 * 24); // 1 day from now

  // Update user data in database
  $sql = "UPDATE users SET reset_token = ?, expires_at = ? WHERE id = ?";
  $stmt = $pdo->prepare($sql);
  $stmt->execute([$resetToken, $expiresAt, $user['id']]);

  // Send password reset email
  sendPasswordResetEmail($email, $resetToken);

  echo "A password reset link has been sent to your email address.";
} else {
  // Display forgot password form
  ?>
  <form action="" method="post">
    <label for="email">Enter your email address:</label>
    <input type="text" id="email" name="email">
    <button type="submit" name="submit">Send Reset Link</button>
  </form>
  <?php
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetToken) {
  // Configuration variables (replace with your own)
  $fromEmail = 'your-email@example.com';
  $fromName = 'Your Website';

  // Email template
  $subject = 'Password Reset Link';
  $body = "
    Dear user,

    You have requested to reset your password. To do so, click on the following link:

    <a href='http://example.com/reset-password?token=<?php echo $resetToken; ?>'>Reset Password</a>

    If you did not request a password reset, please ignore this email.

    Best regards,
    " . $fromName;

  // Send email using PHPMailer or mail() function
  // ...
}


// file: forgot_password.php

// Configuration
$database = array(
    'host' => 'localhost',
    'username' => 'your_username',
    'password' => 'your_password',
    'database' => 'your_database'
);

function send_reset_link($email, $username) {
    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($database['connection'], $query);
    if (mysqli_num_rows($result) == 0) {
        echo "Email not found";
        return;
    }

    // Generate random password
    $password = substr(md5(uniqid(rand(), true)), 0, 10);

    // Update user's password in database
    $query = "UPDATE users SET password = '$password' WHERE email = '$email'";
    mysqli_query($database['connection'], $query);

    // Send reset link to user's email
    $subject = 'Reset Your Password';
    $body = "
        Dear $username,
        
        We have received a request to reset your password. To do so, please click on the following link:
        
        <a href='reset_password.php?email=$email&password=$password'>Reset Password</a>
        
        Best regards,
        [Your Name]
    ";
    mail($email, $subject, $body);

    echo "Password reset link sent to your email.";
}

function forgot_password() {
    // Handle form submission
    if (isset($_POST['submit'])) {
        $email = $_POST['email'];
        $username = $_POST['username'];

        send_reset_link($email, $username);
    }
}


// file: reset_password.php

// Configuration
$database = array(
    'host' => 'localhost',
    'username' => 'your_username',
    'password' => 'your_password',
    'database' => 'your_database'
);

function update_password($email, $password) {
    // Update user's password in database
    $query = "UPDATE users SET password = '$password' WHERE email = '$email'";
    mysqli_query($database['connection'], $query);
}

function reset_password() {
    // Handle form submission
    if (isset($_POST['submit'])) {
        $email = $_POST['email'];
        $password = $_POST['password'];

        update_password($email, $password);

        echo "Password updated successfully.";
    }
}


<?php

// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connecting to the database
$conn = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Email configuration for sending reset link
$from_email = 'your-email@example.com';
$to_email = $_POST['email'];
$password_reset_link = 'http://example.com/reset-password.php?token=' . generateToken();

if (isset($_POST['submit'])) {

    try {
        // Retrieve the user's information from the database
        $query = "SELECT * FROM users WHERE email = :email";
        $stmt = $conn->prepare($query);
        $stmt->bindParam(':email', $_POST['email']);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {

            // Send a password reset link
            sendEmail($from_email, $to_email, "Reset Password", "Click here to reset your password: $password_reset_link");

            echo 'An email has been sent with instructions on how to reset your password.';
        } else {
            echo 'Account not found. Please try again.';
        }

    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

function sendEmail($from_email, $to_email, $subject, $message) {
    $headers = "From: $from_email
";
    $headers .= "MIME-Version: 1.0
";
    $headers .= "Content-type: text/html; charset=iso-8859-1
";

    mail($to_email, $subject, $message, $headers);
}

function generateToken() {
    return bin2hex(random_bytes(32));
}

?>


<?php

// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connecting to the database
$conn = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

if (isset($_GET['token'])) {

    try {
        // Retrieve the user's information from the database using the token
        $query = "SELECT * FROM users WHERE password_reset_token = :token";
        $stmt = $conn->prepare($query);
        $stmt->bindParam(':token', $_GET['token']);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {

            // Allow the user to change their password
            echo '<form action="" method="post">';

            echo 'Enter new password: <input type="password" name="new_password"><br>';
            echo 'Confirm new password: <input type="password" name="confirm_new_password"><br>';

            echo '<input type="hidden" name="token" value="' . $_GET['token'] . '">';

            echo '<input type="submit" name="change_password" value="Change Password">';
            echo '</form>';
        } else {
            echo 'Invalid token. Please try again.';
        }

    } catch (PDOException $e) {
        echo 'Error: ' . $e->getMessage();
    }
}

if (isset($_POST['change_password'])) {

    if ($_POST['new_password'] == $_POST['confirm_new_password']) {

        // Update the user's password in the database
        try {
            $query = "UPDATE users SET password_hash = :password_hash WHERE password_reset_token = :token";
            $stmt = $conn->prepare($query);
            $stmt->bindParam(':token', $_GET['token']);
            $stmt->bindParam(':password_hash', password_hash($_POST['new_password'], PASSWORD_DEFAULT));
            $stmt->execute();

            echo 'Your password has been updated.';

        } catch (PDOException $e) {
            echo 'Error: ' . $e->getMessage();
        }
    } else {
        echo 'Passwords do not match.';
    }

}

?>


<?php

// Include PHPMailer library
require_once 'vendor/autoload.php';

use PHPMailer\PHPMailer;

// Configuration variables
$server = 'smtp.gmail.com';
$port = 587;
$username = 'your_email@gmail.com'; // replace with your email address
$password = 'your_password'; // replace with your password

// Email verification code
$verifyCode = md5(uniqid(mt_rand(), true));

// Forgot password form
if (isset($_POST['forgot'])) {

    // Check if username or email is provided
    $usernameOrEmail = $_POST['username_or_email'];

    try {
        // Connect to database
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');

        // Query to retrieve user data based on username or email
        $stmt = $conn->prepare("SELECT * FROM users WHERE (username=:username_or_email OR email=:username_or_email)");
        $stmt->bindParam(':username_or_email', $usernameOrEmail);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Retrieve user data
            $user = $stmt->fetch();

            // Generate reset password link
            $resetLink = "http://your_domain.com/resetPassword.php?verifyCode=$verifyCode&userId={$user['id']}";

            // Send email with reset password link
            sendEmail($usernameOrEmail, $verifyCode);

        } else {
            echo 'User not found';
        }

    } catch (PDOException $e) {
        echo "Error connecting to database: " . $e->getMessage();
    }
}

// Function to send email using PHPMailer
function sendEmail($to, $verifyCode)
{
    // Create a new instance of PHPMailer
    $mail = new PHPMailer(true);

    try {
        // Configuration settings for sending email
        $mail->isSMTP();
        $mail->Host = $server;
        $mail->Port = $port;
        $mail->SMTPAuth = true;
        $mail->Username = $username;
        $mail->Password = $password;

        // Email settings
        $mail->setFrom($username, 'Your Website');
        $mail->addAddress($to);
        $mail->Subject = "Reset Password Link";
        $mail->Body = "Click on the link below to reset your password: <a href='$resetLink'>Reset Password</a>";

        // Send email
        $mail->send();

    } catch (Exception $e) {
        echo "Error sending email: " . $e->getMessage();
    }
}

?>


<?php

// Include PHPMailer library
require_once 'vendor/autoload.php';

use PHPMailer\PHPMailer;

// Configuration variables
$server = 'smtp.gmail.com';
$port = 587;
$username = 'your_email@gmail.com'; // replace with your email address
$password = 'your_password'; // replace with your password

// Verify code and user ID from URL parameters
$verifyCode = $_GET['verifyCode'];
$userId = $_GET['userId'];

try {
    // Connect to database
    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');

    // Query to retrieve user data based on user ID and verify code
    $stmt = $conn->prepare("SELECT * FROM users WHERE id=:userId AND verifyCode=:verifyCode");
    $stmt->bindParam(':userId', $userId);
    $stmt->bindParam(':verifyCode', $verifyCode);
    $stmt->execute();

    if ($stmt->rowCount() > 0) {
        // Retrieve user data
        $user = $stmt->fetch();

        // Prompt for new password
        echo 'Enter your new password: <input type="password" name="new_password"><br>';
        echo '<input type="submit" name="change_password">';

    } else {
        echo 'Invalid verify code or user ID';
    }

} catch (PDOException $e) {
    echo "Error connecting to database: " . $e->getMessage();
}

if (isset($_POST['change_password'])) {

    // Get new password from form
    $newPassword = $_POST['new_password'];

    try {
        // Update user data with new password
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');

        $stmt = $conn->prepare("UPDATE users SET password=:password WHERE id=:userId");
        $stmt->bindParam(':password', $newPassword);
        $stmt->bindParam(':userId', $userId);
        $stmt->execute();

        echo 'Your password has been changed successfully';

    } catch (PDOException $e) {
        echo "Error updating database: " . $e->getMessage();
    }
}

?>


function forgot_password($email, $username, $new_password) {
  // Connect to database
  $conn = mysqli_connect("localhost", "username", "password", "database");

  // Check if user exists
  $query = "SELECT * FROM users WHERE email='$email' AND username='$username'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 0) {
    return array("error" => "User not found");
  }

  // Generate a reset password token
  $token = substr(hash('sha256', microtime(true)), 0, 32);

  // Update user record with reset password token
  $query = "UPDATE users SET password_reset_token='$token' WHERE email='$email'";
  mysqli_query($conn, $query);

  // Send email to user with instructions on how to reset their password
  $subject = "Reset Your Password";
  $body = "
    Dear $username,

    Click the following link to reset your password: <a href='http://yourwebsite.com/reset-password?token=$token'>Reset Password</a>

    Best regards,
    Your Website Team";

  // Send email using PHPMailer or mail function
  send_email($email, $subject, $body);

  return array("success" => "Email sent with instructions on how to reset your password");
}


function send_email($to, $subject, $body) {
  // Use PHPMailer or mail function to send email
  if (isset($_ENV["SMTP_SERVER"])) {
    require_once 'PHPMailer/src/PHPMailer.php';
    require_once 'PHPMailer/src/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = $_ENV["SMTP_SERVER"];
    $mail->Username = $_ENV["SMTP_USERNAME"];
    $mail->Password = $_ENV["SMTP_PASSWORD"];
    $mail->Port = 587;
    $mail->SMTPAuth = true;

    $mail->setFrom($_ENV["FROM_EMAIL"], "Your Website Team");
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $body;

    if (!$mail->send()) {
      return array("error" => "Email not sent");
    }
  } else {
    mail($to, $subject, $body);
  }

  return array("success" => "Email sent");
}


function reset_password($token) {
  // Connect to database
  $conn = mysqli_connect("localhost", "username", "password", "database");

  // Check if token is valid
  $query = "SELECT * FROM users WHERE password_reset_token='$token'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 0) {
    return array("error" => "Invalid token");
  }

  // Get user data from database
  $user_data = mysqli_fetch_assoc($result);

  // Update user record with new password
  $new_password_hash = password_hash($token, PASSWORD_DEFAULT);
  $query = "UPDATE users SET password='$new_password_hash' WHERE id='{$user_data['id']}'";
  mysqli_query($conn, $query);

  return array("success" => "Password reset successfully");
}


<form action="forgot-password.php" method="post">
  <input type="email" name="email" placeholder="Enter your email address">
  <input type="text" name="username" placeholder="Enter your username">
  <button type="submit">Forgot Password</button>
</form>

<?php
if (isset($_POST["email"]) && isset($_POST["username"])) {
  $result = forgot_password($_POST["email"], $_POST["username"]);
  if ($result["error"]) {
    echo "Error: " . $result["error"];
  } else {
    echo "Email sent with instructions on how to reset your password";
  }
}
?>


<?php
// Configuration
$secret_key = 'your_secret_key_here'; // Use a random secret key for security

function sendEmail($email, $token) {
  // Send an email with a link to reset password
  // This is a simplified example, you may want to use a dedicated email library or service
  echo "Sending email to $email...
";
  // mail($email, 'Reset Password', 'Click this link to reset your password: https://example.com/reset_password.php?token=' . urlencode($token));
}

// Check if form has been submitted
if (isset($_POST['submit'])) {
  // Get the user's email address
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address.';
    exit;
  }

  // Retrieve the user's data from the database
  try {
    $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');
    $stmt = $pdo->prepare('SELECT id, reset_token FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user_data) {
      echo 'No account found with that email address.';
      exit;
    }

    // Generate a random reset token
    $token = bin2hex(random_bytes(16));

    // Update the user's data in the database
    $pdo->beginTransaction();
    $stmt = $pdo->prepare('UPDATE users SET reset_token = :token, expires_at = NOW() + INTERVAL 1 HOUR WHERE id = :id');
    $stmt->bindParam(':id', $user_data['id']);
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    $pdo->commit();

    // Send an email with a link to reset password
    sendEmail($email, $token);

  } catch (PDOException $e) {
    echo 'Error: ' . $e->getMessage();
  }
}

// Display the forgot password form
?>
<form action="" method="post">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type="submit" name="submit" value="Submit">
</form>


<?php
require_once 'db.php'; // assume db.php contains your database connection settings

function forgot_password() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);

        // Validate input data
        if (empty($username) || empty($email)) {
            $_SESSION['error'] = 'Please enter both username and email';
            return;
        }

        // Query database to retrieve user's information
        $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            // Retrieve user's information
            $row = mysqli_fetch_assoc($result);
            $user_id = $row['id'];
            $password_reset_token = bin2hex(random_bytes(32));
            $expiration_date = date('Y-m-d H:i:s', strtotime('+30 minutes')); // set expiration time to 30 minutes

            // Update user's information in database
            $query = "UPDATE users SET password_reset_token = '$password_reset_token', expiration_date = '$expiration_date' WHERE id = '$user_id'";
            mysqli_query($conn, $query);

            // Send email with password reset link
            send_password_reset_email($email, $password_reset_token);
        } else {
            $_SESSION['error'] = 'Invalid username or email';
        }
    }

    // Handle email sending (optional)
    function send_password_reset_email($email, $token) {
        $subject = 'Reset your password';
        $message = '
            <p>Hello %username%,

You have requested to reset your password. Please click on the following link to proceed:

            <a href="http://example.com/reset-password/%token%">Reset Password</a>

            If you did not request this, please ignore this email.

            Best regards,
            Your website
        ';

        // Send email using PHPMailer or other email library (not shown here)
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    forgot_password();
}
?>


<?php

require 'config.php'; // include database connection settings

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  
  if (empty($email)) {
    echo "Email is required";
    exit;
  }
  
  // validate email format
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }
  
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  
  if (mysqli_num_rows($result) > 0) {
    // user exists
    $user_data = mysqli_fetch_assoc($result);
    
    // generate a random password
    $new_password = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'), 0, 8);
    
    // update the user's password
    $query = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);
    
    // send a reset password email (not implemented here)
    // ...
    
    echo "Reset link sent to your email";
  } else {
    echo "Email not found in our records.";
  }
} else {
?>
  <form action="" method="post">
    Email: <input type="email" name="email"><br>
    <input type="submit" value="Send Reset Link">
  </form>
<?php
}


<?php

require 'config.php'; // include database connection settings

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  $new_password = $_POST['new_password'];
  
  if (empty($email) || empty($new_password)) {
    echo "Email and new password are required";
    exit;
  }
  
  // validate email format
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address";
    exit;
  }
  
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  
  if (mysqli_num_rows($result) > 0) {
    // user exists
    $user_data = mysqli_fetch_assoc($result);
    
    // update the user's password
    $query = "UPDATE users SET password_hash = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);
    
    echo "Password updated successfully";
  } else {
    echo "Email not found in our records.";
  }
} else {
?>
  <form action="" method="post">
    Email: <input type="email" name="email"><br>
    New Password: <input type="password" name="new_password"><br>
    Confirm New Password: <input type="password" name="confirm_new_password"><br>
    <input type="submit" value="Reset Password">
  </form>
<?php
}


<?php

// database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database_name';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user input
$username = $_POST['username'];
$email = $_POST['email'];

// Check if username and email exist in database
$stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND email = ?");
$stmt->bind_param('ss', $username, $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // User exists, generate new password and send reset link
    $row = $result->fetch_assoc();
    
    // Generate new password
    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 10);
    
    // Update user password in database
    $update_stmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
    $update_stmt->bind_param('si', md5($new_password), $row['id']);
    $update_stmt->execute();
    
    // Send reset link via email (this example uses PHPMailer)
    require_once 'PHPMailerAutoload.php';
    $mail = new PHPMailer;
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Reset Password';
    $mail->Body = 'Click here to reset your password: <a href="https://example.com/reset-password.php?username=' . urlencode($username) . '&token=' . md5($new_password) . '">Reset Password</a>';
    
    if (!$mail->send()) {
        echo 'Message could not be sent.';
        echo 'Mailer Error: ' . $mail->ErrorInfo;
    } else {
        echo 'Email sent successfully!';
    }
} else {
    echo 'Username or email does not exist in our database.';
}

// Close connection
$conn->close();

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user input
$username = $_GET['username'];
$token = $_GET['token'];

// Check if username and token exist in database
$stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password_hash = ?");
$stmt->bind_param('ss', $username, md5($token));
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // User exists, update new password
    $row = $result->fetch_assoc();
    
    // Update user password in database
    $update_stmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
    $update_stmt->bind_param('si', md5($_POST['new_password']), $row['id']);
    $update_stmt->execute();
    
    echo 'Password updated successfully!';
} else {
    echo 'Username or token does not exist in our database.';
}

// Close connection
$conn->close();

?>


<?php

// Configuration settings
define('SITE_EMAIL', 'your_email@example.com');
define('SITE_NAME', 'Your Website Name');

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input data
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        exit;
    }

    // Check if user exists in database
    require_once 'db.php';
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) == 0) {
        echo "Email not found.";
        exit;
    }

    // Generate a random password
    $new_password = substr(md5(uniqid(mt_rand(), true)), 0, 8);

    // Update user's password in database
    $query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send email with new password to user
    $subject = 'Your new password for ' . SITE_NAME;
    $message = '
        Dear User,
        
        Your new password is: ' . $new_password . '

        Best regards,
        ' . SITE_NAME;
    $headers = "From: " . SITE_EMAIL;
    mail($email, $subject, $message, $headers);

    echo "New password has been sent to your email.";
} else {
    ?>
    <h1>Forgot Password</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="text" id="email" name="email" required>
        <button type="submit">Submit</button>
    </form>
    <?php
}
?>


<?php

// Database connection settings
$conn = mysqli_connect("localhost", "username", "password", "database");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

?>


<?php

// Configuration settings
$smtp_server = 'your_smtp_server';
$smtp_port = 587;
$from_email = 'your_email@example.com';
$password_recovery_url = 'https://example.com/password-recovery';

// Verify the email is not empty and contains a valid email address
if (!isset($_POST['email']) || !filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
    echo json_encode(array('error' => 'Invalid email address'));
    exit;
}

$email = $_POST['email'];

// Retrieve user data from database (e.g., MySQL)
$user_data_query = "SELECT * FROM users WHERE email = '$email'";
$result = mysqli_query($conn, $user_data_query);

if (mysqli_num_rows($result) == 0) {
    echo json_encode(array('error' => 'Email address not found'));
    exit;
}

$user_id = mysqli_fetch_assoc($result)['id'];

// Generate a random password reset token
$password_reset_token = bin2hex(random_bytes(32));

// Update user data with the password reset token in database (e.g., MySQL)
$query = "UPDATE users SET password_reset_token = '$password_reset_token' WHERE id = '$user_id'";
mysqli_query($conn, $query);

// Send an email to the user with a link to reset their password
$subject = 'Password Recovery';
$message = '
Dear '. $_POST['email'] .',

Please click on the following link to reset your password:
' . $password_recovery_url . '?token=' . $password_reset_token;

$headers = 'From: ' . $from_email . "\r
" .
    'Reply-To: ' . $from_email . "\r
" .
    'Content-Type: text/html; charset=UTF-8\r
';

mail($email, $subject, $message, $headers);

echo json_encode(array('success' => 'Email sent with password recovery link'));

?>


// Forgot Password Function

function forgot_password($username) {
  // Get user data from the database
  $user = get_user_by_username($username);

  if (!$user) {
    return array('error' => 'Username not found');
  }

  // Generate a reset token
  $reset_token = bin2hex(random_bytes(16));

  // Update user data with reset token in the database
  update_user_with_reset_token($user['id'], $reset_token);

  // Send password reset email to the user's email address
  send_password_reset_email($user, $reset_token);
}

// Get user by username function

function get_user_by_username($username) {
  global $db;
  $query = "SELECT * FROM users WHERE username = '$username'";
  $result = mysqli_query($db, $query);

  if (mysqli_num_rows($result) > 0) {
    return mysqli_fetch_assoc($result);
  }

  return false;
}

// Update user with reset token function

function update_user_with_reset_token($user_id, $reset_token) {
  global $db;
  $query = "UPDATE users SET password_reset_token = '$reset_token' WHERE id = '$user_id'";
  mysqli_query($db, $query);
}

// Send password reset email function

function send_password_reset_email($user, $reset_token) {
  $to = $user['email'];
  $subject = 'Password Reset';
  $body = "Please click on the following link to reset your password: <a href='http://example.com/reset-password?token=" . $reset_token . "'>Reset Password</a>";

  mail($to, $subject, $body);
}

// Check if the user has a valid reset token function

function check_reset_token($token) {
  global $db;
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = mysqli_query($db, $query);

  if (mysqli_num_rows($result) > 0) {
    return true; // User has a valid reset token
  }

  return false;
}

// Reset user's password function

function reset_password($token, $new_password) {
  global $db;

  if (!check_reset_token($token)) {
    return array('error' => 'Invalid or expired reset token');
  }

  // Update user data with new password in the database
  update_user_with_new_password($new_password);
}


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $token = $_GET['token'];
  $new_password = $_POST['new_password'];

  if ($token && !empty($new_password)) {
    reset_password($token, $new_password);
  } else {
    echo 'Invalid or expired reset token';
  }
}


<?php

// Configuration constants
define('RESET_TOKEN_LIFETIME', 3600); // Token is valid for an hour
define('SMTP_SERVER', 'smtp.example.com'); // Your SMTP server address
define('SMTP_PORT', 587);
define('FROM_EMAIL', 'your_email@example.com');
define('FROM_NAME', 'Your Website Name');

// Email configuration for sending reset links
function sendEmail($to, $subject, $body) {
    $config = [
        'host' => SMTP_SERVER,
        'port' => SMTP_PORT,
        'user' => FROM_EMAIL,
        'password' => 'your_email_password',
        'crypt' => 'ssl'
    ];

    // Sending email
    if (mail($to, $subject, $body, "From: $FROM_NAME <$FROM_EMAIL>")) {
        return true;
    } else {
        error_log("Error sending email to $to");
        return false;
    }
}

// Forgot Password Functionality
function forgotPassword() {
    global $conn; // Assuming you're using a global connection object

    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        
        // Validate Email
        $query = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $query);
        
        if ($row = mysqli_fetch_assoc($result)) {
            // Generate a reset token
            $resetToken = substr(bin2hex(random_bytes(32)), 0, 32);
            $updateQuery = "UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'";
            
            if (mysqli_query($conn, $updateQuery)) {
                // Create and send the password reset link
                $link = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=$resetToken";
                $subject = 'Password Reset Link';
                $body = "
                    Dear $email,
                    
                    You are receiving this email because you have requested a password reset for your account.
                    
                    Please click on the following link to reset your password: $link
                    
                    Best regards,
                    Your Website Name
                ";
                
                if (sendEmail($email, $subject, $body)) {
                    echo 'A password reset link has been sent to your email.';
                } else {
                    echo 'Error sending password reset link.';
                }
            } else {
                error_log("Error updating user record");
            }
        } else {
            echo 'The provided email is not in our records or may be incorrect.';
        }
    } else {
        if (isset($_GET['token'])) {
            $resetToken = $_GET['token'];
            
            // Check if token is valid and has been used
            $query = "SELECT * FROM users WHERE reset_token = '$resetToken'";
            $result = mysqli_query($conn, $query);
            
            if ($row = mysqli_fetch_assoc($result)) {
                // If the token hasn't expired yet, allow user to change their password
                if (strtotime($row['created_at']) + RESET_TOKEN_LIFETIME >= time()) {
                    echo "Please enter your new password below.";
                    
                    // Form for updating password
                    ?>
                    <form action="" method="post">
                        <input type="password" name="new_password">
                        <input type="submit" value="Change Password">
                    </form>
                    
                    <?php
                    
                    if (isset($_POST['new_password'])) {
                        $newPassword = $_POST['new_password'];
                        
                        // Update the user's password
                        $updateQuery = "UPDATE users SET reset_token = NULL, password_hash = '$newPassword' WHERE email = '".$row['email']."'";
                        
                        if (mysqli_query($conn, $updateQuery)) {
                            echo 'Your password has been successfully changed.';
                        } else {
                            error_log("Error updating user record");
                        }
                    }
                } else {
                    echo "The provided reset token is expired or invalid.";
                }
            } else {
                echo "The provided reset token is invalid or has not been used yet.";
            }
        }
    }
}

// Initial Setup
if (isset($_POST['email'])) {
    forgotPassword();
}
?>


<?php

require_once 'db_config.php'; // assuming you have a db_config.php file for database connection settings

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // Retrieve user data from database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($db_connection, $query);

    if (mysqli_num_rows($result) == 1) {
        $user_data = mysqli_fetch_assoc($result);

        // Generate a new password reset token
        $token = bin2hex(random_bytes(32));

        // Update user data with new token
        $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
        mysqli_query($db_connection, $query);

        // Send email to user with password reset link
        $subject = 'Password Reset Link';
        $message = '
            <p>Click the following link to reset your password:</p>
            <p><a href="' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a></p>
        ';
        mail($email, $subject, $message);

        echo 'Password reset email sent';
    } else {
        echo 'Email address not found in database';
    }
}

?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <label for="email">Email Address:</label>
    <input type="email" id="email" name="email">
    <button type="submit">Send Password Reset Email</button>
</form>


<?php

require_once 'db_config.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];

    // Validate token and new password
    if (!isset($token) || !isset($new_password)) {
        echo 'Invalid request';
        exit;
    }

    // Retrieve user data from database using token
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($db_connection, $query);

    if (mysqli_num_rows($result) == 1) {
        $user_data = mysqli_fetch_assoc($result);

        // Update user data with new password
        $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
        $query = "UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE email = '$user_data[email]'";
        mysqli_query($db_connection, $query);

        echo 'Password reset successfully';
    } else {
        echo 'Invalid token';
    }
}

?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <label for="token">Token:</label>
    <input type="text" id="token" name="token">
    <label for="new_password">New Password:</label>
    <input type="password" id="new_password" name="new_password">
    <button type="submit">Reset Password</button>
</form>


<?php

// Configuration
$config = array(
  'email_from' => 'your-email@example.com',
  'email_to' => '',
  'smtp_host' => 'your-smtp-host',
  'smtp_port' => '587'
);

function forgot_password($email) {
  // Get user data from database
  $user_data = get_user_by_email($email);
  
  if (!$user_data) {
    return false;
  }
  
  // Generate reset token and expiration time
  $reset_token = bin2hex(random_bytes(32));
  $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
  
  // Update user data in database with new reset token and expiration time
  update_user_data($user_data['id'], 'reset_token', $reset_token);
  update_user_data($user_data['id'], 'reset_token_expires', $reset_token_expires);
  
  // Send email to user with reset link
  send_reset_email($email, $reset_token);
}

function get_user_by_email($email) {
  global $config;
  
  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');
  $stmt = $db->prepare("SELECT * FROM users WHERE email = ?");
  $stmt->execute(array($email));
  return $stmt->fetch();
}

function update_user_data($id, $field, $value) {
  global $config;
  
  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');
  $stmt = $db->prepare("UPDATE users SET `$field` = ? WHERE id = ?");
  $stmt->execute(array($value, $id));
}

function send_reset_email($email, $reset_token) {
  global $config;
  
  $headers = "From: {$config['email_from']}\r
";
  $headers .= "Content-Type: text/html; charset=UTF-8\r
";
  
  $message = "
    <h1>Reset Password</h1>
    <p>Please click on the following link to reset your password:</p>
    <a href='http://your-website.com/reset-password.php?token={$reset_token}'>Reset Password</a>
  ";
  
  mail($email, 'Reset Password', $message, $headers);
}

// Example usage:
$email = 'example@example.com';
forgot_password($email);

?>


<?php

// Configuration
$config = array(
  'token_cookie_name' => 'reset_token'
);

function verify_reset_token($token) {
  global $config;
  
  // Get user data from database using reset token
  $user_data = get_user_by_reset_token($token);
  
  if (!$user_data) {
    return false;
  }
  
  // Check expiration time
  if (strtotime($user_data['reset_token_expires']) < strtotime('now')) {
    return false;
  }
  
  return $user_data;
}

function get_user_by_reset_token($token) {
  global $config;
  
  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');
  $stmt = $db->prepare("SELECT * FROM users WHERE reset_token = ?");
  $stmt->execute(array($token));
  return $stmt->fetch();
}

function get_user_data_by_reset_token($token) {
  global $config;
  
  // Get user data from database using reset token
  $user_data = verify_reset_token($token);
  
  if (!$user_data) {
    return null;
  }
  
  return $user_data;
}

// Example usage:
$token = $_GET['token'];
$user_data = get_user_data_by_reset_token($token);

if ($user_data) {
  // Display password reset form
  echo '
    <h1>Reset Password</h1>
    <form action="reset-password-post.php" method="post">
      <input type="password" name="new_password">
      <input type="submit" value="Reset Password">
    </form>
  ';
} else {
  // Display error message
  echo '<p>Error: Invalid reset token.</p>';
}

?>


<?php

// Configuration
$config = array(
  'token_cookie_name' => 'reset_token'
);

function verify_reset_token($token) {
  global $config;
  
  // Get user data from database using reset token
  $user_data = get_user_by_reset_token($token);
  
  if (!$user_data) {
    return false;
  }
  
  // Check expiration time
  if (strtotime($user_data['reset_token_expires']) < strtotime('now')) {
    return false;
  }
  
  return $user_data;
}

function update_password($id, $new_password_hash) {
  global $config;
  
  $db = new PDO('mysql:host=localhost;dbname=your-database', 'your-username', 'your-password');
  $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
  $stmt->execute(array($new_password_hash, $id));
}

// Example usage:
$token = $_GET['token'];
$new_password = $_POST['new_password'];

$user_data = verify_reset_token($token);

if ($user_data) {
  // Update user's password
  update_password($user_data['id'], password_hash($new_password, PASSWORD_DEFAULT));
  
  // Display success message
  echo '<p>Password updated successfully.</p>';
} else {
  // Display error message
  echo '<p>Error: Invalid reset token.</p>';
}

?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

require_once 'db-connection.php'; // Establishes database connection

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $email = trim($_POST['email']);

  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    http_response_code(400);
    echo json_encode(['error' => 'Invalid email address']);
    exit;
  }

  // Retrieve user ID from database
  $query = "SELECT id FROM users WHERE email = ?";
  $stmt = $mysqli->prepare($query);
  $stmt->bind_param('s', $email);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows === 0) {
    http_response_code(400);
    echo json_encode(['error' => 'Email address not found']);
    exit;
  }

  // Generate password reset token
  $token = bin2hex(random_bytes(32));
  $query = "INSERT INTO reset_passwords (token, user_id) VALUES (?, ?)";
  $stmt = $mysqli->prepare($query);
  $stmt->bind_param('si', $token, $user_id);
  $stmt->execute();

  // Send email with password reset link
  $to = $email;
  $subject = 'Password Reset Request';
  $body = "Please click the following link to reset your password:

";
  $body .= '<a href="http://your-site.com/reset-password.php?token=' . $token . '">Reset Password</a>';

  mail($to, $subject, $body);

  echo json_encode(['message' => 'Password reset email sent']);
}
?>


<?php

// Configuration
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

require_once 'db-connection.php'; // Establishes database connection

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $token = trim($_POST['token']);

  if (empty($token)) {
    http_response_code(400);
    echo json_encode(['error' => 'Invalid token']);
    exit;
  }

  // Retrieve user ID from reset_passwords table
  $query = "SELECT user_id FROM reset_passwords WHERE token = ?";
  $stmt = $mysqli->prepare($query);
  $stmt->bind_param('s', $token);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows === 0) {
    http_response_code(400);
    echo json_encode(['error' => 'Invalid token']);
    exit;
  }

  // Get user ID
  $user_id = $result->fetch_assoc()['user_id'];

  // Update password (for demonstration purposes only)
  $new_password = 'new-password';
  $query = "UPDATE users SET password_hash = ? WHERE id = ?";
  $stmt = $mysqli->prepare($query);
  $stmt->bind_param('si', sha256($new_password), $user_id);
  $stmt->execute();

  echo json_encode(['message' => 'Password updated successfully']);
}
?>


<?php

// Configuration
define('PASSWORD_RESET_LINK_EXPIRE', 3600); // expire in 1 hour
define('PASSWORD_RESET_LINK_SECRET', 'your-secret-key'); // secret key for token generation

// Forgot Password Function
function forgot_password($email) {
    // Get user data from database
    $user = get_user_by_email($email);

    if ($user === false) {
        return array('error' => 'User not found');
    }

    // Generate a password reset link
    $token = generate_reset_token($user->id, PASSWORD_RESET_LINK_EXPIRE);
    $reset_link = $_SERVER['HTTP_HOST'] . '/password-reset/' . $token;

    // Send email with password reset link
    send_password_reset_email($email, $reset_link);

    return array('success' => 'Password reset link sent to your email');
}

// Get user data by email function
function get_user_by_email($email) {
    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result === false) {
        return false;
    }

    return $result->fetch_assoc();
}

// Generate password reset token function
function generate_reset_token($user_id, $expire_in) {
    // Use a secret key and the user ID to generate a unique token
    $token = hash_hmac('sha256', $user_id . time(), PASSWORD_RESET_LINK_SECRET);
    return $token;
}

// Send password reset email function
function send_password_reset_email($email, $reset_link) {
    // Set up email headers and body
    $subject = 'Reset Your Password';
    $body = "Click the link below to reset your password:

" . $reset_link;

    // Send email using PHP's mail() function or a library like SwiftMailer
    // ...
}

// Handle password reset request (e.g. via POST)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    $result = forgot_password($email);

    if ($result['success']) {
        echo json_encode(array('message' => 'Password reset link sent to your email'));
    } else {
        echo json_encode($result);
    }
}
?>


// Forgot Password Function
function forgot_password($email) {
  // Connect to database
  $conn = mysqli_connect("localhost", "username", "password", "database_name");

  // Check if email exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  $num_rows = mysqli_num_rows($result);

  if ($num_rows == 0) {
    echo "Email not found.";
    return false;
  }

  // Generate a random password
  $password = substr(md5(uniqid(rand(), true)), 0, 8);
  $password_hash = hash('sha256', $password);

  // Update user's password in database
  $query = "UPDATE users SET password_hash = '$password_hash' WHERE email = '$email'";
  mysqli_query($conn, $query);

  // Send email with reset link
  send_reset_email($email, $password);
}

// Function to send reset email
function send_reset_email($email, $password) {
  $subject = "Reset Password";
  $body = "Click here to reset your password: <a href='http://example.com/reset_password?email=$email&password=$password'>Reset Password</a>";
  mail($email, $subject, $body);
}


// Reset Password Function
function reset_password() {
  // Check if user has submitted form data
  if (!isset($_POST['email']) || !isset($_POST['password'])) {
    echo "Invalid request.";
    return false;
  }

  // Connect to database
  $conn = mysqli_connect("localhost", "username", "password", "database_name");

  // Get email and password from form data
  $email = $_POST['email'];
  $password = $_POST['password'];

  // Check if user's email matches the one in the reset link
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  $num_rows = mysqli_num_rows($result);

  if ($num_rows == 0) {
    echo "Email not found.";
    return false;
  }

  // Update user's password in database
  $query = "UPDATE users SET password_hash = '$password' WHERE email = '$email'";
  mysqli_query($conn, $query);
}


// Example use case: forgot password form
echo "<form action='forget_password.php' method='post'>";
echo "Email: <input type='text' name='email'>";
echo "<button type='submit'>Submit</button>";
echo "</form>";

if (isset($_POST['email'])) {
  $email = $_POST['email'];
  forgot_password($email);
}


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process form submission (forgot password)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Get user input
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Validate user input
    if (!isset($username) || !isset($email)) {
        echo "Error: Username and email are required.";
        exit;
    }

    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {

        // Retrieve user data from result set
        $row = $result->fetch_assoc();

        // Generate a random password reset token
        $token = bin2hex(random_bytes(32));
        $expires_in = time() + (60 * 60 * 24); // expires in 1 day

        // Insert token into database (for security, store token separately from user data)
        $query = "INSERT INTO password_reset_tokens (username, token, expires_at) VALUES ('$username', '$token', '$expires_in')";
        $conn->query($query);

        // Send email with password reset link
        sendPasswordResetEmail($row['email'], $token);
    } else {
        echo "Error: Username or email not found.";
    }
}

// Close database connection
$conn->close();

// Helper function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Your email sending logic goes here (e.g., using PHPMailer)
    // For demonstration purposes, we'll use a simple echo statement
    echo "Sending email to $email with password reset token: $token
";
}

?>


<?php
require_once 'config.php'; // configuration file with database credentials

function sendResetEmail($username, $email) {
  // Create reset link with token
  $token = bin2hex(random_bytes(32));
  $resetLink = "http://example.com/reset-password/$token";

  // Send email using PHPMailer or a similar library
  $mail->setFrom('no-reply@example.com', 'Password Reset');
  $mail->addAddress($email);
  $mail->Subject = 'Reset Password';
  $mail->Body = 'Click the link below to reset your password: <a href="' . $resetLink . '">Reset Password</a>';
  $mail->send();

  // Store token in database
  $sql = "INSERT INTO password_resets (username, token) VALUES (:username, :token)";
  $stmt = $db->prepare($sql);
  $stmt->bindParam(':username', $username);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  $username = $_POST['username'];

  // Check if user exists
  $sql = "SELECT * FROM users WHERE email = :email AND username = :username";
  $stmt = $db->prepare($sql);
  $stmt->bindParam(':email', $email);
  $stmt->bindParam(':username', $username);
  $stmt->execute();
  $user = $stmt->fetch();

  if ($user) {
    // Send reset email
    sendResetEmail($username, $email);

    echo 'Password reset link sent to your email.';
  } else {
    echo 'Username or email not found.';
  }
} else {
?>
<form method="post">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email"><br><br>
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>
  <button type="submit">Send Reset Link</button>
</form>
<?php
}
?>


<?php
require_once 'config.php';

function resetPassword($token) {
  // Check if token exists in database
  $sql = "SELECT * FROM password_resets WHERE token = :token";
  $stmt = $db->prepare($sql);
  $stmt->bindParam(':token', $token);
  $stmt->execute();
  $reset = $stmt->fetch();

  if ($reset) {
    // Prompt user to enter new password
    echo 'Enter your new password:<br>';
    $newPassword = $_POST['new_password'];

    // Hash and store new password in database
    $sql = "UPDATE users SET password_hash = :password_hash WHERE id = :id";
    $stmt = $db->prepare($sql);
    $stmt->bindParam(':password_hash', password_hash($newPassword, PASSWORD_DEFAULT));
    $stmt->bindParam(':id', $reset['user_id']);
    $stmt->execute();

    // Delete reset token from database
    $sql = "DELETE FROM password_resets WHERE token = :token";
    $stmt = $db->prepare($sql);
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    echo 'Password reset successfully!';
  } else {
    echo 'Invalid token.';
  }
}

if (isset($_GET['token'])) {
  $token = $_GET['token'];
  resetPassword($token);
} else {
?>
<form method="post">
  <label for="new_password">New Password:</label>
  <input type="password" id="new_password" name="new_password"><br><br>
  <button type="submit">Reset Password</button>
</form>
<?php
}
?>


// forgot_password.php

require_once 'db_connect.php'; // database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Validate input
    if (empty($username) || empty($email)) {
        echo 'Error: Username and email are required.';
        exit;
    }

    // Query database to retrieve user data
    $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
    $result = mysqli_query($conn, $query);

    if ($result->num_rows == 0) {
        echo 'Error: User not found.';
        exit;
    }

    // Generate a random password
    $password = substr(md5(uniqid()), 0, 8);

    // Update user password in database
    $query = "UPDATE users SET password = '$password' WHERE username = '$username'";
    mysqli_query($conn, $query);

    // Send email with reset link
    send_email($email, $password);
}

function send_email($to_email, $password) {
    $subject = 'Password Reset';
    $body = "Dear user,

Your new password is: $password

Best regards,
[Your Application Name]";

    // Send email using your preferred method (e.g., PHPMailer, mail())
    mail($to_email, $subject, $body);
}

// Display forgot password form
echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
echo 'Enter Username: <input type="text" name="username"><br>';
echo 'Enter Email: <input type="email" name="email"><br>';
echo '<button type="submit">Submit</button>';
echo '</form>';

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to check if user exists and send reset link
function forgotPassword() {
  global $conn;

  // Get form data
  $email = $_POST['email'];

  // Check if email is valid
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email";
    return;
  }

  // Query database to get user's ID and password
  $query = "SELECT id, password FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  // Check if user exists
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $userId = $row['id'];
    $password = $row['password'];

    // Generate reset link (very basic example, not secure!)
    $resetLink = "http://yourwebsite.com/reset-password.php?email=$email&token=123456";

    // Send email with reset link
    sendEmail($email, "Reset Password", $resetLink);
  } else {
    echo "User does not exist";
  }
}

// Function to send email using PHPMailer (not included in this example)
function sendEmail($to, $subject, $message) {
  // Create a new instance of PHPMailer
  require_once 'PHPMailer/PHPMailer.php';
  $mail = new PHPMailer\PHPMailer\PHPMailer();

  // Set up SMTP settings
  $mail->isSMTP();
  $mail->Host = 'smtp.yourwebsite.com';
  $mail->Port = 587;
  $mail->SMTPAuth = true;
  $mail->Username = 'your_email@yourwebsite.com';
  $mail->Password = 'your_password';

  // Set up email content
  $mail->setFrom('your_email@yourwebsite.com', 'Your Name');
  $mail->addAddress($to);
  $mail->Subject = $subject;
  $mail->Body = $message;

  if (!$mail->send()) {
    echo "Email not sent: " . $mail->ErrorInfo;
  }
}

// Handle form submission
if (isset($_POST['submit'])) {
  forgotPassword();
} else {
  // Display form
  ?>
  <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" name="email"><br><br>
    <input type="submit" name="submit" value="Submit">
  </form>
  <?php
}
?>


<?php

// Configuration
define('SITE_URL', 'https://example.com');

function forgot_password($email) {
  // Check if email is valid
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    return array('error' => 'Invalid email address');
  }

  // Query database to check if user exists
  $conn = mysqli_connect("localhost", "username", "password", "database");
  if (!$conn) {
    die("Connection failed: " . mysqli_error($conn));
  }
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) == 0) {
    // User does not exist
    return array('error' => 'User not found');
  }

  // Generate reset token and password reset link
  $token = bin2hex(random_bytes(16));
  $password_reset_link = SITE_URL . '/reset-password?token=' . $token;

  // Insert token into database for later verification
  $query = "INSERT INTO password_resets (email, token) VALUES ('$email', '$token')";
  mysqli_query($conn, $query);

  // Send email with password reset link
  $to = $email;
  $subject = 'Reset your password';
  $message = '
    <p>Dear user,</p>
    <p>To reset your password, please click the following link:</p>
    <a href="' . $password_reset_link . '">' . $password_reset_link . '</a>
  ';
  mail($to, $subject, $message);

  // Return success message
  return array('success' => 'Password reset email sent');
}

?>


$email = 'user@example.com';
$response = forgot_password($email);
echo json_encode($response); // Output: {"success": "Password reset email sent"}


<?php

// Configuration
require_once 'config.php';

// Check if form has been submitted
if (isset($_POST['submit'])) {
  // Get form data
  $email = $_POST['email'];

  // Query database to retrieve user's email address
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if ($result) {
    // If user exists, generate new password and send it via email
    while ($row = mysqli_fetch_assoc($result)) {
      $new_password = substr(md5(uniqid()), 0, 8);
      $query_update = "UPDATE users SET password_hash = '" . password_hash($new_password, PASSWORD_DEFAULT) . "' WHERE id = '$row[id]'";
      mysqli_query($conn, $query_update);

      // Send email with new password
      send_email($email, $new_password);
    }
  } else {
    echo 'Error: User not found';
  }

} else {
  ?>
  <html>
    <body>
      <h1>Forgot Password</h1>
      <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email Address: <input type="email" name="email"><br><br>
        <input type="submit" value="Send New Password" name="submit">
      </form>
    </body>
  </html>
  <?php
}

// Function to send email with new password
function send_email($to, $password) {
  $subject = 'New Password';
  $message = 'Your new password is: ' . $password;
  mail($to, $subject, $message);
}

?>


<?php

// Include your database connection settings
require_once('config.php');

if (isset($_POST['submit'])) {
    // Sanitize input
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a token and store it in the password_reset table
        $token = bin2hex(random_bytes(32));
        $insertQuery = "INSERT INTO password_reset SET email='$email', token='$token'";
        mysqli_query($conn, $insertQuery);

        // Send an email to the user with the link to reset their password
        sendPasswordResetEmail($email, $token);
        
        echo '<div class="alert alert-success">A password reset email has been sent to your email address.</div>';
    } else {
        echo '<div class="alert alert-danger">No account found with that email.</div>';
    }
}

function sendPasswordResetEmail($email, $token) {
    // Your SMTP settings
    $smtpServer = 'your-smtp-server';
    $smtpPort = 587;
    $fromEmail = 'your-email@gmail.com';
    $password = 'your-password';

    // Email content
    $subject = "Password Reset Link";
    $body = "
        Hi there,
        
        You are receiving this email because we received a password reset request for your account.
        
        To reset your password, please click on the following link: 
        <a href='http://your-website.com/reset-password.php?token=$token'>$token</a>
    ";

    // Send email using SMTP
    $headers = "From: $fromEmail\r
";
    $headers .= "Bcc: $email\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    mail($email, $subject, $body, $headers);
}
?>


<?php

// Include your database connection settings
require_once('config.php');

if (isset($_GET['token'])) {
    // Check if token exists in password_reset table
    $query = "SELECT * FROM password_reset WHERE token='".$_GET['token']."'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Get the email and user ID from the password_reset table
        $row = mysqli_fetch_assoc($result);
        $email = $row['email'];
        
        // Create a form to ask for new password
        echo '<form action="update-password.php" method="post">
            <label>Enter your new password:</label>
            <input type="password" name="new_password"><br><br>
            <label>Confirm your new password:</label>
            <input type="password" name="confirm_password"><br><br>
            <input type="submit" value="Reset Password">
        </form>';
    } else {
        echo '<div class="alert alert-danger">Invalid token.</div>';
    }
}
?>


<?php

// Include your database connection settings
require_once('config.php');

if (isset($_POST['new_password'])) {
    // Check if both passwords match
    if ($_POST['new_password'] == $_POST['confirm_password']) {
        // Sanitize input
        $new_password = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
        
        // Update the user's password in database
        $updateQuery = "UPDATE users SET password='$new_password' WHERE email='".$_SESSION['email']."'";
        mysqli_query($conn, $updateQuery);
        
        echo '<div class="alert alert-success">Password updated successfully.</div>';
    } else {
        echo '<div class="alert alert-danger">Passwords do not match.</div>';
    }
}
?>


<?php

// Configuration variables
define('RESET_LINK', 'https://example.com/reset-password.php');
define('ADMIN_EMAIL', 'admin@example.com');

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to send reset email
function sendResetEmail($email, $token) {
    // Email headers
    $headers = "From: Admin <" . ADMIN_EMAIL . ">" . "\r
";
    $headers .= "Content-Type: text/html; charset=utf-8\r
";

    // Email body
    $body = "
        <h1>Reset Your Password</h1>
        <p>Please click the link below to reset your password:</p>
        <a href='" . RESET_LINK . "?token=" . $token . "'>Reset Password</a>
    ";

    // Send email using mail() function
    mail($email, 'Reset Password', $body, $headers);
}

// Forgot password function
function forgotPassword($email) {
    // Generate a random token
    $token = generateToken();

    // Store the token in the database (replace with your own database functions)
    storeTokenInDatabase($email, $token);

    // Send reset email
    sendResetEmail($email, $token);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    if ($email) {
        forgotPassword($email);
        echo "An email has been sent to your account with a link to reset your password.";
    } else {
        echo "Invalid email address.";
    }
} else {
    ?>
    <h1>Forgot Password</h1>
    <form action="" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br><br>
        <button type="submit">Submit</button>
    </form>
    <?php
}

?>


CREATE TABLE users (
  id INT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  password_hash VARCHAR(255) NOT NULL
);


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to check if email exists in the database
function check_email_exists($email) {
  global $conn;
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    return true;
  } else {
    return false;
  }
}

// Function to generate a password reset token
function generate_token() {
  return bin2hex(random_bytes(32));
}

// Handle forgot password request
if (isset($_POST['forgot_password'])) {

  // Get email from form input
  $email = $_POST['email'];

  // Check if email exists in the database
  if (check_email_exists($email)) {

    // Generate a password reset token
    $token = generate_token();

    // Update user's token in the database
    $query = "UPDATE users SET password_reset_token = '$token' WHERE email = '$email'";
    $conn->query($query);

    // Send password reset email to user
    $subject = 'Password Reset Request';
    $body = 'Click on this link to reset your password: <a href="http://yourwebsite.com/reset_password.php?token=' . $token . '">Reset Password</a>';
    mail($email, $subject, $body);

    echo "Email sent with password reset link. Please check your inbox.";
  } else {
    echo "Email not found in the database.";
  }
}

// Close connection
$conn->close();

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to update password in the database
function update_password($token, $new_password) {
  global $conn;
  $query = "UPDATE users SET password_hash = '$new_password', password_reset_token = NULL WHERE password_reset_token = '$token'";
  $conn->query($query);

  if ($conn->affected_rows == 1) {
    return true;
  } else {
    return false;
  }
}

// Handle password reset request
if (isset($_POST['reset_password'])) {

  // Get token and new password from form input
  $token = $_GET['token'];
  $new_password = $_POST['new_password'];

  // Check if token exists in the database
  $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {

    // Update user's password in the database
    if (update_password($token, password_hash($new_password, PASSWORD_DEFAULT))) {
      echo "Password updated successfully.";
    } else {
      echo "Error updating password.";
    }
  } else {
    echo "Token not found in the database.";
  }
}

// Close connection
$conn->close();

?>


<?php

require_once 'vendor/autoload.php'; // Load PHPMailer library

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// Configuration
$mail = new PHPMailer(true);

$mail->isSMTP();
$mail->Host = 'smtp.example.com';
$mail->Port = 587;
$mail->Username = 'your_email@example.com';
$mail->Password = 'your_password';

$mail->setFrom('your_email@example.com', 'Your Name');

// Function to send password reset link via email
function forgot_password($email) {
    global $mail;

    // Retrieve user data from database
    $query = "SELECT id, password_hash FROM users WHERE email = :email";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($user = $stmt->fetch()) {
        // Generate new password and hash
        $new_password = bin2hex(random_bytes(16));
        $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);

        // Update user data in database
        $query = "UPDATE users SET password_hash = :password_hash WHERE id = :id";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':password_hash', $new_password_hash);
        $stmt->bindParam(':id', $user['id']);
        $stmt->execute();

        // Send email with password reset link
        $link = 'http://example.com/reset-password.php?id=' . $user['id'] . '&token=' . hash('sha256', $new_password);
        $mail->addAddress($email);
        $mail->Subject = 'Password Reset Link';
        $mail->Body = 'Click this link to reset your password: ' . $link;
        $mail->send();

        return $new_password; // Return new password
    } else {
        throw new Exception('User not found');
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    try {
        $new_password = forgot_password($email);
        echo "A password reset link has been sent to your email.";
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    // Display form
    ?>
    <form action="" method="post">
        <label>Email:</label>
        <input type="email" name="email" required>
        <button type="submit">Send Password Reset Link</button>
    </form>
    <?php
}


<?php

// Configuration
$db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');

// Retrieve user data from database using ID and token
$query = "SELECT * FROM users WHERE id = :id AND password_hash = :password_hash";
$stmt = $db->prepare($query);
$stmt->bindParam(':id', $_GET['id']);
$stmt->bindParam(':password_hash', hash('sha256', $_POST['token']));
$stmt->execute();

if ($user = $stmt->fetch()) {
    // Update user data in database
    $new_password = $_POST['new_password'];
    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password_hash = :password_hash WHERE id = :id";
    $stmt = $db->prepare($query);
    $stmt->bindParam(':password_hash', $new_password_hash);
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();

    echo "Your password has been updated successfully.";
} else {
    throw new Exception('Invalid token');
}
?>
<form action="" method="post">
    <label>New Password:</label>
    <input type="password" name="new_password" required>
    <button type="submit">Update Password</button>
</form>


<?php

// Configuration
$db_host = 'your_database_host';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to check if email exists in database
function emailExists($email) {
  global $conn;
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);
  return ($result->num_rows > 0);
}

// Function to send password reset email
function sendResetEmail($email, $passwordResetToken) {
  global $conn;
  $subject = 'Password Reset Request';
  $body = "Click the link below to reset your password:
http://yourwebsite.com/reset-password?token=$passwordResetToken";
  mail($email, $subject, $body);
}

// Function to update user's password
function updatePassword($email, $newPassword) {
  global $conn;
  $query = "UPDATE users SET password_hash = '$newPassword' WHERE email = '$email'";
  $conn->query($query);
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
  $email = $_POST['email'];

  // Check if email exists in database
  if (emailExists($email)) {
    // Generate random password reset token
    $passwordResetToken = bin2hex(random_bytes(32));

    // Update user's password to be a temporary token
    updatePassword($email, $passwordResetToken);

    // Send password reset email
    sendResetEmail($email, $passwordResetToken);
  } else {
    echo "Email not found.";
  }
}

?>


<?php

// Configuration
$db_host = 'your_database_host';
$db_username = 'your_database_username';
$db_password = 'your_database_password';
$db_name = 'your_database_name';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to verify password reset token
function verifyToken($token) {
  global $conn;
  $query = "SELECT * FROM users WHERE password_hash = '$token'";
  $result = $conn->query($query);
  return ($result->num_rows > 0);
}

// Handle password reset form submission
if (isset($_POST['reset_password'])) {
  $token = $_POST['token'];
  $newPassword = $_POST['new_password'];

  // Verify password reset token
  if (verifyToken($token)) {
    // Update user's password to new password
    updatePassword($email, $newPassword);
  } else {
    echo "Invalid token.";
  }
}

?>


<?php

// Include database connection settings
require_once 'db_config.php';

// Set error reporting to display any errors
error_reporting(E_ALL);

// Check if user submitted the form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Form fields: email, token (for security)
    $email = $_POST['email'];
    $token = $_POST['token'];

    // Validate form data
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        exit;
    }

    // Retrieve user's hashed password and reset token from database
    try {
        $sql = "SELECT id, password_reset_token FROM users WHERE email = :email";
        $stmt = $db->prepare($sql);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user_data) {
            // Compare reset tokens
            if (hash('sha256', $_POST['token']) == $user_data['password_reset_token']) {
                // Update user's password and generate new reset token
                $new_password = hash('sha256', random_bytes(32));
                $new_token = hash('sha256', random_bytes(32));

                try {
                    $sql = "UPDATE users SET password = :new_password, password_reset_token = :new_token WHERE email = :email";
                    $stmt = $db->prepare($sql);
                    $stmt->bindParam(':new_password', $new_password);
                    $stmt->bindParam(':new_token', $new_token);
                    $stmt->bindParam(':email', $email);
                    $stmt->execute();

                    // Send password reset instructions via email
                    $subject = "Password Reset Instructions";
                    $body = "Dear user, your new password is: $new_password. Please log in with this password.";
                    mail($email, $subject, $body);

                    echo "Password updated successfully! New password sent to your email.";
                } catch (PDOException $e) {
                    echo "Error updating password: " . $e->getMessage();
                }
            } else {
                echo "Invalid reset token";
            }

        } else {
            echo "Email address not found in database";
        }

    } catch (PDOException $e) {
        echo "Database error: " . $e->getMessage();
    }

} // End of form submission check

?>


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
  die("Connection failed: " . mysqli_error($conn));
}

// Function to send email with reset link
function send_reset_email($email, $reset_token) {
  // Send an email to the user with a reset link
  $subject = 'Reset Your Password';
  $body = '<p>Please click on the following link to reset your password:</p><p><a href="' . site_url('reset_password', array('token' => $reset_token)) . '">Reset Password</a></p>';
  mail($email, $subject, $body);
}

// Function to create and store a reset token
function create_reset_token() {
  // Generate a random string for the reset token
  $reset_token = bin2hex(random_bytes(32));
  return $reset_token;
}

// Function to send email with reset link
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);
  if (mysqli_num_rows($result) > 0) {
    // Get the user's row
    $user_row = mysqli_fetch_assoc($result);

    // Create a reset token and store it in the database
    $reset_token = create_reset_token();
    $query = "UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'";
    mysqli_query($conn, $query);

    // Send an email with a reset link
    send_reset_email($email, $reset_token);
    echo 'Email sent to <strong>' . $email . '</strong> with a password reset link. Please check your email.';
  } else {
    echo 'Email not found. Try again!';
  }
} else {
  // Display the form
?>

<form action="<?php echo site_url('forgot_password', array('method' => 'post')); ?>" method="post">
  <label for="email">Enter your email:</label>
  <input type="email" id="email" name="email" required>
  <button type="submit">Send Reset Link</button>
</form>

<?php
}
?>


<?php

// Configuration settings
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Check if form has been submitted
if (isset($_POST['email'])) {

    // Get user's email from form data
    $email = $_POST['email'];

    // SQL query to retrieve user's information
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);

    if ($result->num_rows > 0) {

        // Retrieve user's information
        while ($row = $result->fetch_assoc()) {
            $user_id = $row['id'];
            $username = $row['username'];
            $email = $row['email'];

            // Generate a password reset token (random string)
            $token = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 32);

            // Update user's information with new token
            $update_query = "UPDATE users SET token = '$token' WHERE id = '$user_id'";
            $mysqli->query($update_query);

            // Send email to user with password reset link
            $to = $email;
            $subject = 'Password Reset Link';
            $message = '<p>Click on the following link to reset your password:</p><a href="http://' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '">Reset Password</a>';
            mail($to, $subject, $message);

            echo 'A password reset email has been sent to your email address.';
        }
    } else {
        echo 'No user found with that email address.';
    }

} else {

    // Form not submitted, display form
    ?>

    <h1>Forgot Password</h1>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="text" id="email" name="email" required><br><br>
        <input type="submit" value="Submit">
    </form>

    <?php
}

// Close database connection
$mysqli->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function send_password_reset_email($email, $username) {
    // Generate a random token for the user
    $token = bin2hex(random_bytes(32));

    // Update the user's database record with the new token
    $query = "UPDATE users SET password_token = '$token' WHERE email = '$email'";
    if ($conn->query($query) === TRUE) {
        // Send email to user with password reset link
        $subject = 'Reset Your Password';
        $body = "
            Dear $username,
            
            You have requested to reset your password. Please click on the following link to reset your password:
            <a href='http://your_site.com/reset-password.php?token=$token'>Reset Password</a>
        
            If you did not request a password reset, please ignore this email.
        ";
        $from = 'your_email@example.com';
        $to = $email;
        mail($to, $subject, $body, "From: $from");

        echo "Email sent successfully.";
    } else {
        echo "Error updating user record: " . $conn->error;
    }
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
    // Get email address from input field
    $email = $_POST['email'];

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Get user's username from database record
        while ($row = $result->fetch_assoc()) {
            $username = $row['username'];

            // Send password reset email to user
            send_password_reset_email($email, $username);
        }
    } else {
        echo "Email address not found in database.";
    }
}

// Close database connection
$conn->close();

?>


<?php

// Configuration settings
define('DB_HOST', 'your_host');
define('DB_USER', 'your_user');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to update user's password
function update_password($token, $new_password) {
    // Get user's database record using token
    $query = "SELECT * FROM users WHERE password_token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Update user's password in database
            $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);
            $query = "UPDATE users SET password = '$new_password_hash' WHERE id = '$row[id]'";
            if ($conn->query($query) === TRUE) {
                echo "Password updated successfully.";
            } else {
                echo "Error updating user record: " . $conn->error;
            }
        }
    } else {
        echo "Invalid token.";
    }
}

// Handle password reset form submission
if (isset($_POST['reset_password'])) {
    // Get token and new password from input fields
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];

    // Update user's password in database using token
    update_password($token, $new_password);
}

// Close database connection
$conn->close();

?>


<?php

// Config variables
define('SITE_EMAIL', 'your@email.com');
define('PASSWORD_RESET_LINK_EXPIRATION_TIME', 3600); // 1 hour

// Function to send password reset link via email
function sendPasswordResetEmail($email) {
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Get the user's data
        $row = mysqli_fetch_assoc($result);
        
        // Generate a random password reset token
        $token = bin2hex(random_bytes(32));
        
        // Insert the token into the database with expiration time
        $query = "INSERT INTO password_reset_tokens (user_id, token, created_at) VALUES ('$row[id]', '$token', NOW())";
        mysqli_query($conn, $query);
        
        // Send email to user with reset link
        $to = $email;
        $subject = 'Reset your password';
        $body = "Click on the following link to reset your password: <a href='" . SITE_URL . "/reset-password.php?token=$token'>Reset Password</a>";
        mail($to, $subject, $body);
        
        echo "Email sent successfully!";
    } else {
        echo "User not found.";
    }
}

// Forgot password form handler
if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];
    
    if (!empty($email)) {
        sendPasswordResetEmail($email);
    } else {
        echo "Please enter your email address.";
    }
} ?>


<?php

// Check if the token is valid
if (isset($_GET['token'])) {
    $query = "SELECT * FROM password_reset_tokens WHERE token = '".$_GET['token']."'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Get the user's data
        $row = mysqli_fetch_assoc($result);
        
        // Check if the token has expired
        if (time() - strtotime($row['created_at']) < PASSWORD_RESET_LINK_EXPIRATION_TIME) {
            // Display password reset form
            echo "Enter new password: <input type='password' name='new_password'><br><br>";
            echo "<button name='reset_password'>Reset Password</button>";
            
            if (isset($_POST['reset_password'])) {
                $new_password = $_POST['new_password'];
                
                // Hash the new password
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                
                // Update the user's password in database
                $query = "UPDATE users SET password_hash = '$hashed_password' WHERE id = '$row[id]'";
                mysqli_query($conn, $query);
                
                echo "Password reset successfully!";
            }
        } else {
            echo "Token has expired. Please request a new token.";
        }
    } else {
        echo "Invalid token.";
    }
} ?>


<?php

// Database connection settings
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Email configuration
define('EMAIL_ADDRESS', 'your_email_address');
define('EMAIL_PASSWORD', 'your_email_password');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user input
$email = $_POST['email'];

// Check if email exists in database
$query = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    // Email found, generate new password and send it via email
    $newPassword = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);
    
    // Update user's password in database
    $updateQuery = "UPDATE users SET password = '$newPassword' WHERE email = '$email'";
    $conn->query($updateQuery);

    // Send new password via email using PHPMailer (or a similar library)
    require_once 'PHPMailer/src/PHPMailer.php';
    $mail = new PHPMailer\PHPMailer\PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com';
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = EMAIL_ADDRESS;
    $mail->Password = EMAIL_PASSWORD;
    $mail->setFrom(EMAIL_ADDRESS, 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'New Password for Your Account';
    $mail->Body = 'Your new password is: ' . $newPassword;
    if (!$mail->send()) {
        echo 'Error sending email';
        exit();
    }
    
    echo 'A new password has been sent to your email.';
} else {
    echo 'Email not found in database.';
}

// Close database connection
$conn->close();

?>


<?php

?>

<h1>Forgot Password</h1>

<form action="forgot_password.php" method="post">
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  <button type="submit">Submit</button>
</form>



<?php

// Configuration
define('PASSWORD_SALT', 'your_password_salt_here');
define('RESET_TOKEN_EXPIRE_HOURS', 1);

// Function to generate reset token
function generateResetToken() {
  return bin2hex(random_bytes(32));
}

// Function to send password reset email
function sendPasswordResetEmail($email, $reset_token) {
  // Use a library like SwiftMailer or PHPMailer to send the email
  // For this example, we'll use a simple email sending function
  $subject = 'Password Reset Request';
  $message = "Dear user,

You have requested a password reset. Please click on the following link to reset your password:
";
  $message .= "<a href='http://yourwebsite.com/reset-password?token=$reset_token'>Reset Password</a>";
  mail($email, $subject, $message);
}

// Handle forgot password request
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  // Get the user's email address
  $email = $_POST['email'];
  
  // Check if the email is valid
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    header('Location: /forgot-password?error=Invalid+email+address');
    exit;
  }
  
  // Find the user in the database
  $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->execute(['email' => $email]);
  $user = $stmt->fetch();
  
  if ($user) {
    // Generate a new reset token
    $reset_token = generateResetToken();
    
    // Store the reset token in the user's record
    $pdo->exec("UPDATE users SET reset_token = '$reset_token', reset_expires_at = CURRENT_TIMESTAMP + INTERVAL " . RESET_TOKEN_EXPIRE_HOURS . " HOUR WHERE id = :id", ['id' => $user['id']]);
    
    // Send a password reset email to the user
    sendPasswordResetEmail($email, $reset_token);
    
    header('Location: /forgot-password?success=Password+reset+email+sent');
  } else {
    header('Location: /forgot-password?error=User+not+found');
  }
} else {
  // Display the forgot password form
  ?>
  <h1>Forgot Password</h1>
  <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label>
    <input type="text" name="email" id="email"><br><br>
    <button type="submit">Send Reset Email</button>
  </form>
  <?php
}

?>


<?php
// Include the database connection settings
require_once 'db-config.php';

// Set up form handling and error handling
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);

    // Validate user input
    if (empty($username) || empty($email)) {
        echo "Error: Both username and email are required.";
        exit;
    }

    // Retrieve the user data from the database
    try {
        $query = "SELECT * FROM users WHERE username = :username OR email = :email";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);

        if ($stmt->execute()) {
            $user = $stmt->fetch();

            // If a user exists, generate a reset token and send the password reset email
            if (!empty($user)) {
                // Generate a random reset token (replace with your own logic)
                $resetToken = bin2hex(random_bytes(32));

                // Update the user's reset token in the database
                try {
                    $query = "UPDATE users SET reset_token = :resetToken WHERE id = :id";
                    $stmt = $db->prepare($query);
                    $stmt->bindParam(':resetToken', $resetToken);
                    $stmt->bindParam(':id', $user['id']);

                    if ($stmt->execute()) {
                        // Send the password reset email
                        sendPasswordResetEmail($email, $resetToken);

                        echo "A password reset link has been sent to your email address.";
                    } else {
                        throw new Exception("Error: Unable to update user data.");
                    }
                } catch (Exception $e) {
                    // Handle database errors
                    echo "Database Error: " . $e->getMessage();
                }
            } else {
                echo "Error: User not found with provided credentials.";
            }
        } else {
            throw new Exception("Error: Database query failed.");
        }
    } catch (Exception $e) {
        // Handle SQL errors
        echo "Database Error: " . $e->getMessage();
    }
}

function sendPasswordResetEmail($email, $resetToken)
{
    // Email template for the password reset link
    $subject = 'Reset Your Password';
    $body = "<p>Click on the following link to reset your password:</p><p><a href='http://example.com/reset-password.php?token=" . $resetToken . "'>" . $resetToken . "</a></p>";

    // Send the email (use a library like PHPMailer for a secure implementation)
    mail($email, $subject, $body);
}
?>


<?php
// Include the database connection settings
require_once 'db-config.php';

// Set up form handling and error handling
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Retrieve the reset token from the URL query string
    $token = $_GET['token'];

    // Validate user input (e.g., password, confirm password)
    if (empty($_POST['password'])) {
        echo "Error: Password is required.";
        exit;
    }

    // Update the user's password and reset token in the database
    try {
        $query = "UPDATE users SET password_hash = :passwordHash, reset_token = '' WHERE reset_token = :resetToken";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':passwordHash', $_POST['password']);
        $stmt->bindParam(':resetToken', $token);

        if ($stmt->execute()) {
            echo "Password updated successfully.";
        } else {
            throw new Exception("Error: Unable to update user data.");
        }
    } catch (Exception $e) {
        // Handle database errors
        echo "Database Error: " . $e->getMessage();
    }
}
?>


<?php

// Configuration
$database = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($database, $username, $password);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendResetEmail($email) {
  // Email configuration (replace with your SMTP settings)
  $server = 'your_smtp_server';
  $port = 587;
  $username = 'your_email_username';
  $password = 'your_email_password';

  // Mail transport settings
  $transport = Swift_SmtpTransport::newInstance($server, $port)
    ->setUsername($username)
    ->setPassword($password);

  // Create a message
  $message = Swift_Message::newInstance()
    ->setSubject('Reset your password')
    ->setFrom(array('your_email@example.com' => 'Your Name'))
    ->setTo(array($email))
    ->setBody('Click this link to reset your password: <a href="' . $_SERVER['REQUEST_URI'] . '?reset=' . md5($email) . '">Reset Password</a>');

  // Send the email
  $mailer = Swift_Mailer::newInstance($transport);
  if ($mailer->send($message)) {
    return true;
  } else {
    return false;
  }
}

// Handle forgot password form submission
if (isset($_POST['forgot_password'])) {
  $email = $_POST['email'];

  // Validate email address
  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo 'Invalid email address';
    exit();
  }

  // Query database for user with matching email address
  $sql = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($sql);
  $user = $result->fetch_assoc();

  if ($user) {
    // Send password reset email
    sendResetEmail($email);

    echo 'Password reset link has been sent to your email';
  } else {
    echo 'No user with that email address exists';
  }
}

// Display forgot password form
?>
<form action="" method="post">
  <input type="email" name="email" placeholder="Enter your email address">
  <button type="submit" name="forgot_password">Forgot Password</button>
</form>


<?php

// Configuration
define('DB_HOST', 'your_database_host');
define('DB_USERNAME', 'your_database_username');
define('DB_PASSWORD', 'your_database_password');
define('DB_NAME', 'your_database_name');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Define variables
$email = $_POST['email'];

// Validate email
if (empty($email)) {
    echo 'Please enter your email address.';
    exit;
}

// Check if user exists
$sql = "SELECT * FROM users WHERE email = '$email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User found, generate new password and send to email
    $new_password = bin2hex(random_bytes(32));
    $sql = "UPDATE users SET password_hash = SHA2('$new_password', 512) WHERE email = '$email'";
    $conn->query($sql);

    // Send email with new password
    $to = $email;
    $subject = 'Your new password is: ' . $new_password;
    $message = 'Your new password is: ' . $new_password;
    $headers = 'From: your_email@example.com' . "\r
" .
        'Reply-To: your_email@example.com' . "\r
" .
        'X-Mailer: PHP/' . phpversion();
    mail($to, $subject, $message, $headers);

    echo 'Your new password has been sent to ' . $email;
} else {
    echo 'User not found.';
}

$conn->close();

?>


<?php
require_once 'dbconnect.php'; // database connection file

if (isset($_POST['forgot_password'])) {
    $email = $_POST['email'];

    // Check if the email is valid and exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Generate a random token for password reset
        $token = bin2hex(random_bytes(32));

        // Update the user's record with the new token
        $update_query = "UPDATE users SET token = '$token' WHERE email = '$email'";
        mysqli_query($conn, $update_query);

        // Send an email to the user with a link to reset their password
        $subject = 'Reset Your Password';
        $message = "
            <html>
                <body>
                    <p>Click on this link to reset your password:</p>
                    <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>
                </body>
            </html>
        ";

        // Send the email
        $headers = 'MIME-Version: 1.0' . "\r
";
        $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
        $headers .= 'From: no-reply@example.com' . "\r
";

        mail($email, $subject, $message, $headers);

        echo '<script>alert("Email sent to reset password!"); window.location.href = "login.php";</script>';
    } else {
        echo '<script>alert("Invalid email or not registered!"); window.location.href = "login.php";</script>';
    }
}
?>


<?php
require_once 'dbconnect.php'; // database connection file

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if the token is valid and exists in the database
    $query = "SELECT * FROM users WHERE token = '$token'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // If the user's record is found, update their password with the new one they entered
        echo '
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <input type="password" name="new_password">
                <button type="submit">Change Password</button>
            </form>
        ';

        if (isset($_POST['change_password'])) {
            $new_password = $_POST['new_password'];

            // Hash the new password and update the user's record
            $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);
            $update_query = "UPDATE users SET password = '$hashed_new_password' WHERE token = '$token'";
            mysqli_query($conn, $update_query);

            echo '<script>alert("Password changed!"); window.location.href = "login.php";</script>';
        }
    } else {
        echo 'Invalid Token';
    }
}
?>


<?php
$conn = mysqli_connect('localhost', 'username', 'password', 'database_name');
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function query($query) {
    global $conn;
    return mysqli_query($conn, $query);
}
?>


<?php

// Configuration variables (update these to match your database)
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendResetEmail($user_id, $token) {
  // Send email with reset link (using a library like PHPMailer or SwiftMailer)
  $email = 'your_email@example.com';
  $subject = 'Password Reset Link';

  $body = '
    <p>Hello!</p>
    <p>Click the link below to reset your password:</p>
    <a href="' . $_SERVER['HTTP_HOST'] . '/reset-password/' . $token . '">Reset Password</a>
  ';

  // Send email using your chosen library
}

function generateRandomToken() {
  return bin2hex(random_bytes(32));
}

function createPasswordResetToken($user_id) {
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);
  
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  $token = generateRandomToken();
  $expires_at = date('Y-m-d H:i:s', strtotime('+1 day'));

  $stmt = $conn->prepare('INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES (?, ?, ?)');
  $stmt->bind_param('is', $user_id, $token, $expires_at);
  $stmt->execute();

  return $token;
}

function forgotPassword($email) {
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  $stmt = $conn->prepare('SELECT id FROM users WHERE email = ?');
  $stmt->bind_param('s', $email);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows > 0) {
    $user_id = $result->fetch_assoc()['id'];
    
    $token = createPasswordResetToken($user_id);
    
    sendResetEmail($user_id, $token);

    echo 'A password reset link has been sent to your email.';
  } else {
    echo 'User not found.';
  }
}

?>


forgotPassword('user@example.com');


function resetPassword($token) {
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  $stmt = $conn->prepare('SELECT user_id FROM password_reset_tokens WHERE token = ? AND expires_at > NOW()');
  $stmt->bind_param('s', $token);
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows > 0) {
    $user_id = $result->fetch_assoc()['user_id'];

    // Prompt user to enter new password
    $new_password = $_POST['new_password'];
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    $stmt = $conn->prepare('UPDATE users SET password_hash = ? WHERE id = ?');
    $stmt->bind_param('si', $hashed_password, $user_id);
    $stmt->execute();

    // Delete password reset token
    $stmt = $conn->prepare('DELETE FROM password_reset_tokens WHERE user_id = ? AND token = ?');
    $stmt->bind_param('ii', $user_id, $token);
    $stmt->execute();

    echo 'Password reset successfully!';
  } else {
    echo 'Invalid or expired token.';
  }
}


<?php

require_once 'config.php'; // Load your database connection settings

if (isset($_POST['submit'])) {
  $email = $_POST['email'];

  try {
    // Get user data from database
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->execute([':email' => $email]);
    $user = $stmt->fetch();

    if ($user) {
      // Generate a new password and send it to the user's email address
      $new_password = generatePassword();
      mail($email, 'Reset Password', 'New Password: ' . $new_password);

      // Update the user's password in the database
      $stmt = $pdo->prepare('UPDATE users SET password_hash = :password WHERE id = :id');
      $stmt->execute([':password' => hash('sha256', $new_password), ':id' => $user['id']]);

      echo 'New password sent to your email address.';
    } else {
      echo 'Email not found in our database.';
    }
  } catch (PDOException $e) {
    echo 'Error sending new password: ' . $e->getMessage();
  }
}

function generatePassword() {
  // Generate a random password using a combination of letters and numbers
  $password = '';
  for ($i = 0; $i < 10; $i++) {
    $charType = rand(1, 2); // Randomly select between letter and number
    if ($charType == 1) { // Letter
      $password .= chr(rand(65, 90)); // Uppercase letter
    } else { // Number
      $password .= rand(0, 9);
    }
  }
  return $password;
}

?>


<?php

// Configuration
define('RESET_TOKEN_EXPIRE', 60); // Token expiration time in minutes
define('PASSWORD_RESET_TEMPLATE_DIR', 'path/to/template/directory');

// Function to send password reset email
function send_reset_email($email, $name) {
    $token = bin2hex(random_bytes(32));
    $reset_token = array(
        "user_id" => get_user_id_by_email($email),
        "token" => $token,
        "expires_at" => date("Y-m-d H:i:s", time() + (RESET_TOKEN_EXPIRE * 60))
    );
    
    // Update reset token in database
    update_reset_token($reset_token);
    
    // Send email with reset link
    send_email_with_reset_link($email, $name, $token);
}

// Function to send password reset email
function send_email_with_reset_link($to_email, $username, $token) {
    $subject = "Password Reset for Your Account";
    $body = "Please click on this link to reset your password: <a href='" . URLROOT . "/reset-password/" . $token . "'>" . URLROOT . "/reset-password/" . $token . "</a>";
    
    // Implement actual email sending logic here. For example using PHPMailer or SwiftMailer
}

// Function to handle password reset form submission
function handle_password_reset_submission($email, $password) {
    $user = get_user_by_email($email);
    if ($user) {
        update_password($user['id'], $password);
        
        // After updating the user's password, consider deleting their reset token.
        delete_reset_token($user['id']);
        
        return true; // Password updated successfully
    }
    
    return false;
}

// Function to retrieve a user by email (helper function)
function get_user_by_email($email) {
    $conn = mysqli_connect("localhost", "username", "password", "database");
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Query to retrieve user data
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    if (mysqli_num_rows($result) > 0) {
        return mysqli_fetch_assoc($result);
    } else {
        return null;
    }
}

// Function to retrieve a user's id by email (helper function)
function get_user_id_by_email($email) {
    $user = get_user_by_email($email);
    if ($user) {
        return $user['id'];
    } else {
        return null;
    }
}

// Function to update password
function update_password($user_id, $password) {
    // Update user's password here using your chosen hashing method.
}

// Function to update reset token in database (helper function)
function update_reset_token($token) {
    $conn = mysqli_connect("localhost", "username", "password", "database");
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Insert new or update existing reset token
}

// Function to delete a reset token (helper function)
function delete_reset_token($user_id) {
    $conn = mysqli_connect("localhost", "username", "password", "database");
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Delete the reset token associated with a user
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    send_reset_email($email, '');
}

?>


<?php

// Include database connection file
require_once 'db_connection.php';

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user input
  $email = $_POST['email'];

  // Validate email
  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }

  // Query database for user with matching email
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = mysqli_query($conn, $query);

  if (mysqli_num_rows($result) > 0) {
    // Retrieve user data
    $user_data = mysqli_fetch_assoc($result);

    // Generate random password and send it to the user's email
    $new_password = bin2hex(random_bytes(16));
    $subject = "Your new password";
    $message = "
      <p>Hello $user_data[username],</p>
      <p>Your new password is: $new_password</p>
      <p>Please log in with this new password.</p>
    ";
    mail($email, $subject, $message);

    // Update user's password
    $query = "UPDATE users SET password = '$new_password' WHERE email = '$email'";
    mysqli_query($conn, $query);

    echo "New password has been sent to your email.";
  } else {
    echo "No user found with this email address.";
  }
}

// Close database connection
mysqli_close($conn);


// Define a function to reset passwords
function forgot_password($username, $email) {
    // Check if the user exists
    $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        return 'User not found';
    }

    // Generate a reset token and store it in the database
    $reset_token = bin2hex(random_bytes(16));
    $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE username = '$username'";
    mysqli_query($conn, $update_query);

    // Send an email with the reset link
    send_reset_email($email, $reset_token);
}

// Define a function to send the reset email
function send_reset_email($email, $reset_token) {
    // Set up mail server credentials (replace with your own)
    $server = 'smtp.gmail.com';
    $port = 587;
    $username = 'your-email@gmail.com';
    $password = 'your-password';

    // Compose the email
    $subject = 'Reset Password Link';
    $body = "Click this link to reset your password: <a href='https://example.com/reset-password?token=$reset_token'>Reset Password</a>";

    try {
        // Send the email using mail()
        mail($email, $subject, $body, "From: $username");
        echo 'Email sent successfully!';
    } catch (Exception $e) {
        echo 'Error sending email: ' . $e->getMessage();
    }
}

// Example usage:
$username = 'johndoe';
$email = 'john@example.com';

forgot_password($username, $email);


<?php

// Configuration settings
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
try {
    $pdo = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASSWORD);
} catch (PDOException $e) {
    exit('Error: ' . $e->getMessage());
}

// Form submission handling
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get form data
    $email = $_POST['email'];

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address.";
        exit;
    }

    // Find user by email address
    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // Get the result
    $user = $stmt->fetch();

    if (!$user) {
        echo "Email not found.";
        exit;
    }

    // Generate new password and send to user via email
    $newPassword = substr(md5(uniqid(mt_rand(), true)), 0, 8);
    $to      = $email;
    $subject = 'Your New Password';
    $message = 'New password: ' . $newPassword;
    $headers = 'From: your_email@example.com' . "\r
" .
        'Reply-To: no-reply@example.com' . "\r
" .
        'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $message, $headers);

    echo "A new password has been sent to your email address.";
} else {

?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }
    </style>
</head>

<body>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Email Address: <br>
    <input type="text" name="email"><br><br>
    <input type="submit" value="Submit">
</form>

<?php } ?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Function to send reset password email
function send_reset_email($email) {
    // Replace with your own mail server configuration
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';

    // Set email content
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Reset Your Password';
    $mail->Body = '
        Hello!

        To reset your password, please click on the following link:
        <a href="' . htmlspecialchars($_SERVER['HTTP_HOST'] . '/reset_password.php?email=' . urlencode($email)) . '">Reset Password</a>
    ';

    // Send email
    if (!$mail->send()) {
        echo 'Mailer Error: ' . $mail->ErrorInfo;
    }
}

// Function to reset password
function reset_password($email) {
    // Retrieve user ID from database
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $user_id = $row['id'];

        // Generate new password and hash it
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);
        $password_hash = password_hash($new_password, PASSWORD_DEFAULT);

        // Update user password in database
        $query = "UPDATE users SET password_hash = '$password_hash' WHERE id = '$user_id'";
        $mysqli->query($query);

        return $new_password;
    } else {
        return null;
    }
}

// Handle forgot password form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $mysqli->query($query);

    if ($result->num_rows > 0) {
        send_reset_email($email);
        echo 'Reset password link sent to your email.';
    } else {
        echo 'Email not found in database.';
    }
}

// Close database connection
$mysqli->close();

?>


<?php

// Configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Retrieve user ID from database
$email = $_GET['email'];
$query = "SELECT id FROM users WHERE email = '$email'";
$result = $mysqli->query($query);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $user_id = $row['id'];

    // Retrieve new password from database
    $query = "SELECT password_hash FROM users WHERE id = '$user_id'";
    $password_result = $mysqli->query($query);
    $new_password_row = $password_result->fetch_assoc();

    echo 'Your new password is: <strong>' . $new_password_row['password_hash'] . '</strong>';
} else {
    echo 'Email not found in database.';
}

// Close database connection
$mysqli->close();

?>


<?php
// Include the database connection settings (replace with your own)
require_once 'config.php';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the email from the form input
    $email = $_POST['email'];

    // Validate the email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // Query to get the user's ID and password hash (for security)
    $query = "SELECT id, password FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    // Check if a user with that email exists
    if (mysqli_num_rows($result) == 1) {
        // Get the user's ID and password hash
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];
        $passwordHash = $row['password'];

        // Generate a random token for password reset
        $token = bin2hex(random_bytes(32));

        // Insert the token into the database (replace with your own table name)
        $query = "INSERT INTO password_reset_tokens (user_id, token) VALUES ('$userId', '$token')";
        mysqli_query($conn, $query);

        // Send an email with a link to reset the password
        $subject = 'Reset Your Password';
        $body = '
            <p>Hello,' . $email . ',</p>
            <p>To reset your password, click on this link:</p>
            <a href="http://yourwebsite.com/reset_password.php?token=' . $token . '">Reset Password</a>
        ';
        sendEmail($email, $subject, $body);
    } else {
        echo 'No user found with that email address';
    }
}

// Function to send an email using PHPMailer (replace with your own mail function)
function sendEmail($to, $subject, $body) {
    require_once 'PHPMailer/src/Exception.php';
    require_once 'PHPMailer/src/PHPMailer.php';
    require_once 'PHPMailer/src/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();

    try {
        $mail->isSMTP();
        $mail->Host = 'smtp.gmail.com'; // Replace with your own SMTP server
        $mail->Port = 587;
        $mail->SMTPAuth = true;
        $mail->Username = 'your-email@gmail.com';
        $mail->Password = 'your-password';

        $mail->setFrom('your-email@gmail.com', 'Your Name');
        $mail->addAddress($to);
        $mail->Subject = $subject;
        $mail->Body = $body;

        if (!$mail->send()) {
            throw new Exception('Error sending email: ' . $mail->ErrorInfo);
        }
    } catch (Exception $e) {
        echo 'Email not sent: ' . $e->getMessage();
    }
}
?>


<?php
// Check if the token has been passed in the URL
$token = $_GET['token'];

// Query to get the user's ID from the database (replace with your own table name)
$query = "SELECT id FROM password_reset_tokens WHERE token = '$token'";
$result = mysqli_query($conn, $query);

// Check if a valid token exists for this user
if (mysqli_num_rows($result) == 1) {
    // Get the user's ID
    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];

    // Display the password reset form
    echo '
        <form action="reset_password.php" method="post">
            <label for="password">New Password:</label>
            <input type="password" id="password" name="password"><br><br>
            <button type="submit" class="btn btn-primary">Reset Password</button>
        </form>
    ';

    // Check if the form has been submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get the new password from the form input
        $newPassword = $_POST['password'];

        // Query to update the user's password (replace with your own table name)
        $query = "UPDATE users SET password = '$newPassword' WHERE id = '$userId'";
        mysqli_query($conn, $query);

        // Remove the token from the database
        $query = "DELETE FROM password_reset_tokens WHERE token = '$token'";
        mysqli_query($conn, $query);

        echo 'Your password has been reset successfully!';
    }
} else {
    echo 'Invalid or expired token';
}
?>


<?php

// Assuming we have a database connection object called $db

function forgot_password($username, $email) {
  // Retrieve user data from database based on username and email
  $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($db, $query);
  
  if (mysqli_num_rows($result) > 0) {
    // Generate a reset token and store it in the user's record
    $reset_token = bin2hex(random_bytes(16));
    $update_query = "UPDATE users SET reset_token = '$reset_token' WHERE username = '$username' AND email = '$email'";
    mysqli_query($db, $update_query);
    
    // Send an email to the user with a password reset link
    send_password_reset_email($email, $reset_token);
  } else {
    echo "Username and/or email not found.";
  }
}

function send_password_reset_email($email, $reset_token) {
  // Generate a password reset link (e.g., https://example.com/reset-password?token=xyz123)
  $reset_link = "https://example.com/reset-password?token=$reset_token";
  
  // Send an email to the user with instructions on how to reset their password
  $subject = "Reset Your Password";
  $body = "
    <p>Hello $username,</p>
    <p>To reset your password, please click on this link:</p>
    <a href='$reset_link'>$reset_link</a>
  ";
  
  // Use a library like PHPMailer or SwiftMailer to send the email
}

// Example usage:
forgot_password("john", "john@example.com");

?>


<?php

function reset_password($token) {
  // Retrieve the user's data from database based on the token
  $query = "SELECT * FROM users WHERE reset_token = '$token'";
  $result = mysqli_query($db, $query);
  
  if (mysqli_num_rows($result) > 0) {
    // Update the user's password in the database
    $new_password = trim($_POST['password']);
    $hash_password = hash_password($new_password); // Use a library like PHPass or bcrypt to hash the password
    $update_query = "UPDATE users SET password = '$hash_password', reset_token = '' WHERE reset_token = '$token'";
    mysqli_query($db, $update_query);
    
    echo "Password updated successfully!";
  } else {
    echo "Invalid token.";
  }
}

function hash_password($password) {
  // Use a library like PHPass or bcrypt to hash the password
}

// Example usage:
if (isset($_POST['token'])) {
  reset_password(trim($_POST['token']));
}
?>


<?php

require 'db.php'; // Include your database connection script here.

function sendPasswordResetEmail($username, $token) {
    $emailBody = "Click on this link to reset your password: <a href='" . url('reset_password', array('token' => $token)) . "'>" . url('reset_password', array('token' => $token)) . "</a>";
    // Send the email using PHPMailer or a similar library, using $username's email address.
}

function handleForgotPasswordRequest() {
  global $db;

  $username = $_POST['username'];
  $email = $_POST['email'];

  if (empty($username) || empty($email)) {
      echo "Please enter both your username and email.";
      exit;
  }

  // Find the user in the database
  $query = "SELECT * FROM users WHERE username = '$username' AND email = '$email'";
  $result = mysqli_query($db, $query);

  if (mysqli_num_rows($result) == 0) {
      echo "Username or email not found.";
      exit;
  }

  // Generate a password reset token
  $token = bin2hex(random_bytes(16));

  // Update the user's entry in the database to include their new token and expiration time
  $query = "UPDATE users SET password_reset_token = '$token', reset_expires_at = NOW() + INTERVAL 1 DAY WHERE username = '$username' AND email = '$email'";
  mysqli_query($db, $query);

  sendPasswordResetEmail($username, $token);
}

if (isset($_POST['submit'])) {
    handleForgotPasswordRequest();
}
?>


// Include the database connection settings
include 'db_config.php';

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Extract the username from the form data
    $username = $_POST['username'];

    // Query the database to retrieve the user's email and password
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        // Retrieve the user's email and password from the result set
        $row = mysqli_fetch_assoc($result);
        $email = $row['email'];
        $password = $row['password'];

        // Generate a random password reset token
        $token = bin2hex(random_bytes(16));

        // Update the user's database record with the new password reset token
        $query = "UPDATE users SET password_reset_token = '$token' WHERE username = '$username'";
        mysqli_query($conn, $query);

        // Send an email to the user with a link to reset their password
        send_password_reset_email($email, $token);
    } else {
        echo 'Error: Username not found';
    }
}

// Function to send a password reset email
function send_password_reset_email($email, $token) {
    // Define the email template
    $subject = 'Reset Your Password';
    $body = '
    <p>Dear '.$username.',</p>
    <p>You are receiving this email because we received a request to reset your password.</p>
    <p>To reset your password, click on the following link:</p>
    <a href="' . base_url('reset_password.php?token=' . $token) . '">Reset Password</a>
    ';

    // Send the email using PHPMailer or your preferred email library
    mail($email, $subject, $body);
}


<?php

// Configuration
$dsn = 'mysql:host=localhost;dbname=your_database';
$username = 'your_username';
$password = 'your_password';

// Database Connection
try {
    $conn = new PDO($dsn, $username, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

// Forgot Password Form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo 'Invalid email address';
        exit;
    }

    // Query database to retrieve user data
    try {
        $stmt = $conn->prepare('SELECT * FROM users WHERE email = :email');
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() == 0) {
            echo 'Email not found';
            exit;
        }

        // Retrieve user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        // Generate a random password
        $new_password = bin2hex(random_bytes(16));

        // Update user password in database
        try {
            $stmt = $conn->prepare('UPDATE users SET password = :password WHERE email = :email');
            $stmt->bindParam(':password', $new_password);
            $stmt->bindParam(':email', $email);
            $stmt->execute();

            // Send password reset email
            sendPasswordResetEmail($user, $new_password);

            echo 'New password sent to your email';
        } catch (PDOException $e) {
            echo 'Error updating password: ' . $e->getMessage();
        }
    } catch (PDOException $e) {
        echo 'Error retrieving user data: ' . $e->getMessage();
    }
}

// Function to send password reset email
function sendPasswordResetEmail($user, $new_password)
{
    // Configuration
    $from_email = 'your_email@example.com';
    $subject = 'Your new password';

    // Email template
    $email_template = "
        Dear {name},

        Your new password is: {$new_password}

        Best regards,
        Your Name
    ";

    // Replace placeholders in email template
    $email_template = str_replace('{name}', $user['name'], $email_template);

    // Send email using PHPMailer (or your preferred email library)
    $mail = new PHPMailer;
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = $from_email;
    $mail->Password = 'your_password';
    $mail->setFrom($from_email, 'Your Name');
    $mail->addAddress($user['email']);
    $mail->Subject = $subject;
    $mail->Body = $email_template;

    if (!$mail->send()) {
        echo 'Error sending email: ' . $mail->ErrorInfo;
    }
}


<?php

// Configuration
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Check if form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  // Get user's email from form
  $email = $_POST['email'];

  // Check if email is valid and exists in database
  $query = "SELECT * FROM users WHERE email = '$email'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // Get user's ID from result
    $row = $result->fetch_assoc();
    $user_id = $row['id'];

    // Generate new password and store it in database
    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);
    $query = "UPDATE users SET password_hash = SHA1('$new_password') WHERE id = '$user_id'";
    $conn->query($query);

    // Send email with new password to user
    $subject = 'Your new password';
    $message = "Dear user,

Your new password is: $new_password

Best regards, [Your Name]";
    mail($email, $subject, $message);
  }

  // Redirect user back to login page
  header('Location: login.php');
  exit;
}

?>


<?php
require_once 'config.php';

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Get user input
    $email = trim($_POST['email']);

    // Validate email address
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email address";
        return;
    }

    // Query the database to retrieve the user's ID
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Retrieve the user's ID and email address
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];
        $userEmail = $row['email'];

        // Generate a password reset token
        $token = bin2hex(random_bytes(32));

        // Store the token in the database
        $query = "UPDATE users SET token = '$token' WHERE id = '$userId'";
        mysqli_query($conn, $query);

        // Send an email with the password reset link
        sendPasswordResetEmail($userEmail, $token);
    } else {
        echo "No account found with this email address";
    }
}

// Function to send a password reset email
function sendPasswordResetEmail($email, $token) {
    // Get the user's name from the database (optional)
    $query = "SELECT username FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_assoc($result);
    $username = $row['username'];

    // Email content
    $subject = "Password Reset Request";
    $body = "
        <p>Hello $username,</p>
        <p>You have requested to reset your password. Please click on the following link to reset your password:</p>
        <a href='https://example.com/reset-password.php?token=$token'>Reset Password</a>
        <p>If you did not request a password reset, please ignore this email.</p>
    ";

    // Send the email using PHPMailer (or any other mail library)
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->Username = 'your-email@example.com';
    $mail->Password = 'your-password';
    $mail->setFrom('your-email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = $subject;
    $mail->Body = $body;
    if (!$mail->send()) {
        echo "Error sending email: " . $mail->ErrorInfo;
    }
}
?>


<?php

// Configuration settings
define('EMAIL_ADDRESS', 'admin@example.com'); // Email address to send emails from
define('SITE_NAME', 'Your Website Name'); // Website name

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $email = $_POST['email'];
  
  // Validate email address
  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Invalid email address.";
    exit;
  }
  
  // Get user details from database
  $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
  $stmt = $db->prepare("SELECT * FROM users WHERE email = :email");
  $stmt->bindParam(':email', $email);
  $stmt->execute();
  
  // If user exists
  if ($user = $stmt->fetch()) {
    // Generate a new password and store it in the database
    $new_password = generatePassword();
    $hashed_new_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password in database
    $update_stmt = $db->prepare("UPDATE users SET password_hash = :password WHERE email = :email");
    $update_stmt->bindParam(':password', $hashed_new_password);
    $update_stmt->bindParam(':email', $email);
    $update_stmt->execute();
    
    // Send the new password to user via email
    sendEmail($user['username'], $new_password, $email);
  } else {
    echo "User does not exist.";
  }
}

function generatePassword() {
  // Function to generate a strong password
  $length = 12;
  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  $password = '';
  for ($i = 0; $i < $length; $i++) {
    $password .= substr($chars, rand(0, strlen($chars) - 1), 1);
  }
  return $password;
}

function sendEmail($username, $new_password, $email) {
  // Function to send email
  $subject = "New Password for Your Account";
  $message = "Hello $username,

Your new password is: $new_password

Best regards,
$SITE_NAME";
  
  $headers = "From: " . EMAIL_ADDRESS . "\r
";
  $headers .= "Content-type: text/html\r
";
  
  mail($email, $subject, $message, $headers);
}

?>


<?php

// Include your database connection script or use PDO
require_once 'db.php';

if (isset($_POST['submit'])) {
    // Get the user's email address from the form submission
    $email = $_POST['email'];

    // Check if the email address exists in the database
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    // If the email is found, generate a reset token and update the user's record
    if ($user = $stmt->fetch()) {
        // Generate a random reset token (e.g. a UUID)
        $reset_token = bin2hex(random_bytes(32));

        // Update the user's record with the new reset token
        $update_stmt = $pdo->prepare("UPDATE users SET reset_token = :token WHERE id = :id");
        $update_stmt->bindParam(':token', $reset_token);
        $update_stmt->bindParam(':id', $user['id']);
        $update_stmt->execute();

        // Send an email to the user with a password reset link
        $subject = "Reset Password";
        $body = "Click here to reset your password: <a href='https://yourwebsite.com/reset_password.php?token=$reset_token'>Reset Password</a>";
        mail($email, $subject, $body);

        echo "Password reset email sent to $email. Please check your inbox and follow the link to reset your password.";
    } else {
        echo "Email address not found.";
    }
}

// Display the forgot password form
?>
<form method="post" action="">
  <label for="email">Email Address:</label>
  <input type="email" id="email" name="email"><br><br>
  <button type="submit" name="submit">Send Password Reset Email</button>
</form>

<?php


<?php

// Include your database connection script or use PDO
require_once 'db.php';

if (isset($_GET['token'])) {
    // Get the reset token from the URL parameter
    $reset_token = $_GET['token'];

    // Check if the reset token is valid and not expired
    $stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = :token AND reset_expires > NOW()");
    $stmt->bindParam(':token', $reset_token);
    $stmt->execute();

    // If the token is valid, display a password change form
    if ($user = $stmt->fetch()) {
        ?>
        <form method="post" action="">
          <label for="password">New Password:</label>
          <input type="password" id="password" name="password"><br><br>
          <label for="confirm_password">Confirm New Password:</label>
          <input type="password" id="confirm_password" name="confirm_password"><br><br>
          <button type="submit" name="submit">Change Password</button>
        </form>

        <?php
    } else {
        echo "Invalid or expired reset token.";
    }
}

// Update the user's password if the form is submitted
if (isset($_POST['submit'])) {
    // Get the new password from the form submission
    $new_password = $_POST['password'];

    // Check if the passwords match
    if ($_POST['password'] == $_POST['confirm_password']) {
        // Update the user's record with the new password
        $update_stmt = $pdo->prepare("UPDATE users SET password_hash = :hash WHERE id = :id");
        $update_stmt->bindParam(':hash', password_hash($new_password, PASSWORD_DEFAULT));
        $update_stmt->bindParam(':id', $user['id']);
        $update_stmt->execute();

        echo "Password changed successfully!";
    } else {
        echo "Passwords do not match.";
    }
}

// Display the reset password form
?>


<?php

// Database configuration
$dbHost = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Create connection and select database
$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send forgot password email
function sendForgotPasswordEmail($username, $email, $new_password)
{
    // Define the message that will be sent in the email
    $message = "
        Dear $username,

        Your new password is: $new_password

        Best regards,
        Your Website
    ";

    // Send the email using your preferred method (e.g., PHPMailer)
    // For this example, we'll use the built-in mail function
    mail($email, "Forgot Password", $message);
}

// Function to reset password
function resetPassword($username, $new_password)
{
    global $conn;

    // Prepare and execute query to update password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE username = ?");
    $stmt->bind_param('ss', $new_password, $username);
    $stmt->execute();

    // Get the new password hash (we're using bcrypt)
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    return $hashed_password;
}

// Check if the user exists and send a reset link
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];

    // Query to get the user's email address
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND email = ?");
    $stmt->bind_param('ss', $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // User exists, send a reset link
        $user = $result->fetch_assoc();

        // Generate a new password (this example uses a simple password generator)
        $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyz'), 0, 8);

        // Update the user's email address with their new password
        $hashed_password = resetPassword($username, $new_password);
        sendForgotPasswordEmail($username, $email, $new_password);
    } else {
        echo "User not found";
    }
}

?>


<?php

// Configuration
define('SITE_URL', 'http://example.com/'); // replace with your site URL
define('EMAIL_ADDRESS', 'admin@example.com'); // your email address for reset emails

require_once 'db_connection.php'; // Your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    if (empty($email)) {
        echo "Email is required.";
        exit;
    }

    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Email not found. Please check your email and try again.";
        exit;
    } else {
        // Get the user's ID
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];

        // Generate a random token for password reset
        $token = bin2hex(random_bytes(32));

        // Store the token in the database
        $sql = "UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'";
        mysqli_query($conn, $sql);

        // Send email with reset link
        sendResetEmail($email, $token);
    }
}

function sendResetEmail($email, $token) {
    $subject = 'Reset Your Password';
    $body = '
        <p>Dear user,</p>
        <p>To reset your password, please click on this link:</p>
        <a href="' . SITE_URL . 'reset_password.php?token=' . $token . '">Reset Your Password</a>
        <p>Best regards,</p>
    ';

    mail($email, $subject, $body);
}

?>


<?php

require_once 'db_connection.php'; // Your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $token = $_GET['token'];

    if (empty($token)) {
        echo "Invalid request.";
        exit;
    }

    $sql = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Token is invalid or has expired. Please try resetting your password again.";
        exit;
    } else {
        // The user's data is available here
        // You can create a form for the new password and store it in the database.

        ?>
        <form action="update_password.php" method="post">
            <label>Enter New Password:</label>
            <input type="password" name="new_password"><br><br>
            <input type="submit" value="Change Password">
        </form>

        <?php
    }
}

?>


<?php

require_once 'db_connection.php'; // Your database connection script

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $newPassword = $_POST['new_password'];

    if (empty($newPassword)) {
        echo "New password is required.";
        exit;
    }

    $token = $_GET['token'];
    $sql = "UPDATE users SET password_reset_token = '', password = '$newPassword' WHERE password_reset_token = '$token'";
    mysqli_query($conn, $sql);

    echo "Your password has been updated successfully!";
}

?>


<?php
$conn = new mysqli('localhost', 'username', 'password', 'database');
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

