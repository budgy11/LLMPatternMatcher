{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function in PHP:\n\n**Database Schema**\n\nWe'll assume you have a database with the following table structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  password_hash VARCHAR(255)\n);\n```\n**Forgot Password Function**\n\nCreate a new PHP file (e.g. `forgot_password.php`) and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $username, $reset_token) {\n  // Send email using your preferred mail function (e.g. PHPMailer)\n  // For this example, we'll use a simple text email\n  $subject = 'Reset Your Password';\n  $body = \"Hello $username,\\n\\nPlease click the link below to reset your password:\\n\\n<a href='http://your_website.com/reset_password.php?token=$reset_token'>Reset Password</a>\\n\\nBest regards,\\nYour Website\";\n  mail($email, $subject, $body);\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n  // Validate email input\n  if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n    echo 'Invalid email address';\n    exit;\n  }\n\n  // Retrieve user data from database\n  $query = \"SELECT * FROM users WHERE email = '\" . $_POST['email'] . \"'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Generate reset token\n      $reset_token = bin2hex(random_bytes(32));\n\n      // Update user data with new reset token\n      $query = \"UPDATE users SET password_reset_token = '$reset_token' WHERE id = '\" . $row['id'] . \"'\";\n      $conn->query($query);\n\n      // Send password reset email\n      send_password_reset_email($_POST['email'], $row['username'], $reset_token);\n    }\n  } else {\n    echo 'Email not found in database';\n  }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Reset Password Function**\n\nCreate a new PHP file (e.g. `reset_password.php`) and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to update user password\nfunction update_user_password($id, $new_password) {\n  // Hash new password using a strong hashing algorithm (e.g. bcrypt)\n  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n  // Update user data with new hashed password\n  $query = \"UPDATE users SET password_hash = '$hashed_password' WHERE id = '\" . $id . \"'\";\n  $conn->query($query);\n}\n\n// Handle reset password form submission\nif (isset($_GET['token'])) {\n  // Retrieve user data from database using reset token\n  $query = \"SELECT * FROM users WHERE password_reset_token = '\".$_GET['token'].\"'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Update user password\n      update_user_password($row['id'], $_POST['new_password']);\n\n      // Reset reset token\n      $query = \"UPDATE users SET password_reset_token = NULL WHERE id = '\" . $row['id'] . \"'\";\n      $conn->query($query);\n    }\n  } else {\n    echo 'Invalid reset token';\n  }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Usage**\n\n1. User submits forgotten password form with their email address.\n2. The `forgot_password.php` script checks if the email address exists in the database and generates a new reset token.\n3. The user receives an email with a link to the `reset_password.php` script, including the reset token as a GET parameter.\n4. User submits new password form on the `reset_password.php` page, including the reset token in the URL.\n5. The `reset_password.php` script updates the user's password using the provided new password.\n\nNote: This is just an example implementation and should be adapted to your specific use case and security requirements. Additionally, consider implementing additional security measures such as email verification and rate limiting on password resets.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $username, $reset_token) {\n  // Send email using your preferred mail function (e.g. PHPMailer)\n  // For this example, we'll use a simple text email\n  $subject = 'Reset Your Password';\n  $body = \"Hello $username,\\n\\nPlease click the link below to reset your password:\\n\\n<a href='http://your_website.com/reset_password.php?token=$reset_token'>Reset Password</a>\\n\\nBest regards,\\nYour Website\";\n  mail($email, $subject, $body);\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n  // Validate email input\n  if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n    echo 'Invalid email address';\n    exit;\n  }\n\n  // Retrieve user data from database\n  $query = \"SELECT * FROM users WHERE email = '\" . $_POST['email'] . \"'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Generate reset token\n      $reset_token = bin2hex(random_bytes(32));\n\n      // Update user data with new reset token\n      $query = \"UPDATE users SET password_reset_token = '$reset_token' WHERE id = '\" . $row['id'] . \"'\";\n      $conn->query($query);\n\n      // Send password reset email\n      send_password_reset_email($_POST['email'], $row['username'], $reset_token);\n    }\n  } else {\n    echo 'Email not found in database';\n  }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to update user password\nfunction update_user_password($id, $new_password) {\n  // Hash new password using a strong hashing algorithm (e.g. bcrypt)\n  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n  // Update user data with new hashed password\n  $query = \"UPDATE users SET password_hash = '$hashed_password' WHERE id = '\" . $id . \"'\";\n  $conn->query($query);\n}\n\n// Handle reset password form submission\nif (isset($_GET['token'])) {\n  // Retrieve user data from database using reset token\n  $query = \"SELECT * FROM users WHERE password_reset_token = '\".$_GET['token'].\"'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Update user password\n      update_user_password($row['id'], $_POST['new_password']);\n\n      // Reset reset token\n      $query = \"UPDATE users SET password_reset_token = NULL WHERE id = '\" . $row['id'] . \"'\";\n      $conn->query($query);\n    }\n  } else {\n    echo 'Invalid reset token';\n  }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```"]}
