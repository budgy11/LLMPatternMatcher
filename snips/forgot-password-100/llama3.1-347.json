{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function in PHP. This will send a reset password link to the user's email address.\n\n**Database Schema**\n\nBefore we dive into the code, let's assume that your database has two tables: `users` and `password_resets`. The `users` table stores the username and hashed password, while the `password_resets` table stores the token generated for password reset and the corresponding user ID.\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    password VARCHAR(255)\n);\n\nCREATE TABLE password_resets (\n    id INT PRIMARY KEY,\n    user_id INT,\n    token VARCHAR(255),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n**Forgot Password Function**\n\nThe following PHP code will handle the forgot password functionality:\n\n```php\n<?php\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Validate user input\nif (isset($_POST['email'])) {\n\n    // Sanitize email\n    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);\n\n    // Query database to retrieve the user ID and token\n    $query = \"SELECT id FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n\n        // Retrieve user ID from result\n        $userId = mysqli_fetch_assoc($result)['id'];\n\n        // Generate token for password reset\n        $token = md5(uniqid(mt_rand(), true));\n\n        // Insert new record into password_resets table\n        $query = \"INSERT INTO password_resets (user_id, token) VALUES ('$userId', '$token')\";\n        mysqli_query($conn, $query);\n\n        // Send email to user with reset link\n        sendResetEmail($email, $token);\n    } else {\n        echo \"User not found.\";\n    }\n} else {\n    echo \"Invalid request. Please try again later.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n// Function to send password reset email\nfunction sendResetEmail($email, $token) {\n\n    // Mail server settings (change these according to your mail service provider)\n    $mailServer = \"smtp.gmail.com\";\n    $mailUsername = \"your-username@gmail.com\";\n    $mailPassword = \"your-password\";\n\n    // Email subject and body\n    $subject = \"Reset Your Password\";\n    $body = \"Click this link to reset your password: <a href='http://example.com/reset-password?token=\" . $token . \"'>Reset Password</a>\";\n\n    // Send email using PHP's mail() function or any other library (e.g., SwiftMailer, PHPMailer)\n    // Here we're using the mail() function for simplicity\n    $headers = \"From: Your Email <\" . $mailUsername . \">\" . \"\\r\\n\";\n    $headers .= \"MIME-Version: 1.0\\r\\n\";\n    $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n    if (mail($email, $subject, $body, $headers)) {\n        echo \"Email sent successfully.\";\n    } else {\n        echo \"Error sending email. Please try again later.\";\n    }\n}\n\n?>\n```\n\n**Reset Password Page**\n\nOnce the user clicks on the reset password link in their email, they will be redirected to a page where they can enter and confirm their new password.\n\n```php\n<?php\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Validate user input\nif (isset($_POST['token'], $_POST['new_password'])) {\n\n    // Retrieve token from URL\n    $token = $_GET['token'];\n\n    // Query database to retrieve the user ID and reset token\n    $query = \"SELECT id FROM password_resets WHERE token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n\n        // Retrieve user ID from result\n        $userId = mysqli_fetch_assoc($result)['id'];\n\n        // Update user's password in the users table\n        $newPassword = $_POST['new_password'];\n        $hashNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n        $query = \"UPDATE users SET password = '$hashNewPassword' WHERE id = '$userId'\";\n        mysqli_query($conn, $query);\n\n        // Delete reset token from the password_resets table\n        $query = \"DELETE FROM password_resets WHERE user_id = '$userId'\";\n        mysqli_query($conn, $query);\n    } else {\n        echo \"Invalid token.\";\n    }\n} else {\n    echo \"Invalid request. Please try again later.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!-- HTML form for new password input -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <label for=\"confirm_password\">Confirm New Password:</label>\n    <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n    <button type=\"submit\">Submit</button>\n</form>\n```\n\nThis is a basic example and doesn't include any error checking or security measures like email verification, IP blocking, or rate limiting to prevent brute-force attacks. You should add these features according to your application's requirements.\n\nAlso note that the `password_hash()` function uses the bcrypt algorithm by default in PHP 7+, but you can change it to PBKDF2 if needed.", "code_blocks": [null, "```php\n<?php\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Validate user input\nif (isset($_POST['email'])) {\n\n    // Sanitize email\n    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);\n\n    // Query database to retrieve the user ID and token\n    $query = \"SELECT id FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n\n        // Retrieve user ID from result\n        $userId = mysqli_fetch_assoc($result)['id'];\n\n        // Generate token for password reset\n        $token = md5(uniqid(mt_rand(), true));\n\n        // Insert new record into password_resets table\n        $query = \"INSERT INTO password_resets (user_id, token) VALUES ('$userId', '$token')\";\n        mysqli_query($conn, $query);\n\n        // Send email to user with reset link\n        sendResetEmail($email, $token);\n    } else {\n        echo \"User not found.\";\n    }\n} else {\n    echo \"Invalid request. Please try again later.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n// Function to send password reset email\nfunction sendResetEmail($email, $token) {\n\n    // Mail server settings (change these according to your mail service provider)\n    $mailServer = \"smtp.gmail.com\";\n    $mailUsername = \"your-username@gmail.com\";\n    $mailPassword = \"your-password\";\n\n    // Email subject and body\n    $subject = \"Reset Your Password\";\n    $body = \"Click this link to reset your password: <a href='http://example.com/reset-password?token=\" . $token . \"'>Reset Password</a>\";\n\n    // Send email using PHP's mail() function or any other library (e.g., SwiftMailer, PHPMailer)\n    // Here we're using the mail() function for simplicity\n    $headers = \"From: Your Email <\" . $mailUsername . \">\" . \"\\r\\n\";\n    $headers .= \"MIME-Version: 1.0\\r\\n\";\n    $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n    if (mail($email, $subject, $body, $headers)) {\n        echo \"Email sent successfully.\";\n    } else {\n        echo \"Error sending email. Please try again later.\";\n    }\n}\n\n?>\n```", "```php\n<?php\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Validate user input\nif (isset($_POST['token'], $_POST['new_password'])) {\n\n    // Retrieve token from URL\n    $token = $_GET['token'];\n\n    // Query database to retrieve the user ID and reset token\n    $query = \"SELECT id FROM password_resets WHERE token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n\n        // Retrieve user ID from result\n        $userId = mysqli_fetch_assoc($result)['id'];\n\n        // Update user's password in the users table\n        $newPassword = $_POST['new_password'];\n        $hashNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n        $query = \"UPDATE users SET password = '$hashNewPassword' WHERE id = '$userId'\";\n        mysqli_query($conn, $query);\n\n        // Delete reset token from the password_resets table\n        $query = \"DELETE FROM password_resets WHERE user_id = '$userId'\";\n        mysqli_query($conn, $query);\n    } else {\n        echo \"Invalid token.\";\n    }\n} else {\n    echo \"Invalid request. Please try again later.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!-- HTML form for new password input -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <label for=\"confirm_password\">Confirm New Password:</label>\n    <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n    <button type=\"submit\">Submit</button>\n</form>\n```"]}
