{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a basic \"forgot password\" functionality using PHP. We'll use email as the primary means of communicating with the user.\n\n**Database Schema**\n------------------\n\nFor this example, let's assume we have a `users` table with the following structure:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL\n);\n```\n\n**Forgot Password Function**\n---------------------------\n\n### PHP Code\n\n```php\n<?php\n// Configuration\n$dbHost = 'your_database_host';\n$dbUsername = 'your_database_username';\n$dbPassword = 'your_database_password';\n$dbName = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction forgotPassword($email) {\n    // Retrieve user data from email address\n    $sql = \"SELECT id, password_hash FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n\n        // Generate a random password and salt\n        $salt = bin2hex(random_bytes(16));\n        $password = hash('sha256', 'your_secret_key' . $email . $salt);\n        $newPasswordHash = hash('sha256', $password);\n\n        // Update user's password in database\n        $sql = \"UPDATE users SET password_hash = '$newPasswordHash' WHERE id = '\" . $row['id'] . \"'\";\n        if ($conn->query($sql) === TRUE) {\n            // Send new password to user via email\n            sendEmailNotification($email, $password);\n        } else {\n            echo \"Error updating user's password: \" . $conn->error;\n        }\n    } else {\n        echo \"No user found with the given email address.\";\n    }\n\n    $conn->close();\n}\n\nfunction sendEmailNotification($toEmail, $newPassword) {\n    // Configuration\n    $fromEmail = 'your_email@example.com';\n    $smtpHost = 'your_smtp_host';\n    $smtpUsername = 'your_smtp_username';\n    $smtpPassword = 'your_smtp_password';\n\n    // Send email using PHPMailer (or any other library)\n    $email = new PHPMailer\\PHPMailer\\PHPMailer();\n\n    $email->isSMTP();\n    $email->Host       = $smtpHost;\n    $email->Username   = $smtpUsername;\n    $email->Password   = $smtpPassword;\n    $email->Port       = 587;\n\n    $email->setFrom($fromEmail, 'Your Name');\n    $email->addAddress($toEmail);\n\n    $email->Subject = 'New Password';\n    $email->Body = \"Hello User,\\n\\nYour new password is: $newPassword\";\n\n    if (!$email->send()) {\n        echo \"Error sending email: \";\n        print_r($email->getDebugOutput());\n    } else {\n        echo \"Email sent successfully.\";\n    }\n}\n```\n\n### Usage\n\nTo use this function, simply call the `forgotPassword` function with the user's email address as an argument. For example:\n\n```php\nforgotPassword('user@example.com');\n```\n\nThis will update the user's password in the database and send a notification to their registered email address with their new password.\n\nNote: This is a basic implementation, and you should consider adding additional security measures (e.g., CAPTCHA, rate limiting) to prevent abuse. Also, make sure to replace the placeholders (`your_database_host`, `your_secret_key`, etc.) with your actual database credentials and SMTP configuration.", "code_blocks": [null, "```php\n<?php\n// Configuration\n$dbHost = 'your_database_host';\n$dbUsername = 'your_database_username';\n$dbPassword = 'your_database_password';\n$dbName = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction forgotPassword($email) {\n    // Retrieve user data from email address\n    $sql = \"SELECT id, password_hash FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n\n        // Generate a random password and salt\n        $salt = bin2hex(random_bytes(16));\n        $password = hash('sha256', 'your_secret_key' . $email . $salt);\n        $newPasswordHash = hash('sha256', $password);\n\n        // Update user's password in database\n        $sql = \"UPDATE users SET password_hash = '$newPasswordHash' WHERE id = '\" . $row['id'] . \"'\";\n        if ($conn->query($sql) === TRUE) {\n            // Send new password to user via email\n            sendEmailNotification($email, $password);\n        } else {\n            echo \"Error updating user's password: \" . $conn->error;\n        }\n    } else {\n        echo \"No user found with the given email address.\";\n    }\n\n    $conn->close();\n}\n\nfunction sendEmailNotification($toEmail, $newPassword) {\n    // Configuration\n    $fromEmail = 'your_email@example.com';\n    $smtpHost = 'your_smtp_host';\n    $smtpUsername = 'your_smtp_username';\n    $smtpPassword = 'your_smtp_password';\n\n    // Send email using PHPMailer (or any other library)\n    $email = new PHPMailer\\PHPMailer\\PHPMailer();\n\n    $email->isSMTP();\n    $email->Host       = $smtpHost;\n    $email->Username   = $smtpUsername;\n    $email->Password   = $smtpPassword;\n    $email->Port       = 587;\n\n    $email->setFrom($fromEmail, 'Your Name');\n    $email->addAddress($toEmail);\n\n    $email->Subject = 'New Password';\n    $email->Body = \"Hello User,\\n\\nYour new password is: $newPassword\";\n\n    if (!$email->send()) {\n        echo \"Error sending email: \";\n        print_r($email->getDebugOutput());\n    } else {\n        echo \"Email sent successfully.\";\n    }\n}\n```", "```php\nforgotPassword('user@example.com');\n```"]}
