{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP:\n\n**Note:** This example uses the `password_hash` and `password_verify` functions, which are part of PHP's built-in password hashing and verification system. Make sure you're using PHP 5.5 or later for this to work.\n\n**Database Schema:**\n\nAssuming you have a database table called `users` with the following columns:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int(11) | Unique user ID |\n| email | varchar(255) | User's email address |\n| password | varchar(255) | Hashed user password |\n\n**Code:**\n```php\n// config.php (database connection settings)\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n\n// forgot-password.php (forgot password form)\n<?php\nif (isset($_POST['submit'])) {\n    // Retrieve submitted email address\n    $email = $_POST['email'];\n\n    // Query database to check if email exists\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Email found, send password reset link\n        $row = $result->fetch_assoc();\n        $hashed_id = $row['id'];\n\n        // Generate random password and hash it\n        $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n        // Update user's password in database\n        $query = \"UPDATE users SET password = '$hashed_password' WHERE id = '$hashed_id'\";\n        $conn->query($query);\n\n        // Send email with reset link (using PHPMailer or another mail library)\n        $mail = new PHPMailer();\n        $mail->isSMTP();\n        $mail->Host = 'smtp.example.com';\n        $mail->Port = 587;\n        $mail->SMTPAuth = true;\n        $mail->Username = 'your_email@example.com';\n        $mail->Password = 'your_password';\n        $mail->setFrom('your_email@example.com', 'Your Name');\n        $mail->addAddress($email, $email);\n        $mail->Subject = \"Password Reset Link\";\n        $mail->Body = \"Click this link to reset your password: <a href='http://example.com/reset-password.php?id=$hashed_id&password=$password'>Reset Password</a>\";\n\n        // Send the email\n        if ($mail->send()) {\n            echo \"Email sent with reset link.\";\n        } else {\n            echo \"Error sending email.\";\n        }\n    } else {\n        echo \"Email not found in database.\";\n    }\n\n    // Close database connection\n    $conn->close();\n}\n?>\n\n<!-- HTML form for user to enter their email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n    <button type=\"submit\" name=\"submit\">Submit</button>\n</form>\n```\n**reset-password.php:**\n```php\n<?php\nif (isset($_GET['id']) && isset($_GET['password'])) {\n    // Retrieve user ID and new password from GET parameters\n    $hashed_id = $_GET['id'];\n    $new_password = $_GET['password'];\n\n    // Query database to update user's password\n    $query = \"UPDATE users SET password = '$new_password' WHERE id = '$hashed_id'\";\n    $conn->query($query);\n\n    echo \"Password updated successfully.\";\n} else {\n    echo \"Invalid request.\";\n}\n?>\n```\n**Note:**\n\n1. This example uses a simple email/password combination for authentication, but in a real-world application, you should use more secure methods like OAuth or OpenID Connect.\n2. Make sure to replace the placeholders (`your_username`, `your_password`, etc.) with your actual database credentials and settings.\n3. The password reset link is sent via email, which requires a mail library (like PHPMailer) to be installed on your server.\n4. This example uses a basic form for user input; you may want to add additional validation and security measures depending on your application's requirements.\n\nRemember to follow best practices for password hashing and storage, as well as secure coding guidelines, to protect your users' sensitive information.", "code_blocks": ["```php\n// config.php (database connection settings)\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n\n// forgot-password.php (forgot password form)\n<?php\nif (isset($_POST['submit'])) {\n    // Retrieve submitted email address\n    $email = $_POST['email'];\n\n    // Query database to check if email exists\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Email found, send password reset link\n        $row = $result->fetch_assoc();\n        $hashed_id = $row['id'];\n\n        // Generate random password and hash it\n        $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n        // Update user's password in database\n        $query = \"UPDATE users SET password = '$hashed_password' WHERE id = '$hashed_id'\";\n        $conn->query($query);\n\n        // Send email with reset link (using PHPMailer or another mail library)\n        $mail = new PHPMailer();\n        $mail->isSMTP();\n        $mail->Host = 'smtp.example.com';\n        $mail->Port = 587;\n        $mail->SMTPAuth = true;\n        $mail->Username = 'your_email@example.com';\n        $mail->Password = 'your_password';\n        $mail->setFrom('your_email@example.com', 'Your Name');\n        $mail->addAddress($email, $email);\n        $mail->Subject = \"Password Reset Link\";\n        $mail->Body = \"Click this link to reset your password: <a href='http://example.com/reset-password.php?id=$hashed_id&password=$password'>Reset Password</a>\";\n\n        // Send the email\n        if ($mail->send()) {\n            echo \"Email sent with reset link.\";\n        } else {\n            echo \"Error sending email.\";\n        }\n    } else {\n        echo \"Email not found in database.\";\n    }\n\n    // Close database connection\n    $conn->close();\n}\n?>\n\n<!-- HTML form for user to enter their email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n    <button type=\"submit\" name=\"submit\">Submit</button>\n</form>\n```", "```php\n<?php\nif (isset($_GET['id']) && isset($_GET['password'])) {\n    // Retrieve user ID and new password from GET parameters\n    $hashed_id = $_GET['id'];\n    $new_password = $_GET['password'];\n\n    // Query database to update user's password\n    $query = \"UPDATE users SET password = '$new_password' WHERE id = '$hashed_id'\";\n    $conn->query($query);\n\n    echo \"Password updated successfully.\";\n} else {\n    echo \"Invalid request.\";\n}\n?>\n```"]}
