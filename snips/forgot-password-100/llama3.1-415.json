{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a forgot password function in PHP. This will send a reset link to the user's email address.\n\n### Database Setup\n\nFirst, let's set up our database table for storing users:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n\nAssuming you're using PHPMyAdmin or a similar tool, the above SQL query should create a new table named `users` with columns for `id`, `username`, `email`, and `password`.\n\n### Password Hashing\n\nWe'll be storing hashed passwords. For simplicity, we'll use the `password_hash()` function provided by PHP.\n\n```php\nfunction passwordHasher($password) {\n  return password_hash($password, PASSWORD_DEFAULT);\n}\n```\n\nThis function takes a plain-text password as input and returns its hashed equivalent.\n\n### Forgot Password Function\n\nHere's our forgot password function:\n\n```php\nfunction forgetPassword() {\n  if (isset($_POST['username']) && isset($_POST['email'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    // Validate input data\n    if (!empty($username) && !empty($email)) {\n      // Query the database to retrieve user data\n      $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n      $result = mysqli_query($_SESSION['db'], $query);\n      \n      // Check if a user with matching details exists\n      if (mysqli_num_rows($result) > 0) {\n        // Retrieve the user's id, generate and store reset token in database\n        $user = mysqli_fetch_assoc($result);\n\n        // Generate a random token for password reset\n        $resetToken = bin2hex(random_bytes(32));\n\n        // Update the user record with the new token\n        $updateQuery = \"UPDATE users SET reset_token = '$resetToken' WHERE id = '$user[id]'\";\n        mysqli_query($_SESSION['db'], $updateQuery);\n\n        // Send an email to the user containing a link for resetting password\n        sendResetEmail($email, $resetToken);\n      } else {\n        echo \"Invalid username/email combination\";\n      }\n    } else {\n      echo \"Please fill all fields\";\n    }\n  } else {\n    echo \"No input data\";\n  }\n}\n\nfunction sendResetEmail($email, $token) {\n  // Configuration variables\n  $mailServer = 'smtp.gmail.com';\n  $portNumber = 587;\n  $username = 'your-email@gmail.com';\n  $password = 'your-password';\n\n  // Email headers and body\n  $headers = \"MIME-Version: 1.0\\r\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n  $headers .= \"From: Your Email <your-email@gmail.com>\\r\\n\";\n\n  $body = \"<a href='http://yourdomain.com/reset-password?token=\" . $token . \"'>Click here to reset password</a>\";\n\n  // Send email\n  $mailMessage = mail($email, 'Reset Password', $body, $headers);\n\n  if ($mailMessage) {\n    echo \"Email sent successfully\";\n  } else {\n    echo \"Failed to send email\";\n  }\n}\n```\n\n### Explanation\n\n- The function `forgetPassword()` retrieves a user's id and stores a reset token in the database.\n- It then calls the `sendResetEmail()` function with the user's email address and the generated reset token, sending an email containing a link for resetting the password.\n\nPlease note that you should replace placeholders like `'smtp.gmail.com'`, `'your-email@gmail.com'`, and `'your-password'` in the above code with your actual Gmail account credentials if using Gmail as your mail server. Also, remember to configure PHP's `mail()` function according to your mail server setup.\n\n### Reset Password Link\n\nYou would typically handle the password reset link by checking for the presence of a GET request parameter named `'token'`. When such a request is made (e.g., via a direct HTTP request or from an email client), you can validate the token and allow the user to input new credentials, updating them in your database accordingly.\n\nThis example provides a basic framework. You might need to adjust it based on your specific PHP configuration, mail server settings, and security requirements (such as using HTTPS for password reset links).", "code_blocks": [null, "```php\nfunction passwordHasher($password) {\n  return password_hash($password, PASSWORD_DEFAULT);\n}\n```", "```php\nfunction forgetPassword() {\n  if (isset($_POST['username']) && isset($_POST['email'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    // Validate input data\n    if (!empty($username) && !empty($email)) {\n      // Query the database to retrieve user data\n      $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n      $result = mysqli_query($_SESSION['db'], $query);\n      \n      // Check if a user with matching details exists\n      if (mysqli_num_rows($result) > 0) {\n        // Retrieve the user's id, generate and store reset token in database\n        $user = mysqli_fetch_assoc($result);\n\n        // Generate a random token for password reset\n        $resetToken = bin2hex(random_bytes(32));\n\n        // Update the user record with the new token\n        $updateQuery = \"UPDATE users SET reset_token = '$resetToken' WHERE id = '$user[id]'\";\n        mysqli_query($_SESSION['db'], $updateQuery);\n\n        // Send an email to the user containing a link for resetting password\n        sendResetEmail($email, $resetToken);\n      } else {\n        echo \"Invalid username/email combination\";\n      }\n    } else {\n      echo \"Please fill all fields\";\n    }\n  } else {\n    echo \"No input data\";\n  }\n}\n\nfunction sendResetEmail($email, $token) {\n  // Configuration variables\n  $mailServer = 'smtp.gmail.com';\n  $portNumber = 587;\n  $username = 'your-email@gmail.com';\n  $password = 'your-password';\n\n  // Email headers and body\n  $headers = \"MIME-Version: 1.0\\r\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n  $headers .= \"From: Your Email <your-email@gmail.com>\\r\\n\";\n\n  $body = \"<a href='http://yourdomain.com/reset-password?token=\" . $token . \"'>Click here to reset password</a>\";\n\n  // Send email\n  $mailMessage = mail($email, 'Reset Password', $body, $headers);\n\n  if ($mailMessage) {\n    echo \"Email sent successfully\";\n  } else {\n    echo \"Failed to send email\";\n  }\n}\n```"]}
