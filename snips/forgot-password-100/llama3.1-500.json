{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of a simple \"forgot password\" function using PHP. This script will send an email to the user with a link to reset their password.\n\n**Note:** For this example, we'll be using PHP 7.x and MySQL as our database management system.\n\n### Database Setup\n\nFirstly, let's create a table in our database for storing users' information:\n\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    email VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n```\n\n### PHP Code (forgot_password.php)\n\nNext, we'll create the forgot password script. This will check if an account with the given email exists in our database and send a link to reset their password.\n\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connecting to the database\n$conn = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);\n$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n// Email configuration for sending reset link\n$from_email = 'your-email@example.com';\n$to_email = $_POST['email'];\n$password_reset_link = 'http://example.com/reset-password.php?token=' . generateToken();\n\nif (isset($_POST['submit'])) {\n\n    try {\n        // Retrieve the user's information from the database\n        $query = \"SELECT * FROM users WHERE email = :email\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':email', $_POST['email']);\n        $stmt->execute();\n\n        if ($stmt->rowCount() > 0) {\n\n            // Send a password reset link\n            sendEmail($from_email, $to_email, \"Reset Password\", \"Click here to reset your password: $password_reset_link\");\n\n            echo 'An email has been sent with instructions on how to reset your password.';\n        } else {\n            echo 'Account not found. Please try again.';\n        }\n\n    } catch (PDOException $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\nfunction sendEmail($from_email, $to_email, $subject, $message) {\n    $headers = \"From: $from_email\\n\";\n    $headers .= \"MIME-Version: 1.0\\n\";\n    $headers .= \"Content-type: text/html; charset=iso-8859-1\\n\";\n\n    mail($to_email, $subject, $message, $headers);\n}\n\nfunction generateToken() {\n    return bin2hex(random_bytes(32));\n}\n\n?>\n```\n\n### PHP Code (reset_password.php)\n\nThis is the script that will be called when a user clicks on the password reset link sent by the forgot password email. It will verify the token and allow them to change their password.\n\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connecting to the database\n$conn = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);\n$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\nif (isset($_GET['token'])) {\n\n    try {\n        // Retrieve the user's information from the database using the token\n        $query = \"SELECT * FROM users WHERE password_reset_token = :token\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':token', $_GET['token']);\n        $stmt->execute();\n\n        if ($stmt->rowCount() > 0) {\n\n            // Allow the user to change their password\n            echo '<form action=\"\" method=\"post\">';\n\n            echo 'Enter new password: <input type=\"password\" name=\"new_password\"><br>';\n            echo 'Confirm new password: <input type=\"password\" name=\"confirm_new_password\"><br>';\n\n            echo '<input type=\"hidden\" name=\"token\" value=\"' . $_GET['token'] . '\">';\n\n            echo '<input type=\"submit\" name=\"change_password\" value=\"Change Password\">';\n            echo '</form>';\n        } else {\n            echo 'Invalid token. Please try again.';\n        }\n\n    } catch (PDOException $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\nif (isset($_POST['change_password'])) {\n\n    if ($_POST['new_password'] == $_POST['confirm_new_password']) {\n\n        // Update the user's password in the database\n        try {\n            $query = \"UPDATE users SET password_hash = :password_hash WHERE password_reset_token = :token\";\n            $stmt = $conn->prepare($query);\n            $stmt->bindParam(':token', $_GET['token']);\n            $stmt->bindParam(':password_hash', password_hash($_POST['new_password'], PASSWORD_DEFAULT));\n            $stmt->execute();\n\n            echo 'Your password has been updated.';\n\n        } catch (PDOException $e) {\n            echo 'Error: ' . $e->getMessage();\n        }\n    } else {\n        echo 'Passwords do not match.';\n    }\n\n}\n\n?>\n```\n\n### How it Works\n\n1. The user fills in their email address and submits the form.\n2. A PHP script checks if an account with that email exists in our database, and if so, sends them a password reset link via email.\n3. When the user clicks on the password reset link, they're taken to a page where they can enter a new password.\n4. The new password is hashed using `password_hash()` and stored in the database.\n\nThis code should be placed in two files: `forgot_password.php` and `reset_password.php`. You'll need to update the configuration variables at the top of each file with your own database credentials and email settings.\n\nRemember that this is a basic example, and you may want to add additional security measures or error checking.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connecting to the database\n$conn = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);\n$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n// Email configuration for sending reset link\n$from_email = 'your-email@example.com';\n$to_email = $_POST['email'];\n$password_reset_link = 'http://example.com/reset-password.php?token=' . generateToken();\n\nif (isset($_POST['submit'])) {\n\n    try {\n        // Retrieve the user's information from the database\n        $query = \"SELECT * FROM users WHERE email = :email\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':email', $_POST['email']);\n        $stmt->execute();\n\n        if ($stmt->rowCount() > 0) {\n\n            // Send a password reset link\n            sendEmail($from_email, $to_email, \"Reset Password\", \"Click here to reset your password: $password_reset_link\");\n\n            echo 'An email has been sent with instructions on how to reset your password.';\n        } else {\n            echo 'Account not found. Please try again.';\n        }\n\n    } catch (PDOException $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\nfunction sendEmail($from_email, $to_email, $subject, $message) {\n    $headers = \"From: $from_email\\n\";\n    $headers .= \"MIME-Version: 1.0\\n\";\n    $headers .= \"Content-type: text/html; charset=iso-8859-1\\n\";\n\n    mail($to_email, $subject, $message, $headers);\n}\n\nfunction generateToken() {\n    return bin2hex(random_bytes(32));\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connecting to the database\n$conn = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);\n$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\nif (isset($_GET['token'])) {\n\n    try {\n        // Retrieve the user's information from the database using the token\n        $query = \"SELECT * FROM users WHERE password_reset_token = :token\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':token', $_GET['token']);\n        $stmt->execute();\n\n        if ($stmt->rowCount() > 0) {\n\n            // Allow the user to change their password\n            echo '<form action=\"\" method=\"post\">';\n\n            echo 'Enter new password: <input type=\"password\" name=\"new_password\"><br>';\n            echo 'Confirm new password: <input type=\"password\" name=\"confirm_new_password\"><br>';\n\n            echo '<input type=\"hidden\" name=\"token\" value=\"' . $_GET['token'] . '\">';\n\n            echo '<input type=\"submit\" name=\"change_password\" value=\"Change Password\">';\n            echo '</form>';\n        } else {\n            echo 'Invalid token. Please try again.';\n        }\n\n    } catch (PDOException $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\nif (isset($_POST['change_password'])) {\n\n    if ($_POST['new_password'] == $_POST['confirm_new_password']) {\n\n        // Update the user's password in the database\n        try {\n            $query = \"UPDATE users SET password_hash = :password_hash WHERE password_reset_token = :token\";\n            $stmt = $conn->prepare($query);\n            $stmt->bindParam(':token', $_GET['token']);\n            $stmt->bindParam(':password_hash', password_hash($_POST['new_password'], PASSWORD_DEFAULT));\n            $stmt->execute();\n\n            echo 'Your password has been updated.';\n\n        } catch (PDOException $e) {\n            echo 'Error: ' . $e->getMessage();\n        }\n    } else {\n        echo 'Passwords do not match.';\n    }\n\n}\n\n?>\n```"]}
