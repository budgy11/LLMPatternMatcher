{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"Forgot Password\" function in PHP:\n\n**Note:** This example uses a very basic approach to storing passwords and should not be used for production systems. In a real-world application, you would want to use a more secure method to store passwords, such as hashing and salting.\n\n**Database Schema:**\n\nFirst, let's assume we have the following database schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n**PHP Code:**\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check if user exists and send reset link\nfunction forgotPassword() {\n  global $conn;\n\n  // Get form data\n  $email = $_POST['email'];\n\n  // Check if email is valid\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email\";\n    return;\n  }\n\n  // Query database to get user's ID and password\n  $query = \"SELECT id, password FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    $row = $result->fetch_assoc();\n    $userId = $row['id'];\n    $password = $row['password'];\n\n    // Generate reset link (very basic example, not secure!)\n    $resetLink = \"http://yourwebsite.com/reset-password.php?email=$email&token=123456\";\n\n    // Send email with reset link\n    sendEmail($email, \"Reset Password\", $resetLink);\n  } else {\n    echo \"User does not exist\";\n  }\n}\n\n// Function to send email using PHPMailer (not included in this example)\nfunction sendEmail($to, $subject, $message) {\n  // Create a new instance of PHPMailer\n  require_once 'PHPMailer/PHPMailer.php';\n  $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n\n  // Set up SMTP settings\n  $mail->isSMTP();\n  $mail->Host = 'smtp.yourwebsite.com';\n  $mail->Port = 587;\n  $mail->SMTPAuth = true;\n  $mail->Username = 'your_email@yourwebsite.com';\n  $mail->Password = 'your_password';\n\n  // Set up email content\n  $mail->setFrom('your_email@yourwebsite.com', 'Your Name');\n  $mail->addAddress($to);\n  $mail->Subject = $subject;\n  $mail->Body = $message;\n\n  if (!$mail->send()) {\n    echo \"Email not sent: \" . $mail->ErrorInfo;\n  }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  forgotPassword();\n} else {\n  // Display form\n  ?>\n  <form action=\"<?php $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"text\" name=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n  </form>\n  <?php\n}\n?>\n```\n**How it works:**\n\n1. The user submits the form with their email address.\n2. The `forgotPassword()` function checks if the email is valid and exists in the database.\n3. If the email is valid, the function generates a reset link (very basic example, not secure!) and sends an email to the user's email address with the reset link.\n\n**Note:**\n\n* This example uses a very basic approach to storing passwords and should not be used for production systems. In a real-world application, you would want to use a more secure method to store passwords, such as hashing and salting.\n* You will need to replace `your_website.com` with your actual website URL and update the database credentials accordingly.\n* You may also want to consider using a more robust email library like PHPMailer or SwiftMailer.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check if user exists and send reset link\nfunction forgotPassword() {\n  global $conn;\n\n  // Get form data\n  $email = $_POST['email'];\n\n  // Check if email is valid\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email\";\n    return;\n  }\n\n  // Query database to get user's ID and password\n  $query = \"SELECT id, password FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    $row = $result->fetch_assoc();\n    $userId = $row['id'];\n    $password = $row['password'];\n\n    // Generate reset link (very basic example, not secure!)\n    $resetLink = \"http://yourwebsite.com/reset-password.php?email=$email&token=123456\";\n\n    // Send email with reset link\n    sendEmail($email, \"Reset Password\", $resetLink);\n  } else {\n    echo \"User does not exist\";\n  }\n}\n\n// Function to send email using PHPMailer (not included in this example)\nfunction sendEmail($to, $subject, $message) {\n  // Create a new instance of PHPMailer\n  require_once 'PHPMailer/PHPMailer.php';\n  $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n\n  // Set up SMTP settings\n  $mail->isSMTP();\n  $mail->Host = 'smtp.yourwebsite.com';\n  $mail->Port = 587;\n  $mail->SMTPAuth = true;\n  $mail->Username = 'your_email@yourwebsite.com';\n  $mail->Password = 'your_password';\n\n  // Set up email content\n  $mail->setFrom('your_email@yourwebsite.com', 'Your Name');\n  $mail->addAddress($to);\n  $mail->Subject = $subject;\n  $mail->Body = $message;\n\n  if (!$mail->send()) {\n    echo \"Email not sent: \" . $mail->ErrorInfo;\n  }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  forgotPassword();\n} else {\n  // Display form\n  ?>\n  <form action=\"<?php $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"text\" name=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n  </form>\n  <?php\n}\n?>\n```"]}
