{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Database Schema:**\nAssuming we have the following database schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password_hash CHAR(60)\n);\n```\n**PHP Code:**\n\nCreate a new PHP file (e.g. `forgot_password.php`) and add the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\n// Function to send password reset email\nfunction send_reset_email($email) {\n    // Generate random token\n    $token = bin2hex(random_bytes(16));\n\n    // Update user with new token\n    $query = \"UPDATE users SET password_token = '$token' WHERE email = '$email'\";\n    if (!$mysqli->query($query)) {\n        echo \"Error updating token: \" . $mysqli->error;\n        exit();\n    }\n\n    // Send email\n    $subject = \"Reset Your Password\";\n    $message = \"\n    <p>Hello,</p>\n    <p>Please click on the following link to reset your password:</p>\n    <a href='\" . $_SERVER['HTTP_HOST'] . \"/reset_password.php?token=$token'>Reset Password</a>\n    \";\n    mail($email, $subject, $message);\n\n    // Log success\n    echo \"Password reset email sent successfully!\";\n}\n\n// Function to handle forgot password form submission\nfunction forgot_password() {\n    if (isset($_POST['submit'])) {\n        $username = $_POST['username'];\n        $email = $_POST['email'];\n\n        // Query database for user existence\n        $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n        $result = $mysqli->query($query);\n\n        if ($result->num_rows > 0) {\n            while ($user = $result->fetch_assoc()) {\n                send_reset_email($user['email']);\n                echo \"Password reset instructions have been sent to your email.\";\n                break;\n            }\n        } else {\n            echo \"Username or email not found. Please try again.\";\n        }\n\n    } // End of if (isset($_POST['submit']))\n}\n\n// Call forgot_password function\nforgot_password();\n\n?>\n```\n**Explanation:**\n\nThis code creates two functions:\n\n1. `send_reset_email`: Sends an email to the user with a password reset link.\n2. `forgot_password`: Handles the form submission for the \"Forgot Password\" page.\n\nWhen the user submits the \"Forgot Password\" form, the `forgot_password` function checks if the username and/or email address exist in the database. If they do, it calls the `send_reset_email` function to send an email with a password reset link.\n\n**Reset Password Page:**\n\nCreate a new PHP file (e.g. `reset_password.php`) and add the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\n// Get token from URL\n$token = $_GET['token'];\n\n// Update password with new one\n$query = \"UPDATE users SET password_hash = '$new_password' WHERE password_token = '$token'\";\nif (!$mysqli->query($query)) {\n    echo \"Error updating password: \" . $mysqli->error;\n    exit();\n}\n\n// Log success\necho \"Password updated successfully!\";\n\n?>\n```\n**Explanation:**\n\nThis code updates the user's password using the token sent in the email.\n\nNote that this is a basic example and you should add security measures such as:\n\n* Hashing passwords instead of storing them in plain text.\n* Validating user input to prevent SQL injection attacks.\n* Using HTTPS (SSL/TLS) for secure communication between client and server.\n* Implementing additional security features, such as two-factor authentication.\n\nAlso, this code assumes that you have PHP's `mail` function configured correctly on your server. If not, you may need to use a third-party library or service to send emails.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\n// Function to send password reset email\nfunction send_reset_email($email) {\n    // Generate random token\n    $token = bin2hex(random_bytes(16));\n\n    // Update user with new token\n    $query = \"UPDATE users SET password_token = '$token' WHERE email = '$email'\";\n    if (!$mysqli->query($query)) {\n        echo \"Error updating token: \" . $mysqli->error;\n        exit();\n    }\n\n    // Send email\n    $subject = \"Reset Your Password\";\n    $message = \"\n    <p>Hello,</p>\n    <p>Please click on the following link to reset your password:</p>\n    <a href='\" . $_SERVER['HTTP_HOST'] . \"/reset_password.php?token=$token'>Reset Password</a>\n    \";\n    mail($email, $subject, $message);\n\n    // Log success\n    echo \"Password reset email sent successfully!\";\n}\n\n// Function to handle forgot password form submission\nfunction forgot_password() {\n    if (isset($_POST['submit'])) {\n        $username = $_POST['username'];\n        $email = $_POST['email'];\n\n        // Query database for user existence\n        $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n        $result = $mysqli->query($query);\n\n        if ($result->num_rows > 0) {\n            while ($user = $result->fetch_assoc()) {\n                send_reset_email($user['email']);\n                echo \"Password reset instructions have been sent to your email.\";\n                break;\n            }\n        } else {\n            echo \"Username or email not found. Please try again.\";\n        }\n\n    } // End of if (isset($_POST['submit']))\n}\n\n// Call forgot_password function\nforgot_password();\n\n?>\n```", "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\n// Get token from URL\n$token = $_GET['token'];\n\n// Update password with new one\n$query = \"UPDATE users SET password_hash = '$new_password' WHERE password_token = '$token'\";\nif (!$mysqli->query($query)) {\n    echo \"Error updating password: \" . $mysqli->error;\n    exit();\n}\n\n// Log success\necho \"Password updated successfully!\";\n\n?>\n```"]}
