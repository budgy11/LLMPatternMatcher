{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a forgotten password function using PHP:\n\n**Forgot Password Function**\n\n```php\n<?php\nfunction forgot_password($email) {\n  // Check if email exists in database\n  $conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n  if (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n  }\n\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) > 0) {\n    // Email exists, generate new password and send it to user\n    $new_password = substr(md5(uniqid()), 0, 8); // Generate new password\n    $update_query = \"UPDATE users SET password = '$new_password' WHERE email = '$email'\";\n    mysqli_query($conn, $update_query);\n\n    // Send email with new password\n    $to = $email;\n    $subject = \"Reset Password\";\n    $message = \"Your new password is: $new_password\";\n    mail($to, $subject, $message);\n    echo \"New password has been sent to your email.\";\n  } else {\n    echo \"Email not found in database.\";\n  }\n\n  mysqli_close($conn);\n}\n?>\n```\n\n**HTML Form for Forgotten Password**\n\n```html\n<form action=\"\" method=\"post\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\" required />\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```\n\n**PHP to Handle Forgot Password Request**\n\n```php\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n  $email = $_POST['email'];\n  forgot_password($email);\n}\n?>\n```\n\nIn this example, we create a `forgot_password` function that takes an email as input. It checks if the email exists in the database by running a SQL query. If the email exists, it generates a new password using MD5 and sends it to the user via email.\n\n**Security Notes:**\n\n* This is a basic example for demonstration purposes only.\n* In a real-world application, you should use a more secure method of generating passwords, such as bcrypt or PBKDF2.\n* You should also store the hashed password in your database instead of the plain text password.\n* Make sure to validate user input to prevent SQL injection attacks.\n\n**Database Setup:**\n\nCreate a table called `users` with columns for email and password:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\nInsert some sample data into the `users` table:\n\n```sql\nINSERT INTO users (email, password)\nVALUES ('user1@example.com', 'password1'),\n       ('user2@example.com', 'password2');\n```", "code_blocks": ["```php\n<?php\nfunction forgot_password($email) {\n  // Check if email exists in database\n  $conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n  if (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n  }\n\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) > 0) {\n    // Email exists, generate new password and send it to user\n    $new_password = substr(md5(uniqid()), 0, 8); // Generate new password\n    $update_query = \"UPDATE users SET password = '$new_password' WHERE email = '$email'\";\n    mysqli_query($conn, $update_query);\n\n    // Send email with new password\n    $to = $email;\n    $subject = \"Reset Password\";\n    $message = \"Your new password is: $new_password\";\n    mail($to, $subject, $message);\n    echo \"New password has been sent to your email.\";\n  } else {\n    echo \"Email not found in database.\";\n  }\n\n  mysqli_close($conn);\n}\n?>\n```", null, "```php\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n  $email = $_POST['email'];\n  forgot_password($email);\n}\n?>\n```", null, null]}
