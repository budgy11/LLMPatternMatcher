{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function using PHP. This script will send a reset link to the user's email address, where they can set a new password.\n\n**Note:** You'll need to have a database setup with a table for users that has at least the following columns: `id`, `email`, and `password`. You can use the following SQL commands to create this table:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  email VARCHAR(255),\n  password VARCHAR(255)\n);\n\nCREATE TABLE reset_codes (\n  id INT AUTO_INCREMENT,\n  user_id INT,\n  code VARCHAR(255),\n  expires_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n);\n```\n\n**PHP Code**\n\n```php\n<?php\n\n// Define the minimum length of the new password\nconst MIN_PASSWORD_LENGTH = 8;\n\n// Function to send a reset link to the user's email address\nfunction send_reset_link($email, $name) {\n  // Generate a unique code for the user\n  $code = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 16);\n\n  // Store the code in the database\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  $query = \"INSERT INTO reset_codes (user_id, code) VALUES (:user_id, :code)\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([\n    ':user_id' => null,\n    ':code' => $code\n  ]);\n\n  // Get the user's ID from the database\n  $query = \"SELECT id FROM users WHERE email = :email\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([':email' => $email]);\n  $user_id = $stmt->fetchColumn();\n\n  // Send an email to the user with a reset link\n  $subject = 'Reset your password';\n  $body = 'Hello, ' . $name . '. Click on this link to set a new password: <a href=\"' . htmlspecialchars($_SERVER['PHP_SELF']) . '?reset_code=' . $code . '\">Set new password</a>';\n  mail($email, $subject, $body);\n}\n\n// Function to check if the reset code is valid\nfunction is_reset_code_valid($code) {\n  // Get the current timestamp\n  $now = time();\n\n  // Get the user's ID from the database using the reset code\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  $query = \"SELECT u.id FROM users u JOIN reset_codes r ON u.id = r.user_id WHERE r.code = :code AND r.expires_at > :now\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([\n    ':code' => $code,\n    ':now' => $now\n  ]);\n\n  // If the user is found, return their ID\n  if ($user_id = $stmt->fetchColumn()) {\n    return true;\n  }\n\n  // Otherwise, return false\n  return false;\n}\n\n// Function to set a new password for the user\nfunction set_new_password($user_id, $new_password) {\n  // Check if the new password is at least MIN_PASSWORD_LENGTH characters long\n  if (strlen($new_password) < MIN_PASSWORD_LENGTH) {\n    echo 'Error: New password must be at least ' . MIN_PASSWORD_LENGTH . ' characters long.';\n    return false;\n  }\n\n  // Hash the new password using a suitable algorithm (e.g. bcrypt)\n  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n  // Update the user's password in the database\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  $query = \"UPDATE users SET password = :password WHERE id = :user_id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([\n    ':password' => $hashed_password,\n    ':user_id' => $user_id\n  ]);\n\n  // If the update is successful, return true\n  if ($stmt->rowCount() > 0) {\n    return true;\n  }\n\n  // Otherwise, return false\n  return false;\n}\n\n// Process the \"Forgot Password\" form submission\nif (isset($_POST['forgot_password'])) {\n  $email = $_POST['email'];\n  send_reset_link($email, $_POST['name']);\n\n} elseif (isset($_GET['reset_code'])) {\n  // Check if the reset code is valid\n  $code = $_GET['reset_code'];\n  if (is_reset_code_valid($code)) {\n    // If it's valid, set a new password for the user\n    $new_password = 'newpassword'; // Replace with the new password entered by the user\n    if (set_new_password(is_reset_code_valid($code), $new_password)) {\n      echo 'Password reset successfully!';\n    } else {\n      echo 'Error: Unable to update password.';\n    }\n  } else {\n    echo 'Error: Invalid reset code.';\n  }\n\n} elseif (isset($_POST['reset_password'])) {\n  // Get the user's ID from the database using the reset code\n  $code = $_POST['reset_code'];\n  if (is_reset_code_valid($code)) {\n    $user_id = is_reset_code_valid($code);\n\n    // Set a new password for the user\n    $new_password = $_POST['new_password'];\n\n    if (set_new_password($user_id, $new_password)) {\n      echo 'Password reset successfully!';\n    } else {\n      echo 'Error: Unable to update password.';\n    }\n  } else {\n    echo 'Error: Invalid reset code.';\n  }\n\n}\n```\n\n**HTML Form**\n\n```html\n<form action=\"\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"name\">Name:</label>\n  <input type=\"text\" id=\"name\" name=\"name\"><br><br>\n  <button type=\"submit\" name=\"forgot_password\">Forgot Password</button>\n</form>\n\n<form action=\"\" method=\"post\">\n  <label for=\"reset_code\">Reset Code:</label>\n  <input type=\"text\" id=\"reset_code\" name=\"reset_code\"><br><br>\n  <button type=\"submit\" name=\"reset_password\">Set New Password</button>\n</form>\n```\n\nThis script sends a reset link to the user's email address, which contains a unique code that can be used to set a new password. The user can then enter their new password and confirm it by submitting the form. If everything is valid, the script updates the user's password in the database.\n\nPlease note that this script uses `mail()` function for sending emails, which might not work as expected on some servers due to security restrictions. You may need to use a different method of email delivery depending on your server configuration.", "code_blocks": [null, "```php\n<?php\n\n// Define the minimum length of the new password\nconst MIN_PASSWORD_LENGTH = 8;\n\n// Function to send a reset link to the user's email address\nfunction send_reset_link($email, $name) {\n  // Generate a unique code for the user\n  $code = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 16);\n\n  // Store the code in the database\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  $query = \"INSERT INTO reset_codes (user_id, code) VALUES (:user_id, :code)\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([\n    ':user_id' => null,\n    ':code' => $code\n  ]);\n\n  // Get the user's ID from the database\n  $query = \"SELECT id FROM users WHERE email = :email\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([':email' => $email]);\n  $user_id = $stmt->fetchColumn();\n\n  // Send an email to the user with a reset link\n  $subject = 'Reset your password';\n  $body = 'Hello, ' . $name . '. Click on this link to set a new password: <a href=\"' . htmlspecialchars($_SERVER['PHP_SELF']) . '?reset_code=' . $code . '\">Set new password</a>';\n  mail($email, $subject, $body);\n}\n\n// Function to check if the reset code is valid\nfunction is_reset_code_valid($code) {\n  // Get the current timestamp\n  $now = time();\n\n  // Get the user's ID from the database using the reset code\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  $query = \"SELECT u.id FROM users u JOIN reset_codes r ON u.id = r.user_id WHERE r.code = :code AND r.expires_at > :now\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([\n    ':code' => $code,\n    ':now' => $now\n  ]);\n\n  // If the user is found, return their ID\n  if ($user_id = $stmt->fetchColumn()) {\n    return true;\n  }\n\n  // Otherwise, return false\n  return false;\n}\n\n// Function to set a new password for the user\nfunction set_new_password($user_id, $new_password) {\n  // Check if the new password is at least MIN_PASSWORD_LENGTH characters long\n  if (strlen($new_password) < MIN_PASSWORD_LENGTH) {\n    echo 'Error: New password must be at least ' . MIN_PASSWORD_LENGTH . ' characters long.';\n    return false;\n  }\n\n  // Hash the new password using a suitable algorithm (e.g. bcrypt)\n  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n  // Update the user's password in the database\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  $query = \"UPDATE users SET password = :password WHERE id = :user_id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([\n    ':password' => $hashed_password,\n    ':user_id' => $user_id\n  ]);\n\n  // If the update is successful, return true\n  if ($stmt->rowCount() > 0) {\n    return true;\n  }\n\n  // Otherwise, return false\n  return false;\n}\n\n// Process the \"Forgot Password\" form submission\nif (isset($_POST['forgot_password'])) {\n  $email = $_POST['email'];\n  send_reset_link($email, $_POST['name']);\n\n} elseif (isset($_GET['reset_code'])) {\n  // Check if the reset code is valid\n  $code = $_GET['reset_code'];\n  if (is_reset_code_valid($code)) {\n    // If it's valid, set a new password for the user\n    $new_password = 'newpassword'; // Replace with the new password entered by the user\n    if (set_new_password(is_reset_code_valid($code), $new_password)) {\n      echo 'Password reset successfully!';\n    } else {\n      echo 'Error: Unable to update password.';\n    }\n  } else {\n    echo 'Error: Invalid reset code.';\n  }\n\n} elseif (isset($_POST['reset_password'])) {\n  // Get the user's ID from the database using the reset code\n  $code = $_POST['reset_code'];\n  if (is_reset_code_valid($code)) {\n    $user_id = is_reset_code_valid($code);\n\n    // Set a new password for the user\n    $new_password = $_POST['new_password'];\n\n    if (set_new_password($user_id, $new_password)) {\n      echo 'Password reset successfully!';\n    } else {\n      echo 'Error: Unable to update password.';\n    }\n  } else {\n    echo 'Error: Invalid reset code.';\n  }\n\n}\n```", null]}
