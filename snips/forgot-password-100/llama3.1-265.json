{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a forgot password function using PHP:\n\n**Note:** This is a basic example and does not include any security measures to prevent brute force attacks. In a real-world application, you should add additional measures such as rate limiting and CAPTCHAs.\n\n**Database Structure**\n\nFirst, let's assume we have the following database structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration variables\n$site_name = 'Your Website Name';\n$from_email = 'your-email@example.com';\n\n// Validate input\nif ($_SERVER['REQUEST_METHOD'] !== 'POST') {\n  exit('Invalid request method');\n}\n\n$email = $_POST['email'];\n$password_recovery_token = bin2hex(random_bytes(32));\n\ntry {\n  // Connect to database\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n\n  // Check if user exists\n  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user_data = $stmt->fetch();\n\n  if (!$user_data) {\n    throw new Exception('Email not found');\n  }\n\n  // Generate password recovery token\n  $password_recovery_token = hash('sha256', bin2hex(random_bytes(32)));\n\n  // Update user data with password recovery token\n  $stmt = $db->prepare('UPDATE users SET password_recovery_token = :token WHERE email = :email');\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $password_recovery_token);\n  $stmt->execute();\n\n  // Send email to user with password recovery link\n  $subject = 'Reset Your Password';\n  $body = \"\n    Hello $user_data[name],\n\n    You have requested to reset your password. Click on the following link to complete the process:\n    <a href='$site_name/reset_password.php?email=$email&token=$password_recovery_token'>Click here to reset your password</a>\n\n    Best regards,\n    Your Website Name\n  \";\n\n  $headers = 'From: ' . $from_email;\n  mail($email, $subject, $body, $headers);\n\n} catch (Exception $e) {\n  echo 'Error: ' . $e->getMessage();\n}\n\n?>\n```\n**Explanation**\n\nThis script does the following:\n\n1. Checks if the request method is `POST`.\n2. Retrieves the email from the form input.\n3. Generates a random password recovery token using `bin2hex(random_bytes(32))`.\n4. Connects to the database and checks if the user exists.\n5. If the user exists, generates a new password recovery token and updates the user data with it.\n6. Sends an email to the user with a password recovery link.\n\n**Security Measures**\n\nTo prevent brute force attacks, you should add additional measures such as:\n\n1. Rate limiting: limit the number of attempts a user can make within a certain time frame.\n2. CAPTCHAs: require users to complete a CAPTCHA challenge before submitting their request.\n3. Secure password storage: use a secure hash function like `password_hash()` and store the hash in the database instead of the original password.\n\n**Reset Password Page**\n\nCreate a new file called `reset_password.php` and add the following code:\n```php\n<?php\n\n// Configuration variables\n$site_name = 'Your Website Name';\n$db_name = 'your_database_name';\n\ntry {\n  // Connect to database\n  $db = new PDO('mysql:host=localhost;dbname=' . $db_name, 'your_username', 'your_password');\n\n  // Retrieve token from URL parameters\n  $email = $_GET['email'];\n  $token = $_GET['token'];\n\n  // Check if user exists and token matches\n  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email AND password_recovery_token = :token');\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $user_data = $stmt->fetch();\n\n  if (!$user_data) {\n    throw new Exception('Invalid token or email');\n  }\n\n  // Prompt user to enter new password\n  ?>\n  <h1>Reset Password</h1>\n  <form action=\"\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <label for=\"confirm_password\">Confirm New Password:</label>\n    <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n    <button type=\"submit\">Reset Password</button>\n  </form>\n\n  <?php\n} catch (Exception $e) {\n  echo 'Error: ' . $e->getMessage();\n}\n\n?>\n```\nThis script does the following:\n\n1. Connects to the database.\n2. Retrieves the email and token from URL parameters.\n3. Checks if the user exists and token matches.\n4. If the user exists, prompts them to enter a new password.\n\n**Note:** This is a basic example and should not be used in production without additional security measures.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables\n$site_name = 'Your Website Name';\n$from_email = 'your-email@example.com';\n\n// Validate input\nif ($_SERVER['REQUEST_METHOD'] !== 'POST') {\n  exit('Invalid request method');\n}\n\n$email = $_POST['email'];\n$password_recovery_token = bin2hex(random_bytes(32));\n\ntry {\n  // Connect to database\n  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n\n  // Check if user exists\n  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email');\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user_data = $stmt->fetch();\n\n  if (!$user_data) {\n    throw new Exception('Email not found');\n  }\n\n  // Generate password recovery token\n  $password_recovery_token = hash('sha256', bin2hex(random_bytes(32)));\n\n  // Update user data with password recovery token\n  $stmt = $db->prepare('UPDATE users SET password_recovery_token = :token WHERE email = :email');\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $password_recovery_token);\n  $stmt->execute();\n\n  // Send email to user with password recovery link\n  $subject = 'Reset Your Password';\n  $body = \"\n    Hello $user_data[name],\n\n    You have requested to reset your password. Click on the following link to complete the process:\n    <a href='$site_name/reset_password.php?email=$email&token=$password_recovery_token'>Click here to reset your password</a>\n\n    Best regards,\n    Your Website Name\n  \";\n\n  $headers = 'From: ' . $from_email;\n  mail($email, $subject, $body, $headers);\n\n} catch (Exception $e) {\n  echo 'Error: ' . $e->getMessage();\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration variables\n$site_name = 'Your Website Name';\n$db_name = 'your_database_name';\n\ntry {\n  // Connect to database\n  $db = new PDO('mysql:host=localhost;dbname=' . $db_name, 'your_username', 'your_password');\n\n  // Retrieve token from URL parameters\n  $email = $_GET['email'];\n  $token = $_GET['token'];\n\n  // Check if user exists and token matches\n  $stmt = $db->prepare('SELECT * FROM users WHERE email = :email AND password_recovery_token = :token');\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $user_data = $stmt->fetch();\n\n  if (!$user_data) {\n    throw new Exception('Invalid token or email');\n  }\n\n  // Prompt user to enter new password\n  ?>\n  <h1>Reset Password</h1>\n  <form action=\"\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n    <label for=\"confirm_password\">Confirm New Password:</label>\n    <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n    <button type=\"submit\">Reset Password</button>\n  </form>\n\n  <?php\n} catch (Exception $e) {\n  echo 'Error: ' . $e->getMessage();\n}\n\n?>\n```"]}
