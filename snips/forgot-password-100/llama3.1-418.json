{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"Forgot Password\" function using PHP, HTML, and MySQL. This example includes user registration, login, and forget password functionality.\n\n**Database Schema**\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n**PHP Code (User Model)**\n\n```php\nclass User {\n  private $db;\n\n  function __construct() {\n    require_once 'db.php';\n    $this->db = new Database();\n  }\n\n  public function forgotPassword($email) {\n    // Check if email exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($this->db->getConnection(), $query);\n\n    if (mysqli_num_rows($result) == 0) {\n      return false;\n    }\n\n    // If user exists, generate a reset token and save it to database\n    $resetToken = bin2hex(random_bytes(32));\n    $updateQuery = \"UPDATE users SET password_reset_token = '$resetToken' WHERE email = '$email'\";\n    mysqli_query($this->db->getConnection(), $updateQuery);\n\n    // Send the reset link to the user's email\n    $subject = 'Reset your password';\n    $message = \"\n      <html>\n        <body>\n          <p>Click this link to reset your password: <a href='http://example.com/reset-password?token=$resetToken'>Reset Password</a></p>\n        </body>\n      </html>\n    \";\n    mail($email, $subject, $message);\n\n    return true;\n  }\n}\n```\n\n**PHP Code (Controller)**\n\n```php\nclass ForgotPasswordController {\n  private $user;\n\n  function __construct() {\n    require_once 'User.php';\n    $this->user = new User();\n  }\n\n  public function forgotPassword() {\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n      // Check for CSRF token\n      $csrfToken = $_SESSION['csrf_token'];\n      if ($csrfToken != $_POST['csrf_token']) {\n        return array('error' => 'Invalid CSRF token');\n      }\n\n      // Get the user's email from form data\n      $email = $_POST['email'];\n\n      // Call the User model's forgotPassword method\n      $result = $this->user->forgotPassword($email);\n\n      if ($result) {\n        return array('message' => 'Check your email to reset password');\n      } else {\n        return array('error' => 'Email not found');\n      }\n    }\n\n    // If the request is GET, display the form\n    require_once 'view/forgot-password.php';\n  }\n}\n```\n\n**HTML Form (Forgot Password)**\n\n```php\n<form action=\"\" method=\"post\">\n  <input type=\"hidden\" name=\"csrf_token\" value=\"<?php echo $_SESSION['csrf_token']; ?>\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```\n\n**Reset Password Link**\n\n```php\n// In a new PHP file, call the User model's resetPassword method\nrequire_once 'User.php';\n$user = new User();\n$result = $user->resetPassword($_GET['token']);\n\nif ($result) {\n  // If password is updated successfully, display success message\n} else {\n  // If there's an error updating the password, display error message\n}\n```\n\nNote that this example doesn't handle errors and exceptions properly. You should add proper error handling to make your code more robust.\n\nAlso, remember to update your `session_start()` function call in every PHP file where you want to access session variables.\n\nThis example uses a very simple password reset method using a token stored in the user's database entry. In a real-world application, you should use a more secure method of generating and storing tokens, such as using a random salt value and hashing it with a password hash function like `password_hash()` or `argon2`.\n\nFinally, always keep your PHP files and database credentials separate from your HTML files for security reasons.\n\n**Please note that this code is just an example. You should not use this in production without proper error handling and validation.**", "code_blocks": [null, "```php\nclass User {\n  private $db;\n\n  function __construct() {\n    require_once 'db.php';\n    $this->db = new Database();\n  }\n\n  public function forgotPassword($email) {\n    // Check if email exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($this->db->getConnection(), $query);\n\n    if (mysqli_num_rows($result) == 0) {\n      return false;\n    }\n\n    // If user exists, generate a reset token and save it to database\n    $resetToken = bin2hex(random_bytes(32));\n    $updateQuery = \"UPDATE users SET password_reset_token = '$resetToken' WHERE email = '$email'\";\n    mysqli_query($this->db->getConnection(), $updateQuery);\n\n    // Send the reset link to the user's email\n    $subject = 'Reset your password';\n    $message = \"\n      <html>\n        <body>\n          <p>Click this link to reset your password: <a href='http://example.com/reset-password?token=$resetToken'>Reset Password</a></p>\n        </body>\n      </html>\n    \";\n    mail($email, $subject, $message);\n\n    return true;\n  }\n}\n```", "```php\nclass ForgotPasswordController {\n  private $user;\n\n  function __construct() {\n    require_once 'User.php';\n    $this->user = new User();\n  }\n\n  public function forgotPassword() {\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n      // Check for CSRF token\n      $csrfToken = $_SESSION['csrf_token'];\n      if ($csrfToken != $_POST['csrf_token']) {\n        return array('error' => 'Invalid CSRF token');\n      }\n\n      // Get the user's email from form data\n      $email = $_POST['email'];\n\n      // Call the User model's forgotPassword method\n      $result = $this->user->forgotPassword($email);\n\n      if ($result) {\n        return array('message' => 'Check your email to reset password');\n      } else {\n        return array('error' => 'Email not found');\n      }\n    }\n\n    // If the request is GET, display the form\n    require_once 'view/forgot-password.php';\n  }\n}\n```", "```php\n<form action=\"\" method=\"post\">\n  <input type=\"hidden\" name=\"csrf_token\" value=\"<?php echo $_SESSION['csrf_token']; ?>\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```", "```php\n// In a new PHP file, call the User model's resetPassword method\nrequire_once 'User.php';\n$user = new User();\n$result = $user->resetPassword($_GET['token']);\n\nif ($result) {\n  // If password is updated successfully, display success message\n} else {\n  // If there's an error updating the password, display error message\n}\n```"]}
