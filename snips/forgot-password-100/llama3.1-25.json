{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP, which includes the following features:\n\n1. User enters their email address on the login page.\n2. The system checks if the email address exists in the database.\n3. If the email address exists, the system sends a password reset link to the user's email address.\n4. The password reset link includes a token that is used to validate the request and prevent tampering.\n\n**Database Schema**\n\nFor this example, we'll assume you have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**Code**\n```php\n// config.php (database connection settings)\n<?php\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'myuser';\n$password = 'mypassword';\n\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n?>\n\n// forgot_password.php\n<?php\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // get user input\n    $email = $_POST['email'];\n\n    // check if email address exists in database\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = ?\");\n    $stmt->execute([$email]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n        // generate password reset token\n        $token = bin2hex(random_bytes(32));\n\n        // update user's record with password reset token\n        $stmt = $conn->prepare(\"UPDATE users SET password_reset_token = ? WHERE email = ?\");\n        $stmt->execute([$token, $email]);\n\n        // send password reset link via email\n        $subject = 'Reset Your Password';\n        $body = '<a href=\"' . $_SERVER['REQUEST_URI'] . '?token=' . $token . '\">Click here to reset your password</a>';\n        mail($user['email'], $subject, $body);\n\n        echo \"Password reset link sent to your email. Please check your inbox.\";\n    } else {\n        echo \"Email address not found in our database.\";\n    }\n}\n?>\n\n<!-- form -->\n<form action=\"\" method=\"post\">\n    <label for=\"email\">Enter your email address:</label>\n    <input type=\"email\" id=\"email\" name=\"email\">\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```\n\n**Password Reset Page**\n\nCreate a new PHP file called `reset_password.php` that will handle the password reset process:\n```php\n// reset_password.php\n<?php\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n    // get token from URL parameter\n    $token = $_GET['token'];\n\n    // validate token and check if it matches user's record\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE password_reset_token = ?\");\n    $stmt->execute([$token]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n        // create a new form for password reset\n        ?>\n        <form action=\"\" method=\"post\">\n            <label for=\"new_password\">Enter your new password:</label>\n            <input type=\"password\" id=\"new_password\" name=\"new_password\">\n            <button type=\"submit\">Reset Password</button>\n        </form>\n\n        <?php\n    } else {\n        echo \"Invalid token. Please try again.\";\n    }\n}\n?>\n\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // get user input (new password)\n    $new_password = $_POST['new_password'];\n\n    // update user's record with new password\n    $stmt = $conn->prepare(\"UPDATE users SET password = ? WHERE id = ?\");\n    $stmt->execute([$new_password, $user['id']]);\n\n    echo \"Password reset successfully!\";\n}\n?>\n```\n**Security Notes**\n\n* Always use prepared statements to prevent SQL injection.\n* Use a secure method to generate the password reset token (e.g., random_bytes).\n* Set a reasonable expiration time for the password reset token (e.g., 1 hour).\n\nRemember, this is just an example and you should adapt it to your specific needs. Additionally, consider implementing email verification and password hashing mechanisms for added security.", "code_blocks": ["```php\n// config.php (database connection settings)\n<?php\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'myuser';\n$password = 'mypassword';\n\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n?>\n\n// forgot_password.php\n<?php\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // get user input\n    $email = $_POST['email'];\n\n    // check if email address exists in database\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = ?\");\n    $stmt->execute([$email]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n        // generate password reset token\n        $token = bin2hex(random_bytes(32));\n\n        // update user's record with password reset token\n        $stmt = $conn->prepare(\"UPDATE users SET password_reset_token = ? WHERE email = ?\");\n        $stmt->execute([$token, $email]);\n\n        // send password reset link via email\n        $subject = 'Reset Your Password';\n        $body = '<a href=\"' . $_SERVER['REQUEST_URI'] . '?token=' . $token . '\">Click here to reset your password</a>';\n        mail($user['email'], $subject, $body);\n\n        echo \"Password reset link sent to your email. Please check your inbox.\";\n    } else {\n        echo \"Email address not found in our database.\";\n    }\n}\n?>\n\n<!-- form -->\n<form action=\"\" method=\"post\">\n    <label for=\"email\">Enter your email address:</label>\n    <input type=\"email\" id=\"email\" name=\"email\">\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```", "```php\n// reset_password.php\n<?php\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n    // get token from URL parameter\n    $token = $_GET['token'];\n\n    // validate token and check if it matches user's record\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE password_reset_token = ?\");\n    $stmt->execute([$token]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n        // create a new form for password reset\n        ?>\n        <form action=\"\" method=\"post\">\n            <label for=\"new_password\">Enter your new password:</label>\n            <input type=\"password\" id=\"new_password\" name=\"new_password\">\n            <button type=\"submit\">Reset Password</button>\n        </form>\n\n        <?php\n    } else {\n        echo \"Invalid token. Please try again.\";\n    }\n}\n?>\n\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // get user input (new password)\n    $new_password = $_POST['new_password'];\n\n    // update user's record with new password\n    $stmt = $conn->prepare(\"UPDATE users SET password = ? WHERE id = ?\");\n    $stmt->execute([$new_password, $user['id']]);\n\n    echo \"Password reset successfully!\";\n}\n?>\n```"]}
