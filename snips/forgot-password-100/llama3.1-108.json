{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a forgot password feature using PHP. We will use the following components:\n\n* A user table in the database with username and email fields\n* A PHP script to handle the forgot password request and send an email with a reset link\n* A simple form to submit the forgotten username or email address\n\n**Database Schema**\n--------------------\n\nFor this example, let's assume we have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(50) |\n| email | varchar(100) |\n\n**Forgot Password Script**\n-------------------------\n\nCreate a new PHP file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif (isset($_POST['submit'])) {\n    // Retrieve submitted data\n    $emailOrUsername = $_POST['email_or_username'];\n\n    // SQL query to retrieve user ID and reset token\n    $query = \"SELECT id, password_reset_token FROM users WHERE email = '$emailOrUsername' OR username = '$emailOrUsername'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Retrieve first row from result set\n        $row = $result->fetch_assoc();\n\n        // Generate new password reset token (e.g., using UUID)\n        $newToken = bin2hex(random_bytes(16));\n\n        // Update user's password reset token in database\n        $query = \"UPDATE users SET password_reset_token = '$newToken' WHERE id = '\" . $row['id'] . \"'\";\n        $conn->query($query);\n\n        // Send email with reset link\n        sendResetEmail($emailOrUsername, $newToken);\n    } else {\n        echo 'No user found';\n    }\n}\n\n// Function to send password reset email\nfunction sendResetEmail($emailOrUsername, $token) {\n    // Email configuration variables\n    define('EMAIL_FROM', 'your_email@example.com');\n    define('EMAIL_SUBJECT', 'Password Reset Request');\n\n    // Generate reset link (e.g., using a secure URL)\n    $resetLink = \"https://example.com/reset-password?token=\" . $token;\n\n    // Compose email message\n    $message = \"\n        Dear user,\n        \n        You have requested to reset your password. Please click on the following link to reset your password:\n         $resetLink\n        \n        Best regards,\n        The System\n    \";\n\n    // Send email using mail() function or a library like PHPMailer\n    mail($emailOrUsername, EMAIL_SUBJECT, $message, \"From: \" . EMAIL_FROM);\n}\n\n?>\n```\n**Forgot Password Form**\n-------------------------\n\nCreate an HTML form to submit the forgotten username or email address:\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n    <input type=\"text\" name=\"email_or_username\" placeholder=\"Email or Username\">\n    <button type=\"submit\" name=\"submit\">Submit</button>\n</form>\n```\n**Example Use Case**\n--------------------\n\n1. A user visits the forgot password page and submits their email address or username.\n2. The PHP script checks if a matching record exists in the database.\n3. If a match is found, the script generates a new password reset token and updates the user's record in the database.\n4. The script sends an email with a reset link to the user's email address.\n\nNote: This example uses a simple `mail()` function to send emails. In production environments, consider using a library like PHPMailer or SwiftMailer for more advanced email handling features.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif (isset($_POST['submit'])) {\n    // Retrieve submitted data\n    $emailOrUsername = $_POST['email_or_username'];\n\n    // SQL query to retrieve user ID and reset token\n    $query = \"SELECT id, password_reset_token FROM users WHERE email = '$emailOrUsername' OR username = '$emailOrUsername'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Retrieve first row from result set\n        $row = $result->fetch_assoc();\n\n        // Generate new password reset token (e.g., using UUID)\n        $newToken = bin2hex(random_bytes(16));\n\n        // Update user's password reset token in database\n        $query = \"UPDATE users SET password_reset_token = '$newToken' WHERE id = '\" . $row['id'] . \"'\";\n        $conn->query($query);\n\n        // Send email with reset link\n        sendResetEmail($emailOrUsername, $newToken);\n    } else {\n        echo 'No user found';\n    }\n}\n\n// Function to send password reset email\nfunction sendResetEmail($emailOrUsername, $token) {\n    // Email configuration variables\n    define('EMAIL_FROM', 'your_email@example.com');\n    define('EMAIL_SUBJECT', 'Password Reset Request');\n\n    // Generate reset link (e.g., using a secure URL)\n    $resetLink = \"https://example.com/reset-password?token=\" . $token;\n\n    // Compose email message\n    $message = \"\n        Dear user,\n        \n        You have requested to reset your password. Please click on the following link to reset your password:\n         $resetLink\n        \n        Best regards,\n        The System\n    \";\n\n    // Send email using mail() function or a library like PHPMailer\n    mail($emailOrUsername, EMAIL_SUBJECT, $message, \"From: \" . EMAIL_FROM);\n}\n\n?>\n```", null]}
