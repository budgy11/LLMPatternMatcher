{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"forgot password\" function in PHP. This will involve sending the user their username and a temporary link that they can click to reset their password.\n\n**Security Note:**\n\nBefore we dive into the code, let me emphasize the importance of security when creating a forgot password system:\n\n1. **Validate input**: Always validate any input from your users, including email addresses.\n2. **Store securely**: Store passwords and other sensitive information securely using techniques like hashing and salting (you'll see an example of this below).\n3. **Use HTTPS**: Make sure that all communication between the user's browser and your server is encrypted using HTTPS.\n\n**Database Schema:**\n\nWe'll assume a simple database schema with two tables: `users` and `password_reset_tokens`. The `users` table stores the username, email address, and hashed password for each user. The `password_reset_tokens` table stores a unique token associated with a user's password reset request.\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  password_hash VARCHAR(255)\n);\n\nCREATE TABLE password_reset_tokens (\n  id INT PRIMARY KEY,\n  user_id INT,\n  token VARCHAR(255),\n  expires_at TIMESTAMP\n);\n```\n\n**PHP Code:**\n\nHere's the PHP code for the forgot password function:\n```php\n<?php\n\n// Configuration variables (update these to match your database)\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetEmail($user_id, $token) {\n  // Send email with reset link (using a library like PHPMailer or SwiftMailer)\n  $email = 'your_email@example.com';\n  $subject = 'Password Reset Link';\n\n  $body = '\n    <p>Hello!</p>\n    <p>Click the link below to reset your password:</p>\n    <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password/' . $token . '\">Reset Password</a>\n  ';\n\n  // Send email using your chosen library\n}\n\nfunction generateRandomToken() {\n  return bin2hex(random_bytes(32));\n}\n\nfunction createPasswordResetToken($user_id) {\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n  \n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $token = generateRandomToken();\n  $expires_at = date('Y-m-d H:i:s', strtotime('+1 day'));\n\n  $stmt = $conn->prepare('INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES (?, ?, ?)');\n  $stmt->bind_param('is', $user_id, $token, $expires_at);\n  $stmt->execute();\n\n  return $token;\n}\n\nfunction forgotPassword($email) {\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $stmt = $conn->prepare('SELECT id FROM users WHERE email = ?');\n  $stmt->bind_param('s', $email);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    $user_id = $result->fetch_assoc()['id'];\n    \n    $token = createPasswordResetToken($user_id);\n    \n    sendResetEmail($user_id, $token);\n\n    echo 'A password reset link has been sent to your email.';\n  } else {\n    echo 'User not found.';\n  }\n}\n\n?>\n```\n\n**Usage:**\n\nTo use the forgot password function, call the `forgotPassword` function with the user's email address as an argument:\n```php\nforgotPassword('user@example.com');\n```\nThis will send a password reset link to the user's email address. The link should point to a route like `/reset-password/{token}`, where `{token}` is the password reset token generated by the `createPasswordResetToken` function.\n\n**Reset Password Function:**\n\nTo complete the forgot password process, create a new route that handles the `/reset-password/{token}` request. This route should:\n\n1. Retrieve the user's ID from the database using the provided token.\n2. Prompt the user to enter their new password (using a form).\n3. Hash and store the new password in the database.\n4. Delete the password reset token from the database.\n\nHere's an example implementation:\n```php\nfunction resetPassword($token) {\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $stmt = $conn->prepare('SELECT user_id FROM password_reset_tokens WHERE token = ? AND expires_at > NOW()');\n  $stmt->bind_param('s', $token);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    $user_id = $result->fetch_assoc()['user_id'];\n\n    // Prompt user to enter new password\n    $new_password = $_POST['new_password'];\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n    $stmt = $conn->prepare('UPDATE users SET password_hash = ? WHERE id = ?');\n    $stmt->bind_param('si', $hashed_password, $user_id);\n    $stmt->execute();\n\n    // Delete password reset token\n    $stmt = $conn->prepare('DELETE FROM password_reset_tokens WHERE user_id = ? AND token = ?');\n    $stmt->bind_param('ii', $user_id, $token);\n    $stmt->execute();\n\n    echo 'Password reset successfully!';\n  } else {\n    echo 'Invalid or expired token.';\n  }\n}\n```\nNote that this is a basic example and should be adapted to your specific use case. Additionally, make sure to implement proper validation and security measures when handling passwords and other sensitive information.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables (update these to match your database)\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetEmail($user_id, $token) {\n  // Send email with reset link (using a library like PHPMailer or SwiftMailer)\n  $email = 'your_email@example.com';\n  $subject = 'Password Reset Link';\n\n  $body = '\n    <p>Hello!</p>\n    <p>Click the link below to reset your password:</p>\n    <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password/' . $token . '\">Reset Password</a>\n  ';\n\n  // Send email using your chosen library\n}\n\nfunction generateRandomToken() {\n  return bin2hex(random_bytes(32));\n}\n\nfunction createPasswordResetToken($user_id) {\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n  \n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $token = generateRandomToken();\n  $expires_at = date('Y-m-d H:i:s', strtotime('+1 day'));\n\n  $stmt = $conn->prepare('INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES (?, ?, ?)');\n  $stmt->bind_param('is', $user_id, $token, $expires_at);\n  $stmt->execute();\n\n  return $token;\n}\n\nfunction forgotPassword($email) {\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $stmt = $conn->prepare('SELECT id FROM users WHERE email = ?');\n  $stmt->bind_param('s', $email);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    $user_id = $result->fetch_assoc()['id'];\n    \n    $token = createPasswordResetToken($user_id);\n    \n    sendResetEmail($user_id, $token);\n\n    echo 'A password reset link has been sent to your email.';\n  } else {\n    echo 'User not found.';\n  }\n}\n\n?>\n```", "```php\nforgotPassword('user@example.com');\n```", "```php\nfunction resetPassword($token) {\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $stmt = $conn->prepare('SELECT user_id FROM password_reset_tokens WHERE token = ? AND expires_at > NOW()');\n  $stmt->bind_param('s', $token);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    $user_id = $result->fetch_assoc()['user_id'];\n\n    // Prompt user to enter new password\n    $new_password = $_POST['new_password'];\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n    $stmt = $conn->prepare('UPDATE users SET password_hash = ? WHERE id = ?');\n    $stmt->bind_param('si', $hashed_password, $user_id);\n    $stmt->execute();\n\n    // Delete password reset token\n    $stmt = $conn->prepare('DELETE FROM password_reset_tokens WHERE user_id = ? AND token = ?');\n    $stmt->bind_param('ii', $user_id, $token);\n    $stmt->execute();\n\n    echo 'Password reset successfully!';\n  } else {\n    echo 'Invalid or expired token.';\n  }\n}\n```"]}
