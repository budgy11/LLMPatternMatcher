{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"Forgot Password\" function in PHP, using MySQL as the database:\n\n**Database Schema:**\n\nFirst, you'll need to create a database table to store user credentials and reset tokens. Let's assume we have the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255)\n);\n```\n**PHP Code:**\n\nCreate a new PHP file (e.g., `forgot_password.php`) and add the following code:\n```php\n<?php\n\n// Configuration settings\n$database_host = 'localhost';\n$database_username = 'your_username';\n$database_password = 'your_password';\n$database_name = 'your_database';\n\n// Connect to database\n$mysqli = new mysqli($database_host, $database_username, $database_password, $database_name);\nif ($mysqli->connect_errno) {\n    die(\"Error connecting to database: \" . $mysqli->connect_error);\n}\n\n// Function to send reset link via email\nfunction send_reset_link($email, $reset_token) {\n    // Send email using your preferred method (e.g., PHPMailer)\n    // For demonstration purposes, we'll just print the email body\n    echo \"Subject: Reset Password\\n\";\n    echo \"To: $email\\n\";\n    echo \"From: your_email@example.com\\n\";\n    echo \"\\n\";\n    echo \"Click here to reset password: http://your-website.com/reset-password.php?token=$reset_token\\n\";\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    // Get email from form input\n    $email = $_POST['email'];\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $mysqli->query($query);\n    if ($result->num_rows > 0) {\n        // User found, generate reset token and send email\n        $reset_token = bin2hex(random_bytes(32));\n        $mysqli->query(\"UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'\");\n        send_reset_link($email, $reset_token);\n        echo \"Reset link sent to your email!\";\n    } else {\n        echo \"Email not found. Please try again.\";\n    }\n}\n\n// Display form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Send Reset Link\" name=\"submit\">\n</form>\n```\n**How it works:**\n\n1. When the user submits the form, we get their email address and check if a user with that email exists in our database.\n2. If a user is found, we generate a random reset token using `bin2hex(random_bytes(32))` (you can use any other method to generate a secure token).\n3. We update the user's record in the database by setting their `reset_token` field to the newly generated token.\n4. We call the `send_reset_link()` function, which sends an email with a link that includes the reset token. In this example, we're just printing the email body, but you should replace this with your preferred method of sending emails (e.g., PHPMailer).\n5. The user clicks on the reset link and is redirected to a new page (`reset-password.php`) where they can enter their new password.\n\n**Security Notes:**\n\n* Make sure to hash the user's password using a secure algorithm like bcrypt or Argon2.\n* Store the reset token securely in the database, such as by hashing it with a separate salt.\n* Limit the time window for resetting passwords (e.g., 24 hours).\n* Use HTTPS (SSL/TLS) to encrypt communication between your website and the user's browser.\n\nRemember that this is a basic example and you should adapt it to fit your specific needs. Also, don't forget to handle errors and edge cases properly!", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$database_host = 'localhost';\n$database_username = 'your_username';\n$database_password = 'your_password';\n$database_name = 'your_database';\n\n// Connect to database\n$mysqli = new mysqli($database_host, $database_username, $database_password, $database_name);\nif ($mysqli->connect_errno) {\n    die(\"Error connecting to database: \" . $mysqli->connect_error);\n}\n\n// Function to send reset link via email\nfunction send_reset_link($email, $reset_token) {\n    // Send email using your preferred method (e.g., PHPMailer)\n    // For demonstration purposes, we'll just print the email body\n    echo \"Subject: Reset Password\\n\";\n    echo \"To: $email\\n\";\n    echo \"From: your_email@example.com\\n\";\n    echo \"\\n\";\n    echo \"Click here to reset password: http://your-website.com/reset-password.php?token=$reset_token\\n\";\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    // Get email from form input\n    $email = $_POST['email'];\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $mysqli->query($query);\n    if ($result->num_rows > 0) {\n        // User found, generate reset token and send email\n        $reset_token = bin2hex(random_bytes(32));\n        $mysqli->query(\"UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'\");\n        send_reset_link($email, $reset_token);\n        echo \"Reset link sent to your email!\";\n    } else {\n        echo \"Email not found. Please try again.\";\n    }\n}\n\n// Display form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Send Reset Link\" name=\"submit\">\n</form>\n```"]}
