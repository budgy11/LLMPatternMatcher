{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" functionality in PHP:\n\n**Database Setup**\n\nFirst, we need to set up our database table to store user information. For simplicity, let's use the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255)\n);\n```\n**PHP Code**\n\nCreate a new PHP file (e.g. `forgot-password.php`) and add the following code:\n```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send reset link via email\nfunction send_reset_link($email) {\n  // Generate a random token for the user\n  $token = bin2hex(random_bytes(32));\n\n  // Update user record with new reset token\n  $sql = \"UPDATE users SET reset_token = '$token' WHERE email = '$email'\";\n  if ($conn->query($sql) === TRUE) {\n    // Send email to user with link to reset password\n    $subject = 'Reset Password';\n    $message = \"Click the link below to reset your password:\\n\\n\";\n    $link = '<a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '\">Reset Password</a>';\n    mail($email, $subject, $message);\n  }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  $email = trim($_POST['email']);\n\n  // Check if email exists in database\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // If user exists, send reset link via email\n    send_reset_link($email);\n    echo 'Reset link sent to your email. Please check your inbox.';\n  } else {\n    echo 'Email not found in database.';\n  }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```\n**HTML Form**\n\nCreate an HTML form that submits to the `forgot-password.php` file:\n```html\n<form action=\"forgot-password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\" name=\"submit\">Send Reset Link</button>\n</form>\n```\n**Reset Password Page**\n\nCreate a new PHP file (e.g. `reset-password.php`) to handle password reset:\n```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get token from URL parameter\n$token = $_GET['token'];\n\n// Check if token is valid (i.e. exists in database)\n$sql = \"SELECT * FROM users WHERE reset_token = '$token'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // If token is valid, display password reset form\n  echo 'Enter new password:';\n  echo '<form action=\"reset-password.php\" method=\"post\">';\n  echo '<input type=\"password\" name=\"new_password\"><br><br>';\n  echo '<button type=\"submit\" name=\"submit\">Reset Password</button>';\n  echo '</form>';\n} else {\n  // If token is invalid, display error message\n  echo 'Invalid token. Please try again.';\n}\n\n// Handle form submission (i.e., reset password)\nif (isset($_POST['submit'])) {\n  $new_password = $_POST['new_password'];\n\n  // Update user record with new password\n  $sql = \"UPDATE users SET password_hash = '$new_password' WHERE reset_token = '$token'\";\n  if ($conn->query($sql) === TRUE) {\n    echo 'Password updated successfully!';\n  }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```\n**Note**\n\nThis is a basic implementation of the forgot password functionality. You should consider adding additional security measures, such as:\n\n* Using a more secure method to generate and store reset tokens (e.g., using a library like `phpseclib`)\n* Implementing rate limiting or IP blocking to prevent brute-force attacks\n* Validating user input on both the client-side and server-side\n* Using HTTPS to encrypt communication between the client and server", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send reset link via email\nfunction send_reset_link($email) {\n  // Generate a random token for the user\n  $token = bin2hex(random_bytes(32));\n\n  // Update user record with new reset token\n  $sql = \"UPDATE users SET reset_token = '$token' WHERE email = '$email'\";\n  if ($conn->query($sql) === TRUE) {\n    // Send email to user with link to reset password\n    $subject = 'Reset Password';\n    $message = \"Click the link below to reset your password:\\n\\n\";\n    $link = '<a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '\">Reset Password</a>';\n    mail($email, $subject, $message);\n  }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  $email = trim($_POST['email']);\n\n  // Check if email exists in database\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // If user exists, send reset link via email\n    send_reset_link($email);\n    echo 'Reset link sent to your email. Please check your inbox.';\n  } else {\n    echo 'Email not found in database.';\n  }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```", null, "```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get token from URL parameter\n$token = $_GET['token'];\n\n// Check if token is valid (i.e. exists in database)\n$sql = \"SELECT * FROM users WHERE reset_token = '$token'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // If token is valid, display password reset form\n  echo 'Enter new password:';\n  echo '<form action=\"reset-password.php\" method=\"post\">';\n  echo '<input type=\"password\" name=\"new_password\"><br><br>';\n  echo '<button type=\"submit\" name=\"submit\">Reset Password</button>';\n  echo '</form>';\n} else {\n  // If token is invalid, display error message\n  echo 'Invalid token. Please try again.';\n}\n\n// Handle form submission (i.e., reset password)\nif (isset($_POST['submit'])) {\n  $new_password = $_POST['new_password'];\n\n  // Update user record with new password\n  $sql = \"UPDATE users SET password_hash = '$new_password' WHERE reset_token = '$token'\";\n  if ($conn->query($sql) === TRUE) {\n    echo 'Password updated successfully!';\n  }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```"]}
