{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a \"Forgot Password\" function in PHP. This will send the user a new password via email.\n\n**Note:** For simplicity, we'll use plain text passwords stored in a MySQL database. In a production environment, you should consider using a more secure password hashing method like bcrypt or Argon2.\n\n### Database setup\n\nCreate a MySQL table `users` with the following structure:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n### PHP code: forgot_password.php\n\n```php\n<?php\n\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Email configuration\ndefine('EMAIL_ADDRESS', 'your_email_address');\ndefine('EMAIL_PASSWORD', 'your_email_password');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user input\n$email = $_POST['email'];\n\n// Check if email exists in database\n$query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n    // Email found, generate new password and send it via email\n    $newPassword = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);\n    \n    // Update user's password in database\n    $updateQuery = \"UPDATE users SET password = '$newPassword' WHERE email = '$email'\";\n    $conn->query($updateQuery);\n\n    // Send new password via email using PHPMailer (or a similar library)\n    require_once 'PHPMailer/src/PHPMailer.php';\n    $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.gmail.com';\n    $mail->Port = 587;\n    $mail->SMTPSecure = 'tls';\n    $mail->SMTPAuth = true;\n    $mail->Username = EMAIL_ADDRESS;\n    $mail->Password = EMAIL_PASSWORD;\n    $mail->setFrom(EMAIL_ADDRESS, 'Your Name');\n    $mail->addAddress($email);\n    $mail->Subject = 'New Password for Your Account';\n    $mail->Body = 'Your new password is: ' . $newPassword;\n    if (!$mail->send()) {\n        echo 'Error sending email';\n        exit();\n    }\n    \n    echo 'A new password has been sent to your email.';\n} else {\n    echo 'Email not found in database.';\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n\n### PHP code: index.php (for the form)\n\n```php\n<?php\n\n?>\n\n<h1>Forgot Password</h1>\n\n<form action=\"forgot_password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Submit</button>\n</form>\n\n```\n\n### Notes:\n\n* You'll need to install the PHPMailer library using Composer: `composer require phpmailer/phpmailer`.\n* Make sure to replace the placeholders (`your_username`, `your_password`, etc.) with your actual database credentials and email settings.\n* This is a basic example, you should consider implementing additional security measures such as password hashing and salting.\n* You can customize the email template using HTML and CSS.\n\nThis code snippet demonstrates how to create a \"Forgot Password\" function that sends a new password via email. It uses PHPMailer for sending emails and interacts with a MySQL database for storing user credentials.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Email configuration\ndefine('EMAIL_ADDRESS', 'your_email_address');\ndefine('EMAIL_PASSWORD', 'your_email_password');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user input\n$email = $_POST['email'];\n\n// Check if email exists in database\n$query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n    // Email found, generate new password and send it via email\n    $newPassword = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 10);\n    \n    // Update user's password in database\n    $updateQuery = \"UPDATE users SET password = '$newPassword' WHERE email = '$email'\";\n    $conn->query($updateQuery);\n\n    // Send new password via email using PHPMailer (or a similar library)\n    require_once 'PHPMailer/src/PHPMailer.php';\n    $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.gmail.com';\n    $mail->Port = 587;\n    $mail->SMTPSecure = 'tls';\n    $mail->SMTPAuth = true;\n    $mail->Username = EMAIL_ADDRESS;\n    $mail->Password = EMAIL_PASSWORD;\n    $mail->setFrom(EMAIL_ADDRESS, 'Your Name');\n    $mail->addAddress($email);\n    $mail->Subject = 'New Password for Your Account';\n    $mail->Body = 'Your new password is: ' . $newPassword;\n    if (!$mail->send()) {\n        echo 'Error sending email';\n        exit();\n    }\n    \n    echo 'A new password has been sent to your email.';\n} else {\n    echo 'Email not found in database.';\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n?>\n\n<h1>Forgot Password</h1>\n\n<form action=\"forgot_password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Submit</button>\n</form>\n\n```"]}
