{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function using PHP:\n\n**Database Schema**\n\nLet's assume we have a database table called `users` with the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  password VARCHAR(255)\n);\n```\n**PHP Code**\n\nCreate a new PHP file (e.g. `forgot_password.php`) and add the following code:\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_reset_email($email, $token)\n{\n    // Set up SMTP server\n    $smtp_server = 'your_smtp_server';\n    $smtp_username = 'your_smtp_username';\n    $smtp_password = 'your_smtp_password';\n\n    // Send email using PHPMailer library (install via composer)\n    require_once './vendor/autoload.php';\n    use PHPMailer\\PHPMailer;\n\n    $mail = new PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = $smtp_server;\n    $mail->SMTPAuth = true;\n    $mail->Username = $smtp_username;\n    $mail->Password = $smtp_password;\n    $mail->Port = 587;\n\n    // Set email content\n    $subject = 'Reset your password';\n    $body = '\n        Hello,\n\n        To reset your password, click on the following link:\n        <a href=\"' . $token . '\">Reset Password</a>\n\n        Best regards,\n        Your Website\n    ';\n\n    $mail->setFrom('your_email@example.com', 'Your Name');\n    $mail->addAddress($email);\n\n    // Send email\n    if (!$mail->send()) {\n        echo \"Mailer Error: \" . $mail->ErrorInfo;\n    } else {\n        echo \"Email sent successfully!\";\n    }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get user input\n    $email = $_POST['email'];\n\n    // Check if email exists in database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Generate password reset token (e.g. a random string)\n        $token = bin2hex(random_bytes(32));\n\n        // Update user data with token\n        $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n        $conn->query($sql);\n\n        // Send password reset email\n        send_reset_email($email, $token);\n    } else {\n        echo \"Email not found in database.\";\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**HTML Form**\n\nCreate a new HTML file (e.g. `forgot_password.html`) with the following code:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n</head>\n<body>\n    <h1>Forgot Password</h1>\n    <form action=\"forgot_password.php\" method=\"post\">\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>\n```\n**How it Works**\n\n 1. When the user submits the form, the PHP script checks if the email exists in the database.\n 2. If the email is found, a password reset token (e.g. a random string) is generated and stored in the user's data.\n 3. The script then sends an email to the user with a link to reset their password. The link contains the password reset token.\n 4. When the user clicks on the link, they are redirected to a page where they can enter a new password.\n\nNote that this is just a basic example and you should adapt it to your specific needs. Additionally, you may want to consider using a more secure method for generating passwords (e.g. using a salted hash).", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_reset_email($email, $token)\n{\n    // Set up SMTP server\n    $smtp_server = 'your_smtp_server';\n    $smtp_username = 'your_smtp_username';\n    $smtp_password = 'your_smtp_password';\n\n    // Send email using PHPMailer library (install via composer)\n    require_once './vendor/autoload.php';\n    use PHPMailer\\PHPMailer;\n\n    $mail = new PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = $smtp_server;\n    $mail->SMTPAuth = true;\n    $mail->Username = $smtp_username;\n    $mail->Password = $smtp_password;\n    $mail->Port = 587;\n\n    // Set email content\n    $subject = 'Reset your password';\n    $body = '\n        Hello,\n\n        To reset your password, click on the following link:\n        <a href=\"' . $token . '\">Reset Password</a>\n\n        Best regards,\n        Your Website\n    ';\n\n    $mail->setFrom('your_email@example.com', 'Your Name');\n    $mail->addAddress($email);\n\n    // Send email\n    if (!$mail->send()) {\n        echo \"Mailer Error: \" . $mail->ErrorInfo;\n    } else {\n        echo \"Email sent successfully!\";\n    }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get user input\n    $email = $_POST['email'];\n\n    // Check if email exists in database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Generate password reset token (e.g. a random string)\n        $token = bin2hex(random_bytes(32));\n\n        // Update user data with token\n        $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n        $conn->query($sql);\n\n        // Send password reset email\n        send_reset_email($email, $token);\n    } else {\n        echo \"Email not found in database.\";\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
