{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Database Setup**\n\nFirst, let's assume that we have a database table called `users` with the following structure:\n```php\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**PHP Code**\n\nCreate a new PHP file called `forgot_password.php` and add the following code:\n```php\n<?php\n\nrequire_once 'db_connect.php'; // assuming you have db_connect.php set up to connect to your database\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n\n  // Validate input data\n  if (empty($username) || empty($email)) {\n    echo \"Please enter both username and email\";\n    exit;\n  }\n\n  // Check if user exists in database\n  $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    // Get the user's ID\n    $row = mysqli_fetch_assoc($result);\n    $user_id = $row['id'];\n\n    // Generate a new password and store it in the database\n    $new_password = generateRandomPassword();\n    $query = \"UPDATE users SET password_hash = SHA2('$new_password', 256) WHERE id = '$user_id'\";\n    mysqli_query($conn, $query);\n\n    // Send email with new password to user\n    sendEmailNotification($email, 'Your New Password is:', $new_password);\n\n    echo \"New password sent to your email. Please check your inbox.\";\n  } else {\n    echo \"Username or email not found\";\n  }\n} else {\n  ?>\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <button type=\"submit\">Send New Password</button>\n  </form>\n  <?php\n}\n\n// Helper function to generate a random password\nfunction generateRandomPassword() {\n  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  $password = '';\n  for ($i = 0; $i < 8; $i++) {\n    $password .= substr($chars, rand(0, strlen($chars) - 1), 1);\n  }\n  return $password;\n}\n\n// Helper function to send email notification\nfunction sendEmailNotification($email, $subject, $message) {\n  // Use a library like PHPMailer or SwiftMailer to send emails\n  // For simplicity, we'll just use PHP's mail() function\n  $to = $email;\n  $from = 'your_email@example.com';\n  $headers = 'From: ' . $from . \"\\r\\n\";\n  $headers .= 'Subject: ' . $subject . \"\\r\\n\";\n  mail($to, $subject, $message, $headers);\n}\n\n?>\n```\n**How it Works**\n\n1. The user fills out the form with their username and email.\n2. When the form is submitted, the PHP script checks if both fields are filled in.\n3. If they are, the script queries the database to see if a user with that username and email exists.\n4. If a user is found, the script generates a new random password using the `generateRandomPassword()` function.\n5. The new password is stored in the database by updating the `password_hash` field for that user's ID.\n6. The script sends an email to the user with their new password using the `sendEmailNotification()` function.\n\nNote: This is just a simple example, and you should consider implementing additional security measures such as:\n\n* Hashing and salting passwords\n* Using a more secure method of sending emails (e.g., PHPMailer or SwiftMailer)\n* Implementing rate limiting to prevent brute-force attacks", "code_blocks": ["```php\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```", "```php\n<?php\n\nrequire_once 'db_connect.php'; // assuming you have db_connect.php set up to connect to your database\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n\n  // Validate input data\n  if (empty($username) || empty($email)) {\n    echo \"Please enter both username and email\";\n    exit;\n  }\n\n  // Check if user exists in database\n  $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    // Get the user's ID\n    $row = mysqli_fetch_assoc($result);\n    $user_id = $row['id'];\n\n    // Generate a new password and store it in the database\n    $new_password = generateRandomPassword();\n    $query = \"UPDATE users SET password_hash = SHA2('$new_password', 256) WHERE id = '$user_id'\";\n    mysqli_query($conn, $query);\n\n    // Send email with new password to user\n    sendEmailNotification($email, 'Your New Password is:', $new_password);\n\n    echo \"New password sent to your email. Please check your inbox.\";\n  } else {\n    echo \"Username or email not found\";\n  }\n} else {\n  ?>\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <button type=\"submit\">Send New Password</button>\n  </form>\n  <?php\n}\n\n// Helper function to generate a random password\nfunction generateRandomPassword() {\n  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  $password = '';\n  for ($i = 0; $i < 8; $i++) {\n    $password .= substr($chars, rand(0, strlen($chars) - 1), 1);\n  }\n  return $password;\n}\n\n// Helper function to send email notification\nfunction sendEmailNotification($email, $subject, $message) {\n  // Use a library like PHPMailer or SwiftMailer to send emails\n  // For simplicity, we'll just use PHP's mail() function\n  $to = $email;\n  $from = 'your_email@example.com';\n  $headers = 'From: ' . $from . \"\\r\\n\";\n  $headers .= 'Subject: ' . $subject . \"\\r\\n\";\n  mail($to, $subject, $message, $headers);\n}\n\n?>\n```"]}
