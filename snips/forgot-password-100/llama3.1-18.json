{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a forgot password functionality in PHP:\n\n**Database Schema**\n\nFor this example, we'll assume you have a `users` table with the following columns:\n\n* `id`: unique identifier for each user\n* `username`: username chosen by the user\n* `email`: email address associated with the account\n* `password`: hashed password stored securely (we'll use PHP's built-in `password_hash()` function to store it)\n\n**Forgot Password Function**\n\nFirst, create a file called `forgot_password.php` in your web root directory. This will contain the code for handling forgotten passwords.\n\n```php\n<?php\n\n// Database connection settings\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\ntry {\n    // Establish database connection\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n    exit;\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email)\n{\n    // Generate a random token for the user\n    $token = bin2hex(random_bytes(32));\n\n    // Insert the token into the database (we'll create a new table later)\n    $stmt = $pdo->prepare('INSERT INTO forgot_password_tokens SET email = :email, token = :token');\n    $stmt->execute([':email' => $email, ':token' => $token]);\n\n    // Email template for password reset\n    $emailTemplate = 'Hello %s,\nYou have requested a password reset. Click this link to set a new password:\n<a href=\"http://example.com/reset-password.php?token=%s\">%s</a>\n\nBest regards,\nThe Example Team';\n\n    // Send the email using PHPMailer or your preferred method\n    $emailBody = sprintf($emailTemplate, $_POST['username'], $token, $token);\n    mail($_POST['email'], 'Password Reset', $emailBody);\n\n    echo 'Email sent successfully!';\n}\n\n// Handle form submission (forgot password form)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Check if the user exists in the database\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->execute([':email' => $_POST['email']]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n        // Send password reset email\n        sendPasswordResetEmail($_POST['email']);\n    } else {\n        echo 'User not found!';\n    }\n} ?>\n```\n\n**Create a Forgot Password Form**\n\nNext, create an HTML form that will allow users to enter their email address and request a password reset.\n\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Request Password Reset\">\n</form>\n```\n\n**Database Setup**\n\nTo complete the forgot password functionality, you'll need to create two new tables in your database:\n\n1. `users`: already exists\n2. `forgot_password_tokens`: contains a unique token for each user who requests a password reset.\n\n```sql\nCREATE TABLE forgot_password_tokens (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    email VARCHAR(255) NOT NULL,\n    token CHAR(64) NOT NULL\n);\n```\n\n**Security Notes**\n\n* Make sure to store the `token` securely and do not reveal it in any part of your application.\n* Use a secure method (e.g., PHPMailer, Gmail SMTP) to send emails.\n* Validate user input to prevent SQL injection attacks.\n\nThis is just a basic example. You'll need to modify and enhance this code to fit your specific needs and database schema.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\ntry {\n    // Establish database connection\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n    exit;\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email)\n{\n    // Generate a random token for the user\n    $token = bin2hex(random_bytes(32));\n\n    // Insert the token into the database (we'll create a new table later)\n    $stmt = $pdo->prepare('INSERT INTO forgot_password_tokens SET email = :email, token = :token');\n    $stmt->execute([':email' => $email, ':token' => $token]);\n\n    // Email template for password reset\n    $emailTemplate = 'Hello %s,\nYou have requested a password reset. Click this link to set a new password:\n<a href=\"http://example.com/reset-password.php?token=%s\">%s</a>\n\nBest regards,\nThe Example Team';\n\n    // Send the email using PHPMailer or your preferred method\n    $emailBody = sprintf($emailTemplate, $_POST['username'], $token, $token);\n    mail($_POST['email'], 'Password Reset', $emailBody);\n\n    echo 'Email sent successfully!';\n}\n\n// Handle form submission (forgot password form)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Check if the user exists in the database\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->execute([':email' => $_POST['email']]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n        // Send password reset email\n        sendPasswordResetEmail($_POST['email']);\n    } else {\n        echo 'User not found!';\n    }\n} ?>\n```", null, null]}
