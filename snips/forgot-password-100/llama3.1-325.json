{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"Forgot Password\" function in PHP:\n\n**Note:** This is a basic implementation and you should consider adding additional security measures, such as email verification and password reset limits.\n\n**Database Schema:**\n\nWe'll assume you have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(255) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**Forgot Password Form:**\n\nCreate an HTML form to collect the user's email address:\n```html\n<form action=\"forgot-password.php\" method=\"post\">\n  <label for=\"email\">Email Address:</label>\n  <input type=\"email\" id=\"email\" name=\"email\" required>\n  <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```\n**Forgot Password PHP Code (forgot-password.php):**\n\n```php\n<?php\n\n// Set the email address to send the password reset link from\n$fromEmail = \"your-email@example.com\";\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (mysqli_connect_errno()) {\n    echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n}\n\n// Get user's email address from form submission\n$email = $_POST['email'];\n\n// Check if email is valid and exists in database\n$query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    // Email found, generate password reset token and send email\n    $token = bin2hex(random_bytes(32));\n    $passwordResetLink = \"https://your-website.com/reset-password.php?token=$token\";\n\n    // Send email with password reset link\n    $subject = \"Password Reset Link\";\n    $body = \"Click on the following link to reset your password: $passwordResetLink\";\n    mail($email, $subject, $body, \"From: $fromEmail\");\n\n    // Store token in database for future use (optional)\n    $updateQuery = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n    mysqli_query($conn, $updateQuery);\n\n    echo \"Password reset link sent to your email. Please check your inbox.\";\n} else {\n    echo \"Email not found in database.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n**Password Reset Form (reset-password.php):**\n\nCreate an HTML form to collect the user's new password:\n```html\n<form action=\"reset-password.php\" method=\"post\">\n  <label for=\"token\">Password Reset Token:</label>\n  <input type=\"text\" id=\"token\" name=\"token\" required>\n  <label for=\"new_password\">New Password:</label>\n  <input type=\"password\" id=\"new_password\" name=\"new_password\" required>\n  <button type=\"submit\">Reset Password</button>\n</form>\n```\n**Password Reset PHP Code (reset-password.php):**\n\n```php\n<?php\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (mysqli_connect_errno()) {\n    echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n}\n\n// Get password reset token from form submission\n$token = $_POST['token'];\n\n// Check if token is valid and exists in database\n$query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    // Token found, update user's password\n    $newPassword = $_POST['new_password'];\n    $updateQuery = \"UPDATE users SET password = '$newPassword', password_reset_token = '' WHERE password_reset_token = '$token'\";\n    mysqli_query($conn, $updateQuery);\n\n    echo \"Password updated successfully.\";\n} else {\n    echo \"Invalid token.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\nNote that this is a basic implementation and you should consider adding additional security measures, such as:\n\n* Email verification using a separate email address or verification code.\n* Password reset limits (e.g., maximum attempts allowed).\n* Secure password storage (e.g., using bcrypt or Argon2).\n* Validation of user input to prevent SQL injection and XSS attacks.\n\nAlso, make sure to update the database schema and PHP code according to your specific requirements.", "code_blocks": [null, "```php\n<?php\n\n// Set the email address to send the password reset link from\n$fromEmail = \"your-email@example.com\";\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (mysqli_connect_errno()) {\n    echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n}\n\n// Get user's email address from form submission\n$email = $_POST['email'];\n\n// Check if email is valid and exists in database\n$query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    // Email found, generate password reset token and send email\n    $token = bin2hex(random_bytes(32));\n    $passwordResetLink = \"https://your-website.com/reset-password.php?token=$token\";\n\n    // Send email with password reset link\n    $subject = \"Password Reset Link\";\n    $body = \"Click on the following link to reset your password: $passwordResetLink\";\n    mail($email, $subject, $body, \"From: $fromEmail\");\n\n    // Store token in database for future use (optional)\n    $updateQuery = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n    mysqli_query($conn, $updateQuery);\n\n    echo \"Password reset link sent to your email. Please check your inbox.\";\n} else {\n    echo \"Email not found in database.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null, "```php\n<?php\n\n// Connect to database\n$conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n\nif (mysqli_connect_errno()) {\n    echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n}\n\n// Get password reset token from form submission\n$token = $_POST['token'];\n\n// Check if token is valid and exists in database\n$query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    // Token found, update user's password\n    $newPassword = $_POST['new_password'];\n    $updateQuery = \"UPDATE users SET password = '$newPassword', password_reset_token = '' WHERE password_reset_token = '$token'\";\n    mysqli_query($conn, $updateQuery);\n\n    echo \"Password updated successfully.\";\n} else {\n    echo \"Invalid token.\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```"]}
