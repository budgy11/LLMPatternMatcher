{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of a simple \"forgot password\" functionality in PHP. This will send the user an email with a temporary link to reset their password.\n\n**Note:** Before we dive into the code, make sure you have the following:\n\n* A MySQL database (or any other database system) set up for storing users' data.\n* The `phpmailer` library installed and configured (`composer require phpmailer/phpmailer`)\n* The email sending functionality enabled in your server settings.\n\n**Database Schema**\n\nWe need a table to store user information. Here's an example of what it might look like:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password_hash CHAR(60),\n  reset_token CHAR(32)\n);\n```\n\n**PHP Code**\n\nCreate a new PHP file named `forgot_password.php` and add the following code:\n\n```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get email from form data\n$email = $_POST['email'];\n\n// Query to retrieve user information\n$query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    // If the user exists, generate a temporary token for password reset\n    $user_data = mysqli_fetch_assoc($result);\n    $token = bin2hex(random_bytes(32));\n    update_user_reset_token($conn, $email, $token);\n\n    // Send email with reset link\n    send_password_reset_email($user_data['email'], $token);\n\n} else {\n    echo 'Email not found';\n}\n\n// Function to generate and store the temporary token\nfunction update_user_reset_token($conn, $email, $token) {\n    $query = \"UPDATE users SET reset_token = '$token' WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n}\n\n// Function to send the password reset email\nfunction send_password_reset_email($email, $token) {\n    require_once 'vendor/autoload.php'; // Load phpmailer library\n\n    use PHPMailer\\PHPMailer;\n\n    $mail = new PHPMailer();\n\n    try {\n        $mail->isSMTP();\n        $mail->Host = 'smtp.example.com';\n        $mail->Port = 587;\n        $mail->SMTPAuth = true;\n        $mail->Username = 'your_email@example.com';\n        $mail->Password = 'your_password';\n\n        $mail->setFrom('your_email@example.com', 'Your Name');\n        $mail->addAddress($email);\n        $mail->Subject = 'Reset Password';\n        $body = \"Click the link to reset your password: <a href='http://example.com/reset-password?token=$token'>Reset Password</a>\";\n        $mail->Body = $body;\n        $mail->AltBody = 'This is a plain-text message body';\n\n        $mail->send();\n    } catch (Exception $e) {\n        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;\n    }\n}\n\n?>\n```\n\n**Explanation**\n\n1. When the user clicks the \"Forgot Password\" link, they will be taken to a form where they need to enter their email.\n2. The PHP script retrieves this email from the form data and queries the database for a matching email address.\n3. If a match is found, it generates a temporary token using `random_bytes` function and stores it in the user's record in the database.\n4. It then sends an email to the user with a link to reset their password.\n\n**Security Considerations**\n\n1. **Token Generation**: The temporary token should be generated securely using a cryptographically secure pseudo-random number generator (CSPRNG).\n2. **Email Validation**: Always validate and sanitize any input from users to prevent SQL injection or cross-site scripting attacks.\n3. **Password Reset Link**: Ensure the password reset link is secure by adding an HTTPS protocol prefix, or ensure that it's behind a login system that uses secure authentication methods.\n\n**Commit Message Guidelines**\n\nWhen making changes to this code, commit your changes with meaningful messages following standard professional guidelines:\n\n```bash\ngit add forgot_password.php\n\ngit commit -m \"Refactor forgot password function for better security and user experience\"\n\ngit push origin <branch_name>\n```\n\nThis will make it easier for team members (or future-you) to understand the changes made.", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get email from form data\n$email = $_POST['email'];\n\n// Query to retrieve user information\n$query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    // If the user exists, generate a temporary token for password reset\n    $user_data = mysqli_fetch_assoc($result);\n    $token = bin2hex(random_bytes(32));\n    update_user_reset_token($conn, $email, $token);\n\n    // Send email with reset link\n    send_password_reset_email($user_data['email'], $token);\n\n} else {\n    echo 'Email not found';\n}\n\n// Function to generate and store the temporary token\nfunction update_user_reset_token($conn, $email, $token) {\n    $query = \"UPDATE users SET reset_token = '$token' WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n}\n\n// Function to send the password reset email\nfunction send_password_reset_email($email, $token) {\n    require_once 'vendor/autoload.php'; // Load phpmailer library\n\n    use PHPMailer\\PHPMailer;\n\n    $mail = new PHPMailer();\n\n    try {\n        $mail->isSMTP();\n        $mail->Host = 'smtp.example.com';\n        $mail->Port = 587;\n        $mail->SMTPAuth = true;\n        $mail->Username = 'your_email@example.com';\n        $mail->Password = 'your_password';\n\n        $mail->setFrom('your_email@example.com', 'Your Name');\n        $mail->addAddress($email);\n        $mail->Subject = 'Reset Password';\n        $body = \"Click the link to reset your password: <a href='http://example.com/reset-password?token=$token'>Reset Password</a>\";\n        $mail->Body = $body;\n        $mail->AltBody = 'This is a plain-text message body';\n\n        $mail->send();\n    } catch (Exception $e) {\n        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;\n    }\n}\n\n?>\n```", null]}
