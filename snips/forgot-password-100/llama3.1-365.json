{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function using PHP:\n\n**Database Schema**\n\nFirst, let's assume we have the following database schema for users:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**PHP Code**\n\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $password_reset_link) {\n    // Create a new mailer object\n    $mailer = Mailer::instance();\n\n    // Set the sender and recipient emails\n    $from_email = 'no-reply@example.com';\n    $to_email = $email;\n\n    // Set the email subject and body\n    $subject = 'Password Reset Request';\n    $body = \"Click on this link to reset your password: <a href='$password_reset_link'>$password_reset_link</a>\";\n\n    // Send the email\n    try {\n        $mailer->sendEmail($from_email, $to_email, $subject, $body);\n        echo \"Email sent successfully!\";\n    } catch (Exception $e) {\n        echo \"Error sending email: \" . $e->getMessage();\n    }\n}\n\n// Function to generate a password reset link\nfunction generate_password_reset_link($email) {\n    // Generate a random token\n    $token = bin2hex(random_bytes(32));\n\n    // Insert the token into the database\n    $query = \"INSERT INTO password_resets (email, token) VALUES ('$email', '$token')\";\n    if (!$mysqli->query($query)) {\n        echo \"Error generating password reset link: (\" . $mysqli->errno . \") \" . $mysqli->error;\n        exit();\n    }\n\n    // Return the password reset link\n    return \"http://example.com/reset-password?token=$token\";\n}\n\n// Forgot password function\nfunction forgot_password() {\n    // Get the email address from the request\n    if (!isset($_POST['email'])) {\n        echo \"Error: Email is required.\";\n        exit();\n    }\n    $email = $_POST['email'];\n\n    // Check if the user exists in the database\n    $query = \"SELECT * FROM users WHERE email='$email'\";\n    $result = $mysqli->query($query);\n    if (!$result || !$row = $result->fetch_assoc()) {\n        echo \"Error: User not found.\";\n        exit();\n    }\n\n    // Generate a password reset link and send an email\n    $password_reset_link = generate_password_reset_link($email);\n    send_password_reset_email($email, $password_reset_link);\n\n    echo \"Email sent successfully. Please check your inbox for the password reset link.\";\n}\n\n// Check if the request is a POST request to the forgot password endpoint\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && $_POST['action'] == 'forgot-password') {\n    // Call the forgot password function\n    forgot_password();\n} else {\n    echo \"Error: Invalid request method or action.\";\n}\n```\n\n**HTML Form**\n\n```html\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"action\" value=\"forgot-password\">\n    Email Address: <input type=\"email\" name=\"email\"><br>\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```\n\n**Explanation**\n\nThis example demonstrates how to create a \"Forgot Password\" function using PHP and MySQL. The `forgot_password` function checks if the user exists in the database, generates a password reset link, and sends an email with the link.\n\nNote that this is a basic example and you should consider implementing additional security measures such as:\n\n* Using a secure token (e.g., JWT) instead of a plain text token\n* Validating the token before allowing the user to reset their password\n* Implementing CAPTCHA or other anti-spam measures to prevent abuse\n* Using a secure email library to send emails with passwords reset links\n\nAlso, make sure to replace the placeholders (`your_username`, `your_password`, etc.) with your actual database credentials and update the database schema as needed.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $password_reset_link) {\n    // Create a new mailer object\n    $mailer = Mailer::instance();\n\n    // Set the sender and recipient emails\n    $from_email = 'no-reply@example.com';\n    $to_email = $email;\n\n    // Set the email subject and body\n    $subject = 'Password Reset Request';\n    $body = \"Click on this link to reset your password: <a href='$password_reset_link'>$password_reset_link</a>\";\n\n    // Send the email\n    try {\n        $mailer->sendEmail($from_email, $to_email, $subject, $body);\n        echo \"Email sent successfully!\";\n    } catch (Exception $e) {\n        echo \"Error sending email: \" . $e->getMessage();\n    }\n}\n\n// Function to generate a password reset link\nfunction generate_password_reset_link($email) {\n    // Generate a random token\n    $token = bin2hex(random_bytes(32));\n\n    // Insert the token into the database\n    $query = \"INSERT INTO password_resets (email, token) VALUES ('$email', '$token')\";\n    if (!$mysqli->query($query)) {\n        echo \"Error generating password reset link: (\" . $mysqli->errno . \") \" . $mysqli->error;\n        exit();\n    }\n\n    // Return the password reset link\n    return \"http://example.com/reset-password?token=$token\";\n}\n\n// Forgot password function\nfunction forgot_password() {\n    // Get the email address from the request\n    if (!isset($_POST['email'])) {\n        echo \"Error: Email is required.\";\n        exit();\n    }\n    $email = $_POST['email'];\n\n    // Check if the user exists in the database\n    $query = \"SELECT * FROM users WHERE email='$email'\";\n    $result = $mysqli->query($query);\n    if (!$result || !$row = $result->fetch_assoc()) {\n        echo \"Error: User not found.\";\n        exit();\n    }\n\n    // Generate a password reset link and send an email\n    $password_reset_link = generate_password_reset_link($email);\n    send_password_reset_email($email, $password_reset_link);\n\n    echo \"Email sent successfully. Please check your inbox for the password reset link.\";\n}\n\n// Check if the request is a POST request to the forgot password endpoint\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && $_POST['action'] == 'forgot-password') {\n    // Call the forgot password function\n    forgot_password();\n} else {\n    echo \"Error: Invalid request method or action.\";\n}\n```", null]}
