{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function using PHP:\n\n**Database Schema:**\n\nWe assume you have a database table named `users` with the following columns:\n\n* `id` (primary key, auto increment)\n* `username`\n* `email`\n* `password` (hashed using a library like `phpass` or `bcrypt`)\n\n**Forgot Password Function:**\n\n```php\nfunction forgot_password($username_or_email) {\n    // Connect to database\n    $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');\n\n    // Prepare query to select user ID and email from users table\n    $stmt = $db->prepare(\"SELECT id, email FROM users WHERE :username_or_email = :username_or_email OR email = :username_or_email\");\n    $stmt->bindParam(':username_or_email', $username_or_email);\n    $stmt->execute();\n\n    // Fetch user data\n    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user_data) {\n        // Generate password reset token and store it in the database\n        $token = bin2hex(random_bytes(32));\n        $query = \"UPDATE users SET password_reset_token = :token WHERE id = :id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':token', $token);\n        $stmt->bindParam(':id', $user_data['id']);\n        $stmt->execute();\n\n        // Send email to user with reset link\n        $subject = \"Reset your password\";\n        $body = \"\n            <p>Dear {$username_or_email},</p>\n            <p>You are receiving this email because we received a request to reset your password. Click the following link to reset your password:</p>\n            <p><a href=\\\"http://example.com/reset_password.php?token={$token}\\\">Reset Password</a></p>\n        \";\n        $from_email = 'admin@example.com';\n        send_email($username_or_email, $body, $subject, $from_email);\n\n        return true;\n    } else {\n        // User not found\n        return false;\n    }\n}\n\n// Function to send email using a mail library like PHPMailer or SwiftMailer\nfunction send_email($to_email, $body, $subject, $from_email) {\n    // Your email sending code here...\n}\n```\n\n**Reset Password Page:**\n\nCreate an HTML form with a hidden input field containing the password reset token. When the user submits the form, verify the token and allow them to set their new password.\n\n```php\n<?php\n// Connect to database\n$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');\n\n// Get token from URL\n$token = $_GET['token'];\n\n// Verify token\n$stmt = $db->prepare(\"SELECT id FROM users WHERE password_reset_token = :token\");\n$stmt->bindParam(':token', $token);\n$stmt->execute();\n$user_id = $stmt->fetchColumn();\n\nif ($user_id) {\n    // Display form to set new password\n    echo '<form action=\"reset_password.php\" method=\"post\">';\n    echo 'New Password: <input type=\"password\" name=\"new_password\"><br>';\n    echo 'Confirm Password: <input type=\"password\" name=\"confirm_password\"><br>';\n    echo '<input type=\"submit\" value=\"Reset Password\">';\n    echo '</form>';\n} else {\n    // Token not valid\n    echo \"Invalid token.\";\n}\n?>\n\n<?php\n// Set new password when form submitted\nif ($_POST['new_password']) {\n    $stmt = $db->prepare(\"UPDATE users SET password = :password WHERE id = :id\");\n    $stmt->bindParam(':password', crypt($_POST['new_password']));\n    $stmt->bindParam(':id', $_SESSION['user_id']);\n    $stmt->execute();\n\n    // Clear password reset token\n    $query = \"UPDATE users SET password_reset_token = NULL WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $_SESSION['user_id']);\n    $stmt->execute();\n}\n?>\n```\n\n**Security Considerations:**\n\n* Use HTTPS to encrypt communication between client and server.\n* Hash passwords securely using a library like `phpass` or `bcrypt`.\n* Use prepared statements to prevent SQL injection attacks.\n* Verify user identity before resetting password (use email verification or another form of authentication).\n* Limit attempts to reset password within a certain time frame.\n\nThis is just an example, you should adapt it to your specific use case and requirements. Always keep security best practices in mind when implementing password recovery functionality.", "code_blocks": ["```php\nfunction forgot_password($username_or_email) {\n    // Connect to database\n    $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');\n\n    // Prepare query to select user ID and email from users table\n    $stmt = $db->prepare(\"SELECT id, email FROM users WHERE :username_or_email = :username_or_email OR email = :username_or_email\");\n    $stmt->bindParam(':username_or_email', $username_or_email);\n    $stmt->execute();\n\n    // Fetch user data\n    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user_data) {\n        // Generate password reset token and store it in the database\n        $token = bin2hex(random_bytes(32));\n        $query = \"UPDATE users SET password_reset_token = :token WHERE id = :id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':token', $token);\n        $stmt->bindParam(':id', $user_data['id']);\n        $stmt->execute();\n\n        // Send email to user with reset link\n        $subject = \"Reset your password\";\n        $body = \"\n            <p>Dear {$username_or_email},</p>\n            <p>You are receiving this email because we received a request to reset your password. Click the following link to reset your password:</p>\n            <p><a href=\\\"http://example.com/reset_password.php?token={$token}\\\">Reset Password</a></p>\n        \";\n        $from_email = 'admin@example.com';\n        send_email($username_or_email, $body, $subject, $from_email);\n\n        return true;\n    } else {\n        // User not found\n        return false;\n    }\n}\n\n// Function to send email using a mail library like PHPMailer or SwiftMailer\nfunction send_email($to_email, $body, $subject, $from_email) {\n    // Your email sending code here...\n}\n```", "```php\n<?php\n// Connect to database\n$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');\n\n// Get token from URL\n$token = $_GET['token'];\n\n// Verify token\n$stmt = $db->prepare(\"SELECT id FROM users WHERE password_reset_token = :token\");\n$stmt->bindParam(':token', $token);\n$stmt->execute();\n$user_id = $stmt->fetchColumn();\n\nif ($user_id) {\n    // Display form to set new password\n    echo '<form action=\"reset_password.php\" method=\"post\">';\n    echo 'New Password: <input type=\"password\" name=\"new_password\"><br>';\n    echo 'Confirm Password: <input type=\"password\" name=\"confirm_password\"><br>';\n    echo '<input type=\"submit\" value=\"Reset Password\">';\n    echo '</form>';\n} else {\n    // Token not valid\n    echo \"Invalid token.\";\n}\n?>\n\n<?php\n// Set new password when form submitted\nif ($_POST['new_password']) {\n    $stmt = $db->prepare(\"UPDATE users SET password = :password WHERE id = :id\");\n    $stmt->bindParam(':password', crypt($_POST['new_password']));\n    $stmt->bindParam(':id', $_SESSION['user_id']);\n    $stmt->execute();\n\n    // Clear password reset token\n    $query = \"UPDATE users SET password_reset_token = NULL WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $_SESSION['user_id']);\n    $stmt->execute();\n}\n?>\n```"]}
