{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function using PHP:\n\n**Note:** This example uses a very basic approach and should be used as a starting point. In a real-world application, you would want to add more security measures such as email verification, token expiration, etc.\n\n**Database Setup:**\n\nFirst, let's assume we have a table called `users` with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int |\n| email | varchar(255) |\n| password_hash | varchar(255) |\n\n**Forgot Password Code (forgot_password.php):**\n```php\n<?php\n\n// Set up database connection\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to check if user exists\nfunction check_user_exists($email) {\n    global $conn;\n    $query = \"SELECT id FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n    return $result->num_rows > 0;\n}\n\n// Define function to send forgot password email\nfunction send_forgot_password_email($user_id, $email) {\n    global $conn;\n\n    // Generate random token (e.g. for email verification)\n    $token = bin2hex(random_bytes(32));\n\n    // Update user's email in database with new token\n    $query = \"UPDATE users SET forgot_password_token = '$token' WHERE id = '$user_id'\";\n    $conn->query($query);\n\n    // Send email to user with reset link\n    $to = $email;\n    $subject = 'Reset your password';\n    $body = \"Click this link to reset your password: <a href='http://your-website.com/reset-password.php?token=$token'>Reset Password</a>\";\n\n    $headers = 'From: your-email@example.com' . \"\\r\\n\";\n    mail($to, $subject, $body, $headers);\n\n    return true;\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n    $email = $_POST['email'];\n\n    // Check if user exists\n    if (check_user_exists($email)) {\n        $user_id = $conn->query(\"SELECT id FROM users WHERE email = '$email'\")->fetch_assoc()['id'];\n        send_forgot_password_email($user_id, $email);\n    } else {\n        echo \"Email not found\";\n    }\n}\n\n// Display forgot password form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Email:</label>\n    <input type=\"text\" name=\"email\" value=\"<?php echo isset($_POST['email']) ? $_POST['email'] : ''; ?>\">\n    <button type=\"submit\" name=\"forgot_password\">Submit</button>\n</form>\n\n<?php\n// Close database connection\n$conn->close();\n?>\n```\n**Reset Password Code (reset-password.php):**\n```php\n<?php\n\n// Set up database connection\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to check if token is valid\nfunction check_token_valid($token) {\n    global $conn;\n\n    // Get user ID from database using token\n    $query = \"SELECT id FROM users WHERE forgot_password_token = '$token'\";\n    $result = $conn->query($query);\n\n    return $result->num_rows > 0;\n}\n\n// Define function to update password\nfunction update_password($user_id, $new_password) {\n    global $conn;\n\n    // Hash new password and update user's password in database\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n    $query = \"UPDATE users SET password_hash = '$hashed_password' WHERE id = '$user_id'\";\n    $conn->query($query);\n\n    return true;\n}\n\n// Handle reset password form submission\nif (isset($_POST['reset_password'])) {\n    $token = $_GET['token'];\n\n    // Check if token is valid\n    if (check_token_valid($token)) {\n        $user_id = $conn->query(\"SELECT id FROM users WHERE forgot_password_token = '$token'\")->fetch_assoc()['id'];\n        update_password($user_id, $_POST['new_password']);\n    } else {\n        echo \"Invalid token\";\n    }\n}\n\n// Display reset password form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\" value=\"<?php echo isset($_POST['new_password']) ? $_POST['new_password'] : ''; ?>\">\n    <button type=\"submit\" name=\"reset_password\">Submit</button>\n</form>\n\n<?php\n// Close database connection\n$conn->close();\n?>\n```\n**Security Notes:**\n\n* This example uses a very basic approach and should not be used in production without additional security measures.\n* The `forgot_password` email is sent with the user's password, which is a huge security risk. Consider using a more secure method such as sending a verification token instead of the actual password.\n* The `reset_password` form does not have any validation or sanitization, which could lead to SQL injection attacks. Always validate and sanitize user input.\n* This example uses a very basic password hashing algorithm (e.g. `password_hash`). Consider using a more secure algorithm such as Argon2.\n\n**Example Use Case:**\n\n1. User goes to the forgot password page (`forgot_password.php`) and submits their email address.\n2. The system checks if the user exists in the database and sends an email with a reset link to the user's email address.\n3. The user clicks on the reset link (e.g. `reset-password.php?token=abc123`).\n4. The system verifies the token and presents the user with a form to enter their new password.\n\nNote: This is just a basic example and you should consider adding more security measures, such as email verification, token expiration, etc.", "code_blocks": ["```php\n<?php\n\n// Set up database connection\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to check if user exists\nfunction check_user_exists($email) {\n    global $conn;\n    $query = \"SELECT id FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n    return $result->num_rows > 0;\n}\n\n// Define function to send forgot password email\nfunction send_forgot_password_email($user_id, $email) {\n    global $conn;\n\n    // Generate random token (e.g. for email verification)\n    $token = bin2hex(random_bytes(32));\n\n    // Update user's email in database with new token\n    $query = \"UPDATE users SET forgot_password_token = '$token' WHERE id = '$user_id'\";\n    $conn->query($query);\n\n    // Send email to user with reset link\n    $to = $email;\n    $subject = 'Reset your password';\n    $body = \"Click this link to reset your password: <a href='http://your-website.com/reset-password.php?token=$token'>Reset Password</a>\";\n\n    $headers = 'From: your-email@example.com' . \"\\r\\n\";\n    mail($to, $subject, $body, $headers);\n\n    return true;\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n    $email = $_POST['email'];\n\n    // Check if user exists\n    if (check_user_exists($email)) {\n        $user_id = $conn->query(\"SELECT id FROM users WHERE email = '$email'\")->fetch_assoc()['id'];\n        send_forgot_password_email($user_id, $email);\n    } else {\n        echo \"Email not found\";\n    }\n}\n\n// Display forgot password form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Email:</label>\n    <input type=\"text\" name=\"email\" value=\"<?php echo isset($_POST['email']) ? $_POST['email'] : ''; ?>\">\n    <button type=\"submit\" name=\"forgot_password\">Submit</button>\n</form>\n\n<?php\n// Close database connection\n$conn->close();\n?>\n```", "```php\n<?php\n\n// Set up database connection\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to check if token is valid\nfunction check_token_valid($token) {\n    global $conn;\n\n    // Get user ID from database using token\n    $query = \"SELECT id FROM users WHERE forgot_password_token = '$token'\";\n    $result = $conn->query($query);\n\n    return $result->num_rows > 0;\n}\n\n// Define function to update password\nfunction update_password($user_id, $new_password) {\n    global $conn;\n\n    // Hash new password and update user's password in database\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n    $query = \"UPDATE users SET password_hash = '$hashed_password' WHERE id = '$user_id'\";\n    $conn->query($query);\n\n    return true;\n}\n\n// Handle reset password form submission\nif (isset($_POST['reset_password'])) {\n    $token = $_GET['token'];\n\n    // Check if token is valid\n    if (check_token_valid($token)) {\n        $user_id = $conn->query(\"SELECT id FROM users WHERE forgot_password_token = '$token'\")->fetch_assoc()['id'];\n        update_password($user_id, $_POST['new_password']);\n    } else {\n        echo \"Invalid token\";\n    }\n}\n\n// Display reset password form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\" value=\"<?php echo isset($_POST['new_password']) ? $_POST['new_password'] : ''; ?>\">\n    <button type=\"submit\" name=\"reset_password\">Submit</button>\n</form>\n\n<?php\n// Close database connection\n$conn->close();\n?>\n```"]}
