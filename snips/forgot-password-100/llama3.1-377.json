{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" functionality in PHP:\n\n**Note:** This example uses a simple approach to reset passwords and does not include any advanced security measures such as hashing or salting. For a production environment, consider using established libraries like `PHPass` or `Password Hashing`.\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n```\n**Forgot Password Form (index.php):**\n```php\n<?php\nrequire 'dbconnect.php'; // assume dbconnect.php contains database connection settings\n\n// validate form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    // query to retrieve user data\n    $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n        $user_data = mysqli_fetch_assoc($result);\n        // generate and send password reset link\n        require 'send_email.php'; // assume send_email.php contains email sending function\n\n        header('Location: reset_password.php?token=' . $user_data['reset_token']);\n    } else {\n        echo \"Invalid username or email\";\n    }\n}\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```\n**Password Reset Form (reset_password.php):**\n```php\n<?php\nrequire 'dbconnect.php'; // assume dbconnect.php contains database connection settings\n\n// validate token and retrieve user data\n$token = $_GET['token'];\n$query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    $user_data = mysqli_fetch_assoc($result);\n    // display form to update password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Enter new password:</label>\n    <input type=\"password\" name=\"new_password\"><br><br>\n    <label>Confirm new password:</label>\n    <input type=\"password\" name=\"confirm_password\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n<?php\n} else {\n    echo \"Invalid token\";\n}\n?>\n\n<?php\n// update password if form submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $new_password = $_POST['new_password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // validate new password and confirm password\n    if ($new_password == $confirm_password) {\n        // hash new password (use a library like PHPass or Password Hashing for security)\n        $hashed_new_password = hash('sha256', $new_password);\n\n        // update user data with new hashed password\n        $query = \"UPDATE users SET password_hash = '$hashed_new_password' WHERE reset_token = '$token'\";\n        mysqli_query($conn, $query);\n\n        echo \"Password updated successfully!\";\n    } else {\n        echo \"Passwords do not match\";\n    }\n}\n?>\n```\n**Security Notes:**\n\n* This example uses a simple token-based approach to verify user identity. Consider using a more secure method like JWT (JSON Web Tokens) or session-based authentication.\n* Passwords are stored in plaintext for simplicity. Use a library like PHPass or Password Hashing to securely hash passwords.\n* This code assumes a direct database connection; consider using an ORM (Object-Relational Mapping) tool to interact with your database.\n\nRemember, this is a basic example and should not be used in production without proper security measures and testing.", "code_blocks": [null, "```php\n<?php\nrequire 'dbconnect.php'; // assume dbconnect.php contains database connection settings\n\n// validate form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    // query to retrieve user data\n    $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n        $user_data = mysqli_fetch_assoc($result);\n        // generate and send password reset link\n        require 'send_email.php'; // assume send_email.php contains email sending function\n\n        header('Location: reset_password.php?token=' . $user_data['reset_token']);\n    } else {\n        echo \"Invalid username or email\";\n    }\n}\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```", "```php\n<?php\nrequire 'dbconnect.php'; // assume dbconnect.php contains database connection settings\n\n// validate token and retrieve user data\n$token = $_GET['token'];\n$query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) > 0) {\n    $user_data = mysqli_fetch_assoc($result);\n    // display form to update password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Enter new password:</label>\n    <input type=\"password\" name=\"new_password\"><br><br>\n    <label>Confirm new password:</label>\n    <input type=\"password\" name=\"confirm_password\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n<?php\n} else {\n    echo \"Invalid token\";\n}\n?>\n\n<?php\n// update password if form submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $new_password = $_POST['new_password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // validate new password and confirm password\n    if ($new_password == $confirm_password) {\n        // hash new password (use a library like PHPass or Password Hashing for security)\n        $hashed_new_password = hash('sha256', $new_password);\n\n        // update user data with new hashed password\n        $query = \"UPDATE users SET password_hash = '$hashed_new_password' WHERE reset_token = '$token'\";\n        mysqli_query($conn, $query);\n\n        echo \"Password updated successfully!\";\n    } else {\n        echo \"Passwords do not match\";\n    }\n}\n?>\n```"]}
