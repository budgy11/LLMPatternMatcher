{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a simple \"forgot password\" functionality using PHP. We'll use email verification to send a temporary password reset link to the user.\n\n**Database Schema:**\n\nAssuming you have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**PHP Code:**\n```php\n// config.php (load database credentials and settings)\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// load email configuration\n$mailConfig = [\n    'host' => 'smtp.gmail.com',\n    'port' => 587,\n    'username' => 'your_email@gmail.com',\n    'password' => 'your_password'\n];\n\n?>\n```\n\n```php\n// forgot-password.php (handle the forgot password form submission)\n<?php\n\nrequire_once 'config.php';\n\n// Validate user input\nif (!isset($_POST['email'])) {\n    echo 'Error: Email is required.';\n    exit;\n}\n\n$email = $_POST['email'];\n$user = getUserByEmail($email);\n\nif (!$user) {\n    echo 'Error: No user found with that email address.';\n    exit;\n}\n\n// Generate a temporary password and hash it\n$tempPassword = strval(rand(100000, 999999));\n$passwordHash = password_hash($tempPassword, PASSWORD_DEFAULT);\n\n// Update the user's password\nupdateUserPassword($user['id'], $passwordHash);\n\n// Send an email with the temporary password reset link\nsendResetEmail($email, $tempPassword);\n\necho 'A temporary password has been sent to your email address. Please check your inbox and use the provided link to reset your password.';\n\nfunction getUserByEmail($email) {\n    // Retrieve user data from database using their email address\n}\n\nfunction updateUserPassword($userId, $passwordHash) {\n    // Update the user's password in the database\n}\n\nfunction sendResetEmail($email, $tempPassword) {\n    $mailConfig = mailConfig();\n    $subject = 'Temporary Password Reset Link';\n    $body = '<a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password.php?email=' . urlencode($email) . '&password=' . urlencode($tempPassword) . '\">Click here to reset your password.</a>';\n    $fromEmail = $mailConfig['username'];\n    $fromName = 'Your Website';\n\n    mail($email, $subject, $body, 'From: ' . $fromEmail . ' ' . $fromName);\n}\n\n?>\n```\n\n**reset-password.php (handle the password reset form submission)**\n```php\n<?php\n\nrequire_once 'config.php';\n\n// Validate user input\nif (!isset($_GET['email']) || !isset($_GET['password'])) {\n    echo 'Error: Invalid request.';\n    exit;\n}\n\n$email = $_GET['email'];\n$tempPassword = $_GET['password'];\n\n$user = getUserByEmail($email);\n\nif (!$user) {\n    echo 'Error: No user found with that email address.';\n    exit;\n}\n\n// Verify the temporary password hash\nif (!password_verify($tempPassword, $user['password'])) {\n    echo 'Error: Invalid request.';\n    exit;\n}\n\n// Update the user's new password\nupdateUserPassword($user['id'], $_POST['new_password']);\n\necho 'Your password has been successfully updated.';\n\nfunction updateUserPassword($userId, $newPasswordHash) {\n    // Update the user's password in the database\n}\n?>\n```\n\n**Example Use Case:**\n\n1. The user submits a request to reset their password by filling out the \"Forgot Password\" form.\n2. The `forgot-password.php` script generates a temporary password and sends an email with a link to reset the password using the `sendResetEmail()` function.\n3. The user clicks on the provided link in the email, which redirects them to the `reset-password.php` script.\n4. The `reset-password.php` script verifies the temporary password hash and allows the user to enter their new password.\n5. If the new password is successfully saved, the user's password is updated.\n\nNote that this is a basic example and you should consider implementing additional security measures such as:\n\n* Password hashing using a more secure algorithm (e.g., bcrypt or Argon2)\n* Email verification using a separate token\n* IP blocking for suspicious login attempts\n* Additional validation and sanitization of user input", "code_blocks": ["```php\n// config.php (load database credentials and settings)\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// load email configuration\n$mailConfig = [\n    'host' => 'smtp.gmail.com',\n    'port' => 587,\n    'username' => 'your_email@gmail.com',\n    'password' => 'your_password'\n];\n\n?>\n```", "```php\n// forgot-password.php (handle the forgot password form submission)\n<?php\n\nrequire_once 'config.php';\n\n// Validate user input\nif (!isset($_POST['email'])) {\n    echo 'Error: Email is required.';\n    exit;\n}\n\n$email = $_POST['email'];\n$user = getUserByEmail($email);\n\nif (!$user) {\n    echo 'Error: No user found with that email address.';\n    exit;\n}\n\n// Generate a temporary password and hash it\n$tempPassword = strval(rand(100000, 999999));\n$passwordHash = password_hash($tempPassword, PASSWORD_DEFAULT);\n\n// Update the user's password\nupdateUserPassword($user['id'], $passwordHash);\n\n// Send an email with the temporary password reset link\nsendResetEmail($email, $tempPassword);\n\necho 'A temporary password has been sent to your email address. Please check your inbox and use the provided link to reset your password.';\n\nfunction getUserByEmail($email) {\n    // Retrieve user data from database using their email address\n}\n\nfunction updateUserPassword($userId, $passwordHash) {\n    // Update the user's password in the database\n}\n\nfunction sendResetEmail($email, $tempPassword) {\n    $mailConfig = mailConfig();\n    $subject = 'Temporary Password Reset Link';\n    $body = '<a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password.php?email=' . urlencode($email) . '&password=' . urlencode($tempPassword) . '\">Click here to reset your password.</a>';\n    $fromEmail = $mailConfig['username'];\n    $fromName = 'Your Website';\n\n    mail($email, $subject, $body, 'From: ' . $fromEmail . ' ' . $fromName);\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'config.php';\n\n// Validate user input\nif (!isset($_GET['email']) || !isset($_GET['password'])) {\n    echo 'Error: Invalid request.';\n    exit;\n}\n\n$email = $_GET['email'];\n$tempPassword = $_GET['password'];\n\n$user = getUserByEmail($email);\n\nif (!$user) {\n    echo 'Error: No user found with that email address.';\n    exit;\n}\n\n// Verify the temporary password hash\nif (!password_verify($tempPassword, $user['password'])) {\n    echo 'Error: Invalid request.';\n    exit;\n}\n\n// Update the user's new password\nupdateUserPassword($user['id'], $_POST['new_password']);\n\necho 'Your password has been successfully updated.';\n\nfunction updateUserPassword($userId, $newPasswordHash) {\n    // Update the user's password in the database\n}\n?>\n```"]}
