{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function in PHP:\n\n**password_recovery.php**\n```php\n<?php\n\n// Configuration settings\n$smtp_server = 'your_smtp_server';\n$smtp_port = 587;\n$from_email = 'your_email@example.com';\n$password_recovery_url = 'https://example.com/password-recovery';\n\n// Verify the email is not empty and contains a valid email address\nif (!isset($_POST['email']) || !filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n    echo json_encode(array('error' => 'Invalid email address'));\n    exit;\n}\n\n$email = $_POST['email'];\n\n// Retrieve user data from database (e.g., MySQL)\n$user_data_query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = mysqli_query($conn, $user_data_query);\n\nif (mysqli_num_rows($result) == 0) {\n    echo json_encode(array('error' => 'Email address not found'));\n    exit;\n}\n\n$user_id = mysqli_fetch_assoc($result)['id'];\n\n// Generate a random password reset token\n$password_reset_token = bin2hex(random_bytes(32));\n\n// Update user data with the password reset token in database (e.g., MySQL)\n$query = \"UPDATE users SET password_reset_token = '$password_reset_token' WHERE id = '$user_id'\";\nmysqli_query($conn, $query);\n\n// Send an email to the user with a link to reset their password\n$subject = 'Password Recovery';\n$message = '\nDear '. $_POST['email'] .',\n\nPlease click on the following link to reset your password:\n' . $password_recovery_url . '?token=' . $password_reset_token;\n\n$headers = 'From: ' . $from_email . \"\\r\\n\" .\n    'Reply-To: ' . $from_email . \"\\r\\n\" .\n    'Content-Type: text/html; charset=UTF-8\\r\\n';\n\nmail($email, $subject, $message, $headers);\n\necho json_encode(array('success' => 'Email sent with password recovery link'));\n\n?>\n```\n\n**password_recovery.html**\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Password Recovery</title>\n</head>\n<body>\n\n<h1>Password Recovery</h1>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\" id=\"password_recovery_form\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required>\n    <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n<script>\n$(document).ready(function() {\n    $('#password_recovery_form').on('submit', function(e) {\n        e.preventDefault();\n        var email = $('input[name=\"email\"]').val();\n\n        $.ajax({\n            type: \"POST\",\n            url: \"<?php echo $_SERVER['PHP_SELF']; ?>\",\n            data: { email: email },\n            success: function(data) {\n                if (data.success) {\n                    alert('Email sent with password recovery link');\n                } else if (data.error) {\n                    alert(data.error);\n                }\n            }\n        });\n    });\n});\n</script>\n\n</body>\n</html>\n```\n\n**Explanation**\n\n1.  The `password_recovery.php` file handles the forgot password request and sends an email to the user with a password reset link.\n2.  When the form is submitted, the PHP script checks if the provided email address is valid and exists in the database.\n3.  If the email address is found, it generates a random password reset token and stores it in the user's record in the database.\n4.  The script then sends an email to the user with a link to reset their password using the generated token.\n5.  The `password_recovery.html` file contains a simple form that allows users to enter their email address, which is sent to the PHP script via AJAX.\n\n**Note**\n\n*   This example uses a basic MySQL database to store user data, but you can use any other database system if needed.\n*   Make sure to update the configuration settings (e.g., SMTP server, port, email) in `password_recovery.php` according to your environment.\n*   The password reset token is generated using `bin2hex(random_bytes(32))`, which produces a 32-byte random string. You can adjust this as needed.\n*   This example assumes that the user has access to their email account and can click on the provided link to reset their password.\n\n**Remember to keep your code organized, follow best practices, and ensure that you have necessary security measures in place (e.g., input validation, prepared statements) when implementing a password recovery feature.**", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$smtp_server = 'your_smtp_server';\n$smtp_port = 587;\n$from_email = 'your_email@example.com';\n$password_recovery_url = 'https://example.com/password-recovery';\n\n// Verify the email is not empty and contains a valid email address\nif (!isset($_POST['email']) || !filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n    echo json_encode(array('error' => 'Invalid email address'));\n    exit;\n}\n\n$email = $_POST['email'];\n\n// Retrieve user data from database (e.g., MySQL)\n$user_data_query = \"SELECT * FROM users WHERE email = '$email'\";\n$result = mysqli_query($conn, $user_data_query);\n\nif (mysqli_num_rows($result) == 0) {\n    echo json_encode(array('error' => 'Email address not found'));\n    exit;\n}\n\n$user_id = mysqli_fetch_assoc($result)['id'];\n\n// Generate a random password reset token\n$password_reset_token = bin2hex(random_bytes(32));\n\n// Update user data with the password reset token in database (e.g., MySQL)\n$query = \"UPDATE users SET password_reset_token = '$password_reset_token' WHERE id = '$user_id'\";\nmysqli_query($conn, $query);\n\n// Send an email to the user with a link to reset their password\n$subject = 'Password Recovery';\n$message = '\nDear '. $_POST['email'] .',\n\nPlease click on the following link to reset your password:\n' . $password_recovery_url . '?token=' . $password_reset_token;\n\n$headers = 'From: ' . $from_email . \"\\r\\n\" .\n    'Reply-To: ' . $from_email . \"\\r\\n\" .\n    'Content-Type: text/html; charset=UTF-8\\r\\n';\n\nmail($email, $subject, $message, $headers);\n\necho json_encode(array('success' => 'Email sent with password recovery link'));\n\n?>\n```", null]}
