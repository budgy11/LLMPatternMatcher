{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**Database schema**\n\nFirst, let's assume we have a database table `users` with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int |\n| email | varchar |\n| password | varchar |\n\n**Forgot password form**\n\nCreate an HTML form for users to enter their email address:\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" name=\"email\" id=\"email\">\n  <button type=\"submit\">Send reset link</button>\n</form>\n```\n**Forgot password PHP script**\n\nCreate a PHP file called `forgot_password.php`:\n```php\n<?php\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get email from form submission\n$email = $_POST['email'];\n\n// Check if email exists in database\n$sql = \"SELECT * FROM users WHERE email = '$email'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // Email found, generate reset link and send it to user's email address\n\n  // Generate random token for password reset\n  $token = bin2hex(random_bytes(16));\n\n  // Update user's data with new token\n  $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n  $conn->query($sql);\n\n  // Send email with reset link to user's email address\n  $subject = 'Reset your password';\n  $body = '\n    Hello!\n\n    You requested a password reset for your account. Click the following link to reset your password:\n\n    <a href=\"' . $_SERVER['PHP_SELF'] . '?reset_token=' . $token . '\">Reset Password</a>\n\n    Best regards,\n    Your Website\n  ';\n\n  // Send email using PHPMailer (you'll need to install it)\n  require 'vendor/autoload.php';\n  $mail = new PHPMailer();\n  $mail->isSMTP();\n  $mail->Host = 'smtp.gmail.com';\n  $mail->Port = 587;\n  $mail->Username = 'your_email@gmail.com';\n  $mail->Password = 'your_password';\n  $mail->setFrom('your_email@gmail.com', 'Your Website');\n  $mail->addAddress($email, 'User Name');\n  $mail->Subject = $subject;\n  $mail->Body = $body;\n  $mail->AltBody = '';\n  if (!$mail->send()) {\n    echo \"Mailer Error: \" . $mail->ErrorInfo;\n  } else {\n    echo \"Email sent successfully!\";\n  }\n} else {\n  echo \"No email found in database.\";\n}\n\n$conn->close();\n\n?>\n```\n**Password reset page**\n\nCreate a new PHP file called `reset_password.php`:\n```php\n<?php\n\n// Database connection settings (same as above)\n\n// Get token from URL parameter\n$token = $_GET['reset_token'];\n\nif (!empty($token)) {\n  // Check if token is valid and matches the one in database\n  $sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // Token found, allow user to reset their password\n\n    // Create HTML form for new password\n    ?>\n    <form action=\"reset_password.php\" method=\"post\">\n      <label for=\"new_password\">New Password:</label>\n      <input type=\"password\" name=\"new_password\" id=\"new_password\">\n      <label for=\"confirm_new_password\">Confirm New Password:</label>\n      <input type=\"password\" name=\"confirm_new_password\" id=\"confirm_new_password\">\n      <button type=\"submit\">Reset Password</button>\n    </form>\n\n    <?php\n  } else {\n    echo \"Invalid token.\";\n  }\n} else {\n  echo \"No token found.\";\n}\n\n?>\n```\n**Password reset PHP script**\n\nCreate a new PHP file called `reset_password.php`:\n```php\n<?php\n\n// Database connection settings (same as above)\n\n// Get new password from form submission\n$new_password = $_POST['new_password'];\n$confirm_new_password = $_POST['confirm_new_password'];\n\nif (!empty($new_password) && !empty($confirm_new_password)) {\n  if ($new_password == $confirm_new_password) {\n    // Update user's data with new password\n\n    $sql = \"UPDATE users SET password = '$new_password' WHERE email = (SELECT email FROM users WHERE password_reset_token = '$token')\";\n    $conn->query($sql);\n\n    echo \"Password reset successfully!\";\n  } else {\n    echo \"Passwords don't match.\";\n  }\n} else {\n  echo \"Invalid form submission.\";\n}\n\n?>\n```\nThis is a basic example of how you can create a forgot password function using PHP. Note that this example uses a simple token-based system to prevent brute-force attacks, but it's not recommended for production use without additional security measures.\n\nAlso, make sure to replace the placeholder database credentials and email settings with your own.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get email from form submission\n$email = $_POST['email'];\n\n// Check if email exists in database\n$sql = \"SELECT * FROM users WHERE email = '$email'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // Email found, generate reset link and send it to user's email address\n\n  // Generate random token for password reset\n  $token = bin2hex(random_bytes(16));\n\n  // Update user's data with new token\n  $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n  $conn->query($sql);\n\n  // Send email with reset link to user's email address\n  $subject = 'Reset your password';\n  $body = '\n    Hello!\n\n    You requested a password reset for your account. Click the following link to reset your password:\n\n    <a href=\"' . $_SERVER['PHP_SELF'] . '?reset_token=' . $token . '\">Reset Password</a>\n\n    Best regards,\n    Your Website\n  ';\n\n  // Send email using PHPMailer (you'll need to install it)\n  require 'vendor/autoload.php';\n  $mail = new PHPMailer();\n  $mail->isSMTP();\n  $mail->Host = 'smtp.gmail.com';\n  $mail->Port = 587;\n  $mail->Username = 'your_email@gmail.com';\n  $mail->Password = 'your_password';\n  $mail->setFrom('your_email@gmail.com', 'Your Website');\n  $mail->addAddress($email, 'User Name');\n  $mail->Subject = $subject;\n  $mail->Body = $body;\n  $mail->AltBody = '';\n  if (!$mail->send()) {\n    echo \"Mailer Error: \" . $mail->ErrorInfo;\n  } else {\n    echo \"Email sent successfully!\";\n  }\n} else {\n  echo \"No email found in database.\";\n}\n\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n// Database connection settings (same as above)\n\n// Get token from URL parameter\n$token = $_GET['reset_token'];\n\nif (!empty($token)) {\n  // Check if token is valid and matches the one in database\n  $sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // Token found, allow user to reset their password\n\n    // Create HTML form for new password\n    ?>\n    <form action=\"reset_password.php\" method=\"post\">\n      <label for=\"new_password\">New Password:</label>\n      <input type=\"password\" name=\"new_password\" id=\"new_password\">\n      <label for=\"confirm_new_password\">Confirm New Password:</label>\n      <input type=\"password\" name=\"confirm_new_password\" id=\"confirm_new_password\">\n      <button type=\"submit\">Reset Password</button>\n    </form>\n\n    <?php\n  } else {\n    echo \"Invalid token.\";\n  }\n} else {\n  echo \"No token found.\";\n}\n\n?>\n```", "```php\n<?php\n\n// Database connection settings (same as above)\n\n// Get new password from form submission\n$new_password = $_POST['new_password'];\n$confirm_new_password = $_POST['confirm_new_password'];\n\nif (!empty($new_password) && !empty($confirm_new_password)) {\n  if ($new_password == $confirm_new_password) {\n    // Update user's data with new password\n\n    $sql = \"UPDATE users SET password = '$new_password' WHERE email = (SELECT email FROM users WHERE password_reset_token = '$token')\";\n    $conn->query($sql);\n\n    echo \"Password reset successfully!\";\n  } else {\n    echo \"Passwords don't match.\";\n  }\n} else {\n  echo \"Invalid form submission.\";\n}\n\n?>\n```"]}
