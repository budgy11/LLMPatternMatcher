{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a simple forgotten password functionality using PHP. We will use a combination of user input, email verification, and database interaction to implement this feature.\n\n**Database Schema**\n------------------\n\nAssuming you have a `users` table with the following columns:\n\n*   `id`: Unique identifier for each user\n*   `username`: User's username\n*   `email`: User's email address\n*   `password_hash`: Hashed password for security\n\n**Code:**\n\n### **forgot_password.php**\n```php\n<?php\n// Define constants for database connection and email settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Email settings\ndefine('EMAIL_FROM', 'your_email@example.com');\ndefine('EMAIL_TO', '%s'); // Recipient's email address (will be replaced with user's email)\n\nrequire_once 'dbconnect.php'; // Database connection script\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    try {\n        // Retrieve user data from database\n        $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username OR email = :email');\n        $stmt->execute([':username' => $username, ':email' => $email]);\n        $user_data = $stmt->fetch();\n\n        if ($user_data) {\n            // Generate a unique password reset token\n            $token = bin2hex(random_bytes(16));\n\n            // Update user data with password reset token in database\n            $stmt = $pdo->prepare('UPDATE users SET password_reset_token = :token WHERE id = :id');\n            $stmt->execute([':token' => $token, ':id' => $user_data['id']]);\n\n            // Send email to user with password reset link\n            $subject = 'Password Reset for '. $username;\n            $message = sprintf(\n                'Hello %s,\n                Click the following link to reset your password:\n                <a href=\"%s\">Reset Password</a>\n                Best regards, \n                Your Website Team',\n                $_POST['email'],\n                'reset_password.php?token='. $token\n            );\n\n            // Send email using PHP's mail function or a library like SwiftMailer\n            mail(EMAIL_TO, $subject, $message);\n\n            echo \"Email sent with password reset link!\";\n        } else {\n            echo \"No user found with the provided credentials.\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \". $e->getMessage();\n    }\n} else {\n    ?>\n    <h1>Forgot Password</h1>\n    <form method=\"POST\">\n        <label for=\"username\">Username:</label><br>\n        <input type=\"text\" id=\"username\" name=\"username\"><br>\n        <label for=\"email\">Email:</label><br>\n        <input type=\"email\" id=\"email\" name=\"email\"><br>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n?>\n```\n\n### **reset_password.php**\n```php\n<?php\n// Define constants for database connection and email settings (same as forgot_password.php)\n\nrequire_once 'dbconnect.php'; // Database connection script\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_GET['token'];\n    $password = $_POST['password'];\n\n    try {\n        // Retrieve user data from database using password reset token\n        $stmt = $pdo->prepare('SELECT * FROM users WHERE password_reset_token = :token');\n        $stmt->execute([':token' => $token]);\n        $user_data = $stmt->fetch();\n\n        if ($user_data) {\n            // Update user's password in database\n            $password_hash = password_hash($password, PASSWORD_DEFAULT);\n            $stmt = $pdo->prepare('UPDATE users SET password_hash = :hash WHERE id = :id');\n            $stmt->execute([':hash' => $password_hash, ':id' => $user_data['id']]);\n\n            // Delete password reset token from database\n            $stmt = $pdo->prepare('DELETE FROM users WHERE password_reset_token = :token AND id = :id');\n            $stmt->execute([':token' => $token, ':id' => $user_data['id']]);\n\n            echo \"Password updated successfully!\";\n        } else {\n            echo \"Invalid password reset token.\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \". $e->getMessage();\n    }\n} else {\n    ?>\n    <h1>Reset Password</h1>\n    <?php\n    if (!isset($_GET['token'])) {\n        // Display a message to the user asking for their email address\n        echo 'Please enter your email address and we will send you a password reset link.';\n    } else {\n        // Verify token and display form to update password\n        $token = $_GET['token'];\n        try {\n            $stmt = $pdo->prepare('SELECT * FROM users WHERE password_reset_token = :token');\n            $stmt->execute([':token' => $token]);\n            $user_data = $stmt->fetch();\n\n            if ($user_data) {\n                ?>\n                <form method=\"POST\">\n                    <label for=\"password\">New Password:</label><br>\n                    <input type=\"password\" id=\"password\" name=\"password\"><br>\n                    <button type=\"submit\">Reset Password</button>\n                </form>\n                <?php\n            } else {\n                echo \"Invalid password reset token.\";\n            }\n        } catch (PDOException $e) {\n            echo \"Error: \". $e->getMessage();\n        }\n    }\n}\n?>\n```\n\n**Notes:**\n\n*   Make sure to replace the placeholders (`your_host`, `your_username`, etc.) with your actual database credentials.\n*   This is a basic example, and you may want to add additional security measures (e.g., token expiration, password strength checks).\n*   Consider using a more secure method for generating and storing passwords (e.g., bcrypt or Argon2).\n\n**Remember:** Always keep your code organized, readable, and up-to-date. This example is meant as a starting point; feel free to modify it according to your specific requirements and best practices.", "code_blocks": ["```php\n<?php\n// Define constants for database connection and email settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Email settings\ndefine('EMAIL_FROM', 'your_email@example.com');\ndefine('EMAIL_TO', '%s'); // Recipient's email address (will be replaced with user's email)\n\nrequire_once 'dbconnect.php'; // Database connection script\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    try {\n        // Retrieve user data from database\n        $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username OR email = :email');\n        $stmt->execute([':username' => $username, ':email' => $email]);\n        $user_data = $stmt->fetch();\n\n        if ($user_data) {\n            // Generate a unique password reset token\n            $token = bin2hex(random_bytes(16));\n\n            // Update user data with password reset token in database\n            $stmt = $pdo->prepare('UPDATE users SET password_reset_token = :token WHERE id = :id');\n            $stmt->execute([':token' => $token, ':id' => $user_data['id']]);\n\n            // Send email to user with password reset link\n            $subject = 'Password Reset for '. $username;\n            $message = sprintf(\n                'Hello %s,\n                Click the following link to reset your password:\n                <a href=\"%s\">Reset Password</a>\n                Best regards, \n                Your Website Team',\n                $_POST['email'],\n                'reset_password.php?token='. $token\n            );\n\n            // Send email using PHP's mail function or a library like SwiftMailer\n            mail(EMAIL_TO, $subject, $message);\n\n            echo \"Email sent with password reset link!\";\n        } else {\n            echo \"No user found with the provided credentials.\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \". $e->getMessage();\n    }\n} else {\n    ?>\n    <h1>Forgot Password</h1>\n    <form method=\"POST\">\n        <label for=\"username\">Username:</label><br>\n        <input type=\"text\" id=\"username\" name=\"username\"><br>\n        <label for=\"email\">Email:</label><br>\n        <input type=\"email\" id=\"email\" name=\"email\"><br>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n?>\n```", "```php\n<?php\n// Define constants for database connection and email settings (same as forgot_password.php)\n\nrequire_once 'dbconnect.php'; // Database connection script\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_GET['token'];\n    $password = $_POST['password'];\n\n    try {\n        // Retrieve user data from database using password reset token\n        $stmt = $pdo->prepare('SELECT * FROM users WHERE password_reset_token = :token');\n        $stmt->execute([':token' => $token]);\n        $user_data = $stmt->fetch();\n\n        if ($user_data) {\n            // Update user's password in database\n            $password_hash = password_hash($password, PASSWORD_DEFAULT);\n            $stmt = $pdo->prepare('UPDATE users SET password_hash = :hash WHERE id = :id');\n            $stmt->execute([':hash' => $password_hash, ':id' => $user_data['id']]);\n\n            // Delete password reset token from database\n            $stmt = $pdo->prepare('DELETE FROM users WHERE password_reset_token = :token AND id = :id');\n            $stmt->execute([':token' => $token, ':id' => $user_data['id']]);\n\n            echo \"Password updated successfully!\";\n        } else {\n            echo \"Invalid password reset token.\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \". $e->getMessage();\n    }\n} else {\n    ?>\n    <h1>Reset Password</h1>\n    <?php\n    if (!isset($_GET['token'])) {\n        // Display a message to the user asking for their email address\n        echo 'Please enter your email address and we will send you a password reset link.';\n    } else {\n        // Verify token and display form to update password\n        $token = $_GET['token'];\n        try {\n            $stmt = $pdo->prepare('SELECT * FROM users WHERE password_reset_token = :token');\n            $stmt->execute([':token' => $token]);\n            $user_data = $stmt->fetch();\n\n            if ($user_data) {\n                ?>\n                <form method=\"POST\">\n                    <label for=\"password\">New Password:</label><br>\n                    <input type=\"password\" id=\"password\" name=\"password\"><br>\n                    <button type=\"submit\">Reset Password</button>\n                </form>\n                <?php\n            } else {\n                echo \"Invalid password reset token.\";\n            }\n        } catch (PDOException $e) {\n            echo \"Error: \". $e->getMessage();\n        }\n    }\n}\n?>\n```"]}
