{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to implement a \"forgot password\" function in PHP. This will send the user a reset link that they can use to change their password.\n\n**Database Schema**\n\nAssuming you have a `users` table with the following schema:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n```\n\n**PHP Code**\n\nCreate a new PHP file, e.g. `forgot_password.php`, and add the following code:\n\n```php\n<?php\n\n// Configuration settings\n$secret_key = 'your_secret_key_here';\n$db_host = 'your_database_host_here';\n$db_username = 'your_database_username_here';\n$db_password = 'your_database_password_here';\n$db_name = 'your_database_name_here';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get the user's email address from the form submission\n    $email = $_POST['email'];\n\n    // Connect to database\n    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Check if the email address exists in the database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if (!$result || $result->num_rows === 0) {\n        echo 'Email address not found. Please try again.';\n    } else {\n        // Generate a random password reset token\n        $token = bin2hex(random_bytes(32));\n\n        // Update the user's record with the new token\n        $update_query = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n        $conn->query($update_query);\n\n        // Send an email to the user with a reset link\n        $to_email = $email;\n        $subject = 'Password Reset Link';\n        $body = '\n            Click on this link to reset your password: <a href=\"http://your-website.com/reset_password.php?token=' . $token . '\">Reset Password</a>\n        ';\n\n        $headers = \"From: noreply@example.com\";\n        mail($to_email, $subject, $body, $headers);\n\n        echo 'A password reset link has been sent to your email address.';\n    }\n\n    // Close the database connection\n    $conn->close();\n}\n\n?>\n\n<!-- Form for user to enter their email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email Address\">\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```\n\n**Reset Password Page**\n\nCreate a new PHP file, e.g. `reset_password.php`, and add the following code:\n\n```php\n<?php\n\n// Configuration settings\n$secret_key = 'your_secret_key_here';\n$db_host = 'your_database_host_here';\n$db_username = 'your_database_username_here';\n$db_password = 'your_database_password_here';\n$db_name = 'your_database_name_here';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get the password reset token from the query string\n    $token = $_GET['token'];\n\n    // Connect to database\n    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Check if the token exists in the database\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if (!$result || $result->num_rows === 0) {\n        echo 'Invalid password reset link.';\n    } else {\n        // Get the user's email address from the database\n        $user_email = $result->fetch_assoc()['email'];\n\n        // Check if the form has been submitted with new password\n        if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n            // Get the new password from the form submission\n            $new_password = $_POST['new_password'];\n            $confirm_password = $_POST['confirm_password'];\n\n            // Check if the new passwords match\n            if ($new_password !== $confirm_password) {\n                echo 'Passwords do not match.';\n            } else {\n                // Update the user's password in the database\n                $update_query = \"UPDATE users SET password = '$new_password' WHERE email = '$user_email'\";\n                $conn->query($update_query);\n\n                // Remove the password reset token from the database\n                $delete_query = \"DELETE FROM users WHERE password_reset_token = '$token'\";\n                $conn->query($delete_query);\n\n                echo 'Password updated successfully.';\n            }\n        }\n\n        // Form for user to enter new password\n        ?>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            <input type=\"password\" name=\"new_password\" placeholder=\"New Password\">\n            <input type=\"password\" name=\"confirm_password\" placeholder=\"Confirm New Password\">\n            <button type=\"submit\">Update Password</button>\n        </form>\n    <?php\n    }\n}\n\n?>\n\n<!-- Form for user to enter their email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    <button type=\"submit\">Submit Password Reset Token</button>\n</form>\n```\n\nThis code generates a random password reset token when the user submits their email address, and sends an email with a link to the `reset_password.php` page. On this page, the user can enter their new password and confirm it, and then submit the form to update their password.\n\n**Security Notes**\n\n* Make sure to store the secret key securely on your server.\n* Use a secure protocol (HTTPS) for transmitting data between the client and server.\n* Hash and salt passwords before storing them in the database.\n* Never hard-code sensitive information such as database credentials or API keys directly into your code. Instead, use environment variables or a secrets management system to store these values securely.\n\nPlease note that this is a simplified example, and you should adapt it according to your specific needs and security requirements.", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$secret_key = 'your_secret_key_here';\n$db_host = 'your_database_host_here';\n$db_username = 'your_database_username_here';\n$db_password = 'your_database_password_here';\n$db_name = 'your_database_name_here';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get the user's email address from the form submission\n    $email = $_POST['email'];\n\n    // Connect to database\n    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Check if the email address exists in the database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if (!$result || $result->num_rows === 0) {\n        echo 'Email address not found. Please try again.';\n    } else {\n        // Generate a random password reset token\n        $token = bin2hex(random_bytes(32));\n\n        // Update the user's record with the new token\n        $update_query = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n        $conn->query($update_query);\n\n        // Send an email to the user with a reset link\n        $to_email = $email;\n        $subject = 'Password Reset Link';\n        $body = '\n            Click on this link to reset your password: <a href=\"http://your-website.com/reset_password.php?token=' . $token . '\">Reset Password</a>\n        ';\n\n        $headers = \"From: noreply@example.com\";\n        mail($to_email, $subject, $body, $headers);\n\n        echo 'A password reset link has been sent to your email address.';\n    }\n\n    // Close the database connection\n    $conn->close();\n}\n\n?>\n\n<!-- Form for user to enter their email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email Address\">\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```", "```php\n<?php\n\n// Configuration settings\n$secret_key = 'your_secret_key_here';\n$db_host = 'your_database_host_here';\n$db_username = 'your_database_username_here';\n$db_password = 'your_database_password_here';\n$db_name = 'your_database_name_here';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get the password reset token from the query string\n    $token = $_GET['token'];\n\n    // Connect to database\n    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Check if the token exists in the database\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if (!$result || $result->num_rows === 0) {\n        echo 'Invalid password reset link.';\n    } else {\n        // Get the user's email address from the database\n        $user_email = $result->fetch_assoc()['email'];\n\n        // Check if the form has been submitted with new password\n        if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n            // Get the new password from the form submission\n            $new_password = $_POST['new_password'];\n            $confirm_password = $_POST['confirm_password'];\n\n            // Check if the new passwords match\n            if ($new_password !== $confirm_password) {\n                echo 'Passwords do not match.';\n            } else {\n                // Update the user's password in the database\n                $update_query = \"UPDATE users SET password = '$new_password' WHERE email = '$user_email'\";\n                $conn->query($update_query);\n\n                // Remove the password reset token from the database\n                $delete_query = \"DELETE FROM users WHERE password_reset_token = '$token'\";\n                $conn->query($delete_query);\n\n                echo 'Password updated successfully.';\n            }\n        }\n\n        // Form for user to enter new password\n        ?>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            <input type=\"password\" name=\"new_password\" placeholder=\"New Password\">\n            <input type=\"password\" name=\"confirm_password\" placeholder=\"Confirm New Password\">\n            <button type=\"submit\">Update Password</button>\n        </form>\n    <?php\n    }\n}\n\n?>\n\n<!-- Form for user to enter their email address -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    <button type=\"submit\">Submit Password Reset Token</button>\n</form>\n```"]}
