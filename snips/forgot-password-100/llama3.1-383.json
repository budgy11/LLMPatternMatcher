{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nBelow is an example of how you can implement a forgot password function in PHP. This function will send a password reset email to the user's registered email address.\n\n### Database Schema\n\nAssuming your database schema has the following structure:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password VARCHAR(255)\n);\n```\n\n### PHP Code (Forgot Password Function)\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'database_config.php';\n\n// Check if form is submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get user input\n  $usernameOrEmail = $_POST['username_or_email'];\n  \n  // Validate input\n  if (empty($usernameOrEmail)) {\n    echo 'Please enter your username or email address.';\n    exit;\n  }\n  \n  // Query database to retrieve user ID and password reset token\n  $query = \"SELECT id, password_reset_token FROM users WHERE (username = ? OR email = ?)\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([$usernameOrEmail, $usernameOrEmail]);\n  $user = $stmt->fetch();\n  \n  // If user exists and has not used password reset token yet\n  if ($user && !$user['password_reset_token']) {\n    // Generate new password reset token\n    $token = bin2hex(random_bytes(16));\n    \n    // Update database with new password reset token\n    $query = \"UPDATE users SET password_reset_token = ? WHERE id = ?\";\n    $stmt = $db->prepare($query);\n    $stmt->execute([$token, $user['id']]);\n    \n    // Send password reset email\n    sendPasswordResetEmail($user['email'], $token);\n  } else {\n    echo 'Invalid username or email address.';\n  }\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email, $token) {\n  // Set up email headers and body\n  $subject = 'Password Reset Request';\n  $body = \"Click this link to reset your password: <a href='https://example.com/reset-password?token=$token'>Reset Password</a>\";\n  \n  // Send email using PHPMailer (or any other email library)\n  require_once 'PHPMailer.php';\n  $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n  $mail->isSMTP();\n  $mail->Host = 'smtp.example.com';\n  $mail->Port = 587;\n  $mail->SMTPAuth = true;\n  $mail->Username = 'your_email@example.com';\n  $mail->Password = 'your_password';\n  $mail->setFrom('your_email@example.com', 'Your Name');\n  $mail->addAddress($email);\n  $mail->Subject = $subject;\n  $mail->Body = $body;\n  if (!$mail->send()) {\n    echo 'Error sending email: ' . $mail->ErrorInfo;\n  }\n}\n\n?>\n```\n\n### How it works\n\n1. When the user submits the forgot password form, the PHP script checks if the input is not empty.\n2. If the input is valid, the script queries the database to retrieve the user's ID and password reset token.\n3. If the user exists and has not used the password reset token yet, a new token is generated and stored in the database along with the user's ID.\n4. The script sends an email to the user's registered email address with a link to reset their password.\n\nNote that this example assumes you're using PHPMailer for sending emails. You'll need to replace `your_email@example.com` and `your_password` with your actual email credentials. Additionally, make sure to secure your database connection settings in `database_config.php`.", "code_blocks": [null, "```php\n<?php\n\n// Include database connection settings\nrequire_once 'database_config.php';\n\n// Check if form is submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get user input\n  $usernameOrEmail = $_POST['username_or_email'];\n  \n  // Validate input\n  if (empty($usernameOrEmail)) {\n    echo 'Please enter your username or email address.';\n    exit;\n  }\n  \n  // Query database to retrieve user ID and password reset token\n  $query = \"SELECT id, password_reset_token FROM users WHERE (username = ? OR email = ?)\";\n  $stmt = $db->prepare($query);\n  $stmt->execute([$usernameOrEmail, $usernameOrEmail]);\n  $user = $stmt->fetch();\n  \n  // If user exists and has not used password reset token yet\n  if ($user && !$user['password_reset_token']) {\n    // Generate new password reset token\n    $token = bin2hex(random_bytes(16));\n    \n    // Update database with new password reset token\n    $query = \"UPDATE users SET password_reset_token = ? WHERE id = ?\";\n    $stmt = $db->prepare($query);\n    $stmt->execute([$token, $user['id']]);\n    \n    // Send password reset email\n    sendPasswordResetEmail($user['email'], $token);\n  } else {\n    echo 'Invalid username or email address.';\n  }\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email, $token) {\n  // Set up email headers and body\n  $subject = 'Password Reset Request';\n  $body = \"Click this link to reset your password: <a href='https://example.com/reset-password?token=$token'>Reset Password</a>\";\n  \n  // Send email using PHPMailer (or any other email library)\n  require_once 'PHPMailer.php';\n  $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n  $mail->isSMTP();\n  $mail->Host = 'smtp.example.com';\n  $mail->Port = 587;\n  $mail->SMTPAuth = true;\n  $mail->Username = 'your_email@example.com';\n  $mail->Password = 'your_password';\n  $mail->setFrom('your_email@example.com', 'Your Name');\n  $mail->addAddress($email);\n  $mail->Subject = $subject;\n  $mail->Body = $body;\n  if (!$mail->send()) {\n    echo 'Error sending email: ' . $mail->ErrorInfo;\n  }\n}\n\n?>\n```"]}
