{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP:\n\n**Database Setup**\n\nFirst, let's assume you have a database table called `users` with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) UNIQUE,\n  password_hash VARCHAR(255),\n  reset_token VARCHAR(255)\n);\n```\n**PHP Code**\n\nCreate a new PHP file, e.g., `forgot_password.php`, and add the following code:\n```php\n<?php\n\n// Configuration\n$DB_HOST = 'localhost';\n$DB_USER = 'your_username';\n$DB_PASSWORD = 'your_password';\n$DB_NAME = 'your_database';\n\n// Connect to database\n$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to generate reset token\nfunction generateResetToken() {\n  $token = bin2hex(random_bytes(16));\n  return $token;\n}\n\n// Check if user exists and send email with reset link\nif (isset($_POST['email'])) {\n  $email = trim($_POST['email']);\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      $token = generateResetToken();\n      // Update user with new reset token\n      $updateQuery = \"UPDATE users SET reset_token = '$token' WHERE email = '$email'\";\n      $conn->query($updateQuery);\n\n      // Send email with reset link\n      $subject = 'Reset Your Password';\n      $message = \"Click here to reset your password: <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>\";\n      $headers = 'From: noreply@example.com' . \"\\r\\n\" .\n                 'Content-Type: text/html; charset=UTF-8';\n      mail($email, $subject, $message, $headers);\n\n      echo \"An email with reset link has been sent to your registered email address.\";\n    }\n  } else {\n    echo \"Email not found in our database.\";\n  }\n\n  // Close connection\n  $conn->close();\n}\n?>\n```\n**Explanation**\n\nThis code does the following:\n\n1. Checks if a user has submitted their email address via the `$_POST` method.\n2. Queries the database to check if the user exists with the provided email address.\n3. If the user exists, generates a random reset token and updates the user's record in the database.\n4. Sends an email with a link to reset the password using the generated reset token.\n\n**Reset Password Page**\n\nCreate another PHP file, e.g., `reset_password.php`, that will handle the form submission for resetting the password:\n```php\n<?php\n\n// Configuration\n$DB_HOST = 'localhost';\n$DB_USER = 'your_username';\n$DB_PASSWORD = 'your_password';\n$DB_NAME = 'your_database';\n\n// Connect to database\n$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash password\nfunction hashPassword($password) {\n  return password_hash($password, PASSWORD_DEFAULT);\n}\n\n// Check if reset token is valid and update password\nif (isset($_GET['token'])) {\n  $token = trim($_GET['token']);\n  $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Update user with new password\n      if (isset($_POST['password'])) {\n        $newPassword = trim($_POST['password']);\n        $hashedPassword = hashPassword($newPassword);\n        $updateQuery = \"UPDATE users SET password_hash = '$hashedPassword' WHERE reset_token = '$token'\";\n        $conn->query($updateQuery);\n\n        echo \"Your password has been updated successfully.\";\n      }\n    }\n  } else {\n    echo \"Invalid reset token.\";\n  }\n\n  // Close connection\n  $conn->close();\n}\n?>\n```\n**Explanation**\n\nThis code does the following:\n\n1. Checks if a user has submitted their new password via the `$_POST` method.\n2. Queries the database to check if the provided reset token is valid.\n3. If the token is valid, updates the user's record with the new hashed password.\n\nNote that this is just a basic example and you should consider implementing additional security measures, such as:\n\n* Using a secure random number generator for generating reset tokens\n* Hashing passwords using a strong algorithm (e.g., bcrypt)\n* Validating user input to prevent SQL injection attacks", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$DB_HOST = 'localhost';\n$DB_USER = 'your_username';\n$DB_PASSWORD = 'your_password';\n$DB_NAME = 'your_database';\n\n// Connect to database\n$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to generate reset token\nfunction generateResetToken() {\n  $token = bin2hex(random_bytes(16));\n  return $token;\n}\n\n// Check if user exists and send email with reset link\nif (isset($_POST['email'])) {\n  $email = trim($_POST['email']);\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      $token = generateResetToken();\n      // Update user with new reset token\n      $updateQuery = \"UPDATE users SET reset_token = '$token' WHERE email = '$email'\";\n      $conn->query($updateQuery);\n\n      // Send email with reset link\n      $subject = 'Reset Your Password';\n      $message = \"Click here to reset your password: <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>\";\n      $headers = 'From: noreply@example.com' . \"\\r\\n\" .\n                 'Content-Type: text/html; charset=UTF-8';\n      mail($email, $subject, $message, $headers);\n\n      echo \"An email with reset link has been sent to your registered email address.\";\n    }\n  } else {\n    echo \"Email not found in our database.\";\n  }\n\n  // Close connection\n  $conn->close();\n}\n?>\n```", "```php\n<?php\n\n// Configuration\n$DB_HOST = 'localhost';\n$DB_USER = 'your_username';\n$DB_PASSWORD = 'your_password';\n$DB_NAME = 'your_database';\n\n// Connect to database\n$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash password\nfunction hashPassword($password) {\n  return password_hash($password, PASSWORD_DEFAULT);\n}\n\n// Check if reset token is valid and update password\nif (isset($_GET['token'])) {\n  $token = trim($_GET['token']);\n  $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Update user with new password\n      if (isset($_POST['password'])) {\n        $newPassword = trim($_POST['password']);\n        $hashedPassword = hashPassword($newPassword);\n        $updateQuery = \"UPDATE users SET password_hash = '$hashedPassword' WHERE reset_token = '$token'\";\n        $conn->query($updateQuery);\n\n        echo \"Your password has been updated successfully.\";\n      }\n    }\n  } else {\n    echo \"Invalid reset token.\";\n  }\n\n  // Close connection\n  $conn->close();\n}\n?>\n```"]}
