{"prompt": "Create a user cart session using php", "llm_output": "Here's an example of how you can create a user cart session in PHP. In this example, we'll use the `$_SESSION` superglobal to store the cart data.\n\n**cart.php**\n```php\n<?php\n// Start session\nsession_start();\n\n// Initialize cart if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            // If it is, update quantity\n            $item['quantity'] += $quantity;\n            return; // Return early to avoid duplicate entry\n        }\n    }\n    \n    // Add product to cart if not already there\n    $_SESSION['cart'][] = array(\n        'id' => $product_id,\n        'quantity' => $quantity\n    );\n}\n\n// Function to remove item from cart\nfunction remove_from_cart($product_id) {\n    global $_SESSION;\n    \n    // Check if product is in cart\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return; // Return early to avoid duplicate entry\n        }\n    }\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    // Check if product is in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return; // Return early to avoid duplicate entry\n        }\n    }\n}\n\n// Function to get cart contents\nfunction get_cart_contents() {\n    global $_SESSION;\n    \n    return $_SESSION['cart'];\n}\n\n// Example usage:\nadd_to_cart(1, 2); // Add product with ID 1 in quantity of 2\nremove_from_cart(3); // Remove product with ID 3 from cart\nupdate_quantity(1, 5); // Update quantity of product with ID 1 to 5\n\nprint_r(get_cart_contents()); // Output: Array ( [0] => Array ( [id] => 1 [quantity] => 5 ) )\n```\nIn this example, we define four functions:\n\n* `add_to_cart($product_id, $quantity)`: Adds a product to the cart or updates its quantity if it's already there.\n* `remove_from_cart($product_id)`: Removes a product from the cart.\n* `update_quantity($product_id, $new_quantity)`: Updates the quantity of a product in the cart.\n* `get_cart_contents()`: Returns an array containing the current contents of the cart.\n\nWe also initialize the cart session if it doesn't exist, and use the `$_SESSION` superglobal to store the cart data.", "code_blocks": ["```php\n<?php\n// Start session\nsession_start();\n\n// Initialize cart if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            // If it is, update quantity\n            $item['quantity'] += $quantity;\n            return; // Return early to avoid duplicate entry\n        }\n    }\n    \n    // Add product to cart if not already there\n    $_SESSION['cart'][] = array(\n        'id' => $product_id,\n        'quantity' => $quantity\n    );\n}\n\n// Function to remove item from cart\nfunction remove_from_cart($product_id) {\n    global $_SESSION;\n    \n    // Check if product is in cart\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return; // Return early to avoid duplicate entry\n        }\n    }\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    // Check if product is in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return; // Return early to avoid duplicate entry\n        }\n    }\n}\n\n// Function to get cart contents\nfunction get_cart_contents() {\n    global $_SESSION;\n    \n    return $_SESSION['cart'];\n}\n\n// Example usage:\nadd_to_cart(1, 2); // Add product with ID 1 in quantity of 2\nremove_from_cart(3); // Remove product with ID 3 from cart\nupdate_quantity(1, 5); // Update quantity of product with ID 1 to 5\n\nprint_r(get_cart_contents()); // Output: Array ( [0] => Array ( [id] => 1 [quantity] => 5 ) )\n```"]}
