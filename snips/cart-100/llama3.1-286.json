{"prompt": "Create a user cart session using php", "llm_output": "Here's an example of how to create a user cart session using PHP:\n\n**Cart Configuration**\n\nFirst, let's define the configuration for our cart. We'll use a simple array to store the products and their quantities.\n```php\n$cartConfig = [\n    'session_name' => 'user_cart',\n    'product_key' => 'product_id',\n    'quantity_key' => 'quantity'\n];\n```\n**Cart Class**\n\nNext, let's create a Cart class that will handle all cart-related functionality.\n```php\nclass Cart {\n    private $cartConfig;\n    private $session;\n\n    public function __construct($config) {\n        $this->cartConfig = $config;\n        $this->session = $_SESSION[$config['session_name']];\n    }\n\n    public function addProduct($product_id, $quantity = 1) {\n        if (!isset($this->session[$this->cartConfig['product_key']])) {\n            $this->session[$this->cartConfig['product_key']] = [];\n        }\n        \n        // Check if product is already in cart\n        foreach ($this->session[$this->cartConfig['product_key']] as &$product) {\n            if ($product['id'] == $product_id) {\n                $product['quantity'] += $quantity;\n                break;\n            }\n        } else {\n            $this->session[$this->cartConfig['product_key']][$product_id] = ['id' => $product_id, 'quantity' => $quantity];\n        }\n\n        $_SESSION[$this->cartConfig['session_name']] = $this->session;\n    }\n\n    public function removeProduct($product_id) {\n        if (isset($this->session[$this->cartConfig['product_key']][$product_id])) {\n            unset($this->session[$this->cartConfig['product_key']][$product_id]);\n            $_SESSION[$this->cartConfig['session_name']] = $this->session;\n        }\n    }\n\n    public function updateQuantity($product_id, $quantity) {\n        if (isset($this->session[$this->cartConfig['product_key']][$product_id])) {\n            $this->session[$this->cartConfig['product_key']][$product_id]['quantity'] = $quantity;\n            $_SESSION[$this->cartConfig['session_name']] = $this->session;\n        }\n    }\n\n    public function getCartContents() {\n        return $this->session[$this->cartConfig['product_key']];\n    }\n}\n```\n**Usage Example**\n\nTo use the Cart class, simply create an instance of it and call its methods to add or remove products from the cart.\n```php\n$cart = new Cart($cartConfig);\n\n// Add product 1 with quantity 2\n$cart->addProduct(1, 2);\n\n// Remove product 1\n$cart->removeProduct(1);\n\n// Update quantity of product 3\n$cart->updateQuantity(3, 5);\n\n// Get cart contents\nprint_r($cart->getCartContents());\n```\n**Note**: Make sure to start the session in your PHP script by calling `session_start()`.\n\nThis is a basic example and you can add more functionality as needed. For example, you could implement checkout logic or handle product variations.", "code_blocks": ["```php\n$cartConfig = [\n    'session_name' => 'user_cart',\n    'product_key' => 'product_id',\n    'quantity_key' => 'quantity'\n];\n```", "```php\nclass Cart {\n    private $cartConfig;\n    private $session;\n\n    public function __construct($config) {\n        $this->cartConfig = $config;\n        $this->session = $_SESSION[$config['session_name']];\n    }\n\n    public function addProduct($product_id, $quantity = 1) {\n        if (!isset($this->session[$this->cartConfig['product_key']])) {\n            $this->session[$this->cartConfig['product_key']] = [];\n        }\n        \n        // Check if product is already in cart\n        foreach ($this->session[$this->cartConfig['product_key']] as &$product) {\n            if ($product['id'] == $product_id) {\n                $product['quantity'] += $quantity;\n                break;\n            }\n        } else {\n            $this->session[$this->cartConfig['product_key']][$product_id] = ['id' => $product_id, 'quantity' => $quantity];\n        }\n\n        $_SESSION[$this->cartConfig['session_name']] = $this->session;\n    }\n\n    public function removeProduct($product_id) {\n        if (isset($this->session[$this->cartConfig['product_key']][$product_id])) {\n            unset($this->session[$this->cartConfig['product_key']][$product_id]);\n            $_SESSION[$this->cartConfig['session_name']] = $this->session;\n        }\n    }\n\n    public function updateQuantity($product_id, $quantity) {\n        if (isset($this->session[$this->cartConfig['product_key']][$product_id])) {\n            $this->session[$this->cartConfig['product_key']][$product_id]['quantity'] = $quantity;\n            $_SESSION[$this->cartConfig['session_name']] = $this->session;\n        }\n    }\n\n    public function getCartContents() {\n        return $this->session[$this->cartConfig['product_key']];\n    }\n}\n```", "```php\n$cart = new Cart($cartConfig);\n\n// Add product 1 with quantity 2\n$cart->addProduct(1, 2);\n\n// Remove product 1\n$cart->removeProduct(1);\n\n// Update quantity of product 3\n$cart->updateQuantity(3, 5);\n\n// Get cart contents\nprint_r($cart->getCartContents());\n```"]}
