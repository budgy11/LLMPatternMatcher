{"prompt": "Create a user cart session using php", "llm_output": "Here is an example of how to create a simple user cart session using PHP:\n\n**cart.php**\n```php\n<?php\n// Check if the cart session exists, if not create it\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    \n    // Add new item to cart\n    $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['product_id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return;\n        }\n    }\n}\n\n// Function to update item quantity in cart\nfunction update_item_quantity($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to display cart contents\nfunction display_cart() {\n    global $_SESSION;\n    \n    echo '<h2>Cart Contents:</h2>';\n    foreach ($_SESSION['cart'] as $item) {\n        echo 'Product ID: ' . $item['product_id'] . ', Quantity: ' . $item['quantity'] . '</br>';\n    }\n}\n\n// Example usage\n$product_id = 1;\n$quantity = 3;\n\nadd_item_to_cart($product_id, $quantity);\n\ndisplay_cart();\n```\nThis code creates a simple cart session using PHP's built-in `$_SESSION` array. The cart is stored in the `cart` key of the `$_SESSION` array.\n\nThe functions provided are:\n\n*   `add_item_to_cart`: Adds an item to the cart with the given product ID and quantity.\n*   `remove_item_from_cart`: Removes an item from the cart by its product ID.\n*   `update_item_quantity`: Updates the quantity of an existing item in the cart.\n*   `display_cart`: Displays the contents of the cart.\n\nYou can add, remove, or update items in the cart using these functions. The cart is stored in a PHP session, so it will persist across page reloads.\n\n**Important notes:**\n\n1.  This code uses PHP's built-in session handling. Make sure to set up your PHP configuration to enable sessions.\n2.  This example stores the cart contents in plain text. For a secure application, consider using an encrypted store (e.g., database or dedicated e-commerce library) for cart items.\n3.  This is a simplified example and you should adapt it according to your specific requirements.\n\nRemember to include this code on each page where you want to access the cart session. The functions provided can be used in any PHP file to manipulate the cart contents.", "code_blocks": ["```php\n<?php\n// Check if the cart session exists, if not create it\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    \n    // Add new item to cart\n    $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['product_id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return;\n        }\n    }\n}\n\n// Function to update item quantity in cart\nfunction update_item_quantity($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to display cart contents\nfunction display_cart() {\n    global $_SESSION;\n    \n    echo '<h2>Cart Contents:</h2>';\n    foreach ($_SESSION['cart'] as $item) {\n        echo 'Product ID: ' . $item['product_id'] . ', Quantity: ' . $item['quantity'] . '</br>';\n    }\n}\n\n// Example usage\n$product_id = 1;\n$quantity = 3;\n\nadd_item_to_cart($product_id, $quantity);\n\ndisplay_cart();\n```"]}
