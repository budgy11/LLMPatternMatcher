{"prompt": "Create a user cart session using php", "llm_output": "**Creating a User Cart Session using PHP**\n====================================================\n\nIn this example, we'll create a simple cart system that stores items in the user's session.\n\n**Database Schema (optional)**\n-----------------------------\n\nFor this example, let's assume you have a `cart_items` table with the following columns:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique identifier for each item |\n| product_id | int | Foreign key referencing the products table |\n| quantity | int | Quantity of items in cart |\n\n**PHP Code**\n-------------\n\n### Cart Class\n\nCreate a new PHP file named `cart.php` and add the following code:\n```php\nclass Cart {\n    private $session_name = 'cart';\n\n    public function __construct() {\n        if (!isset($_SESSION)) {\n            session_start();\n        }\n        $_SESSION[$this->session_name] = array();\n    }\n\n    public function addItem($product_id, $quantity) {\n        if (array_key_exists($product_id, $_SESSION[$this->session_name])) {\n            $_SESSION[$this->session_name][$product_id]['quantity'] += $quantity;\n        } else {\n            $_SESSION[$this->session_name][$product_id] = array('quantity' => $quantity);\n        }\n    }\n\n    public function removeItem($product_id) {\n        if (array_key_exists($product_id, $_SESSION[$this->session_name])) {\n            unset($_SESSION[$this->session_name][$product_id]);\n        }\n    }\n\n    public function updateQuantity($product_id, $new_quantity) {\n        if (array_key_exists($product_id, $_SESSION[$this->session_name])) {\n            $_SESSION[$this->session_name][$product_id]['quantity'] = $new_quantity;\n        }\n    }\n\n    public function getItems() {\n        return $_SESSION[$this->session_name];\n    }\n\n    public function getTotalQuantity() {\n        $total = 0;\n        foreach ($_SESSION[$this->session_name] as $item) {\n            $total += $item['quantity'];\n        }\n        return $total;\n    }\n}\n```\n### Example Usage\n\nCreate a new PHP file named `example.php` and add the following code:\n```php\nrequire_once 'cart.php';\n\n$cart = new Cart();\n\n// Add item to cart\n$cart->addItem(1, 2); // product_id 1 with quantity 2\n\n// Get items in cart\n$items = $cart->getItems();\nprint_r($items);\n\n// Remove item from cart\n$cart->removeItem(1);\n\n// Update quantity of an item\n$cart->updateQuantity(1, 3);\n```\nThis code creates a `Cart` class that stores the user's cart items in the session. The `addItem`, `removeItem`, and `updateQuantity` methods allow you to interact with the cart.\n\n**Note**: This is a basic example and does not include any validation or error handling. You should consider adding these features to your production code.", "code_blocks": ["```php\nclass Cart {\n    private $session_name = 'cart';\n\n    public function __construct() {\n        if (!isset($_SESSION)) {\n            session_start();\n        }\n        $_SESSION[$this->session_name] = array();\n    }\n\n    public function addItem($product_id, $quantity) {\n        if (array_key_exists($product_id, $_SESSION[$this->session_name])) {\n            $_SESSION[$this->session_name][$product_id]['quantity'] += $quantity;\n        } else {\n            $_SESSION[$this->session_name][$product_id] = array('quantity' => $quantity);\n        }\n    }\n\n    public function removeItem($product_id) {\n        if (array_key_exists($product_id, $_SESSION[$this->session_name])) {\n            unset($_SESSION[$this->session_name][$product_id]);\n        }\n    }\n\n    public function updateQuantity($product_id, $new_quantity) {\n        if (array_key_exists($product_id, $_SESSION[$this->session_name])) {\n            $_SESSION[$this->session_name][$product_id]['quantity'] = $new_quantity;\n        }\n    }\n\n    public function getItems() {\n        return $_SESSION[$this->session_name];\n    }\n\n    public function getTotalQuantity() {\n        $total = 0;\n        foreach ($_SESSION[$this->session_name] as $item) {\n            $total += $item['quantity'];\n        }\n        return $total;\n    }\n}\n```", "```php\nrequire_once 'cart.php';\n\n$cart = new Cart();\n\n// Add item to cart\n$cart->addItem(1, 2); // product_id 1 with quantity 2\n\n// Get items in cart\n$items = $cart->getItems();\nprint_r($items);\n\n// Remove item from cart\n$cart->removeItem(1);\n\n// Update quantity of an item\n$cart->updateQuantity(1, 3);\n```"]}
