{"prompt": "Create a user cart session using php", "llm_output": "Here's an example of how you can create a simple shopping cart system using PHP, HTML, and MySQL. This will cover adding items to the cart, displaying the cart contents, updating quantities, and removing items.\n\n**Note:** Before running this code, ensure that your database is set up with the necessary tables. If not, please refer to the SQL code below to create them:\n\n```sql\nCREATE TABLE products (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE cart_items (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  session_id CHAR(32),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**cart.php**\n\n```php\n<?php\nsession_start();\n\n// Include database connection\nrequire_once 'db_connection.php';\n\n// Function to add item to cart\nfunction addItemToCart($productId, $quantity = 1) {\n    // Retrieve current session ID and product information\n    $currentSessionId = session_id();\n    $productInfo = getProductInfo($productId);\n\n    if ($productInfo && $currentSessionId) {\n        // Check if the product already exists in cart for this user\n        $existingItem = getCartItemByProductIdAndSessionId($productId, $currentSessionId);\n        \n        if ($existingItem) {\n            // Update quantity of existing item instead of creating a new one\n            updateQuantityOfExistingItem($existingItem['id'], $quantity);\n        } else {\n            // Add new item to cart\n            insertNewItemToCart($productInfo, $currentSessionId, $quantity);\n        }\n    }\n}\n\n// Function to get product information by ID\nfunction getProductInfo($productId) {\n    global $mysqli;\n    \n    $query = \"SELECT * FROM products WHERE id = '$productId'\";\n    $result = mysqli_query($mysqli, $query);\n\n    if ($product = mysqli_fetch_assoc($result)) {\n        return $product;\n    }\n}\n\n// Function to get cart item by product ID and session ID\nfunction getCartItemByProductIdAndSessionId($productId, $session_id) {\n    global $mysqli;\n\n    $query = \"SELECT * FROM cart_items WHERE product_id = '$productId' AND session_id = '$session_id'\";\n    $result = mysqli_query($mysqli, $query);\n\n    if ($cartItem = mysqli_fetch_assoc($result)) {\n        return $cartItem;\n    }\n}\n\n// Function to update quantity of existing item in cart\nfunction updateQuantityOfExistingItem($itemId, $quantity) {\n    global $mysqli;\n\n    $query = \"UPDATE cart_items SET quantity = '$quantity' WHERE id = '$itemId'\";\n    mysqli_query($mysqli, $query);\n}\n\n// Function to insert new item into the cart\nfunction insertNewItemToCart($productInfo, $session_id, $quantity) {\n    global $mysqli;\n\n    $query = \"INSERT INTO cart_items (product_id, quantity, session_id)\n              VALUES ('$productInfo[id]', '$quantity', '$session_id')\";\n    mysqli_query($mysqli, $query);\n}\n\n// Function to display the contents of the shopping cart\nfunction displayCart() {\n    global $mysqli;\n    \n    // Retrieve cart items for current user\n    $currentSessionId = session_id();\n    $cartItemsQuery = \"SELECT ci.* FROM cart_items ci JOIN products p ON ci.product_id = p.id WHERE ci.session_id = '$currentSessionId'\";\n    $result = mysqli_query($mysqli, $cartItemsQuery);\n\n    if ($cartItems = mysqli_fetch_all($result, MYSQLI_ASSOC)) {\n        // Display total cost of items in the cart\n        displayTotalCostOfCartContents($cartItems);\n        \n        // Loop through each item and display it with a remove link\n        foreach ($cartItems as $item) {\n            echo \"<div>\";\n            echo \"Product Name: \" . $item['name'] . \", Quantity: \" . $item['quantity'];\n            \n            // Display remove link\n            echo '<a href=\"remove_item_from_cart.php?id=' . $item['id'] . '\">Remove Item</a>';\n            \n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>Cart is empty.</p>\";\n    }\n}\n\n// Function to display total cost of cart contents\nfunction displayTotalCostOfCartContents($cartItems) {\n    global $mysqli;\n    \n    // Calculate total cost by summing up quantity * price for each item in the cart\n    $total = 0;\n    foreach ($cartItems as $item) {\n        $total += $item['quantity'] * $item['price'];\n    }\n        \n    echo \"<p>Total: $\" . number_format($total, 2);\n}\n\n// Example usage:\nif (isset($_POST['add_to_cart'])) {\n    addItemToCart($_POST['product_id'], $_POST['quantity']);\n    \n} elseif (isset($_GET['remove_item'])) {\n    removeItemFromCart($_GET['id']);\n}\n\ndisplayCart();\n\n?>\n```\n\nThis example includes functions to:\n\n1. **Add Item to Cart**: The `addItemToCart()` function checks if a product is already in the cart for this user, updating its quantity instead of adding it again.\n2. **Get Product Information**: The `getProductInfo()` function retrieves product details from the database based on the provided ID.\n3. **Get Cart Item by Product and Session IDs**: This function (`getCartItemByProductIdAndSessionId()`) checks if a cart item exists for a specific product and session.\n4. **Update Quantity of Existing Item in Cart**: The `updateQuantityOfExistingItem()` function updates the quantity of an existing cart item.\n5. **Insert New Item into Cart**: The `insertNewItemToCart()` function adds a new item to the cart with the provided quantity.\n\nNote: This is a simplified example and real-world applications would likely include additional functionality, validation, and error handling.\n\n**cart.php Usage:**\n\n- Include this file in your HTML page by adding `<php require_once 'path/to/cart.php'; ?>`\n- Call `displayCart()` to display the contents of the shopping cart.\n- To add an item to the cart, use a form with `action` attribute set to `cart.php` and include fields for product ID (`product_id`) and quantity (`quantity`).", "code_blocks": [null, "```php\n<?php\nsession_start();\n\n// Include database connection\nrequire_once 'db_connection.php';\n\n// Function to add item to cart\nfunction addItemToCart($productId, $quantity = 1) {\n    // Retrieve current session ID and product information\n    $currentSessionId = session_id();\n    $productInfo = getProductInfo($productId);\n\n    if ($productInfo && $currentSessionId) {\n        // Check if the product already exists in cart for this user\n        $existingItem = getCartItemByProductIdAndSessionId($productId, $currentSessionId);\n        \n        if ($existingItem) {\n            // Update quantity of existing item instead of creating a new one\n            updateQuantityOfExistingItem($existingItem['id'], $quantity);\n        } else {\n            // Add new item to cart\n            insertNewItemToCart($productInfo, $currentSessionId, $quantity);\n        }\n    }\n}\n\n// Function to get product information by ID\nfunction getProductInfo($productId) {\n    global $mysqli;\n    \n    $query = \"SELECT * FROM products WHERE id = '$productId'\";\n    $result = mysqli_query($mysqli, $query);\n\n    if ($product = mysqli_fetch_assoc($result)) {\n        return $product;\n    }\n}\n\n// Function to get cart item by product ID and session ID\nfunction getCartItemByProductIdAndSessionId($productId, $session_id) {\n    global $mysqli;\n\n    $query = \"SELECT * FROM cart_items WHERE product_id = '$productId' AND session_id = '$session_id'\";\n    $result = mysqli_query($mysqli, $query);\n\n    if ($cartItem = mysqli_fetch_assoc($result)) {\n        return $cartItem;\n    }\n}\n\n// Function to update quantity of existing item in cart\nfunction updateQuantityOfExistingItem($itemId, $quantity) {\n    global $mysqli;\n\n    $query = \"UPDATE cart_items SET quantity = '$quantity' WHERE id = '$itemId'\";\n    mysqli_query($mysqli, $query);\n}\n\n// Function to insert new item into the cart\nfunction insertNewItemToCart($productInfo, $session_id, $quantity) {\n    global $mysqli;\n\n    $query = \"INSERT INTO cart_items (product_id, quantity, session_id)\n              VALUES ('$productInfo[id]', '$quantity', '$session_id')\";\n    mysqli_query($mysqli, $query);\n}\n\n// Function to display the contents of the shopping cart\nfunction displayCart() {\n    global $mysqli;\n    \n    // Retrieve cart items for current user\n    $currentSessionId = session_id();\n    $cartItemsQuery = \"SELECT ci.* FROM cart_items ci JOIN products p ON ci.product_id = p.id WHERE ci.session_id = '$currentSessionId'\";\n    $result = mysqli_query($mysqli, $cartItemsQuery);\n\n    if ($cartItems = mysqli_fetch_all($result, MYSQLI_ASSOC)) {\n        // Display total cost of items in the cart\n        displayTotalCostOfCartContents($cartItems);\n        \n        // Loop through each item and display it with a remove link\n        foreach ($cartItems as $item) {\n            echo \"<div>\";\n            echo \"Product Name: \" . $item['name'] . \", Quantity: \" . $item['quantity'];\n            \n            // Display remove link\n            echo '<a href=\"remove_item_from_cart.php?id=' . $item['id'] . '\">Remove Item</a>';\n            \n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>Cart is empty.</p>\";\n    }\n}\n\n// Function to display total cost of cart contents\nfunction displayTotalCostOfCartContents($cartItems) {\n    global $mysqli;\n    \n    // Calculate total cost by summing up quantity * price for each item in the cart\n    $total = 0;\n    foreach ($cartItems as $item) {\n        $total += $item['quantity'] * $item['price'];\n    }\n        \n    echo \"<p>Total: $\" . number_format($total, 2);\n}\n\n// Example usage:\nif (isset($_POST['add_to_cart'])) {\n    addItemToCart($_POST['product_id'], $_POST['quantity']);\n    \n} elseif (isset($_GET['remove_item'])) {\n    removeItemFromCart($_GET['id']);\n}\n\ndisplayCart();\n\n?>\n```"]}
