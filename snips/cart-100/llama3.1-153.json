{"prompt": "Create a user cart session using php", "llm_output": "Here is an example of how to create a simple shopping cart system using PHP. This will allow users to add items to their cart, view their cart contents, and remove items from their cart.\n\n**Note:** This example assumes you have basic knowledge of PHP and database management systems like MySQL.\n\n**Database Setup:**\n\nCreate two tables in your MySQL database:\n\n```sql\nCREATE TABLE products (\n  id INT AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE cart (\n  id INT AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  PRIMARY KEY (id),\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\nCreate a file named `cart.php` and add the following code:\n\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Establish database connection\ntry {\n  $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n  echo \"Error connecting to database: \" . $e->getMessage();\n  exit;\n}\n\n// Function to add product to cart\nfunction add_product_to_cart($product_id, $user_id) {\n  global $conn;\n\n  // Check if product is already in cart\n  $query = \"SELECT * FROM cart WHERE user_id = :user_id AND product_id = :product_id\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n  if ($stmt->rowCount() > 0) {\n    // Product is already in cart, update quantity\n    $query = \"UPDATE cart SET quantity = quantity + 1 WHERE user_id = :user_id AND product_id = :product_id\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n  } else {\n    // Product is not in cart, insert new row\n    $query = \"INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, 1)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n  }\n}\n\n// Function to view cart contents\nfunction view_cart_contents($user_id) {\n  global $conn;\n\n  // Retrieve cart contents\n  $query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->execute();\n  return $stmt->fetchAll();\n}\n\n// Function to remove product from cart\nfunction remove_product_from_cart($product_id, $user_id) {\n  global $conn;\n\n  // Delete product from cart\n  $query = \"DELETE FROM cart WHERE user_id = :user_id AND product_id = :product_id\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n}\n\n// Example usage\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $user_id = $_SESSION['user_id']; // Assuming user is logged in and has a session\n  add_product_to_cart($product_id, $user_id);\n}\n\nif (isset($_POST['view_cart'])) {\n  $user_id = $_SESSION['user_id'];\n  $cart_contents = view_cart_contents($user_id);\n  print_r($cart_contents); // Output cart contents\n}\n\nif (isset($_POST['remove_product'])) {\n  $product_id = $_POST['product_id'];\n  $user_id = $_SESSION['user_id'];\n  remove_product_from_cart($product_id, $user_id);\n}\n?>\n```\n\n**Usage:**\n\nTo add a product to the cart, send an `add_to_cart` request with the product ID:\n\n```php\n<form method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n  <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n```\n\nTo view cart contents, send a `view_cart` request:\n\n```php\n<form method=\"post\">\n  <button type=\"submit\" name=\"view_cart\">View Cart</button>\n</form>\n```\n\nTo remove a product from the cart, send a `remove_product` request with the product ID:\n\n```php\n<form method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n  <button type=\"submit\" name=\"remove_product\">Remove Product</button>\n</form>\n```\n\n**Note:** This is a basic implementation and does not include error checking or validation. You should adapt this code to fit your specific use case and implement additional security measures as necessary.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Establish database connection\ntry {\n  $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n  echo \"Error connecting to database: \" . $e->getMessage();\n  exit;\n}\n\n// Function to add product to cart\nfunction add_product_to_cart($product_id, $user_id) {\n  global $conn;\n\n  // Check if product is already in cart\n  $query = \"SELECT * FROM cart WHERE user_id = :user_id AND product_id = :product_id\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n  if ($stmt->rowCount() > 0) {\n    // Product is already in cart, update quantity\n    $query = \"UPDATE cart SET quantity = quantity + 1 WHERE user_id = :user_id AND product_id = :product_id\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n  } else {\n    // Product is not in cart, insert new row\n    $query = \"INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, 1)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n  }\n}\n\n// Function to view cart contents\nfunction view_cart_contents($user_id) {\n  global $conn;\n\n  // Retrieve cart contents\n  $query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->execute();\n  return $stmt->fetchAll();\n}\n\n// Function to remove product from cart\nfunction remove_product_from_cart($product_id, $user_id) {\n  global $conn;\n\n  // Delete product from cart\n  $query = \"DELETE FROM cart WHERE user_id = :user_id AND product_id = :product_id\";\n  $stmt = $conn->prepare($query);\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->execute();\n}\n\n// Example usage\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $user_id = $_SESSION['user_id']; // Assuming user is logged in and has a session\n  add_product_to_cart($product_id, $user_id);\n}\n\nif (isset($_POST['view_cart'])) {\n  $user_id = $_SESSION['user_id'];\n  $cart_contents = view_cart_contents($user_id);\n  print_r($cart_contents); // Output cart contents\n}\n\nif (isset($_POST['remove_product'])) {\n  $product_id = $_POST['product_id'];\n  $user_id = $_SESSION['user_id'];\n  remove_product_from_cart($product_id, $user_id);\n}\n?>\n```", "```php\n<form method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n  <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n</form>\n```", "```php\n<form method=\"post\">\n  <button type=\"submit\" name=\"view_cart\">View Cart</button>\n</form>\n```", "```php\n<form method=\"post\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n  <button type=\"submit\" name=\"remove_product\">Remove Product</button>\n</form>\n```"]}
