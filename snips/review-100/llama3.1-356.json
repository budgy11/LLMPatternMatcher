{"prompt": "Create a user review function using php", "llm_output": "Here's an example of a simple user review function in PHP, including user authentication and rating system. We'll be using the PDO (PHP Data Objects) extension for database operations.\n\n**Database Schema**\n\nFor this example, we assume you have the following tables:\n\n- `users`: stores user information\n- `reviews`: stores reviews left by users\n- `products`: stores product information\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_id INT,\n  rating TINYINT,\n  comment TEXT,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nCreate a file named `review.php` and add the following code:\n\n```php\n<?php\n\n// Include database connection settings\ninclude_once 'config.php';\n\n// Function to get user reviews\nfunction getUserReviews($user_id) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"SELECT r.id, r.rating, r.comment, p.name AS product_name \n                          FROM reviews r INNER JOIN products p ON r.product_id = p.id \n                          WHERE r.user_id = :id\");\n    $stmt->bindParam(':id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  } catch (PDOException $e) {\n    echo \"Error fetching user reviews: \" . $e->getMessage();\n  }\n}\n\n// Function to get product reviews\nfunction getProductReviews($product_id) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"SELECT r.id, r.rating, r.comment, u.username AS user_name \n                          FROM reviews r INNER JOIN users u ON r.user_id = u.id \n                          WHERE r.product_id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  } catch (PDOException $e) {\n    echo \"Error fetching product reviews: \" . $e->getMessage();\n  }\n}\n\n// Function to create a new review\nfunction createReview($user_id, $product_id, $rating, $comment) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"INSERT INTO reviews (user_id, product_id, rating, comment)\n                          VALUES (:uid, :pid, :rate, :com)\");\n    $stmt->bindParam(':uid', $user_id);\n    $stmt->bindParam(':pid', $product_id);\n    $stmt->bindParam(':rate', $rating);\n    $stmt->bindParam(':com', $comment);\n    return $stmt->execute();\n  } catch (PDOException $e) {\n    echo \"Error creating review: \" . $e->getMessage();\n  }\n}\n\n// Authentication function\nfunction authenticateUser($username, $password) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"SELECT id FROM users WHERE username = :un AND password = :pw\");\n    $stmt->bindParam(':un', $username);\n    $stmt->bindParam(':pw', $password);\n    $stmt->execute();\n    return $stmt->fetchColumn() !== false;\n  } catch (PDOException $e) {\n    echo \"Error authenticating user: \" . $e->getMessage();\n  }\n}\n\n// Example usage\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  if (isset($_POST['username']) && isset($_POST['password'])) {\n    // Authenticate user\n    if (authenticateUser($_POST['username'], $_POST['password'])) {\n      // Get reviews for the authenticated user\n      $user_id = $_SESSION['user_id'];\n      $reviews = getUserReviews($user_id);\n      echo json_encode($reviews);\n\n      // Create a new review\n      $createReviewResult = createReview($_SESSION['user_id'], 1, 5, 'Good product!');\n      if ($createReviewResult) {\n        echo \"Review created successfully!\";\n      }\n    } else {\n      echo \"Authentication failed.\";\n    }\n  }\n}\n\n// Include HTML template for user reviews page\ninclude_once 'reviews-template.php';\n```\n\n**HTML Template**\n\nCreate a file named `reviews-template.php` with the following code:\n\n```php\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Reviews Page</title>\n</head>\n<body>\n  <?php if (isset($_SESSION['user_id'])) : ?>\n    <!-- Display reviews for the authenticated user -->\n    <h2>My Reviews:</h2>\n    <ul>\n      <?php foreach ($reviews as $review) : ?>\n        <li>\n          Product: <?= $review['product_name'] ?><br />\n          Rating: <?= $review['rating'] ?>/5<br />\n          Comment: <?= $review['comment'] ?><br />\n        </li>\n      <?php endforeach; ?>\n    </ul>\n\n    <!-- Create a new review form -->\n    <h2>Create a New Review:</h2>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n      <input type=\"hidden\" name=\"username\" value=\"<?php echo $_SESSION['username']; ?>\">\n      <label for=\"product_id\">Product ID:</label>\n      <input type=\"number\" id=\"product_id\" name=\"product_id\"><br><br>\n      <label for=\"rating\">Rating (1-5):</label>\n      <input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"5\"><br><br>\n      <label for=\"comment\">Comment:</label>\n      <textarea id=\"comment\" name=\"comment\"></textarea><br><br>\n      <input type=\"submit\" value=\"Submit\">\n    </form>\n\n  <?php else : ?>\n    <!-- Display login form -->\n    <h2>Login:</h2>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n      <input type=\"submit\" value=\"Login\">\n    </form>\n\n  <?php endif; ?>\n</body>\n</html>\n```\n\nThis code includes functions to get user reviews, product reviews, and create a new review. The `authenticateUser` function is used to authenticate users before they can view their reviews or create a new one.", "code_blocks": [null, "```php\n<?php\n\n// Include database connection settings\ninclude_once 'config.php';\n\n// Function to get user reviews\nfunction getUserReviews($user_id) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"SELECT r.id, r.rating, r.comment, p.name AS product_name \n                          FROM reviews r INNER JOIN products p ON r.product_id = p.id \n                          WHERE r.user_id = :id\");\n    $stmt->bindParam(':id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  } catch (PDOException $e) {\n    echo \"Error fetching user reviews: \" . $e->getMessage();\n  }\n}\n\n// Function to get product reviews\nfunction getProductReviews($product_id) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"SELECT r.id, r.rating, r.comment, u.username AS user_name \n                          FROM reviews r INNER JOIN users u ON r.user_id = u.id \n                          WHERE r.product_id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  } catch (PDOException $e) {\n    echo \"Error fetching product reviews: \" . $e->getMessage();\n  }\n}\n\n// Function to create a new review\nfunction createReview($user_id, $product_id, $rating, $comment) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"INSERT INTO reviews (user_id, product_id, rating, comment)\n                          VALUES (:uid, :pid, :rate, :com)\");\n    $stmt->bindParam(':uid', $user_id);\n    $stmt->bindParam(':pid', $product_id);\n    $stmt->bindParam(':rate', $rating);\n    $stmt->bindParam(':com', $comment);\n    return $stmt->execute();\n  } catch (PDOException $e) {\n    echo \"Error creating review: \" . $e->getMessage();\n  }\n}\n\n// Authentication function\nfunction authenticateUser($username, $password) {\n  global $pdo;\n  try {\n    $stmt = $pdo->prepare(\"SELECT id FROM users WHERE username = :un AND password = :pw\");\n    $stmt->bindParam(':un', $username);\n    $stmt->bindParam(':pw', $password);\n    $stmt->execute();\n    return $stmt->fetchColumn() !== false;\n  } catch (PDOException $e) {\n    echo \"Error authenticating user: \" . $e->getMessage();\n  }\n}\n\n// Example usage\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  if (isset($_POST['username']) && isset($_POST['password'])) {\n    // Authenticate user\n    if (authenticateUser($_POST['username'], $_POST['password'])) {\n      // Get reviews for the authenticated user\n      $user_id = $_SESSION['user_id'];\n      $reviews = getUserReviews($user_id);\n      echo json_encode($reviews);\n\n      // Create a new review\n      $createReviewResult = createReview($_SESSION['user_id'], 1, 5, 'Good product!');\n      if ($createReviewResult) {\n        echo \"Review created successfully!\";\n      }\n    } else {\n      echo \"Authentication failed.\";\n    }\n  }\n}\n\n// Include HTML template for user reviews page\ninclude_once 'reviews-template.php';\n```", "```php\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Reviews Page</title>\n</head>\n<body>\n  <?php if (isset($_SESSION['user_id'])) : ?>\n    <!-- Display reviews for the authenticated user -->\n    <h2>My Reviews:</h2>\n    <ul>\n      <?php foreach ($reviews as $review) : ?>\n        <li>\n          Product: <?= $review['product_name'] ?><br />\n          Rating: <?= $review['rating'] ?>/5<br />\n          Comment: <?= $review['comment'] ?><br />\n        </li>\n      <?php endforeach; ?>\n    </ul>\n\n    <!-- Create a new review form -->\n    <h2>Create a New Review:</h2>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n      <input type=\"hidden\" name=\"username\" value=\"<?php echo $_SESSION['username']; ?>\">\n      <label for=\"product_id\">Product ID:</label>\n      <input type=\"number\" id=\"product_id\" name=\"product_id\"><br><br>\n      <label for=\"rating\">Rating (1-5):</label>\n      <input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"5\"><br><br>\n      <label for=\"comment\">Comment:</label>\n      <textarea id=\"comment\" name=\"comment\"></textarea><br><br>\n      <input type=\"submit\" value=\"Submit\">\n    </form>\n\n  <?php else : ?>\n    <!-- Display login form -->\n    <h2>Login:</h2>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n      <input type=\"submit\" value=\"Login\">\n    </form>\n\n  <?php endif; ?>\n</body>\n</html>\n```"]}
