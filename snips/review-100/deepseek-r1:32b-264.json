{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so the user asked how to create a user review function using PHP. I need to provide a clear and helpful response. Let me break down what they might be looking for.\n\nFirst, I should consider that they probably want a system where users can leave reviews on a website. So, the main components would be displaying the review form, submitting the review, showing existing reviews, and maybe handling some backend stuff like database connections.\n\nI'll start by outlining the structure. They'll need an HTML form for inputting the name, review text, and rating. Then, they'll have to handle the form submission with PHP. Storing this data in a database makes sense, so I should include a MySQL example, as that's common.\n\nNext, displaying the reviews is important. I'll show how to fetch them from the database and loop through each one to display on the page. Including ratings as stars would make it more user-friendly, so I'll add code for that using emoji icons.\n\nI should also think about security. Sanitizing inputs is crucial to prevent SQL injection and XSS attacks. Using mysqli_real_escape_string can help with that. Additionally, limiting the review length could be useful, so I'll include a check for the review text length.\n\nError handling is another consideration. They might want feedback if something goes wrong during submission, like database errors. Maybe displaying an error message would be helpful.\n\nPutting it all together, I'll structure the code into sections: connecting to the database, checking form submission, inserting into the database, fetching reviews, and then displaying them with stars. I'll make sure to explain each part so the user understands how everything works.\n\nI should also mention that this is a basic example and suggest additional features like authentication or validation for a production environment. That way, the user knows there's room for expansion based on their needs.\n</think>\n\nHere's an example of a user review function in PHP. This code will allow users to submit reviews and display them on a webpage:\n\n```php\n<?php\n// Database connection\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Insert review if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Sanitize inputs\n    $name = mysqli_real_escape_string($conn, $_POST['name']);\n    $review_text = mysqli_real_escape_string($conn, $_POST['review']);\n    $rating = intval($_POST['rating']);\n\n    // Insert into database\n    $sql = \"INSERT INTO reviews (name, review, rating) VALUES ('$name', '$review_text', $rating)\";\n    \n    if ($conn->query($sql) === TRUE) {\n        echo \"Thank you for your review!\";\n    } else {\n        echo \"Error: \" . $sql . \"<br>\" . $conn->error;\n    }\n}\n\n// Get reviews from database\n$sql = \"SELECT * FROM reviews ORDER BY id DESC\";\n$result = $conn->query($sql);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Review System</title>\n    <style>\n        .star-rating {\n            display: inline-block;\n            font-size: 24px;\n            color: gold;\n        }\n        .review-box {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 10px;\n            background-color: #f9f9f9;\n            border-radius: 5px;\n        }\n    </style>\n</head>\n<body>\n    <!-- Review Form -->\n    <h2>Submit a Review</h2>\n    <form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\">\n        <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br><br>\n        <textarea name=\"review\" placeholder=\"Write your review here...\" rows=\"5\" cols=\"40\" required></textarea><br><br>\n        <h3>Rating:</h3>\n        <select name=\"rating\">\n            <option value=\"1\">1 Star</option>\n            <option value=\"2\">2 Stars</option>\n            <option value=\"3\">3 Stars</option>\n            <option value=\"4\">4 Stars</option>\n            <option value=\"5\" selected>5 Stars</option>\n        </select><br><br>\n        <input type=\"submit\" name=\"submit_review\" value=\"Submit Review\">\n    </form>\n\n    <!-- Display Reviews -->\n    <h2>Reviews</h2>\n    <?php\n    if ($result->num_rows > 0) {\n        while($row = $result->fetch_assoc()) {\n            echo \"<div class='review-box'>\";\n            echo \"<strong>\" . htmlspecialchars($row['name']) . \"</strong><br>\";\n            \n            // Display rating stars\n            $rating = $row['rating'];\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $rating) {\n                    echo \"<span class='star-rating'>\u2605</span>\";\n                } else {\n                    echo \"<span class='star-rating'>\u2606</span>\";\n                }\n            }\n            \n            echo \"<br>\";\n            echo htmlspecialchars($row['review']) . \"<br><br>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews yet!\";\n    }\n    ?>\n\n    <?php\n    // Close database connection\n    $conn->close();\n    ?>\n</body>\n</html>\n```\n\nThis code includes the following features:\n\n1. A form for users to submit their name, review text, and rating (1-5 stars)\n2. Database connectivity using MySQLi\n3. Sanitization of user inputs to prevent SQL injection and XSS attacks\n4. Display of reviews with ratings shown as stars\n5. Basic styling for the review box\n\nTo use this code:\n\n1. Create a database named `reviews_db` (or change the name in the connection settings)\n2. Create a table named `reviews` with columns:\n   - id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - name (VARCHAR(255))\n   - review (TEXT)\n   - rating (INT)\n3. Save this code as an PHP file (e.g., `review_system.php`)\n4. Run it on a web server\n\nThe code includes basic security measures like input sanitization and SQL escaping, but for a production environment, you might want to add:\n\n1. User authentication\n2. CSRF protection\n3. Input validation\n4. Error handling\n5. CAPTCHA or other anti-spam measures\n\nYou can customize the styling by modifying the CSS in the `<style>` section.\n\nTo improve this code further, you could:\n\n- Add a timestamp for each review\n- Implement pagination for long lists of reviews\n- Add sorting options (e.g., by rating)\n- Include user avatars or profile links\n- Add editing and deleting capabilities for reviews", "code_blocks": ["```php\n<?php\n// Database connection\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Insert review if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Sanitize inputs\n    $name = mysqli_real_escape_string($conn, $_POST['name']);\n    $review_text = mysqli_real_escape_string($conn, $_POST['review']);\n    $rating = intval($_POST['rating']);\n\n    // Insert into database\n    $sql = \"INSERT INTO reviews (name, review, rating) VALUES ('$name', '$review_text', $rating)\";\n    \n    if ($conn->query($sql) === TRUE) {\n        echo \"Thank you for your review!\";\n    } else {\n        echo \"Error: \" . $sql . \"<br>\" . $conn->error;\n    }\n}\n\n// Get reviews from database\n$sql = \"SELECT * FROM reviews ORDER BY id DESC\";\n$result = $conn->query($sql);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Review System</title>\n    <style>\n        .star-rating {\n            display: inline-block;\n            font-size: 24px;\n            color: gold;\n        }\n        .review-box {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 10px;\n            background-color: #f9f9f9;\n            border-radius: 5px;\n        }\n    </style>\n</head>\n<body>\n    <!-- Review Form -->\n    <h2>Submit a Review</h2>\n    <form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\">\n        <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br><br>\n        <textarea name=\"review\" placeholder=\"Write your review here...\" rows=\"5\" cols=\"40\" required></textarea><br><br>\n        <h3>Rating:</h3>\n        <select name=\"rating\">\n            <option value=\"1\">1 Star</option>\n            <option value=\"2\">2 Stars</option>\n            <option value=\"3\">3 Stars</option>\n            <option value=\"4\">4 Stars</option>\n            <option value=\"5\" selected>5 Stars</option>\n        </select><br><br>\n        <input type=\"submit\" name=\"submit_review\" value=\"Submit Review\">\n    </form>\n\n    <!-- Display Reviews -->\n    <h2>Reviews</h2>\n    <?php\n    if ($result->num_rows > 0) {\n        while($row = $result->fetch_assoc()) {\n            echo \"<div class='review-box'>\";\n            echo \"<strong>\" . htmlspecialchars($row['name']) . \"</strong><br>\";\n            \n            // Display rating stars\n            $rating = $row['rating'];\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $rating) {\n                    echo \"<span class='star-rating'>\u2605</span>\";\n                } else {\n                    echo \"<span class='star-rating'>\u2606</span>\";\n                }\n            }\n            \n            echo \"<br>\";\n            echo htmlspecialchars($row['review']) . \"<br><br>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews yet!\";\n    }\n    ?>\n\n    <?php\n    // Close database connection\n    $conn->close();\n    ?>\n</body>\n</html>\n```"]}
