{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n====================================\n\nThe following is an example of a user review function written in PHP. This code snippet demonstrates how to create, read, update, and delete (CRUD) reviews for a product or service.\n\n**Database Schema**\n-------------------\n\nFor this example, we'll assume the following database schema:\n\n```sql\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  review TEXT,\n  rating DECIMAL(2,1),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**User Review Function**\n-------------------------\n\n```php\n// user_review.php\n\nfunction getReviews($productId, $userId = null) {\n  // Get all reviews for a product or user-specific reviews\n  global $db;\n  \n  if ($userId !== null) {\n    $query = \"SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id\";\n  } else {\n    $query = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n  }\n  \n  try {\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId, PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $productId, PDO::PARAM_INT);\n    \n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return array();\n  }\n}\n\nfunction addReview($data) {\n  // Add a new review\n  global $db;\n  \n  try {\n    $query = \"INSERT INTO reviews SET user_id = :user_id, product_id = :product_id, review = :review, rating = :rating\";\n    \n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':review', $data['review'], PDO::PARAM_STR);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_DECIMAL);\n    \n    $stmt->execute();\n    return $db->lastInsertId();\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return null;\n  }\n}\n\nfunction updateReview($reviewId, $data) {\n  // Update an existing review\n  global $db;\n  \n  try {\n    $query = \"UPDATE reviews SET user_id = :user_id, product_id = :product_id, review = :review, rating = :rating WHERE id = :id\";\n    \n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':review', $data['review'], PDO::PARAM_STR);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_DECIMAL);\n    \n    $stmt->execute();\n    return true;\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return false;\n  }\n}\n\nfunction deleteReview($reviewId) {\n  // Delete a review\n  global $db;\n  \n  try {\n    $query = \"DELETE FROM reviews WHERE id = :id\";\n    \n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    \n    $stmt->execute();\n    return true;\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return false;\n  }\n}\n```\n\n**Example Usage**\n-----------------\n\n```php\n// Get all reviews for a product with ID 1\n$reviews = getReviews(1);\nprint_r($reviews);\n\n// Add a new review\n$data = array(\n  'user_id' => 1,\n  'product_id' => 1,\n  'review' => 'Great product!',\n  'rating' => 4.5\n);\n$reviewId = addReview($data);\necho \"New review ID: $reviewId\\n\";\n\n// Update an existing review with ID 123\n$data = array(\n  'user_id' => 1,\n  'product_id' => 1,\n  'review' => 'Even better!',\n  'rating' => 5.0\n);\n$updateReview = updateReview(123, $data);\necho \"Update result: \" . ($updateReview ? 'true' : 'false') . \"\\n\";\n\n// Delete a review with ID 456\n$deleteResult = deleteReview(456);\necho \"Delete result: \" . ($deleteResult ? 'true' : 'false') . \"\\n\";\n```\n\nNote that this is just an example implementation, and you should adapt it to your specific use case. Additionally, make sure to handle errors and exceptions properly in a production environment.", "code_blocks": [null, "```php\n// user_review.php\n\nfunction getReviews($productId, $userId = null) {\n  // Get all reviews for a product or user-specific reviews\n  global $db;\n  \n  if ($userId !== null) {\n    $query = \"SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id\";\n  } else {\n    $query = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n  }\n  \n  try {\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $userId, PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $productId, PDO::PARAM_INT);\n    \n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return array();\n  }\n}\n\nfunction addReview($data) {\n  // Add a new review\n  global $db;\n  \n  try {\n    $query = \"INSERT INTO reviews SET user_id = :user_id, product_id = :product_id, review = :review, rating = :rating\";\n    \n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':review', $data['review'], PDO::PARAM_STR);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_DECIMAL);\n    \n    $stmt->execute();\n    return $db->lastInsertId();\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return null;\n  }\n}\n\nfunction updateReview($reviewId, $data) {\n  // Update an existing review\n  global $db;\n  \n  try {\n    $query = \"UPDATE reviews SET user_id = :user_id, product_id = :product_id, review = :review, rating = :rating WHERE id = :id\";\n    \n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':review', $data['review'], PDO::PARAM_STR);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_DECIMAL);\n    \n    $stmt->execute();\n    return true;\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return false;\n  }\n}\n\nfunction deleteReview($reviewId) {\n  // Delete a review\n  global $db;\n  \n  try {\n    $query = \"DELETE FROM reviews WHERE id = :id\";\n    \n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    \n    $stmt->execute();\n    return true;\n  } catch (PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return false;\n  }\n}\n```", "```php\n// Get all reviews for a product with ID 1\n$reviews = getReviews(1);\nprint_r($reviews);\n\n// Add a new review\n$data = array(\n  'user_id' => 1,\n  'product_id' => 1,\n  'review' => 'Great product!',\n  'rating' => 4.5\n);\n$reviewId = addReview($data);\necho \"New review ID: $reviewId\\n\";\n\n// Update an existing review with ID 123\n$data = array(\n  'user_id' => 1,\n  'product_id' => 1,\n  'review' => 'Even better!',\n  'rating' => 5.0\n);\n$updateReview = updateReview(123, $data);\necho \"Update result: \" . ($updateReview ? 'true' : 'false') . \"\\n\";\n\n// Delete a review with ID 456\n$deleteResult = deleteReview(456);\necho \"Delete result: \" . ($deleteResult ? 'true' : 'false') . \"\\n\";\n```"]}
