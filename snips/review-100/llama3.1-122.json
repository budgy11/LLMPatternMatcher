{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n====================================\n\nBelow is an example of a basic user review system implemented in PHP. This code includes functions for inserting, retrieving, updating, and deleting reviews.\n\n### Database Setup\n\nFirst, you need to create a database table for storing reviews. Create a new file named `reviews.sql` with the following SQL query:\n\n```sql\nCREATE TABLE reviews (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    product_id INT,\n    rating TINYINT(1) CHECK(rating BETWEEN 1 AND 5),\n    review TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\nAssuming you have `users` and `products` tables in your database.\n\n### PHP Code\n\nCreate a new file named `review.php` with the following code:\n\n```php\n<?php\n\n// Include connection settings and function to connect to database\nrequire_once 'dbconnect.php';\n\nfunction insertReview($user_id, $product_id, $rating, $review) {\n    // Prepare SQL query\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, review)\n            VALUES (?, ?, ?, ?)\";\n\n    // Prepare statement and execute query\n    $stmt = $db->prepare($sql);\n    $stmt->execute([$user_id, $product_id, $rating, $review]);\n\n    return $stmt->rowCount();\n}\n\nfunction getReviews() {\n    // Retrieve reviews from database\n    $reviews = array();\n\n    try {\n        $sql = \"SELECT r.id, u.username, p.name AS product_name, r.rating, r.review, r.created_at \n                FROM reviews r JOIN users u ON r.user_id = u.id JOIN products p ON r.product_id = p.id\";\n\n        $stmt = $db->prepare($sql);\n        $stmt->execute();\n\n        while ($row = $stmt->fetch()) {\n            $reviews[] = array(\n                'id' => $row['id'],\n                'username' => $row['username'],\n                'product_name' => $row['product_name'],\n                'rating' => $row['rating'],\n                'review' => $row['review'],\n                'created_at' => date('Y-m-d H:i:s', strtotime($row['created_at']))\n            );\n        }\n\n    } catch (PDOException $e) {\n        // Handle database error\n        echo \"Database error: \" . $e->getMessage();\n    }\n\n    return $reviews;\n}\n\nfunction updateReview($id, $rating, $review) {\n    // Prepare SQL query\n    $sql = \"UPDATE reviews SET rating = ?, review = ? WHERE id = ?\";\n\n    // Prepare statement and execute query\n    $stmt = $db->prepare($sql);\n    $result = $stmt->execute([$rating, $review, $id]);\n\n    return $result;\n}\n\nfunction deleteReview($id) {\n    // Prepare SQL query\n    $sql = \"DELETE FROM reviews WHERE id = ?\";\n\n    // Prepare statement and execute query\n    $stmt = $db->prepare($sql);\n    $result = $stmt->execute([$id]);\n\n    return $result;\n}\n\n// Example usage:\n$user_id = 1; // ID of user who wrote the review\n$product_id = 2; // ID of product reviewed\n$rating = 4;\n$review = 'This is a great product!';\n\ninsertReview($user_id, $product_id, $rating, $review);\n\n$reviews = getReviews();\nprint_r($reviews);\n\n?>\n```\n\n**Note:** Replace `dbconnect.php` with your own database connection script. The above code assumes you have `PDO` extension enabled in your PHP setup.\n\nThis code provides basic CRUD operations for reviews:\n\n*   `insertReview`: Insert a new review into the database.\n*   `getReviews`: Retrieve all reviews from the database.\n*   `updateReview`: Update an existing review in the database.\n*   `deleteReview`: Delete a review from the database.\n\nRemember to replace placeholders with your actual database credentials and table structures.", "code_blocks": [null, "```php\n<?php\n\n// Include connection settings and function to connect to database\nrequire_once 'dbconnect.php';\n\nfunction insertReview($user_id, $product_id, $rating, $review) {\n    // Prepare SQL query\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, review)\n            VALUES (?, ?, ?, ?)\";\n\n    // Prepare statement and execute query\n    $stmt = $db->prepare($sql);\n    $stmt->execute([$user_id, $product_id, $rating, $review]);\n\n    return $stmt->rowCount();\n}\n\nfunction getReviews() {\n    // Retrieve reviews from database\n    $reviews = array();\n\n    try {\n        $sql = \"SELECT r.id, u.username, p.name AS product_name, r.rating, r.review, r.created_at \n                FROM reviews r JOIN users u ON r.user_id = u.id JOIN products p ON r.product_id = p.id\";\n\n        $stmt = $db->prepare($sql);\n        $stmt->execute();\n\n        while ($row = $stmt->fetch()) {\n            $reviews[] = array(\n                'id' => $row['id'],\n                'username' => $row['username'],\n                'product_name' => $row['product_name'],\n                'rating' => $row['rating'],\n                'review' => $row['review'],\n                'created_at' => date('Y-m-d H:i:s', strtotime($row['created_at']))\n            );\n        }\n\n    } catch (PDOException $e) {\n        // Handle database error\n        echo \"Database error: \" . $e->getMessage();\n    }\n\n    return $reviews;\n}\n\nfunction updateReview($id, $rating, $review) {\n    // Prepare SQL query\n    $sql = \"UPDATE reviews SET rating = ?, review = ? WHERE id = ?\";\n\n    // Prepare statement and execute query\n    $stmt = $db->prepare($sql);\n    $result = $stmt->execute([$rating, $review, $id]);\n\n    return $result;\n}\n\nfunction deleteReview($id) {\n    // Prepare SQL query\n    $sql = \"DELETE FROM reviews WHERE id = ?\";\n\n    // Prepare statement and execute query\n    $stmt = $db->prepare($sql);\n    $result = $stmt->execute([$id]);\n\n    return $result;\n}\n\n// Example usage:\n$user_id = 1; // ID of user who wrote the review\n$product_id = 2; // ID of product reviewed\n$rating = 4;\n$review = 'This is a great product!';\n\ninsertReview($user_id, $product_id, $rating, $review);\n\n$reviews = getReviews();\nprint_r($reviews);\n\n?>\n```"]}
