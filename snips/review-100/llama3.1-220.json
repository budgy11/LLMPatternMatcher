{"prompt": "Create a user review function using php", "llm_output": "Here's an example of how you can create a simple user review system using PHP. This example assumes that you have a database set up with the following tables:\n\n**users table**\n\n| id | name  | email    |\n|----|-------|----------|\n| 1  | John  | john@example.com |\n\n**reviews table**\n\n| id | title       | content        | user_id   |\n|----|-------------|----------------|-----------|\n| 1  | Great hotel | Clean and comfy | 1         |\n\n**review ratings table (optional)**\n\n| id | review_id | rating |\n|----|-----------|--------|\n| 1  | 1         | 5      |\n\nFirst, let's create the database schema in PHP:\n\n```php\n// db.php\n\nclass Database {\n    private $host = 'localhost';\n    private $db_name = 'reviews_db';\n    private $username = 'root';\n    private $password = '';\n\n    public function connect() {\n        try {\n            $conn = new PDO('mysql:host=' . $this->host . ';dbname=' . $this->db_name, $this->username, $this->password);\n            return $conn;\n        } catch(PDOException $e) {\n            echo 'Connection failed: ' . $e->getMessage();\n        }\n    }\n\n    public function query($query) {\n        $stmt = $this->connect()->prepare($query);\n        $stmt->execute();\n        return $stmt;\n    }\n}\n```\n\nNext, let's create the user review class:\n\n```php\n// review.php\n\nclass Review {\n    private $db;\n\n    public function __construct() {\n        $this->db = new Database();\n    }\n\n    // Get all reviews for a specific user\n    public function getReviews($user_id) {\n        $query = \"SELECT * FROM reviews WHERE user_id = :user_id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':user_id', $user_id);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    // Get a single review by id\n    public function getReview($id) {\n        $query = \"SELECT * FROM reviews WHERE id = :id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':id', $id);\n        return $stmt->fetch(PDO::FETCH_ASSOC);\n    }\n\n    // Create a new review\n    public function createReview($title, $content, $user_id) {\n        $query = \"INSERT INTO reviews (title, content, user_id) VALUES (:title, :content, :user_id)\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':title', $title);\n        $stmt->bindParam(':content', $content);\n        $stmt->bindParam(':user_id', $user_id);\n        return $stmt->execute();\n    }\n\n    // Update a review\n    public function updateReview($id, $title, $content) {\n        $query = \"UPDATE reviews SET title = :title, content = :content WHERE id = :id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':id', $id);\n        $stmt->bindParam(':title', $title);\n        $stmt->bindParam(':content', $content);\n        return $stmt->execute();\n    }\n\n    // Delete a review\n    public function deleteReview($id) {\n        $query = \"DELETE FROM reviews WHERE id = :id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':id', $id);\n        return $stmt->execute();\n    }\n}\n```\n\nFinally, let's create the user review form and handle submission:\n\n```php\n// index.php\n\nrequire_once 'review.php';\n\n$review = new Review();\n\nif (isset($_POST['submit'])) {\n    $title = $_POST['title'];\n    $content = $_POST['content'];\n    $user_id = $_SESSION['user_id'];\n\n    if ($review->createReview($title, $content, $user_id)) {\n        echo 'Review created successfully!';\n    } else {\n        echo 'Error creating review.';\n    }\n}\n\n// Display all reviews for the current user\n$reviews = $review->getReviews($_SESSION['user_id']);\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" name=\"title\"><br><br>\n    <label for=\"content\">Content:</label>\n    <textarea id=\"content\" name=\"content\"></textarea><br><br>\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\n<h2>My Reviews:</h2>\n\n<ul>\n    <?php foreach ($reviews as $review): ?>\n        <li>\n            <h3><?= $review['title'] ?></h3>\n            <?= $review['content'] ?><br><br>\n            <a href=\"#\">Edit Review</a> | <a href=\"#\">Delete Review</a>\n        </li>\n    <?php endforeach; ?>\n</ul>\n```\n\nThis example demonstrates how to create a simple user review system using PHP. Users can submit reviews, view their own reviews, edit and delete them as needed.", "code_blocks": ["```php\n// db.php\n\nclass Database {\n    private $host = 'localhost';\n    private $db_name = 'reviews_db';\n    private $username = 'root';\n    private $password = '';\n\n    public function connect() {\n        try {\n            $conn = new PDO('mysql:host=' . $this->host . ';dbname=' . $this->db_name, $this->username, $this->password);\n            return $conn;\n        } catch(PDOException $e) {\n            echo 'Connection failed: ' . $e->getMessage();\n        }\n    }\n\n    public function query($query) {\n        $stmt = $this->connect()->prepare($query);\n        $stmt->execute();\n        return $stmt;\n    }\n}\n```", "```php\n// review.php\n\nclass Review {\n    private $db;\n\n    public function __construct() {\n        $this->db = new Database();\n    }\n\n    // Get all reviews for a specific user\n    public function getReviews($user_id) {\n        $query = \"SELECT * FROM reviews WHERE user_id = :user_id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':user_id', $user_id);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    // Get a single review by id\n    public function getReview($id) {\n        $query = \"SELECT * FROM reviews WHERE id = :id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':id', $id);\n        return $stmt->fetch(PDO::FETCH_ASSOC);\n    }\n\n    // Create a new review\n    public function createReview($title, $content, $user_id) {\n        $query = \"INSERT INTO reviews (title, content, user_id) VALUES (:title, :content, :user_id)\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':title', $title);\n        $stmt->bindParam(':content', $content);\n        $stmt->bindParam(':user_id', $user_id);\n        return $stmt->execute();\n    }\n\n    // Update a review\n    public function updateReview($id, $title, $content) {\n        $query = \"UPDATE reviews SET title = :title, content = :content WHERE id = :id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':id', $id);\n        $stmt->bindParam(':title', $title);\n        $stmt->bindParam(':content', $content);\n        return $stmt->execute();\n    }\n\n    // Delete a review\n    public function deleteReview($id) {\n        $query = \"DELETE FROM reviews WHERE id = :id\";\n        $stmt = $this->db->query($query);\n        $stmt->bindParam(':id', $id);\n        return $stmt->execute();\n    }\n}\n```", "```php\n// index.php\n\nrequire_once 'review.php';\n\n$review = new Review();\n\nif (isset($_POST['submit'])) {\n    $title = $_POST['title'];\n    $content = $_POST['content'];\n    $user_id = $_SESSION['user_id'];\n\n    if ($review->createReview($title, $content, $user_id)) {\n        echo 'Review created successfully!';\n    } else {\n        echo 'Error creating review.';\n    }\n}\n\n// Display all reviews for the current user\n$reviews = $review->getReviews($_SESSION['user_id']);\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" name=\"title\"><br><br>\n    <label for=\"content\">Content:</label>\n    <textarea id=\"content\" name=\"content\"></textarea><br><br>\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\n<h2>My Reviews:</h2>\n\n<ul>\n    <?php foreach ($reviews as $review): ?>\n        <li>\n            <h3><?= $review['title'] ?></h3>\n            <?= $review['content'] ?><br><br>\n            <a href=\"#\">Edit Review</a> | <a href=\"#\">Delete Review</a>\n        </li>\n    <?php endforeach; ?>\n</ul>\n```"]}
