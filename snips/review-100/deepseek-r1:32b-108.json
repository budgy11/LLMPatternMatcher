{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for user reviews. Let me think about how to approach this.\n\nFirst, the function should take user input for a review and save it to a database. So, I'll need to set up a form with fields like name, email, rating, comment, and a submit button.\n\nNext, I should handle form submission. When the user submits the form, the data needs to be processed. I'll check if the submission is valid and then insert the data into the database.\n\nI should also display existing reviews on the page. That means querying the database for all reviews and looping through them to display each one. Each review should show the user's name, email, rating stars, comment, and timestamp.\n\nValidation is important. I need to ensure that required fields aren't empty and that the rating is between 1 and 5. If there are errors, I'll display them above the form.\n\nFor the ratings, displaying stars would be user-friendly. I can create a function that generates star icons based on the rating value. Maybe using Font Awesome for the icons.\n\nSecurity is a concern, so I should sanitize the input data to prevent SQL injection and XSS attacks. Using mysqli_real_escape_string can help with that.\n\nAlso, I'll need to format the timestamp to be more readable. Converting it to a friendly date string would make it look nicer on the page.\n\nPutting it all together, the function will handle both displaying the form and reviews, processing submissions, validating input, and sanitizing data. I should structure the code with clear sections for HTML, PHP processing, and database interactions.\n\nI'll need to include placeholders for the database connection details like host, username, password, and database name. The user will have to replace these with their actual credentials.\n\nFinally, testing is important. I should check if submitting a review works, displays correctly, handles errors, and shows old reviews properly.\n</think>\n\nHere's an example of a user review function in PHP that allows users to submit reviews and display them:\n\n```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$db_name = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $db_name);\n\n// Create table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    rating INT NOT NULL,\n    comment TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\";\nmysqli_query($conn, $sql);\n\n// Function to handle review submission and display\nfunction user_reviews() {\n    global $conn;\n\n    // Check if form is submitted\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $name = $_POST['name'];\n        $email = $_POST['email'];\n        $rating = $_POST['rating'];\n        $comment = $_POST['comment'];\n\n        // Validate input\n        $errors = array();\n        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {\n            $errors[] = \"All fields are required!\";\n        }\n\n        if (!isset($rating) || $rating < 1 || $rating > 5) {\n            $errors[] = \"Please select a valid rating (1-5 stars)\";\n        }\n\n        // If no errors, insert into database\n        if (empty($errors)) {\n            // Sanitize input\n            $name = mysqli_real_escape_string($conn, htmlspecialchars($name));\n            $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n            $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n            // Insert review into database\n            $sql = \"INSERT INTO reviews (user_name, user_email, rating, comment) \n                    VALUES ('$name', '$email', '$rating', '$comment')\";\n            mysqli_query($conn, $sql);\n        }\n    }\n\n    // Display existing reviews\n    $sql = \"SELECT * FROM reviews ORDER BY created_at DESC\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['user_name'] . \"</h3>\";\n            echo \"<p>\" . $row['user_email'] . \"</p>\";\n            echo display_rating($row['rating']);\n            echo \"<p>\" . $row['comment'] . \"</p>\";\n            echo \"<small>Posted on: \" . date('F j, Y', strtotime($row['created_at'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet!</p>\";\n    }\n\n    // Display review form\n    display_review_form();\n}\n\n// Function to display rating stars\nfunction display_rating($rating) {\n    $stars = \"\";\n    for ($i = 1; $i <= 5; $i++) {\n        if ($i <= $rating) {\n            $stars .= \"<span class='star'>\u2605</span>\";\n        } else {\n            $stars .= \"<span class='star'>\u2606</span>\";\n        }\n    }\n    return $stars;\n}\n\n// Function to display review form\nfunction display_review_form() {\n    // Check if there are any errors\n    if (isset($errors) && !empty($errors)) {\n        foreach ($errors as $error) {\n            echo \"<div class='error'>\" . $error . \"</div>\";\n        }\n    }\n\n    // Display the review form\n    echo \"<form method='post'>\";\n    echo \"<label for='name'>Name:</label>\";\n    echo \"<input type='text' id='name' name='name'><br><br>\";\n\n    echo \"<label for='email'>Email:</label>\";\n    echo \"<input type='email' id='email' name='email'><br><br>\";\n\n    echo \"<label for='rating'>Rating:</label>\";\n    for ($i = 1; $i <= 5; $i++) {\n        echo \"<input type='radio' id='rating$i' name='rating' value='$i'>\";\n        echo \"<label for='rating$i'>$i stars</label> \";\n    }\n    echo \"<br><br>\";\n\n    echo \"<label for='comment'>Comment:</label>\";\n    echo \"<textarea id='comment' name='comment'></textarea><br><br>\";\n\n    echo \"<input type='submit' value='Submit Review'>\";\n    echo \"</form>\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis code includes:\n\n1. Database connection setup and table creation\n\n2. A `user_reviews()` function that handles both displaying the review form and processing submitted reviews\n\n3. Input validation and sanitization\n\n4. Display of existing reviews with rating stars\n\n5. Error handling for invalid submissions\n\n6. A helper function `display_rating()` to show rating stars\n\n7. CSS-friendly output structure\n\nTo use this code:\n\n1. Replace the database connection details (host, username, password, db_name) with your actual database information\n\n2. Create a MySQL database and table using the provided SQL query\n\n3. Include this PHP file in your web page where you want to display the review system\n\n4. Add some CSS styling for better appearance:\n\n```css\n.review {\n    margin: 20px;\n    padding: 15px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n}\n\n.star {\n    font-size: 24px;\n    color: gold;\n}\n\n.error {\n    color: red;\n    margin-bottom: 10px;\n}\n\nform {\n    margin-top: 20px;\n}\n\ninput[type='text'], input[type='email'], textarea {\n    width: 100%;\n    padding: 8px;\n    margin: 5px 0 15px 0;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\ninput[type='radio'] {\n    margin-right: 5px;\n}\n```\n\nFeatures of this review system:\n\n- Users can submit their name, email, rating (1-5 stars), and comment\n- Submissions are validated on the server side\n- Reviews are stored in a MySQL database\n- Existing reviews are displayed with user information, rating stars, and timestamp\n- Error messages are shown for invalid submissions\n- The interface is clean and simple\n\nYou can customize this further by:\n\n- Adding CAPTCHA verification to prevent spam\n- Implementing a moderation system for reviews\n- Adding more fields like user location or profile picture\n- Changing the star display style\n- Adding sorting options (newest, highest rated, etc.)\n- Including pagination if there are many reviews", "code_blocks": ["```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$db_name = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $db_name);\n\n// Create table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    rating INT NOT NULL,\n    comment TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\";\nmysqli_query($conn, $sql);\n\n// Function to handle review submission and display\nfunction user_reviews() {\n    global $conn;\n\n    // Check if form is submitted\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $name = $_POST['name'];\n        $email = $_POST['email'];\n        $rating = $_POST['rating'];\n        $comment = $_POST['comment'];\n\n        // Validate input\n        $errors = array();\n        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {\n            $errors[] = \"All fields are required!\";\n        }\n\n        if (!isset($rating) || $rating < 1 || $rating > 5) {\n            $errors[] = \"Please select a valid rating (1-5 stars)\";\n        }\n\n        // If no errors, insert into database\n        if (empty($errors)) {\n            // Sanitize input\n            $name = mysqli_real_escape_string($conn, htmlspecialchars($name));\n            $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n            $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n            // Insert review into database\n            $sql = \"INSERT INTO reviews (user_name, user_email, rating, comment) \n                    VALUES ('$name', '$email', '$rating', '$comment')\";\n            mysqli_query($conn, $sql);\n        }\n    }\n\n    // Display existing reviews\n    $sql = \"SELECT * FROM reviews ORDER BY created_at DESC\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['user_name'] . \"</h3>\";\n            echo \"<p>\" . $row['user_email'] . \"</p>\";\n            echo display_rating($row['rating']);\n            echo \"<p>\" . $row['comment'] . \"</p>\";\n            echo \"<small>Posted on: \" . date('F j, Y', strtotime($row['created_at'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet!</p>\";\n    }\n\n    // Display review form\n    display_review_form();\n}\n\n// Function to display rating stars\nfunction display_rating($rating) {\n    $stars = \"\";\n    for ($i = 1; $i <= 5; $i++) {\n        if ($i <= $rating) {\n            $stars .= \"<span class='star'>\u2605</span>\";\n        } else {\n            $stars .= \"<span class='star'>\u2606</span>\";\n        }\n    }\n    return $stars;\n}\n\n// Function to display review form\nfunction display_review_form() {\n    // Check if there are any errors\n    if (isset($errors) && !empty($errors)) {\n        foreach ($errors as $error) {\n            echo \"<div class='error'>\" . $error . \"</div>\";\n        }\n    }\n\n    // Display the review form\n    echo \"<form method='post'>\";\n    echo \"<label for='name'>Name:</label>\";\n    echo \"<input type='text' id='name' name='name'><br><br>\";\n\n    echo \"<label for='email'>Email:</label>\";\n    echo \"<input type='email' id='email' name='email'><br><br>\";\n\n    echo \"<label for='rating'>Rating:</label>\";\n    for ($i = 1; $i <= 5; $i++) {\n        echo \"<input type='radio' id='rating$i' name='rating' value='$i'>\";\n        echo \"<label for='rating$i'>$i stars</label> \";\n    }\n    echo \"<br><br>\";\n\n    echo \"<label for='comment'>Comment:</label>\";\n    echo \"<textarea id='comment' name='comment'></textarea><br><br>\";\n\n    echo \"<input type='submit' value='Submit Review'>\";\n    echo \"</form>\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null]}
