{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so the user asked how to create a user review function using PHP. I need to provide a clear and helpful response.\n\nFirst, I should outline what a user review system typically includes. It usually involves allowing users to submit reviews, displaying those reviews, calculating an average rating, and maybe handling different aspects like stars or text comments.\n\nI'll start by considering the database structure. I'll need a table for reviews with fields like id, user_id, product_id, rating, comment, and timestamps. Also, a products table with its own id and name at least.\n\nNext, connecting to the database is essential. Using mysqli since it's more secure than older methods. I'll include placeholders for host, username, password, and database name, reminding the user to replace them with their actual credentials.\n\nFor submitting a review, I'll create a function that takes user_id, product_id, rating, and comment as parameters. The function will check if a review already exists from that user for the product to prevent multiple reviews. If not, it inserts the new review into the database.\n\nDisplaying reviews is another key part. I'll write a function that retrieves all reviews for a specific product, joins with the users table to get usernames, and returns them sorted by date. This way, the frontend can display each review with user info and content.\n\nCalculating the average rating is straightforward with an SQL AVG() function. The function fetches the average rating for a given product_id and returns it rounded to two decimal places for clarity.\n\nOn the frontend, I need to show a form where users can rate and comment. Using HTML and CSS to make it user-friendly. The form should have radio buttons for ratings (1-5 stars) and a textarea for comments. PHP will handle form submission, validate inputs, and use the submit_review function.\n\nDisplaying the reviews involves looping through each review returned by get_reviews and echoing the user's name, rating stars, comment, and date. I'll also show the average rating at the top.\n\nI should include error handling in case something goes wrong with database queries or form submissions. Using try-catch blocks or checking for errors after each query would be good practice, but for simplicity, I might just mention that it's important without adding too much complexity here.\n\nFinally, I'll make sure to test each function separately: submitting a review, retrieving them, and calculating averages. Testing with different scenarios, like submitting multiple reviews from the same user or checking if the average updates correctly after new reviews are added.\n\nI also need to remind the user about security measures like sanitizing inputs to prevent SQL injection and XSS attacks. Even though the example uses prepared statements, mentioning best practices is important for robust code.\n\nOverall, the goal is to provide a clear, functional example that covers all necessary parts of a review system while being easy to understand and implement.\n</think>\n\nHere's an example of a user review function in PHP. This script will allow users to submit reviews and ratings for products, store them in a database, and display the reviews:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n$conn = new mysqli($host, $username, $password, $database);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to submit a review\nfunction submit_review($user_id, $product_id, $rating, $comment) {\n    global $conn;\n    \n    // Check if user already submitted a review for this product\n    $check_query = \"SELECT id FROM reviews WHERE user_id = ? AND product_id = ?\";\n    $stmt = $conn->prepare($check_query);\n    $stmt->bind_param(\"ii\", $user_id, $product_id);\n    $stmt->execute();\n    \n    if ($stmt->fetch()) {\n        return false; // User already reviewed\n    }\n    \n    // Insert new review\n    $insert_query = \"INSERT INTO reviews (user_id, product_id, rating, comment, created_at) \n                    VALUES (?, ?, ?, ?, NOW())\";\n    $stmt = $conn->prepare($insert_query);\n    $stmt->bind_param(\"iisi\", $user_id, $product_id, $rating, $comment);\n    \n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get reviews for a product\nfunction get_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews for this product\n    $query = \"SELECT r.id, r.rating, r.comment, r.created_at, u.username \n             FROM reviews r \n             JOIN users u ON r.user_id = u.id \n             WHERE r.product_id = ?\n             ORDER BY r.created_at DESC\";\n             \n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    \n    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n}\n\n// Function to get average rating for a product\nfunction get_average_rating($product_id) {\n    global $conn;\n    \n    // Calculate average rating\n    $query = \"SELECT AVG(rating) as average \n             FROM reviews \n             WHERE product_id = ?\";\n             \n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    \n    $result = $stmt->get_result()->fetch_assoc();\n    return round($result['average'], 2); // Round to 2 decimal places\n}\n\n// Example usage:\n\n// Submit a new review\nif (isset($_POST['submit_review'])) {\n    $user_id = $_SESSION['user_id']; // Get logged-in user's ID\n    $product_id = $_GET['product_id'];\n    $rating = intval($_POST['rating']);\n    $comment = htmlspecialchars(trim($_POST['comment']));\n    \n    if ($rating >= 1 && $rating <= 5) {\n        if (submit_review($user_id, $product_id, $rating, $comment)) {\n            echo \"Review submitted successfully!\";\n        } else {\n            echo \"Error submitting review or you already reviewed this product.\";\n        }\n    } else {\n        echo \"Please select a valid rating between 1 and 5.\";\n    }\n}\n\n// Display reviews for a product\n$product_id = $_GET['product_id'];\n$reviews = get_reviews($product_id);\n$average_rating = get_average_rating($product_id);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .rating-stars {\n            display: inline-block;\n            color: gold;\n        }\n        .review-form {\n            margin-bottom: 20px;\n        }\n        .review-container {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin: 10px 0;\n        }\n    </style>\n</head>\n<body>\n    <h2>Product Reviews</h2>\n    \n    <!-- Review Form -->\n    <?php if (isset($_SESSION['user_id'])) { ?>\n        <form class=\"review-form\" method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n            \n            <div class=\"rating-stars\">\n                <input type=\"radio\" name=\"rating\" value=\"5\"> \u2605\u2605\u2605\u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"4\"> \u2605\u2605\u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"3\"> \u2605\u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"2\"> \u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"1\"> \u2605<br>\n            </div>\n            \n            <textarea name=\"comment\" placeholder=\"Write your review...\"></textarea><br>\n            \n            <button type=\"submit\" name=\"submit_review\">Submit Review</button>\n        </form>\n    <?php } else { ?>\n        <p>Please login to submit a review.</p>\n    <?php } ?>\n\n    <!-- Display Reviews -->\n    <div class=\"reviews-container\">\n        <h3>Average Rating: <?php echo $average_rating; ?> / 5</h3>\n        \n        <?php foreach ($reviews as $review) { ?>\n            <div class=\"review-container\">\n                <strong><?php echo $review['username']; ?></strong><br>\n                <?php \n                    // Display stars\n                    for ($i = 1; $i <= 5; $i++) {\n                        if ($i <= $review['rating']) {\n                            echo \"\u2605\";\n                        } else {\n                            echo \"\u2606\";\n                        }\n                    }\n                ?>\n                \n                <p><?php echo $review['comment']; ?></p>\n                <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>\n            </div>\n        <?php } ?>\n\n    </div>\n\n</body>\n</html>\n```\n\nThis code includes:\n\n1. Database connection setup\n2. Functions to:\n   - Submit a new review\n   - Get all reviews for a product\n   - Get the average rating for a product\n\n3. HTML form to submit reviews\n4. Display of reviews with ratings and comments\n\nFeatures:\n- Users can rate products from 1 to 5 stars\n- Reviews are stored in the database with user information\n- Each review displays the username, rating, comment, and date\n- Shows average rating for all reviews\n- Prevents users from submitting multiple reviews for the same product\n- Includes basic HTML/CSS styling\n\nTo use this code:\n\n1. Create a MySQL database named `reviews_db`\n2. Create tables for `users`, `products`, and `reviews` with appropriate fields\n3. Update the database connection details in the code\n4. Ensure users are logged in before submitting reviews (session-based)\n5. Display this review system on your product pages\n\nNote: This is a basic implementation. You might want to add more features like:\n- Validation for inputs\n- Error handling\n- Security measures (SQL injection prevention, XSS protection)\n- Pagination for long lists of reviews\n- Sorting options for reviews\n- Editing or deleting reviews\n\nRemember to replace the placeholder database credentials and adjust the code according to your specific needs.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n$conn = new mysqli($host, $username, $password, $database);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to submit a review\nfunction submit_review($user_id, $product_id, $rating, $comment) {\n    global $conn;\n    \n    // Check if user already submitted a review for this product\n    $check_query = \"SELECT id FROM reviews WHERE user_id = ? AND product_id = ?\";\n    $stmt = $conn->prepare($check_query);\n    $stmt->bind_param(\"ii\", $user_id, $product_id);\n    $stmt->execute();\n    \n    if ($stmt->fetch()) {\n        return false; // User already reviewed\n    }\n    \n    // Insert new review\n    $insert_query = \"INSERT INTO reviews (user_id, product_id, rating, comment, created_at) \n                    VALUES (?, ?, ?, ?, NOW())\";\n    $stmt = $conn->prepare($insert_query);\n    $stmt->bind_param(\"iisi\", $user_id, $product_id, $rating, $comment);\n    \n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get reviews for a product\nfunction get_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews for this product\n    $query = \"SELECT r.id, r.rating, r.comment, r.created_at, u.username \n             FROM reviews r \n             JOIN users u ON r.user_id = u.id \n             WHERE r.product_id = ?\n             ORDER BY r.created_at DESC\";\n             \n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    \n    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n}\n\n// Function to get average rating for a product\nfunction get_average_rating($product_id) {\n    global $conn;\n    \n    // Calculate average rating\n    $query = \"SELECT AVG(rating) as average \n             FROM reviews \n             WHERE product_id = ?\";\n             \n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    \n    $result = $stmt->get_result()->fetch_assoc();\n    return round($result['average'], 2); // Round to 2 decimal places\n}\n\n// Example usage:\n\n// Submit a new review\nif (isset($_POST['submit_review'])) {\n    $user_id = $_SESSION['user_id']; // Get logged-in user's ID\n    $product_id = $_GET['product_id'];\n    $rating = intval($_POST['rating']);\n    $comment = htmlspecialchars(trim($_POST['comment']));\n    \n    if ($rating >= 1 && $rating <= 5) {\n        if (submit_review($user_id, $product_id, $rating, $comment)) {\n            echo \"Review submitted successfully!\";\n        } else {\n            echo \"Error submitting review or you already reviewed this product.\";\n        }\n    } else {\n        echo \"Please select a valid rating between 1 and 5.\";\n    }\n}\n\n// Display reviews for a product\n$product_id = $_GET['product_id'];\n$reviews = get_reviews($product_id);\n$average_rating = get_average_rating($product_id);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .rating-stars {\n            display: inline-block;\n            color: gold;\n        }\n        .review-form {\n            margin-bottom: 20px;\n        }\n        .review-container {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin: 10px 0;\n        }\n    </style>\n</head>\n<body>\n    <h2>Product Reviews</h2>\n    \n    <!-- Review Form -->\n    <?php if (isset($_SESSION['user_id'])) { ?>\n        <form class=\"review-form\" method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n            \n            <div class=\"rating-stars\">\n                <input type=\"radio\" name=\"rating\" value=\"5\"> \u2605\u2605\u2605\u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"4\"> \u2605\u2605\u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"3\"> \u2605\u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"2\"> \u2605\u2605<br>\n                <input type=\"radio\" name=\"rating\" value=\"1\"> \u2605<br>\n            </div>\n            \n            <textarea name=\"comment\" placeholder=\"Write your review...\"></textarea><br>\n            \n            <button type=\"submit\" name=\"submit_review\">Submit Review</button>\n        </form>\n    <?php } else { ?>\n        <p>Please login to submit a review.</p>\n    <?php } ?>\n\n    <!-- Display Reviews -->\n    <div class=\"reviews-container\">\n        <h3>Average Rating: <?php echo $average_rating; ?> / 5</h3>\n        \n        <?php foreach ($reviews as $review) { ?>\n            <div class=\"review-container\">\n                <strong><?php echo $review['username']; ?></strong><br>\n                <?php \n                    // Display stars\n                    for ($i = 1; $i <= 5; $i++) {\n                        if ($i <= $review['rating']) {\n                            echo \"\u2605\";\n                        } else {\n                            echo \"\u2606\";\n                        }\n                    }\n                ?>\n                \n                <p><?php echo $review['comment']; ?></p>\n                <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>\n            </div>\n        <?php } ?>\n\n    </div>\n\n</body>\n</html>\n```"]}
