{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a simple user review system in PHP:\n```php\n<?php\n\n// assume we have the following database table for reviews\n// CREATE TABLE reviews (\n//   id INT PRIMARY KEY AUTO_INCREMENT,\n//   product_id INT,\n//   user_id INT,\n//   rating TINYINT,\n//   comment TEXT,\n//   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n// );\n\nclass Review {\n  private $id;\n  private $product_id;\n  private $user_id;\n  private $rating;\n  private $comment;\n\n  public function __construct($data) {\n    $this->id = $data['id'];\n    $this->product_id = $data['product_id'];\n    $this->user_id = $data['user_id'];\n    $this->rating = $data['rating'];\n    $this->comment = $data['comment'];\n  }\n\n  public function getId() { return $this->id; }\n  public function getProductId() { return $this->product_id; }\n  public function getUserId() { return $this->user_id; }\n  public function getRating() { return $this->rating; }\n  public function getComment() { return $this->comment; }\n\n  // calculate average rating for a product\n  public static function getAverageRating($productId) {\n    global $db;\n    $query = \"SELECT AVG(rating) AS average FROM reviews WHERE product_id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':product_id', $productId, PDO::PARAM_INT);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n  }\n\n  // create a new review\n  public static function createReview($data) {\n    global $db;\n    $query = \"INSERT INTO reviews (product_id, user_id, rating, comment)\n              VALUES (:product_id, :user_id, :rating, :comment)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_INT);\n    $stmt->bindParam(':comment', $data['comment'], PDO::PARAM_STR);\n    return $stmt->execute();\n  }\n\n  // update an existing review\n  public static function updateReview($reviewId, $data) {\n    global $db;\n    $query = \"UPDATE reviews SET product_id = :product_id, user_id = :user_id,\n                        rating = :rating, comment = :comment\n              WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_INT);\n    $stmt->bindParam(':comment', $data['comment'], PDO::PARAM_STR);\n    return $stmt->execute();\n  }\n\n  // delete a review\n  public static function deleteReview($reviewId) {\n    global $db;\n    $query = \"DELETE FROM reviews WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    return $stmt->execute();\n  }\n}\n\n// assume we have a database connection object called $db\n\nfunction getUserReviews($userId) {\n  global $db;\n  $query = \"SELECT * FROM reviews WHERE user_id = :user_id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':user_id', $userId, PDO::PARAM_INT);\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_CLASS, 'Review');\n}\n\nfunction getProductReviews($productId) {\n  global $db;\n  $query = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':product_id', $productId, PDO::PARAM_INT);\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_CLASS, 'Review');\n}\n\nfunction displayReviews() {\n  // get all reviews\n  global $db;\n  $query = \"SELECT * FROM reviews\";\n  $stmt = $db->prepare($query);\n  $stmt->execute();\n  $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n  // loop through each review and echo its details\n  foreach ($reviews as $review) {\n    echo 'Product: ' . $review['product_id'] . '<br>';\n    echo 'User: ' . $review['user_id'] . '<br>';\n    echo 'Rating: ' . $review['rating'] . '/5<br>';\n    echo 'Comment: ' . $review['comment'] . '<br><hr>';\n  }\n}\n\n?>\n```\nThis code defines a `Review` class with methods for creating, updating and deleting reviews. It also includes functions for retrieving user and product reviews.\n\nThe example above uses the PDO extension to interact with a database table named `reviews`. The review data is stored in an object called `$review`, which has properties for the product ID, user ID, rating and comment.\n\nNote: This code assumes you have a database connection object called `$db` that has been set up elsewhere.", "code_blocks": ["```php\n<?php\n\n// assume we have the following database table for reviews\n// CREATE TABLE reviews (\n//   id INT PRIMARY KEY AUTO_INCREMENT,\n//   product_id INT,\n//   user_id INT,\n//   rating TINYINT,\n//   comment TEXT,\n//   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n// );\n\nclass Review {\n  private $id;\n  private $product_id;\n  private $user_id;\n  private $rating;\n  private $comment;\n\n  public function __construct($data) {\n    $this->id = $data['id'];\n    $this->product_id = $data['product_id'];\n    $this->user_id = $data['user_id'];\n    $this->rating = $data['rating'];\n    $this->comment = $data['comment'];\n  }\n\n  public function getId() { return $this->id; }\n  public function getProductId() { return $this->product_id; }\n  public function getUserId() { return $this->user_id; }\n  public function getRating() { return $this->rating; }\n  public function getComment() { return $this->comment; }\n\n  // calculate average rating for a product\n  public static function getAverageRating($productId) {\n    global $db;\n    $query = \"SELECT AVG(rating) AS average FROM reviews WHERE product_id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':product_id', $productId, PDO::PARAM_INT);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n  }\n\n  // create a new review\n  public static function createReview($data) {\n    global $db;\n    $query = \"INSERT INTO reviews (product_id, user_id, rating, comment)\n              VALUES (:product_id, :user_id, :rating, :comment)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_INT);\n    $stmt->bindParam(':comment', $data['comment'], PDO::PARAM_STR);\n    return $stmt->execute();\n  }\n\n  // update an existing review\n  public static function updateReview($reviewId, $data) {\n    global $db;\n    $query = \"UPDATE reviews SET product_id = :product_id, user_id = :user_id,\n                        rating = :rating, comment = :comment\n              WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    $stmt->bindParam(':product_id', $data['product_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':user_id', $data['user_id'], PDO::PARAM_INT);\n    $stmt->bindParam(':rating', $data['rating'], PDO::PARAM_INT);\n    $stmt->bindParam(':comment', $data['comment'], PDO::PARAM_STR);\n    return $stmt->execute();\n  }\n\n  // delete a review\n  public static function deleteReview($reviewId) {\n    global $db;\n    $query = \"DELETE FROM reviews WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':id', $reviewId, PDO::PARAM_INT);\n    return $stmt->execute();\n  }\n}\n\n// assume we have a database connection object called $db\n\nfunction getUserReviews($userId) {\n  global $db;\n  $query = \"SELECT * FROM reviews WHERE user_id = :user_id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':user_id', $userId, PDO::PARAM_INT);\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_CLASS, 'Review');\n}\n\nfunction getProductReviews($productId) {\n  global $db;\n  $query = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':product_id', $productId, PDO::PARAM_INT);\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_CLASS, 'Review');\n}\n\nfunction displayReviews() {\n  // get all reviews\n  global $db;\n  $query = \"SELECT * FROM reviews\";\n  $stmt = $db->prepare($query);\n  $stmt->execute();\n  $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n  // loop through each review and echo its details\n  foreach ($reviews as $review) {\n    echo 'Product: ' . $review['product_id'] . '<br>';\n    echo 'User: ' . $review['user_id'] . '<br>';\n    echo 'Rating: ' . $review['rating'] . '/5<br>';\n    echo 'Comment: ' . $review['comment'] . '<br><hr>';\n  }\n}\n\n?>\n```"]}
