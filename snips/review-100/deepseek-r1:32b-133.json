{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, the user asked to create a user review function using PHP. I need to figure out what exactly they're looking for. They might be building a website that allows users to leave reviews on products or services. So, I should think about the essential features such a system would need.\n\nFirst, I'll outline the basic requirements: displaying reviews, allowing new submissions, editing existing ones, deleting reviews, and handling voting. These are common functionalities for a review system, so including them makes sense.\n\nNext, I'll consider the database structure. The reviews table should include fields like review_id, user_id, product_id, rating, comment, date_created, and last_updated. This setup allows tracking each review's details effectively.\n\nThen, I'll plan how to implement each feature. For displaying reviews, fetching data from the database and presenting it in a user-friendly format is key. Including stars for ratings can make it visually appealing.\n\nWhen handling new submissions, I need to ensure that only authenticated users can submit reviews. Sanitizing inputs is crucial to prevent SQL injection and XSS attacks. Inserting the review into the database after validation makes sense.\n\nFor editing, checking if the user is the author of the review before allowing changes is important for security. Updating both the comment and rating in the database ensures consistency.\n\nDeleting a review also requires checking the user's ownership to prevent unauthorized access. A soft delete using an 'active' flag might be better than a hard delete for data integrity, but I'll include both options with comments.\n\nVoting functionality adds engagement. Users can vote on reviews they find helpful. Storing each vote in a separate table helps track individual votes and prevent multiple voting from the same user.\n\nI should also include error handling and feedback messages to inform users of successful actions or errors. This improves user experience by making interactions more transparent.\n\nFinally, I'll provide an example usage section to demonstrate how these functions can be integrated into a web page. Including HTML elements shows how to structure the output and interact with the review system.\n\nThroughout this process, security is a top priority. Using prepared statements or parameterized queries would help prevent SQL injection, but in the examples provided, I used mysqli_real_escape_string for input sanitization. Encouraging the use of more secure methods like PDO or mysqli with prepared statements is important.\n\nOverall, the goal is to create a comprehensive yet flexible review system that can be adapted to different needs. By covering these aspects, the function should meet the user's requirements and provide a solid foundation for their project.\n</think>\n\nHere's an example of a user review function in PHP. This includes functions for displaying reviews, submitting new reviews, editing reviews, and deleting reviews:\n\n```php\n<?php\n// Database connection\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews WHERE product_id = $product_id ORDER BY date_created DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>Rating: \" . $row['rating'] . \"/5</h3>\";\n            echo \"<p>\" . htmlspecialchars($row['comment']) . \"</p>\";\n            echo \"<small>Posted by \" . $row['username'] . \" on \" . $row['date_created'] . \"</small><br>\";\n            \n            // Display edit and delete buttons for the author\n            if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $row['user_id']) {\n                echo \"<a href='edit_review.php?review_id=\" . $row['review_id'] . \"'>Edit</a> | \";\n                echo \"<a href='delete_review.php?review_id=\" . $row['review_id'] . \"'>Delete</a>\";\n            }\n            \n            // Display voting buttons\n            display_vote_buttons($row['review_id']);\n            \n            echo \"</div><hr>\";\n        }\n    } else {\n        echo \"No reviews found.\";\n    }\n}\n\n// Function to submit a new review\nfunction submit_review($product_id, $user_id, $rating, $comment) {\n    global $conn;\n    \n    // Sanitize input\n    $rating = intval($rating);\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    // Validate input\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose a number between 1 and 5.\";\n    }\n    \n    $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment, date_created)\n            VALUES ('$product_id', '$user_id', '$rating', '$comment', NOW())\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to edit an existing review\nfunction edit_review($review_id, $new_rating, $new_comment) {\n    global $conn;\n    \n    // Sanitize input\n    $review_id = intval($review_id);\n    $new_rating = intval($new_rating);\n    $new_comment = mysqli_real_escape_string($conn, htmlspecialchars($new_comment));\n    \n    // Validate input\n    if ($new_rating < 1 || $new_rating > 5) {\n        return \"Invalid rating. Please choose a number between 1 and 5.\";\n    }\n    \n    $sql = \"UPDATE reviews SET rating = '$new_rating', comment = '$new_comment', last_updated = NOW()\n            WHERE review_id = $review_id\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to delete a review\nfunction delete_review($review_id) {\n    global $conn;\n    \n    // Sanitize input\n    $review_id = intval($review_id);\n    \n    $sql = \"DELETE FROM reviews WHERE review_id = $review_id\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to display voting buttons\nfunction display_vote_buttons($review_id) {\n    global $conn;\n    \n    // Check if user has already voted for this review\n    if (isset($_SESSION['user_id'])) {\n        $sql = \"SELECT * FROM votes WHERE review_id = $review_id AND user_id = \" . $_SESSION['user_id'];\n        $result = mysqli_query($conn, $sql);\n        \n        if (mysqli_num_rows($result) > 0) {\n            // User has already voted\n            echo \"<small>Your vote: \";\n            while ($row = mysqli_fetch_assoc($result)) {\n                if ($row['vote'] == 1) {\n                    echo \"Helpful\";\n                } else {\n                    echo \"Not helpful\";\n                }\n            }\n            echo \"</small>\";\n        } else {\n            // Display voting buttons\n            echo \"<form method='post' action='submit_vote.php'>\";\n            echo \"<input type='hidden' name='review_id' value='\" . $review_id . \"'>\";\n            echo \"<button type='submit' name='vote' value='1'>Helpful</button>\";\n            echo \"<button type='submit' name='vote' value='-1'>Not helpful</button>\";\n            echo \"</form>\";\n        }\n    } else {\n        // User not logged in\n        echo \"<small><a href='login.php'>Log in</a> to vote.</small>\";\n    }\n}\n\n// Example usage:\nif (isset($_GET['product_id'])) {\n    display_reviews($_GET['product_id']);\n}\n?>\n```\n\nThis code provides the following features:\n\n1. Display reviews for a product\n2. Submit new reviews\n3. Edit existing reviews\n4. Delete reviews\n5. Vote on reviews as helpful or not helpful\n\nTo use this system, you'll need to:\n\n1. Create a database table for reviews and votes\n2. Set up user authentication\n3. Create the necessary pages (edit_review.php, delete_review.php, submit_vote.php)\n4. Implement error handling and security measures\n\nHere's an example of how you might create the tables in MySQL:\n\n```sql\n-- Reviews table\nCREATE TABLE reviews (\n    review_id INT AUTO_INCREMENT PRIMARY KEY,\n    product_id INT NOT NULL,\n    user_id INT NOT NULL,\n    rating INT NOT NULL,\n    comment TEXT NOT NULL,\n    date_created DATETIME DEFAULT CURRENT_TIMESTAMP,\n    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- Votes table\nCREATE TABLE votes (\n    vote_id INT AUTO_INCREMENT PRIMARY KEY,\n    review_id INT NOT NULL,\n    user_id INT NOT NULL,\n    vote TINYINT NOT NULL CHECK (vote IN (-1, 1)),\n    date_voted DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n```\n\nThis is a basic implementation and you might want to add additional features such as:\n\n- Review validation\n- Rating averages\n- More detailed error messages\n- Prevention of duplicate votes\n- Sorting reviews by helpfulness or rating\n- Pagination for large numbers of reviews\n\nRemember to implement proper security measures like input sanitization, SQL injection prevention, XSS protection, and CSRF protection in a production environment.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews WHERE product_id = $product_id ORDER BY date_created DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>Rating: \" . $row['rating'] . \"/5</h3>\";\n            echo \"<p>\" . htmlspecialchars($row['comment']) . \"</p>\";\n            echo \"<small>Posted by \" . $row['username'] . \" on \" . $row['date_created'] . \"</small><br>\";\n            \n            // Display edit and delete buttons for the author\n            if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $row['user_id']) {\n                echo \"<a href='edit_review.php?review_id=\" . $row['review_id'] . \"'>Edit</a> | \";\n                echo \"<a href='delete_review.php?review_id=\" . $row['review_id'] . \"'>Delete</a>\";\n            }\n            \n            // Display voting buttons\n            display_vote_buttons($row['review_id']);\n            \n            echo \"</div><hr>\";\n        }\n    } else {\n        echo \"No reviews found.\";\n    }\n}\n\n// Function to submit a new review\nfunction submit_review($product_id, $user_id, $rating, $comment) {\n    global $conn;\n    \n    // Sanitize input\n    $rating = intval($rating);\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    // Validate input\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose a number between 1 and 5.\";\n    }\n    \n    $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment, date_created)\n            VALUES ('$product_id', '$user_id', '$rating', '$comment', NOW())\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to edit an existing review\nfunction edit_review($review_id, $new_rating, $new_comment) {\n    global $conn;\n    \n    // Sanitize input\n    $review_id = intval($review_id);\n    $new_rating = intval($new_rating);\n    $new_comment = mysqli_real_escape_string($conn, htmlspecialchars($new_comment));\n    \n    // Validate input\n    if ($new_rating < 1 || $new_rating > 5) {\n        return \"Invalid rating. Please choose a number between 1 and 5.\";\n    }\n    \n    $sql = \"UPDATE reviews SET rating = '$new_rating', comment = '$new_comment', last_updated = NOW()\n            WHERE review_id = $review_id\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to delete a review\nfunction delete_review($review_id) {\n    global $conn;\n    \n    // Sanitize input\n    $review_id = intval($review_id);\n    \n    $sql = \"DELETE FROM reviews WHERE review_id = $review_id\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to display voting buttons\nfunction display_vote_buttons($review_id) {\n    global $conn;\n    \n    // Check if user has already voted for this review\n    if (isset($_SESSION['user_id'])) {\n        $sql = \"SELECT * FROM votes WHERE review_id = $review_id AND user_id = \" . $_SESSION['user_id'];\n        $result = mysqli_query($conn, $sql);\n        \n        if (mysqli_num_rows($result) > 0) {\n            // User has already voted\n            echo \"<small>Your vote: \";\n            while ($row = mysqli_fetch_assoc($result)) {\n                if ($row['vote'] == 1) {\n                    echo \"Helpful\";\n                } else {\n                    echo \"Not helpful\";\n                }\n            }\n            echo \"</small>\";\n        } else {\n            // Display voting buttons\n            echo \"<form method='post' action='submit_vote.php'>\";\n            echo \"<input type='hidden' name='review_id' value='\" . $review_id . \"'>\";\n            echo \"<button type='submit' name='vote' value='1'>Helpful</button>\";\n            echo \"<button type='submit' name='vote' value='-1'>Not helpful</button>\";\n            echo \"</form>\";\n        }\n    } else {\n        // User not logged in\n        echo \"<small><a href='login.php'>Log in</a> to vote.</small>\";\n    }\n}\n\n// Example usage:\nif (isset($_GET['product_id'])) {\n    display_reviews($_GET['product_id']);\n}\n?>\n```", null]}
