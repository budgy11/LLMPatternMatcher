{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function should allow users to submit their reviews and ratings. So, I'll need an HTML form with fields for name, email, rating, and comments. That makes sense because it's common to collect these details.\n\nNext, after submitting the review, the data needs to be saved somewhere. Using a MySQL database seems appropriate here. I should create a table to store each review, including the user's name, email, rating, comment, and a timestamp for when it was submitted.\n\nI also need to validate the input to prevent any issues. For example, checking that all required fields are filled out, ensuring the rating is a number between 1 and 5, and validating the email format. This will help maintain data integrity and security.\n\nOnce the review is saved, displaying them on a webpage would be useful. So I'll write a function to retrieve reviews from the database, maybe ordered by the most recent first. Then, loop through each review to display it in an HTML structure, like a div with user details and their comment.\n\nI should also consider displaying the average rating. This can be calculated by summing all ratings and dividing by the number of reviews. Formatting it to one decimal place would make it look cleaner.\n\nSecurity is important, so I'll include prepared statements using mysqli to prevent SQL injection attacks. Also, sanitizing inputs will help avoid XSS vulnerabilities.\n\nPutting it all together, I'll structure the code into functions: one for saving the review and another for displaying them. The display function can also show the average rating at the top.\n\nI think that covers the main points. Now, let me outline the steps to implement each part, ensuring that each function is properly handling errors and providing feedback, like success messages when a review is submitted.\n</think>\n\nHere's an example of how you can create a user review system using PHP:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to save review\nfunction saveReview($name, $email, $rating, $comment, $conn) {\n    // Validate input\n    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {\n        return false;\n    }\n\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return false;\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return false;\n    }\n\n    // Sanitize input\n    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));\n    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n    // Insert into database\n    $query = \"INSERT INTO reviews (name, email, rating, comment, review_date) \n              VALUES (?, ?, ?, ?, NOW())\";\n\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"ssds\", $name, $email, $rating, $comment);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to display reviews\nfunction displayReviews($conn) {\n    $query = \"SELECT name, rating, comment, review_date FROM reviews ORDER BY review_date DESC\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['name'] . \"</h3>\";\n            echo \"<p>Rating: \" . $row['rating'] . \"/5</p>\";\n            echo \"<p>\" . $row['comment'] . \"</p>\";\n            echo \"<small>\" . date('Y-m-d H:i', strtotime($row['review_date'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews yet.\";\n    }\n\n    // Calculate and display average rating\n    $avgQuery = \"SELECT AVG(rating) AS avg_rating FROM reviews\";\n    $avgResult = $conn->query($avgQuery);\n    $row = $avgResult->fetch_assoc();\n    \n    if ($row['avg_rating'] != null) {\n        echo \"<div class='average-rating'>\";\n        echo \"Average Rating: \" . number_format($row['avg_rating'], 1, '.', '') . \"/5\";\n        echo \"</div>\";\n    }\n}\n\n// Close database connection\n$conn->close();\n?>\n```\n\nThis example includes:\n\n1. Database Connection:\n   - Establishes a connection to the MySQL database\n\n2. `saveReview()` Function:\n   - Validates and sanitizes input data\n   - Insert new reviews into the database table\n\n3. `displayReviews()` Function:\n   - Retrieves all reviews from the database\n   - Displays them in a formatted manner\n   - Shows the average rating at the bottom\n\nTo use this code:\n\n1. Create a MySQL database named 'reviews' and a table named 'reviews' with these columns:\n   ```sql\n   CREATE TABLE reviews (\n       id INT AUTO_INCREMENT PRIMARY KEY,\n       name VARCHAR(255),\n       email VARCHAR(255),\n       rating INT,\n       comment TEXT,\n       review_date TIMESTAMP\n   );\n   ```\n\n2. Create an HTML form to collect user reviews:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Review System</title>\n    <style>\n        .review {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 10px 0;\n            background-color: #f9f9f9;\n        }\n        .average-rating {\n            font-weight: bold;\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Review System</h1>\n\n    <?php\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        $name = $_POST['name'];\n        $email = $_POST['email'];\n        $rating = $_POST['rating'];\n        $comment = $_POST['comment'];\n\n        require 'review_functions.php';\n\n        if (saveReview($name, $email, $rating, $comment, $conn)) {\n            echo \"<div>Thank you for your review!</div>\";\n        } else {\n            echo \"<div>Error saving review. Please try again.</div>\";\n        }\n    }\n    ?>\n\n    <h2>Write a Review</h2>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <label>Name:</label><br>\n        <input type=\"text\" name=\"name\" required><br>\n\n        <label>Email:</label><br>\n        <input type=\"email\" name=\"email\" required><br>\n\n        <label>Rating (1-5):</label><br>\n        <input type=\"number\" name=\"rating\" min=\"1\" max=\"5\" required><br>\n\n        <label>Comment:</label><br>\n        <textarea name=\"comment\" rows=\"4\" cols=\"50\" required></textarea><br>\n\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <h2>Reviews</h2>\n    <?php\n    require 'review_functions.php';\n    displayReviews($conn);\n    ?>\n\n</body>\n</html>\n```\n\n3. Save both files (`review_functions.php` and the HTML file) in your web server's document root\n\nFeatures of this review system:\n\n- Input validation\n- SQL injection prevention using prepared statements\n- XSS protection through sanitization\n- Display of all reviews with timestamps\n- Average rating calculation\n- Responsive design\n- Easy to customize styling\n\nTo improve this further, you could add features like:\n\n1. User authentication\n2. Review editing and deletion\n3. Rating visualization (e.g., stars)\n4. Pagination for many reviews\n5. Sorting options (by date, rating, etc.)\n6. Report review functionality\n7. Moderation system\n\nRemember to:\n- Keep your database credentials secure\n- Use proper error handling\n- Regularly backup your database\n- Apply security best practices\n- Validate and sanitize all user input\n- Use HTTPS for production environments", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to save review\nfunction saveReview($name, $email, $rating, $comment, $conn) {\n    // Validate input\n    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {\n        return false;\n    }\n\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return false;\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return false;\n    }\n\n    // Sanitize input\n    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));\n    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n    // Insert into database\n    $query = \"INSERT INTO reviews (name, email, rating, comment, review_date) \n              VALUES (?, ?, ?, ?, NOW())\";\n\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"ssds\", $name, $email, $rating, $comment);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to display reviews\nfunction displayReviews($conn) {\n    $query = \"SELECT name, rating, comment, review_date FROM reviews ORDER BY review_date DESC\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['name'] . \"</h3>\";\n            echo \"<p>Rating: \" . $row['rating'] . \"/5</p>\";\n            echo \"<p>\" . $row['comment'] . \"</p>\";\n            echo \"<small>\" . date('Y-m-d H:i', strtotime($row['review_date'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews yet.\";\n    }\n\n    // Calculate and display average rating\n    $avgQuery = \"SELECT AVG(rating) AS avg_rating FROM reviews\";\n    $avgResult = $conn->query($avgQuery);\n    $row = $avgResult->fetch_assoc();\n    \n    if ($row['avg_rating'] != null) {\n        echo \"<div class='average-rating'>\";\n        echo \"Average Rating: \" . number_format($row['avg_rating'], 1, '.', '') . \"/5\";\n        echo \"</div>\";\n    }\n}\n\n// Close database connection\n$conn->close();\n?>\n```", null]}
