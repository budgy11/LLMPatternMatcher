{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, the user asked to create a user review function using PHP. I need to figure out what exactly they're looking for. Probably, they want a way for users to leave reviews on their website. So, I should break this down into manageable steps.\n\nFirst, I'll consider the necessary components. They'll need an HTML form for inputting the review and rating. Then, a PHP script to handle the submission, validate the input, and store it in a database. Also, they'll need to display these reviews somewhere, so another PHP function for that.\n\nI should start by outlining the structure. The form will have fields for the user's name, email, their review text, and a rating system, maybe using radio buttons for 1 to 5 stars. That makes it user-friendly.\n\nNext, the PHP submission function. It needs to connect to a database, probably MySQL. I'll use mysqli for that. The function should check if all required fields are filled and ensure the rating is within 1-5. Sanitizing inputs is crucial to prevent SQL injection and XSS attacks, so I'll use mysqli_real_escape_string.\n\nThen, inserting the data into the database. I'll create a table called reviews with columns for id, product_id (assuming it's for a specific product), author, email, review_text, rating, and timestamp. The timestamp can be set with NOW() in MySQL to automatically record when the review was submitted.\n\nAfter submission, redirecting back to the product page makes sense, so the user doesn't resubmit by refreshing. I'll include some error handling using HTTP headers for redirects.\n\nNow, displaying the reviews. Another function that fetches all reviews for a given product_id. It should calculate the average rating and display each review with author name, rating stars, text, and date. I'll format the date to be readable.\n\nFor the stars, I'll create a helper function that generates HTML stars based on the rating. This makes it easy to visualize at a glance.\n\nI also need to consider security aspects like preventing SQL injection through prepared statements or escaping strings, which I've included. Additionally, checking for empty fields ensures data integrity.\n\nPutting it all together, I'll write the code snippets with clear explanations so the user can understand each part. I should mention that they might need to adjust the database connection details and product_id handling based on their specific setup.\n\nFinally, I'll outline how to use these functions in their application, ensuring smooth integration. Testing each part separately would help catch any issues early on.\n</think>\n\nHere's an example of a user review system using PHP:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to submit a review\nfunction submitReview($productId, $author, $email, $reviewText, $rating, $conn) {\n    // Sanitize inputs\n    $author = mysqli_real_escape_string($conn, $author);\n    $email = mysqli_real_escape_string($conn, $email);\n    $reviewText = mysqli_real_escape_string($conn, $reviewText);\n    \n    // Check if rating is valid\n    if (!ctype_digit((string)$rating) || $rating < 1 || $rating > 5) {\n        die(\"Invalid rating\");\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, author, email, review_text, rating, timestamp)\n            VALUES ('$productId', '$author', '$email', '$reviewText', '$rating', NOW())\";\n            \n    if (mysqli_query($conn, $sql)) {\n        header(\"Location: product.php?id=$productId\");\n        exit();\n    } else {\n        echo \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Function to display reviews\nfunction displayReviews($productId, $conn) {\n    $sql = \"SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        // Calculate average rating\n        $averageRatingSql = \"SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$productId'\";\n        $averageRatingResult = mysqli_query($conn, $averageRatingSql);\n        $averageRatingRow = mysqli_fetch_assoc($averageRatingResult);\n        $averageRating = number_format((float)$averageRatingRow['average_rating'], 1, '.', '');\n        \n        echo \"<div class='reviews'>\";\n        echo \"<h2>Customer Reviews</h2>\";\n        echo \"<p>Average Rating: $averageRating/5</p>\";\n        \n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<div class='review-author'>\" . $row['author'] . \"</div>\";\n            echo \"<div class='review-rating'>\";\n            displayStars($row['rating']);\n            echo \"</div>\";\n            echo \"<div class='review-text'>\" . nl2br($row['review_text']) . \"</div>\";\n            echo \"<div class='review-date'>\" . date('F j, Y g:i a', strtotime($row['timestamp'])) . \"</div>\";\n            echo \"</div>\";\n        }\n        \n        echo \"</div>\";\n    } else {\n        echo \"No reviews yet. Be the first to review this product!\";\n    }\n}\n\n// Function to display rating stars\nfunction displayStars($rating) {\n    $fullStars = floor($rating);\n    $halfStar = ($rating - $fullStars) >= 0.5 ? 1 : 0;\n    \n    for ($i = 0; $i < $fullStars; $i++) {\n        echo \"<span class='star'>\u2605</span>\";\n    }\n    \n    if ($halfStar) {\n        echo \"<span class='star half'>\u2be8</span>\";\n    }\n    \n    for ($i = $fullStars + $halfStar; $i < 5; $i++) {\n        echo \"<span class='star empty'>\u2606</span>\";\n    }\n}\n\n// Example usage:\n// submitReview(1, \"John Doe\", \"john@example.com\", \"Great product!\", 5, $conn);\n// displayReviews(1, $conn);\n\nmysqli_close($conn);\n?>\n```\n\nThis code provides:\n\n1. A `submitReview()` function to handle review submissions\n2. A `displayReviews()` function to show all reviews for a product\n3. A helper function `displayStars()` to visualize ratings as stars\n\nFeatures:\n- Input validation and sanitization\n- Average rating calculation\n- Timestamp tracking\n- User-friendly star display\n- SQL injection prevention\n\nTo use this system:\n\n1. Create a database table named `reviews` with the following columns:\n   - id (INT, AUTO_INCREMENT)\n   - product_id (INT)\n   - author (VARCHAR)\n   - email (VARCHAR)\n   - review_text (TEXT)\n   - rating (FLOAT)\n   - timestamp (DATETIME)\n\n2. Update the database configuration in the code\n\n3. Use the following HTML form to collect reviews:\n\n```html\n<form action=\"submit_review.php\" method=\"post\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $productId; ?>\">\n    \n    <div>\n        <label for=\"author\">Name:</label>\n        <input type=\"text\" id=\"author\" name=\"author\" required>\n    </div>\n\n    <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required>\n    </div>\n\n    <div>\n        <label for=\"review-text\">Review:</label>\n        <textarea id=\"review-text\" name=\"review_text\" rows=\"5\" required></textarea>\n    </div>\n\n    <div>\n        <label>Rating:</label>\n        <input type=\"radio\" name=\"rating\" value=\"1\"> 1\n        <input type=\"radio\" name=\"rating\" value=\"2\"> 2\n        <input type=\"radio\" name=\"rating\" value=\"3\"> 3\n        <input type=\"radio\" name=\"rating\" value=\"4\"> 4\n        <input type=\"radio\" name=\"rating\" value=\"5\" checked> 5\n    </div>\n\n    <button type=\"submit\">Submit Review</button>\n</form>\n```\n\n3. In your product page, include the `displayReviews()` function to show all reviews for that product\n\nThis system can be customized further by:\n- Adding CSS styles for better presentation\n- Implementing user authentication\n- Adding review editing/deletion capabilities\n- Including a moderation system\n- Adding more fields (e.g., helpfulness votes)\n\nRemember to adjust the database connection details and implement proper error handling for your specific use case.", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to submit a review\nfunction submitReview($productId, $author, $email, $reviewText, $rating, $conn) {\n    // Sanitize inputs\n    $author = mysqli_real_escape_string($conn, $author);\n    $email = mysqli_real_escape_string($conn, $email);\n    $reviewText = mysqli_real_escape_string($conn, $reviewText);\n    \n    // Check if rating is valid\n    if (!ctype_digit((string)$rating) || $rating < 1 || $rating > 5) {\n        die(\"Invalid rating\");\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, author, email, review_text, rating, timestamp)\n            VALUES ('$productId', '$author', '$email', '$reviewText', '$rating', NOW())\";\n            \n    if (mysqli_query($conn, $sql)) {\n        header(\"Location: product.php?id=$productId\");\n        exit();\n    } else {\n        echo \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Function to display reviews\nfunction displayReviews($productId, $conn) {\n    $sql = \"SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        // Calculate average rating\n        $averageRatingSql = \"SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$productId'\";\n        $averageRatingResult = mysqli_query($conn, $averageRatingSql);\n        $averageRatingRow = mysqli_fetch_assoc($averageRatingResult);\n        $averageRating = number_format((float)$averageRatingRow['average_rating'], 1, '.', '');\n        \n        echo \"<div class='reviews'>\";\n        echo \"<h2>Customer Reviews</h2>\";\n        echo \"<p>Average Rating: $averageRating/5</p>\";\n        \n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<div class='review-author'>\" . $row['author'] . \"</div>\";\n            echo \"<div class='review-rating'>\";\n            displayStars($row['rating']);\n            echo \"</div>\";\n            echo \"<div class='review-text'>\" . nl2br($row['review_text']) . \"</div>\";\n            echo \"<div class='review-date'>\" . date('F j, Y g:i a', strtotime($row['timestamp'])) . \"</div>\";\n            echo \"</div>\";\n        }\n        \n        echo \"</div>\";\n    } else {\n        echo \"No reviews yet. Be the first to review this product!\";\n    }\n}\n\n// Function to display rating stars\nfunction displayStars($rating) {\n    $fullStars = floor($rating);\n    $halfStar = ($rating - $fullStars) >= 0.5 ? 1 : 0;\n    \n    for ($i = 0; $i < $fullStars; $i++) {\n        echo \"<span class='star'>\u2605</span>\";\n    }\n    \n    if ($halfStar) {\n        echo \"<span class='star half'>\u2be8</span>\";\n    }\n    \n    for ($i = $fullStars + $halfStar; $i < 5; $i++) {\n        echo \"<span class='star empty'>\u2606</span>\";\n    }\n}\n\n// Example usage:\n// submitReview(1, \"John Doe\", \"john@example.com\", \"Great product!\", 5, $conn);\n// displayReviews(1, $conn);\n\nmysqli_close($conn);\n?>\n```", null]}
