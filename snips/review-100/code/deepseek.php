
<?php
// Connect to database
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'reviews_db';

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<div class='rating'>Rating: " . $row['rating'] . " stars</div>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<div class='no-reviews'>No reviews available.</div>";
    }
}

// Function to add a new review
function addReview($userName, $reviewText, $rating) {
    global $conn;
    
    // Sanitize inputs
    $userName = htmlspecialchars(trim($userName));
    $reviewText = htmlspecialchars(trim($reviewText));
    $rating = intval($rating);
    
    if ($userName == "" || $reviewText == "") {
        return "Please fill in all required fields.";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating, timestamp)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $userName, $reviewText, $rating);
    
    if ($stmt->execute()) {
        return "Review added successfully!";
    } else {
        return "Error adding review: " . $conn->error;
    }
}

// Function to calculate average rating
function getAverageRating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        return round($row['average'], 1); // Round to one decimal place
    }
    
    return 0;
}

// Close database connection
$conn->close();
?>


<?php
include 'review_functions.php';

$reviewStatus = addReview($_POST['user_name'], $_POST['review_text'], $_POST['rating']);

if ($reviewStatus == "Review added successfully!") {
    header("Location: reviews_page.php"); // Redirect back to reviews page
} else {
    echo $reviewStatus;
}
?>


<?php include 'review_functions.php'; ?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .rating {
            color: #ff9f00;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h2>Product Reviews</h2>
    
    <!-- Average Rating -->
    <div class="average-rating">
        <span>Average Rating:</span>
        <?php 
        $avgRating = getAverageRating();
        echo "<span class='rating'>$avgRating stars</span>";
        ?>
    </div>

    <!-- Review Form -->
    <?php include 'review_form.html'; ?>

    <!-- Display Reviews -->
    <?php displayReviews(); ?>
</body>
</html>


<?php
// Function to create user review
function create_user_review($user_id, $product_id, $rating, $review) {
    // Database connection parameters
    $db_host = 'localhost';
    $db_name = 'your_database_name';
    $db_username = 'your_username';
    $db_password = 'your_password';

    // Connect to the database
    $mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check for connection errors
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    // Sanitize inputs
    $user_id = $mysqli->real_escape_string($user_id);
    $product_id = $mysqli->real_escape_string($product_id);
    $rating = intval($rating);
    $review = $mysqli->real_escape_string($review);

    // Validate input
    if ($rating < 1 || $rating > 5) {
        $mysqli->close();
        return false;
    }

    if (strlen($review) == 0) {
        $mysqli->close();
        return false;
    }

    // Insert review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review, created_at, updated_at)
            VALUES (?, ?, ?, ?, NOW(), NOW())";

    $stmt = $mysqli->prepare($sql);
    if (!$stmt) {
        die("Prepare failed: " . $mysqli->error);
    }

    // Bind parameters
    $stmt->bind_param("iiss", $user_id, $product_id, $rating, $review);

    // Execute the statement
    if ($stmt->execute()) {
        // Get the last inserted ID
        $last_id = $stmt->insert_id;
        $stmt->close();
        $mysqli->close();

        return array(
            'status' => true,
            'message' => 'Review created successfully',
            'review_id' => $last_id
        );
    } else {
        // Return error if failed
        return array(
            'status' => false,
            'message' => 'Error creating review: ' . $stmt->error
        );
    }
}
?>


// Example usage:
$user_id = 1; // Replace with actual user ID
$product_id = 5; // Replace with actual product ID
$rating = 4;
$review_text = "This is a great product!";

$result = create_user_review($user_id, $product_id, $rating, $review_text);

if ($result['status']) {
    echo "Review created successfully. Review ID: " . $result['review_id'];
} else {
    echo "Error creating review: " . $result['message'];
}


<?php
function displayUserReviews($connection, $limit = 5, $sort_by = 'date') {
    // This function displays user reviews with ratings and comments
    // Parameters:
    // - $connection: Database connection object
    // - $limit: Number of reviews to display (default is 5)
    // - $sort_by: Sort by 'date' or 'rating' (default is 'date')

    // Create a helper function to display stars
    $displayStars = function($rating) {
        $stars = '';
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                $stars .= '<span class="star filled">★</span>';
            } else {
                $stars .= '<span class="star empty">☆</span>';
            }
        }
        return $stars;
    };

    // SQL query to fetch reviews
    switch($sort_by) {
        case 'rating':
            $sql = "SELECT * FROM reviews ORDER BY rating DESC LIMIT ?";
            break;
        default:
            $sql = "SELECT * FROM reviews ORDER BY review_date DESC LIMIT ?";
    }

    try {
        // Prepare and execute the query
        $stmt = $connection->prepare($sql);
        $stmt->bind_param("i", $limit);
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo '<div class="reviews-container">';
            
            while ($row = $result->fetch_assoc()) {
                echo '<div class="review-item">';
                    // Display user information
                    echo '<div class="user-info">';
                        echo '<span class="username">'.$row['username'].'</span>';
                        echo '<span class="rating">'.$displayStars($row['rating']).'</span>';
                    echo '</div>';
                    
                    // Display review content
                    echo '<div class="review-content">';
                        echo '<p>'.$row['comment'].'</p>';
                        echo '<small class="date">'.date('F j, Y', $row['review_date']).'</small>';
                    echo '</div>';
                echo '</div>';
            }
            
            echo '</div>';
        } else {
            echo 'No reviews available.';
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


$connection = new mysqli('localhost', 'username', 'password', 'database_name');
if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}


// Display 5 most recent reviews
displayUserReviews($connection);

// Display 10 highest-rated reviews sorted by rating
displayUserReviews($connection, 10, 'rating');


<?php
// Database configuration
$host = 'localhost';
$dbname = 'review_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($user_name, $email, $rating, $comments, $conn) {
    // Validate input
    if(empty($user_name) || empty($email) || empty($rating)) {
        return "Please fill in all required fields!";
    }

    // Check email format
    if(!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, email, rating, comments, review_date) 
                              VALUES (:user_name, :email, :rating, :comments, NOW())");
        
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comments', $comments);

        $stmt->execute();

        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        // Get all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if(empty($reviews)) {
            echo "<p>No reviews available.</p>";
            return;
        }

        // Display reviews in a table
        echo "<table border='1' cellpadding='5'>";
        echo "<tr><th>Name</th><th>Email</th><th>Rating</th><th>Comments</th><th>Date</th></tr>";

        foreach ($reviews as $review) {
            echo "<tr>";
            echo "<td>" . htmlspecialchars($review['user_name']) . "</td>";
            echo "<td>" . htmlspecialchars($review['email']) . "</td>";
            echo "<td>" . htmlspecialchars($review['rating']) . "/5</td>";
            echo "<td>" . nl2br(htmlspecialchars($review['comments'])) . "</td>";
            echo "<td>" . date('Y-m-d H:i', strtotime($review['review_date'])) . "</td>";
            echo "</tr>";
        }

        echo "</table>";
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Check if form is submitted
if(isset($_POST['submit'])) {
    // Call submitReview function with the input values
    $result = submitReview($_POST['user_name'], $_POST['email'], $_POST['rating'], $_POST['comments'], $conn);
    echo $result;
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .review-form input, .review-form textarea { width: 100%; margin: 5px 0; padding: 8px; }
        .review-form select { width: 200px; padding: 8px; }
        table { margin-top: 20px; border-collapse: collapse; }
        th, td { padding: 10px; text-align: left; }
    </style>
</head>
<body>

<h1>Product Review System</h1>

<div class="review-form">
    <form method="post" action="">
        <input type="text" name="user_name" placeholder="Enter your name" required><br>
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>
        <textarea name="comments" placeholder="Write your review..." rows="4" required></textarea><br>
        <input type="submit" name="submit" value="Submit Review">
    </form>
</div>

<?php displayReviews($conn); ?>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review = mysqli_real_escape_string($conn, $_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate input
        if (empty($name) || empty($review)) {
            return "Please fill in all required fields!";
        }

        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5 stars!";
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, review_text, rating, submission_date)
                VALUES ('$name', '$review', '$rating', NOW())";

        if (mysqli_query($conn, $sql)) {
            return "Thank you for submitting your review!";
        } else {
            return "Error submitting review: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $name = $row['name'];
            $review_text = $row['review_text'];
            $rating = $row['rating'];
            $submission_date = date('F j, Y g:i a', strtotime($row['submission_date']));

            // Display each review
            echo "<div class='review'>";
            echo "<h3>$name</h3>";
            echo "<p>Rating: $rating stars</p>";
            echo "<p>$review_text</p>";
            echo "<small>Submitted on: $submission_date</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// review.php - A simple user review system

session_start();

// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if user is authenticated (logged in)
    if (!isset($_SESSION['user_id'])) {
        die("Please login to post a review.");
    }

    // Sanitize input data
    $name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['name']));
    $comment = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['comment']));

    if (empty($name) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, name, comment, post_date)
            VALUES ('".$_SESSION['user_id']."', '$name', '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        echo "<script>alert('Review submitted successfully!');</script>";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Fetch and display existing reviews
$sql = "SELECT name, comment, post_date FROM reviews ORDER BY post_date DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>".$row['name']."</h3>";
        echo "<p>".$row['comment']."</p>";
        echo "<small>Posted on: ".$row['post_date']."</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet!";
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
            background-color: #f9f9f9;
        }
        .review h3 {
            margin-top: 0;
            color: #333;
        }
        .review p {
            line-height: 1.6;
            color: #666;
        }
        .review small {
            color: #999;
            font-size: 0.8em;
        }
    </style>
</head>
<body>

<?php if (isset($_SESSION['user_id'])) { ?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="name" placeholder="Your Name" required><br><br>
    <textarea name="comment" placeholder="Write your review here..." rows="4" required></textarea><br><br>
    <button type="submit">Submit Review</button>
</form>
<?php } else { ?>
<p>Please login to post a review.</p>
<?php } ?>

</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$db_name = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display all reviews
function displayReviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r 
                                JOIN users u ON r.user_id = u.id 
                                WHERE product_id = :product_id 
                                ORDER BY review_date DESC");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Calculate average rating
        $average_rating = 0;
        $total_ratings = count($reviews);
        
        foreach ($reviews as $review) {
            $average_rating += $review['rating'];
        }
        
        if ($total_ratings > 0) {
            $average_rating /= $total_ratings;
        } else {
            $average_rating = 0;
        }
        
        echo "<div class='average-rating'>";
        echo "Average Rating: " . number_format($average_rating, 1) . "/5";
        echo "</div>";
        
        foreach ($reviews as $review) {
            $stars_html = getStarsHTML($review['rating']);
            
            echo "<div class='review'>";
            echo "<h3>Reviewed by " . htmlspecialchars($review['username']) . "</h3>";
            echo "<div class='stars'>$stars_html</div>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted on: " . $review['review_date'] . "</small><br>";
            
            // Show edit button if user is logged in
            if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $review['user_id']) {
                echo "<a href='edit_review.php?review_id=" . $review['id'] . "' class='edit-btn'>Edit Review</a>";
            }
            
            echo "</div>";
        }
        
    } catch (PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Function to add a new review
function addReview($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    try {
        // Validate input
        if (empty($product_id) || empty($user_id) || empty($rating) || empty($comment)) {
            throw new Exception("All fields are required");
        }
        
        $stmt = $conn->prepare("INSERT INTO reviews SET 
                                product_id = :product_id,
                                user_id = :user_id,
                                rating = :rating,
                                comment = :comment,
                                review_date = NOW()");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            header("Location: reviews.php?product_id=$product_id");
            exit();
        }
        
    } catch (PDOException $e) {
        die("Error adding review: " . $e->getMessage());
    }
}

// Function to edit a review
function getReviewById($review_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE id = :review_id");
        $stmt->bindParam(':review_id', $review_id);
        $stmt->execute();
        
        if ($stmt->rowCount() == 1) {
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } else {
            throw new Exception("Review not found");
        }
    } catch (PDOException $e) {
        die("Error fetching review: " . $e->getMessage());
    }
}

// Function to update edited review
function updateReview($review_id, $rating, $comment) {
    global $conn;
    
    try {
        // Validate input
        if (empty($rating) || empty($comment)) {
            throw new Exception("All fields are required");
        }
        
        $stmt = $conn->prepare("UPDATE reviews SET 
                                rating = :rating,
                                comment = :comment
                              WHERE id = :review_id");
        
        $stmt->bindParam(':review_id', $review_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            header("Location: reviews.php?product_id=$_GET[product_id]");
            exit();
        }
    } catch (PDOException $e) {
        die("Error updating review: " . $e->getMessage());
    }
}

// Function to delete a review
function deleteReview($review_id, $user_id) {
    global $conn;
    
    try {
        // Verify user ownership of the review
        if ($user_id != $_SESSION['user_id']) {
            throw new Exception("You are not authorized to delete this review");
        }
        
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id = :review_id");
        $stmt->bindParam(':review_id', $review_id);
        
        if ($stmt->execute()) {
            header("Location: reviews.php?product_id=$_GET[product_id]");
            exit();
        }
    } catch (PDOException $e) {
        die("Error deleting review: " . $e->getMessage());
    }
}

// Helper function to display stars
function getStarsHTML($rating) {
    $stars = '';
    
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= '<span class="star filled">★</span>';
        } else {
            $stars .= '<span class="star empty">☆</span>';
        }
    }
    
    return $stars;
}

// Close database connection
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                r.id,
                u.username AS author,
                r.content,
                r.rating,
                r.created_at,
                r.updated_at
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE r.product_id = ?
            ORDER BY r.created_at DESC
        ");
        
        $stmt->execute([$productId]);
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            echo "<p>No reviews yet. Be the first to review this product!</p>";
            return;
        }
        
        foreach ($reviews as $review) {
            $date = $review['updated_at'] ? $review['updated_at'] : $review['created_at'];
            $displayDate = date('M j, Y', strtotime($date));
            
            echo "<div class='review'>";
                echo "<div class='author'> Reviewed by " . htmlspecialchars($review['author']) . "</div>";
                echo "<div class='content'>" . nl2br(htmlspecialchars($review['content'])) . "</div>";
                echo "<div class='rating'>";
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $review['rating']) {
                            echo "<span class='star'>★</span>";
                        } else {
                            echo "<span class='star'>☆</span>";
                        }
                    }
                echo "</div>";
                echo "<div class='date'>" . $displayDate . "</div>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Function to add a new review
function addReview($productId, $userId, $content, $rating) {
    global $conn;
    
    try {
        // Check if user has already reviewed this product
        $checkStmt = $conn->prepare("
            SELECT id FROM reviews 
            WHERE product_id = ? AND user_id = ?
        ");
        $checkStmt->execute([$productId, $userId]);
        
        if ($checkStmt->rowCount() > 0) {
            return false; // User already reviewed this product
        }
        
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            SET 
                product_id = ?,
                user_id = ?,
                content = ?,
                rating = ?,
                created_at = NOW(),
                updated_at = NOW()
        ");
        
        return $stmt->execute([$productId, $userId, htmlspecialchars($content), $rating]);
    } catch(PDOException $e) {
        die("Error adding review: " . $e->getMessage());
    }
}

// Function to edit a review
function editReview($reviewId, $content, $rating) {
    global $conn;
    
    try {
        // Check if the review exists and belongs to the current user
        $checkStmt = $conn->prepare("
            SELECT id FROM reviews 
            WHERE id = ? AND user_id = ?
        ");
        $checkStmt->execute([$reviewId, $_SESSION['user_id']]);
        
        if ($checkStmt->rowCount() == 0) {
            return false; // Review not found or unauthorized
        }
        
        $stmt = $conn->prepare("
            UPDATE reviews 
            SET 
                content = ?,
                rating = ?,
                updated_at = NOW()
            WHERE id = ?
        ");
        
        return $stmt->execute([htmlspecialchars($content), $rating, $reviewId]);
    } catch(PDOException $e) {
        die("Error editing review: " . $e->getMessage());
    }
}

// Function to delete a review
function deleteReview($reviewId) {
    global $conn;
    
    try {
        // Check if the review exists and belongs to the current user
        $checkStmt = $conn->prepare("
            SELECT id FROM reviews 
            WHERE id = ? AND user_id = ?
        ");
        $checkStmt->execute([$reviewId, $_SESSION['user_id']]);
        
        if ($checkStmt->rowCount() == 0) {
            return false; // Review not found or unauthorized
        }
        
        $stmt = $conn->prepare("
            DELETE FROM reviews 
            WHERE id = ?
        ");
        
        return $stmt->execute([$reviewId]);
    } catch(PDOException $e) {
        die("Error deleting review: " . $e->getMessage());
    }
}

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Create table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(100) NOT NULL,
    user_email VARCHAR(100) NOT NULL,
    rating INT NOT NULL,
    comment TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";
mysqli_query($conn, $sql);

// Function to handle review submission and display
function user_reviews() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        // Validate input
        $errors = array();
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            $errors[] = "All fields are required!";
        }

        if (!isset($rating) || $rating < 1 || $rating > 5) {
            $errors[] = "Please select a valid rating (1-5 stars)";
        }

        // If no errors, insert into database
        if (empty($errors)) {
            // Sanitize input
            $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
            $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
            $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

            // Insert review into database
            $sql = "INSERT INTO reviews (user_name, user_email, rating, comment) 
                    VALUES ('$name', '$email', '$rating', '$comment')";
            mysqli_query($conn, $sql);
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>" . $row['user_email'] . "</p>";
            echo display_rating($row['rating']);
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }

    // Display review form
    display_review_form();
}

// Function to display rating stars
function display_rating($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "<span class='star'>★</span>";
        } else {
            $stars .= "<span class='star'>☆</span>";
        }
    }
    return $stars;
}

// Function to display review form
function display_review_form() {
    // Check if there are any errors
    if (isset($errors) && !empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='error'>" . $error . "</div>";
        }
    }

    // Display the review form
    echo "<form method='post'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='name'><br><br>";

    echo "<label for='email'>Email:</label>";
    echo "<input type='email' id='email' name='email'><br><br>";

    echo "<label for='rating'>Rating:</label>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<input type='radio' id='rating$i' name='rating' value='$i'>";
        echo "<label for='rating$i'>$i stars</label> ";
    }
    echo "<br><br>";

    echo "<label for='comment'>Comment:</label>";
    echo "<textarea id='comment' name='comment'></textarea><br><br>";

    echo "<input type='submit' value='Submit Review'>";
    echo "</form>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to display user reviews
function displayUserReviews($page = 1) {
    // Database configuration
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';

    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Number of reviews per page
    $per_page = 5;

    // Calculate the offset for pagination
    $offset = ($page - 1) * $per_page;

    // SQL query to fetch reviews
    $sql = "SELECT review_id, user_name, rating, comment, date 
            FROM reviews 
            ORDER BY date DESC 
            LIMIT $offset, $per_page";

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Calculate total number of reviews
    $total_sql = "SELECT COUNT(*) AS total_reviews FROM reviews";
    $total_result = mysqli_query($conn, $total_sql);
    $total_row = mysqli_fetch_assoc($total_result);
    $total_reviews = $total_row['total_reviews'];

    // Calculate total pages
    $total_pages = ceil($total_reviews / $per_page);

    // Display reviews
    $output = '<div class="reviews-container">';

    while ($row = mysqli_fetch_assoc($result)) {
        $review_id = $row['review_id'];
        $user_name = $row['user_name'];
        $rating = $row['rating'];
        $comment = $row['comment'];
        $date = $row['date'];

        // Format date
        $formatted_date = date('F j, Y', strtotime($date));

        $output .= '<div class="review">';
        $output .= '<div class="review-header">';
        $output .= "<h3>$user_name</h3>";
        $output .= "<span class='rating'>$rating/5</span>";
        $output .= "</div>";
        $output .= "<p class='comment'>$comment</p>";
        $output .= "<small class='date'>$formatted_date</small>";
        $output .= '</div>';
    }

    // Display pagination
    $output .= '<div class="pagination">';
    for ($i = 1; $i <= $total_pages; $i++) {
        if ($i == $page) {
            $output .= "<a href='?page=$i' class='active'>$i</a>";
        } else {
            $output .= "<a href='?page=$i'>$i</a>";
        }
    }
    $output .= '</div>';

    // Close database connection
    mysqli_close($conn);

    return $output;
}

// Example usage in your main PHP script:
?>
<!DOCTYPE html>
<html>
<head>
    <style>
        .reviews-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        .rating {
            color: #ff8c00;
            font-weight: bold;
        }
        .comment {
            font-size: 16px;
            line-height: 1.5;
        }
        .date {
            color: #666;
            font-size: 12px;
        }
        .pagination {
            text-align: center;
            margin-top: 20px;
        }
        .pagination a {
            padding: 8px 16px;
            margin: 4px;
            border: 1px solid #ddd;
            background-color: #fff;
            text-decoration: none;
            color: #333;
            cursor: pointer;
        }
        .pagination a.active {
            background-color: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
    </style>
</head>
<body>
<?php
// Include the function file
require_once('review_function.php');

// Get the current page from URL or set default to 1
$page = isset($_GET['page']) ? intval($_GET['page']) : 1;

// Display reviews with pagination
echo displayUserReviews($page);
?>
</body>
</html>


<?php
// submit_review.php

// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get product ID from URL or session (modify as needed)
$product_id = 1; // Example product ID

// Validate and sanitize input
$name = htmlspecialchars(trim($_POST['name']));
$email = htmlspecialchars(trim($_POST['email']));
$rating = intval($_POST['rating']);
$comment = htmlspecialchars(trim($_POST['comment']));

if ($name == "" || $email == "" || $comment == "") {
    die("All fields are required!");
}

if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Invalid email format!");
}

if ($rating < 1 || $rating > 5) {
    die("Rating must be between 1 and 5!");
}

// Insert review into database
$sql = "INSERT INTO reviews (product_id, name, email, rating, comment)
VALUES ('$product_id', '$name', '$email', '$rating', '$comment')";

if (mysqli_query($conn, $sql)) {
    // Redirect to thank you page or show success message
    header("Location: review_success.php");
} else {
    die("Error inserting review: " . mysqli_error($conn));
}

mysqli_close($conn);
?>


<?php
// display_reviews.php

function fetch_reviews($product_id) {
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    $conn = mysqli_connect($servername, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    if ($result === FALSE) {
        die("Error fetching reviews: " . mysqli_error($conn));
    }

    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }

    mysqli_close($conn);
    return $reviews;
}

function display_reviews() {
    global $product_id; // Make sure to set product_id appropriately

    $reviews = fetch_reviews($product_id);

    if (empty($reviews)) {
        echo "<p>No reviews available yet.</p>";
        return;
    }

    foreach ($reviews as $review) {
        $rating_stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
        $date = date('F j, Y', strtotime($review['review_date']));

        echo <<<EOD
<div class="review">
    <h3>{$review['name']}</h3>
    <p>Rating: {$rating_stars}</p>
    <p>Email: {$review['email']}</p>
    <p>Comment: {$review['comment']}</p>
    <small>Reviewed on: $date</small>
</div><br>

EOD;
    }
}
?>


function calculate_average_rating($product_id) {
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    $conn = mysqli_connect($servername, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = $product_id";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    $average_rating = round($row['average'], 1);
    echo "<h2>Average Rating: {$average_rating}/5</h2>";

    mysqli_close($conn);
}


<?php
// Database connection configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'review_system';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate rating (assuming 1-5 scale)
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Invalid rating value. Must be between 1 and 5.");
    }
    
    // Get current timestamp
    $timestamp = time();
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$timestamp')";
            
    if (!mysqli_query($conn, $sql)) {
        throw new Exception("Error adding review: " . mysqli_error($conn));
    }
    
    return true;
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get all reviews for the specified product
    $sql = "SELECT r.*, u.username 
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE r.product_id = '$product_id'
            ORDER BY r.timestamp DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        throw new Exception("Error retrieving reviews: " . mysqli_error($conn));
    }
    
    // Convert result to array of reviews
    $reviews = [];
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = [
            'id' => $row['id'],
            'user_id' => $row['user_id'],
            'username' => $row['username'],
            'product_id' => $row['product_id'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'timestamp' => $row['timestamp']
        ];
    }
    
    return $reviews;
}

// Function to display reviews
function display_reviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        $date = date('F j, Y g:i a', $review['timestamp']);
        
        // Display review
        echo "
            <div class='review-container'>
                <div class='review-header'>
                    <span class='username'>{$review['username']}</span>
                    <span class='rating'>{$review['rating']} stars</span>
                    <span class='date'>{$date}</span>
                </div>
                <p class='comment'>{$review['comment']}</p>
            </div>
        ";
    }
}

// Example usage:
try {
    // Add a review
    if (isset($_POST['submit_review'])) {
        $user_id = $_SESSION['user_id']; // Assuming user is authenticated
        $product_id = 1; // Replace with actual product ID
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        add_review($user_id, $product_id, $rating, $comment);
    }
    
    // Get and display reviews for a product
    $product_id = 1; // Replace with actual product ID
    $reviews = get_reviews($product_id);
    display_reviews($reviews);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
mysqli_close($conn);

?>


<?php
function userReview($productId = 1, $name = '', $rating = 0, $comment = '', $add = false) {
    // Database connection parameters
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    // Create database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    if ($add) {
        // Insert new review into the database
        if (!empty($name) && !empty($comment) && $rating >= 1 && $rating <=5) {
            try {
                $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, rating, comment, timestamp) 
                                      VALUES (?, ?, ?, ?, NOW())");
                $stmt->bind_param("isii", $productId, $name, $rating, time());
                
                if ($stmt->execute()) {
                    // Success: Redirect back to the page
                    header("Location: ?product=$productId");
                    exit();
                } else {
                    echo "Error adding review: " . $conn->error;
                }
            } catch (mysqli_sql_exception $e) {
                echo "Database error occurred";
            }
        }
    }

    // Get reviews for this product
    $reviewsQuery = $conn->query("SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY timestamp DESC");
    
    // Calculate average rating
    $averageRatingQuery = $conn->query("SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = '$productId'");
    $averageRow = $averageRatingQuery->fetch_assoc();
    $averageRating = number_format($averageRow['avg_rating'], 1);

    // Display reviews and average rating
    echo "<div class='reviews-container'>";
    
    // Show average rating
    echo "<div class='average-rating'>
            Average Rating: <span style='font-size:24px; font-weight:bold;'>$averageRating</span>/5
          </div>";

    if ($reviewsQuery->num_rows > 0) {
        while($row = $reviewsQuery->fetch_assoc()) {
            $reviewName = htmlspecialchars($row['name']);
            $reviewRating = $row['rating'];
            $reviewComment = htmlspecialchars($row['comment']);
            $timestamp = date('F j, Y', $row['timestamp']);

            echo "<div class='review'>";
            echo "<h3>$reviewName</h3>";
            echo "<p>Rating: ";
            for ($i=1; $i<=$reviewRating; $i++) {
                echo "★";
            }
            echo "</p>";
            echo "<p>$reviewComment</p>";
            echo "<small>$timestamp</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }

    // Display review form
    if (!$add) {
        echo "<div class='review-form'>";
        echo "<h2>Write a Review</h2>";
        echo "<form method='post' action='?product=$productId&add=1'>";
        echo "<input type='hidden' name='productId' value='$productId'>";
        echo "<p>Your Name:<br>";
        echo "<input type='text' name='name' required></p>";
        echo "<p>Rating:<br>";
        echo "<select name='rating' required>";
        for ($i=1; $i<=5; $i++) {
            echo "<option value='$i'>$i stars</option>";
        }
        echo "</select></p>";
        echo "<p>Comment:<br>";
        echo "<textarea name='comment' required></textarea></p>";
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
        echo "</div>";
    }

    $conn->close();
}

// Call the function
if (isset($_GET['product'])) {
    userReview(
        $_GET['product'],
        isset($_POST['name']) ? $_POST['name'] : '',
        isset($_POST['rating']) ? $_POST['rating'] : 0,
        isset($_POST['comment']) ? $_POST['comment'] : '',
        isset($_GET['add']) && $_GET['add'] == 1
    );
} else {
    echo "Product ID not specified.";
}
?>


<?php
function submit_review($review_data, $db_host, $db_user, $db_password, $db_name) {
    // Extract review data
    $rating = isset($review_data['rating']) ? intval($review_data['rating']) : 0;
    $comment = isset($review_data['comment']) ? trim($review_data['comment']) : '';

    // Database connection
    $conn = mysqli_connect($db_host, $db_user, $db_password, $db_name);
    
    if (!$conn) {
        throw new Exception("Database connection failed: " . mysqli_error($conn));
    }

    try {
        // Sanitize input data
        $rating = mysqli_real_escape_string($conn, $rating);
        $comment = mysqli_real_escape_string($conn, $comment);

        // Validate rating and comment
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5.");
        }

        if (empty($comment)) {
            throw new Exception("Comment cannot be empty.");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (rating, comment) VALUES ('$rating', '$comment')";
        
        if (!mysqli_query($conn, $sql)) {
            throw new Exception("Error inserting review: " . mysqli_error($conn));
        }

        return true;

    } catch (Exception $e) {
        // Log the error or handle it as needed
        echo 'Error: ' . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}
?>


$review_data = array(
    'rating' => 5,
    'comment' => "Great product! Highly recommend."
);

$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

try {
    if (submit_review($review_data, $db_host, $db_user, $db_password, $db_name)) {
        echo "Review submitted successfully!";
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function getUserReviews($userId = null, $reviewId = null) {
    global $conn;

    // Validate input parameters
    if (!is_null($userId) && !ctype_digit((string)$userId)) {
        throw new InvalidArgumentException('User ID must be a positive integer');
    }
    
    if (!is_null($reviewId) && !ctype_digit((string)$reviewId)) {
        throw new InvalidArgumentException('Review ID must be a positive integer');
    }

    $reviews = array();

    try {
        // If both parameters are null, get all reviews
        if (is_null($userId) && is_null($reviewId)) {
            $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
            
            $stmt = $conn->prepare($sql);
            $stmt->execute();
            $result = $stmt->get_result();

            while ($row = $result->fetch_assoc()) {
                $reviews[] = $row;
            }
        } 
        // If reviewId is provided, get a specific review
        elseif (!is_null($reviewId)) {
            $sql = "SELECT * FROM reviews WHERE review_id = ?";
            
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('i', $reviewId);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($row = $result->fetch_assoc()) {
                $reviews[] = $row;
            }
        } 
        // If userId is provided, get all reviews for that user
        else {
            $sql = "SELECT * FROM reviews WHERE user_id = ?";
            
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('i', $userId);
            $stmt->execute();
            $result = $stmt->get_result();

            while ($row = $result->fetch_assoc()) {
                $reviews[] = $row;
            }
        }

        return array(
            'status' => REVIEW_SUCCESS,
            'data' => $reviews
        );

    } catch (Exception $e) {
        return array(
            'status' => REVIEW_ERROR,
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection if it's open
        if ($conn && $stmt) {
            $stmt->close();
        }
    }
}

// Example usage:
try {
    // Get all reviews
    $allReviews = getUserReviews();
    print_r($allReviews);

    // Get reviews by user ID
    $userId = 1;
    $userReviews = getUserReviews($userId);
    print_r($userReviews);

    // Get a specific review by review ID
    $reviewId = 5;
    $specificReview = getUserReviews(null, $reviewId);
    print_r($specificReview);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


<?php
// Function to handle user reviews
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection
    global $conn;

    try {
        // Check if the user has already reviewed this product
        $check_query = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ii", $user_id, $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "You have already reviewed this product!";
        }

        // Insert the new review
        $insert_query = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                        VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
        $stmt->execute();

        // Update the product's average rating
        $update_avg_rating = "UPDATE products SET average_rating = 
                            (SELECT AVG(rating) FROM reviews WHERE product_id = ?)
                            WHERE id = ?";
        $stmt = $conn->prepare($update_avg_rating);
        $stmt->bind_param("ii", $product_id, $product_id);
        $stmt->execute();

        return "Review submitted successfully!";

    } catch (Exception $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Example usage:
$review_result = submit_review(1, 5, 4, "Great product!");
echo $review_result;
?>


<?php
// Function to handle user reviews
function submitReview($name, $email, $rating, $comment, $product_id) {
    // Sanitize inputs
    $name = htmlspecialchars(trim($name));
    $email = htmlspecialchars(trim($email));
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));

    // Validate input fields
    if ($name == "" || $email == "" || $rating < 1 || $rating > 5) {
        return "Please fill in all required fields with valid information.";
    }

    // Database connection
    include('db_config.php'); // Include database configuration file

    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, email, rating, comment, product_id) VALUES (?, ?, ?, ?, ?)");
    
    if ($stmt === false) {
        return "Error preparing the query.";
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "ssisi", $name, $email, $rating, $comment, $product_id);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        // Close the statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return "Thank you for your review!";
    } else {
        // Handle any errors
        $error = mysqli_error($conn);
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return "Error submitting your review: $error";
    }
}

// Example usage:
// if (isset($_POST['submit'])) {
//     $name = $_POST['name'];
//     $email = $_POST['email'];
//     $rating = $_POST['rating'];
//     $comment = $_POST['comment'];
//     $product_id = $_POST['product_id'];

//     $result = submitReview($name, $email, $rating, $comment, $product_id);
//     echo $result;
// }
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to create review form
function createReviewForm() {
    echo '
        <form action="' . $_SERVER['PHP_SELF'] . '" method="POST">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>
            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            <div>
                <label for="review">Review:</label><br>
                <textarea id="review" name="review" rows="5" cols="40" required></textarea>
            </div>
            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating">
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>
            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    ';
}

// Function to submit review
function submitReview() {
    global $conn;
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $review = htmlspecialchars(trim($_POST['review']));
        $rating = (int)trim($_POST['rating']);
        
        // Validate input fields
        if (empty($name) || empty($email) || empty($review)) {
            die("All fields are required!");
        }
        
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars!");
        }

        // Prepare SQL statement
        $stmt = $conn->prepare("
            INSERT INTO reviews (name, email, review_text, rating, submission_date)
            VALUES (:name, :email, :review_text, :rating, NOW())
        ");
        
        try {
            // Bind parameters and execute query
            $stmt->execute([
                ':name' => $name,
                ':email' => $email,
                ':review_text' => $review,
                ':rating' => $rating
            ]);
            
            echo "Thank you for submitting your review!";
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    try {
        // Get all reviews from database
        $stmt = $conn->query("
            SELECT name, rating, review_text, submission_date
            FROM reviews
            ORDER BY submission_date DESC
        ");
        
        // Display each review
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo '
                <div class="review">
                    <h3>' . $row['name'] . '</h3>
                    <p>Rating: ' . str_repeat('★', $row['rating']) . '</p>
                    <p>' . $row['review_text'] . '</p>
                    <small>Submitted on: ' . $row['submission_date'] . '</small>
                </div>
            ';
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Main function
function main() {
    // Check if review is being submitted
    if (isset($_POST['submit_review'])) {
        submitReview();
    } else {
        // Display review form and existing reviews
        createReviewForm();
        displayReviews();
    }
}

// Run the main function
main();

// Close database connection
$conn = null;
?>


<?php
// Database connection (replace with your own credentials)
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, created_at)
            VALUES ('$name', '$email', '$rating', '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display review details
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>" . date('F j, Y g:i a', strtotime($row['created_at'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews found.</p>";
    }
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Add review to database
    $result = addReview($name, $email, $rating, $comment, $conn);

    if ($result === true) {
        echo "<div class='success'>Thank you for your review!</div>";
    } else {
        echo "<div class='error'>" . $result . "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .stars {
            color: gold;
        }

        .error {
            color: red;
        }

        .success {
            color: green;
        }
    </style>
</head>
<body>
    <h2>Submit a Review</h2>
    
    <!-- Review Form -->
    <div class="review-form">
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="rating">Rating (1-5):</label><br>
            <select id="rating" name="rating">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
            </select><br>

            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" cols="50" required></textarea><br>

            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <h2>Reviews</h2>
    <?php displayReviews($conn); ?>

</body>
</html>


<?php
// Function to handle user reviews
function createReview() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = htmlspecialchars(trim($_POST['name']));
        $email = trim($_POST['email']);
        $rating = intval($_POST['rating']);
        $comments = htmlspecialchars(trim($_POST['comments']));

        // Validate inputs
        if (empty($name) || empty($email) || empty($comments)) {
            die("Please fill in all required fields.");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address.");
        }

        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars.");
        }

        // Database connection
        try {
            $pdo = new PDO('mysql:host=localhost;dbname=reviews', 'username', 'password');
            $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            
            // Prepare the SQL statement
            $sql = "INSERT INTO reviews (name, email, rating, comments, created_at) 
                    VALUES (:name, :email, :rating, :comments, NOW())";
            
            $stmt = $pdo->prepare($sql);
            
            // Bind parameters
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comments', $comments);

            // Execute the query
            if ($stmt->execute()) {
                echo "Thank you for your review!";
            } else {
                die("Error submitting review. Please try again later.");
            }
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    } else {
        // Show the review form
        ?>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select rating</option>
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>

            <div>
                <label for="comments">Comments:</label><br>
                <textarea id="comments" name="comments" required></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>
        <?php
    }
}

// Call the function
createReview();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Table structure
// CREATE TABLE reviews (
//     id INT AUTO_INCREMENT PRIMARY KEY,
//     user_name VARCHAR(100),
//     rating INT CHECK (rating >= 1 AND rating <=5),
//     comment TEXT,
//     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
// );

function add_review($user_name, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate inputs
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    $sql = "INSERT INTO reviews (user_name, rating, comment) VALUES ('$user_name', $rating, '$comment')";
    
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

function show_reviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    $reviews = array();
    while ($row = $result->fetch_assoc()) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

function calculate_average_rating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    return number_format((float)$row['average'], 1, '.', '');
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        $user_name = $_POST['user_name'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (add_review($user_name, $rating, $comment)) {
            header("Location: reviews.php");
            exit();
        } else {
            echo "Error adding review!";
        }
    }
}

// Get all reviews
$reviews = show_reviews();

// Get average rating
$average_rating = calculate_average_rating();

$conn->close();
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reviews System</title>
</head>
<body>
    <!-- Review Form -->
    <h2>Add a Review</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="user_name" placeholder="Your Name" required><br>
        <select name="rating" required>
            <option value="">Choose Rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br>
        <textarea name="comment" placeholder="Your Review" required></textarea><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Reviews (Average: <?php echo $average_rating; ?>)</h2>
    <?php foreach ($reviews as $review): ?>
        <div style="border-bottom: 1px solid #ccc; padding-bottom: 10px;">
            <strong><?php echo $review['user_name']; ?></strong> - <?php echo str_repeat('★', $review['rating']); ?><br>
            <p><?php echo $review['comment']; ?></p>
            <small>Posted on <?php echo date('F j, Y, g:i a', strtotime($review['created_at'])); ?></small>
        </div>
    <?php endforeach; ?>

    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        form input[type="text"], form select, form textarea {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
            box-sizing: border-box;
        }
        form textarea {
            height: 150px;
        }
        form input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }
        form input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to create review table if it doesn't exist
function createReviewTable() {
    global $conn;
    
    $sql = "CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        product_id INT NOT NULL,
        user_name VARCHAR(100) NOT NULL,
        user_email VARCHAR(100) NOT NULL,
        comment TEXT NOT NULL,
        rating INT NOT NULL,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )";
    
    if (!mysqli_query($conn, $sql)) {
        echo "Error creating table: " . mysqli_error($conn);
    }
}

// Function to insert a new review into the database
function insertReview($productId, $userName, $userEmail, $comment, $rating) {
    global $conn;
    
    // Sanitize inputs
    $userName = htmlspecialchars(trim($userName));
    $userEmail = htmlspecialchars(trim($userEmail));
    $comment = htmlspecialchars(trim($comment));
    $rating = intval($rating);
    
    // Prepare SQL statement
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (product_id, user_name, user_email, comment, rating) VALUES (?, ?, ?, ?, ?)");
    mysqli_stmt_bind_param($stmt, "issss", $productId, $userName, $userEmail, $comment, $rating);
    
    if (mysqli_stmt_execute($stmt)) {
        // Redirect to avoid form resubmission
        header("Location: product.php?id=$productId");
        exit();
    } else {
        echo "Error inserting review: " . mysqli_error($conn);
    }
    
    mysqli_stmt_close($stmt);
}

// Function to display reviews for a product
function displayReviews($productId) {
    global $conn;
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    // Calculate average rating
    $averageRating = calculateAverageRating($productId);
    
    echo "<div class='reviews-container'>";
        echo "<h2>Customer Reviews</h2>";
        echo "<p>Average Rating: " . number_format($averageRating, 2) . " / 5</p>";
        
        // Display star rating
        displayStarRating($averageRating);
        
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review-item'>";
                    echo "<div class='user-details'>";
                        echo "<strong>" . $row['user_name'] . "</strong>";
                        displayStarRating($row['rating']);
                    echo "</div>";
                    echo "<p class='comment'>" . $row['comment'] . "</p>";
                    echo "<p class='timestamp'>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</p>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews yet.</p>";
        }
    echo "</div>";
    
    mysqli_stmt_close($stmt);
}

// Function to calculate average rating
function calculateAverageRating($productId) {
    global $conn;
    
    $sql = "SELECT AVG(rating) AS average FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['average'] ?: 0;
}

// Function to display star rating
function displayStarRating($rating) {
    $fullStars = intval($rating);
    $hasHalfStar = ($rating - $fullStars) >= 0.5;
    
    echo "<div class='stars'>";
        for ($i = 1; $i <= $fullStars; $i++) {
            echo "<span class='star'>★</span>";
        }
        
        if ($hasHalfStar) {
            echo "<span class='star half'>⯨</span>";
        }
        
        // Fill remaining stars with empty
        for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {
            echo "<span class='star'>☆</span>";
        }
    echo "</div>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// File: review_system.php

// Configuration
$review_file = 'reviews.txt'; // File to store reviews

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize and validate inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $review = htmlspecialchars(trim($_POST['review']));

    // Basic validation
    if (empty($name) || empty($review)) {
        die("Please fill in both name and review fields.");
    }

    if (strlen($name) > 50) {
        die("Name must be less than 50 characters.");
    }

    if (strlen($review) < 10 || strlen($review) > 1000) {
        die("Review must be between 10 and 1000 characters.");
    }

    // Create review data array
    $review_data = [
        'name' => $name,
        'review' => $review,
        'date' => date('Y-m-d H:i:s')
    ];

    // Read existing reviews
    if (file_exists($review_file)) {
        $reviews = file_get_contents($review_file);
        $reviews_array = json_decode($reviews, true);
    } else {
        $reviews_array = [];
    }

    // Add new review to array
    array_unshift($reviews_array, $review_data);

    // Write back to file
    $json_reviews = json_encode($reviews_array, JSON_PRETTY_PRINT);
    if (file_put_contents($review_file, $json_reviews) === false) {
        die("Error saving review. Please try again later.");
    }

    // Confirmation message
    echo "Thank you for submitting your review!";
} else {
    // Display review form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review-form { max-width: 600px; margin: 20px auto; padding: 20px; }
        .review-form input, .review-form textarea { width: 100%; margin: 5px 0; padding: 8px; }
        .review-form button { background-color: #4CAF50; color: white; padding: 10px 16px; border: none; cursor: pointer; }
        .review-form button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required>
            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea>
            <button type="submit">Submit Review</button>
        </form>
    </div>
<?php
}
?>


<?php
// File: display_reviews.php

$review_file = 'reviews.txt';

if (file_exists($review_file)) {
    $reviews = json_decode(file_get_contents($review_file), true);
} else {
    $reviews = [];
}

if (empty($reviews)) {
    echo "No reviews available.";
} else {
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reviews</title>
    <style>
        .review-container { max-width: 800px; margin: 20px auto; }
        .review-item { border-bottom: 1px solid #ddd; padding: 15px 0; }
        .review-header { font-weight: bold; color: #333; }
        .review-date { color: #666; font-size: 0.9em; }
    </style>
</head>
<body>
    <div class="review-container">
        <?php foreach ($reviews as $review) : ?>
            <div class="review-item">
                <div class="review-header"><?php echo htmlspecialchars($review['name']); ?></div>
                <div class="review-date"><?php echo date('F j, Y', strtotime($review['date'])); ?></div>
                <p><?php echo nl2br(htmlspecialchars($review['review'])); ?></p>
            </div>
        <?php endforeach; ?>
    </div>
</body>
</html>
<?php
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview($user_name, $rating, $comment, $conn) {
    // Sanitize input data
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $user_name));
    $rating = intval(mysqli_real_escape_string($conn, $rating));
    $comment = htmlspecialchars(mysqli_real_escape_string($conn, $comment));
    
    // Get current date and time
    $date = date('Y-m-d H:i:s');
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, rating, comment, review_date) 
            VALUES ('$user_name', '$rating', '$comment', '$date')";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating = mysqli_fetch_assoc(
            mysqli_query($conn, "SELECT AVG(rating) AS avg_rating FROM reviews")
        )['avg_rating'];
        
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('Y-m-d', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
        
        // Display average rating and total reviews
        echo "<div class='review-stats'>";
        echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
        echo "<p>Total Reviews: " . mysqli_num_rows($result) . "</p>";
        echo "</div>";
    } else {
        echo "<p>No reviews available.</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),
review TEXT,
rating INT,
timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)";

if (!mysqli_query($conn, $sql)) {
    die("Table creation failed: " . mysqli_error($conn));
}

// Function to add a new review
function addReview($conn, $name, $review, $rating) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags($name));
    $review = htmlspecialchars(strip_tags($review));
    
    if (empty($name) || empty($review) || !is_numeric($rating)) {
        return "Please fill in all fields";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars";
    }

    // Prepare and bind
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, review, rating) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($stmt, "sss", $name, $review, $rating);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review']) . "</p>";
            echo "<small>Posted on: " . date('jS M Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $review = $_POST['review'];
    $rating = $_POST['rating'];

    // Add review to database
    $result = addReview($conn, $name, $review, $rating);

    if ($result === true) {
        echo "<p>Thank you for your review!</p>";
    } else {
        echo "<p>Error: " . $result . "</p>";
    }
}

// Display the review form
echo <<<EOD
<form method="post">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <textarea name="review" placeholder="Write your review here..." required></textarea><br>
    <label>Rating:</label>
    <select name="rating" required>
        <option value="">Select rating</option>
        <option value="1">1 star</option>
        <option value="2">2 stars</option>
        <option value="3">3 stars</option>
        <option value="4">4 stars</option>
        <option value="5">5 stars</option>
    </select><br>
    <input type="submit" value="Submit Review">
</form>

EOD;

// Display existing reviews
echo "<h2>Previous Reviews:</h2>";
displayReviews($conn);

mysqli_close($conn);
?>


<?php
class UserReview {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Add a new review
    public function addReview($product_id, $user_id, $rating, $review_text) {
        try {
            $sql = "INSERT INTO reviews (product_id, user_id, rating, review_text) 
                    VALUES ('$product_id', '$user_id', '$rating', '$review_text')";
            $result = $this->db->query($sql);
            
            if ($result) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            throw new Exception("Error adding review: " . $e->getMessage());
        }
    }

    // Get reviews for a specific product
    public function getReviews($product_id) {
        try {
            $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
            $result = $this->db->query($sql);
            
            if ($result && $result->num_rows > 0) {
                return $result->fetch_all(MYSQLI_ASSOC);
            } else {
                return array();
            }
        } catch (Exception $e) {
            throw new Exception("Error fetching reviews: " . $e->getMessage());
        }
    }

    // Delete a review by ID
    public function deleteReview($review_id, $user_id) {
        try {
            $sql = "DELETE FROM reviews WHERE id = '$review_id' AND user_id = '$user_id'";
            $result = $this->db->query($sql);
            
            if ($result) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            throw new Exception("Error deleting review: " . $e->getMessage());
        }
    }

    // Update an existing review
    public function updateReview($review_id, $user_id, $rating, $review_text) {
        try {
            $sql = "UPDATE reviews SET rating = '$rating', review_text = '$review_text' 
                    WHERE id = '$review_id' AND user_id = '$user_id'";
            $result = $this->db->query($sql);
            
            if ($result) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            throw new Exception("Error updating review: " . $e->getMessage());
        }
    }

    // Get average rating for a product
    public function getAverageRating($product_id) {
        try {
            $sql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$product_id'";
            $result = $this->db->query($sql);
            
            if ($result && $result->num_rows > 0) {
                return (float)$result->fetch_assoc()['average_rating'];
            } else {
                return 0.0;
            }
        } catch (Exception $e) {
            throw new Exception("Error calculating average rating: " . $e->getMessage());
        }
    }
}
?>


<?php
// Assuming you have a database connection established
$connection = new mysqli("localhost", "username", "password", "database");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

$user_review = new UserReview($connection);

// Add a new review
$added = $user_review->addReview(1, 5, 4, "Great product!");
echo "Review added: " . ($added ? "Yes" : "No") . "<br>";

// Get reviews for product ID 1
$reviews = $user_review->getReviews(1);
foreach ($reviews as $review) {
    echo "Rating: " . $review['rating'] . ", Review: " . $review['review_text'] . "<br>";
}

// Update a review
$updated = $user_review->updateReview(2, 5, 5, "Excellent product!");
echo "Review updated: " . ($updated ? "Yes" : "No") . "<br>";

// Delete a review
$deleted = $user_review->deleteReview(3, 5);
echo "Review deleted: " . ($deleted ? "Yes" : "No") . "<br>";

// Get average rating for product ID 1
$average = $user_review->getAverageRating(1);
echo "Average Rating: " . $average;

$connection->close();
?>


<?php
// Function to handle user reviews
function submit_review() {
    // Check if form is submitted
    if (!isset($_POST['submit'])) {
        return;
    }

    // Sanitize input data
    $review_title = htmlspecialchars(trim($_POST['review_title']));
    $review_content = htmlspecialchars(trim($_POST['review_content']));
    $rating = intval($_POST['rating']);
    $user_id = intval($_POST['user_id']);
    $product_id = intval($_POST['product_id']);

    // Database connection
    include('db_config.php'); // Include your database configuration file

    try {
        // Validate input data
        if (empty($review_title) || empty($review_content)) {
            throw new Exception("Please fill in all required fields.");
        }

        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5 stars.");
        }

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (review_title, review_content, rating, user_id, product_id, created_at)
                VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)";

        // Prepare and bind parameters
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "ssiii", $review_title, $review_content, $rating, $user_id, $product_id);

        // Execute the statement
        if (mysqli_stmt_execute($stmt)) {
            echo "Thank you for submitting your review!";
        } else {
            throw new Exception("Error submitting review. Please try again.");
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    } finally {
        // Close the statement and connection
        if ($stmt) {
            mysqli_stmt_close($stmt);
        }
        if ($conn) {
            mysqli_close($conn);
        }
    }
}

// Call the function
submit_review();
?>


<?php

// Function to add a new review
function addReview($name, $comment, $rating) {
    // Validate inputs
    if (empty($name) || empty($comment)) {
        throw new Exception("Name and comment cannot be empty");
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }

    // Review data array
    $review = [
        'name' => htmlspecialchars($name),
        'comment' => htmlspecialchars($comment),
        'rating' => (int)$rating,
        'date' => date('Y-m-d H:i:s')
    ];

    // Reviews file path
    $filePath = 'reviews.txt';

    // Read existing reviews
    if (file_exists($filePath)) {
        $reviewsContent = file_get_contents($filePath);
        $reviewsArray = unserialize($reviewsContent);
        $reviewsArray[] = $review;
    } else {
        $reviewsArray = [$review];
    }

    // Save the updated reviews array back to file
    $success = file_put_contents($filePath, serialize($reviewsArray));

    if ($success === false) {
        throw new Exception("Failed to save review");
    }

    return true;
}

// Function to get all reviews
function getReviews() {
    $filePath = 'reviews.txt';

    if (file_exists($filePath)) {
        $reviewsContent = file_get_contents($filePath);
        $reviewsArray = unserialize($reviewsContent);
        return $reviewsArray;
    } else {
        return [];
    }
}

// Example usage:
try {
    // Add a new review
    addReview("John Doe", "Great product!", 5);

    // Get all reviews and display them
    $reviews = getReviews();
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['name'] . "</h3>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<p>Date: " . $review['date'] . "</p>";
        echo "</div>";
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to display all reviews
function display_reviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                r.review_id,
                r.user_name,
                r.rating,
                r.comment,
                r.created_at
            FROM reviews r
            WHERE r.product_id = ?
            ORDER BY r.created_at DESC
        ");
        
        $stmt->execute([$product_id]);
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            echo "<p>No reviews available yet.</p>";
            return;
        }
        
        foreach ($reviews as $review) {
            echo "
                <div class='review'>
                    <h3>{$review['user_name']}</h3>
                    <div class='rating'>";
                        for ($i = 1; $i <= 5; $i++) {
                            if ($i <= $review['rating']) {
                                echo "<span class='star'>★</span>";
                            } else {
                                echo "<span class='star'>☆</span>";
                            }
                        }
                    echo "</div>
                    <p>{$review['comment']}</p>
                    <small>Posted on {$review['created_at']}</small>
                </div>
            ";
        }
    } catch (PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Function to submit a new review
function submit_review($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    try {
        // Sanitize inputs
        $user_name = htmlspecialchars(trim($user_name));
        $email = htmlspecialchars(trim($email));
        $rating = intval($rating);
        $comment = htmlspecialchars(trim($comment));
        
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating value. Rating must be between 1 and 5.");
        }
        
        // Insert review into database
        $stmt = $conn->prepare("
            INSERT INTO reviews 
                (product_id, user_name, email, rating, comment)
            VALUES (?, ?, ?, ?, ?)
        ");
        
        $stmt->execute([$product_id, $user_name, $email, $rating, $comment]);
        
        return true;
    } catch (PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                AVG(rating) AS average_rating,
                COUNT(*) AS total_reviews
            FROM reviews
            WHERE product_id = ?
        ");
        
        $stmt->execute([$product_id]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        $average_rating = number_format($result['average_rating'], 1, '.', '');
        $total_reviews = $result['total_reviews'];
        
        return [
            'average' => $average_rating,
            'total' => $total_reviews
        ];
    } catch (PDOException $e) {
        die("Error calculating average rating: " . $e->getMessage());
    }
}

// Function to display review form
function display_review_form($product_id, $errors = []) {
    // Check if there are any errors
    if (!empty($errors)) {
        echo "<div class='error-messages'>";
            foreach ($errors as $error) {
                echo "<p>$error</p>";
            }
        echo "</div>";
    }
    
    echo "
        <form method='POST' action='submit_review.php'>
            <input type='hidden' name='product_id' value='$product_id'>
            
            <div class='form-group'>
                <label for='user_name'>Name:</label>
                <input type='text' id='user_name' name='user_name' required>
            </div>
            
            <div class='form-group'>
                <label for='email'>Email:</label>
                <input type='email' id='email' name='email' required>
            </div>
            
            <div class='form-group'>
                <label>Rating:</label><br>
                <input type='radio' name='rating' value='5'> ★★★★★<br>
                <input type='radio' name='rating' value='4'> ★★★★☆<br>
                <input type='radio' name='rating' value='3'> ★★★☆☆<br>
                <input type='radio' name='rating' value='2'> ★★☆☆☆<br>
                <input type='radio' name='rating' value='1'> ★☆☆☆☆
            </div>
            
            <div class='form-group'>
                <label for='comment'>Comment:</label>
                <textarea id='comment' name='comment' rows='5' required></textarea>
            </div>
            
            <button type='submit' class='submit-btn'>Submit Review</button>
        </form>
    ";
}
?>


<?php
session_start();
require_once 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    try {
        submit_review($product_id, $user_name, $email, $rating, $comment);
        header("Location: product.php?id=$product_id");
        exit();
    } catch (Exception $e) {
        // Store errors in session
        $_SESSION['errors'] = [$e->getMessage()];
        header("Location: product.php?id=$product_id");
        exit();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle review submission
function submitReview() {
    global $conn;
    
    // Sanitize input data
    $product_id = htmlspecialchars($_POST['product_id']);
    $user_name = htmlspecialchars($_POST['user_name']);
    $user_email = htmlspecialchars($_POST['user_email']);
    $rating = intval($_POST['rating']);
    $review_text = htmlspecialchars($_POST['review_text']);
    
    // Check if all required fields are filled
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($review_text)) {
        die("Please fill in all required fields.");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, review_text, review_date)
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$review_text', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>Thank you for submitting your review!</div>";
    } else {
        die("Error: " . mysqli_error($conn));
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
                echo "<h3>" . $row['user_name'] . "</h3>";
                echo "<p>Rating: " . getStars($row['rating']) . "</p>";
                echo "<p>Email: " . substr($row['user_email'], 0, -4) . "****</p>"; // Mask email for privacy
                echo "<p>" . $row['review_text'] . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<div class='no-reviews'>No reviews available for this product.</div>";
    }
}

// Helper function to display stars
function getStars($rating) {
    $stars = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "<span class='fa fa-star'></span>";
        } else {
            $stars .= "<span class='fa fa-star-o'></span>";
        }
    }
    return $stars;
}

// Close database connection
mysqli_close($conn);
?>


<?php displayReviews($product_id); ?>


<?php
// Database connection settings
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment) {
    global $conn;
    
    // Sanitize input data
    $productId = intval($productId);
    $userId = intval($userId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, submission_date) 
            VALUES ('$productId', '$userId', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function displayReviews($productId) {
    global $conn;
    
    // Sanitize input data
    $productId = intval($productId);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username, u.profile_picture 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$productId' 
            ORDER BY r.submission_date DESC";
    
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Output reviews
        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review">';
            echo '<div class="user-info">';
            echo '<img src="' . $row['profile_picture'] . '" alt="User Profile">';
            echo '<span class="username">' . $row['username'] . '</span>';
            echo '</div>';
            
            // Display rating stars
            echo '<div class="rating">';
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            echo '</div>';
            
            // Display comment
            echo '<p class="comment">' . $row['comment'] . '</p>';
            
            // Display submission date
            echo '<div class="date">';
            echo date('F j, Y g:i a', strtotime($row['submission_date']));
            echo '</div>';
            
            // Voting buttons
            echo '<div class="votes">';
            echo '<button onclick="voteReview(' . $row['id'] . ', 1)">↑</button>';
            echo '<span class="vote-count">' . $row['votes'] . '</span>';
            echo '<button onclick="voteReview(' . $row['id'] . ', -1)">↓</button>';
            echo '</div>';
            
            echo '</div>';
        }
    } else {
        echo 'No reviews found for this product.';
    }
}

// Function to handle voting
function voteReview($reviewId, $voteType) {
    global $conn;
    
    // Sanitize input data
    $reviewId = intval($reviewId);
    $voteType = intval($voteType);
    
    // Check if user has already voted for this review
    session_start();
    $userId = $_SESSION['user_id'];
    
    $sql = "SELECT id FROM votes WHERE review_id = '$reviewId' AND user_id = '$userId'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        // Update vote count
        $sql = "UPDATE reviews SET votes = votes + $voteType WHERE id = '$reviewId'";
        mysqli_query($conn, $sql);
        
        // Record the vote
        $sql = "INSERT INTO votes (review_id, user_id, vote_type) 
                VALUES ('$reviewId', '$userId', '$voteType')";
        mysqli_query($conn, $sql);
        
        return true;
    } else {
        return false;
    }
}

// Helper function to sanitize input data
function sanitizeInput($data) {
    global $conn;
    return mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($data))));
}
?>


<?php
// Function to handle user reviews
function handleUserReview($review_file) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = sanitizeInput($_POST["name"]);
        $email = sanitizeInput($_POST["email"]);
        $rating = intval($_POST["rating"]);
        $comment = sanitizeInput($_POST["comment"]);
        
        // Validate input
        if ($name == "" || $email == "" || $comment == "") {
            echo "All fields are required!";
            return;
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars!";
            return;
        }
        
        // Create review array
        $review = [
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        ];
        
        // Save review to file
        $json_review = json_encode($review);
        $fp = fopen($review_file, 'a');
        fwrite($fp, $json_review . "
");
        fclose($fp);
        
        echo "Thank you for your review!";
    }
    
    // Display existing reviews
    displayReviews($review_file);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to display reviews
function displayReviews($review_file) {
    if (file_exists($review_file)) {
        $reviews = file($review_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
        
        foreach ($reviews as $review_line) {
            $review = json_decode($review_line, true);
            
            if ($review !== null) {
                echo "<div class='review'>";
                echo "<h3>{$review['name']}</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>Email: {$review['email']}</p>";
                echo "<p>Comment: {$review['comment']}</p>";
                echo "<small>Posted on: {$review['date']}</small>";
                echo "</div>";
            }
        }
    }
}
?>


<?php
function manageUserReviews($conn, $productId, $userId = null, $rating = null, $comment = null, $displayReviews = false) {
    // If all parameters are provided except displayReviews, assume we're submitting a review
    if ($userId !== null && $rating !== null && $comment !== null) {
        try {
            // Check if the user has already reviewed this product
            $checkReviewQuery = "SELECT COUNT(*) AS count FROM reviews WHERE product_id = ? AND user_id = ?";
            $stmt = mysqli_prepare($conn, $checkReviewQuery);
            mysqli_stmt_bind_param($stmt, "ii", $productId, $userId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            $row = mysqli_fetch_assoc($result);

            if ($row['count'] == 0) {
                // Insert the new review
                $insertReviewQuery = "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)";
                $stmt = mysqli_prepare($conn, $insertReviewQuery);
                mysqli_stmt_bind_param($stmt, "iiis", $productId, $userId, $rating, $comment);
                mysqli_stmt_execute($stmt);
                echo "Thank you for submitting your review!";
            } else {
                // Review already exists
                echo "You have already submitted a review for this product.";
            }
        } catch (mysqli_sql_exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    if ($displayReviews) {
        try {
            // Get all reviews for the specified product
            $getReviewsQuery = "
                SELECT r.rating, r.comment, u.full_name 
                FROM reviews r 
                LEFT JOIN users u ON r.user_id = u.id 
                WHERE r.product_id = ?
                ORDER BY r.review_date DESC";
            
            $stmt = mysqli_prepare($conn, $getReviewsQuery);
            mysqli_stmt_bind_param($stmt, "i", $productId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            // Calculate average rating
            $averageRating = 0;
            $reviewCount = 0;

            while ($row = mysqli_fetch_assoc($result)) {
                $averageRating += $row['rating'];
                $reviewCount++;
            }

            if ($reviewCount > 0) {
                $averageRating /= $reviewCount;
                // Reset result pointer to display reviews
                mysqli_data_seek($result, 0);
            } else {
                echo "No reviews available for this product.";
                return;
            }

            // Display average rating
            echo "<h3>Average Rating: " . number_format($averageRating, 1) . "/5</h3>";
            
            // Display each review
            while ($row = mysqli_fetch_assoc($result)) {
                $ratingStars = str_repeat("⭐", $row['rating']);
                $fullName = $row['full_name'] ?? 'Anonymous';
                echo "<div class='review'>";
                echo "<p><strong>$fullName</strong> gave " . $ratingStars . "</p>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                echo "</div>";
            }
        } catch (mysqli_sql_exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}
?>


manageUserReviews($conn, 1, 5, 4, "Great product!");


manageUserReviews($conn, 1, null, null, null, true);


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get form data
$name = mysqli_real_escape_string($conn, $_POST['name']);
$email = mysqli_real_escape_string($conn, $_POST['email']);
$rating = intval($_POST['rating']);
$comment = mysqli_real_escape_string($conn, $_POST['comment']);

// Validate email format
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Invalid email format");
}

// SQL query to insert review
$sql = "INSERT INTO product_reviews (user_name, user_email, rating, comment)
VALUES ('$name', '$email', $rating, '$comment')";

if (mysqli_query($conn, $sql)) {
    // Redirect back to the product page or thank you message
    header("Location: product_page.php?thankyou");
} else {
    echo "Error: " . $sql . "<br>" . mysqli_error($conn);
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// SQL query to get all reviews for a product
$sql = "SELECT * FROM product_reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);

?>

<div class="review-display">
    <h2>Product Reviews</h2>
    
    <?php if (mysqli_num_rows($result) > 0) : ?>
        <?php while ($row = mysqli_fetch_assoc($result)) : ?>
            <div class="single-review">
                <p><strong><?php echo $row['user_name']; ?></strong></p>
                <div class="rating-stars">
                    <?php 
                        $stars = str_repeat('★', $row['rating']);
                        $remaining = 5 - $row['rating'];
                        echo $stars . str_repeat('☆', $remaining);
                    ?>
                </div>
                <p><?php echo $row['comment']; ?></p>
                <small><?php echo date('F j, Y g:i a', strtotime($row['submission_date'])); ?></small>
            </div>
        <?php endwhile; ?>
    <?php else : ?>
        <p>No reviews available yet.</p>
    <?php endif; ?>

</div>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'reviews';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <!-- Add Font Awesome for star ratings -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        .review-form input, .review-form textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            box-sizing: border-box;
        }
        .review-form button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }
        .review-form button:hover {
            background-color: #45a049;
        }
        .reviews {
            margin-top: 30px;
        }
        .review-item {
            padding: 15px;
            border-bottom: 1px solid #ddd;
        }
        .review-header {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .rating {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Review Form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" class="review-form">
            <h2>Submit a Review</h2>
            <input type="text" name="user_name" placeholder="Your Name" required>
            <input type="email" name="user_email" placeholder="Your Email" required>
            <input type="number" name="rating" min="1" max="5" step="1" value="5" required>
            <textarea name="review_text" placeholder="Write your review here..." rows="4" required></textarea>
            <button type="submit" name="submit_review">Submit Review</button>
        </form>

        <!-- Display Reviews -->
        <?php
        if (isset($_POST['submit_review'])) {
            // Sanitize input
            $user_name = htmlspecialchars($_POST['user_name']);
            $user_email = htmlspecialchars(filter_var($_POST['user_email'], FILTER_VALIDATE_EMAIL));
            $rating = intval($_POST['rating']);
            $review_text = htmlspecialchars($_POST['review_text']);

            try {
                $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, review_text) 
                                      VALUES (:name, :email, :rating, :text)");
                $stmt->bindParam(':name', $user_name);
                $stmt->bindParam(':email', $user_email);
                $stmt->bindParam(':rating', $rating);
                $stmt->bindParam(':text', $review_text);
                $stmt->execute();

                header("Location: " . $_SERVER['PHP_SELF']);
            } catch(PDOException $e) {
                echo "Error saving review: " . $e->getMessage();
            }
        }

        // Fetch reviews from database
        try {
            $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error fetching reviews: " . $e->getMessage();
        }
        ?>

        <div class="reviews">
            <?php foreach ($reviews as $review): ?>
                <div class="review-item">
                    <div class="review-header">
                        <span class="rating">
                            <?php 
                            for ($i = 1; $i <= 5; $i++) {
                                if ($i <= $review['rating']) {
                                    echo '<i class="fas fa-star"></i>';
                                } else {
                                    echo '<i class="far fa-star"></i>';
                                }
                            }
                            ?>
                        </span>
                        <h3><?php echo $review['user_name']; ?></h3>
                    </div>
                    <p><?php echo $review['review_text']; ?></p>
                    <small>Submitted on <?php echo date('F j, Y', strtotime($review['submission_date'])); ?></small>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'review_system';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($productId, $name, $email, $rating, $reviewText, $conn) {
    try {
        // Validate input
        if (empty($name) || empty($email) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
            return false;
        }

        // Prepare the statement
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            SET 
                product_id = :productId,
                name = :name,
                email = :email,
                rating = :rating,
                review_text = :reviewText,
                timestamp = NOW()
        ");
        
        // Bind parameters
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':reviewText', $reviewText);

        // Execute the statement
        $stmt->execute();

        return true;
    } catch(PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT 
                id,
                name,
                email,
                rating,
                review_text,
                timestamp
            FROM 
                reviews
            WHERE 
                product_id = :productId
            ORDER BY 
                timestamp DESC
        ");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error getting reviews: " . $e->getMessage();
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($productId, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT 
                AVG(rating) AS average_rating
            FROM 
                reviews
            WHERE 
                product_id = :productId
        ");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return round($result['average_rating'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
        return false;
    }
}

// Function to count total reviews
function getTotalReviews($productId, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT 
                COUNT(*) AS total_reviews
            FROM 
                reviews
            WHERE 
                product_id = :productId
        ");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return $result['total_reviews'];
    } catch(PDOException $e) {
        echo "Error counting reviews: " . $e->getMessage();
        return false;
    }
}

// Example usage
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (submitReview($_POST['product_id'], $_POST['name'], $_POST['email'], $_POST['rating'], $_POST['review_text'], $conn)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please check all fields.";
    }
}

// Display reviews
$productId = 1; // Example product ID
$reviews = getReviews($productId, $conn);
if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . htmlspecialchars($review['name']) . "</h4>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
        echo "<small>" . date('F j, Y', strtotime($review['timestamp'])) . "</small>";
        echo "</div>";
    }
}

// Display average rating
$averageRating = getAverageRating($productId, $conn);
if ($averageRating !== false) {
    echo "<div class='rating'>";
    echo "Average Rating: " . $averageRating . "/5";
    echo "</div>";
}

// Display total reviews
$totalReviews = getTotalReviews($productId, $conn);
if ($totalReviews !== false) {
    echo "<div class='total-reviews'>";
    echo "Total Reviews: " . $totalReviews;
    echo "</div>";
}
?>


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY date_created DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . $row['rating'] . "/5</h3>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted by " . $row['username'] . " on " . $row['date_created'] . "</small><br>";
            
            // Display edit and delete buttons for the author
            if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $row['user_id']) {
                echo "<a href='edit_review.php?review_id=" . $row['review_id'] . "'>Edit</a> | ";
                echo "<a href='delete_review.php?review_id=" . $row['review_id'] . "'>Delete</a>";
            }
            
            // Display voting buttons
            display_vote_buttons($row['review_id']);
            
            echo "</div><hr>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to submit a new review
function submit_review($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a number between 1 and 5.";
    }
    
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, date_created)
            VALUES ('$product_id', '$user_id', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to edit an existing review
function edit_review($review_id, $new_rating, $new_comment) {
    global $conn;
    
    // Sanitize input
    $review_id = intval($review_id);
    $new_rating = intval($new_rating);
    $new_comment = mysqli_real_escape_string($conn, htmlspecialchars($new_comment));
    
    // Validate input
    if ($new_rating < 1 || $new_rating > 5) {
        return "Invalid rating. Please choose a number between 1 and 5.";
    }
    
    $sql = "UPDATE reviews SET rating = '$new_rating', comment = '$new_comment', last_updated = NOW()
            WHERE review_id = $review_id";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to delete a review
function delete_review($review_id) {
    global $conn;
    
    // Sanitize input
    $review_id = intval($review_id);
    
    $sql = "DELETE FROM reviews WHERE review_id = $review_id";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display voting buttons
function display_vote_buttons($review_id) {
    global $conn;
    
    // Check if user has already voted for this review
    if (isset($_SESSION['user_id'])) {
        $sql = "SELECT * FROM votes WHERE review_id = $review_id AND user_id = " . $_SESSION['user_id'];
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            // User has already voted
            echo "<small>Your vote: ";
            while ($row = mysqli_fetch_assoc($result)) {
                if ($row['vote'] == 1) {
                    echo "Helpful";
                } else {
                    echo "Not helpful";
                }
            }
            echo "</small>";
        } else {
            // Display voting buttons
            echo "<form method='post' action='submit_vote.php'>";
            echo "<input type='hidden' name='review_id' value='" . $review_id . "'>";
            echo "<button type='submit' name='vote' value='1'>Helpful</button>";
            echo "<button type='submit' name='vote' value='-1'>Not helpful</button>";
            echo "</form>";
        }
    } else {
        // User not logged in
        echo "<small><a href='login.php'>Log in</a> to vote.</small>";
    }
}

// Example usage:
if (isset($_GET['product_id'])) {
    display_reviews($_GET['product_id']);
}
?>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews';

$conn = mysqli_connect($host, $user, $password, $dbname);

// Function to submit a review
function submitReview($conn) {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize inputs
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review_text = mysqli_real_escape_string($conn, $_POST['review-text']);
        $rating = (int)$_POST['rating'];
        
        // Validate input
        if ($name == '' || $review_text == '' || $rating < 1 || $rating > 5) {
            die('Please fill in all fields correctly!');
        }
        
        // Insert into database
        $sql = "INSERT INTO reviews (user_id, name, review_text, rating, submission_date)
                VALUES ('".$_SESSION['user_id']."', '".$name."', '".$review_text."', ".$rating.", NOW())";
                
        if (!mysqli_query($conn, $sql)) {
            die('Error submitting review: ' . mysqli_error($conn));
        }
        
        // Redirect to product page after submission
        header("Location: ".$_SERVER['HTTP_REFERER']);
        exit();
    }
}

// Function to display reviews
function displayReviews($conn) {
    $id = $_GET['product_id']; // Assuming you're passing the product ID
    
    $sql = "SELECT * FROM reviews WHERE product_id = ".$id;
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review">';
            echo '<h3>' . $row['name'] . '</h3>';
            displayStars($row['rating']);
            echo '<p>' . $row['review_text'] . '</p>';
            echo '<small>Submitted on: ' . date('j F Y', strtotime($row['submission_date'])) . '</small>';
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet!</p>';
    }
}

// Function to display stars based on rating
function displayStars($rating) {
    $fullStars = (int)$rating;
    $halfStar = ($rating - floor($rating)) >= 0.5 ? 1 : 0;
    
    for ($i=0; $i<5; $i++) {
        if ($i < $fullStars) {
            echo '⭐';
        } elseif ($i == $fullStars && $halfStar) {
            echo '⯨'; // Half star
        } else {
            echo '☆';
        }
    }
}

// Function to calculate average rating
function getAverageRating($conn, $product_id) {
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ".$product_id;
    $result = mysqli_query($conn, $sql);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return round($row['average'], 1); // Round to one decimal place
    }
    return 0;
}

// Close database connection
mysqli_close($conn);
?>


<?php displayReviews($conn); ?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {
    // Sanitize input data
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['user_name']));
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['review_text']));
    $rating = intval($_POST['rating']);
    $product_id = intval($_POST['product_id']);

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, rating, review_text, created_at) 
            VALUES ('$product_id', '$user_name', '$rating', '$review_text', NOW())";

    if (mysqli_query($conn, $sql)) {
        echo "<p style='color: green'>Thank you for your review!</p>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Get reviews for product
function get_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            display_review($row);
        }
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
}

// Display individual review
function display_review($review_data) {
    $stars = str_repeat("★", $review_data['rating']) . str_repeat("☆", 5 - $review_data['rating']);
    
    echo "<div class='review-box'>";
    echo "<h3>By " . $review_data['user_name'] . "</h3>";
    echo "<p class='stars'>" . $stars . "</p>";
    echo "<p>" . $review_data['review_text'] . "</p>";
    echo "<small>Posted on: " . date('F j, Y', strtotime($review_data['created_at'])) . "</small>";
    echo "</div>";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .rating {
            margin: 10px 0;
        }
        
        .stars {
            color: #ffd700;
            font-size: 24px;
        }
        
        .review-box {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>

<h1>Product Reviews</h1>

<!-- Review submission form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="product_id" value="1">
    
    <div class="rating">
        <label for="rating">Rating:</label>
        <select id="rating" name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">★★★★★ - Excellent</option>
            <option value="4">★★★★☆ - Very Good</option>
            <option value="3">★★★☆☆ - Average</option>
            <option value="2">★★☆☆☆ - Poor</option>
            <option value="1">★☆☆☆☆ - Terrible</option>
        </select>
    </div>

    <div>
        <label for="user_name">Name:</label><br>
        <input type="text" id="user_name" name="user_name" required maxlength="50">
    </div>

    <div>
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" cols="50" required></textarea>
    </div>

    <input type="submit" name="submit_review" value="Submit Review">
</form>

<!-- Display existing reviews -->
<?php
$product_id = 1; // Example product ID
get_reviews($product_id);
?>

</body>
</html>


<?php
function displayUserReviews($productId, $numReviews = 5) {
    // Database connection parameters
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    try {
        // Create database connection
        $conn = new mysqli($servername, $username, $password, $dbname);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // SQL query to fetch reviews for the given product ID
        $sql = "SELECT user_name, rating, comment, review_date 
                FROM reviews 
                WHERE product_id = ? 
                ORDER BY review_date DESC 
                LIMIT ?";
        
        // Prepare and bind parameters
        $stmt = $conn->prepare($sql);
        if ($stmt === false) {
            throw new Exception("Prepare failed: " . $conn->error);
        }
        
        $stmt->bind_param("ii", $productId, $numReviews);

        // Execute the query
        $stmt->execute();
        
        // Get the result set
        $result = $stmt->get_result();

        // Check if there are any reviews
        if ($result->num_rows > 0) {
            echo "<div class='reviews-container'>";
            
            while ($row = $result->fetch_assoc()) {
                echo "<div class='review-item'>";
                echo "<div class='review-header'>";
                echo "<span class='user-name'>" . htmlspecialchars($row["user_name"]) . "</span>";
                echo "<span class='review-date'>" . $row["review_date"] . "</span>";
                echo "</div>";
                
                echo "<div class='rating'>Rating: " . $row["rating"] . " stars</div>";
                echo "<div class='comment'>" . htmlspecialchars($row["comment"]) . "</div>";
                echo "</div>";
            }
            
            echo "</div>";
        } else {
            echo "No reviews found for this product.";
        }

        // Close statement and connection
        $stmt->close();
        $conn->close();

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Example usage:
productId = 123;
displayUserReviews($productId, 5); // Display 5 reviews for product ID 123
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

try {
    $conn = new mysqli($host, $username, $password, $database);
    
    // Check connection
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Function to submit a review
    function submitReview($productId, $userId, $rating, $comment, $conn) {
        // Sanitize inputs
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Please select a rating between 1 and 5.");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, NOW())";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("iisi", $productId, $userId, $rating, $comment);
            
            if (!$stmt->execute()) {
                throw new Exception("Error submitting review: " . $stmt->error);
            }
            
            // Update average rating
            updateAverageRating($productId, $conn);
            
            return true;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to get all reviews for a product
    function getReviews($productId, $conn) {
        $sql = "SELECT r.*, u.username FROM reviews r 
                LEFT JOIN users u ON r.user_id = u.id 
                WHERE r.product_id = ?
                ORDER BY r.created_at DESC";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to get average rating
    function getAverageRating($productId, $conn) {
        $sql = "SELECT average_rating FROM average_ratings WHERE product_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            $result = $stmt->get_result()->fetch_assoc();
            
            return isset($result['average_rating']) ? number_format($result['average_rating'], 1) : 0;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to update average rating
    function updateAverageRating($productId, $conn) {
        $sql = "SELECT COUNT(*) as review_count, SUM(rating) as total_rating 
                FROM reviews WHERE product_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            $result = $stmt->get_result()->fetch_assoc();

            $average = $result['review_count'] > 0 ? 
                ($result['total_rating'] / $result['review_count']) : 0;

            // Update average ratings table
            $updateSql = "REPLACE INTO average_ratings (product_id, average_rating) 
                         VALUES (?, ?)";
            
            if ($updateStmt = $conn->prepare($updateSql)) {
                $updateStmt->bind_param("id", $productId, $average);
                return $updateStmt->execute();
            } else {
                throw new Exception("Error preparing update statement: " . $conn->error);
            }
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to edit a review
    function editReview($reviewId, $newRating, $newComment, $conn) {
        $newRating = intval($newRating);
        $newComment = mysqli_real_escape_string($conn, htmlspecialchars($newComment));

        if ($newRating < 1 || $newRating > 5) {
            throw new Exception("Invalid rating. Please select a rating between 1 and 5.");
        }

        // Update review in database
        $sql = "UPDATE reviews SET rating = ?, comment = ?, updated_at = NOW() 
                WHERE review_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("iis", $newRating, $newComment, $reviewId);
            
            if (!$stmt->execute()) {
                throw new Exception("Error updating review: " . $stmt->error);
            }
            
            // Update average rating
            $productId = getProductIdFromReview($reviewId, $conn);
            updateAverageRating($productId, $conn);
            
            return true;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to delete a review
    function deleteReview($reviewId, $conn) {
        // Delete review from database
        $sql = "DELETE FROM reviews WHERE review_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $reviewId);
            
            if (!$stmt->execute()) {
                throw new Exception("Error deleting review: " . $stmt->error);
            }
            
            // Update average rating
            $productId = getProductIdFromReview($reviewId, $conn);
            updateAverageRating($productId, $conn);
            
            return true;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Helper function to get product ID from review
    function getProductIdFromReview($reviewId, $conn) {
        $sql = "SELECT product_id FROM reviews WHERE review_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $reviewId);
            $stmt->execute();
            return $stmt->get_result()->fetch_assoc()['product_id'];
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to count reviews
    function countReviews($productId, $conn) {
        $sql = "SELECT COUNT(*) as review_count FROM reviews WHERE product_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            return $stmt->get_result()->fetch_assoc()['review_count'];
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to validate and sanitize input data
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Function to insert a new review into the database
function submitReview($name, $email, $rating, $comment) {
    global $conn;

    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment, timestamp) 
                              VALUES (:name, :email, :rating, :comment, NOW())");
        
        // Bind parameters to the placeholders
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Error inserting review into database");
        }
    } catch(PDOException $e) {
        throw new Exception("Database error: " . $e->getMessage());
    }
}

// Function to validate user input before submitting
function validateReview($formData) {
    $errors = array();

    // Validate name
    if (empty($formData['name'])) {
        $errors[] = 'Name is required';
    } elseif (!preg_match('/^[a-zA-Z\s]+$/', $formData['name'])) {
        $errors[] = 'Invalid characters in name. Only letters and spaces are allowed.';
    }

    // Validate email
    if (empty($formData['email']) || !filter_var($formData['email'], FILTER_VALIDATE_EMAIL)) {
        $errors[] = 'Please enter a valid email address';
    }

    // Validate rating
    if (!isset($formData['rating']) || !ctype_digit((string)$formData['rating']) || 
        ($formData['rating'] < 1 || $formData['rating'] > 5)) {
        $errors[] = 'Rating must be between 1 and 5';
    }

    // Validate comment
    if (empty($formData['comment'])) {
        $errors[] = 'Please write your review/comment';
    } elseif (strlen($formData['comment']) < 10) {
        $errors[] = 'Comment must be at least 10 characters long';
    } elseif (preg_match('/(spam|admin)/i', $formData['comment'])) {
        $errors[] = 'Inappropriate content detected in comment';
    }

    return $errors;
}

// Function to display all reviews
function displayReviews() {
    global $conn;

    try {
        // Query the database for all reviews
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY timestamp DESC");
        
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo '<div class="review">';
            echo '<h3>' . validateInput($row['name']) . '</h3>';
            echo '<p>' . validateInput($row['comment']) . '</p>';
            
            // Display stars
            echo '<div class="rating">';
            for ($i = 1; $i <= $row['rating']; $i++) {
                echo '<span class="star">★</span>';
            }
            for ($i = 1; $i <= (5 - $row['rating']); $i++) {
                echo '<span class="star">☆</span>';
            }
            echo '</div>';
            
            // Display timestamp
            echo '<small>' . date('F j, Y g:i a', strtotime($row['timestamp'])) . '</small>';
            echo '</div>';
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}
?>


<?php
require_once 'review-functions.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $formData = array(
        'name' => validateInput($_POST['name']),
        'email' => validateInput($_POST['email']),
        'rating' => intval($_POST['rating']),
        'comment' => validateInput($_POST['comment'])
    );

    // Validate the form data
    $errors = validateReview($formData);

    if (empty($errors)) {
        try {
            submitReview($formData['name'], $formData['email'], 
                        $formData['rating'], $formData['comment']);
            echo '<p class="success">Thank you for your review!</p>';
        } catch(Exception $e) {
            die('<p class="error">' . $e->getMessage() . '</p>');
        }
    } else {
        foreach ($errors as $error) {
            echo '<p class="error">' . $error . '</p>';
        }
    }
}
?>


<?php require_once 'review-functions.php'; ?>
<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .star { color: gold; }
    </style>
</head>
<body>
    <?php displayReviews(); ?>
</body>
</html>


<?php
// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $rating, $comment, $conn) {
    global $connection;
    
    // Escape the inputs to prevent SQL injection
    $name = mysqli_real_escape_string($connection, $name);
    $rating = mysqli_real_escape_string($connection, $rating);
    $comment = mysqli_real_escape_string($connection, $comment);
    
    // Insert the review into the database
    $sql = "INSERT INTO reviews (user_name, rating, comment, timestamp) 
            VALUES ('$name', '$rating', '$comment', NOW())";
    if (!mysqli_query($connection, $sql)) {
        die("Error inserting review: " . mysqli_error($connection));
    }
}

// Function to display all reviews
function displayReviews($conn) {
    global $connection;
    
    // Fetch all reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($connection, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Validate input
    if (empty($name) || empty($comment)) {
        echo "Please fill in all required fields!";
    } else if (!ctype_digit($rating) || $rating < 1 || $rating > 5) {
        echo "Please select a valid rating between 1 and 5!";
    } else {
        addReview($name, $rating, $comment, $connection);
    }
}

// Display the review form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px 0;
        }
        .review {
            margin: 15px 0;
            padding: 10px;
            border-bottom: 1px dotted #ccc;
        }
    </style>
</head>
<body>

<div class="review-box">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name"><br><br>
        
        <label for="rating">Rating (1-5):</label><br>
        <select id="rating" name="rating">
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br><br>
        
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4"></textarea><br><br>
        
        <input type="submit" value="Submit Review">
    </form>
</div>

<h2>Previous Reviews</h2>
<?php displayReviews($connection); ?>

</body>
</html>

// Close the database connection
mysqli_close($connection);
?>


$connection = mysqli_connect("localhost", "username", "password", "database_name");


<?php
// Function to handle and display user reviews
function userReviewSystem() {
    // Review data array
    $reviews = [];
    
    // Check if review form has been submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);
        
        // Validate input
        if ($name == "" || $email == "" || $rating < 1 || $rating > 5 || $comment == "") {
            echo "Please fill in all fields with valid information!";
            exit;
        }
        
        // Create review array
        $review = [
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => date('Y-m-d H:i:s')
        ];
        
        // Load existing reviews from file
        if (file_exists('reviews.json')) {
            $json_data = file_get_contents('reviews.json');
            $reviews = json_decode($json_data, true);
        }
        
        // Add new review
        array_unshift($reviews, $review); // Add to beginning of array
        
        // Save reviews back to file
        $json_output = json_encode($reviews, JSON_PRETTY_PRINT);
        file_put_contents('reviews.json', $json_output);
    }
    
    // Load existing reviews from file
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);
    }
    
    // Display review form
    ?>
    <div class="review-container">
        <h2>Submit a Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name"><br><br>
            
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email"><br><br>
            
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select><br><br>
            
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5"></textarea><br><br>
            
            <input type="submit" value="Submit Review">
        </form>
        
        <?php if (!empty($reviews)): ?>
            <h2>Reviews</h2>
            <div class="review-list">
                <?php foreach ($reviews as $review): ?>
                    <div class="review-item">
                        <div class="review-header">
                            <span class="review-name"><?php echo $review['name']; ?></span>
                            <div class="review-stars">
                                <?php 
                                for ($i = 1; $i <= $review['rating']; $i++) {
                                    echo '<span class="star">★</span>';
                                }
                                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                                    echo '<span class="star">☆</span>';
                                }
                                ?>
                            </div>
                        </div>
                        <p><?php echo $review['comment']; ?></p>
                        <small><?php echo $review['timestamp']; ?></small>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </div>
    
    <style>
        .review-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        
        h2 {
            color: #333;
            border-bottom: 2px solid #ddd;
            padding-bottom: 10px;
        }
        
        form {
            margin-bottom: 30px;
        }
        
        input[type="text"], input[type="email"], textarea, select {
            width: 100%;
            padding: 8px;
            margin: 5px 0 20px 0;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        
        .review-list {
            margin-top: 20px;
        }
        
        .review-item {
            border-bottom: 1px solid #ddd;
            padding: 15px 0;
        }
        
        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        
        .star {
            color: #FFD700;
            font-size: 24px;
        }
        
        small {
            color: #666;
            display: block;
            margin-top: 5px;
        }
    </style>
    <?php
}

// Call the review system function
userReviewSystem();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'review_system';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submit_review($user_id, $product_id, $rating, $comment, $conn) {
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Validate input
    if (!isset($user_id) || !isset($product_id) || !isset($rating) || !isset($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Check if user exists
    $check_user = mysqli_query($conn, "SELECT id FROM users WHERE id='$user_id'");
    if (!$check_user->num_rows > 0) {
        return "Invalid user ID!";
    }

    // Check if product exists
    $check_product = mysqli_query($conn, "SELECT id FROM products WHERE id='$product_id'");
    if (!$check_product->num_rows > 0) {
        return "Invalid product ID!";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

function get_reviews($product_id, $conn, $limit = 10, $offset = 0) {
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Get reviews for a specific product
    $sql = "SELECT r.*, u.username 
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE r.product_id = '$product_id'
            ORDER BY created_at DESC
            LIMIT $offset, $limit";

    $result = $conn->query($sql);
    $reviews = array();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $review = array(
                'id' => $row['id'],
                'user_id' => $row['user_id'],
                'username' => $row['username'],
                'product_id' => $row['product_id'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'created_at' => date('F j, Y g:i a', strtotime($row['created_at']))
            );
            array_push($reviews, $review);
        }
        return $reviews;
    } else {
        return "No reviews found!";
    }
}

// Example usage:

// Submit review
$user_id = 1;
$product_id = 1;
$rating = 5;
$comment = "Great product! Highly recommended.";

echo submit_review($user_id, $product_id, $rating, $comment, $conn);

// Get reviews for product ID 1
$reviews = get_reviews(1, $conn);
if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "Rating: " . $review['rating'] . "<br>";
        echo "Comment: " . $review['comment'] . "<br>";
        echo "Posted by: " . $review['username'] . "<br>";
        echo "Date: " . $review['created_at'] . "<br><br>";
    }
} else {
    echo $reviews;
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a user review
function createReview($reviewId, $userId, $rating, $comment, $timestamp = null) {
    global $conn;

    // If timestamp is not provided, use current time
    if ($timestamp === null) {
        $timestamp = date('Y-m-d H:i:s');
    }

    try {
        // Start a transaction
        $conn->begin_transaction();

        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (review_id, user_id, rating, comment, timestamp) VALUES (?, ?, ?, ?, ?)");
        
        if ($stmt === false) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("issss", $reviewId, $userId, $rating, $comment, $timestamp);

        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $stmt->error);
        }

        // Close the statement
        $stmt->close();

        // Commit the transaction
        $conn->commit();

        return true;

    } catch (Exception $e) {
        // Rollback on error
        $conn->rollback();
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
$reviewId = 12345; // Replace with actual review ID
$userId = 67890;   // Replace with actual user ID
$rating = 4;       // Rating between 1-5, for example
$comment = "This is a great product!"; 

if (createReview($reviewId, $userId, $rating, $comment)) {
    echo "Review created successfully!";
} else {
    echo "Failed to create review.";
}

// Close the database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviewdb";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Submit review function
function submitReview($conn) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $username = htmlspecialchars($_POST['username']);
        $rating = intval($_POST['rating']);
        $comments = htmlspecialchars($_POST['comments']);
        
        // Check if all fields are filled
        if (empty($username) || empty($rating) || empty($comments)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comments, submission_date)
                VALUES ('$username', '$rating', '$comments', CURRENT_TIMESTAMP)";
        
        if (mysqli_query($conn, $sql)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Display reviews function
function displayReviews($conn) {
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Reviewer: " . $row['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>Comments: " . $row['comments'] . "</p>";
            echo "<p>Submitted on: " . date('jS M Y, g:i a', strtotime($row['submission_date'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Calculate average rating function
function averageRating($conn) {
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    $average = round($row['average'], 1);
    echo "Average Rating: " . str_repeat("★", floor($average)) . (($average - floor($average)) >= 0.5 ? "½" : "") . str_repeat("☆", 5 - ceil($average));
}

// Close database connection
mysqli_close($conn);
?>


submitReview($conn);


displayReviews($conn);


averageRating($conn);


<?php
function process_review($connection) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $review_id = isset($_POST['review_id']) ? $_POST['review_id'] : '';
        $review_text = htmlspecialchars(trim($_POST['review_text']));
        $rating = intval($_POST['rating']);
        $reviewer_name = htmlspecialchars(trim($_POST['reviewer_name']));

        // Determine if we're adding a new review or editing an existing one
        if ($review_id == '') {
            // Insert new review
            $sql = "INSERT INTO reviews (review_text, rating, reviewer_name) 
                    VALUES ('$review_text', '$rating', '$reviewer_name')";
        } else {
            // Update existing review
            $sql = "UPDATE reviews SET review_text='$review_text', rating='$rating', reviewer_name='$reviewer_name' 
                    WHERE id='$review_id'";
        }

        // Execute query
        if ($connection->query($sql) === TRUE) {
            $response = array(
                'status' => 'success',
                'message' => 'Review processed successfully!'
            );
            if ($review_id == '') {
                // Get the last inserted ID for new reviews
                $last_id = $connection->insert_id;
                $response['review_id'] = $last_id;
            } else {
                $response['review_id'] = $review_id;
            }
            return json_encode($response);
        } else {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Error processing review: ' . $connection->error
            ));
        }
    } else {
        // Return error if form not submitted
        return json_encode(array(
            'status' => 'error',
            'message' => 'No review data submitted.'
        ));
    }
}

// Example usage:
// 1. Connect to database
$connection = new mysqli("localhost", "username", "password", "database");

// Check connection
if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// 2. Process review
$result = process_review($connection);

// 3. Output result
echo $result;

// Close connection
$connection->close();
?>


<?php
// Include database configuration
include('config.php');

function add_review($rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate input
    if (!isset($rating) || !isset($comment)) {
        die("Please fill in all required fields.");
    }
    
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5.");
    }
    
    // Insert review into database
    $query = "INSERT INTO reviews (rating, comment) VALUES ('$rating', '$comment')";
    mysqli_query($conn, $query);
}

function display_reviews() {
    global $conn;
    
    // Get all reviews from the database
    $query = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        echo "<h2>Customer Reviews</h2>";
        while ($row = mysqli_fetch_assoc($result)) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $created_at = $row['created_at'];
            
            // Display rating stars
            echo "<div class='review'>";
            echo "<p>Rating: ";
            for ($i = 1; $i <= $rating; $i++) {
                echo "⭐";
            }
            echo "</p>";
            echo "<p>Comment: $comment</p>";
            echo "<small>Posted on: $created_at</small>";
            echo "</div><br>";
        }
        
        // Calculate and display average rating
        $avg_query = "SELECT AVG(rating) AS avg_rating FROM reviews";
        $avg_result = mysqli_query($conn, $avg_query);
        $row = mysqli_fetch_assoc($avg_result);
        $avg_rating = number_format($row['avg_rating'], 1);
        
        echo "<h3>Average Rating: $avg_rating/5</h3>";
    } else {
        echo "No reviews found.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL,
    rating INT NOT NULL,
    comment TEXT NOT NULL,
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

$conn->query($sql);

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $user_name = trim(htmlspecialchars($_POST['name']));
        $rating = intval($_POST['rating']);
        $comment = trim(htmlspecialchars($_POST['comment']));

        // Validate input
        if ($user_name == "" || $comment == "") {
            echo "Please fill in all required fields.";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars.";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, rating, comment)
                VALUES ('$user_name', '$rating', '$comment')";
                
        if ($conn->query($sql)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Calculate average rating
        $avg_rating_sql = "SELECT AVG(rating) as avg_rating FROM reviews";
        $avg_result = $conn->query($avg_rating_sql);
        $row = $avg_result->fetch_assoc();
        $average_rating = round($row['avg_rating'], 1);

        echo "<div class='review-stats'>";
        echo "<h2>Average Rating: " . $average_rating . "/5</h2>";
        echo "</div>";

        // Display each review
        while ($row = $result->fetch_assoc()) {
            $stars = str_repeat('<span class="star">★</span>', $row['rating']);
            if (strpos($stars, '★') === false) {
                // No rating stars if rating is 0
            } else {
                echo "<div class='review'>";
                echo "<h3>Reviewer: " . $row['user_name'] . "</h3>";
                echo "<p class='rating'>Rating: " . str_repeat('<span class="star">★</span>', $row['rating']) . "</p>";
                if ($row['rating'] == 5) {
                    // Add some text for perfect rating
                }
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Submitted on: " . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
                echo "</div>";
            }
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
$conn->close();
?>


<?php
function submitReview($userId, $productId, $rating, $reviewText) {
    // Database configuration
    $host = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbName = "reviews_db";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // Start transaction
        mysqli_begin_transaction($conn);
        
        // Check if user has already reviewed this product
        $checkReviewQuery = "SELECT review_id FROM reviews WHERE user_id = ? AND product_id = ?";
        $stmtCheck = mysqli_prepare($conn, $checkReviewQuery);
        mysqli_stmt_bind_param($stmtCheck, "ii", $userId, $productId);
        mysqli_stmt_execute($stmtCheck);
        
        // Get result
        $result = mysqli_stmt_get_result($stmtCheck);
        $existingReview = mysqli_fetch_assoc($result);

        if ($existingReview) {
            // User already reviewed this product
            return "You have already reviewed this product.";
        } else {
            // Insert new review
            $insertReviewQuery = "INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)
                                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
            
            $stmtInsert = mysqli_prepare($conn, $insertReviewQuery);
            mysqli_stmt_bind_param($stmtInsert, "iisi", $userId, $productId, $rating, $reviewText);
            
            if (mysqli_stmt_execute($stmtInsert)) {
                // Commit the transaction
                mysqli_commit($conn);
                return "Review submitted successfully!";
            } else {
                // Rollback on error
                mysqli_rollback($conn);
                return "Error submitting review: " . mysqli_error($conn);
            }
        }

    } catch (Exception $e) {
        // Rollback on exception
        mysqli_rollback($conn);
        return "An error occurred while processing your review. Please try again later.";
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}
?>


$userId = 123;
$productId = 456;
$rating = 5;
$reviewText = "This is an excellent product!";

$result = submitReview($userId, $productId, $rating, $reviewText);
echo $result;


<?php
session_start();
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Error messages
$errors = [];

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Sanitize and validate input data
    $user_name = mysqli_real_escape_string($conn, trim($_POST['name']));
    $review_text = mysqli_real_escape_string($conn, trim($_POST['review']));
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;

    // Input validation
    if (empty($user_name)) {
        $errors[] = "Please enter your name.";
    }
    if (empty($review_text)) {
        $errors[] = "Please write a review.";
    }
    if ($rating < 1 || $rating > 5) {
        $errors[] = "Please select a rating between 1 and 5 stars.";
    }

    // If no errors, insert into database
    if (empty($errors)) {
        $sql = "INSERT INTO reviews (user_name, review_text, rating)
                VALUES ('$user_name', '$review_text', '$rating')";
        
        if (!mysqli_query($conn, $sql)) {
            $errors[] = "Error submitting your review. Please try again.";
        } else {
            // Clear previous errors
            unset($_SESSION['errors']);
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    } else {
        $_SESSION['errors'] = $errors;
    }
}

// Get all reviews from database
$sql_reviews = "SELECT * FROM reviews ORDER BY created_at DESC";
$result = mysqli_query($conn, $sql_reviews);
$reviews = [];
if ($result) {
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .stars {
            display: flex;
            gap: 5px;
            font-size: 24px;
        }
        input[type="radio"] {
            display: none;
        }
        label.star {
            cursor: pointer;
            color: #ddd;
        }
        label.star:hover,
        label.star.active {
            color: gold;
        }
        .review-list {
            margin-top: 30px;
        }
        .single-review {
            border-bottom: 1px solid #eee;
            padding: 20px 0;
        }
    </style>
</head>
<body>
    <?php if (isset($_SESSION['errors']) && !empty($_SESSION['errors'])) : ?>
        <div style="color: red; margin-bottom: 20px;">
            <?php foreach ($_SESSION['errors'] as $error) : ?>
                <?php echo $error; ?><br>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <!-- Review Form -->
    <form class="review-form" method="post">
        <h2>Submit Your Review</h2>
        
        <div class="stars">
            <input type="radio" name="rating" id="5-stars" value="5">
            <label for="5-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="4-stars" value="4">
            <label for="4-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="3-stars" value="3">
            <label for="3-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="2-stars" value="2">
            <label for="2-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="1-star" value="1" checked>
            <label for="1-star" class="star">★</label>
        </div>

        <input type="text" name="name" placeholder="Enter your name" required>
        
        <textarea name="review" placeholder="Write your review..." rows="4" required></textarea>
        
        <button type="submit">Submit Review</button>
    </form>

    <!-- Reviews List -->
    <?php if (!empty($reviews)) : ?>
        <div class="review-list">
            <h2>Customer Reviews</h2>
            <?php foreach ($reviews as $review) : ?>
                <div class="single-review">
                    <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>
                    
                    <div class="stars">
                        <?php for ($i = 1; $i <= $review['rating']; $i++) : ?>
                            <span style="color: gold;">★</span>
                        <?php endfor; ?>
                        <?php for ($i = 1; $i <= (5 - $review['rating']); $i++) : ?>
                            <span>★</span>
                        <?php endfor; ?>
                    </div>

                    <p><?php echo htmlspecialchars($review['review_text']); ?></p>
                    
                    <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
                </div>
            <?php endforeach; ?>

            <!-- Calculate and display average rating -->
            <?php
            $averageRating = 0;
            $totalRatings = count($reviews);
            
            if ($totalRatings > 0) {
                $sum = array_sum(array_column($reviews, 'rating'));
                $averageRating = $sum / $totalRatings;
            }
            ?>

            <div class="average-rating">
                <h3>Average Rating: <?php echo number_format($averageRating, 1); ?>/5</h3>
                
                <div class="stars average-stars">
                    <?php $averageFullStars = floor($averageRating); ?>
                    <?php for ($i = 1; $i <= $averageFullStars; $i++) : ?>
                        <span style="color: gold;">★</span>
                    <?php endfor; ?>

                    <?php if ($averageRating - $averageFullStars > 0) : ?>
                        <span>⯨</span>
                    <?php endif; ?>

                    <?php for ($i = 1; $i <= (5 - ceil($averageRating)); $i++) : ?>
                        <span>★</span>
                    <?php endfor; ?>
                </div>
            </div>
        </div>
    <?php else : ?>
        <p>No reviews yet. Be the first to review this product!</p>
    <?php endif; ?>

    <!-- Close database connection -->
    <?php mysqli_close($conn); ?>
</body>
</html>


<?php
// Function to display the review form
function display_review_form() {
    // Display the HTML form
    echo '
        <form method="post" action="submit_review.php">
            <div class="review-form">
                <h2>Write a Review</h2>
                <input type="text" name="title" placeholder="Review Title" required>
                <textarea name="content" placeholder="Write your review here..." required></textarea>
                <div class="rating">
                    <label for="rating">Rating:</label>
                    <select name="rating" id="rating">
                        <option value="5">5 Stars</option>
                        <option value="4">4 Stars</option>
                        <option value="3">3 Stars</option>
                        <option value="2">2 Stars</option>
                        <option value="1">1 Star</option>
                    </select>
                </div>
                <button type="submit" name="submit_review">Submit Review</button>
            </div>
        </form>
    ';
}

// Function to submit a review
function submit_review($title, $content, $rating) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs
    $title = mysqli_real_escape_string($conn, htmlspecialchars($title));
    $content = mysqli_real_escape_string($conn, htmlspecialchars($content));
    $rating = intval($rating);
    
    // Validate inputs
    if (strlen($title) < 1 || strlen($title) > 200) {
        die("Title must be between 1 and 200 characters.");
    }
    
    if (strlen($content) < 1) {
        die("Review content cannot be empty.");
    }
    
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5 stars.");
    }
    
    // Get user ID from session
    if (!isset($_SESSION['user_id'])) {
        die("Please login to submit a review.");
    }
    $user_id = $_SESSION['user_id'];
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, title, content, rating, submission_date)
            VALUES ('$user_id', '$title', '$content', '$rating', NOW())";
    
    if (!mysqli_query($conn, $sql)) {
        die("Error submitting review: " . mysqli_error($conn));
    }
    
    // Close database connection
    mysqli_close($conn);
    
    header("Location: thank_you.php");
    exit();
}

// Function to display reviews from the database
function display_reviews() {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Get all reviews ordered by submission date
    $sql = "SELECT r.*, u.username FROM reviews r
            JOIN users u ON r.user_id = u.id
            ORDER BY r.submission_date DESC";
    
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Error fetching reviews: " . mysqli_error($conn));
    }
    
    // Display each review
    while ($row = mysqli_fetch_assoc($result)) {
        echo '
            <div class="review">
                <h3>' . htmlspecialchars($row['title']) . '</h3>
                <p>By ' . htmlspecialchars($row['username']) . ' - ' .
                    date('F j, Y', strtotime($row['submission_date'])) . '</p>
                <div class="stars">' . get_stars($row['rating']) . '</div>
                <p>' . nl2br(htmlspecialchars($row['content'])) . '</p>
            </div>
        ';
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Helper function to display stars based on rating
function get_stars($rating) {
    $stars = '';
    for ($i = 1; $i <= $rating; $i++) {
        $stars .= '★';
    }
    return $stars;
}
?>


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($user_id, $product_id, $rating, $review_text) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, created_at) 
            VALUES ('$user_id', '$product_id', '$rating', '$review_text', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function getProductReviews($product_id) {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get all reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return number_format((float)$row['average_rating'], 1, '.', '');
    } else {
        return 0;
    }
}

// Function to display star rating
function displayStars($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★";
        } else {
            $stars .= "☆";
        }
    }
    return $stars;
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .rating-stars {
            color: gold;
            font-size: 24px;
        }
        
        .review-form input[type="text"],
        .review-form textarea {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <?php
    // Display review form
    if (isset($_GET['product_id'])) {
        $product_id = $_GET['product_id'];
        
        echo "<h2>Write a Review for Product #" . $product_id . "</h2>";
        echo "<form method='post' action='submit_review.php'>";
        echo "<input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<label>Your Name:</label><br>";
        echo "<input type='text' name='user_name' required><br>";
        echo "<label>Email:</label><br>";
        echo "<input type='email' name='email' required><br>";
        echo "<label>Rating:</label><br>";
        for ($i = 1; $i <= 5; $i++) {
            echo "<input type='radio' name='rating' value='" . $i . "'>" . $i . " Stars<br>";
        }
        echo "<br><label>Review:</label><br>";
        echo "<textarea name='review_text' rows='4' required></textarea><br>";
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
    }
    
    // Display reviews
    if (isset($_GET['product_id'])) {
        $reviews = getProductReviews($product_id);
        
        if ($reviews) {
            while ($row = mysqli_fetch_assoc($reviews)) {
                echo "<div class='review-container'>";
                echo "<h3>" . $row['user_name'] . "</h3>";
                echo "<p class='rating-stars'>" . displayStars($row['rating']) . "</p>";
                echo "<p>" . $row['review_text'] . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small><br>";
                echo "<div class='helpful'><button onclick=\"incrementHelpful(" . $row['id'] . ")\"> Helpful (" . $row['helpful_count'] . ") </button></div>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews available for this product.</p>";
        }
    }
    
    // Display average rating
    if (isset($_GET['product_id'])) {
        $average_rating = getAverageRating($product_id);
        echo "<h3> Average Rating: " . $average_rating . "/5 </h3>";
    }
    ?>

    <script>
        function incrementHelpful(review_id) {
            // Implement helpful count functionality here
            alert('Thank you for your feedback!');
        }
    </script>
</body>
</html>


<?php
// Initialize reviews array (you would typically use a database in a real application)
$reviews = array();

function handleReviews($action, $username = "", $rating = 0, $comment = "") {
    global $reviews;
    
    switch ($action) {
        case "submit":
            // Add new review to the array
            $review_id = count($reviews); // Simple ID system using count
            $new_review = array(
                "id" => $review_id,
                "username" => $username,
                "rating" => $rating,
                "comment" => $comment,
                "date" => date("Y-m-d H:i:s")
            );
            array_push($reviews, $new_review);
            break;
            
        case "display":
            // Display all reviews
            if (empty($reviews)) {
                echo "<p>No reviews yet!</p>";
            } else {
                echo "<div class='review-list'>";
                foreach ($reviews as $review) {
                    echo "<div class='review'>";
                    echo "<h4>Rating: {$review['rating']} stars</h4>";
                    echo "<p><strong>{$review['username']}</strong></p>";
                    echo "<p>{$review['comment']}</p>";
                    echo "<small>Posted on {$review['date']}</small>";
                    echo "</div>";
                }
                echo "</div>";
                
                // Display average rating
                $average_rating = calculateAverageRating();
                echo "<div class='average-rating'>";
                echo "Average Rating: $average_rating stars";
                echo "</div>";
            }
            break;
            
        case "delete":
            // Delete a review by username
            foreach ($reviews as $key => $review) {
                if ($review['username'] == $username) {
                    unset($reviews[$key]);
                    array_values($reviews); // Re-index the array
                }
            }
            break;
    }
}

function calculateAverageRating() {
    global $reviews;
    
    if (empty($reviews)) {
        return 0;
    } else {
        $total_ratings = array_sum(array_column($reviews, 'rating'));
        $average_rating = $total_ratings / count($reviews);
        return number_format($average_rating, 1); // Round to one decimal place
    }
}

// Example usage:
// Submit a new review
handleReviews("submit", "JohnDoe", 5, "Great product! Highly recommended.");

// Display all reviews with average rating
echo "<h2>Product Reviews</h2>";
handleReviews("display");

// Delete a review by username
handleReviews("delete", "JohnDoe");
?>



// Submit a new review
handleReviews("submit", "JaneSmith", 4, "Good product but could be better.");

// Display all reviews
echo "<h2>Product Reviews</h2>";
handleReviews("display");

// Delete a specific review
handleReviews("delete", "JaneSmith");


<?php
function createReview($reviewed_user_id, $reviewer_id, $rating, $feedback, $db) {
    try {
        // Check if any fields are empty
        if (empty($reviewed_user_id) || empty($reviewer_id) || empty($rating)) {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Please fill in all required fields'
            ));
        }

        // Validate rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Rating must be between 1 and 5'
            ));
        }

        // Ensure users cannot review themselves
        if ($reviewed_user_id == $reviewer_id) {
            return json_encode(array(
                'status' => 'error',
                'message' => 'You cannot review yourself'
            ));
        }

        // Insert the new review into the database
        $query = "INSERT INTO reviews (reviewed_user_id, reviewer_id, rating, feedback, timestamp)
                  VALUES (:reviewed_user_id, :reviewer_id, :rating, :feedback, NOW())";
        
        $stmt = $db->prepare($query);
        $stmt->bindParam(':reviewed_user_id', $reviewed_user_id);
        $stmt->bindParam(':reviewer_id', $reviewer_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':feedback', $feedback);

        if ($stmt->execute()) {
            return json_encode(array(
                'status' => 'success',
                'message' => 'Review submitted successfully',
                'data' => array(
                    'reviewed_user_id' => $reviewed_user_id,
                    'reviewer_id' => $reviewer_id,
                    'rating' => $rating,
                    'feedback' => $feedback
                )
            ));
        } else {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Error submitting review'
            ));
        }

    } catch (PDOException $e) {
        // Rollback the transaction if something goes wrong
        $db->rollBack();
        return json_encode(array(
            'status' => 'error',
            'message' => 'Database error: ' . $e->getMessage()
        ));
    }
}
?>


// Example usage:
$reviewed_user_id = 1;
$reviewer_id = 2;
$rating = 5;
$feedback = "Great service!";
$db = new PDO(...);

$result = createReview($reviewed_user_id, $reviewer_id, $rating, $feedback, $db);
echo $result;


<?php
// Function to create a user review form and display existing reviews
function userReview() {
    // Check if the form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = htmlspecialchars($_POST['name']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);
        
        // Create an array with review details
        $review = [
            'name' => $name,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => date('Y-m-d H:i:s')
        ];
        
        // Save the review to a text file
        $file = fopen("reviews.txt", "a");
        fwrite($file, json_encode($review) . "
");
        fclose($file);
    }

    // Display existing reviews
    echo '<div class="review-container">';
    
    // Check if the reviews file exists
    if (file_exists("reviews.txt") && filesize("reviews.txt") > 0) {
        $lines = file("reviews.txt");
        
        foreach ($lines as $line) {
            $review = json_decode($line);
            
            echo '<div class="single-review">';
            echo '<h3>' . $review->name . '</h3>';
            echo '<p>Rating: ' . str_repeat('★', $review->rating) . '</p>';
            echo '<p>' . $review->comment . '</p>';
            echo '<small>' . $review->timestamp . '</small>';
            echo '</div>';
        }
    } else {
        echo '<p>No reviews have been submitted yet.</p>';
    }
    
    echo '</div>';
    
    // Display the review form
    echo '<div class="review-form">';
    echo '<h2>Submit a Review</h2>';
    echo '<form method="post" action="' . $_SERVER['PHP_SELF'] . '">';
    echo '<label for="name">Name:</label><br>';
    echo '<input type="text" id="name" name="name" required><br>';
    echo '<label for="rating">Rating (1-5):</label><br>';
    echo '<select id="rating" name="rating">';
    for ($i = 1; $i <= 5; $i++) {
        echo '<option value="' . $i . '">' . $i . ' Star' . ($i != 1 ? 's' : '') . '</option>';
    }
    echo '</select><br>';
    echo '<label for="comment">Comment:</label><br>';
    echo '<textarea id="comment" name="comment" required></textarea><br>';
    echo '<input type="submit" value="Submit Review">';
    echo '</form>';
    echo '</div>';
}

// Add some basic styling
echo '<style>
.review-container {
    background: #f5f5f5;
    padding: 20px;
    margin-bottom: 20px;
}
.single-review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 15px;
}
.review-form {
    background: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}
input, select, textarea {
    width: 100%;
    margin-bottom: 10px;
    padding: 8px;
    border: 1px solid #ddd;
}
</style>';
?>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate inputs
    if (empty($_POST['rating']) || empty($_POST['comment'])) {
        $error = "Please fill in all required fields!";
    } else {
        $rating = $_POST['rating'];
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);
        $user_id = 1; // Replace with actual user ID

        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, rating, comment) 
                VALUES ('$user_id', '$rating', '$comment')";

        if (mysqli_query($conn, $sql)) {
            $success = "Thank you for submitting your review!";
            header("Refresh: 2; url=reviews.php");
        } else {
            $error = "Error submitting review: " . mysqli_error($conn);
        }
    }
}

// Get all reviews
$sql_reviews = "SELECT * FROM reviews ORDER BY id DESC";
$result = mysqli_query($conn, $sql_reviews);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
            color: gold;
        }
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .review-box {
            background-color: #f9f9f9;
            padding: 15px;
            margin: 10px 0;
            border-radius: 3px;
        }
        .success, .error {
            padding: 10px;
            margin: 10px 0;
            border-radius: 3px;
        }
        .success { background-color: #dff0d8; color: #3c763d; }
        .error { background-color: #f2dede; color: #a94442; }
    </style>
</head>
<body>

<h1>Review System</h1>

<?php
if (isset($success)) {
    echo "<div class='success'>" . $success . "</div>";
}
if (isset($error)) {
    echo "<div class='error'>" . $error . "</div>";
}

// Display review form
?>

<div class="review-form">
    <h2>Submit Your Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="rating">Rating:</label><br>
            <select name="rating" id="rating">
                <option value="">Please select a rating</option>
                <option value="5">5 Stars (Excellent)</option>
                <option value="4">4 Stars (Very Good)</option>
                <option value="3">3 Stars (Average)</option>
                <option value="2">2 Stars (Poor)</option>
                <option value="1">1 Star (Terrible)</option>
            </select>
        </div><br>

        <div>
            <label for="comment">Review:</label><br>
            <textarea name="comment" id="comment" rows="5"></textarea>
        </div><br>

        <button type="submit">Submit Review</button>
    </form>
</div>

<br>

<h2>Reviews</h2>

<?php
if (mysqli_num_rows($result) > 0) {
    // Display average rating
    $avg_rating_sql = "SELECT AVG(rating) as avg_rating FROM reviews";
    $avg_result = mysqli_query($conn, $avg_rating_sql);
    $avg_row = mysqli_fetch_assoc($avg_result);
    
    echo "<div style='margin-bottom: 20px;'>";
    echo "<strong>Average Rating:</strong> " . number_format($avg_row['avg_rating'], 1) . "/5";
    echo "<span class='rating-stars'>★</span><br>";
    echo "(Total reviews: " . mysqli_num_rows($result) . ")";
    echo "</div>";

    // Display all reviews
    while ($row = mysqli_fetch_assoc($result)) {
        $user_id = $row['user_id'];
        $username_sql = "SELECT username FROM users WHERE id='$user_id'";
        $username_result = mysqli_query($conn, $username_sql);
        $username_row = mysqli_fetch_assoc($username_result);
        
        echo "<div class='review-box'>";
        echo "<h3>Review by: " . $username_row['username'] . "</h3>";
        echo "<div class='rating-stars'>";
        for ($i = 1; $i <= $row['rating']; $i++) {
            echo "★";
        }
        for ($i = $row['rating'] + 1; $i <=5; $i++) {
            echo "☆"; 
        }
        echo "</div>";
        echo "<p>" . $row['comment'] . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet. Be the first to review!</p>";
}

// Close database connection
mysqli_close($conn);
?>

</body>
</html>


<?php
function displayUserReview($productId, $productName, $price, $reviews) {
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = count($reviews) > 0 ? round($totalRating / count($reviews), 1) : 0;

    // Display product information
    echo "<div class='product-review'>";
    echo "<h2>$productName</h2>";
    echo "<p>Price: $$price</p>";
    
    // Display average rating
    if ($averageRating > 0) {
        $stars = floor($averageRating);
        for ($i = 1; $i <= $stars; $i++) {
            echo "★";
        }
        if ($averageRating - $stars >= 0.5) {
            echo "½";
        }
        for ($i = $stars + 1; $i <= 5; $i++) {
            echo "☆";
        }
    } else {
        echo "<p>No reviews yet</p>";
    }

    // Display individual reviews
    if (!empty($reviews)) {
        echo "<div class='review-section'>";
        foreach ($reviews as $review) {
            echo "<div class='single-review'>";
            echo "<h3>Review by " . htmlspecialchars($review['username']) . "</h3>";
            
            // Display stars for this review
            $rating = $review['rating'];
            for ($i = 1; $i <= $rating; $i++) {
                echo "★";
            }
            for ($i = $rating + 1; $i <= 5; $i++) {
                echo "☆";
            }
            
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($review['timestamp'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
    }

    // Close product review container
    echo "</div>";
}
?>


// Example usage:
$product_id = 1;
$product_name = "Example Product";
$price = 49.99;

// Retrieve reviews from database
$query = "SELECT r.rating, r.comment, r.timestamp, u.username 
          FROM reviews r 
          INNER JOIN users u ON r.user_id = u.user_id 
          WHERE r.product_id = $product_id";
$result = mysqli_query($connection, $query);

$reviews = array();
while ($row = mysqli_fetch_assoc($result)) {
    $reviews[] = $row;
}

displayUserReview($product_id, $product_name, $price, $reviews);


<?php
// Connect to MySQL database
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    // Sanitize input to prevent SQL injection and XSS
    return htmlspecialchars(trim($data));
}

function submitReview($name, $email, $rating, $comments, $conn) {
    global $conn;
    
    // Sanitize inputs
    $name = sanitizeInput($name);
    $email = sanitizeInput($email);
    $rating = intval($rating); // Ensure rating is an integer
    $comments = sanitizeInput($comments);
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comments)
            VALUES ('$name', '$email', $rating, '$comments')";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review submitted successfully!";
}

function displayReviews($conn) {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Comments: " . $row['comments'] . "</p>";
            echo "<small>" . date('F j, Y g:i a', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

function calculateAverageRating($conn) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['average'] == 0 || !$row['average']) {
        return "No ratings yet!";
    } else {
        return round($row['average'], 1) . "/5";
    }
}
?>


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Review class
class Review {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Add review to database
    public function add_review($name, $review_text) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO reviews (name, review_text, timestamp) VALUES (?, ?, NOW())");
            $stmt->bind_param("ss", $name, $review_text);
            
            if ($stmt->execute()) {
                return true;
            } else {
                throw new Exception("Error adding review: " . $this->conn->error);
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get reviews from database
    public function get_reviews() {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM reviews ORDER BY timestamp DESC");
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                return $result->fetch_all(MYSQLI_ASSOC);
            } else {
                throw new Exception("No reviews found.");
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return array();
        }
    }
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    // Initialize Review class
    $review = new Review($conn);
    
    // Sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $review_text = htmlspecialchars(trim($_POST['review_text']));
    
    // Check if fields are not empty
    if (!empty($name) && !empty($review_text)) {
        if ($review->add_review($name, $review_text)) {
            // Success message
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            // Error message
            echo "<div class='error'>Error adding review. Please try again.</div>";
        }
    } else {
        // Empty fields error
        echo "<div class='error'>Please fill in all required fields.</div>";
    }
}

// Get and display reviews
$review = new Review($conn);
$reviews = $review->get_reviews();

if (!empty($reviews)) {
    foreach ($reviews as $rev) {
        echo "<div class='review'>";
        echo "<h3>" . $rev['name'] . "</h3>";
        echo "<p>" . $rev['review_text'] . "</p>";
        echo "<small>Posted on: " . date('F j, Y', strtotime($rev['timestamp'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "<div class='info'>No reviews available.</div>";
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if (isset($_POST['submit'])) {
    // Sanitize inputs
    $name = htmlspecialchars_decode(trim($_POST['name']));
    $email = htmlspecialchars_decode(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $review = htmlspecialchars_decode(trim($_POST['review']));

    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        echo "All fields are required!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address!";
    } else if (strlen($name) < 2 || strlen($name) > 50) {
        echo "Name must be between 2 and 50 characters!";
    } else if (strlen($review) < 10) {
        echo "Review must be at least 10 characters long!";
    } else {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, review, created_at) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("ssii", $name, $email, $rating, $review);

        if ($stmt->execute()) {
            echo "Thank you for submitting your review!";
            // Clear form fields
            header("Refresh:2; url=index.php");
        } else {
            echo "Error submitting review: " . $conn->error;
        }

        $stmt->close();
    }
}

// Display reviews from database
function displayReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while ($row = $result->fetch_assoc()) {
            $averageRating = calculateAverageRating();
            $stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
            
            echo "
                <div class='review'>
                    <h3>Review by {$row['name']}</h3>
                    <p>Rating: $stars</p>
                    <p>{$row['review']}</p>
                    <small>Posted on " . date('F j, Y', strtotime($row['created_at'])) . "</small>
                </div>
            ";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Calculate average rating
function calculateAverageRating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average'], 1);
    } else {
        return 0;
    }
}

$conn->close();
?>


<?php
// Include database connection file
include('db_connection.php');

// Function to handle review submission and display
function user_reviews() {
    // Check if the form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = mysqli_real_escape_string($GLOBALS['conn'], $_POST['review_name']);
        $review_text = mysqli_real_escape_string($GLOBALS['conn'], $_POST['review_text']);

        // Insert review into database
        $sql = "INSERT INTO reviews (author, comment) VALUES ('$name', '$review_text')";
        
        if (!mysqli_query($GLOBALS['conn'], $sql)) {
            die("Error submitting review: " . mysqli_error($GLOBALS['conn']));
        }
    }

    // Get all reviews from database
    $result = mysqli_query($GLOBALS['conn'], "SELECT * FROM reviews ORDER BY id DESC");

    // Display reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>By " . htmlspecialchars($row['author']) . "</h3>";
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "</div>";
    }

    // Close database connection
    mysqli_close($GLOBALS['conn']);
}

// HTML and CSS for the review form
echo "
<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <meta charset='UTF-8'>
    <style>
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }

        input, textarea {
            width: 100%;
            padding: 8px;
            margin: 10px 0;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f9f9f9;
            border-radius: 3px;
        }
    </style>
</head>
<body>
    <div class='container'>
        <h1>Leave a Review</h1>
        
        <form class='review-form' method='post' action='" . $_SERVER['PHP_SELF'] . "'>
            <input type='text' name='review_name' placeholder='Your Name' required><br>
            <textarea name='review_text' placeholder='Write your review here...' rows='4' required></textarea><br>
            <button type='submit'>Submit Review</button>
        </form>

        <h2>Previous Reviews</h2>
";

// Call the user_reviews function to display existing reviews
user_reviews();

echo "
    </div>
</body>
</html>";
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($user_name, $review_text) {
    global $conn;
    
    // Sanitize inputs
    $user_name = htmlspecialchars(trim($user_name));
    $review_text = htmlspecialchars(trim($review_text));
    
    // SQL query to insert review
    $sql = "INSERT INTO reviews (user_name, review_text, timestamp)
            VALUES ('$user_name', '$review_text', CURRENT_TIMESTAMP)";
            
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>" . date('F j, Y g:i a', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['name'];
    $review_text = $_POST['review'];
    
    if (!empty($user_name) && !empty($review_text)) {
        if (addReview($user_name, $review_text)) {
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Error submitting review. Please try again.</div>";
        }
    } else {
        echo "<div class='error'>Please fill in all fields.</div>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 20px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        .success, .error {
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .success { background-color: #dff0d8; color: #3c763d; }
        .error { background-color: #f2dede; color: #a94442; }
    </style>
</head>
<body>
    <div class="review-container">
        <h1>Leave a Review</h1>
        
        <!-- Review Form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST" class="review-form">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <textarea name="review" placeholder="Write your review here..." rows="4" required></textarea><br><br>
            <button type="submit">Submit Review</button>
        </form>

        <!-- Display Reviews -->
        <?php displayReviews(); ?>
    </div>
</body>
</html>


<?php
function submitReview() {
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get and sanitize input data
        $user_name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $review_text = htmlspecialchars(trim($_POST['review']));

        // Validate inputs
        if (empty($user_name) || empty($email) || empty($rating) || empty($review_text)) {
            echo "All fields are required!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5!";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, email, rating, review_text, submission_date)
                VALUES (?, ?, ?, ?, NOW())";

        if ($stmt = mysqli_prepare($conn, $sql)) {
            mysqli_stmt_bind_param($stmt, "ssis", $user_name, $email, $rating, $review_text);

            if (mysqli_stmt_execute($stmt)) {
                echo "Thank you for submitting your review!";
            } else {
                echo "Error: " . mysqli_error($conn);
            }

            mysqli_stmt_close($stmt);
        }

    }

    // Close database connection
    mysqli_close($conn);
}

// Call the function if it's included in another file
submitReview();
?>


<?php
// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    // Output the reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
        echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
        
        // Display stars
        $stars = intval($row['rating']);
        for ($i=1; $i<=5; $i++) {
            if ($i <= $stars) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
        echo "<small>Submitted on: " . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews found!";
}

// Close database connection
mysqli_close($conn);
?>


<?php
function createReview($product_id) {
    // Database connection parameters
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbname = "reviews_db";

    // Connect to database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get review data from POST request
    $review_name = trim($_POST['review_name']);
    $review_email = trim($_POST['review_email']);
    $rating = $_POST['rating'];
    $comments = trim($_POST['comments']);

    // Validate input
    if (empty($review_name) || empty($review_email) || empty($rating) || empty($comments)) {
        echo "Please fill in all required fields.";
        return;
    }

    if (!filter_var($review_email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format.";
        return;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, name, email, rating, comments)
            VALUES ('$product_id', '$review_name', '$review_email', '$rating', '$comments')";

    if ($conn->query($sql) === TRUE) {
        echo "<div class='alert alert-success'>
                Thank you for your review!
              </div>";
        
        // Redirect to the same page after 2 seconds
        header("Refresh: 2; url=view_reviews.php?id=$product_id");
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    createReview($_GET['id']);
}
?>


<?php
// Review handling function
function handle_reviews() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $title = $_POST['review_title'];
        $content = $_POST['review_content'];
        $rating = $_POST['review_rating'];

        // Validate input
        if (empty($title) || empty($content) || empty($rating)) {
            echo "Please fill in all required fields.";
            return;
        }

        // Save review to a file or database here
        // For this example, we'll save it to an array in a text file

        $reviews_file = 'reviews.txt';
        $review_data = [
            'title' => $title,
            'content' => $content,
            'rating' => $rating,
            'author' => $_SERVER['PHP_AUTH_USER'] ?? 'Anonymous',
            'date' => date('Y-m-d H:i:s')
        ];

        // Append review to file
        file_put_contents($reviews_file, serialize($review_data) . PHP_EOL, FILE_APPEND);

        // Redirect after submission
        header('Location: ' . $_SERVER['PHP_SELF']);
        exit();
    }

    // Display existing reviews
    $reviews_file = 'reviews.txt';
    $average_rating = 0;
    $total_reviews = 0;

    if (file_exists($reviews_file) && filesize($reviews_file) > 0) {
        $reviews = file($reviews_file);
        foreach ($reviews as $review_line) {
            $review = unserialize($review_line);
            if (!empty($review)) {
                // Calculate average rating
                $average_rating += $review['rating'];
                $total_reviews++;
            }
        }
        $average_rating /= $total_reviews;
    }

    // Display reviews
    echo "<div class='reviews'>";
    echo "<h2>Product Reviews</h2>";
    
    if ($total_reviews > 0) {
        echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
        foreach ($reviews as $review_line) {
            $review = unserialize($review_line);
            if (!empty($review)) {
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['title']) . "</h3>";
                echo "<p>By " . htmlspecialchars($review['author']) . " on " . $review['date'] . "</p>";
                echo "<div class='rating'>";
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo "⭐";
                }
                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                    echo "⬜";
                }
                echo "</div>";
                echo "<p>" . htmlspecialchars($review['content']) . "</p>";
                echo "</div>";
            }
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }

    // Review submission form
    echo "<h2>Submit a Review</h2>";
    echo "<form method='post'>";
    echo "<input type='text' name='review_title' placeholder='Review Title' required><br>";
    echo "<textarea name='review_content' placeholder='Write your review here...' rows='5' cols='50' required></textarea><br>";
    echo "<select name='review_rating' required>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value='$i'>$i stars</option>";
    }
    echo "</select><br>";
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
    echo "</div>";
}

// Call the function
handle_reviews();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to get all reviews
function get_reviews($item_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE item_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Function to display average rating
function get_average_rating($item_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE item_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    $row = mysqli_fetch_assoc($result);
    return number_format($row['average'], 1, '.', '');
}

// Function to submit new review
function submit_review($user_name, $email, $rating, $comment, $item_id) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $email = mysqli_real_escape_string($conn, $email);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    $sql = "INSERT INTO reviews (user_name, email, rating, comment, item_id) 
            VALUES (?, ?, ?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'ssisi', $user_name, $email, $rating, $comment, $item_id);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_GET['action']) && $_GET['action'] == 'submit_review') {
    $user_name = $_POST['name'];
    $email = $_POST['email'];
    $rating = intval($_POST['rating']);
    $comment = $_POST['comment'];
    $item_id = 1; // Set your item ID
    
    if (submit_review($user_name, $email, $rating, $comment, $item_id)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Example usage
$item_id = 1;
$reviews = get_reviews($item_id);
$average_rating = get_average_rating($item_id);

echo "<h2>Item Reviews</h2>";
echo "<p>Average Rating: $average_rating stars</p>";

if (!empty($reviews)) {
    echo "<div class='reviews'>";
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['user_name'] . "</h3>";
        echo "<p>Rating: " . $review['rating'] . " stars</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['date'] . "</small>";
        echo "</div>";
    }
    echo "</div>";
} else {
    echo "<p>No reviews available.</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!-- Review Submission Form -->
<form method="post" action="?action=submit_review">
    <input type="text" name="name" placeholder="Your Name" required>
    <input type="email" name="email" placeholder="Email Address" required>
    
    <div class="rating">
        <label>Rating:</label>
        <input type="radio" name="rating" value="5"> 5
        <input type="radio" name="rating" value="4"> 4
        <input type="radio" name="rating" value="3"> 3
        <input type="radio" name="rating" value="2"> 2
        <input type="radio" name="rating" value="1"> 1
    </div>
    
    <textarea name="comment" placeholder="Write your review here..." required></textarea>
    <button type="submit">Submit Review</button>
</form>


<?php
// Array to store reviews
$reviews = array();

// Function to handle review submission
function submitReview($name, $rating, $comment) {
    global $reviews;
    
    // Sanitize inputs
    $name = htmlspecialchars(trim($name));
    $comment = htmlspecialchars(trim($comment));
    
    if (empty($name) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    // Add review to the array
    $review = array(
        'name' => $name,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    );
    
    $reviews[] = $review;
    
    return "Review submitted successfully!";
}

// Function to display reviews
function displayReviews() {
    global $reviews;
    
    if (empty($reviews)) {
        echo "<p>No reviews yet. Be the first to review!</p>";
        return;
    }
    
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = $totalRating / count($reviews);
    
    echo "<div class='reviews'>";
    echo "<h3>Reviews</h3>";
    echo "<p>Average Rating: " . number_format($averageRating, 1) . "/5</p>";
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . $review['name'] . "</h4>";
        echo "<div class='rating'>";
        
        // Display stars
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . $review['timestamp'] . "</small>";
        echo "</div>";
    }
    echo "</div>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process review submission
    $name = $_POST['name'];
    $rating = intval($_POST['rating']);
    $comment = $_POST['comment'];
    
    $message = submitReview($name, $rating, $comment);
    echo "<p>" . $message . "</p>";
}

// Display the review form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .star {
            font-size: 24px;
            margin-right: 3px;
        }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        
        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>
        
        <button type="submit">Submit Review</button>
    </form>
</div>

<?php
displayReviews();
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {
    // Sanitize input data
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['user_name']));
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['review_text']));
    $rating = intval($_POST['rating']);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating) 
            VALUES ('$user_name', '$review_text', $rating)";

    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>Error: " . mysqli_error($conn) . "</div>";
    }
}

// Fetch all reviews
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .review-form { margin-bottom: 30px; }
        .review { border: 1px solid #ddd; padding: 15px; margin-bottom: 15px; }
        .rating { font-weight: bold; color: #ff6600; }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<form class="review-form" action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
    <input type="text" name="user_name" placeholder="Your Name" required><br><br>
    <textarea name="review_text" placeholder="Write your review here..." required></textarea><br><br>
    <select name="rating" required>
        <option value="">Select Rating</option>
        <option value="5">5 Stars</option>
        <option value="4">4 Stars</option>
        <option value="3">3 Stars</option>
        <option value="2">2 Stars</option>
        <option value="1">1 Star</option>
    </select><br><br>
    <input type="submit" name="submit_review" value="Submit Review">
</form>

<h2>Reviews</h2>
<?php
if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<p><strong>" . $row['user_name'] . "</strong></p>";
        echo "<p>" . $row['review_text'] . "</p>";
        echo "<p class='rating'>Rating: " . $row['rating'] . " stars</p>";
        echo "<p>Submitted on: " . $row['submission_date'] . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet.</p>";
}
?>

<?php
// Calculate average rating
$avg_query = "SELECT AVG(rating) as average FROM reviews";
$avg_result = mysqli_query($conn, $avg_query);
if ($row = mysqli_fetch_assoc($avg_result)) {
    $average_rating = round($row['average'], 1);
} else {
    $average_rating = 0;
}
?>

<h3>Average Rating: <?php echo $average_rating; ?> /5</h3>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
class Review {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Function to submit a review
    public function submitReview($productId, $userName, $email, $comment, $rating) {
        try {
            // Sanitize input data
            $sanitizedProductID = $this->db->real_escape_string($productId);
            $sanitizedUserName = $this->db->real_escape_string($userName);
            $sanitizedEmail = $this->db->real_escape_string($email);
            $sanitizedComment = $this->db->real_escape_string($comment);
            $sanitizedRating = (int)$rating;

            // Insert review into database
            $sql = "INSERT INTO reviews (product_id, user_name, email, comment, rating, submission_date) 
                    VALUES ('$sanitizedProductID', '$sanitizedUserName', '$sanitizedEmail', '$sanitizedComment', '$sanitizedRating', NOW())";
            
            if ($this->db->query($sql)) {
                return true;
            } else {
                throw new Exception("Error submitting review: " . $this->db->error);
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }

    // Function to display reviews for a product
    public function displayReviews($productId) {
        try {
            $sanitizedProductID = $this->db->real_escape_string($productId);

            // Get all reviews for the specified product
            $sql = "SELECT * FROM reviews WHERE product_id = '$sanitizedProductID' ORDER BY submission_date DESC";
            
            $result = $this->db->query($sql);
            
            if ($result) {
                $reviews = array();

                while ($row = $result->fetch_assoc()) {
                    $review = array(
                        'id' => $row['id'],
                        'user_name' => $row['user_name'],
                        'email' => $row['email'],
                        'comment' => $row['comment'],
                        'rating' => $row['rating'],
                        'submission_date' => $row['submission_date']
                    );
                    
                    array_push($reviews, $review);
                }

                return $reviews;
            } else {
                throw new Exception("Error retrieving reviews: " . $this->db->error);
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }

    // Function to display average rating
    public function displayAverageRating($productId) {
        try {
            $sanitizedProductID = $this->db->real_escape_string($productId);

            // Calculate average rating
            $sql = "SELECT AVG(rating) as average_rating 
                    FROM reviews 
                    WHERE product_id = '$sanitizedProductID'";
            
            $result = $this->db->query($sql);
            
            if ($result) {
                $row = $result->fetch_assoc();
                return round($row['average_rating'], 1); // Rounded to one decimal place
            } else {
                throw new Exception("Error retrieving average rating: " . $this->db->error);
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }
}

// Example usage:
// Assuming $db is your database connection
$review = new Review($db);

// Submit a review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if ($review->submitReview($_POST['product_id'], $_POST['name'], $_POST['email'], $_POST['comment'], $_POST['rating'])) {
        echo "Thank you for submitting your review!";
    }
}

// Display reviews and average rating
$productId = 1; // Replace with actual product ID
$averageRating = $review->displayAverageRating($productId);
echo "Average Rating: $averageRating/5";

$reviews = $review->displayReviews($productId);
foreach ($reviews as $rev) {
    echo "<div class='review'>";
    echo "<h4>" . htmlspecialchars($rev['user_name']) . "</h4>";
    echo "<p>Rating: " . str_repeat("★", $rev['rating']) . "</p>";
    echo "<p>Email: " . htmlspecialchars($rev['email']) . "</p>";
    echo "<p>Comment: " . htmlspecialchars($rev['comment']) . "</p>";
    echo "<p>Submitted on: " . date('F j, Y', strtotime($rev['submission_date'])) . "</p>";
    echo "</div>";
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database configuration
    $host = 'localhost';
    $db_name = 'your_database';
    $username = 'your_username';
    $password = 'your_password';

    try {
        // Connect to the database
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if user has already submitted a review for this product
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE user_id = :user_id AND product_id = :product_id");
        $stmt->execute(array(':user_id' => $user_id, ':product_id' => $product_id));
        
        if ($stmt->rowCount() > 0) {
            return array(
                'status' => 'error',
                'message' => 'You have already submitted a review for this product.'
            );
        }

        // Insert the new review
        $stmt = $conn->prepare("
            INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES (:user_id, :product_id, :rating, :comment)
        ");
        $stmt->execute(array(
            ':user_id' => $user_id,
            ':product_id' => $product_id,
            ':rating' => $rating,
            ':comment' => $comment
        ));

        // Calculate average rating and total reviews for the product
        $stmt = $conn->prepare("
            SELECT 
                AVG(rating) AS avg_rating, 
                COUNT(id) AS total_reviews 
            FROM reviews 
            WHERE product_id = :product_id
        ");
        $stmt->execute(array(':product_id' => $product_id));
        $result = $stmt->fetch(PDO::FETCH_ASSOC);

        // Get all reviews for the product
        $stmt = $conn->prepare("
            SELECT 
                r.id,
                u.username,
                r.rating,
                r.comment,
                DATE_FORMAT(r.review_date, '%Y-%m-%d %H:%i:%s') as review_date
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE product_id = :product_id
            ORDER BY r.review_date DESC
        ");
        $stmt->execute(array(':product_id' => $product_id));
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        // Close the database connection
        $conn = null;

        return array(
            'status' => 'success',
            'average_rating' => number_format($result['avg_rating'], 1, '.', ''),
            'total_reviews' => $result['total_reviews'],
            'reviews' => $reviews
        );

    } catch(PDOException $e) {
        // Close the database connection in case of error
        if ($conn != null) {
            $conn = null;
        }
        return array(
            'status' => 'error',
            'message' => 'An error occurred while submitting your review. Please try again later.'
        );
    }
}
?>


// Example user inputs
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "This is a great product!";

$result = submit_review($user_id, $product_id, $rating, $comment);

if ($result['status'] == 'success') {
    echo "Thank you for submitting your review!";
    echo "<br>Average Rating: " . $result['average_rating'];
    echo "<br>Total Reviews: " . $result['total_reviews'];
    
    foreach ($result['reviews'] as $review) {
        echo "<div>";
        echo "<strong>" . $review['username'] . "</strong> - " . $review['rating'] . "/5";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . $review['review_date'] . "</small>";
        echo "</div>";
    }
} else {
    echo "Error: " . $result['message'];
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Review submission function
function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Check if user has already reviewed this product
    $stmt = $conn->prepare("SELECT review_id FROM reviews WHERE product_id = ? AND user_id = ?");
    $stmt->execute([$productId, $userId]);
    
    if ($stmt->rowCount() > 0) {
        return "You have already reviewed this product!";
    } else {
        // Insert new review
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->execute([$productId, $userId, $rating, $comment]);
        
        return "Review submitted successfully!";
    }
}

// Display reviews function
function displayReviews($productId, $conn) {
    // Get all reviews for the product
    $stmt = $conn->prepare("SELECT r.review_id, u.username, r.rating, r.comment, r.review_date 
                           FROM reviews r 
                           JOIN users u ON r.user_id = u.user_id 
                           WHERE r.product_id = ? 
                           ORDER BY r.review_date DESC");
    $stmt->execute([$productId]);
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (empty($reviews)) {
        echo "<p>No reviews available for this product.</p>";
    } else {
        foreach ($reviews as $review) {
            // Display each review
            echo "<div class='review'>";
            echo "<h4>Reviewer: " . htmlspecialchars($review['username']) . "</h4>";
            echo "<p>Rating: " . $review['rating'] . " stars</p>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Reviewed on: " . date('M j, Y g:i a', strtotime($review['review_date'])) . "</small>";
            echo "</div>";
        }
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $productId = intval($_POST['product_id']);
    $userId = intval($_SESSION['user_id']); // Assuming user is authenticated
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']), ENT_QUOTES);

    // Validate input
    if ($rating < 1 || $rating > 5) {
        echo "Invalid rating!";
    } elseif (empty($comment)) {
        echo "Please write a comment!";
    } else {
        // Submit review
        $result = submitReview($productId, $userId, $rating, $comment, $conn);
        echo $result;
    }
}

// Display all reviews for product ID 1 (example)
displayReviews(1, $conn);

$conn = null; // Close database connection
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a specific product
function display_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>Rating: " . $row['rating'] . "/5</h4>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found for this product.";
    }
}

// Function to delete a review
function delete_review($review_id) {
    global $conn;
    
    // Sanitize input
    $review_id = mysqli_real_escape_string($conn, $review_id);
    
    // Delete review from database
    $sql = "DELETE FROM reviews WHERE id = '$review_id'";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Review added successfully!";
    } else {
        echo "Error adding review: " . mysqli_error($conn);
    }
}

// Display reviews for product ID 1
display_reviews(1);

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_name VARCHAR(100),
    email VARCHAR(100),
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

$conn->query($sql);

// Function to add a new review
function addReview($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    // Sanitize input data
    $user_name = htmlspecialchars(strip_tags($user_name));
    $email = htmlspecialchars(strip_tags($email));
    $comment = htmlspecialchars(strip_tags($comment));
    
    // Prepare and bind
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, email, rating, comment, timestamp) VALUES (?, ?, ?, ?, ?, NOW())");
    $stmt->bind_param("isiii", $product_id, $user_name, $email, $rating, $comment);
    
    // Execute the query
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h4>" . $row['user_name'] . "</h4>";
        echo "<p>Rating: " . getStars($row['rating']) . "</p>";
        echo "<p>Email: " . $row['email'] . "</p>";
        echo "<p>Comment: " . $row['comment'] . "</p>";
        echo "<small>" . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
        echo "</div>";
    }
}

// Helper function to display stars for rating
function getStars($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★";
        } else {
            $stars .= "☆";
        }
    }
    return $stars;
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
            background-color: #f9f9f9;
        }
        h4 { color: #333; }
        p { line-height: 1.6; }
    </style>
</head>
<body>

<?php
// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = 1; // Example product ID
    
    if (!empty($_POST['name']) && !empty($_POST['email']) && isset($_POST['rating']) && !empty($_POST['comment'])) {
        $success = addReview($product_id, $_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
        
        if ($success) {
            echo "<p>Thank you for your review!</p>";
        } else {
            echo "<p>Error submitting review. Please try again.</p>";
        }
    } else {
        echo "<p>Please fill in all required fields.</p>";
    }
}

// Display review form
?>

<h2>Submit a Review</h2>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name">
    </div>
    
    <div>
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email">
    </div>
    
    <div>
        <label>Rating:</label><br>
        <select name="rating">
            <option value="">Select rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
    </div>
    
    <div>
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5"></textarea>
    </div>
    
    <input type="submit" value="Submit Review">
</form>

<h2>Reviews</h2>
<?php
displayReviews(1); // Display reviews for product ID 1
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize and validate input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $review_text = htmlspecialchars(trim($_POST['review_text']));

    if (empty($name) || empty($email) || empty($rating) || empty($review_text)) {
        die("All fields are required!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5!");
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, review_text, timestamp) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("ssii", $name, $email, $rating, $review_text);

    if ($stmt->execute()) {
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } else {
        die("Error submitting review: " . $conn->error);
    }

    $stmt->close();
}

// Get reviews from database
$query = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = $conn->query($query);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .rating-stars {
            color: #gold;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px 0;
            background-color: #f9f9f9;
        }
        form {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review submission form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select>
        </div>
        <div>
            <label for="review_text">Review:</label><br>
            <textarea id="review_text" name="review_text" rows="5" required></textarea>
        </div>
        <button type="submit">Submit Review</button>
    </form>

    <!-- Display existing reviews -->
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Generate stars based on rating
            $stars_html = str_repeat("★ ", $row['rating']);
            $stars_html .= str_repeat("☆ ", 5 - $row['rating']);

            echo "<div class='review-container'>";
                echo "<h3>By " . $row['user_name'] . "</h3>";
                echo "<p>" . $row['review_text'] . "</p>";
                echo "<div class='rating-stars'>" . $stars_html . "</div>";
                echo "<p>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }

    $conn->close();
    ?>
</body>
</html>


<?php
// Function to create user review for a product
function createReview($reviewText, $rating, $productId) {
    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "my_store";

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate input
        if (empty($reviewText) || !isset($rating) || !isset($productId)) {
            return "Error: All fields must be filled out!";
        }

        // Sanitize inputs to prevent SQL injection
        $reviewText = htmlspecialchars(strip_tags(trim($reviewText)));
        $rating = intval($rating);
        $productId = intval($productId);

        // Check if rating is valid (assuming scale of 1-5)
        if ($rating < 1 || $rating > 5) {
            return "Error: Invalid rating!";
        }

        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (
            product_id, 
            review_text,
            rating,
            created_at
        ) VALUES (
            :productId,
            :reviewText,
            :rating,
            NOW()
        )");

        // Bind parameters
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':reviewText', $reviewText);
        $stmt->bindParam(':rating', $rating);

        // Execute query
        $stmt->execute();

        // Return success message with review ID
        $lastInsertId = $conn->lastInsertId();
        return "Review submitted successfully! Review ID: $lastInsertId";

    } catch(PDOException $e) {
        // Return error message if something goes wrong
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
$product_id = 123;
$user_review = "This is a great product!";
$rating = 5;

$result = createReview($user_review, $rating, $product_id);
echo $result;
?>


<?php
// Connect to the database (replace with your actual database connection)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $name = htmlspecialchars($_POST['name']);
    $comment = htmlspecialchars($_POST['comment']);
    
    if (empty($name) || empty($comment)) {
        echo "<p class='error'>Please fill in all required fields.</p>";
    } else {
        // Insert review into the database
        $sql = "INSERT INTO reviews (name, comment, rating, date)
                VALUES ('$name', '$comment', '".$_POST['rating']."', CURRENT_TIMESTAMP)";
        
        if ($conn->query($sql) === TRUE) {
            echo "<p class='success'>Thank you for submitting your review!</p>";
        } else {
            echo "<p class='error'>Error: " . $sql . "<br>" . $conn->error."</p>";
        }
    }
}

// Fetch reviews from the database
$sql = "SELECT * FROM reviews ORDER BY date DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Display reviews
    while($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>".$row["name"]."</h3>";
        echo "<p>".$row["comment"]."</p>";
        echo "<div class='rating'>";
        
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row["rating"]) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "<p class='date'>".$row["date"]."</p>";
        echo "</div>";
    }
} else {
    echo "No reviews found.";
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .review-form input, .review-form textarea {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
        }
        
        .review-form button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        .reviews {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
        }
        
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        .star {
            font-size: 24px;
            margin-right: 3px;
        }
        
        .error, .success {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit a Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br>
            <textarea name="comment" rows="5" placeholder="Write your review here..." required></textarea><br>
            <select name="rating">
                <option value="">Rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <div class="reviews">
        <h2>Reviews</h2>
        <?php // Reviews will be displayed here ?>
    </div>
</body>
</html>


<?php
// Function to handle user reviews
function handleUserReview($reviewId = null, $userId, $rating, $comment = "", $date = null) {
    // Validate inputs
    if (!isset($userId) || empty($userId)) {
        throw new InvalidArgumentException("User ID is required.");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new InvalidArgumentException("Rating must be between 1 and 5.");
    }

    try {
        // Database connection parameters
        $host = "localhost";
        $dbUsername = "username";
        $dbPassword = "password";
        $dbName = "reviews_db";

        // Connect to database
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Set default date if not provided
        if (!$date) {
            $date = date('Y-m-d H:i:s');
        }

        // Check if review exists and update or insert
        if ($reviewId) {
            $sql = "
                UPDATE reviews 
                SET rating = ?, comment = ?, last_updated_date = ?
                WHERE id = ?
            ";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("siss", $rating, $comment, $date, $reviewId);
        } else {
            $sql = "
                INSERT INTO reviews (user_id, rating, comment, creation_date)
                VALUES (?, ?, ?, ?)
            ";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("isss", $userId, $rating, $comment, $date);
        }

        // Execute the query
        if ($stmt->execute()) {
            $response = [
                "status" => "success",
                "message" => $reviewId ? "Review updated successfully." : "Review created successfully.",
                "insert_id" => !$reviewId ? $conn->insert_id : null,
                "affected_rows" => $stmt->affected_rows
            ];
        } else {
            throw new Exception("Query failed: " . $stmt->error);
        }

    } catch (Exception $e) {
        return [
            "status" => "error",
            "message" => $e->getMessage()
        ];
    } finally {
        // Close statements and connection
        if ($stmt) {
            $stmt->close();
        }
        if ($conn) {
            $conn->close();
        }
    }

    return $response;
}

// Example usage:
try {
    // Create a new review
    $newReview = handleUserReview(
        null, 
        12345,
        4,
        "This product is great!",
        date('Y-m-d H:i:s')
    );
    
    print_r($newReview);

    // Update an existing review
    $updateReview = handleUserReview(
        67890,
        12345,
        5,
        "The best product ever! ★★★★★",
        date('Y-m-d H:i:s')
    );
    
    print_r($updateReview);

} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
function displayUserReviews($productId) {
    // Database connection details
    $host = 'localhost';
    $dbname = 'your_database_name';
    $dbuser = 'your_username';
    $dbpass = 'your_password';

    try {
        // Create a new PDO instance
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $dbuser, $dbpass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // SQL query to fetch reviews for the product
        $sql = "SELECT r.review_id, r.user_id, r.rating, r.comment, r.review_date, u.username 
                FROM reviews r 
                LEFT JOIN users u ON r.user_id = u.user_id 
                WHERE r.product_id = ? 
                ORDER BY r.review_date DESC";

        // Prepare the statement
        $stmt = $conn->prepare($sql);
        $stmt->execute([$productId]);

        // Check if there are any reviews
        if ($stmt->rowCount() == 0) {
            echo "<div class='no-reviews'>No reviews yet for this product.</div>";
            return;
        }

        // Display the reviews
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $reviewId = $row['review_id'];
            $userId = $row['user_id'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $reviewDate = date('M j, Y', strtotime($row['review_date']));
            $username = $row['username'] ?? 'Anonymous';

            // Display review
            echo "<div class='review'>";
            echo "<div class='review-header'>";
            echo "<span class='username'>$username</span>";
            echo "<span class='rating'>Rating: $rating/5</span>";
            echo "<span class='date'>$reviewDate</span>";
            echo "</div>";
            echo "<div class='review-body'>";
            echo "<p>$comment</p>";
            echo "</div>";
            echo "</div>";
        }

    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
displayUserReviews(1);
?>


<?php
// Function to create a new user review
function createReview($user_id, $product_id, $rating, $comment) {
    // Validate inputs
    if (!is_numeric($user_id) || !is_numeric($product_id)) {
        return false;
    }
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
    VALUES ('$user_id', '$product_id', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        // Get the last inserted ID
        $last_id = mysqli_insert_id($conn);
        return $last_id;
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        return false;
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Function to display reviews for a product
function getReviews($product_id) {
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Query database for reviews
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        $reviews = array();
        while($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        return false;
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "Great product! Highly recommended.";

// Create a review
createReview($user_id, $product_id, $rating, $comment);

// Get and display reviews for product ID 456
$reviews = getReviews(456);
if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div>";
        echo "<p>Rating: " . $review['rating'] . "</p>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}
?>


<?php
function submitReview($review_id, $user_id, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if this is a new review or an update
    if ($review_id == 0) {
        // Insert new review
        $sql = "INSERT INTO reviews (user_id, rating, comment) 
                VALUES ('$user_id', '$rating', '$comment')";
    } else {
        // Update existing review
        $sql = "UPDATE reviews SET rating='$rating', comment='$comment' 
                WHERE id='$review_id' AND user_id='$user_id'";
    }

    // Execute the query
    if (mysqli_query($conn, $sql)) {
        // Close database connection and return success message
        mysqli_close($conn);
        return "Review submitted successfully!";
    } else {
        // Close database connection and return error message
        mysqli_close($conn);
        return "Error: " . mysqli_error($conn);
    }
}

// Example usage:
// $result = submitReview(0, 12345, 5, 'This is an amazing product!');
// echo $result;

?>


// Adding a new review
$result = submitReview(0, 12345, 5, 'This is an amazing product!');
echo $result; // Should return success message

// Updating an existing review
$result = submitReview(1, 12345, 4, 'This product is really good!');
echo $result; // Should return success message or error if something goes wrong


<?php
function manageUserReview($operation, $reviewId = null, $userId = null, $rating = null, $comment = null, $dbConnection = null) {
    // Required parameters based on operation
    if ($operation == 'add') {
        if (empty($userId) || empty($rating)) {
            throw new Exception("User ID and rating are required for adding a review.");
        }
    } elseif ($operation == 'update' || $operation == 'delete') {
        if (empty($reviewId)) {
            throw new Exception("Review ID is required for updating or deleting a review.");
        }
    }

    // Sanitize input data
    $sanitizedData = array();
    if (!empty($userId)) {
        $sanitizedData['user_id'] = intval($userId);
    }
    if (!empty($rating)) {
        $sanitizedData['rating'] = intval($rating);
    }
    if (!empty($comment)) {
        $sanitizedData['comment'] = htmlspecialchars(strip_tags($comment), ENT_QUOTES, 'UTF-8');
    }

    try {
        switch ($operation) {
            case 'add':
                // Add new review
                $stmt = $dbConnection->prepare("INSERT INTO reviews (user_id, rating, comment, created_at) VALUES (:user_id, :rating, :comment, NOW())");
                if (!empty($sanitizedData['comment'])) {
                    $stmt->bindParam(':comment', $sanitizedData['comment']);
                } else {
                    $stmt->bindValue(':comment', null);
                }
                $stmt->execute();
                return $dbConnection->lastInsertId();
                break;

            case 'update':
                // Update existing review
                $stmt = $dbConnection->prepare("UPDATE reviews SET rating = :rating, comment = :comment WHERE review_id = :review_id");
                if (!empty($sanitizedData['comment'])) {
                    $stmt->bindParam(':comment', $sanitizedData['comment']);
                } else {
                    $stmt->bindValue(':comment', null);
                }
                $stmt->execute();
                return true;
                break;

            case 'delete':
                // Delete review
                $stmt = $dbConnection->prepare("DELETE FROM reviews WHERE review_id = :review_id");
                $stmt->bindParam(':review_id', $reviewId, PDO::PARAM_INT);
                $stmt->execute();
                return true;
                break;

            default:
                throw new Exception("Invalid operation. Supported operations: add, update, delete.");
        }
    } catch (PDOException $e) {
        error_log("Database Error: " . $e->getMessage());
        throw new Exception("An error occurred while processing your request.");
    }
}

// Example usage:

// 1. Adding a new review
$reviewId = manageUserReview(
    'add',
    null,
    123, // User ID
    5,   // Rating (1-5)
    "This is an excellent product!", 
    $dbConnection
);

// 2. Updating an existing review
manageUserReview(
    'update',
    456, // Review ID
    null,
    4,   // New rating
    "Great product! I love it.", 
    $dbConnection
);

// 3. Deleting a review
manageUserReview(
    'delete',
    789, // Review ID to delete
    null,
    null,
    null,
    $dbConnection
);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function addReview($name, $email, $rating, $comment, $conn) {
    $stmt = $conn->prepare("INSERT INTO reviews (reviewer_name, reviewer_email, rating, comment, submission_date)
                          VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)");
    if ($stmt === false) {
        throw new Exception("Prepare failed: " . $conn->error);
    }

    $stmt->bind_param("ssis", $name, $email, $rating, $comment);

    if (!$stmt->execute()) {
        throw new Exception("Execute failed: " . $stmt->error);
    }
}

function getReviews($conn) {
    $reviews = array();
    $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

    while ($row = $result->fetch_assoc()) {
        $review['id'] = $row['id'];
        $review['name'] = $row['reviewer_name'];
        $review['email'] = $row['reviewer_email'];
        $review['rating'] = $row['rating'];
        $review['comment'] = $row['comment'];
        $review['date'] = date("F j, Y", strtotime($row['submission_date']));
        array_push($reviews, $review);
    }
    return $reviews;
}

// Process form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        try {
            addReview($name, $email, $rating, $comment, $conn);
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        } catch (Exception $e) {
            echo "Error adding review: " . $e->getMessage();
        }
    }
}

// Get all reviews
$reviews = getReviews($conn);

// Close database connection
$conn->close();

// Display the reviews
echo "<div class='review-container'>";
foreach ($reviews as $review) {
    echo "<div class='review-item'>";
    echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
    echo "<p><strong>Email:</strong> " . htmlspecialchars($review['email']) . "</p>";
    echo "<p><strong>Rating:</strong> ";
    for ($i = 1; $i <= $review['rating']; $i++) {
        echo "★";
    }
    echo "</p>";
    echo "<p><em>" . htmlspecialchars($review['comment']) . "</em></p>";
    echo "<p class='submission-date'><small>Submitted on: " . $review['date'] . "</small></p>";
    echo "</div>";
}
echo "</div>";
?>


<?php
// Database connection
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "reviews_db";

$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create review form
function createReviewForm() {
    global $conn;
    ?>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form id="reviewForm" method="POST">
            <input type="text" name="name" placeholder="Your Name" required><br>
            <input type="email" name="email" placeholder="Your Email" required><br>
            <select name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">⭐️ ⭐️ ⭐️ ⭐️ ⭐️ - Excellent</option>
                <option value="4">⭐️ ⭐️ ⭐️ ⭐️ - Very Good</option>
                <option value="3">⭐️ ⭐️ ⭐️ - Average</option>
                <option value="2">⭐️ ⭐️ - Poor</option>
                <option value="1">⭐️ - Bad</option>
            </select><br>
            <textarea name="review" placeholder="Write your review..." required></textarea><br>
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display reviews -->
    <div id="reviews">
        <?php displayReviews(); ?>
    </div>
    <?php
}

// Function to process submitted reviews
function submitReview() {
    global $conn;
    
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $review = $_POST['review'];
        
        // Sanitize input
        $name = htmlspecialchars($name);
        $email = htmlspecialchars($email);
        $rating = intval($rating);
        $review = htmlspecialchars($review);
        
        // Insert into database
        $sql = "INSERT INTO reviews (name, email, rating, review) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssis", $name, $email, $rating, $review);
        
        if ($stmt->execute()) {
            echo "Review submitted successfully!";
            // Refresh reviews section
            displayReviews();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
        
        $stmt->close();
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("⭐️ ", $row['rating']) . "</p>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Review: " . $row['review'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Close database connection
$conn->close();
?>

<script>
document.getElementById('reviewForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    
    fetch('submit_review.php', {
        method: 'POST',
        body: formData
    })
    .then(response => response.text())
    .then(data => {
        document.getElementById('reviews').innerHTML = data;
    });
});
</script>

<style>
.review-form {
    max-width: 600px;
    margin: 20px auto;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.review {
    margin: 10px 0;
    padding: 10px;
    border-bottom: 1px solid #eee;
}

h3, h2 {
    color: #333;
}

textarea, input[type="text"], input[type="email"] {
    width: 100%;
    margin: 5px 0;
    padding: 8px;
    box-sizing: border-box;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}
</style>


<?php
// Initialize an empty array to store reviews if it doesn't exist
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = [];
}

/**
 * Add a new user review
 * @param string $userId The unique identifier of the user
 * @param int $rating The rating (1-5)
 * @param string $comment The review comment
 */
function addReview($userId, $rating, $comment) {
    global $_SESSION;

    // Sanitize input
    $userId = htmlspecialchars($userId);
    $rating = intval($rating);
    $comment = htmlspecialchars($comment);

    // Validate rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Create review array
    $review = [
        'user_id' => $userId,
        'username' => $_SESSION['username'], // Assuming user has a session
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    ];

    // Add review to the reviews array
    $_SESSION['reviews'][] = $review;

    return true;
}

/**
 * Get all reviews
 * @return array Array of reviews
 */
function getReviews() {
    global $_SESSION;
    return $_SESSION['reviews'];
}

/**
 * Calculate average rating
 * @return float Average rating
 */
function calculateAverageRating() {
    global $_SESSION;
    
    $ratings = array_column($_SESSION['reviews'], 'rating');
    $count = count($ratings);

    if ($count == 0) {
        return 0;
    }

    return number_format(array_sum($ratings) / $count, 1);
}

/**
 * Display reviews and average rating
 */
function displayReviews() {
    $averageRating = calculateAverageRating();
    $reviews = getReviews();

    // Display average rating
    echo "<div class='average-rating'>";
    echo "Average Rating: $averageRating/5";
    echo "</div>";

    // Display all reviews
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>By {$review['username']}</h4>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Comment: {$review['comment']}</p>";
        echo "<small>Posted on: {$review['timestamp']}</small>";
        echo "</div>";
    }
}

// Example usage:
// Assuming user is logged in and has a session
if (isset($_POST['submit_review'])) {
    $userId = $_SESSION['user_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    if (addReview($userId, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Please enter a rating between 1 and 5.";
    }
}

// Display reviews
displayReviews();
?>


<?php
function submitReview($item_id, $user_id, $rating, $comment = '') {
    // Database connection details
    $host = 'localhost';
    $db_name = 'your_database_name';
    $username = 'your_username';
    $password = 'your_password';

    try {
        // Create a new PDO instance
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate input
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception('Invalid rating. Please select a rating between 1 and 5.');
        }
        
        // Prepare the review data
        $timestamp = date('Y-m-d H:i:s');
        $comment = htmlspecialchars($comment); // Sanitize comment

        // Insert the review into the database
        $stmt = $conn->prepare("INSERT INTO reviews (item_id, user_id, rating, comment, timestamp) 
                              VALUES (:item_id, :user_id, :rating, :comment, :timestamp)");
        
        $stmt->bindParam(':item_id', $item_id);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        $stmt->bindParam(':timestamp', $timestamp);

        $stmt->execute();

        // Calculate average rating for the item
        $avgStmt = $conn->prepare("SELECT AVG(rating) as average_rating FROM reviews WHERE item_id = :item_id");
        $avgStmt->bindParam(':item_id', $item_id);
        $avgStmt->execute();
        
        $result = $avgStmt->fetch(PDO::FETCH_ASSOC);
        $averageRating = $result['average_rating'] ?: 0;

        // Close the connection
        $conn = null;

        return array(
            'status' => 'success',
            'message' => 'Review submitted successfully!',
            'average_rating' => number_format($averageRating, 1)
        );

    } catch(PDOException $e) {
        return array(
            'status' => 'error',
            'message' => 'Error submitting review: ' . $e->getMessage()
        );
    }
}
?>


// Example usage:
$item_id = 1;
$user_id = 1;
$rating = 4;
$comment = "This is a great product!";

$result = submitReview($item_id, $user_id, $rating, $comment);

if ($result['status'] == 'success') {
    echo "Thank you for your review!";
    echo "<br>Current average rating: " . $result['average_rating'];
} else {
    echo "Error: " . $result['message'];
}


<?php
class UserReview {
    public $userName;
    public $comment;
    public $rating;

    function __construct($name, $comment, $rating) {
        $this->userName = $name;
        $this->comment = $comment;
        $this->rating = $rating;
    }
}

function displayReviews($reviews) {
    // Display each review
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Reviewed by: " . htmlspecialchars($review->userName) . "</h3>";
        echo "<p>" . htmlspecialchars($review->comment) . "</p>";
        
        // Generate stars based on rating
        $stars = "";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review->rating) {
                $stars .= "★";
            } else {
                $stars .= "☆";
            }
        }
        echo "<div class='stars'>$stars</div>";
        echo "</div><br>";
    }

    // Calculate average rating
    if (!empty($reviews)) {
        $totalRating = array_sum(array_column($reviews, 'rating'));
        $averageRating = $totalRating / count($reviews);
        echo "<div class='average-rating'>";
        echo "Average Rating: " . number_format($averageRating, 1) . "/5";
        echo "</div>";
    } else {
        echo "No reviews available.";
    }
}

// Example usage:
$review1 = new UserReview("Alice", "Great product! Highly recommended.", 4);
$review2 = new UserReview("Bob", "Good quality but could be better.", 3);
$reviews = array($review1, $review2);

displayReviews($reviews);
?>


<?php
// Function to create or update a user review
function submitReview($reviewId, $userId, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'username';
    $dbPassword = 'password';
    $dbName = 'reviews_db';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if review already exists for the user
        $checkReviewQuery = "SELECT id FROM reviews WHERE user_id = :userId AND review_id = :reviewId";
        $stmt = $conn->prepare($checkReviewQuery);
        $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
        $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Update existing review
            $updateReviewQuery = "UPDATE reviews 
                                  SET rating = :rating, 
                                      comment = :comment 
                                  WHERE user_id = :userId 
                                    AND review_id = :reviewId";
            $stmt = $conn->prepare($updateReviewQuery);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':comment', $comment, PDO::PARAM_STR);
            $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
            $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);
            $stmt->execute();
            
            return array('status' => 'success', 'message' => 'Review updated successfully');
        } else {
            // Insert new review
            $insertReviewQuery = "INSERT INTO reviews (review_id, user_id, rating, comment) 
                                  VALUES (:reviewId, :userId, :rating, :comment)";
            $stmt = $conn->prepare($insertReviewQuery);
            $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);
            $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':comment', $comment, PDO::PARAM_STR);
            $stmt->execute();
            
            return array('status' => 'success', 'message' => 'Review submitted successfully');
        }
    } catch(PDOException $e) {
        // Handle database errors
        return array('status' => 'error', 'message' => 'Error submitting review: ' . $e->getMessage());
    } finally {
        // Close the statement
        if ($stmt !== null) {
            $stmt = null;
        }
    }
}

// Example usage:
$reviewId = 123; // ID of the item being reviewed
$userId = 456;   // ID of the user submitting the review
$rating = 5;     // Rating from 1 to 5
$comment = "This is a great product!"; 

$result = submitReview($reviewId, $userId, $rating, $comment);

if ($result['status'] == 'success') {
    echo $result['message'];
} else {
    echo $result['message'];
}
?>


<?php
// Function to add a new review
function addReview($conn, $userId, $userName, $reviewRating, $reviewText) {
    // Validate input values
    if ($reviewRating < 1 || $reviewRating > 5) {
        return false; // Invalid rating value
    }
    
    // SQL query to insert the review into the database
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, user_name, review_rating, review_text, review_date) 
                           VALUES (:userId, :userName, :reviewRating, :reviewText, NOW())");
    
    try {
        // Bind parameters
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':userName', $userName);
        $stmt->bindParam(':reviewRating', $reviewRating);
        $stmt->bindParam(':reviewText', $reviewText);
        
        // Execute the query
        $stmt->execute();
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews for a specific item/product
function displayReviews($conn, $itemId) {
    // SQL query to fetch reviews for the given item
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE reviewed_item_id = :itemId ORDER BY review_date DESC");
    
    try {
        // Bind parameter
        $stmt->bindParam(':itemId', $itemId);
        
        // Execute the query
        $stmt->execute();
        
        // Fetch all reviews
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (count($reviews) > 0) {
            echo "<div class='reviews'>";
            
            foreach ($reviews as $review) {
                // Display each review
                echo "<div class='review'>";
                echo "<h4>" . htmlspecialchars($review['user_name']) . "</h4>";
                echo "<p>Rating: " . str_repeat("★", $review['review_rating']) . "</p>";
                echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
                echo "<small>" . date('Y-m-d H:i', strtotime($review['review_date'])) . "</small>";
                echo "</div>";
            }
            
            echo "</div>";
        } else {
            echo "No reviews available for this item.";
        }
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
    }
}

// Function to calculate and display average rating
function getAverageRating($conn, $itemId) {
    // SQL query to calculate average rating
    $stmt = $conn->prepare("SELECT AVG(review_rating) AS avg_rating FROM reviews WHERE reviewed_item_id = :itemId");
    
    try {
        // Bind parameter
        $stmt->bindParam(':itemId', $itemId);
        
        // Execute the query
        $stmt->execute();
        
        // Fetch result
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['avg_rating'] !== null) {
            return number_format($result['avg_rating'], 1); // Round to one decimal place
        } else {
            return "No ratings yet";
        }
    } catch (PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
        return false;
    }
}
?>


// Add a new review
$userId = 1;
$userName = "John Doe";
$rating = 4;
$text = "This is a great product!";
if (addReview($conn, $userId, $userName, $rating, $text)) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

// Display reviews for item ID 5
displayReviews($conn, 5);

// Get and display average rating for item ID 5
$averageRating = getAverageRating($conn, 5);
if ($averageRating) {
    echo "Average Rating: $averageRating stars";
}


<?php
function userReviewSystem() {
    // Static variables to store reviews and votes
    static $reviews = array();
    static $votes = array();

    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        if (isset($_POST['action'])) {
            switch ($_POST['action']) {
                case 'add_review':
                    // Add new review
                    $review_id = count($reviews);
                    $reviews[$review_id] = array(
                        'user' => $_POST['user_name'],
                        'comment' => $_POST['comment'],
                        'votes' => 0,
                        'vote_count' => 1 // Initial vote
                    );
                    break;
                
                case 'vote':
                    // Update votes for a review
                    $review_id = intval($_POST['review_id']);
                    if (!isset($votes[$review_id])) {
                        $votes[$review_id] = 0;
                    }
                    $votes[$review_id] += intval($_POST['value']);
                    break;
            }
        }
    }

    // Calculate average ratings
    foreach ($reviews as $id => $review) {
        if (isset($votes[$id])) {
            $reviews[$id]['average_rating'] = number_format(($votes[$id] / $review['vote_count']), 1);
        } else {
            $reviews[$id]['average_rating'] = 0;
        }
    }

    // Display review form and current reviews
    echo '<div class="review-system">';
    
    // Add Review Form
    echo '<h2>Add a Review</h2>';
    echo '<form method="post" action="">';
    echo '<input type="hidden" name="action" value="add_review">';
    echo '<p><strong>Your Name:</strong> <input type="text" name="user_name" required></p>';
    echo '<p><strong>Review:</strong> <textarea name="comment" rows="4" cols="50" required></textarea></p>';
    echo '<p><input type="submit" value="Submit Review"></p>';
    echo '</form>';

    // Display Reviews
    if (!empty($reviews)) {
        echo '<h2>Reviews</h2>';
        foreach ($reviews as $id => $review) {
            echo '<div class="review">';
            echo '<p><strong>' . htmlspecialchars($review['user']) . ':</strong></p>';
            echo '<p>' . htmlspecialchars($review['comment']) . '</p>';
            echo '<p>Average Rating: ' . $review['average_rating'] . '/5</p>';
            
            // Voting buttons
            if (!isset($_COOKIE["voted_$id"])) {
                echo '<form method="post" action="">';
                echo '<input type="hidden" name="action" value="vote">';
                echo '<input type="hidden" name="review_id" value="' . $id . '">';
                echo '<input type="image" src="up_arrow.png" name="value" value="1">';
                echo '<input type="image" src="down_arrow.png" name="value" value="-1">';
                echo '</form>';
            } else {
                echo '<p>Thank you for voting!</p>';
            }
            
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet. Be the first to review!</p>';
    }

    echo '</div>';

    // Add some basic styling
    echo '<style>
        .review-system {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #eee;
            border-radius: 3px;
        }
        form {
            margin-bottom: 20px;
        }
        input[type="text"], textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>';
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Check if user already submitted a review for this product
    $check_query = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = $conn->prepare($check_query);
    $stmt->bind_param("ii", $user_id, $product_id);
    $stmt->execute();
    
    if ($stmt->fetch()) {
        return false; // User already reviewed
    }
    
    // Insert new review
    $insert_query = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
                    VALUES (?, ?, ?, ?, NOW())";
    $stmt = $conn->prepare($insert_query);
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    // Get all reviews for this product
    $query = "SELECT r.id, r.rating, r.comment, r.created_at, u.username 
             FROM reviews r 
             JOIN users u ON r.user_id = u.id 
             WHERE r.product_id = ?
             ORDER BY r.created_at DESC";
             
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
}

// Function to get average rating for a product
function get_average_rating($product_id) {
    global $conn;
    
    // Calculate average rating
    $query = "SELECT AVG(rating) as average 
             FROM reviews 
             WHERE product_id = ?";
             
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result()->fetch_assoc();
    return round($result['average'], 2); // Round to 2 decimal places
}

// Example usage:

// Submit a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id']; // Get logged-in user's ID
    $product_id = $_GET['product_id'];
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));
    
    if ($rating >= 1 && $rating <= 5) {
        if (submit_review($user_id, $product_id, $rating, $comment)) {
            echo "Review submitted successfully!";
        } else {
            echo "Error submitting review or you already reviewed this product.";
        }
    } else {
        echo "Please select a valid rating between 1 and 5.";
    }
}

// Display reviews for a product
$product_id = $_GET['product_id'];
$reviews = get_reviews($product_id);
$average_rating = get_average_rating($product_id);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .rating-stars {
            display: inline-block;
            color: gold;
        }
        .review-form {
            margin-bottom: 20px;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <h2>Product Reviews</h2>
    
    <!-- Review Form -->
    <?php if (isset($_SESSION['user_id'])) { ?>
        <form class="review-form" method="post">
            <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
            
            <div class="rating-stars">
                <input type="radio" name="rating" value="5"> ★★★★★<br>
                <input type="radio" name="rating" value="4"> ★★★★<br>
                <input type="radio" name="rating" value="3"> ★★★<br>
                <input type="radio" name="rating" value="2"> ★★<br>
                <input type="radio" name="rating" value="1"> ★<br>
            </div>
            
            <textarea name="comment" placeholder="Write your review..."></textarea><br>
            
            <button type="submit" name="submit_review">Submit Review</button>
        </form>
    <?php } else { ?>
        <p>Please login to submit a review.</p>
    <?php } ?>

    <!-- Display Reviews -->
    <div class="reviews-container">
        <h3>Average Rating: <?php echo $average_rating; ?> / 5</h3>
        
        <?php foreach ($reviews as $review) { ?>
            <div class="review-container">
                <strong><?php echo $review['username']; ?></strong><br>
                <?php 
                    // Display stars
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $review['rating']) {
                            echo "★";
                        } else {
                            echo "☆";
                        }
                    }
                ?>
                
                <p><?php echo $review['comment']; ?></p>
                <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
            </div>
        <?php } ?>

    </div>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Review functions class
class UserReview {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Display reviews for a product
    public function displayReviews($productId) {
        $query = "SELECT * FROM reviews WHERE product_id = ?";
        
        if ($stmt = mysqli_prepare($this->conn, $query)) {
            mysqli_stmt_bind_param($stmt, "i", $productId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review'>";
                echo "<h3>By " . htmlspecialchars($row['author']) . "</h3>";
                echo "<p>" . htmlspecialchars($row['content']) . "</p>";
                echo "<div class='rating'>";
                $this->displayStars($row['rating']);
                echo "</div>";
                echo "<small>" . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
                echo "</div>";
            }

            mysqli_stmt_close($stmt);
        }
    }

    // Submit a new review
    public function submitReview($userId, $productId, $rating, $content) {
        if ($rating < 1 || $rating > 5) {
            return "Invalid rating. Please choose between 1 and 5 stars.";
        }

        $query = "INSERT INTO reviews (user_id, product_id, rating, content, timestamp) VALUES (?, ?, ?, ?, NOW())";
        
        if ($stmt = mysqli_prepare($this->conn, $query)) {
            mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $content);
            
            if (mysqli_stmt_execute($stmt)) {
                return true;
            } else {
                return "Error submitting review: " . mysqli_error($this->conn);
            }
            mysqli_stmt_close($stmt);
        }
    }

    // Delete a review
    public function deleteReview($reviewId) {
        $query = "DELETE FROM reviews WHERE id = ?";
        
        if ($stmt = mysqli_prepare($this->conn, $query)) {
            mysqli_stmt_bind_param($stmt, "i", $reviewId);
            
            if (mysqli_stmt_execute($stmt)) {
                return true;
            } else {
                return "Error deleting review: " . mysqli_error($this->conn);
            }
            mysqli_stmt_close($stmt);
        }
    }

    // Helper function to display stars
    private function displayStars($rating) {
        for ($i = 1; $i <= 5; $i++) {
            if ($rating >= $i) {
                echo "<span class='fa fa-star'></span>";
            } elseif ($rating + 0.5 >= $i) {
                echo "<span class='fa fa-star-half-o'></span>";
            } else {
                echo "<span class='fa fa-star-o'></span>";
            }
        }
    }
}

// Initialize the UserReview object
$reviewSystem = new UserReview($conn);

// Example usage:

// Display reviews for product ID 1
$reviewSystem->displayReviews(1);

// Submit a review
$userId = 1;
$productId = 1;
$rating = 4;
$content = "This is a great product!";
echo $reviewSystem->submitReview($userId, $productId, $rating, $content) ? "Review submitted successfully!" : "Error submitting review.";

// Delete a review
$reviewId = 1;
echo $reviewSystem->deleteReview($reviewId) ? "Review deleted successfully!" : "Error deleting review.";

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to create review form
function createReviewForm() {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <h2>Write a Review</h2>
        <div class="form-group">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>
            
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>
            
            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="5" cols="40" required></textarea><br>
            
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select><br>
            
            <input type="submit" name="submit_review" value="Submit Review">
        </div>
    </form>
    <?php
}

// Function to handle review submission
function submitReview($conn) {
    if (isset($_POST['submit_review'])) {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $review = mysqli_real_escape_string($conn, $_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate input
        if (empty($name) || empty($email) || empty($review) || $rating < 1 || $rating > 5) {
            echo "Please fill in all required fields and select a valid rating.";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, review_text, rating) 
                VALUES ('$name', '$email', '$review', '$rating')";
        
        if (mysqli_query($conn, $sql)) {
            echo "<div class='success'>Thank you for submitting your review!</div>";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Get all reviews
    $sql = "SELECT name, review_text, rating FROM reviews";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        echo "<h2>Customer Reviews</h2>";
        while ($row = mysqli_fetch_assoc($result)) {
            $stars = str_repeat("★", $row['rating']);
            echo "
                <div class='review'>
                    <p><strong>{$row['name']}</strong></p>
                    <p>$stars</p>
                    <p>{$row['review_text']}</p>
                </div>
            ";
        }
    } else {
        echo "No reviews yet. Be the first to review!";
    }

    // Calculate average rating
    $avg_sql = "SELECT AVG(rating) as avg_rating FROM reviews";
    $avg_result = mysqli_query($conn, $avg_sql);
    $avg_row = mysqli_fetch_assoc($avg_result);

    if ($avg_row['avg_rating'] !== null) {
        echo "
            <div class='average-rating'>
                <h3>Average Rating:</h3>
                <p>" . number_format($avg_row['avg_rating'], 2) . " stars</p>
            </div>
        ";
    }
}

// Main function
function main() {
    global $conn;

    // Create review form and display reviews
    createReviewForm();
    submitReview($conn);
    displayReviews($conn);

    mysqli_close($conn);
}

main();

?>


<?php
function create_user_review($review_text, $rating, $user_id, $product_id) {
    // Database connection configuration
    include 'db_config.php';

    try {
        // Check if all required parameters are set
        if (!isset($review_text, $rating, $user_id, $product_id)) {
            throw new Exception("Missing required parameters");
        }

        // Prepare the SQL statement
        $stmt = $pdo->prepare("
            INSERT INTO reviews (
                review_text,
                rating,
                user_id,
                product_id,
                created_at
            ) VALUES (
                :review_text,
                :rating,
                :user_id,
                :product_id,
                NOW()
            )
        ");

        // Bind parameters to the statement
        $stmt->bindParam(':review_text', $review_text);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);

        // Execute the query
        if ($stmt->execute()) {
            return true; // Review created successfully
        } else {
            throw new Exception("Error creating review");
        }

    } catch (PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return false;
    } catch (Exception $e) {
        // Handle other errors
        error_log("Application error: " . $e->getMessage());
        return false;
    }
}
?>


<?php
include 'db_config.php';
include 'review_function.php';

// Sample data
$review_text = "This is a great product!";
$rating = 5;
$user_id = 123;
$product_id = 456;

if (create_user_review($review_text, $rating, $user_id, $product_id)) {
    echo "Review created successfully!";
} else {
    echo "Error creating review.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($productId, $userName, $userEmail, $rating, $reviewText) {
    global $conn;

    // Sanitize inputs
    $sanitizedName = mysqli_real_escape_string($conn, htmlspecialchars($userName));
    $sanitizeEmail = mysqli_real_escape_string($conn, htmlspecialchars($userEmail));
    $sanitizeRating = intval($rating);
    $sanitizeReview = mysqli_real_escape_string($conn, htmlspecialchars($reviewText));

    // Check if all required fields are filled
    if (empty($sanitizedName) || empty($sanitizeEmail) || empty($sanitizeRating) || empty($sanitizeReview)) {
        return "Please fill in all required fields.";
    }

    // Validate email format
    if (!filter_var($sanitizeEmail, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    // Ensure rating is between 1 and 5
    if ($sanitizeRating < 1 || $sanitizeRating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, review_text, timestamp) VALUES (?, ?, ?, ?, ?, NOW())");
    $stmt->bind_param("issssi", $productId, $sanitizedName, $sanitizeEmail, $sanitizeRating, $sanitizeReview);

    if ($stmt->execute()) {
        return "Thank you for your review!";
    } else {
        return "Error: " . $stmt->error;
    }

    $stmt->close();
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;

    // Get all reviews for the product
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC");
    $stmt->bind_param("i", $productId);
    $stmt->execute();

    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        // Display each review
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
        echo "<small>Posted on: " . $row['timestamp'] . "</small>";
        echo "</div>";
    }

    $stmt->close();
}

// Close database connection
$conn->close();
?>


<?php
require_once 'db_connect.php';

// Get form data
$productId = $_POST['product_id'];
$userName = $_POST['name'];
$userEmail = $_POST['email'];
$rating = $_POST['rating'];
$reviewText = $_POST['review'];

// Add the review
$message = addReview($productId, $userName, $userEmail, $rating, $reviewText);

echo $message;
?>


<?php
require_once 'db_connect.php';

$productId = 1; // Set this to your current product ID

displayReviews($productId);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize inputs
    $reviewName = htmlspecialchars($_POST['review_name']);
    $reviewText = htmlspecialchars($_POST['review_text']);
    $rating = intval($_POST['rating']);

    // Insert into database
    $sql = "INSERT INTO reviews (username, review_text, rating) VALUES ('$reviewName', '$reviewText', $rating)";
    
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>Thank you for your review!</div>";
    } else {
        echo "<div class='error'>Error submitting review: " . mysqli_error($conn) . "</div>";
    }
}

// Display existing reviews
$sql = "SELECT * FROM reviews ORDER BY date_posted DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        $username = htmlspecialchars($row['username']);
        $reviewText = nl2br(htmlspecialchars($row['review_text']));
        $rating = intval($row['rating']);
        $datePosted = date('F j, Y g:i a', strtotime($row['date_posted']));

        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='username'>$username</span>";
        echo "<span class='stars'>"; 
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                echo "<span class='star-filled'>★</span>";
            } else {
                echo "<span class='star-empty'>☆</span>";
            }
        }
        echo "</span>";
        echo "<span class='date'>$datePosted</span>";
        echo "</div>";
        echo "<p class='review-text'>$reviewText</p>";
        echo "</div>";
    }
} else {
    echo "<div class='info'>No reviews found yet!</div>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to handle user reviews
function submit_review($user_id, $product_id, $rating, $comment) {
    // Validate inputs
    if (empty($user_id) || empty($product_id)) {
        return "Error: User ID and Product ID are required.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }
    
    // Database connection parameters
    $host = 'localhost';
    $dbname = 'your_database_name';
    $dbuser = 'your_username';
    $dbpass = 'your_password';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $dbuser, $dbpass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if user has already reviewed this product
        $stmt = $conn->prepare("SELECT review_id FROM reviews WHERE user_id = :user_id AND product_id = :product_id");
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            return "Error: You have already submitted a review for this product.";
        }

        // Insert new review into database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) 
                              VALUES (:user_id, :product_id, :rating, :comment)");
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            // Return success message
            return "Thank you for submitting your review!";
        } else {
            // Return error message
            return "Error: Failed to submit review.";
        }

    } catch(PDOException $e) {
        // Handle any database errors
        return "Database Error: " . $e->getMessage();
    } finally {
        // Close database connection
        $conn = null;
    }
}

// Example usage:
$user_id = 123; // Replace with actual user ID
$product_id = 456; // Replace with actual product ID
$rating = 5; // Rating between 1 and 5
$comment = "Great product! Highly recommend.";

$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result;
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($review_id, $user_id, $rating, $comment, $conn) {
    // Sanitize input
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (review_id, user_id, rating, comment, review_date) 
            VALUES (?, ?, ?, ?, NOW())";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ssis", $review_id, $user_id, $rating, $comment);
        $stmt->execute();
        $stmt->close();
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($item_id, $conn) {
    // Get all reviews for the item
    $sql = "SELECT r.review_id, u.user_name, r.rating, r.comment, r.review_date 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.item_id = ? 
            ORDER BY r.review_date DESC";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $item_id);
        $stmt->execute();
        $result = $stmt->get_result();

        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>Review by: " . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
        
        $stmt->close();
    }
}

// Function to calculate average rating
function calculate_average_rating($item_id, $conn) {
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average 
            FROM reviews 
            WHERE item_id = ?";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $item_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            return round($row['average'], 1);
        }
        
        $stmt->close();
    }
    
    return 0;
}

// Example usage:
$item_id = "item123";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

// Display all reviews for the item
display_reviews($item_id, $conn);

// Calculate and display average rating
$average_rating = calculate_average_rating($item_id, $conn);
echo "<div class='average-rating'>";
echo "Average Rating: " . str_repeat("★", $average_rating) . " ($average_rating/5)";
echo "</div>";

// Close database connection
$conn->close();

?>


<?php
session_start();
require_once('config.php'); // Database connection file

// Function to display review form
function display_review_form() {
    $output = '
        <form action="submit_review.php" method="POST">
            <input type="hidden" name="csrf_token" value="' . $_SESSION['csrf_token'] . '">
            <div>
                <label for="review_title">Review Title:</label>
                <input type="text" id="review_title" name="review_title" required>
            </div>
            <div>
                <label for="review_text">Review Text:</label>
                <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea>
            </div>
            <div>
                <label for="rating">Rating:</label>
                <select id="rating" name="rating">
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>
            <input type="submit" value="Submit Review">
        </form>
    ';
    return $output;
}

// Function to handle review submission
function handle_review_submission() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $review_title = htmlspecialchars($_POST['review_title']);
        $review_text = htmlspecialchars($_POST['review_text']);
        $rating = intval($_POST['rating']);
        
        // Validate inputs
        if (empty($review_title) || empty($review_text)) {
            die("Please fill in all required fields.");
        }
        
        // Database connection
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, review_title, review_text, rating, timestamp)
                VALUES ('".$_SESSION['user_id']."', '".$review_title."', '".$review_text."','".$rating."', NOW())";
                
        if ($conn->query($sql) === TRUE) {
            echo "<p>Thank you for submitting your review!</p>";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
        
        $conn->close();
    }
}

// Function to display reviews
function display_reviews() {
    $output = '<div class="reviews">';
    
    // Database connection
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $output .= '
                <div class="review">
                    <h3>'.$row['review_title'].'</h3>
                    <p>'.$row['review_text'].'</p>
                    <div class="rating">';
                        for ($i=1; $i<=$row['rating']; $i++) {
                            $output .= '<span class="star">★</span>';
                        }
                        for ($i=1; $i<=(5 - $row['rating']); $i++) {
                            $output .= '<span class="star">☆</span>';
                        }
                    $output .= '</div>
                    <p>Submitted by: '.$row['user_id'].' on '.date('F j, Y', strtotime($row['timestamp'])).'</p>
                </div>
            ';
        }
    } else {
        $output .= '<p>No reviews found.</p>';
    }
    
    $output .= '</div>';
    return $output;
}
?>


<?php
DB_HOST = 'localhost';
DB_USER = 'your_username';
DB_PASSWORD = 'your_password';
DB_NAME = 'your_database_name';
?>


<?php
// Database configuration
$host = "localhost";
$username = "root"; // your database username
$password = ""; // your database password
$dbname = "reviews_db"; // your database name

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function addReview($userName, $reviewText, $rating) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection
    $userName = sanitizeInput($userName);
    $reviewText = sanitizeInput($reviewText);
    $rating = intval($rating); // Ensure rating is an integer
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating) 
            VALUES ('$userName', '$reviewText', $rating)";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to get all reviews
function getReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        return $result;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to calculate average rating
function getAverageRating() {
    global $conn;
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    
    if ($result && mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        return round($row['average'], 1); // Round to one decimal place
    } else {
        return 0;
    }
}

// Function to sanitize input data
function sanitizeInput($data) {
    global $conn;
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = mysqli_real_escape_string($conn, $data);
    return $data;
}

// Display review form and reviews
echo '<!DOCTYPE html>';
echo '<html>';
echo '<head>';
echo '<title>User Reviews</title>';
echo '<style>';
echo '/* Add some basic styling */';
echo '.review-form { max-width: 600px; margin: 20px auto; padding: 20px; }';
echo '.review-list { margin-top: 30px; }';
echo '.review-item { border-bottom: 1px solid #ddd; padding: 15px 0; }';
echo 'h2 { color: #333; font-size: 24px; }';
echo '</style>';
echo '</head>';
echo '<body>';

// Display average rating
$averageRating = getAverageRating();
echo "<h2>Product Reviews (Average Rating: $averageRating/5)</h2>";

// Review submission form
echo '<div class="review-form">';
echo '<form method="POST" action="">';
echo 'Name:<br>';
echo '<input type="text" name="userName" required><br><br>';
echo 'Review:<br>';
echo '<textarea name="reviewText" rows="4" cols="50" required></textarea><br><br>';
echo 'Rating (1-5):<br>';
echo '<input type="number" name="rating" min="1" max="5" required><br><br>';
echo '<input type="submit" value="Submit Review">';
echo '</form>';
echo '</div>';

// Process review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userName = $_POST['userName'];
    $reviewText = $_POST['reviewText'];
    $rating = $_POST['rating'];
    
    if (addReview($userName, $reviewText, $rating)) {
        echo '<script>alert("Thank you for submitting your review!");</script>';
    } else {
        echo '<script>alert("Error: Review submission failed. Please try again.");</script>';
    }
}

// Display existing reviews
echo '<div class="review-list">';
$reviews = getReviews();
if ($reviews) {
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo '<div class="review-item">';
        echo '<strong>' . $row['user_name'] . '</strong><br>';
        echo nl2br($row['review_text']) . '<br>';
        echo 'Rating: ' . str_repeat('★', $row['rating']) . str_repeat('☆', 5 - $row['rating']) . '<br>';
        echo 'Submitted on: ' . $row['submission_date'];
        echo '</div>';
    }
}
echo '</div>';

echo '</body>';
echo '</html>';
?>


<?php
function createReview($userId, $productId, $reviewText, $rating, $reviewId) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Connect to database
    $connection = mysqli_connect($host, $username, $password, $database);
    
    if (!$connection) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($connection, $userId);
    $productId = mysqli_real_escape_string($connection, $productId);
    $reviewText = mysqli_real_escape_string($connection, $reviewText);
    $rating = mysqli_real_escape_string($connection, $rating);

    // Create the SQL query
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating, review_id)
            VALUES ('$userId', '$productId', '$reviewText', '$rating', '$reviewId')";

    // Execute the query
    if (mysqli_query($connection, $sql)) {
        // Close the database connection
        mysqli_close($connection);
        return true;
    } else {
        // Close the database connection and return false on error
        mysqli_close($connection);
        return false;
    }
}
?>


<?php
$userId = 123;
$productId = 456;
$reviewText = "This is a great product!";
$rating = 5;
$reviewId = uniqid(); // Generate a unique review ID

if (createReview($userId, $productId, $reviewText, $rating, $reviewId)) {
    echo "Review created successfully!";
} else {
    echo "Error creating review.";
}
?>


<?php
// Database connection configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submit_review($product_id, $rating, $comment, $conn) {
    // Sanitize and validate inputs
    $rating = intval($rating);
    $comment = htmlspecialchars($comment);
    
    // Check if the rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating from 1 to 5.";
    }
    
    // Check if comment is not empty and has less than 200 characters
    if (strlen(trim($comment)) == 0 || strlen($comment) > 200) {
        return "Comment must be between 1 and 200 characters long.";
    }

    // Prepare and bind the statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, rating, comment, submission_date) VALUES (?, ?, ?, NOW())");
    $stmt->bind_param("iis", $product_id, $rating, $comment);

    if ($stmt->execute()) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close the statement
    $stmt->close();
}

function display_reviews($product_id, $conn) {
    // Get all reviews for the specified product
    $query = "SELECT rating, comment, submission_date FROM reviews WHERE product_id = ?";
    
    try {
        $stmt = $conn->prepare($query);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "<div class='reviews'>";
            
            // Calculate average rating
            $avg_query = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = ?";
            $avg_stmt = $conn->prepare($avg_query);
            $avg_stmt->bind_param("i", $product_id);
            $avg_stmt->execute();
            $avg_result = $avg_stmt->get_result();
            $row = $avg_result->fetch_assoc();
            
            echo "<div class='average-rating'>";
                echo "Average Rating: <span>" . number_format($row['avg_rating'], 1) . "</span>";
            echo "</div>";

            // Display each review
            while ($review = $result->fetch_assoc()) {
                echo "<div class='review'>";
                    echo "<div class='rating'>Rating: ";
                    for ($i = 0; $i < $review['rating']; $i++) {
                        echo "★";
                    }
                    echo "</div>";
                    echo "<div class='comment'>" . $review['comment'] . "</div>";
                    echo "<div class='date'>" . date("j M Y", strtotime($review['submission_date'])) . "</div>";
                echo "</div>";
            }

            echo "</div>";
        } else {
            echo "No reviews yet.";
        }
    } catch (mysqli_sql_exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        // Sanitize user inputs
        $product_id = intval($_POST['product_id']);
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        // Call submit_review function
        $result = submit_review($product_id, $rating, $comment, $conn);
        echo $result;
    }
}

// Display reviews for product with ID 1
display_reviews(1, $conn);

// Close the database connection
mysqli_close($conn);
?>


<?php
function submitReview($userId, $rating) {
    // Validate inputs
    if (!is_numeric($userId)) {
        throw new Exception("Invalid user ID");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }

    try {
        // Database connection details
        require_once('db_config.php');

        // Connect to database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Check if user has already submitted a review
        $checkQuery = "SELECT * FROM reviews WHERE user_id = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param('i', $userId);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("User has already submitted a review");
        }

        // Insert the new review
        $insertQuery = "INSERT INTO reviews (user_id, rating, review_date) 
                       VALUES (?, ?, CURRENT_TIMESTAMP)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param('ii', $userId, $rating);
        $stmt->execute();

        // Calculate average rating
        $averageRating = calculateAverageRating($conn);

        // Close database connection
        $conn->close();

        return "Review submitted successfully! Current average rating: " . number_format($averageRating, 2);

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function calculateAverageRating($conn) {
    $query = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($query);
    
    if ($result === false) {
        throw new Exception("Error calculating average rating: " . $conn->error);
    }

    $row = $result->fetch_assoc();
    return $row['average'];
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');
?>


try {
    $result = submitReview($_POST['user_id'], $_POST['rating']);
    echo $result;
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a specific product
function get_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$product_id'
            ORDER BY r.review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        $reviews = array();
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        return false;
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming the form has fields: rating, comment
    $user_id = $_SESSION['user_id']; // Ensure user is logged in
    $product_id = 1; // Specific product ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Thank you for your review!";
    } else {
        echo "Error submitting your review. Please try again.";
    }
}

// Display reviews for product ID 1
$reviews = get_reviews(1);
if ($reviews) {
    foreach ($reviews as $review) {
        // Display each review
        echo "<div class='review'>";
        echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted by: " . $review['username'] . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet.";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Escape special characters and sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
}

// Function to calculate average rating
function calculate_average_rating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result()->fetch_assoc();
    
    return number_format($result['average'], 1, '.', '');
}

// Function to count reviews
function count_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as total FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result()->fetch_assoc();
    
    return $result['total'];
}

// Function to display reviews
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    $average_rating = calculate_average_rating($product_id);
    $review_count = count_reviews($product_id);
    
    echo "<div class='review-container'>";
    echo "<h3>" . $review_count . " Reviews</h3>";
    echo "<p>Average Rating: " . $average_rating . "/5</p>";
    
    if (empty($reviews)) {
        echo "<p>No reviews yet!</p>";
    } else {
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<p><strong>Rating:</strong> " . $review['rating'] . "/5</p>";
            echo "<p><strong>Review:</strong> " . $review['comment'] . "</p>";
            echo "<p><em>" . date('M j, Y', strtotime($review['review_date'])) . "</em></p>";
            echo "</div>";
        }
    }
    echo "</div>";
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_id = 1; // Set your product ID here
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review.";
    }
}

// Display reviews for product ID 1
display_reviews(1);

$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function insertReview($conn, $product_id, $user_name, $user_email, $rating, $comment) {
    $submission_date = date('Y-m-d H:i:s');
    
    // Prepare and bind
    $stmt = $conn->prepare("INSERT INTO user_reviews (product_id, user_name, user_email, rating, comment, submission_date)
                            VALUES (?, ?, ?, ?, ?, ?)");
    $stmt->bind_param("isssis", $product_id, $user_name, $user_email, $rating, $comment, $submission_date);
    
    // Execute
    if ($stmt->execute()) {
        return true;
    } else {
        error_log("Error inserting review: " . $stmt->error);
        return false;
    }
}

function getReviews($conn, $product_id) {
    $stmt = $conn->prepare("SELECT * FROM user_reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return $result->fetch_all(MYSQLI_ASSOC);
    } else {
        return array();
    }
}

// Close connection
$conn->close();
?>


<?php
include 'db.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $user_name = trim($_POST['user_name']);
    $user_email = trim($_POST['user_email']);
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']), ENT_QUOTES);
    
    // Basic validation
    if (empty($user_name) || empty($user_email) || !filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        die("Please fill in all fields correctly!");
    }
    
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5!");
    }
    
    // Include db connection
    include 'db.php';
    
    if (insertReview($conn, $product_id, $user_name, $user_email, $rating, $comment)) {
        header('Location: product_page.php?success=1');
        exit();
    } else {
        die("Error submitting review. Please try again.");
    }
}
?>


<?php
include 'db.php';

$product_id = 1; // Set your product ID here

// Get reviews for this product
$reviews = getReviews($conn, $product_id);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 20px;
        }
        .rating-stars {
            display: flex;
            gap: 5px;
            color: gold;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php
    if (isset($_GET['success']) && $_GET['success'] == 1) {
        echo "<p style='color: green;'>Thank you for your review!</p>";
    }

    foreach ($reviews as $review) {
        $rating = $review['rating'];
        $stars = str_repeat("★", $rating);
        $submission_date = date('M j, Y g:i a', strtotime($review['submission_date']));
        
        echo "<div class='review'>";
        echo "<div><strong>$review[user_name]</strong> - $stars ($submission_date)</div>";
        echo "<div><em>$review[comment]</em></div>";
        echo "</div>";
    }

    if (empty($reviews)) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
    ?>

    <h2>Write a Review</h2>
    <?php include 'review_form.php'; ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    // Sanitize input to prevent SQL injection and XSS attacks
    return htmlspecialchars(trim($data));
}

// Function to handle review submission
function submitReview() {
    global $conn;

    // Get form data
    $name = isset($_POST['name']) ? sanitizeInput($_POST['name']) : '';
    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : '';
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = isset($_POST['comment']) ? sanitizeInput($_POST['comment']) : '';

    // Handle image upload
    if (isset($_FILES['image'])) {
        $uploadDir = 'uploads/';
        $fileName = basename($_FILES['image']['name']);
        $filePath = $uploadDir . $fileName;

        if (move_uploaded_file($_FILES['image']['tmp_name'], $filePath)) {
            $imagePath = $filePath;
        } else {
            $imagePath = '';
            // Handle error
            echo "Error uploading file.";
        }
    } else {
        $imagePath = '';
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment, image) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("ssisi", $name, $email, $rating, $comment, $imagePath);

    if ($stmt->execute()) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review: " . $conn->error;
    }

    $stmt->close();
}

// Function to display reviews
function displayReviews() {
    global $conn;

    // Get all reviews from database, ordered by submission date
    $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Comment: " . nl2br(htmlspecialchars($row['comment'])) . "</p>";
            
            if ($row['image'] != '') {
                echo "<img src='" . htmlspecialchars($row['image']) . "' alt='Review Image'>";
            }
            
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }

    $result->close();
}

// Close database connection
$conn->close();

?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display reviews
function display_reviews($product_id, $conn) {
    // Get all reviews for this product
    $stmt = $conn->prepare("SELECT r.*, u.username, u.profile_picture FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = ?");
    $stmt->execute([$product_id]);
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    // Display each review
    foreach ($reviews as $review) {
        echo '<div class="review">';
        
        // User information
        echo '<div class="user-info">';
        echo '<img src="' . $review['profile_picture'] . '" alt="User profile picture">';
        echo '<span class="username">' . $review['username'] . '</span>';
        echo '</div>';
        
        // Review rating stars
        display_rating_stars($review['rating']);
        
        // Review comment
        echo '<p class="comment">' . $review['comment'] . '</p>';
        
        // Voting buttons
        echo '<div class="voting">';
        echo '<button onclick="vote_review(' . $review['id'] . ', 1)">↑ Upvote</button>';
        echo '<button onclick="vote_review(' . $review['id'] . ', -1)">↓ Downvote</button>';
        echo '</div>';
        
        // Review date
        echo '<span class="date">' . $review['created_at'] . '</span>';
        
        echo '</div>';
    }
}

// Helper function to display rating stars
function display_rating_stars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo '<img src="star-full.png" alt="Star">';
        } else {
            echo '<img src="star-empty.png" alt="Star">';
        }
    }
}

// Function to handle voting on reviews
function vote_review($review_id, $vote_type, $conn) {
    session_start();
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        return false;
    }
    
    $user_id = $_SESSION['user_id'];
    
    // Check if the user has already voted on this review
    $stmt = $conn->prepare("SELECT * FROM review_votes WHERE review_id = ? AND user_id = ?");
    $stmt->execute([$review_id, $user_id]);
    
    if ($stmt->rowCount() > 0) {
        return false; // User already voted
    }
    
    // Insert the vote
    $stmt = $conn->prepare("INSERT INTO review_votes (review_id, user_id, vote_type, created_at) VALUES (?, ?, ?, NOW())");
    $stmt->execute([$review_id, $user_id, $vote_type]);
    
    // Update the total votes for the review
    $stmt = $conn->prepare("UPDATE reviews SET votes = votes + 1 WHERE id = ?");
    $stmt->execute([$review_id]);
    
    return true;
}

// Function to submit a new review
function submit_review($product_id, $rating, $comment, $conn) {
    session_start();
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        return false;
    }
    
    $user_id = $_SESSION['user_id'];
    
    // Insert the review
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, created_at) VALUES (?, ?, ?, ?, NOW())");
    $stmt->execute([$user_id, $product_id, $rating, $comment]);
    
    return true;
}

// Example usage:
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        submit_review($_POST['product_id'], $_POST['rating'], $_POST['comment'], $conn);
    }
}

display_reviews(1, $conn);

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Function to add a new review
function add_review($user_id, $rating, $comment, $conn) {
    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    $timestamp = date('Y-m-d H:i:s');

    // SQL query to insert review
    $sql = "INSERT INTO reviews (user_id, rating, comment, timestamp) 
            VALUES ('$user_id', '$rating', '$comment', '$timestamp')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews
function get_reviews($conn) {
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-form { margin-bottom: 20px; }
        .review-stars { font-size: 24px; }
        .review-comment { margin-top: 10px; }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<div class="review-form">
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="user_id" value="<?php echo isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 'guest'; ?>">
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br><br>
        
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4" cols="50"></textarea><br><br>
        
        <input type="submit" value="Submit Review">
    </form>
</div>

<?php
// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_POST['user_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Connect to database again for this operation
    $conn = mysqli_connect($host, $username, $password, $dbname);
    if (add_review($user_id, $rating, $comment, $conn)) {
        echo "<script>alert('Review submitted successfully!');</script>";
    } else {
        echo "<script>alert('Error submitting review. Please try again.');</script>";
    }
    mysqli_close($conn);
}

// Display existing reviews
$conn = mysqli_connect($host, $username, $password, $dbname);
$reviews = get_reviews($conn);
mysqli_close($conn);

if (!empty($reviews)) {
    echo "<h2>Customer Reviews</h2>";
    foreach ($reviews as $review) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;'>";
        echo "<p><strong>User ID:</strong> " . $review['user_id'] . "</p>";
        echo "<div class='review-stars'>";
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "★";
        }
        echo "</div>";
        echo "<p class='review-comment'>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['timestamp'] . "</small>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews available.</p>";
}
?>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($product_id, $rating, $review_text, $user_id) {
    global $conn;
    
    // Check if the user is logged in (you should implement your own authentication system)
    if (!$user_id) {
        return "You must be logged in to post a review.";
    }
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    if (empty($review_text)) {
        return "Review text cannot be empty.";
    }
    
    // Escape special characters to prevent SQL injection
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, rating, review_text, user_id) 
            VALUES ($product_id, $rating, '$review_text', $user_id)";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review added successfully!";
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE product_id = $product_id 
            AND status = 'approved' 
            ORDER BY review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Error: " . mysqli_error($conn));
    }
    
    // Display reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h4>Review by: " . $row['username'] . "</h4>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . $row['review_text'] . "</p>";
        echo "<small>Posted on: " . $row['review_date'] . "</small>";
        echo "</div><br/>";
    }
}

// Function to edit a review
function edit_review($review_id, $rating, $review_text) {
    global $conn;
    
    // Check if the user is logged in (you should implement your own authentication system)
    $user_id = $_SESSION['user_id'];
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    if (empty($review_text)) {
        return "Review text cannot be empty.";
    }
    
    // Escape special characters to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    
    // Update review in database
    $sql = "UPDATE reviews 
            SET rating = $rating, 
                review_text = '$review_text', 
                review_date = NOW() 
            WHERE id = $review_id 
            AND user_id = $user_id";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review updated successfully!";
}

// Function to delete a review
function delete_review($review_id) {
    global $conn;
    
    // Check if the user is logged in (you should implement your own authentication system)
    $user_id = $_SESSION['user_id'];
    
    // Escape special characters to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    
    // Delete review from database
    $sql = "DELETE FROM reviews 
            WHERE id = $review_id 
            AND user_id = $user_id";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review deleted successfully!";
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $result = add_review(1, $_POST['rating'], $_POST['review_text'], 1);
    echo $result;
}

display_reviews(1);

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to validate input data
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to sanitize email input
function sanitizeEmail($email) {
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    return $email;
}

// Function to check if email is valid
function isValidEmail($email) {
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return true;
    } else {
        return false;
    }
}

// Function to handle review submission
function submitReview($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = validateInput($_POST['name']);
        $email = sanitizeEmail($_POST['email']);
        $rating = $_POST['rating'];
        $comment = validateInput($_POST['comment']);

        // Validate input data
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("All fields are required!");
        }

        if (!isValidEmail($email)) {
            die("Invalid email format!");
        }

        // Insert review into the database
        $sql = "INSERT INTO reviews (name, email, rating, comment)
                VALUES ('$name', '$email', '$rating', '$comment')";

        if ($conn->query($sql) === TRUE) {
            echo "Review submitted successfully!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . displayStars($row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<p>Submitted on: " . $row['submit_date'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to display stars based on rating
function displayStars($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "<span class='star'>★</span>";
        } else {
            $stars .= "<span class='star'>☆</span>";
        }
    }
    return $stars;
}

// Close the database connection
mysqli_close($conn);
?>


<?php
function submit_review($username, $product_id, $rating, $comments) {
    // Database connection details
    include 'db_config.php';

    try {
        // Connect to the database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // SQL query to insert review into the reviews table
        $sql = "INSERT INTO reviews (username, product_id, rating, comments, date)
                VALUES ('" . mysqli_real_escape_string($conn, $username) . "',
                        '" . mysqli_real_escape_string($conn, $product_id) . "',
                        '" . mysqli_real_escape_string($conn, $rating) . "',
                        '" . mysqli_real_escape_string($conn, $comments) . "',
                        NOW())";

        // Execute the query
        if ($conn->query($sql) === TRUE) {
            echo "Thank you for submitting your review!";
            
            // Get the newly inserted review to display it back
            $last_id = $conn->insert_id;
            $select_sql = "SELECT * FROM reviews WHERE id = '" . mysqli_real_escape_string($conn, $last_id) . "'";
            $result = $conn->query($select_sql);
            
            if ($result->num_rows > 0) {
                $row = $result->fetch_assoc();
                echo "<h3>Review submitted:</h3>";
                echo "<p><strong>Rating:</strong> " . $row['rating'] . "/5</p>";
                echo "<p><strong>Comments:</strong> " . $row['comments'] . "</p>";
            }
        } else {
            throw new Exception("Error: " . $sql . "<br>" . $conn->error);
        }

        // Close the database connection
        $conn->close();
    } catch (Exception $e) {
        echo "An error occurred while submitting your review: " . $e->getMessage();
    }
}

// Example usage:
// submit_review('john_doe', 123, 4, 'Great product! Highly recommended.');
?>


<?php
// Configuration file for database connection
require_once('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Retrieve and sanitize input values
    $name = htmlspecialchars(trim($_POST['name']));
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comments = htmlspecialchars(trim($_POST['comments']));
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comments)) {
        die("All fields are required.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Connect to database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and bind the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, email, rating, comments, timestamp) VALUES (?, ?, ?, ?, ?, NOW())");
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
    }

    $stmt->bind_param("isiii", $product_id, $name, $email, $rating, $comments);

    // Execute the statement
    if ($stmt->execute()) {
        echo "Thank you for submitting your review!";
    } else {
        die("Error: " . $stmt->error);
    }

    // Close resources
    $stmt->close();
    $conn->close();
}
?>


<?php
// Include database connection (you should create your own db_connection.php)
include('db_connection.php');

// Function to add a new review
function addReview($name, $email, $rating, $comment) {
    global $conn;
    
    // Sanitize input data to prevent SQL injection
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Check if all fields are filled
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields!";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, date)
            VALUES ('$name', '$email', '$rating', '$comment', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . $row['rating'] . " stars</p>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted on: " . $row['date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available yet!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include('review_functions.php');
displayReviews();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "reviews_db";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a user review
function createReview($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!is_numeric($product_id) || !is_numeric($user_id)) {
        throw new Exception("Invalid product or user ID");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }
    
    if (empty($comment) || strlen($comment) > 500) {
        throw new Exception("Comment is empty or too long (max 500 characters)");
    }
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment) 
            VALUES ($product_id, $user_id, $rating, '$comment')";
            
    if (!$conn->query($sql)) {
        throw new Exception("Error creating review: " . $conn->error);
    }
    
    // Update average rating for product
    updateAverageRating($product_id);
}

// Function to update average rating for a product
function updateAverageRating($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as total_reviews, AVG(rating) as avg_rating 
            FROM reviews 
            WHERE product_id = $product_id";
            
    $result = $conn->query($sql);
    
    if ($result && $row = $result->fetch_assoc()) {
        $total_reviews = $row['total_reviews'];
        $avg_rating = number_format($row['avg_rating'], 1, '.', '');
        
        // Update product table with new average rating
        $update_sql = "UPDATE products 
                      SET avg_rating = $avg_rating,
                          total_reviews = $total_reviews
                      WHERE id = $product_id";
                      
        if (!$conn->query($update_sql)) {
            throw new Exception("Error updating average rating: " . $conn->error);
        }
    } else {
        throw new Exception("Error fetching reviews: " . $conn->error);
    }
}

// Example usage:
try {
    // Create a review for product ID 1 by user ID 1
    createReview(1, 1, 5, "Great product! Highly recommend.");
    
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create database connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_review_function($action, $data = array()) {
    global $conn;
    
    // Array to hold response data
    $response = array();
    
    switch ($action) {
        case 'submit':
            // Sanitize and validate input data
            $review_id = isset($data['review_id']) ? mysqli_real_escape_string($conn, $data['review_id']) : '';
            $user_id = isset($data['user_id']) ? mysqli_real_escape_string($conn, $data['user_id']) : '';
            $product_id = isset($data['product_id']) ? mysqli_real_escape_string($conn, $data['product_id']) : '';
            $rating = isset($data['rating']) ? mysqli_real_escape_string($conn, $data['rating']) : '';
            $comment = isset($data['comment']) ? mysqli_real_escape_string($conn, $data['comment']) : '';
            
            // Validate required fields
            if ($user_id == '' || $product_id == '' || $rating == '') {
                $response['status'] = 'error';
                $response['message'] = 'All fields are required.';
                return $response;
            }
            
            // Insert review into database
            $sql = "INSERT INTO reviews (review_id, user_id, product_id, rating, comment)
                    VALUES ('$review_id', '$user_id', '$product_id', '$rating', '$comment')";
                    
            if (mysqli_query($conn, $sql)) {
                $response['status'] = 'success';
                $response['message'] = 'Review submitted successfully.';
            } else {
                $response['status'] = 'error';
                $response['message'] = 'Error submitting review: ' . mysqli_error($conn);
            }
            
            break;
            
        case 'display':
            // Get product ID
            $product_id = isset($data['product_id']) ? mysqli_real_escape_string($conn, $data['product_id']) : '';
            
            if ($product_id == '') {
                $response['status'] = 'error';
                $response['message'] = 'Product ID is required.';
                return $response;
            }
            
            // Get reviews from database
            $sql = "SELECT * FROM reviews WHERE product_id = '$product_id'";
            
            $result = mysqli_query($conn, $sql);
            
            if (mysqli_num_rows($result) > 0) {
                $reviews = array();
                
                while ($row = mysqli_fetch_assoc($result)) {
                    $reviews[] = $row;
                }
                
                $response['status'] = 'success';
                $response['data'] = $reviews;
            } else {
                $response['status'] = 'error';
                $response['message'] = 'No reviews found for this product.';
            }
            
            break;
            
        default:
            $response['status'] = 'error';
            $response['message'] = 'Invalid action.';
            break;
    }
    
    return $response;
}

// Example usage:

// Submitting a review
$review_data = array(
    'review_id' => '1',
    'user_id' => '123',
    'product_id' => '456',
    'rating' => '5',
    'comment' => 'This is a great product!'
);

$result = user_review_function('submit', $review_data);
print_r($result);

// Displaying reviews
$display_result = user_review_function('display', array('product_id' => '456'));
print_r($display_result);

?>


<?php
// Function to create a user review
function createReview($userId, $productId, $rating, $reviewText) {
    // Validate input parameters
    if (!is_numeric($userId) || !is_numeric($productId)) {
        return 'Invalid user or product ID';
    }
    if ($rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5';
    }
    if (strlen($reviewText) < 10 || strlen($reviewText) > 1000) {
        return 'Review text must be between 10 and 1000 characters';
    }

    // Database connection
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    
    try {
        // Prepare the SQL statement to insert a new review
        $stmt = $db->prepare("INSERT INTO reviews (user_id, product_id, rating, review_text, created_at) 
                             VALUES (:userId, :productId, :rating, :reviewText, NOW())");
        
        // Bind parameters
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':reviewText', $reviewText);

        // Execute the statement
        if ($stmt->execute()) {
            // Return success message with review details
            return [
                'status' => 'success',
                'message' => 'Review created successfully',
                'review_id' => $db->lastInsertId(),
                'user_id' => $userId,
                'product_id' => $productId,
                'rating' => $rating,
                'review_text' => $reviewText
            ];
        } else {
            return 'Error creating review';
        }
    } catch (PDOException $e) {
        // Handle any database errors
        return 'Database error: ' . $e->getMessage();
    }
}

// Example usage:
$userId = 123;
$productId = 456;
$rating = 5;
$reviewText = "This is a fantastic product! I would recommend it to everyone.";

$result = createReview($userId, $productId, $rating, $reviewText);
print_r($result);

?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "review_system";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Sanitize inputs
$name = mysqli_real_escape_string($conn, $_POST['username']);
$rating = intval($_POST['rating']);
$review = mysqli_real_escape_string($conn, $_POST['review']);

// Validate rating (1-5)
if ($rating < 1 || $rating > 5) {
    die("Invalid rating");
}

// Insert into database
$sql = "INSERT INTO reviews (user_name, rating, review_text) 
        VALUES ('$name', '$rating', '$review')";

if (mysqli_query($conn, $sql)) {
    header('Location: index.php');
} else {
    echo "Error: " . mysqli_error($conn);
}

mysqli_close($conn);
?>


<?php
function display_reviews() {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "review_system";

    $conn = mysqli_connect($servername, $username, $password, $dbname);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get all reviews ordered by timestamp
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 10px;'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Rating: " . $row['rating'] . " stars</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }

    // Close connection
    mysqli_close($conn);
}
?>


<?php
function get_average_rating() {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "review_system";

    $conn = mysqli_connect($servername, $username, $password, $dbname);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    $average = round($row['average'], 2);
    echo "Average Rating: " . $average;

    // Close connection
    mysqli_close($conn);
}
?>


<?php require 'review-system.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
</head>
<body>
    <h1>Product Review System</h1>
    
    <?php get_average_rating(); ?>
    
    <form action="submit-review.php" method="POST">
        <!-- Form elements as before -->
    </form>

    <div id="reviews-section">
        <?php display_reviews(); ?>
    </div>
</body>
</html>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating)) {
        return "All fields are required";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 123; // Replace with actual user ID
$product_id = 456; // Replace with actual product ID
$rating = 5;
$comment = "Great product! Highly recommended.";

$result = submit_review($user_id, $product_id, $rating, $comment);

if ($result === true) {
    echo "Review submitted successfully!";
} else {
    echo $result;
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$database = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Function to add a new review
function addReview($userId, $productId, $comment, $rating) {
    global $conn;
    
    // Sanitize input
    $comment = htmlspecialchars(strip_tags($comment));
    $rating = intval($rating);
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, comment, rating, created_at) 
              VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $comment, $rating);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;
    
    $query = "SELECT r.*, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = ?
              ORDER BY r.created_at DESC";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    return $result;
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    $query = "SELECT AVG(rating) as average 
              FROM reviews 
              WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average'], 1);
}

// Function to count total reviews
function getTotalReviews($productId) {
    global $conn;
    
    $query = "SELECT COUNT(*) as total 
              FROM reviews 
              WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $product_id);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['total'];
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    $reviews = getReviews($productId);
    
    while ($review = mysqli_fetch_assoc($reviews)) {
        $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
        
        echo "<div class='review'>";
        echo "<div class='user-info'>";
        echo "<img src='user-avatar.png' alt='" . $review['username'] . "'>";
        echo "<span class='username'>" . $review['username'] . "</span>";
        echo "<span class='date'>" . date('F j, Y', strtotime($review['created_at'])) . "</span>";
        echo "</div>";
        echo "<p class='comment'>" . $review['comment'] . "</p>";
        echo "<div class='rating'>";
        echo "<span class='stars'>" . $stars . "</span>";
        echo "<button class='upvote'>↑</button>";
        echo "<button class='downvote'>↓</button>";
        echo "</div>";
        echo "</div>";
    }
}

// Function to handle upvotes
function upvoteReview($reviewId, $userId) {
    global $conn;
    
    // Check if user has already voted
    $query = "SELECT * FROM votes WHERE review_id = ? AND user_id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        // Insert new vote
        $query = "INSERT INTO votes (review_id, user_id, vote_type) VALUES (?, ?, 'up')";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
        
        if (mysqli_stmt_execute($stmt)) {
            // Update review votes
            $query = "UPDATE reviews SET upvotes = upvotes + 1 WHERE id = ?";
            $stmt = mysqli_prepare($conn, $query);
            mysqli_stmt_bind_param($stmt, "i", $reviewId);
            
            return mysqli_stmt_execute($stmt);
        }
    }
    
    return false;
}

// Function to handle downvotes
function downvoteReview($reviewId, $userId) {
    global $conn;
    
    // Check if user has already voted
    $query = "SELECT * FROM votes WHERE review_id = ? AND user_id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        // Insert new vote
        $query = "INSERT INTO votes (review_id, user_id, vote_type) VALUES (?, ?, 'down')";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
        
        if (mysqli_stmt_execute($stmt)) {
            // Update review votes
            $query = "UPDATE reviews SET downvotes = downvotes + 1 WHERE id = ?";
            $stmt = mysqli_prepare($conn, $query);
            mysqli_stmt_bind_param($stmt, "i", $reviewId);
            
            return mysqli_stmt_execute($stmt);
        }
    }
    
    return false;
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $userId = 1; // Replace with actual user ID
    $productId = 1; // Replace with actual product ID
    $comment = $_POST['review_comment'];
    $rating = intval($_POST['review_rating']);
    
    if (addReview($userId, $productId, $comment, $rating)) {
        echo "Thank you for your review!";
    } else {
        echo "Error adding your review.";
    }
}
?>


<?php
// Database configuration
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get form values
    $productId = $_POST['product_id'];
    $userName = $_POST['user_name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Validate input data
    if (empty($productId) || empty($userName) || empty($rating) || empty($comment)) {
        echo "All fields are required!";
    } else {

        // Check if product_id is numeric
        if (!is_numeric($productId)) {
            die("Product ID must be a number.");
        }

        // Sanitize inputs
        $productId = sanitizeInput($productId);
        $userName = sanitizeInput($userName);
        $rating = sanitizeInput($rating);
        $comment = sanitizeInput($comment);

        // Check if rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5.");
        }

        // Prepare SQL statement to insert review
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, rating, comment) VALUES (?, ?, ?, ?)");
        
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        // Bind parameters
        $stmt->bind_param("isdi", $productId, $userName, $rating, $comment);

        // Execute the statement
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            echo "Error: " . $stmt->error;
        }

        // Close the statement
        $stmt->close();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Review submission function
function submitReview() {
    // Check if form was submitted
    if (isset($_POST['submit'])) {
        // Sanitize inputs
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate input data
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("Please fill in all required fields.");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format.");
        }

        // Database connection parameters
        $host = "localhost";
        $db_username = "root";
        $db_password = "";
        $database = "reviews_db";

        // Connect to database
        $connection = new mysqli($host, $db_username, $db_password, $database);

        // Check connection
        if ($connection->connect_error) {
            die("Connection failed: " . $connection->connect_error);
        }

        // Prepare and bind the statement
        $stmt = $connection->prepare("INSERT INTO reviews (name, email, rating, comment, timestamp) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)");
        
        if ($stmt === false) {
            die("Prepare failed: " . $connection->error);
        }

        $stmt->bind_param("ssii", $name, $email, $rating, $comment);

        // Execute the statement
        if (!$stmt->execute()) {
            die("Execute failed: " . $stmt->error);
        }

        // Close statements and connection
        $stmt->close();
        $connection->close();

        // Redirect after submission
        header("Location: thank_you.php");
        exit;
    }
}
?>


<?php
function submitReview($review_id = null, $user_id, $rating, $comment) {
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please enter a number between 1 and 5.";
    }

    // Connect to the database
    $mysqli = new mysqli("localhost", "username", "password", "database_name");
    
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    try {
        // Check if updating an existing review or creating a new one
        if ($review_id !== null) {
            // Update existing review
            $sql = "UPDATE reviews 
                    SET rating = ?, comment = ?
                    WHERE review_id = ? AND user_id = ?";
            
            $stmt = $mysqli->prepare($sql);
            $stmt->bind_param("dssi", $rating, $comment, $review_id, $user_id);
        } else {
            // Insert new review
            $sql = "INSERT INTO reviews (user_id, rating, comment)
                    VALUES (?, ?, ?)";
            
            $stmt = $mysqli->prepare($sql);
            $stmt->bind_param("dss", $user_id, $rating, $comment);
        }

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . $stmt->error;
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($mysqli !== null) {
            $mysqli->close();
        }
    }
}
?>


// Submitting a new review
$result = submitReview(null, 123, 5, "Great product!");
echo $result;

// Updating an existing review
$result = submitReview(456, 123, 4, "Good product but needs improvement.");
echo $result;


<?php
// Database connection settings
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $email, $rating, $comment, $conn) {
    // Sanitize input data
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment) 
            VALUES ('$name', '$email', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews
function getAllReviews($conn) {
    $sql = "SELECT * FROM reviews";
    $result = mysqli_query($conn, $sql);
    return $result;
}

// Function to calculate average rating
function getAverageRating($conn) {
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    return round($row['average'], 1); // Round to one decimal place
}

// Check if review was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST["name"];
    $email = $_POST["email"];
    $rating = isset($_POST["rating"]) ? intval($_POST["rating"]) : 0;
    $comment = $_POST["comment"];

    // Validate input
    if ($name == "" || $email == "" || $rating < 1 || $rating > 5) {
        echo "Please fill in all fields with valid information!";
    } else {
        addReview($name, $email, $rating, $comment, $conn);
    }
}

// Display review form
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .stars {
            display: inline-block;
            cursor: pointer;
            color: gold;
        }

        .review-list {
            margin-top: 30px;
        }

        .review-item {
            padding: 15px;
            border-bottom: 1px solid #ccc;
        }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Leave a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div style="margin-bottom: 10px;">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name">
        </div>

        <div style="margin-bottom: 10px;">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email">
        </div>

        <div style="margin-bottom: 10px;">
            <label>Rating:</label><br>
            <span class="stars" onclick="setRating(5)">★</span>
            <span class="stars" onclick="setRating(4)">★</span>
            <span class="stars" onclick="setRating(3)">★</span>
            <span class="stars" onclick="setRating(2)">★</span>
            <span class="stars" onclick="setRating(1)">★</span>
            <input type="hidden" id="rating" name="rating" value="0">
        </div>

        <div style="margin-bottom: 10px;">
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4"></textarea>
        </div>

        <input type="submit" value="Submit Review">
    </form>
</div>

<div class="review-list">
    <h2>Reviews</h2>
    <?php
    $average = getAverageRating($conn);
    echo "<p>Average Rating: $average stars</p>";
    
    $reviews = getAllReviews($conn);
    while ($row = mysqli_fetch_assoc($reviews)) {
        $stars = str_repeat("★", $row['rating']);
        $date = date('F j, Y', strtotime($row['timestamp']));
        
        echo "<div class=\"review-item\">";
        echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
        echo "<p>" . htmlspecialchars($row['email']) . " - $stars</p>";
        echo "<small>$date</small><br>";
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "</div>";
    }
    ?>
</div>

<script>
function setRating(rating) {
    document.getElementById('rating').value = rating;
    var stars = document.getElementsByClassName('stars');
    for (var i = 0; i < stars.length; i++) {
        if (i < rating) {
            stars[i].style.color = "gold";
        } else {
            stars[i].style.color = "#ccc";
        }
    }
}
</script>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Function to handle user reviews
function submit_review($review_id, $user_name, $user_email, $comment, $rating) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    // Connect to database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    if (empty($user_name) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // SQL query to insert review
    $sql = "INSERT INTO reviews (review_id, user_name, user_email, comment, rating, created_at, is_approved)
            VALUES (?, ?, ?, ?, ?, NOW(), 0)";

    // Prepare statement
    $stmt = $conn->prepare($sql);
    
    if (!$stmt) {
        return "Error preparing statement: " . $conn->error;
    }

    // Bind parameters
    $stmt->bind_param("issss", $review_id, $user_name, $user_email, $comment, $rating);

    // Execute the query
    if ($stmt->execute()) {
        // Review submitted successfully
        return "Review submitted successfully. It will be approved after moderation.";
    } else {
        // Error submitting review
        return "Error submitting review: " . $stmt->error;
    }

    // Close connection
    $conn->close();
}

// Example usage:
$user_name = "John Doe";
$user_email = "john@example.com";
$comment = "Great product!";
$rating = 5;

$result = submit_review(1, $user_name, $user_email, $comment, $rating);

echo $result;
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Review class
class Review {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Get reviews for an item
    public function getReviews($item_id) {
        $sql = "SELECT * FROM reviews WHERE item_id = ? ORDER BY timestamp DESC";
        $stmt = mysqli_prepare($this->conn, $sql);
        mysqli_stmt_bind_param($stmt, 'i', $item_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($row['user_name']) . '</h3>';
            echo '<p>Rating: ' . $row['rating'] . '/5</p>';
            echo '<p>' . htmlspecialchars($row['review_text']) . '</p>';
            echo '<small>Posted on: ' . date('F j, Y', strtotime($row['timestamp'])) . '</small>';
            echo '</div>';
        }
    }

    // Add a new review
    public function addReview($item_id, $user_name, $review_text, $rating) {
        $sql = "INSERT INTO reviews (item_id, user_name, review_text, rating) 
                VALUES (?, ?, ?, ?)";
        
        $stmt = mysqli_prepare($this->conn, $sql);
        mysqli_stmt_bind_param($stmt, 'isii', $item_id, $user_name, $review_text, $rating);
        
        if (mysqli_stmt_execute($stmt)) {
            header("Location: " . $_SERVER['PHP_SELF'] . "?item_id=$item_id");
            exit();
        } else {
            echo "Error adding review: " . mysqli_error($this->conn);
        }
    }
}

// Create Review instance
$review = new Review($conn);

// Get item ID from URL parameter
$item_id = isset($_GET['item_id']) ? intval($_GET['item_id']) : 1;

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = htmlspecialchars(trim($_POST['name']));
    $review_text = htmlspecialchars(trim($_POST['review']));
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    
    if (empty($user_name) || empty($review_text)) {
        echo "<div class='error'>Please fill in all required fields.</div>";
    } else {
        $review->addReview($item_id, $user_name, $review_text, $rating);
    }
}

// HTML and CSS
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        
        h1 {
            color: #333;
        }
        
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 4px;
        }
        
        h3 {
            color: #666;
            margin-top: 0;
        }
        
        .review p {
            color: #555;
        }
        
        small {
            color: #999;
            font-size: 0.8em;
        }
        
        .review-form {
            background-color: #f4f4f4;
            padding: 20px;
            border-radius: 4px;
            margin-top: 20px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
        }
        
        input[type="text"], textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Product Reviews</h1>
        
        <?php
        // Display existing reviews
        $review->getReviews($item_id);
        
        // Review submission form
        echo '<div class="review-form">';
        echo '<form method="POST" action="">';
        echo '<div class="form-group">';
        echo '<label for="name">Name:</label>';
        echo '<input type="text" id="name" name="name" required>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="rating">Rating (1-5):</label>';
        echo '<select id="rating" name="rating" required>';
        for ($i = 1; $i <= 5; $i++) {
            echo "<option value=\"$i\">$i</option>";
        }
        echo '</select>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="review">Review:</label>';
        echo '<textarea id="review" name="review" rows="5" required></textarea>';
        echo '</div>';
        
        echo '<button type="submit">Submit Review</button>';
        echo '</form>';
        echo '</div>';
        ?>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


function createReview($product_id, $user_name, $rating, $comment, $db_connection) {
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($db_connection, $product_id);
    $user_name = mysqli_real_escape_string($db_connection, $user_name);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($db_connection, $comment);

    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5 stars.";
    }
    
    if (strlen($comment) < 3) {
        return "Comment must be at least 3 characters long.";
    }

    // Insert review into database
    $insert_review = "INSERT INTO reviews (product_id, user_name, rating, comment)
                     VALUES ('$product_id', '$user_name', '$rating', '$comment')";
    
    if (!mysqli_query($db_connection, $insert_review)) {
        return "Error: " . mysqli_error($db_connection);
    }

    // Get all reviews for the product
    $get_reviews = "SELECT * FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($db_connection, $get_reviews);

    if (!$result) {
        return "Error fetching reviews: " . mysqli_error($db_connection);
    }

    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'user_name' => $row['user_name'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date_posted' => $row['date_posted']
        );
    }

    // Calculate average rating
    $total_ratings = count($reviews);
    if ($total_ratings > 0) {
        $sum_ratings = array_sum(array_column($reviews, 'rating'));
        $average_rating = $sum_ratings / $total_ratings;
    } else {
        $average_rating = 0;
    }

    // Return the average rating and reviews
    return array(
        'average_rating' => number_format($average_rating, 1),
        'reviews' => $reviews,
        'success' => true
    );
}


$db_connection = mysqli_connect("localhost", "username", "password", "database_name");


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = createReview(
        $_POST['product_id'],
        $_POST['user_name'],
        $_POST['rating'],
        $_POST['comment'],
        $db_connection
    );
    
    if (is_array($result)) {
        // Success, reviews updated
        $average_rating = $result['average_rating'];
        $reviews = $result['reviews'];
    } else {
        // Error message
        echo $result;
    }
}


<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php if (isset($average_rating)): ?>
        <h2>Average Rating: <?php echo $average_rating; ?> stars</h2>
        
        <?php foreach ($reviews as $review): ?>
            <div class="review">
                <p><strong><?php echo $review['user_name']; ?></strong></p>
                <p>Rating: <?php 
                    for ($i = 0; $i < $review['rating']; $i++) {
                        echo "★";
                    }
                ?></p>
                <p><?php echo $review['comment']; ?></p>
                <p><?php echo $review['date_posted']; ?></p>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>

    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        
        <p>Name: <input type="text" name="user_name"></p>
        <p>Rating: 
            <select name="rating">
                <option value="5">5 stars</option>
                <option value="4">4 stars</option>
                <option value="3">3 stars</option>
                <option value="2">2 stars</option>
                <option value="1">1 star</option>
            </select>
        </p>
        <p>Comment: <textarea name="comment"></textarea></p>
        
        <input type="submit" value="Submit Review">
    </form>
</body>
</html>


<?php
// Function to create/submit a review
function submitReview($reviewText, $rating, $userId = null, $productId = null, $reviewId = null) {
    // Configuration file
    include 'config.php';

    try {
        // Validate input
        if (empty($reviewText)) {
            throw new Exception("Review text cannot be empty.");
        }
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be a number between 1 and 5.");
        }

        // Sanitize inputs
        $reviewText = htmlspecialchars(trim($reviewText));
        $rating = intval($rating);
        if ($userId !== null) {
            $userId = intval($userId);
        }
        if ($productId !== null) {
            $productId = intval($productId);
        }

        // Database connection
        $pdo = new PDO("mysql:host=$dbHost;dbname=$dbName", $dbUser, $dbPass);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        if ($reviewId === null) {
            // Insert new review
            $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, created_at) 
                    VALUES (:userId, :productId, :rating, :reviewText, NOW())";
            
            $stmt = $pdo->prepare($sql);
            $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
            $stmt->bindParam(':productId', $productId, PDO::PARAM_INT);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':reviewText', $reviewText);

            if ($stmt->execute()) {
                return ['status' => 'success', 'message' => 'Review submitted successfully!'];
            } else {
                throw new Exception("Error submitting review.");
            }
        } else {
            // Update existing review
            $sql = "UPDATE reviews 
                    SET rating = :rating, 
                        review_text = :reviewText,
                        updated_at = NOW()
                    WHERE id = :reviewId";

            $stmt = $pdo->prepare($sql);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':reviewText', $reviewText);
            $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);

            if ($stmt->execute()) {
                return ['status' => 'success', 'message' => 'Review updated successfully!'];
            } else {
                throw new Exception("Error updating review.");
            }
        }
    } catch (Exception $e) {
        // Return error message
        return ['status' => 'error', 'message' => $e->getMessage()];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Get form data
        $reviewText = $_POST['review_text'];
        $rating = $_POST['rating'];
        $userId = isset($_POST['user_id']) ? $_POST['user_id'] : null;
        $productId = isset($_POST['product_id']) ? $_POST['product_id'] : null;
        $reviewId = isset($_POST['review_id']) ? $_POST['review_id'] : null;

        // Submit review
        $result = submitReview($reviewText, $rating, $userId, $productId, $reviewId);

        if ($result['status'] == 'success') {
            header("Location: thank_you.php?message=" . urlencode($result['message']));
            exit();
        } else {
            // Display error message
            echo '<script>alert("' . $result['message'] . '"); window.location.href = "submit_review.php";</script>';
        }
    } catch (Exception $e) {
        // Handle unexpected errors
        echo '<script>alert("An unexpected error occurred. Please try again later."); window.location.href = "submit_review.php";</script>';
    }
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_NAME', 'reviews_db');
define('DB_USER', 'root');
define('DB_PASS', '');

// Connect to database
try {
    $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Get form data
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;
    $user_name = isset($_POST['user_name']) ? htmlspecialchars(trim($_POST['user_name'])) : '';
    $email = isset($_POST['email']) ? htmlspecialchars(trim($_POST['email'])) : '';
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = isset($_POST['comment']) ? htmlspecialchars(trim($_POST['comment'])) : '';

    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    // Sanitize inputs
    $item_id = intval($item_id);
    $rating = intval($rating);

    try {
        // Prepare and execute the query
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            (item_id, user_name, email, rating, comment, submission_date) 
            VALUES (?, ?, ?, ?, ?, NOW())
        ");
        
        $stmt->execute(array($item_id, $user_name, $email, $rating, $comment));
        
        if ($stmt->rowCount() > 0) {
            echo "Thank you for your review!";
        } else {
            die("Error submitting review.");
        }
    } catch (PDOException $e) {
        die('Database error: ' . $e->getMessage());
    }
}

// Function to display reviews
function displayReviews($item_id) {
    global $conn;
    
    try {
        // Fetch reviews for the given item
        $stmt = $conn->prepare("
            SELECT * FROM reviews 
            WHERE item_id = ? 
            ORDER BY submission_date DESC
        ");
        
        $stmt->execute(array(intval($item_id)));
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Display reviews
        if (!empty($reviews)) {
            echo '<div class="reviews">';
            foreach ($reviews as $review) {
                echo '<div class="review">';
                echo '<h3>' . htmlspecialchars($review['user_name']) . '</h3>';
                echo '<p>Rating: ' . str_repeat('★', $review['rating']) . '</p>';
                echo '<p>' . htmlspecialchars($review['comment']) . '</p>';
                echo '<small>Submitted on: ' . date('F j, Y g:i a', strtotime($review['submission_date'])) . '</small>';
                echo '</div>';
            }
            echo '</div>';
        } else {
            echo '<p>No reviews available for this item.</p>';
        }
    } catch (PDOException $e) {
        die('Database error: ' . $e->getMessage());
    }
}
?>


<?php displayReviews([ITEM_ID]); ?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'reviews_db';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to create review form and display reviews
function userReviewSystem() {
    global $conn;
    
    // Get all reviews from the database
    $reviewsQuery = "SELECT * FROM reviews WHERE status = 'approved' ORDER BY date DESC";
    $reviewsResult = mysqli_query($conn, $reviewsQuery);
    
    // Display review form
    echo '<div class="review-form">';
    echo '<h2>Submit a Review</h2>';
    echo '<form action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" method="post">';
    echo 'Name: <input type="text" name="username" required><br>';
    echo 'Rating: ';
    for ($i = 1; $i <= 5; $i++) {
        echo "<input type='radio' name='rating' value='$i'>★ ";
    }
    echo '<br>Comment: <textarea name="comment" rows="4" cols="50" required></textarea><br>';
    echo '<input type="submit" name="submit_review" value="Submit Review">';
    echo '</form>';
    echo '</div>';
    
    // Display existing reviews
    if (mysqli_num_rows($reviewsResult) > 0) {
        echo '<h2>Customer Reviews</h2>';
        while ($row = mysqli_fetch_assoc($reviewsResult)) {
            $username = $row['username'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $date = date('F j, Y', strtotime($row['date']));
            
            echo '<div class="review">';
            echo "<h3>$username</h3>";
            displayStars($rating);
            echo "<p>Rating: $rating/5</p>";
            echo "<p>$comment</p>";
            echo "<small>Posted on: $date</small>";
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet.</p>';
    }
}

// Function to display stars based on rating
function displayStars($rating) {
    $fullStars = floor($rating);
    $hasHalfStar = ($rating - $fullStars) >= 0.5;
    
    for ($i = 1; $i <= $fullStars; $i++) {
        echo '★ ';
    }
    if ($hasHalfStar) {
        echo '⯨ '; // Half star
    }
    for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {
        echo '☆ '; // Empty star
    }
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    global $conn;
    
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $rating = filter_var($_POST['rating'], FILTER_VALIDATE_INT);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);
    
    if ($rating < 1 || $rating > 5) {
        die("Invalid rating value.");
    }
    
    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (username, rating, comment) VALUES (?, ?, ?)");
    $stmt->bind_param("sii", $username, $rating, $comment);
    if ($stmt->execute()) {
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } else {
        die("Error submitting review: " . $stmt->error);
    }
}

// Moderate reviews (approve/delete)
if (isset($_GET['action']) && isset($_GET['review_id'])) {
    global $conn;
    $reviewId = mysqli_real_escape_string($conn, $_GET['review_id']);
    
    if ($_GET['action'] == 'approve') {
        $stmt = $conn->prepare("UPDATE reviews SET status='approved' WHERE id=?");
        $stmt->bind_param("i", $reviewId);
        if ($stmt->execute()) {
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    } elseif ($_GET['action'] == 'delete') {
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id=?");
        $stmt->bind_param("i", $reviewId);
        if ($stmt->execute()) {
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    }
}

// Call the review system function
userReviewSystem();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review {
            margin: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .review-form {
            margin-bottom: 30px;
            padding: 20px;
            background-color: #f5f5f5;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>
    
    <?php userReviewSystem(); ?>

    <!-- Moderation links -->
    <?php if (isset($_SESSION['admin']) && $_SESSION['admin'] == true) { ?>
        <div style="margin-top: 20px;">
            <h3>Moderate Reviews</h3>
            <?php
                $moderationQuery = "SELECT * FROM reviews WHERE status != 'approved'";
                $modResult = mysqli_query($conn, $moderationQuery);
                
                if (mysqli_num_rows($modResult) > 0) {
                    while ($row = mysqli_fetch_assoc($modResult)) {
                        echo "<div class='review'>";
                        echo "<h3>{$row['username']}</h3>";
                        displayStars($row['rating']);
                        echo "<p>{$row['comment']}</p>";
                        echo "<a href='?action=approve&review_id={$row['id']}'>Approve</a> | ";
                        echo "<a href='?action=delete&review_id={$row['id']}'>Delete</a>";
                        echo "</div>";
                    }
                } else {
                    echo "No pending reviews.";
                }
            ?>
        </div>
    <?php } ?>

</body>
</html>


// Add this somewhere before calling userReviewSystem()
if (isset($_SESSION['admin'])) {
    $_SESSION['admin'] = true;
}


<?php
// Initialize session
session_start();

// Create unique token to prevent CSRF attacks
if (!isset($_SESSION['token'])) {
    $_SESSION['token'] = bin2hex(random_bytes(32));
}

// Database connection (replace with your database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process submitted review if form is submitted
if (isset($_POST['submit'])) {
    // Validate and sanitize input data
    $token = $_SESSION['token'];
    
    if ($_POST['token'] !== $token) {
        die("Invalid token. Please refresh the page.");
    }

    $name = htmlspecialchars(trim($_POST['name']));
    $review = htmlspecialchars(trim($_POST['review']));

    // Check if fields are not empty
    if (empty($name) || empty($review)) {
        $error_message = "Please fill in all required fields!";
    } else {
        // Insert review into database
        $sql = "INSERT INTO reviews (name, review, date)
                VALUES (?, ?, ?)";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $name, $review, date('Y-m-d H:i:s'));
        
        if ($stmt->execute()) {
            // Redirect to avoid form resubmission
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            $error_message = "Error submitting review. Please try again!";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-form { max-width: 600px; margin: 0 auto; padding: 20px; }
        .review-list { margin-top: 20px; }
        .review-item { border: 1px solid #ddd; padding: 15px; margin-bottom: 10px; }
    </style>
</head>
<body>
    <h1>User Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <?php if (isset($error_message)) { ?>
            <p style="color: red;"><?php echo $error_message ?></p>
        <?php } ?>

        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="hidden" name="token" value="<?php echo $token; ?>">

            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="4" cols="50" required></textarea><br><br>

            <button type="submit" name="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <?php
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) { ?>
        <div class="review-list">
            <?php while ($row = $result->fetch_assoc()) { ?>
                <div class="review-item">
                    <strong><?php echo htmlspecialchars($row['name']); ?></strong><br>
                    <?php echo htmlspecialchars($row['review']); ?><br>
                    <small>Posted on <?php echo date('F j, Y g:i a', strtotime($row['date'])); ?></small>
                </div>
            <?php } ?>
        </div>
    <?php } else { ?>
        <p>No reviews yet. Be the first to leave a review!</p>
    <?php } ?>

    <!-- Close database connection -->
    <?php $conn->close(); ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Create a connection to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!isset($product_id) || !is_numeric($product_id)) {
        return 'Invalid product ID';
    }
    if (!isset($user_id) || !is_numeric($user_id)) {
        return 'Invalid user ID';
    }
    if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5';
    }
    if (empty($comment)) {
        return 'Comment cannot be empty';
    }
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        return 'Please log in to post a review';
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, date) 
            VALUES ('$product_id', '$user_id', '$rating', '$comment', NOW())";
    
    if ($conn->query($sql)) {
        return 'Review added successfully';
    } else {
        return 'Error adding review: ' . $conn->error;
    }
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    // Validate input
    if (!isset($product_id) || !is_numeric($product_id)) {
        return 'Invalid product ID';
    }
    
    // Get reviews from database
    $sql = "SELECT r.rating, r.comment, r.date, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$product_id' 
            ORDER BY r.date DESC";
    
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $reviews = array();
        
        // Calculate average rating
        $average_rating = 0;
        $total_reviews = $result->num_rows;
        
        while ($row = $result->fetch_assoc()) {
            $average_rating += $row['rating'];
            $reviews[] = $row;
        }
        
        $average_rating /= $total_reviews;
        
        return array(
            'reviews' => $reviews,
            'average_rating' => $average_rating,
            'total_reviews' => $total_reviews
        );
    } else {
        return 'No reviews found for this product';
    }
}

// Example usage:
// Assuming user is logged in and has a session with user_id set

// Add a review
$review_result = add_review(1, $_SESSION['user_id'], 4, "Great product!");
echo $review_result;

// Display reviews for product ID 1
$reviews = display_reviews(1);
if (is_array($reviews)) {
    echo "<h3>Average Rating: " . number_format($reviews['average_rating'], 1) . "/5</h3>";
    echo "<p>Total Reviews: " . $reviews['total_reviews'] . "</p>";
    
    foreach ($reviews['reviews'] as $review) {
        echo "<div class='review'>";
        echo "<p><strong>" . $review['username'] . "</strong> - " . $review['rating'] . "/5</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<p>" . $review['date'] . "</p>";
        echo "</div>";
    }
} else {
    echo $reviews;
}

$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function add_review($product_id, $user_name, $review_text, $rating) {
    global $conn;
    
    // Validate rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, review_text, rating, review_date) 
                               VALUES (:product_id, :user_name, :review_text, :rating, NOW())");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':review_text', $review_text);
        $stmt->bindParam(':rating', $rating);
        
        $stmt->execute();
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = :product_id ORDER BY review_date DESC");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    
    if (!$reviews) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
        return;
    }
    
    $total_rating = 0;
    
    echo "<div class='reviews'>";
    foreach ($reviews as $review) {
        $rating = $review['rating'];
        $user_name = $review['user_name'];
        $review_text = $review['review_text'];
        $date = date('M j, Y g:i a', strtotime($review['review_date']));
        
        echo "<div class='review'>";
        echo "<h4>$user_name</h4>";
        echo "<p>Rating: $rating/5</p>";
        echo "<p>$review_text</p>";
        echo "<small>$date</small>";
        echo "</div>";
        
        $total_rating += $rating;
    }
    
    // Calculate average rating
    $average_rating = $reviews ? round($total_rating / count($reviews), 1) : 0;
    echo "<div class='average-rating'>";
    echo "<h3>Average Rating: $average_rating/5</h3>";
    echo "</div>";
    echo "</div>";
}

// Example usage:
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }
        .average-rating {
            margin-top: 20px;
            padding: 15px;
            background-color: #e6e6e6;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<?php
// Display review form and reviews for product ID 1
$product_id = 1;

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (add_review($product_id, $user_name, $review_text, $rating)) {
        echo "<p>Thank you for submitting your review!</p>";
    } else {
        echo "<p>Error submitting review. Please try again.</p>";
    }
}

// Display review form
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <h2>Write a Review</h2>
    <input type="text" name="user_name" placeholder="Your Name" required><br><br>
    <textarea name="review_text" placeholder="Your Review" required></textarea><br><br>
    <select name="rating" required>
        <option value="">Select Rating</option>
        <option value="5">5 Stars</option>
        <option value="4">4 Stars</option>
        <option value="3">3 Stars</option>
        <option value="2">2 Stars</option>
        <option value="1">1 Star</option>
    </select><br><br>
    <button type="submit" name="submit">Submit Review</button>
</form>

<!-- Display existing reviews -->
<h2>Product Reviews</h2>
<?php display_reviews($product_id); ?>

</body>
</html>


<?php
// Database connection details
$hostname = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create connection
$conn = mysqli_connect($hostname, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize user inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars($_POST['name']));
    $review = mysqli_real_escape_string($conn, htmlspecialchars($_POST['review']));

    if (!empty($name) && !empty($review)) {
        // Insert review into database
        $sql = "INSERT INTO reviews (name, review, timestamp)
                VALUES ('$name', '$review', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "<script>alert('Review submitted successfully!');</script>";
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            echo "Error submitting review: " . mysqli_error($conn);
        }
    } else {
        echo "Please fill in all required fields!";
    }
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .review-list { margin: 20px; }
        .review-item { margin-bottom: 20px; padding: 15px; background-color: #f9f9f9; }
    </style>
</head>
<body>
    <h1>Review System</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea><br><br>
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <div class="review-list">
        <?php
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));
                echo "<div class='review-item'>";
                echo "<h4>" . htmlspecialchars($row['name']) . "</h4>";
                echo "<p>" . htmlspecialchars($row['review']) . "</p>";
                echo "<small>Posted on: $timestamp</small>";
                echo "</div>";
            }
        } else {
            echo "No reviews yet!";
        }
        ?>
    </div>

    <?php
    // Close database connection
    mysqli_close($conn);
    ?>

</body>
</html>


<?php
function displayUserReviews($product_id) {
    // Database connection details
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    // Create database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to get reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Output the review content
        while ($row = $result->fetch_assoc()) {
            $username = $row['user_name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $date = $row['timestamp'];

            echo "<div class='review'>";
            echo "<h3>Reviewed by: " . $username . "</h3>";
            
            // Display stars
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<i class='fas fa-star'></i>";
                } else {
                    echo "<i class='far fa-star'></i>";
                }
            }
            echo "</div>";
            
            // Display comment
            echo "<p>" . $comment . "</p>";
            
            // Display date
            echo "<small>Reviewed on: " . date('F j, Y', strtotime($date)) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found for this product.";
    }

    // Close database connection
    $conn->close();
}
?>


<?php displayUserReviews(1); ?>


<?php
class ReviewManager {
    private $conn;

    public function __construct($host, $db_name, $username, $password) {
        try {
            $this->conn = new mysqli($host, $username, $password, $db_name);
            
            if ($this->conn->connect_error) {
                throw new Exception("Connection failed: " . $this->conn->connect_error);
            }
        } catch (Exception $e) {
            die("Connection Error: " . $e->getMessage());
        }
    }

    // Add a new review
    public function addReview($product_id, $user_id, $rating, $comment) {
        try {
            if ($rating < 1 || $rating > 5) {
                throw new Exception("Rating must be between 1 and 5");
            }
            
            $stmt = $this->conn->prepare("
                INSERT INTO reviews 
                (product_id, user_id, rating, comment, review_date)
                VALUES (?, ?, ?, ?, NOW())
            ");
            
            $stmt->bind_param("iisi", $product_id, $user_id, $rating, $comment);
            
            if ($stmt->execute()) {
                return true;
            } else {
                throw new Exception("Error adding review: " . $this->conn->error);
            }
        } catch (Exception $e) {
            die("Review Error: " . $e->getMessage());
        }
    }

    // Get reviews for a product
    public function getReviews($product_id, $limit = 5) {
        try {
            $stmt = $this->conn->prepare("
                SELECT 
                    r.review_id,
                    r.product_id,
                    r.user_id,
                    r.rating,
                    r.comment,
                    r.review_date,
                    u.username
                FROM reviews r
                LEFT JOIN users u ON r.user_id = u.user_id
                WHERE r.product_id = ?
                ORDER BY review_date DESC
                LIMIT ?
            ");
            
            $stmt->bind_param("ii", $product_id, $limit);
            $stmt->execute();
            
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                return $result->fetch_all(MYSQLI_ASSOC);
            } else {
                return array();
            }
        } catch (Exception $e) {
            die("Review Error: " . $e->getMessage());
        }
    }

    // Display reviews in HTML
    public function displayReviews($reviews) {
        if (empty($reviews)) {
            return "<p>No reviews available yet.</p>";
        }
        
        $html = "<div class='reviews'>";
        
        foreach ($reviews as $review) {
            $stars_html = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
            
            $html .= <<<HTML
                <div class="review-item">
                    <div class="review-header">
                        <span class="username">{$review['username']}</span>
                        <div class="stars">{$stars_html}</div>
                    </div>
                    <p class="comment">{$review['comment']}</p>
                    <small class="date">Posted on {$review['review_date']}</small>
                </div>
HTML;
        }
        
        $html .= "</div>";
        
        return $html;
    }

    // Close database connection
    public function __destruct() {
        if ($this->conn) {
            $this->conn->close();
        }
    }
}

// Example usage:
try {
    // Create ReviewManager instance
    $review_manager = new ReviewManager(
        'localhost',          // Database host
        'mydatabase',         // Database name
        'username',           // Database username
        'password'            // Database password
    );

    // Add a new review (assuming user_id 1 and product_id 1)
    $product_id = 1;
    $user_id = 1;
    $rating = 5;
    $comment = "This is an amazing product!";
    
    if ($review_manager->addReview($product_id, $user_id, $rating, $comment)) {
        echo "Review added successfully!";
    }

    // Get and display reviews
    $reviews = $review_manager->getReviews(1); // Get reviews for product ID 1
    
    // Output the HTML
    echo $review_manager->displayReviews($reviews);

} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .review {
            margin-bottom: 30px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .rating-stars {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>

<?php
// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    try {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (:name, :email, :rating, :comment)");
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        $stmt->execute();

        // Redirect to avoid form resubmission
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Display reviews
try {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    die("Error fetching reviews: " . $e->getMessage());
}
?>

<h1>Product Reviews</h1>

<!-- Review Form -->
<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Select a rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>
</div>

<!-- Display Reviews -->
<?php if (!empty($reviews)): ?>
<h2>Customer Reviews</h2>
<?php foreach ($reviews as $review): ?>
<div class="review">
    <h3><?php echo htmlspecialchars($review['name']); ?></h3>
    <p><?php echo htmlspecialchars($review['email']); ?></p>
    <div class="rating-stars">
        <?php 
            $stars = intval($review['rating']);
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $stars) {
                    echo "★";
                } else {
                    echo "☆";
                }
            }
        ?>
    </div>
    <p><?php echo htmlspecialchars($review['comment']); ?></p>
    <small>Submitted on: <?php echo date('F j, Y', strtotime($review['submission_date'])); ?></small>
</div>
<?php endforeach; ?>
<?php else: ?>
<p>No reviews have been submitted yet.</p>
<?php endif; ?>

</body>
</html>


<?php
// Function to display user reviews
function displayUserReviews($reviews) {
    // Check if there are any reviews to display
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }

    // Loop through each review and display it
    foreach ($reviews as $review) {
        // Create HTML structure for displaying the review
        echo "
            <div class='review-box'>
                <h3>{$review['title']}</h3>
                <p><strong>By {$review['author']}</strong></p>
                <p>Rating: ";
                    // Display stars based on rating
                    $rating = $review['rating'];
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $rating) {
                            echo "<span class='star'>★</span>";
                        } else {
                            echo "<span class='star'>☆</span>";
                        }
                    }
                echo "</p>
                <p>{$review['content']}</p>
                <small>Posted on: " . date('F j, Y', $review['date']) . "</small>
            </div>
        ";
    }
}

// Function to post a new review
function submitReview($name, $email, $title, $content, $rating) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    // Check if connection failed
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs and prepare SQL statement
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $title = mysqli_real_escape_string($conn, $title);
    $content = mysqli_real_escape_string($conn, $content);
    $rating = intval($rating);

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, title, content, rating, date) 
            VALUES ('$name', '$email', '$title', '$content', '$rating', NOW())";

    if (mysqli_query($conn, $sql)) {
        echo "<p>Review submitted successfully!</p>";
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}
?>


<?php
// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $database);

// Query to get all reviews
$sql = "SELECT * FROM reviews ORDER BY date DESC";
$result = mysqli_query($conn, $sql);

$reviews = array();
while ($row = mysqli_fetch_assoc($result)) {
    $reviews[] = $row;
}

mysqli_close($conn);

// Display the reviews
displayUserReviews($reviews);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    user_email VARCHAR(255),
    rating INT,
    comments TEXT,
    submission_date DATETIME
)";

mysqli_query($conn, $sql);

// Handle review submission
if (isset($_POST['submit'])) {
    // Sanitize input
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = intval($_POST['rating']);
    $comments = mysqli_real_escape_string($conn, $_POST['comments']);

    // Validate input
    $errors = [];
    if (empty($name) || empty($email) || empty($rating) || empty($comments)) {
        $errors[] = "All fields are required!";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($rating < 1 || $rating > 5) {
        $errors[] = "Rating must be between 1 and 5!";
    }

    // Display errors or insert into database
    if (!empty($errors)) {
        $_SESSION['error'] = implode('<br>', $errors);
    } else {
        $submission_date = date('Y-m-d H:i:s');
        
        $sql = "INSERT INTO reviews (user_name, user_email, rating, comments, submission_date)
                VALUES ('$name', '$email', $rating, '$comments', '$submission_date')";
                
        if (!mysqli_query($conn, $sql)) {
            $_SESSION['error'] = "There was an error submitting your review. Please try again!";
        }
    }

    // Redirect to avoid form resubmission
    header('Location: ' . $_SERVER['PHP_SELF']);
    exit();
}

// Get all reviews from database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);
$reviews = $result->fetch_all(MYSQLI_ASSOC);

// Calculate average rating
$sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews";
$result_avg = mysqli_query($conn, $sql_avg);
$avg_rating = $result_avg ? $result_avg->fetch_assoc()['avg_rating'] : 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .review-form { margin-bottom: 30px; }
        .error { color: red; margin-bottom: 10px; }
        .review { border: 1px solid #ddd; padding: 15px; margin-bottom: 15px; }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['error'])) { ?>
        <div class="error"><?php echo $_SESSION['error']; unset($_SESSION['error']); ?></div>
    <?php } ?>

    <!-- Review Form -->
    <h2>Submit Your Review</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" class="review-form">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>
        <textarea name="comments" placeholder="Your Review" required></textarea><br>
        <input type="submit" name="submit" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    <?php if (empty($reviews)) { ?>
        <p>No reviews available yet!</p>
    <?php } else { ?>
        <?php foreach ($reviews as $review) { ?>
            <div class="review">
                <h3><?php echo $review['user_name']; ?></h3>
                <p>Rating: <?php echo str_repeat('★', $review['rating']); ?> (<?php echo $review['rating']; ?>/5)</p>
                <p><?php echo nl2br($review['comments']); ?></p>
                <small>Submitted on: <?php 
                    $date = new DateTime($review['submission_date']);
                    echo $date->format('F j, Y g:i a');
                ?></small>
            </div>
        <?php } ?>
    <?php } ?>

    <!-- Display Average Rating -->
    <h3>Average Rating: <?php echo number_format($avg_rating, 1); ?> / 5</h3>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Function to add user review
function addReview($user_id, $content_id, $rating, $comment) {
    global $conn;
    
    // Check if parameters are set and not empty
    if (empty($user_id) || empty($content_id) || empty($rating) || empty($comment)) {
        return false;
    }
    
    // Prepare SQL query to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, content_id, rating, comment, created_at, updated_at) 
                           VALUES (?, ?, ?, ?, NOW(), NOW())");
                           
    if ($stmt === false) {
        die('SQL error: ' . $conn->error);
    }
    
    // Bind parameters
    $stmt->bind_param("iiis", $user_id, $content_id, $rating, $comment);
    
    // Execute the query
    $result = $stmt->execute();
    
    // Close statement
    $stmt->close();
    
    return $result;
}

// Example usage:
$user_id = 1;       // Replace with actual user ID
$content_id = 5;    // Replace with actual content/product ID
$rating = 4;        // Rating between 1-5
$comment = "This is a great product!"; 

if (addReview($user_id, $content_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

// Function to get reviews for a content/product
function getReviews($content_id) {
    global $conn;
    
    // Prepare SQL query
    $stmt = $conn->prepare("SELECT r.id, u.username, r.rating, r.comment, r.created_at 
                           FROM reviews r 
                           JOIN users u ON r.user_id = u.id 
                           WHERE r.content_id = ? 
                           ORDER BY r.created_at DESC");
                           
    if ($stmt === false) {
        die('SQL error: ' . $conn->error);
    }
    
    // Bind parameters
    $stmt->bind_param("i", $content_id);
    
    // Execute the query
    $stmt->execute();
    
    // Get result
    $result = $stmt->get_result();
    
    // Fetch reviews as an array of objects
    $reviews = $result->fetch_all(MYSQLI_ASSOC);
    
    // Close statement
    $stmt->close();
    
    return $reviews;
}

// Example usage:
$reviews = getReviews($content_id);

foreach ($reviews as $review) {
    echo "User: " . $review['username'] . "<br>";
    echo "Rating: " . $review['rating'] . "/5<br>";
    echo "Comment: " . $review['comment'] . "<br>";
    echo "Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "<hr>";
}

// Close database connection
$conn->close();
?>


<?php
// Sample review data (replace with your database connection)
$reviews = array();

function submitReview($user_id, $comment, $rating) {
    global $reviews;

    // Validate input
    if (empty($user_id) || empty($comment) || !is_numeric($rating)) {
        return false;
    }

    // Add review to the array
    $review = array(
        'user_id' => $user_id,
        'comment' => htmlspecialchars($comment),
        'rating' => (int)$rating,
        'date' => date('Y-m-d H:i:s')
    );

    $reviews[] = $review;

    return true;
}

function displayReviews() {
    global $reviews;

    if (empty($reviews)) {
        echo '<p>No reviews yet.</p>';
        return;
    }

    foreach ($reviews as $review) {
        // Display each review
        echo '<div class="review">';
        echo '<h3>Review by User #' . $review['user_id'] . '</h3>';
        echo '<p>' . $review['comment'] . '</p>';
        displayStars($review['rating']);
        echo '<p class="review-date">' . $review['date'] . '</p>';
        echo '</div>';
    }
}

function averageRating() {
    global $reviews;

    if (empty($reviews)) {
        return 0;
    }

    $total = array_sum(array_column($reviews, 'rating'));
    $average = $total / count($reviews);

    return round($average, 1);
}

function displayStars($rating) {
    // Display stars based on rating (1-5)
    echo '<div class="stars">';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo '<span class="star-filled">★</span>';
        } else {
            echo '<span class="star-empty">☆</span>';
        }
    }
    echo '</div>';
}

// Example usage:

// Submit a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_POST['user_id'];
    $comment = $_POST['review_comment'];
    $rating = $_POST['rating'];

    if (submitReview($user_id, $comment, $rating)) {
        echo '<p>Thank you for your review!</p>';
    } else {
        echo '<p>Error submitting review. Please try again.</p>';
    }
}

// Display average rating and all reviews
echo '<h2>Product Reviews</h2>';
echo '<p>Average Rating: ' . averageRating() . '/5</p>';
displayReviews();
?>

<!-- Add this CSS to style the stars -->
<style>
.star-filled {
    color: gold;
}
.star-empty {
    color: #ddd;
}
.review {
    margin-bottom: 20px;
    padding: 10px;
    border: 1px solid #ccc;
}
</style>

<!-- Add this HTML for review submission form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <h3>Submit a Review</h3>
    <input type="hidden" name="user_id" value="123"> <!-- Replace with actual user ID -->
    
    <div>
        <label for="review_comment">Comment:</label><br>
        <textarea id="review_comment" name="review_comment" required></textarea>
    </div>

    <div>
        <label>Rating:</label><br>
        <select name="rating" required>
            <option value="">Choose a rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
    </div>

    <button type="submit" name="submit_review">Submit Review</button>
</form>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Review submission function
function submitReview($item_id) {
    global $conn;
    
    // Sanitize and validate input
    if (isset($_POST['submit'])) {
        $name = htmlspecialchars(trim($_POST['name']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));
        
        // Basic validation
        if ($name == "" || $rating < 1 || $rating > 5 || $comment == "") {
            echo "Please fill in all required fields and select a valid rating.";
            return;
        }
        
        // Prepare and execute SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (item_id, name, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("isiii", $item_id, $name, $rating, $comment);
        
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            echo "Error submitting review: " . $conn->error;
        }
        
        $stmt->close();
    }
}

// Display reviews function
function displayReviews($item_id) {
    global $conn;
    
    // Get all reviews for the item
    $result = $conn->query("SELECT * FROM reviews WHERE item_id = $item_id ORDER BY review_date DESC");
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . date('j F Y, g:i a', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet. Be the first to review this item!";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Function to handle user reviews
function submitReview() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get review data from POST request
        $review_name = $_POST['review_name'];
        $review_email = $_POST['review_email'];
        $review_rating = $_POST['review_rating'];
        $review_text = $_POST['review_text'];

        // Validate input
        if (empty($review_name) || empty($review_email) || empty($review_rating) || empty($review_text)) {
            return "Please fill in all required fields.";
        }

        // Sanitize inputs to prevent SQL injection or XSS attacks
        $review_name = htmlspecialchars(strip_tags(trim($review_name)));
        $review_email = htmlspecialchars(strip_tags(trim($review_email)));
        $review_rating = intval($review_rating);
        $review_text = htmlspecialchars(trim($review_text));

        // Set up the review array
        $review = [
            'id' => time(), // Use timestamp as unique identifier
            'name' => $review_name,
            'email' => $review_email,
            'rating' => $review_rating,
            'text' => $review_text,
            'date' => date('Y-m-d H:i:s') // Current date and time
        ];

        // Load existing reviews from file or create a new array
        if (file_exists('reviews.txt')) {
            $reviews_data = file_get_contents('reviews.txt');
            $reviews = json_decode($reviews_data, true);
            
            if ($reviews === null) {
                $reviews = [];
            }
        } else {
            // Create the reviews file if it doesn't exist
            fopen('reviews.txt', 'w');
            $reviews = array();
        }

        // Add new review to the array
        $reviews[] = $review;

        // Save updated reviews to the file
        $success = file_put_contents(
            'reviews.txt',
            json_encode($reviews, JSON_PRETTY_PRINT)
        );

        if ($success !== false) {
            // Redirect to thank you page or display success message
            header('Location: thank-you.php');
            exit();
        } else {
            return "Error saving review. Please try again later.";
        }
    }

    // If not POST request, show error
    return "Invalid request method.";
}

// Call the function when form is submitted
if (isset($_POST['submit_review'])) {
    $result = submitReview();
    if ($result !== true) {
        echo '<div class="error">'.$result.'</div>';
    }
}
?>


<?php
header("Refresh: 3; url=index.php");
?>
<!DOCTYPE html>
<html>
<head>
    <title>Thank You for Your Review</title>
</head>
<body>
    <h1>Thank You!</h1>
    <p>Your review has been submitted successfully. We appreciate your feedback!</p>
    <p>You will be redirected back to the main page in 3 seconds...</p>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Replace with your username
$password = '';      // Replace with your password
$dbname = 'reviews_db'; // Replace with your database name

// Create a function to display product reviews
function displayProductReviews($productId) {
    global $host, $username, $password, $dbname;

    // Connect to the database
    $conn = new mysqli($host, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to fetch reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '" . mysqli_real_escape_string($conn, $productId) . "' ORDER BY review_id DESC";
    $result = $conn->query($sql);

    // Check if any reviews exist
    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        // No reviews found
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }

    // Close database connection
    $conn->close();

    // Review submission form
    displayReviewForm();
}

// Function to display the review submission form
function displayReviewForm() {
    if (isset($_POST['submit_review'])) {
        processReviewSubmission();
    }
    
    echo "<div class='review-form'>";
    echo "<h2>Submit Your Review</h2>";
    echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='user_name' required><br>";
    
    echo "<label for='email'>Email:</label>";
    echo "<input type='email' id='email' name='user_email' required><br>";
    
    echo "<label>Rating:</label><br>";
    echo "<select name='rating' required>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value='" . $i . "'>" . str_repeat("★", $i) . "</option>";
    }
    echo "</select><br>";
    
    echo "<label>Comment:</label><br>";
    echo "<textarea name='comment' rows='4' required></textarea><br>";
    
    echo "<input type='hidden' name='product_id' value='" . htmlspecialchars($_GET['id']) . "'>";
    echo "<input type='submit' name='submit_review' value='Submit Review'>";
    echo "</form>";
    echo "</div>";
}

// Function to process review submission
function processReviewSubmission() {
    global $host, $username, $password, $dbname;
    
    // Sanitize inputs
    $productId = mysqli_real_escape_string($conn, $_POST['product_id']);
    $userName = mysqli_real_escape_string($conn, $_POST['user_name']);
    $userEmail = mysqli_real_escape_string($conn, $_POST['user_email']);
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);
    
    // Validate inputs
    if (empty($userName) || empty($userEmail) || $rating < 1 || $rating > 5 || empty($comment)) {
        die("Please fill in all fields correctly.");
    }
    
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $dbname);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Insert into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment)
            VALUES ('$productId', '$userName', '$userEmail', '$rating', '$comment')";
    
    if ($conn->query($sql) === TRUE) {
        echo "<p>Thank you for your review!</p>";
        // Redirect to avoid form resubmission
        header("Refresh: 2; url=".$_SERVER['PHP_SELF']."?".$_SERVER["QUERY_STRING"]);
    } else {
        die("Error submitting review: " . $conn->error);
    }
    
    $conn->close();
}

// Check if product ID is provided and valid
if (isset($_GET['id']) && ctype_digit($_GET['id'])) {
    displayProductReviews($_GET['id']);
} else {
    echo "<p>Please provide a valid product ID.</p>";
}
?>

<style>
.review {
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
}

.review-form {
    background-color: #f5f5f5;
    padding: 20px;
    margin-top: 20px;
}

h3, h2 {
    color: #333;
}
</style>


<?php
// Function to handle user reviews
function userReview($rating, $comment, $email) {
    // Validate input
    if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }
    
    if (!isset($comment) || trim($comment) === '') {
        return "Please enter your review comment.";
    }
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }
    
    // Sanitize input data
    $rating = (int)$rating;
    $comment = htmlspecialchars(trim($comment));
    $email = htmlspecialchars(trim($email));
    
    // Store the review in an array or database
    $review = [
        'rating' => $rating,
        'comment' => $comment,
        'email' => $email,
        'date' => date('Y-m-d H:i:s')
    ];
    
    return $review;
}

// Function to display reviews
function displayReviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<p>Posted by: " . $review['email'] . "</p>";
        echo "<p>Date: " . $review['date'] . "</p>";
        echo "</div><br/>";
    }
}

// Function to calculate average rating
function calculateAverageRating($reviews) {
    if (empty($reviews)) {
        return 0;
    }
    
    $total = array_sum(array_column($reviews, 'rating'));
    $average = $total / count($reviews);
    return round($average, 1); // Round to one decimal place
}

// Example usage:
// Include the form HTML
include('review-form.html');

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        $email = $_POST['email'];
        
        // Handle the review submission
        $reviewResult = userReview($rating, $comment, $email);
        
        if (!is_array($reviewResult)) {
            echo "<div class='error'>" . $reviewResult . "</div>";
        } else {
            // Store the review in a file or database
            $reviews = array();
            
            // Load existing reviews from file
            if (file_exists('reviews.txt')) {
                $reviewsData = file_get_contents('reviews.txt');
                $reviews = json_decode($reviewsData, true);
            }
            
            // Add new review
            $reviews[] = $reviewResult;
            
            // Save to file
            $reviewsJson = json_encode($reviews);
            file_put_contents('reviews.txt', $reviewsJson);
            
            echo "<div class='success'>Thank you for submitting your review!</div>";
        }
    }
}

// Display existing reviews
if (file_exists('reviews.txt')) {
    $reviewsData = file_get_contents('reviews.txt');
    $reviews = json_decode($reviewsData, true);
    
    if ($reviews) {
        echo "<h2>Customer Reviews</h2>";
        displayReviews($reviews);
        
        // Display average rating
        $averageRating = calculateAverageRating($reviews);
        echo "<div class='average-rating'>";
        echo "<p>Average Rating: " . $averageRating . "/5</p>";
        echo "</div>";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get reviews from database if any exist
$reviewsQuery = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $reviewsQuery);

// Check if form was submitted
if (isset($_POST['submit_review'])) {
    // Sanitize and validate input data
    $user_name = htmlspecialchars(trim($_POST['name']));
    $comment = htmlspecialchars(trim($_POST['comment']));
    $rating = intval($_POST['rating']);

    if ($user_name && $comment && $rating >= 1 && $rating <= 5) {
        // Insert new review into database
        $current_date = date('Y-m-d H:i:s');
        $insertQuery = "INSERT INTO reviews (name, comment, rating, review_date) 
                        VALUES ('$user_name', '$comment', '$rating', '$current_date')";
        
        if (!mysqli_query($conn, $insertQuery)) {
            die("Error inserting review: " . mysqli_error($conn));
        }
    } else {
        echo "<p class='error'>Please fill in all fields and select a rating between 1-5 stars.</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
        .stars {
            font-size: 24px;
        }
        .star-checked {
            color: #ffd700;
        }
    </style>
</head>
<body>

<h1>Product Reviews</h1>

<!-- Review Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <div class="review-box">
        <input type="text" name="name" placeholder="Your Name" required><br>
        
        <!-- Star Rating -->
        <div class="stars">
            <input type="radio" name="rating" value="5" id="star5"><label for="star5">★</label>
            <input type="radio" name="rating" value="4" id="star4"><label for="star4">★</label>
            <input type="radio" name="rating" value="3" id="star3"><label for="star3">★</label>
            <input type="radio" name="rating" value="2" id="star2"><label for="star2">★</label>
            <input type="radio" name="rating" value="1" id="star1" checked><label for="star1">★</label>
        </div><br>

        <textarea name="comment" placeholder="Write your review..." rows="4" required></textarea><br>
        
        <button type="submit" name="submit_review">Submit Review</button>
    </div>
</form>

<!-- Display Existing Reviews -->
<?php while ($row = mysqli_fetch_assoc($result)) { ?>
    <div class="review-box">
        <h3><?php echo $row['name']; ?></h3>
        
        <!-- Display Star Rating -->
        <div class="stars <?php if ($row['rating']) {echo 'star-checked';} ?>">
            <?php for ($i = 1; $i <= $row['rating']; $i++) {
                echo "★";
            } ?>
        </div><br>
        
        <p><?php echo $row['comment']; ?></p>
        <small>Posted on: <?php echo date('j F Y, g:i a', strtotime($row['review_date'])); ?></small>
    </div>
<?php } ?>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create tables if they don't exist
$sql = "CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50),
    email VARCHAR(100)
)";

mysqli_query($conn, $sql);

$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    rating INT,
    comment TEXT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('approved', 'pending') DEFAULT 'pending'
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submitReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars!";
    }
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to get reviews for a product
function getReviews($product_id) {
    global $conn;
    
    // Get all approved reviews for the product
    $sql = "SELECT r.id, r.user_id, r.rating, r.comment, r.review_date, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$product_id' AND r.status = 'approved'
            ORDER BY r.review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating_sql = "SELECT AVG(rating) as average 
                              FROM reviews 
                              WHERE product_id = '$product_id' AND status = 'approved'";
                              
        $average_result = mysqli_query($conn, $average_rating_sql);
        $row = mysqli_fetch_assoc($average_result);
        $average_rating = number_format($row['average'], 1);
        
        // Display average rating
        $output = "<h3>Average Rating: " . $average_rating . " stars</h3>";
        
        // Display reviews
        while ($review_row = mysqli_fetch_assoc($result)) {
            $output .= "<div class='review'>";
            $output .= "<p><strong>" . $review_row['username'] . "</strong> - ";
            $output .= str_repeat("★", $review_row['rating']) . " (" . date('F j, Y', strtotime($review_row['review_date'])) . ")<br>";
            $output .= $review_row['comment'];
            $output .= "</p></div>";
        }
        
        return $output;
    } else {
        return "No reviews available for this product.";
    }
}

// Example usage:

// Submit a new review
$user_id = 1; // Replace with actual user ID
$product_id = 1; // Replace with actual product ID
$rating = 5;
$comment = "This is an amazing product!";
echo submitReview($user_id, $product_id, $rating, $comment);

// Get and display reviews for a product
$product_id = 1;
echo getReviews($product_id);

mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Calculate average rating
    $average_rating = 0;
    $total_ratings = 0;
    
    while ($row = mysqli_fetch_assoc($result)) {
        $average_rating += $row['rating'];
        $total_ratings++;
    }
    
    if ($total_ratings > 0) {
        $average_rating /= $total_ratings;
    }

    // Display average rating
    echo "<div class='average-rating'>";
    echo "Average Rating: " . number_format($average_rating, 1) . "/5";
    echo "</div>";

    // Display all reviews
    while ($row = mysqli_fetch_assoc($result)) {
        $user_name = htmlspecialchars($row['user_name']);
        $rating = $row['rating'];
        $comment = htmlspecialchars($row['comment']);
        $review_date = date('F j, Y g:i a', strtotime($row['review_date']));

        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='user-name'>$user_name</span>";
        echo "<span class='rating'>";
        
        for ($i = 1; $i <= $rating; $i++) {
            echo "<span class='star'>★</span>";
        }
        
        for ($i = $rating + 1; $i <= 5; $i++) {
            echo "<span class='star'>☆</span>";
        }
        
        echo "</span>";
        echo "<span class='date'>$review_date</span>";
        echo "</div>";
        echo "<div class='comment'>$comment</div>";
        echo "</div>";
    }
}

// Function to handle review submission
function submit_review($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5.";
    }
    
    // Sanitize input
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, email, rating, comment) 
            VALUES (?, ?, ?, ?, ?)";
    
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "isiii", $product_id, $user_name, $email, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Submit review
    $product_id = 1; // Set your product ID
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = submit_review($product_id, $user_name, $email, $rating, $comment);
    
    if ($result === true) {
        echo "Review submitted successfully!";
    } else {
        echo $result;
    }
}

// Display all reviews for product ID 1
display_reviews(1);

mysqli_close($conn);
?>


<?php
function submit_review($user_id, $product_id, $rating = 5, $comment = "") {
    // Database connection parameters
    $db_host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $db_name = "reviews_db";

    // Create database connection
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

    // Check for connection errors
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating); // Ensure rating is an integer
    if ($rating < 1 || $rating > 5) {
        $rating = 5; // Default to 5 stars if invalid value
    }
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if the user has already reviewed this product
    $check_query = "SELECT review_id FROM reviews WHERE user_id = '$user_id' AND product_id = '$product_id'";
    $result = mysqli_query($conn, $check_query);
    
    if (mysqli_num_rows($result) > 0) {
        // User already has a review - update it
        $update_query = "UPDATE reviews SET rating = $rating, comment = '$comment' WHERE user_id = '$user_id' AND product_id = '$product_id'";
        if (!mysqli_query($conn, $update_query)) {
            echo "Error updating review: " . mysqli_error($conn);
            return false;
        }
    } else {
        // Insert new review
        $insert_query = "INSERT INTO reviews (user_id, product_id, rating, comment) VALUES ('$user_id', '$product_id', $rating, '$comment')";
        if (!mysqli_query($conn, $insert_query)) {
            echo "Error inserting review: " . mysqli_error($conn);
            return false;
        }
    }

    // Close the database connection
    mysqli_close($conn);

    return true;
}

// Example usage:
// submit_review(123, 456, 4, "Great product!");
?>


// Insert a new review
if (submit_review(123, 456, 5, "This is an amazing product!")) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

// Update an existing review
if (submit_review(123, 456, 4, "Updated: This is a good product.")) {
    echo "Review updated successfully!";
} else {
    echo "Error updating review.";
}


<?php
// Sample reviews array (you would typically store this in a database)
$reviews = [
    ['id' => 1, 'name' => 'John Doe', 'email' => 'john@example.com', 'rating' => 5, 'review' => 'Great product!', 'timestamp' => date('Y-m-d H:i:s')],
    // Add more reviews here
];

// Function to submit a new review
function submitReview($name, $email, $rating, $review) {
    global $reviews;
    
    // Validate input
    if (empty($name) || empty($email) || empty($review)) {
        return 'Please fill in all required fields.';
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return 'Please enter a valid email address.';
    }
    
    if ($rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5 stars.';
    }
    
    // Sanitize input
    $name = htmlspecialchars(trim($name));
    $email = htmlspecialchars(trim($email));
    $review = htmlspecialchars(trim($review));
    
    // Generate a unique ID for the review (you might want to use UUID or database auto-increment)
    $newReviewId = count($reviews) + 1;
    
    // Add new review
    $newReview = [
        'id' => $newReviewId,
        'name' => $name,
        'email' => $email,
        'rating' => $rating,
        'review' => $review,
        'timestamp' => date('Y-m-d H:i:s')
    ];
    
    // Add to reviews array
    $reviews[] = $newReview;
    
    // Save reviews to file (alternative to database)
    saveReviewsToFile($reviews);
    
    return true;
}

// Function to display reviews
function displayReviews() {
    global $reviews;
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['name'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Email: " . $review['email'] . "</p>";
        echo "<p>Review: " . $review['review'] . "</p>";
        echo "<small>" . date('j M Y g:i a', strtotime($review['timestamp'])) . "</small>";
        echo "</div>";
    }
}

// Function to save reviews to file (alternative storage method)
function saveReviewsToFile($reviews) {
    $filename = 'reviews.txt';
    $data = serialize($reviews);
    
    if (file_put_contents($filename, $data)) {
        return true;
    } else {
        return false;
    }
}

// Function to load reviews from file
function loadReviewsFromFile() {
    global $reviews;
    $filename = 'reviews.txt';
    
    if (file_exists($filename)) {
        $data = file_get_contents($filename);
        $reviews = unserialize($data);
    } else {
        // Create empty file if it doesn't exist
        fopen($filename, 'w');
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = intval($_POST['rating']);
    $review = $_POST['review'];
    
    // Submit review
    $result = submitReview($name, $email, $rating, $review);
    
    if ($result === true) {
        echo "Thank you for your review!";
        // Redirect to prevent form resubmission
        header("Location: ".$_SERVER['PHP_SELF']);
        exit();
    } else {
        echo $result;
    }
}

// Load reviews from file
loadReviewsFromFile();

// Display reviews
displayReviews();
?>


<?php
// Function to handle review submission
function submit_review($product_id, $user_name, $email, $rating, $review) {
    // Validate input data
    if (empty($user_name) || empty($email) || empty($rating) || empty($review)) {
        return "Please fill in all required fields.";
    }

    if (!ctype_digit((string)$rating) || intval($rating) < 1 || intval($rating) > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Sanitize input data
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $email = htmlspecialchars(trim($email));
    $rating = intval($rating);
    $review = htmlspecialchars(trim($review));

    // Store review in a file or database (this example uses a text file)
    $filename = "reviews_{$product_id}.txt";
    
    // Create review data array
    $review_data = array(
        'user_name' => $user_name,
        'email' => $email,
        'rating' => $rating,
        'review_text' => $review,
        'date_posted' => date('Y-m-d H:i:s')
    );

    // Append review to file
    if ($file_handle = fopen($filename, "a")) {
        fwrite($file_handle, serialize($review_data) . "
");
        fclose($file_handle);
        return "Thank you for submitting your review!";
    } else {
        return "Error saving your review. Please try again later.";
    }
}

// Function to fetch reviews for a product
function fetch_reviews($product_id) {
    $filename = "reviews_{$product_id}.txt";
    
    if (file_exists($filename)) {
        $reviews = array();
        $lines = file($filename);
        
        foreach ($lines as $line) {
            $review_data = unserialize(trim($line));
            if ($review_data !== false && $review_data != 'b:0;') { // Check for valid unserialization
                $reviews[] = (object)$review_data;
            }
        }
        
        return $reviews;
    } else {
        return null;
    }
}

// Example HTML form to submit reviews
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
</head>
<body>
    <h1>Submit Your Review</h1>
    
    <?php
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $result = submit_review(
            $_POST['product_id'],
            $_POST['user_name'],
            $_POST['email'],
            $_POST['rating'],
            $_POST['review']
        );
        
        echo "<p style='color: green;'>$result</p>";
    }
    ?>
    
    <form method="post" action="">
        <input type="hidden" name="product_id" value="1">
        
        <div>
            <label for="user_name">Name:</label><br>
            <input type="text" id="user_name" name="user_name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Choose a rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>

        <div>
            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="5" cols="30" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>

    <h2>Product Reviews</h2>
    <?php
    $reviews = fetch_reviews(1);
    
    if ($reviews) {
        foreach ($reviews as $review) {
            echo "<div style='border: 1px solid #ccc; padding: 10px; margin-bottom: 10px;'>";
            echo "<p><strong>{$review->user_name}</strong> - {$review->rating} Stars</p>";
            echo "<p>{$review->review_text}</p>";
            echo "<small>Posted on: {$review->date_posted}</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
    ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = htmlspecialchars($comment);
    
    try {
        // Check if the user has already reviewed this product
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$userId, $productId]);
        
        if ($stmt->rowCount() > 0) {
            return "You have already reviewed this product!";
        }
        
        // Insert the new review
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date) 
                              VALUES (?, ?, ?, ?, NOW())");
        $stmt->execute([$userId, $productId, $rating, $comment]);
        
        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to get product reviews
function getProductReviews($productId) {
    global $conn;
    
    try {
        // Get all reviews for the product
        $stmt = $conn->prepare("SELECT r.*, u.username 
                              FROM reviews r 
                              JOIN users u ON r.user_id = u.id 
                              WHERE r.product_id = ? 
                              ORDER BY r.review_date DESC");
        $stmt->execute([$productId]);
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        return $reviews;
    } catch(PDOException $e) {
        return "Error fetching reviews: " . $e->getMessage();
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        // Calculate average rating
        $stmt = $conn->prepare("SELECT AVG(rating) as average 
                              FROM reviews 
                              WHERE product_id = ?");
        $stmt->execute([$productId]);
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        return "Error calculating average rating: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userId = 1; // Replace with actual user ID from session
    $productId = 1; // Replace with actual product ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = submitReview($userId, $productId, $rating, $comment);
    echo $result;
}

// Display reviews for a product
$productId = 1; // Replace with actual product ID
$reviews = getProductReviews($productId);

if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Rating: " . $review['rating'] . "/5</h3>";
        echo "<p><strong>" . $review['username'] . "</strong></p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Reviewed on: " . $review['review_date'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
$averageRating = getAverageRating($productId);
echo "<h2>Average Rating: " . $averageRating . "/5</h2>";
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include_once('db.php');

// Sanitize input data
$comment = mysqli_real_escape_string($conn, $_POST['comment']);
$rating = intval($_POST['rating']);

// Validate inputs
if ($comment == "" || $rating < 1 || $rating > 5) {
    // Handle error: invalid inputs
    die("Error: Please fill in all required fields and select a valid rating.");
}

// Get product ID from somewhere (e.g., session or URL parameter)
$product_id = intval($_GET['product_id']);
$user_id = intval($_SESSION['user_id']); // Assuming user is logged in

// Insert into database
$sql = "INSERT INTO reviews (user_id, product_id, comment, rating, review_date) 
        VALUES ('$user_id', '$product_id', '$comment', '$rating', NOW())";

if ($conn->query($sql) === TRUE) {
    // Redirect back to product page or show success message
    header("Location: product.php?product_id=$product_id&review_success=1");
} else {
    // Handle database error
    die("Error: " . $sql . "<br>" . $conn->error);
}

$conn->close();
?>


<?php
include_once('db.php');

// Get product ID from URL parameter
$product_id = intval($_GET['product_id']);

// Calculate average rating and get all reviews for this product
$sql = "SELECT user_id, comment, rating, review_date 
        FROM reviews 
        WHERE product_id = $product_id 
        ORDER BY review_date DESC";

$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Display average rating
    $avg_rating_sql = "SELECT AVG(rating) as avg_rating 
                       FROM reviews 
                       WHERE product_id = $product_id";
    $avg_result = $conn->query($avg_rating_sql);
    $row = $avg_result->fetch_assoc();
    $avg_rating = number_format($row['avg_rating'], 1);

    echo "<h3>Product Reviews ($avg_rating/5)</h3>";
    
    // Display each review
    while($review_row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<p><strong>Rating:</strong> " . str_repeat("★", $review_row['rating']) . "</p>";
        echo "<p><strong>Comment:</strong> " . $review_row['comment'] . "</p>";
        echo "<p><em>Posted on: " . $review_row['review_date'] . "</em></p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews available.</p>";
}

$conn->close();
?>


<?php
// Function to add new review
function add_review($conn, $product_id, $user_name, $comment, $rating) {
    // Insert review into database
    $sql = "INSERT INTO product_reviews (product_id, user_name, comment, rating, post_date)
            VALUES (?, ?, ?, ?, NOW())";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id, $user_name, $comment, $rating]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to get average rating
function get_average_rating($conn, $product_id) {
    $sql = "SELECT AVG(rating) as average FROM product_reviews WHERE product_id = ?";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id]);
        $result = $stmt->fetch();
        
        return round($result['average'], 1);
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return 0;
    }
}

// Function to display reviews
function display_reviews($conn, $product_id) {
    $sql = "SELECT * FROM product_reviews WHERE product_id = ? ORDER BY post_date DESC";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id]);
        $reviews = $stmt->fetchAll();
        
        // Calculate average rating
        $average_rating = get_average_rating($conn, $product_id);
        
        echo '<div class="review-container">';
        echo "<h3>Average Rating: $average_rating/5</h3>";
        
        if (count($reviews) > 0) {
            foreach ($reviews as $review) {
                $user_name = $review['user_name'];
                $comment = $review['comment'];
                $rating = $review['rating'];
                $post_date = date('d/m/Y', strtotime($review['post_date']));
                
                // Display star rating
                echo '<div class="review">';
                echo "<h4>$user_name</h4>";
                echo "<p>Rating: ";
                for ($i = 1; $i <= 5; $i++) {
                    if ($i <= $rating) {
                        echo "★";
                    } else {
                        echo "☆";
                    }
                }
                echo "</p>";
                echo "<p>$comment</p>";
                echo "<small>Posted on: $post_date</small>";
                echo '</div>';
            }
        } else {
            echo '<p>No reviews yet. Be the first to review this product!</p>';
        }
        
        echo '</div>';
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
// Connect to database
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database", "username", "password");
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Display reviews for product ID 1
display_reviews($conn, 1);

// Add a new review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = 1;
    $user_name = $_POST['username'];
    $comment = $_POST['comment'];
    $rating = $_POST['rating'];
    
    add_review($conn, $product_id, $user_name, comment, rating);
}

// Close connection
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection Failed: ' . $e->getMessage());
}

// Function to add a new review
function addReview($user_id, $product_id, $rating, $review_text, $connection) {
    try {
        // Prepare the SQL statement
        $stmt = $connection->prepare("INSERT INTO reviews (user_id, product_id, rating, review_text) VALUES (:user_id, :product_id, :rating, :review_text)");
        
        // Bind parameters
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':review_text', $review_text);
        
        // Execute the statement
        $stmt->execute();
    } catch(PDOException $e) {
        die('Error adding review: ' . $e->getMessage());
    }
}

// Function to get all reviews for a product
function getReviews($product_id, $connection) {
    try {
        $stmt = $connection->prepare("SELECT * FROM reviews WHERE product_id = :product_id");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die('Error fetching reviews: ' . $e->getMessage());
    }
}

// Function to calculate average rating
function getAverageRating($product_id, $connection) {
    try {
        $stmt = $connection->prepare("SELECT AVG(rating) AS average FROM reviews WHERE product_id = :product_id");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        die('Error calculating average rating: ' . $e->getMessage());
    }
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        $user_id = $_POST['user_id'];
        $product_id = $_POST['product_id'];
        $rating = $_POST['rating'];
        $review_text = $_POST['review_text'];

        // Sanitize input
        $rating = intval($rating);
        $review_text = htmlspecialchars(trim($review_text));

        if ($rating < 1 || $rating > 5) {
            echo "Invalid rating. Please select a rating between 1 and 5.";
        } else if (empty($review_text)) {
            echo "Please enter your review.";
        } else {
            addReview($user_id, $product_id, $rating, $review_text, $conn);
            header("Location: $_SERVER[PHP_SELF]");
            exit();
        }
    }
}

// Get reviews for product ID 1 (example)
$reviews = getReviews(1, $conn);
$average_rating = getAverageRating(1, $conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .star-rating {
            display: inline-block;
            width: 200px;
            height: 40px;
            background: url('stars.png') repeat-x;
            margin-bottom: -3px;
        }
        .rating {
            display: inline-block;
            width: 100%;
            height: 40px;
            text-indent: -9999px;
            background-image: none;
        }
    </style>
</head>
<body>

<h2>Product Reviews</h2>
<p>Average Rating: <?php echo $average_rating ?> stars</p>

<!-- Review Form -->
<form method="post" action="">
    <input type="hidden" name="user_id" value="1">
    <input type="hidden" name="product_id" value="1">
    
    <div class="rating-container">
        <h3>Rate this product:</h3>
        <div class="star-rating">
            <span class="rating" style="width: <?php echo ($average_rating * 20) ?>%"></span>
        </div>
        
        <!-- Rating Input -->
        <input type="radio" name="rating" value="5"> 5 stars<br>
        <input type="radio" name="rating" value="4"> 4 stars<br>
        <input type="radio" name="rating" value="3"> 3 stars<br>
        <input type="radio" name="rating" value="2"> 2 stars<br>
        <input type="radio" name="rating" value="1"> 1 star<br>
    </div>

    <textarea name="review_text" placeholder="Write your review..." rows="4"></textarea><br>
    
    <button type="submit" name="submit_review">Submit Review</button>
</form>

<!-- Display Reviews -->
<?php foreach ($reviews as $review): ?>
<div class="review">
    <h3>Rating: <?php echo $review['rating'] ?> stars</h3>
    <p><?php echo htmlspecialchars($review['review_text']) ?></p>
</div>
<?php endforeach; ?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'username';
$password = 'password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to add a review
    function addReview($name, $review, $conn) {
        // Sanitize input
        $name = htmlspecialchars(strip_tags(trim($name)));
        $review = htmlspecialchars(strip_tags(trim($review)));

        if (empty($name) || empty($review)) {
            return "Please fill in all fields.";
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, review, timestamp) VALUES (:name, :review, NOW())";
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':review', $review);

        if ($stmt->execute()) {
            return "Review added successfully!";
        } else {
            return "Error adding review. Please try again.";
        }
    }

    // Function to display reviews
    function displayReviews($conn) {
        $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
        $stmt = $conn->prepare($sql);
        $stmt->execute();

        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($reviews)) {
            echo "<p>No reviews yet.</p>";
            return;
        }

        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
            echo "<p>" . htmlspecialchars($review['review']) . "</p>";
            echo "<small>Posted on: " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Function to submit user reviews
function submit_review($rating, $comments) {
    // Validate input
    if (!is_int($rating)) {
        throw new InvalidArgumentException('Rating must be an integer.');
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new InvalidArgumentException('Rating must be between 1 and 5.');
    }

    if (isset($comments) && !is_string($comments)) {
        throw new InvalidArgumentException('Comments must be a string.');
    }

    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    try {
        // Connect to database
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            throw new Exception('Database connection failed: ' . $conn->connect_error);
        }

        // Check if the review exists for this user and item
        $checkQuery = "SELECT * FROM reviews WHERE user_id = ? AND item_id = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $_SESSION['user_id'], $_GET['item_id']);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Update existing review
            $updateQuery = "UPDATE reviews SET rating = ?, comments = ? WHERE user_id = ? AND item_id = ?";
            $stmt = $conn->prepare($updateQuery);
            $stmt->bind_param("isss", $rating, $comments, $_SESSION['user_id'], $_GET['item_id']);
        } else {
            // Insert new review
            $insertQuery = "INSERT INTO reviews (user_id, item_id, rating, comments) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("ssis", $_SESSION['user_id'], $_GET['item_id'], $rating, $comments);
        }

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            throw new Exception('Error submitting review: ' . $stmt->error);
        }
    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
try {
    // Make sure to set user_id in session and item_id from GET request or another source
    $_SESSION['user_id'] = '1';
    $_GET['item_id'] = '1';

    $rating = 5;
    $comments = "This product is amazing!";

    echo submit_review($rating, $comments);
} catch (Exception $e) {
    die('Error: ' . $e->getMessage());
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $review_title, $review_comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'username';
    $password = 'password';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check for connection errors
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Validate input values
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please enter a value between 1 and 5.";
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $review_title = mysqli_real_escape_string($conn, $review_title);
    $review_comment = mysqli_real_escape_string($conn, $review_comment);

    // Prepare SQL statement
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_title, review_comment) 
            VALUES (?, ?, ?, ?, ?)";

    // Prepare and execute the query using prepared statements
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sssss", $user_id, $product_id, $rating, $review_title, $review_comment);

    if (mysqli_stmt_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$review_title = "Great Product!";
$review_comment = "This is a fantastic product, very satisfied with my purchase.";

$result = submit_review($user_id, $product_id, $rating, $review_title, $review_comment);
echo $result;

?>


<?php
function submitUserReview($userId, $comment, $rating) {
    // Validate input
    if (!isset($userId) || !isset($comment) || !isset($rating)) {
        return "Error: All fields are required.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }

    // Database configuration
    include 'config.php'; // Include your database configuration file

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        return "Error: Could not connect to the database.";
    }

    // Sanitize inputs
    $userId = $conn->real_escape_string($userId);
    $comment = $conn->real_escape_string($comment);
    $rating = (int)$rating;

    // Get current date and time
    $submissionDate = date('Y-m-d H:i:s');

    // Insert review into the database
    $sql = "INSERT INTO reviews (user_id, comment, rating, submission_date)
            VALUES ('$userId', '$comment', '$rating', '$submissionDate')";

    if ($conn->query($sql) === TRUE) {
        return true; // Review submitted successfully
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close database connection
    $conn->close();
}
?>


<?php
$db_host = 'localhost';
$db_user = 'your_username';
$db_pass = 'your_password';
$db_name = 'your_database';
?>


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userId = $_POST['user_id'];
    $comment = $_POST['comment'];
    $rating = $_POST['rating'];

    $result = submitUserReview($userId, $comment, $rating);

    if ($result === true) {
        echo "Thank you for submitting your review!";
    } else {
        echo $result;
    }
}


<?php
// Configuration
$reviewsFile = 'reviews.json'; // File to store reviews
$maxReviews = 50; // Maximum number of reviews to display

// Get existing reviews from file
function getReviews() {
    global $reviewsFile;
    
    if (file_exists($reviewsFile)) {
        $content = file_get_contents($reviewsFile);
        return json_decode($content, true) ?: [];
    }
    return [];
}

// Save review to file
function saveReview($reviewData) {
    global $reviewsFile;
    
    $existingReviews = getReviews();
    array_unshift($existingReviews, $reviewData); // Add new review to the top
    
    if (count($existingReviews) > $maxReviews) {
        array_pop($existingReviews); // Remove oldest review
    }
    
    file_put_contents($reviewsFile, json_encode($existingReviews));
}

// Display reviews
function displayReviews() {
    global $reviewsFile;
    
    echo '<div class="reviews-container">';
    
    if (file_exists($reviewsFile)) {
        $content = file_get_contents($reviewsFile);
        $reviews = json_decode($content, true) ?: [];
        
        foreach ($reviews as $review) {
            echo '<div class="review-box">';
            echo '<h3>' . htmlspecialchars($review['name'], ENT_QUOTES) . '</h3>';
            echo '<div class="rating">';
            
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $review['rating']) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            
            echo '</div>';
            echo '<p>' . htmlspecialchars($review['comment'], ENT_QUOTES) . '</p>';
            echo '<small>Posted on: ' . date('j F Y, g:i a', $review['timestamp']) . '</small>';
            
            // Delete button for admin
            if (isset($_COOKIE['isAdmin'])) {
                echo '<form action="#" method="post" style="display:inline">';
                echo '<input type="hidden" name="delete_review" value="' . $review['id'] . '">';
                echo '<button type="submit">Delete</button>';
                echo '</form>';
            }
            
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet. Be the first to review!</p>';
    }
    
    echo '</div>';
}

// Main function
function userReview() {
    // Check if we need to handle form submission or display form/reviews
    if (isset($_POST['submit_review'])) {
        // Validate and process form data
        $name = trim($_POST['review_name']);
        $email = trim($_POST['review_email']);
        $comment = trim($_POST['review_comment']);
        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
        
        if (empty($name) || empty($email) || empty($comment)) {
            die('Please fill in all required fields.');
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die('Please enter a valid email address.');
        }
        
        if ($rating < 1 || $rating > 5) {
            die('Rating must be between 1 and 5 stars.');
        }
        
        // Prepare review data
        $reviewData = [
            'id' => uniqid(),
            'name' => $name,
            'email' => $email,
            'comment' => $comment,
            'rating' => $rating,
            'timestamp' => time()
        ];
        
        saveReview($reviewData);
        
        // Redirect back to reviews page
        header('Location: ' . $_SERVER['PHP_SELF']);
        exit();
    } else {
        // Display existing reviews and review form
        echo '<h2>Product Reviews</h2>';
        
        displayReviews();
        
        // Review form
        echo '<div class="review-form">';
        echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post" id="reviewForm">';
        echo '<input type="hidden" name="submitted" value="1">';
        
        echo '<p>';
        echo '<label for="review_name">Name:</label>';
        echo '<input type="text" id="review_name" name="review_name" required>';
        echo '</p>';
        
        echo '<p>';
        echo '<label for="review_email">Email:</label>';
        echo '<input type="email" id="review_email" name="review_email" required>';
        echo '</p>';
        
        echo '<p>';
        echo '<label>Rating:</label><br>';
        echo '<input type="radio" name="rating" value="5" id="rate5">';
        echo '<label for="rate5">★</label>';
        echo '<input type="radio" name="rating" value="4" id="rate4">';
        echo '<label for="rate4">☆</label>';
        echo '<input type="radio" name="rating" value="3" id="rate3">';
        echo '<label for="rate3">★</label>';
        echo '<input type="radio" name="rating" value="2" id="rate2">';
        echo '<label for="rate2">☆</label>';
        echo '<input type="radio" name="rating" value="1" id="rate1">';
        echo '<label for="rate1">★</label>';
        echo '</p>';
        
        echo '<p>';
        echo '<label for="review_comment">Review:</label>';
        echo '<textarea id="review_comment" name="review_comment" rows="4" required></textarea>';
        echo '</p>';
        
        echo '<input type="submit" name="submit_review" value="Submit Review">';
        echo '</form>';
        echo '</div>';
    }
}

// Call the main function
userReview();

// CSS Styling (Add to your HTML head)
echo <<<CSS
<style>
.review-box {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 20px;
}

.rating {
    display: inline-block;
    margin: 10px 0;
}

.star {
    font-size: 24px;
    margin-right: 2px;
}

.review-form {
    background-color: #f5f5f5;
    padding: 20px;
    border-radius: 5px;
}
</style>
CSS;

// Add this to your HTML body
echo '<div id="review-section">';
userReview();
echo '</div>';
?>


<?php
// Function to submit a new review
function submit_review($name, $review_text, $rating) {
    // Sanitize input to prevent XSS attacks
    $name = htmlspecialchars($name);
    $review_text = htmlspecialchars($review_text);

    // Create an array for the new review
    $new_review = [
        'id' => uniqid(),
        'name' => $name,
        'text' => $review_text,
        'rating' => $rating,
        'timestamp' => date('Y-m-d H:i:s')
    ];

    // Read existing reviews from file
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);
    } else {
        $reviews = [];
    }

    // Add new review to the array
    array_unshift($reviews, $new_review);

    // Write reviews back to file
    $success = file_put_contents('reviews.json', json_encode($reviews, JSON_PRETTY_PRINT));

    if ($success === false) {
        die("Error saving review to file.");
    }

    return true;
}

// Function to display all reviews
function display_reviews() {
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);

        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>{$review['name']}</h3>";
            echo "<p>Rating: {$review['rating']} stars</p>";
            echo "<p>{$review['text']}</p>";
            echo "<small>Posted on {$review['timestamp']}</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Function to delete a review by ID
function delete_review($id) {
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);

        // Search for the review with matching ID and remove it
        foreach ($reviews as $key => $review) {
            if ($review['id'] == $id) {
                unset($reviews[$key]);
            }
        }

        // Re-index array keys
        $reviews = array_values($reviews);

        // Write updated reviews back to file
        $success = file_put_contents('reviews.json', json_encode($reviews, JSON_PRETTY_PRINT));

        if ($success === false) {
            die("Error updating review list.");
        }
    } else {
        return "No reviews available.";
    }

    return true;
}
?>


<?php
require_once 'review_functions.php';

if (isset($_GET['id'])) {
    if (delete_review($_GET['id'])) {
        header("Location: reviews.php");
    } else {
        die("Error deleting review.");
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display the review form
function displayReviewForm() {
    ?>
    <form action="<?php $_SERVER['PHP_SELF'] ?>" method="POST">
        <h3>Submit a Review</h3>
        <input type="text" name="title" placeholder="Review Title" required><br>
        <textarea name="review" placeholder="Write your review here..." rows="5" cols="40" required></textarea><br>
        Rating: 
        <select name="rating" required>
            <option value="">Select a rating</option>
            <option value="1">1 star</option>
            <option value="2">2 stars</option>
            <option value="3">3 stars</option>
            <option value="4">4 stars</option>
            <option value="5">5 stars</option>
        </select><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>
    <?php
}

// Function to handle review submission
function submitReview($conn) {
    if (isset($_POST['submit_review'])) {
        $title = htmlspecialchars(trim($_POST['title']));
        $review = htmlspecialchars(trim($_POST['review']));
        $rating = intval($_POST['rating']);

        // Validate input
        if ($title == "" || $review == "" || $rating == 0) {
            echo "Please fill in all fields!";
            return;
        }

        try {
            // Insert review into database
            $stmt = $conn->prepare("INSERT INTO reviews (title, review_text, rating, author, review_date) 
                                  VALUES (:title, :review, :rating, :author, NOW())");
            
            // Bind parameters
            $stmt->bindParam(':title', $title);
            $stmt->bindParam(':review', $review);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':author', $_SERVER['REMOTE_ADDR']); // Using IP address as author identifier

            $stmt->execute();
            echo "Review submitted successfully!";
        } catch(PDOException $e) {
            echo "Error submitting review: " . $e->getMessage();
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        // Get all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (count($reviews) > 0) {
            echo "<h3>Customer Reviews</h3>";
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h4>" . htmlspecialchars($review['title']) . "</h4>";
                echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
                echo "<div class='rating'>Rating: " . $review['rating'] . " stars</div>";
                echo "<div class='author'>By Anonymous on " . date('F j, Y', strtotime($review['review_date'])) . "</div>";
                echo "</div><br>";
            }
        } else {
            echo "No reviews available. Be the first to review!";
        }
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Function to calculate average rating
function getAverageRating($conn) {
    try {
        $stmt = $conn->query("SELECT AVG(rating) as average FROM reviews");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['average'] != null) {
            echo "Average Rating: " . number_format($result['average'], 1, '.', '') . "/5";
        } else {
            echo "No ratings available.";
        }
    } catch(PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
    }
}
?>


<?php require_once('review-functions.php'); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php displayReviewForm(); ?>
    
    <?php submitReview($conn); ?>

    <h2>Current Average Rating:</h2>
    <?php getAverageRating($conn); ?>

    <h2>All Reviews:</h2>
    <?php displayReviews($conn); ?>
</body>
</html>


<?php
// Turn off error reporting for production code
error_reporting(0);

// Function to save reviews
function saveReview($name, $email, $rating, $comment) {
    // Validate input
    if (empty($name) || empty($email) || empty($comment)) {
        return "Please fill in all required fields";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Set default values for ratings
    $rating = isset($rating) ? intval($rating) : 0;

    // Review data array
    $reviewData = [
        'name' => htmlspecialchars($name),
        'email' => htmlspecialchars($email),
        'rating' => $rating,
        'comment' => htmlspecialchars($comment),
        'date' => date('Y-m-d H:i:s')
    ];

    // Load existing reviews from file
    if (file_exists('reviews.txt')) {
        $reviews = unserialize(file_get_contents('reviews.txt'));
    } else {
        $reviews = array();
    }

    // Add new review
    array_unshift($reviews, $reviewData);

    // Save reviews back to file
    $result = file_put_contents('reviews.txt', serialize($reviews));

    if ($result === false) {
        return "Error saving review";
    } else {
        return true;
    }
}

// Function to get reviews
function getReviews() {
    if (file_exists('reviews.txt')) {
        $reviews = unserialize(file_get_contents('reviews.txt'));
        if ($reviews !== false && is_array($reviews)) {
            return $reviews;
        }
    }

    // Return empty array if no reviews found
    return array();
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = saveReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    if ($result === true) {
        // Review saved successfully, you can redirect or show success message here
        echo "<script>alert('Thank you for your review!');</script>";
    } else {
        // Show error message
        echo "<div class='error'>$result</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }

        .star {
            font-size: 24px;
        }

        input[type="radio"] {
            display: none;
        }

        label.star:before {
            content: "★";
            color: #ccc;
        }

        label.star:checked ~ label.star:before,
        label.star:hover ~ label.star:before {
            color: #ff0;
        }

        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<?php
$reviews = getReviews();
if (!empty($reviews)) {
    echo "<h2>Previous Reviews:</h2>";
    foreach ($reviews as $review) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;'>";
        echo "<strong>" . htmlspecialchars_decode($review['name']) . "</strong><br />";
        echo "Email: " . htmlspecialchars_decode($review['email']) . "<br />";
        echo "Rating: " . str_repeat("★", $review['rating']) . "<br />";
        echo "Comment: " . htmlspecialchars_decode($review['comment']) . "<br />";
        echo "Posted on: " . $review['date'] . "<br />";
        echo "</div>";
    }
}
?>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="">
        <div class="error"><?php if (isset($result)) { echo $result; } ?></div>

        <input type="text" name="name" placeholder="Your Name" required><br /><br />

        <input type="email" name="email" placeholder="Your Email" required><br /><br />

        <div class="rating-stars">
            <span class="star">
                <input type="radio" id="5" name="rating" value="5">
                <label for="5"></label>
            </span>
            <span class="star">
                <input type="radio" id="4" name="rating" value="4">
                <label for="4"></label>
            </span>
            <span class="star">
                <input type="radio" id="3" name="rating" value="3">
                <label for="3"></label>
            </span>
            <span class="star">
                <input type="radio" id="2" name="rating" value="2">
                <label for="2"></label>
            </span>
            <span class="star">
                <input type="radio" id="1" name="rating" value="1">
                <label for="1"></label>
            </span>
        </div>

        <textarea name="comment" placeholder="Your Review" required></textarea><br /><br />

        <button type="submit">Submit Review</button>
    </form>
</div>

</body>
</html>


<?php
function submit_review() {
    // Database connection details
    $host = "localhost";
    $username = "root"; // Replace with your database username
    $password = "";     // Replace with your database password
    $database_name = "reviews_db"; // Replace with your database name

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database_name);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get form data
    $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
    $rating = mysqli_real_escape_string($conn, $_POST['rating']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

    // SQL query to insert review into the database
    $sql = "INSERT INTO reviews (user_name, rating, review_text)
            VALUES ('$user_name', '$rating', '$review_text')";

    if ($conn->query($sql) === TRUE) {
        echo "Review submitted successfully!";
        header("Location: reviews.php?refresh=1");
        exit();
    } else {
        echo "Error submitting review: " . $conn->error;
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function user_review($action, $product_id = 0, $user_id = 0, $rating = 0, $comment = '') {
    global $conn;

    try {
        switch ($action) {
            // Submit a new review
            case 'submit':
                if (empty($product_id) || empty($user_id) || empty($rating)) {
                    throw new Exception("Missing required parameters");
                }

                // Validate rating between 1 and 5 stars
                if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
                    throw new Exception("Rating must be between 1 and 5");
                }

                // Sanitize input
                $product_id = (int)$conn->real_escape_string($product_id);
                $user_id = (int)$conn->real_escape_string($user_id);
                $rating = (int)$conn->real_escape_string($rating);
                $comment = $conn->real_escape_string($comment);

                // Insert review into database
                $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at) 
                        VALUES ($product_id, $user_id, $rating, '$comment', NOW())";
                
                if (!$conn->query($sql)) {
                    throw new Exception("Error submitting review: " . $conn->error);
                }

                return "Review submitted successfully!";
                break;

            // Get all reviews for a product
            case 'get_reviews':
                if (empty($product_id)) {
                    throw new Exception("Product ID is required");
                }

                $sql = "SELECT * FROM reviews 
                        WHERE product_id = $product_id 
                        ORDER BY created_at DESC";
                
                $result = $conn->query($sql);

                if (!$result) {
                    throw new Exception("Error fetching reviews: " . $conn->error);
                }

                // Return reviews as an array
                $reviews = array();
                while ($row = $result->fetch_assoc()) {
                    $reviews[] = $row;
                }

                return $reviews;
                break;

            // Get average rating for a product
            case 'get_average_rating':
                if (empty($product_id)) {
                    throw new Exception("Product ID is required");
                }

                $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = $product_id";
                
                $result = $conn->query($sql);

                if (!$result) {
                    throw new Exception("Error calculating average rating: " . $conn->error);
                }

                $row = $result->fetch_assoc();
                return round($row['average'], 1); // Round to one decimal place
                break;

            // Submit a vote for a review
            case 'vote':
                if (empty($review_id) || empty($user_id) || empty($vote)) {
                    throw new Exception("Missing required parameters");
                }

                $vote = intval($vote);

                // Check if user has already voted on this review
                $sql = "SELECT * FROM votes WHERE review_id = $review_id AND user_id = $user_id";
                
                $result = $conn->query($sql);
                
                if ($result->num_rows > 0) {
                    throw new Exception("You have already voted for this review");
                }

                // Insert vote into database
                $sql = "INSERT INTO votes (review_id, user_id, vote) 
                        VALUES ($review_id, $user_id, $vote)";
                
                if (!$conn->query($sql)) {
                    throw new Exception("Error submitting vote: " . $conn->error);
                }

                // Update review vote count
                $vote_change = ($vote == 1) ? 'votes_up' : 'votes_down';
                $sql = "UPDATE reviews SET $vote_change = $vote_change + 1 WHERE id = $review_id";
                
                if (!$conn->query($sql)) {
                    throw new Exception("Error updating vote count: " . $conn->error);
                }

                return "Vote submitted successfully!";
                break;

            default:
                throw new Exception("Invalid action");
        }
    } catch (Exception $e) {
        return array('error' => $e->getMessage());
    }
}

// Example usage:

// Submit a review
$submit_review = user_review(
    'submit',
    product_id: 1,
    user_id: 1,
    rating: 4,
    comment: "Great product, highly recommend!"
);

// Get all reviews for product ID 1
$get_reviews = user_review('get_reviews', product_id: 1);

// Get average rating for product ID 1
$average_rating = user_review('get_average_rating', product_id: 1);

// Submit a vote (1 = upvote, -1 = downvote)
submit_vote = user_review(
    'vote',
    review_id: 1,
    user_id: 1,
    vote: 1
);

?>


<?php
function add_review($product_id, $user_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $db_name = 'your_database_name';
    $username = 'root';
    $password = 'password';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        
        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("iiis", $product_id, $user_id, $rating, $comment);

        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $stmt->error);
        }

        // Update product average rating
        $sql_avg = "UPDATE products SET 
                        total_ratings = (total_ratings + ?),
                        average_rating = (average_rating * total_reviews + ?) / (total_reviews + 1),
                        total_reviews = total_reviews + 1
                    WHERE id = ?";
        
        $stmt_avg = $conn->prepare($sql_avg);
        if (!$stmt_avg) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters for average update
        $stmt_avg->bind_param("iii", $rating, $rating, $product_id);

        if (!$stmt_avg->execute()) {
            throw new Exception("Execute failed: " . $stmt_avg->error);
        }

        // Close statements and connection
        $stmt->close();
        $stmt_avg->close();
        $conn->close();

        return true;

    } catch (Exception $e) {
        // Handle errors
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}
?>


// Example usage
$product_id = 123;
$user_id = 456;
$rating = 5;
$comment = "Great product!";

if (add_review($product_id, $user_id, $rating, $comment)) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}


<?php
// Function to add a new review
function add_review($user_id, $rating, $comment) {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, rating, comment) VALUES ('$user_id', '$rating', '$comment')";
    if (mysqli_query($conn, $sql)) {
        echo "Review added successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Function to display reviews
function display_reviews() {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Function to calculate average rating
function get_average_rating() {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    echo "Average Rating: " . number_format($row['average'], 1) . "/5";
    
    // Close database connection
    mysqli_close($conn);
}

// Function to delete a review (optional)
function delete_review($review_id) {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Sanitize input
    $review_id = intval($review_id);
    
    // Delete review from database
    $sql = "DELETE FROM reviews WHERE id='$review_id'";
    if (mysqli_query($conn, $sql)) {
        echo "Review deleted successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    add_review($_POST['user_id'], $_POST['rating'], $_POST['comment']);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        .star-rating {
            font-size: 24px;
        }
        .star {
            color: gold;
        }
        .empty-star {
            color: #ccc;
        }
    </style>
</head>
<body>

<!-- Review Form -->
<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    <input type="text" name="user_id" placeholder="Enter your user ID" required><br>
    <select name="rating" required>
        <option value="">Choose a rating</option>
        <option value="1">1 Star</option>
        <option value="2">2 Stars</option>
        <option value="3">3 Stars</option>
        <option value="4">4 Stars</option>
        <option value="5">5 Stars</option>
    </select><br>
    <textarea name="comment" placeholder="Write your review here..." required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<!-- Display Reviews -->
<h2>Reviews:</h2>
<?php 
display_reviews();
echo "<br>";
get_average_rating();
?>

</body>
</html>



<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $review_text, $rating) {
    global $conn;
    
    // Validate input
    if (empty($review_text) || $rating < 1 || $rating > 5) {
        return false;
    }
    
    // Sanitize input
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating, review_date) 
            VALUES ('$user_id', '$product_id', '$review_text', '$rating', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $reviews = array();
    
    // Get all reviews for the product
    $sql = "SELECT r.review_id, u.username, r.review_text, r.rating, r.review_date 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = '$product_id' 
            ORDER BY r.review_date DESC";
    
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = array(
                'review_id' => $row['review_id'],
                'username' => $row['username'],
                'review_text' => htmlspecialchars_decode($row['review_text']),
                'rating' => $row['rating'],
                'review_date' => date('F j, Y', strtotime($row['review_date']))
            );
        }
    }
    
    return $reviews;
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    // Get total ratings and count of reviews
    $sql = "SELECT AVG(rating) as average, COUNT(review_id) as review_count 
            FROM reviews 
            WHERE product_id = '$product_id'";
    
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['review_count'] > 0) {
        return number_format($row['average'], 1, '.', '');
    } else {
        return 'No ratings yet';
    }
}

// Example usage:

// Add a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_id = $_GET['product_id'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (add_review($user_id, $product_id, $review_text, $rating)) {
        echo 'Review submitted successfully!';
    } else {
        echo 'Error submitting review. Please try again.';
    }
}

// Display reviews
$product_id = 1; // Example product ID
$reviews = get_reviews($product_id);

echo '<h3>Product Reviews</h3>';
if (!empty($reviews)) {
    foreach ($reviews as $review) {
        echo '<div class="review">';
        echo '<p><strong>' . $review['username'] . '</strong> - ' . $review['rating'] . '/5 stars</p>';
        echo '<p>' . $review['review_text'] . '</p>';
        echo '<p class="review-date">' . $review['review_date'] . '</p>';
        echo '</div>';
    }
} else {
    echo 'No reviews yet.';
}

// Display average rating
$average_rating = get_average_rating($product_id);
echo '<h4>Average Rating: ' . $average_rating . '/5 stars</h4>';

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to add or display user reviews
function userReview($name, $email = "", $rating = 5) {
    // Validate inputs
    if (empty($name)) {
        return "Error: Name is required.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Error: Invalid email format.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }
    
    // Sanitize inputs
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $rating = intval($rating);
    
    // Get reviews from file or initialize as empty array
    $reviewsFile = 'reviews.txt';
    if (file_exists($reviewsFile)) {
        $reviews = file_get_contents($reviewsFile);
    } else {
        $reviews = "";
    }
    
    // Prepare new review entry with timestamp
    $timestamp = date('Y-m-d H:i:s');
    $newReview = "$name|$email|$rating|$timestamp
";
    
    // Write to file
    if (!file_put_contents($reviewsFile, $newReview, FILE_APPEND)) {
        return "Error: Could not write review to file.";
    }
    
    // Return success message
    return "Thank you for your review!";
}

// Example usage:
$name = $_POST['name'] ?? '';
$email = $_POST['email'] ?? '';
$rating = $_POST['rating'] ?? 5;

$result = userReview($name, $email, $rating);
echo $result;
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $rating = intval($_POST['rating']);
    $review = htmlspecialchars($_POST['review']);

    // Validate required fields
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        header("Location: review_form.php?error=true");
        exit();
    }

    // SQL query to insert review
    $sql = "INSERT INTO reviews (name, email, rating, review)
            VALUES ('$name', '$email', $rating, '$review')";

    if (mysqli_query($conn, $sql)) {
        header("Location: thank_you.php");
        exit();
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

mysqli_close($conn);
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . nl2br(htmlspecialchars($row['review'])) . "</p>";
        echo "<small>Posted on: " . $row['timestamp'] . "</small>";
        echo "</div><hr>";
    }
} else {
    echo "No reviews yet!";
}

mysqli_close($conn);
?>


<?php
// Function to fetch and display user reviews for a specific product
function displayUserReviews($product_id) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // SQL query to fetch reviews for a specific product
    $sql = "SELECT user_id, rating, comment, timestamp FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating = mysqli_fetch_assoc(mysqli_query($conn, "SELECT AVG(rating) as avg FROM reviews WHERE product_id = '$product_id'"));
        
        echo "<div class='reviews'>";
        echo "<h3>Product Reviews</h3>";
        echo "<p>Average Rating: " . number_format($average_rating['avg'], 1) . " stars</p>";
        
        // Display each review
        while ($row = mysqli_fetch_assoc($result)) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $timestamp = $row['timestamp'];
            
            echo "<div class='review'>";
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            echo "<p>" . htmlspecialchars($comment) . "</p>";
            echo "<small>Posted on: " . date('M j, Y', strtotime($timestamp)) . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews found for this product.</p>";
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
displayUserReviews(1);

?>


<?php
// Array to store reviews (you might want to use a database in a real application)
$reviews = array();

/**
 * Function to add a new review
 * @param string $username The username leaving the review
 * @param int $rating The rating (1-5 stars)
 * @param string $comment The review comment
 */
function add_review(&$reviews, $username, $rating, $comment) {
    // Generate a unique ID for the review
    $review_id = uniqid();
    
    // Create an array with review details
    $new_review = array(
        'id' => $review_id,
        'username' => $username,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    );
    
    // Add the new review to the beginning of the reviews array
    array_unshift($reviews, $new_review);
}

/**
 * Function to display all reviews
 */
function display_reviews($reviews) {
    if (empty($reviews)) {
        echo "No reviews yet!";
        return;
    }
    
    foreach ($reviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<h3>Reviewer: " . htmlspecialchars($review['username']) . "</h3>";
        echo "<p>Posted on: " . date('jS M Y', strtotime($review['timestamp'])) . "</p>";
        echo "<div class='stars'>";
        
        // Display stars
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        for ($i = 1; $i <= (5 - $review['rating']); $i++) {
            echo "<span class='star'>☆</span>";
        }
        
        echo "</div>";
        echo "<p>Comment: " . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

/**
 * Function to calculate average rating
 */
function calculate_average_rating($reviews) {
    if (empty($reviews)) {
        return 0;
    }
    
    $total_ratings = 0;
    foreach ($reviews as $review) {
        $total_ratings += $review['rating'];
    }
    
    $average = $total_ratings / count($reviews);
    return round($average, 1); // Rounded to one decimal place
}

// Example usage:

// Add some sample reviews
add_review($reviews, "JohnDoe", 5, "Excellent product! Highly recommended.");
add_review($reviews, "JaneSmith", 4, "Good quality, but could be better.");
add_review($reviews, "MikeJohnson", 3, "Decent product, meets expectations.");

// Display average rating
echo "<h2>Average Rating: " . calculate_average_rating($reviews) . "/5</h2>";

// Display all reviews
display_reviews($reviews);
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to create review
function createReview($user_name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $comment = htmlspecialchars(strip_tags(trim($comment)));

    try {
        // Prepare and execute the SQL statement with prepared statements
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, email, rating, comment) VALUES (:user_name, :email, :rating, :comment)");
        
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        $result = $stmt->execute();

        if ($result) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        // Fetch all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if ($reviews) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p>Rating: " . $review['rating'] . " stars</p>";
                echo "<p>Email: " . htmlspecialchars($review['email']) . "</p>";
                echo "<p>Comment: " . htmlspecialchars($review['comment']) . "</p>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews found.</p>";
        }
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate input fields
    if (!empty($_POST['user_name']) && !empty($_POST['email']) && !empty($_POST['rating']) && !empty($_POST['comment'])) {
        $user_name = $_POST['user_name'];
        $email = $_POST['email'];
        $rating = (int)$_POST['rating'];
        $comment = $_POST['comment'];

        // Basic validation
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address.");
        }
        
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars.");
        }

        // Create review
        if (createReview($user_name, $email, $rating, $comment, $conn)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error submitting review. Please try again.";
        }
    } else {
        die("All fields are required.");
    }
}

// Close database connection
$conn = null;
?>


<?php
// Function to handle adding reviews
function addReview($name, $comment) {
    // Sanitize inputs to prevent XSS attacks
    $name = htmlspecialchars($name);
    $comment = htmlspecialchars($comment);

    // Get current date and time
    $date = date('Y-m-d H:i:s');

    // Review data
    $review = array(
        'name' => $name,
        'comment' => $comment,
        'date' => $date
    );

    // File to store reviews
    $file = 'reviews.json';

    // Read existing reviews from file
    if (file_exists($file)) {
        $data = file_get_contents($file);
        $reviews = json_decode($data, true);
    } else {
        $reviews = array();
    }

    // Add new review
    $reviews[] = $review;

    // Write back to the file
    $success = file_put_contents($file, json_encode($reviews, JSON_PRETTY_PRINT));

    return $success ? true : false;
}

// Function to display reviews
function displayReviews() {
    $file = 'reviews.json';

    if (file_exists($file)) {
        $data = file_get_contents($file);
        $reviews = json_decode($data, true);

        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                // Display each review
                echo '<div class="review">';
                echo '<h3>' . $review['name'] . '</h3>';
                echo '<p>' . $review['comment'] . '</p>';
                echo '<small>Posted on ' . date('F j, Y g:i a', strtotime($review['date'])) . '</small>';
                echo '</div>';
            }
        } else {
            echo '<p>No reviews yet!</p>';
        }
    } else {
        echo '<p>No reviews file found!</p>';
    }
}
?>


<?php
// Include the review functions

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add new review when form is submitted
    $name = $_POST['name'];
    $comment = $_POST['comment'];
    
    if (addReview($name, $comment)) {
        echo '<p>Thank you for your review!</p>';
    } else {
        echo '<p>Error adding review. Please try again.</p>';
    }
}

// Display all reviews
displayReviews();
?>


<?php
function display_user_reviews($product_id, $max_reviews = 5) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return;
    }

    // SQL query to fetch reviews for the product
    $sql = "SELECT user_name, rating, review_text, review_date 
            FROM reviews 
            WHERE product_id = ? 
            ORDER BY review_date DESC 
            LIMIT ?";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        // Bind parameters
        mysqli_stmt_bind_param($stmt, "ii", $product_id, $max_reviews);

        // Execute the statement
        mysqli_stmt_execute($stmt);

        // Get the result set
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "<div class='reviews'>";
            
            while ($row = mysqli_fetch_assoc($result)) {
                $user_name = htmlspecialchars($row['user_name']);
                $rating = $row['rating'];
                $review_text = htmlspecialchars($row['review_text']);
                $review_date = $row['review_date'];

                // Display each review
                echo "<div class='review'>";
                echo "<h3>Reviewed by: $user_name</h3>";
                echo generate_stars($rating);
                echo "<p>$review_text</p>";
                echo "<small>Posted on: $review_date</small>";
                echo "</div>";
            }
            
            echo "</div>";
        } else {
            echo "<p>No reviews available for this product.</p>";
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Helper function to generate star ratings
function generate_stars($rating) {
    $full_stars = min(5, (int)$rating);
    $half_star = ($rating - $full_stars >= 0.5) ? 1 : 0;
    
    echo "<div class='stars'>";
    for ($i = 0; $i < $full_stars; $i++) {
        echo "<img src='star.png' alt='*'>";
    }
    if ($half_star) {
        echo "<img src='star_half.png' alt='*'>";
    }
    for ($i = $full_stars + $half_star; $i < 5; $i++) {
        echo "<img src='star_empty.png' alt=''>";
    }
    echo "</div>";
}

// Example usage:
display_user_reviews(1, 3);
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Function to create a user review
function createReview($userId, $productId, $rating, $reviewText) {
    global $host, $user, $password, $db_name;
    
    // Connect to the database
    $conn = new mysqli($host, $user, $password, $db_name);
    
    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }
    
    // SQL query to insert review data
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, timestamp)
            VALUES (?, ?, ?, ?, NOW())";
            
    // Prepare and bind the statement
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
        return false;
    }
    
    $stmt->bind_param("iisi", $userId, $productId, $rating, $reviewText);
    
    // Execute the statement
    if ($stmt->execute()) {
        // Review created successfully
        $stmt->close();
        $conn->close();
        return true;
    } else {
        // Error creating review
        die("Error: " . $sql . "<br>" . $conn->error);
        $stmt->close();
        $conn->close();
        return false;
    }
}

// Example usage:
$userId = 1;          // Replace with actual user ID
$productId = 1;       // Replace with actual product ID
$rating = 5;          // Rating between 1-5
$reviewText = "This is a great product!"; 

if (createReview($userId, $productId, $rating, $reviewText)) {
    echo "Thank you for your review!";
} else {
    echo "Error submitting your review. Please try again.";
}
?>


<?php
// Include your createReview() function here

$userId = $_POST['user_id'];
$productId = $_POST['product_id'];
$rating = (int)$_POST['rating'];
$reviewText = htmlspecialchars($_POST['review_text'], ENT_QUOTES, 'UTF-8');

if ($rating < 1 || $rating > 5) {
    die("Invalid rating. Please choose a rating between 1 and 5.");
}

if (empty($reviewText)) {
    die("Please write your review.");
}

if (createReview($userId, $productId, $rating, $reviewText)) {
    echo "Thank you for your review!";
} else {
    echo "Error submitting your review. Please try again.";
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(50),
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

if (mysqli_query($conn, $sql)) {
    // Table created successfully
} else {
    echo "Error creating table: " . mysqli_error($conn);
}

function handleReviews($action = 'display', $user_name = '', $rating = 0, $comment = '') {
    global $conn;

    switch ($action) {
        case 'submit':
            // Validate input
            if (empty($user_name)) {
                die("Please enter your name.");
            }
            if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
                die("Rating must be between 1 and 5.");
            }
            if (strlen($comment) > 500) {
                die("Comment is too long. Maximum length is 500 characters.");
            }

            // Sanitize input
            $user_name = mysqli_real_escape_string($conn, $user_name);
            $rating = intval($rating);
            $comment = mysqli_real_escape_string($conn, $comment);

            // Insert review into database
            $sql = "INSERT INTO reviews (user_name, rating, comment, timestamp) 
                    VALUES ('$user_name', '$rating', '$comment', NOW())";

            if (mysqli_query($conn, $sql)) {
                echo "<script>alert('Review submitted successfully!');</script>";
            } else {
                echo "Error submitting review: " . mysqli_error($conn);
            }
            break;

        case 'display':
            // Get all reviews from database
            $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
            $result = mysqli_query($conn, $sql);

            if (mysqli_num_rows($result) > 0) {
                // Calculate average rating
                $average_rating = 0;
                $total_ratings = 0;

                while ($row = mysqli_fetch_assoc($result)) {
                    $average_rating += $row['rating'];
                    $total_ratings++;
                }

                if ($total_ratings > 0) {
                    $average_rating /= $total_ratings;
                }

                // Reset result pointer
                mysqli_data_seek($result, 0);

                // Display reviews
                echo "<div class='reviews'>";
                echo "<h2>Reviews (" . $total_ratings . ")</h2>";
                echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
                
                while ($row = mysqli_fetch_assoc($result)) {
                    $date = date('F j, Y g:i a', strtotime($row['timestamp']));
                    echo "<div class='review'>";
                    echo "<strong>" . htmlspecialchars($row['user_name']) . "</strong> - " . $date . "<br>";
                    echo "<span class='rating'>★ " . $row['rating'] . "/5</span><br>";
                    echo "<p>" . nl2br(htmlspecialchars($row['comment'])) . "</p>";
                    echo "</div>";
                }
                echo "</div>";
            } else {
                echo "<p>No reviews yet. Be the first to review!</p>";
            }
            break;

        default:
            die("Invalid action specified.");
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php handleReviews('display'); ?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

function createReview($productId, $userId, $rating, $comment) {
    // Connect to the database
    $connection = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    if (!$connection) {
        die("Connection failed: " . mysqli_error($connection));
    }
    
    try {
        // Sanitize inputs
        $productId = mysqli_real_escape_string($connection, $productId);
        $userId = mysqli_real_escape_string($connection, $userId);
        $rating = mysqli_real_escape_string($connection, $rating);
        $comment = mysqli_real_escape_string($connection, $comment);
        
        // SQL query to insert review
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment)
                VALUES ('$productId', '$userId', '$rating', '$comment')";
        
        if (!$result = mysqli_query($connection, $sql)) {
            throw new Exception("Error inserting review: " . mysqli_error($connection));
        }
        
        // Get the last inserted id
        $reviewId = mysqli_insert_id($connection);
        
        // Close database connection
        mysqli_close($connection);
        
        return array(
            'status' => 'success',
            'message' => 'Review created successfully',
            'review_id' => $reviewId,
            'product_id' => $productId,
            'user_id' => $userId,
            'rating' => $rating,
            'comment' => $comment
        );
        
    } catch (Exception $e) {
        // Close database connection in case of error
        mysqli_close($connection);
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Example usage:
$product_id = 1;
$user_id = 1;
$rating = 5;
$comment = "Great product!";
$result = createReview($product_id, $user_id, $rating, $comment);

print_r($result);
?>


<?php
function show_reviews($product_id) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to fetch reviews for a specific product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";

    // Execute the query
    $result = mysqli_query($conn, $sql);

    // Check if there are any reviews
    if (mysqli_num_rows($result) > 0) {
        // Output the reviews
        echo "<div class='reviews-container'>";
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review-item'>";
                // Review author name
                echo "<h4>" . $row['user_name'] . "</h4>";
                
                // Rating stars
                $rating = $row['rating'];
                echo "<div class='stars'>";
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $rating) {
                            echo "<span class='star'>★</span>";
                        } else {
                            echo "<span class='star'>☆</span>";
                        }
                    }
                echo "</div>";
                
                // Review comment
                echo "<p>" . $row['comment'] . "</p>";
                
                // Review date
                echo "<small>Reviewed on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        // If there are no reviews
        echo "<p>No reviews available for this product.</p>";
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


show_reviews(1); // Replace 1 with your actual product ID


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function displayUserReviews() {
    global $conn;
    
    // SQL query to fetch reviews from the database
    $sql = "SELECT review_id, user_name, review_text, rating, review_date 
            FROM reviews 
            WHERE status = 'active' 
            ORDER BY review_id DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review in HTML format
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
                    echo "<p>" . date('F j, Y', strtotime($row['review_date'])) . "</p>";
                    displayStars($row['rating']);
                echo "</div>";
                
                echo "<div class='review-text'>";
                    echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
                echo "</div>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }
}

function displayStars($rating) {
    $stars = '';
    
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= '<span class="star-filled">★</span>';
        } else {
            $stars .= '<span class="star-empty">☆</span>';
        }
    }
    
    echo "<div class='rating'>" . $stars . "</div>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .rating {
            display: inline-block;
        }
        
        .star-filled {
            color: #ff4d4d;
            font-size: 24px;
        }
        
        .star-empty {
            color: #ddd;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>
    
    <?php displayUserReviews(); ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Insert review if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review']);
    $rating = intval($_POST['rating']);

    // Insert into database
    $sql = "INSERT INTO reviews (name, review, rating) VALUES ('$name', '$review_text', $rating)";
    
    if ($conn->query($sql) === TRUE) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Get reviews from database
$sql = "SELECT * FROM reviews ORDER BY id DESC";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .star-rating {
            display: inline-block;
            font-size: 24px;
            color: gold;
        }
        .review-box {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <!-- Review Form -->
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="name" placeholder="Your Name" required><br><br>
        <textarea name="review" placeholder="Write your review here..." rows="5" cols="40" required></textarea><br><br>
        <h3>Rating:</h3>
        <select name="rating">
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5" selected>5 Stars</option>
        </select><br><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Reviews</h2>
    <?php
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review-box'>";
            echo "<strong>" . htmlspecialchars($row['name']) . "</strong><br>";
            
            // Display rating stars
            $rating = $row['rating'];
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star-rating'>★</span>";
                } else {
                    echo "<span class='star-rating'>☆</span>";
                }
            }
            
            echo "<br>";
            echo htmlspecialchars($row['review']) . "<br><br>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
    ?>

    <?php
    // Close database connection
    $conn->close();
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'review_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function addReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    try {
        // Sanitize inputs
        $user_id = htmlspecialchars(strip_tags(trim($user_id)));
        $product_id = htmlspecialchars(strip_tags(trim($product_id)));
        $rating = (int)$rating;
        $comment = htmlspecialchars(strip_tags(trim($comment)));
        
        // Check if rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("
            INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (:user_id, :product_id, :rating, :comment, NOW())
        ");
        
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Review submission failed");
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($product_id) {
    global $conn;
    
    try {
        // Sanitize input
        $product_id = htmlspecialchars(strip_tags(trim($product_id)));
        
        // Prepare SQL statement
        $stmt = $conn->prepare("
            SELECT r.*, u.username 
            FROM reviews r
            LEFT JOIN users u ON r.user_id = u.id
            WHERE r.product_id = :product_id
            ORDER BY r.review_date DESC
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    try {
        // Sanitize input
        $product_id = htmlspecialchars(strip_tags(trim($product_id)));
        
        // Prepare SQL statement
        $stmt = $conn->prepare("
            SELECT AVG(rating) as average 
            FROM reviews 
            WHERE product_id = :product_id
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:

// Check if user is logged in (replace with your authentication system)
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];
$product_id = 1; // Replace with actual product ID

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['submit_review'])) {
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($user_id, $product_id, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Get reviews
$reviews = getReviews($product_id);

// Display average rating
$average_rating = getAverageRating($product_id);
echo "<h3>Product Rating: $average_rating/5</h3>";

// Display reviews
if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>Rating: " . str_repeat("★", $review['rating']) . "</h4>";
        if (isset($review['username'])) {
            echo "<p>By: " . $review['username'] . "</p>";
        }
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . date('M j, Y', strtotime($review['review_date'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet!";
}
?>


<?php
// Array to store reviews (simulating a database)
$reviews = array();

/**
 * Add a new review
 *
 * @param string $item_id The ID of the item being reviewed
 * @param string $user_id The ID of the user submitting the review
 * @param int $rating The rating (1-5 stars)
 * @param string $comment The review comment
 * @return bool Returns true if review was added successfully, false otherwise
 */
function addReview($item_id, $user_id, $rating, $comment) {
    global $reviews;
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }
    
    // Review data
    $review = array(
        'user_id' => $user_id,
        'rating' => (int)$rating,
        'comment' => htmlspecialchars($comment),
        'timestamp' => date('Y-m-d H:i:s')
    );
    
    // Add review to the item's review list
    if (!isset($reviews[$item_id])) {
        $reviews[$item_id] = array();
    }
    
    array_push($reviews[$item_id], $review);
    return true;
}

/**
 * Get all reviews for an item
 *
 * @param string $item_id The ID of the item to get reviews for
 * @return array Array of reviews for the item
 */
function getReviews($item_id) {
    global $reviews;
    
    if (isset($reviews[$item_id])) {
        return $reviews[$item_id];
    }
    return array();
}

/**
 * Calculate average rating for an item
 *
 * @param string $item_id The ID of the item to calculate the average rating for
 * @return float Average rating (rounded to 2 decimal places)
 */
function getAverageRating($item_id) {
    global $reviews;
    
    if (!isset($reviews[$item_id]) || count($reviews[$item_id]) == 0) {
        return 0; // No reviews yet
    }
    
    $total_ratings = 0;
    foreach ($reviews[$item_id] as $review) {
        $total_ratings += $review['rating'];
    }
    
    $average_rating = $total_ratings / count($reviews[$item_id]);
    return round($average_rating, 2);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {
    // Sanitize input
    $item_id = htmlspecialchars($_POST['item_id']);
    $user_id = htmlspecialchars($_POST['user_id']);
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($item_id, $user_id, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Please enter a valid rating between 1 and 5.";
    }
}

// Display reviews and average rating
$item_id = '123'; // Example item ID
$all_reviews = getReviews($item_id);
$average_rating = getAverageRating($item_id);

echo "<h3>Item Reviews:</h3>";
if (count($all_reviews) == 0) {
    echo "No reviews yet.";
} else {
    foreach ($all_reviews as $review) {
        echo "<div class='review'>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<p>Posted by User: " . $review['user_id'] . "</p>";
        echo "<p>Timestamp: " . $review['timestamp'] . "</p>";
        echo "</div>";
    }
}

echo "<h3>Average Rating: " . $average_rating . "/5</h3>";
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';     // Replace with your database password
$database = 'reviews_db'; // Replace with your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($name, $review, $conn) {
    // Validate input data
    if (empty($name) || empty($review)) {
        return false; // Return false if either field is empty
    }

    // Prepare and bind the statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (name, review) VALUES (?, ?)");
    $stmt->bind_param("ss", $name, $review);

    // Execute the query
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }

    // Close the statement
    $stmt->close();
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT id, name, review, timestamp FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row['name']) . "</h4>";
            echo "<p>" . htmlspecialchars($row['review']) . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }
}
?>


<?php
// Include necessary files
include 'db.php';

// Function to get product reviews
function get_reviews($product_id) {
    $reviews = array();
    
    // Query the database for reviews
    $query = "SELECT r.review_id, r.user_id, r.product_id, r.rating, r.review_text, 
                 u.username, r.created_at
              FROM reviews r
              JOIN users u ON r.user_id = u.user_id
              WHERE r.product_id = ?
              ORDER BY r.created_at DESC";
    
    $stmt = mysqli_prepare($GLOBALS['connection'], $query);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'review_id' => $row['review_id'],
            'user_id' => $row['user_id'],
            'product_id' => $row['product_id'],
            'rating' => $row['rating'],
            'review_text' => htmlspecialchars($row['review_text']),
            'username' => htmlspecialchars($row['username']),
            'created_at' => $row['created_at']
        );
    }
    
    return $reviews;
}

// Function to calculate average rating
function get_average_rating($product_id) {
    $average = 0.0;
    
    // Query the database for average rating
    $query = "SELECT AVG(rating) as average
              FROM reviews
              WHERE product_id = ?";
    
    $stmt = mysqli_prepare($GLOBALS['connection'], $query);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        $average = number_format((float)$row['average'], 1, '.', '');
    }
    
    return $average;
}

// Function to submit a new review
function submit_review($product_id, $user_id) {
    // Sanitize and validate input
    if (isset($_POST['submit'])) {
        $rating = intval($_POST['rating']);
        $review_text = mysqli_real_escape_string($GLOBALS['connection'], $_POST['review_text']);
        
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5.");
        }
        
        if (empty($review_text)) {
            throw new Exception("Review text cannot be empty.");
        }
        
        // Insert review into database
        $query = "INSERT INTO reviews (product_id, user_id, rating, review_text)
                  VALUES (?, ?, ?, ?)";
        
        $stmt = mysqli_prepare($GLOBALS['connection'], $query);
        mysqli_stmt_bind_param($stmt, 'iisi', $product_id, $user_id, $rating, $review_text);
        
        if (!mysqli_stmt_execute($stmt)) {
            throw new Exception("Error submitting review: " . mysqli_error($GLOBALS['connection']));
        }
    }
}

// Example usage:
$product_id = 1; // Replace with your product ID
$user_id = 2;    // Replace with current user's ID

try {
    submit_review($product_id, $user_id);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Get and display reviews
$reviews = get_reviews($product_id);
$average_rating = get_average_rating($product_id);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .rating-stars {
            color: gold;
            font-size: 24px;
        }
        .average-rating {
            font-weight: bold;
            font-size: 18px;
        }
    </style>
</head>
<body>
    <h2>Product Reviews</h2>
    <p>Average Rating: <?php echo $average_rating; ?> stars</p>

    <!-- Display existing reviews -->
    <?php foreach ($reviews as $review): ?>
    <div class="review-box">
        <div class="rating-stars">
            <?php 
                $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
                echo $stars;
            ?>
        </div>
        <p><?php echo $review['review_text']; ?></p>
        <small>by <?php echo $review['username']; ?> on <?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
    </div>
    <?php endforeach; ?>

    <!-- Review submission form -->
    <h3>Submit a Review</h3>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="rating">Rating:</label><br>
        <select name="rating" id="rating">
            <option value="">Select Rating</option>
            <?php for ($i = 1; $i <= 5; $i++): ?>
                <option value="<?php echo $i; ?>">★<?php echo $i; ?></option>
            <?php endfor; ?>
        </select><br>

        <label for="review_text">Review:</label><br>
        <textarea name="review_text" id="review_text" required></textarea><br>

        <input type="submit" name="submit" value="Submit Review">
    </form>
</body>
</html>


<?php
// Array to store reviews
$reviews = array();

// Load existing reviews from file
function load_reviews() {
    global $reviews;
    
    if (file_exists('reviews.txt')) {
        $reviews_data = file_get_contents('reviews.txt');
        $reviews = unserialize($reviews_data);
    }
}

// Save reviews to file
function save_reviews() {
    global $reviews;
    
    $reviews_data = serialize($reviews);
    file_put_contents('reviews.txt', $reviews_data);
}

// Add a new review
function add_review($name, $rating, $comment) {
    global $reviews;
    
    // Sanitize input
    $name = htmlspecialchars(strip_tags(trim($name)));
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));
    
    if ($name == '' || $comment == '') {
        return false; // Missing required fields
    }
    
    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }
    
    // Create review array
    $review = array(
        'name' => $name,
        'rating' => $rating,
        'comment' => $comment,
        'date' => date('Y-m-d H:i:s')
    );
    
    global $reviews;
    $reviews[] = $review;
    save_reviews();
    return true;
}

// Display reviews
function display_reviews() {
    global $reviews;
    
    load_reviews();
    
    if (empty($reviews)) {
        echo "<p>No reviews yet.</p>";
        return;
    }
    
    // Calculate average rating
    $total_rating = 0;
    foreach ($reviews as $review) {
        $total_rating += $review['rating'];
    }
    $average_rating = number_format($total_rating / count($reviews), 1);
    
    echo "<div class='reviews'>";
    echo "<h3>Reviews (" . count($reviews) . ")</h3>";
    echo "<p>Average Rating: " . $average_rating . "/5</p>";
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . $review['name'] . "</h4>";
        echo "<div class='rating'>";
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        echo "</div>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . $review['date'] . "</small>";
        echo "</div>";
    }
    
    echo "</div>";
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $name = $_POST['name'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (add_review($name, $rating, $comment)) {
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Please fill in all required fields and check the rating.</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .reviews {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
        }
        
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
        
        .star {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            
            <select name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">★ ★ ★ ★ ★</option>
                <option value="4">★ ★ ★ ★</option>
                <option value="3">★ ★ ★</option>
                <option value="2">★ ★</option>
                <option value="1">★</option>
            </select><br><br>
            
            <textarea name="comment" placeholder="Write your review..." required></textarea><br><br>
            
            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    </div>

    <?php display_reviews(); ?>
</body>
</html>


<?php
// Function to create and display reviews
function user_reviews() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = $_POST['rating'];
        $comment = htmlspecialchars($_POST['comment']);

        // Validate input
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            echo "All fields must be filled out!";
            exit();
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            exit();
        }

        // Store review in a file
        $review = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );

        $reviews_file = 'reviews.txt';
        $reviews_content = serialize($review) . PHP_EOL;

        if (file_put_contents($reviews_file, $reviews_content, FILE_APPEND | LOCK_EX)) {
            echo "Thank you for your review!";
        } else {
            echo "Error storing review. Please try again later.";
        }
    }

    // Display existing reviews
    $reviews_file = 'reviews.txt';
    if (file_exists($reviews_file) && filesize($reviews_file) > 0) {
        $reviews_data = file_get_contents($reviews_file);
        $reviews = explode(PHP_EOL, $reviews_data);

        echo "<h2>Previous Reviews:</h2>";
        echo "<div class='reviews'>";

        $total_rating = 0;
        $review_count = 0;

        foreach ($reviews as $review_line) {
            if (trim($review_line) != '') {
                $review = unserialize($review_line);
                $total_rating += $review['rating'];
                $review_count++;

                echo "<div class='review'>";
                echo "<h3>" . $review['name'] . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>" . nl2br($review['comment']) . "</p>";
                echo "<small>Posted on: " . $review['date'] . "</small>";
                echo "</div>";
            }
        }

        // Calculate and display average rating
        if ($review_count > 0) {
            $average_rating = $total_rating / $review_count;
            echo "<h3>Average Rating: " . round($average_rating, 1) . "/5</h3>";
        } else {
            echo "<p>No reviews available yet.</p>";
        }

        echo "</div>";
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Display the review form
function display_review_form() {
    echo <<<HTML
    <form method="post" action="">
        <h2>Submit a Review</h2>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>
HTML;
}
?>


<?php
function submitReview($rating, $comments, $connection) {
    // Validate input data
    if (!is_numeric($rating) || !isset($rating)) {
        return "Rating must be a number between 1 and 5.";
    }
    
    if (strlen($comments) > 500) {
        return "Comments are too long. Please keep it under 500 characters.";
    }

    // Clean the input data to prevent SQL injection
    $rating = intval($rating);
    $comments = mysqli_real_escape_string($connection, htmlspecialchars(trim($comments)));

    // Get user ID from session (assuming user is logged in)
    if (!isset($_SESSION['user_id'])) {
        return "You must be logged in to submit a review.";
    }
    
    $user_id = intval($_SESSION['user_id']);

    // Check that rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5.";
    }

    // SQL statement to insert review into database
    $sql = "INSERT INTO reviews (user_id, rating, comments) 
            VALUES (?, ?, ?)";

    try {
        // Prepare the statement
        $stmt = mysqli_prepare($connection, $sql);
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . mysqli_error($connection));
        }

        // Bind parameters to the statement
        mysqli_stmt_bind_param($stmt, "iss", $user_id, $rating, $comments);

        // Execute the statement
        $result = mysqli_stmt_execute($stmt);
        
        if ($result) {
            return true; // Review submitted successfully
        } else {
            throw new Exception("Error submitting review: " . mysqli_stmt_error($stmt));
        }

    } catch (Exception $e) {
        // Handle errors appropriately, perhaps log them
        error_log("Review submission failed: " . $e->getMessage());
        return false; // Review submission failed
    } finally {
        if ($stmt) {
            mysqli_stmt_close($stmt);
        }
    }
}
?>


$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}


session_start(); // Start the session

// Get form data
$rating = $_POST['rating'];
$comments = $_POST['comments'];

// Submit the review
$result = submitReview($rating, $comments, $connection);

if ($result === true) {
    echo "Thank you for submitting your review!";
} else {
    echo "Error: " . $result;
}


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'review_system';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a user review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate rating (assuming ratings are between 1 and 5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Get current date
    $date = date('Y-m-d H:i:s');
    
    // Insert review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$date')";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a specific product
function display_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from the database
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>Review by: " . $row['user_id'] . "</h4>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Reviewed on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage:

// Add a review
if (isset($_POST['submit_review'])) {
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review.";
    }
}

// Display reviews
display_reviews(1); // Replace 1 with the product ID you want to display reviews for

?>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "reviews";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Sanitize and validate input (you should add more validation as needed)
    if (!empty($username) && !empty($rating) && !empty($comment)) {
        // Use prepared statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "INSERT INTO reviews (username, rating, comment, timestamp) VALUES (?, ?, ?, NOW())");
        mysqli_stmt_bind_param($stmt, "sii", $username, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "<p class='success'>Thank you for submitting your review!</p>";
        } else {
            echo "<p class='error'>Error submitting review. Please try again later.</p>";
        }
        
        mysqli_stmt_close($stmt);
    } else {
        echo "<p class='error'>Please fill in all fields before submitting your review.</p>";
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from the database
    $result = mysqli_query($conn, "SELECT * FROM reviews ORDER BY timestamp DESC");
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $username = $row['username'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));
            
            // Display each review
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<span class='username'>$username</span>";
                    displayRatingStars($rating);
                    echo "<span class='timestamp'>$timestamp</span>";
                echo "</div>";
                echo "<p class='comment'>$comment</p>";
            echo "</div>";
        }
    } else {
        echo "<p class='no-reviews'>No reviews submitted yet.</p>";
    }
}

// Function to display rating stars
function displayRatingStars($rating) {
    $fullStars = min((int)$rating, 5);
    $halfStar = ($rating - $fullStars) >= 0.5 ? 1 : 0;
    $emptyStars = 5 - $fullStars - $halfStar;
    
    for ($i = 0; $i < $fullStars; $i++) {
        echo "<span class='star'>★</span>";
    }
    
    if ($halfStar) {
        echo "<span class='star'>⯨</span>";
    }
    
    for ($i = 0; $i < $emptyStars; $i++) {
        echo "<span class='star'>☆</span>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to save a review
function save_review($name, $email, $review, $rating, $conn) {
    // Sanitize input
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $review = mysqli_real_escape_string($conn, $review);
    $rating = intval($rating);

    // Insert into database
    $sql = "INSERT INTO reviews (name, email, review, rating, timestamp) 
            VALUES ('$name', '$email', '$review', '$rating', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to get all reviews
function get_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if ($result && mysqli_num_rows($result) > 0) {
        return mysqli_fetch_all($result, MYSQLI_ASSOC);
    } else {
        return array();
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $review = $_POST['review'];
    $rating = $_POST['rating'];

    if (save_review($name, $email, $review, $rating, $conn)) {
        echo "<script>alert('Review submitted successfully!');</script>";
    }
}

// Get all reviews
$reviews = get_reviews($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .review-container {
            background-color: #f9f9f9;
            padding: 20px;
            margin: 10px 0;
            border-radius: 5px;
        }

        .stars {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <input type="email" name="email" placeholder="Your Email" required><br><br>
            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea><br><br>
            <label>Rating:</label>
            <select name="rating">
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5" selected>5 Stars</option>
            </select><br><br>
            <input type="submit" value="Submit Review">
        </form>
    </div>

    <?php if (!empty($reviews)) : ?>
    <h2>Latest Reviews</h2>
    <?php foreach ($reviews as $review) : ?>
    <div class="review-container">
        <h3><?php echo htmlspecialchars($review['name']); ?></h3>
        <p><?php echo htmlspecialchars($review['review']); ?></p>
        <div class="stars">
            <?php
            for ($i = 1; $i <= $review['rating']; $i++) {
                echo "★ ";
            }
            for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                echo "☆ ";
            }
            ?>
        </div>
        <small><?php echo date('F j, Y g:i a', strtotime($review['timestamp'])); ?></small>
    </div>
    <?php endforeach; ?>
    <?php else : ?>
    <p>No reviews yet. Be the first to leave a review!</p>
    <?php endif; ?>

</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
function reviewSystem() {
    // Database connection settings
    $host = "localhost";
    $user = "username";
    $password = "password";
    $database = "reviews_db";

    // Connect to database
    $conn = mysqli_connect($host, $user, $password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Handle new review submission
    if (isset($_POST['submit'])) {
        // Sanitize input
        $name = htmlspecialchars($_POST['name']);
        $review = htmlspecialchars($_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate inputs
        if ($name == "" || $review == "" || $rating < 1 || $rating > 5) {
            echo "Please fill in all fields correctly!";
        } else {
            // Insert review into database
            $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, review, rating, date) VALUES (?, ?, ?, NOW())");
            mysqli_stmt_bind_param($stmt, "sss", $name, $review, $rating);

            if ($stmt->execute()) {
                echo "<div class='alert'>Review submitted successfully!</div>";
                // Redirect back to the same page
                header("Refresh: 2; url=".$_SERVER['PHP_SELF']);
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Fetch all reviews from database
    $result = mysqli_query($conn, "SELECT * FROM reviews ORDER BY date DESC");

    if (mysqli_num_rows($result) > 0) {
        // Display average rating
        $averageRatingQuery = mysqli_query($conn, "SELECT AVG(rating) AS avg_rating FROM reviews");
        $avgRating = mysqli_fetch_assoc($averageRatingQuery);
        echo "<h3>Average Rating: " . number_format($avgRating['avg_rating'], 1) . "/5</h3>";

        // Display each review
        while ($row = mysqli_fetch_assoc($result)) {
            $name = $row['name'];
            $reviewText = $row['review'];
            $rating = $row['rating'];
            $date = date('F j, Y', strtotime($row['date']));

            echo "<div class='review'>";
            echo "<h4>Review by $name</h4>";
            echo "<p>$reviewText</p>";
            echo "<div class='stars'>";
            displayStars($rating);
            echo "</div>";
            echo "<small>$date</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found. Be the first to review!";
    }

    // Close database connection
    mysqli_close($conn);

    // Review submission form
    echo '<form id="reviewForm" method="post">
              <h3>Submit a Review</h3>
              <input type="text" name="name" placeholder="Your Name" required><br>
              <textarea name="review" placeholder="Write your review here..." required></textarea><br>
              <select name="rating" required>
                  <option value="">Select Rating (1-5)</option>
                  <option value="5">5 Stars</option>
                  <option value="4">4 Stars</option>
                  <option value="3">3 Stars</option>
                  <option value="2">2 Stars</option>
                  <option value="1">1 Star</option>
              </select><br>
              <input type="submit" name="submit" value="Submit Review">
          </form>';
}

// Helper function to display stars
function displayStars($rating) {
    $fullStars = floor($rating);
    $hasHalfStar = ($rating - $fullStars) >= 0.5;

    for ($i = 1; $i <= $fullStars; $i++) {
        echo "★ ";
    }

    if ($hasHalfStar) {
        echo "⯨ "; // Half star emoji
    }
}

// Usage example:
?>


<?php
// Connect to database
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Submit review function
function submitReview() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $rating = $_POST['rating'];
    $review_title = $_POST['review_title'];
    $comment = $_POST['comment'];
    
    // Validate input
    if (empty($username) || empty($rating) || empty($review_title) || empty($comment)) {
        echo "Please fill in all required fields!";
        return;
    }
    
    // Sanitize input
    $username = htmlspecialchars(stripslashes(trim($username)));
    $review_title = htmlspecialchars(stripslashes(trim($review_title)));
    $comment = htmlspecialchars(stripslashes(trim($comment)));
    
    // Insert into database
    $sql = "INSERT INTO reviews (username, rating, review_title, comment) 
            VALUES ('$username', '$rating', '$review_title', '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        echo "Thank you for submitting your review!";
        header("Location: thank_you.php");
        exit();
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Display reviews function
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<h4>" . $row['review_title'] . "</h4>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Submit new review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    submitReview();
}

// Display existing reviews
displayReviews();
?>


<?php
// Function to submit a new review
function submitReview($userId, $productId, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'your_database_name';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the SQL statement
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, submission_date) 
                VALUES (:userId, :productId, :rating, :comment, NOW())";
        
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        // Execute the query
        $stmt->execute();

        // Redirect back to product page after submission
        header("Location: product.php?id=$productId");
        exit();

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Function to display reviews for a specific product
function displayReviews($productId) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'your_database_name';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the SQL statement
        $sql = "SELECT r.*, u.username FROM reviews r 
                JOIN users u ON r.user_id = u.id 
                WHERE product_id = :productId 
                ORDER BY submission_date DESC";
        
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();

        // Fetch all reviews
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        // Display each review
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>Review by " . $review['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
            echo "<p>" . nl2br($review['comment']) . "</p>";
            echo "<small>Submitted on: " . date('j F Y, g:i a', strtotime($review['submission_date'])) . "</small>";
            echo "</div><br>";
        }

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
session_start();
require_once('review_functions.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = htmlspecialchars($_POST['comment'], ENT_QUOTES);

    submitReview($userId, $ productId, $rating, $comment);
}
?>


<?php
require_once('review_functions.php');
displayReviews($productId);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($user_name, $user_email, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if all fields are filled
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {
        throw new Exception("Please fill in all required fields");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, created_at)
            VALUES ('$user_name', '$user_email', $rating, '$comment', NOW())";
            
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        throw new Exception("Error submitting review: " . $conn->error);
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<strong>" . htmlspecialchars($row['user_name']) . "</strong>";
                    echo "<span>Rating: " . $row['rating'] . " stars</span>";
                    echo "<small>" . date('F j, Y', strtotime($row['created_at'])) . "</small>";
                echo "</div>";
                echo "<p class='review-comment'>" . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to delete a review
function delete_review($review_id, $user_email) {
    global $conn;
    
    // Sanitize inputs
    $review_id = intval($review_id);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    
    // Verify that the review exists and belongs to the user
    $sql = "SELECT * FROM reviews WHERE review_id = $review_id AND user_email = '$user_email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Delete the review
        $sql = "DELETE FROM reviews WHERE review_id = $review_id";
        if ($conn->query($sql) === TRUE) {
            return true;
        } else {
            throw new Exception("Error deleting review: " . $conn->error);
        }
    } else {
        throw new Exception("Invalid review or insufficient permissions");
    }
}

// Close database connection
$conn->close();
?>


<?php
include('review_functions.php');

try {
    submit_review($_POST['user_name'], $_POST['user_email'], $_POST['rating'], $_POST['comment']);
    echo "Thank you for submitting your review!";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php include('review_functions.php'); ?>
<div id="reviews">
    <?php display_reviews(); ?>
</div>


<?php
include('review_functions.php');

try {
    delete_review($_POST['review_id'], $_POST['user_email']);
    echo "Review deleted successfully!";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


function displayProductReviews($product_id, $current_user = null) {
    // Database connection details
    $db_host = "localhost";
    $db_username = "root";
    $db_password = "";
    $db_name = "reviews_db";

    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query with pagination support
    $limit = 5; // Default limit per page
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC LIMIT ?";
    
    // Prepare and bind parameters to prevent SQL injection
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "ii", $product_id, $limit);
        
        // Execute the statement
        mysqli_stmt_execute($stmt);
        
        // Get result set
        $result = mysqli_stmt_get_result($stmt);
        
        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo "<div class='review'>";
                echo "<div class='user-info'>";
                echo "By " . htmlspecialchars($row['username']) . "<br>";
                echo "</div>";
                
                // Display stars
                echo "<div class='rating'>";
                for ($i = 1; $i <= 5; $i++) {
                    if ($i <= $row['rating']) {
                        echo "<span class='star active'>★</span>";
                    } else {
                        echo "<span class='star'>★</span>";
                    }
                }
                echo "</div>";
                
                // Review text
                echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
                
                // Date and time
                $date = date('F j, Y g:i a', strtotime($row['review_date']));
                echo "<div class='date'>" . $date . "</div>";
                
                // Edit/delete buttons if current user is the reviewer
                if ($current_user && $current_user == $row['reviewer_id']) {
                    echo "<div class='review-actions'>";
                    echo "<a href='edit_review.php?review_id=" . $row['id'] . "'>Edit</a> | ";
                    echo "<a href='delete_review.php?review_id=" . $row['id'] . "'>Delete</a>";
                    echo "</div>";
                }
                
                echo "</div>";
            }
        } else {
            echo "<div class='no-reviews'>";
            echo "No reviews yet for this product.";
            echo "</div>";
        }

        // Free result set
        mysqli_free_result($result);
    }

    // Close statement and connection
    if ($stmt) {
        mysqli_stmt_close($stmt);
    }
    mysqli_close($conn);
}


displayProductReviews(123); // Display reviews for product ID 123
// Or with current user:
displayProductReviews(123, 456); // Where 456 is the current user's ID


<?php
function create_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Connect to database
    $mysqli = new mysqli($host, $username, $password, $database);

    // Check if there is an existing review from this user for the product
    $check_review_query = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    
    $stmt = $mysqli->prepare($check_review_query);
    $stmt->bind_param("ii", $user_id, $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update existing review
        $update_query = "UPDATE reviews SET rating = ?, comment = ? WHERE user_id = ? AND product_id = ?";
        
        $stmt = $mysqli->prepare($update_query);
        $stmt->bind_param("dssi", $rating, $comment, $user_id, $product_id);
    } else {
        // Insert new review
        $insert_query = "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)";
        
        $stmt = $mysqli->prepare($insert_query);
        $stmt->bind_param("iidi", $product_id, $user_id, $rating, $comment);
    }

    // Execute the statement
    if ($stmt->execute()) {
        return true;
    } else {
        echo "Error: " . $stmt->error;
        return false;
    }
}
?>


// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "Great product! Highly recommended.";

if (create_user_review($user_id, $product_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function insertReview($userId, $productId, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $reviewText = mysqli_real_escape_string($conn, htmlspecialchars($reviewText));
    
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating)
            VALUES ('$userId', '$productId', '$reviewText', '$rating')";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

function getReviews($productId, $page = 1, $itemsPerPage = 5, $conn) {
    // Calculate offset
    $offset = ($page - 1) * $itemsPerPage;
    
    $sql = "SELECT r.review_id, r.user_id, r.product_id, 
            r.review_text, r.rating, u.username,
            DATE_FORMAT(r.created_at, '%Y-%m-%d %H:%i') as created_at
            FROM reviews r
            JOIN users u ON r.user_id = u.user_id
            WHERE r.product_id = '$productId'
            ORDER BY r.created_at DESC
            LIMIT $itemsPerPage OFFSET $offset";
    
    $result = $conn->query($sql);
    $reviews = array();
    
    if ($result) {
        while ($row = $result->fetch_assoc()) {
            // Sanitize output
            $row['review_text'] = htmlspecialchars($row['review_text']);
            $row['username'] = htmlspecialchars($row['username']);
            
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        return false;
    }
}

function countReviews($productId, $conn) {
    $sql = "SELECT COUNT(*) as total_reviews FROM reviews WHERE product_id = '$productId'";
    
    $result = $conn->query($sql);
    
    if ($result) {
        $row = $result->fetch_assoc();
        return $row['total_reviews'];
    } else {
        return 0;
    }
}

// Example usage:

// Insert a new review
$userId = 1;
$productId = 1;
$reviewText = "This is an excellent product!";
$rating = 5;

if (insertReview($userId, $productId, $reviewText, $rating, $conn)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review: " . $conn->error;
}

// Get reviews for product
$page = 1;
$itemsPerPage = 5;
$reviews = getReviews($productId, $page, $itemsPerPage, $conn);

if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<strong>Rating:</strong> " . $review['rating'] . "/5<br>";
        echo "<strong>Author:</strong> " . $review['username'] . "<br>";
        echo "<strong>Review:</strong> " . $review['review_text'] . "<br>";
        echo "<strong>Date:</strong> " . $review['created_at'] . "<br>";
        echo "</div>";
    }
} else {
    echo "No reviews found.";
}

// Close database connection
$conn->close();
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "review_system";

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create review form
function create_review_form() {
    // Display the review form
    echo '<form action="submit_review.php" method="POST">';
    echo '<div>';
    echo '  <label for="name">Name:</label><br>';
    echo '  <input type="text" id="name" name="name" required><br>';
    echo '</div>';
    
    echo '<div>';
    echo '  <label for="email">Email:</label><br>';
    echo '  <input type="email" id="email" name="email" required><br>';
    echo '</div>';
    
    echo '<div>';
    echo '  <label for="review_text">Review:</label><br>';
    echo '  <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea><br>';
    echo '</div>';
    
    echo '<div>';
    echo '  <label for="rating">Rating:</label><br>';
    echo '  <select id="rating" name="rating">';
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value=\"$i\">$i stars</option>";
    }
    echo '</select><br>';
    echo '</div>';
    
    echo '<input type="submit" value="Submit Review">';
    echo '</form>';
}

// Function to submit review
function submit_review() {
    global $conn;
    
    // Sanitize inputs
    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $review_text = htmlspecialchars($_POST['review_text']);
    $rating = intval($_POST['rating']);
    
    // Check if all required fields are filled
    if (empty($name) || empty($email) || empty($review_text)) {
        die("Please fill in all required fields.");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, review_text, rating, timestamp, approved)"
           . "VALUES ('$name', '$email', '$review_text', $rating, NOW(), 0)";
    
    if ($conn->query($sql) === TRUE) {
        echo "Thank you for submitting your review!";
    } else {
        die("Error: " . $conn->error);
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Fetch all approved reviews from database
    $sql = "SELECT * FROM reviews WHERE approved=1 ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo '<div class="review">';
            echo '  <h3>' . $row['user_name'] . '</h3>';
            echo '  <p>Rating: ' . str_repeat('★', $row['rating']) . '</p>';
            echo '  <p>' . $row['review_text'] . '</p>';
            echo '  <small>Posted on: ' . $row['timestamp'] . '</small>';
            echo '</div>';
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
$conn->close();
?>


<?php
function display_reviews($product_id, $product_name, $show_form = true) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    // Display product name and description
    echo "<h2>Product Reviews: $product_name</h2>";

    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    } else {
        while ($row = mysqli_fetch_assoc($result)) {
            $user_id = $row['user_id'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $review_date = $row['review_date'];

            // Display user information
            echo "<div class='review'>";
            echo "<h3>User " . $user_id . "</h3>";
            
            // Display star rating
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";

            // Display review comment
            echo "<p>" . htmlspecialchars($comment) . "</p>";
            
            // Display date
            echo "<small>Reviewed on: " . $review_date . "</small>";
            echo "</div>";
        }
    }

    if ($show_form) {
        // Display review submission form
        echo "<h3>Write a Review</h3>";
        echo "<form action='" . $_SERVER['PHP_SELF'] . "' method='post'>";
        echo "<input type='hidden' name='product_id' value='$product_id'>";
        echo "<p>Your Name: <br><input type='text' name='user_name'></p>";
        echo "<p>Rating: <br>
                <select name='rating'>
                    <option value='5'>5 stars</option>
                    <option value='4'>4 stars</option>
                    <option value='3'>3 stars</option>
                    <option value='2'>2 stars</option>
                    <option value='1'>1 star</option>
                </select></p>";
        echo "<p>Review: <br><textarea name='comment' rows='5' cols='40'></textarea></p>";
        echo "<input type='submit' name='submit_review' value='Submit Review'>";
        echo "</form>";

        // Process submitted review
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $user_name = htmlspecialchars($_POST['user_name']);
            $rating = $_POST['rating'];
            $comment = htmlspecialchars($_POST['comment']);

            $sql = "INSERT INTO reviews (product_id, user_name, rating, comment, review_date) 
                    VALUES ('$product_id', '$user_name', '$rating', '$comment', NOW())";

            if (!mysqli_query($conn, $sql)) {
                echo "Error: " . mysqli_error($conn);
            } else {
                echo "<div class='success'>Thank you for your review!</div>";
                // Refresh the page to show the new review
                header("Location: $_SERVER[PHP_SELF]");
                exit();
            }
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>


display_reviews(1, "Product Name", true); // Replace 1 with your product ID


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function addReview($userId, $reviewText, $rating, $conn) {
    // Validate input
    if (empty($reviewText)) {
        return "Review text cannot be empty!";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // SQL statement to insert review
    $sql = "INSERT INTO reviews (user_id, review_text, rating)
            VALUES (?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    
    if ($stmt === false) {
        return "Database error: " . mysqli_error($conn);
    }
    
    // Bind parameters
    mysqli_stmt_bind_param($stmt, "iss", $userId, $reviewText, $rating);
    
    // Execute query
    if (!mysqli_stmt_execute($stmt)) {
        return "Error adding review: " . mysqli_stmt_error($stmt);
    }
    
    // Get all reviews for user
    $reviewsSql = "SELECT * FROM reviews WHERE user_id = ?";
    $reviewsStmt = mysqli_prepare($conn, $reviewsSql);
    if ($reviewsStmt === false) {
        return "Database error: " . mysqli_error($conn);
    }
    
    mysqli_stmt_bind_param($reviewsStmt, "i", $userId);
    mysqli_stmt_execute($reviewsStmt);
    $result = mysqli_stmt_get_result($reviewsStmt);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'id' => $row['id'],
            'user_id' => $row['user_id'],
            'review_text' => $row['review_text'],
            'rating' => $row['rating'],
            'created_at' => $row['created_at']
        );
    }
    
    return $reviews;
}

// Example usage:
$userId = 1;
$reviewText = "This is a great product!";
$rating = 5;

$reviews = addReview($userId, $reviewText, $rating, $conn);

if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "Review ID: " . $review['id'] . "<br>";
        echo "User ID: " . $review['user_id'] . "<br>";
        echo "Review Text: " . $review['review_text'] . "<br>";
        echo "Rating: " . $review['rating'] . "/5 <br><br>";
    }
} else {
    echo $reviews;
}

// Close database connection
mysqli_close($conn);
?>


<?php
function submit_review($review_id, $user_id, $rating, $comment, $timestamp = null) {
    // Validate inputs
    if (empty(trim($review_id)) || empty(trim($user_id))) {
        return "Error: Review ID and User ID are required.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }

    // Sanitize inputs
    $review_id = htmlspecialchars(trim($review_id));
    $user_id = htmlspecialchars(trim($user_id));
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));

    if (!$timestamp) {
        $timestamp = time();
    }

    // Database connection (assuming you have a database connection)
    try {
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if review ID exists
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE id = ?");
        $stmt->execute([$review_id]);
        
        if ($stmt->rowCount() == 0) {
            return "Error: Review not found.";
        }

        // Update the review
        $sql = "UPDATE reviews SET 
                    user_id = :user_id,
                    rating = :rating,
                    comment = :comment,
                    timestamp = :timestamp
                WHERE id = :review_id";

        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':review_id', $review_id);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        $stmt->bindParam(':timestamp', $timestamp);

        if ($stmt->execute()) {
            return "Review updated successfully.";
        } else {
            return "Error: Unable to update review.";
        }

    } catch(PDOException $e) {
        return "Database error: " . $e->getMessage();
    }
}

// Example usage:
$review_id = 123;
$user_id = 456;
$rating = 4;
$comment = "This is a great product!";
$result = submit_review($review_id, $user_id, $rating, $comment);
echo $result;

?>


<?php
class ReviewSystem {
    private $reviews = array();

    public function __construct($existingReviews = array()) {
        if (!empty($existingReviews)) {
            $this->reviews = $existingReviews;
        }
    }

    // Add a new review
    public function addReview($userId, $rating, $comment) {
        if ($this->isValidRating($rating) && $this->isValidComment($comment)) {
            $review = array(
                'user_id' => $userId,
                'rating' => $rating,
                'comment' => $comment,
                'timestamp' => time()
            );
            array_push($this->reviews, $review);
            return true;
        }
        return false;
    }

    // Validate rating (1-5 stars)
    private function isValidRating($rating) {
        return is_numeric($rating) && $rating >= 1 && $rating <= 5;
    }

    // Validate comment
    private function isValidComment($comment) {
        if (!is_string($comment)) {
            return false;
        }
        if (strlen(trim($comment)) < 5 || strlen(trim($comment)) > 500) { 
            return false; 
        }
        return true;
    }

    // Get average rating
    public function getAverageRating() {
        $total = array_sum(array_column($this->reviews, 'rating'));
        $count = count($this->reviews);
        if ($count == 0) {
            return 0;
        }
        return round($total / $count, 1); 
    }

    // Get all reviews
    public function getAllReviews() {
        return $this->reviews;
    }

    // Display reviews on webpage
    public static function displayReviews($reviewSystem) {
        $average = $reviewSystem->getAverageRating();
        $all_reviews = $reviewSystem->getAllReviews();

        echo "<div class='reviews-container'>";
            echo "<h3>Reviews (Average: {$average}/5)</h3>";
            
            foreach ($all_reviews as $review) {
                echo "<div class='review'>";
                    echo "<div class='user-info'>";
                        echo "User #{$review['user_id']}<br />";
                        echo self::renderStars($review['rating']);
                    echo "</div>";
                    echo "<p class='comment'>{$review['comment']}</p>";
                    echo "<small class='timestamp'>" . date('F j, Y g:i a', $review['timestamp']) . "</small>";
                echo "</div>";
            }
        echo "</div>";
    }

    // Render stars based on rating
    private static function renderStars($rating) {
        $stars = floor($rating);
        $output = '<span class="star">';
        
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $stars) {
                $output .= '★'; 
            } else {
                $output .= '☆';
            }
        }
        
        return $output . '</span>';
    }
}

// Example usage:
$reviews = array(
    array(
        'user_id' => 1,
        'rating' => 4,
        'comment' => "Great product, very satisfied!",
        'timestamp' => time() - 3600
    ),
    array(
        'user_id' => 2,
        'rating' => 5,
        'comment' => "Excellent service and quality!",
        'timestamp' => time() - 7200
    )
);

$reviewSystem = new ReviewSystem($reviews);
ReviewSystem::displayReviews($reviewSystem);
?>


<?php
// Database connection
$host = "localhost";
$user = "username";
$password = "password";
$dbname = "reviews_db";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $username = $row['username'];
            $date = date('d/m/Y', strtotime($row['timestamp']));

            // Display review
            echo "<div class='review'>";
            echo "<h4>$username</h4>";
            echo "<p>Rating: ";
            for ($i = 1; $i <= $rating; $i++) {
                echo "★";
            }
            echo "</p>";
            echo "<p>Comment: $comment</p>";
            echo "<small class='date'>$date</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Function to handle review submission
function submitReview($username, $comment, $rating) {
    global $conn;
    
    // Validate input
    if (empty($comment)) {
        return "Please write a comment!";
    }

    // SQL query to insert new review
    $sql = "INSERT INTO reviews (username, comment, rating, timestamp)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
            
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $comment, $rating);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error: " . $stmt->error;
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $comment = htmlspecialchars($_POST['comment']);
    $rating = $_POST['rating'];

    // Submit review and get result
    $result = submitReview($username, $comment, $rating);

    if ($result === true) {
        echo "<div class='success'>Thank you for your review!</div>";
        header("refresh: 2; url=".$_SERVER["PHP_SELF"]."");
    } else {
        echo "<div class='error'>".$result."</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review-form {
            margin-bottom: 30px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .stars {
            display: flex;
            gap: 5px;
        }

        .star {
            color: gold;
            font-size: 24px;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .date {
            color: #666;
            font-size: 0.8em;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <input type="text" name="username" placeholder="Your Name" required><br><br>
            <textarea name="comment" placeholder="Write your review..." rows="5" cols="50" required></textarea><br><br>
            <div class="stars">
                <input type="radio" id="5" name="rating" value="5">
                <label for="5" class="star">★</label>
                
                <input type="radio" id="4" name="rating" value="4">
                <label for="4" class="star">★</label>
                
                <input type="radio" id="3" name="rating" value="3">
                <label for="3" class="star">★</label>
                
                <input type="radio" id="2" name="rating" value="2">
                <label for="2" class="star">★</label>
                
                <input type="radio" id="1" name="rating" value="1" checked>
                <label for="1" class="star">★</label>
            </div><br><br>
            <input type="submit" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <?php displayReviews(); ?>

    <!-- Close database connection -->
    <?php $conn->close(); ?>
</body>
</html>


<?php
// Function to create or display reviews for a product/service
function user_review($product_id) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Get all reviews for the product
    $reviews_query = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $reviews_query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    // Check if there are any reviews
    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        
        // Calculate average rating
        $average_rating_query = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
        $avg_stmt = mysqli_prepare($conn, $average_rating_query);
        mysqli_stmt_bind_param($avg_stmt, "i", $product_id);
        mysqli_stmt_execute($avg_stmt);
        $avg_result = mysqli_stmt_get_result($avg_stmt);
        $row = mysqli_fetch_assoc($avg_result);
        $average = number_format((float)$row['average'], 1, '.', '');
        
        echo "<div class='average-rating'>";
        echo "Average Rating: $average/5";
        echo "</div>";
        
        // Display each review
        while ($review = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Reviewer: " . htmlspecialchars($review['username']) . "</h3>";
            echo "<p>Rating: ";
            for ($i = 0; $i < $review['rating']; $i++) {
                echo "<span class='star'>★</span>";
            }
            echo "</p>";
            echo "<p>Review: " . htmlspecialchars($review['comment']) . "</p>";
            echo "<p>Date: " . date("F j, Y", strtotime($review['review_date'])) . "</p>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "No reviews yet. Be the first to review this product!";
    }
    
    // Close database connection
    mysqli_close($conn);
}
?>


<?php
$product_id = 1; // Replace with actual product ID
user_review($product_id);
?>


// Function to submit a new review
function submit_review($product_id, $username, $rating, $comment) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Insert new review into database
    $insert_query = "INSERT INTO reviews (product_id, username, rating, comment, review_date) 
                    VALUES (?, ?, ?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $insert_query);
    mysqli_stmt_bind_param($stmt, "isii", $product_id, $username, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}
?>


// Function to delete a review
function delete_review($review_id) {
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    $delete_query = "DELETE FROM reviews WHERE review_id = ?";
    $stmt = mysqli_prepare($conn, $delete_query);
    mysqli_stmt_bind_param($stmt, "i", $review_id);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Review deleted successfully!";
    } else {
        echo "Error deleting review: " . mysqli_error($conn);
    }
    
    mysqli_close($conn);
}
?>


<?php
// This script handles both displaying and submitting reviews.

// Initialize variables to hold messages and reviews
$messages = array();
$reviews = array();

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        array_push($messages, "Please fill in all required fields.");
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        array_push($messages, "Please enter a valid email address.");
    } elseif ($rating < 1 || $rating > 5) {
        array_push($messages, "Rating must be between 1 and 5 stars.");
    } else {
        // Store the review
        $review = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );

        // Save review to a file (you can use a database in production)
        $filename = 'reviews.txt';
        if (file_exists($filename)) {
            $content = file_get_contents($filename);
            $reviewsData = json_decode($content, true);
        } else {
            $reviewsData = array();
        }

        // Add new review
        array_unshift($reviewsData, $review);

        // Write back to the file
        if (file_put_contents($filename, json_encode($reviewsData))) {
            array_push($messages, "Thank you for your review!");
        } else {
            array_push($messages, "An error occurred while saving your review.");
        }
    }
}

// Read reviews from file
if (file_exists('reviews.txt')) {
    $content = file_get_contents('reviews.txt');
    $reviewsData = json_decode($content, true);
    
    if (!empty($reviewsData)) {
        $reviews = $reviewsData;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .review-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .message {
            margin-bottom: 20px;
            padding: 10px;
            border-radius: 5px;
        }

        .success {
            background-color: #dff0d8;
            color: #3c763d;
        }

        .error {
            background-color: #f2dede;
            color: #a94442;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }

        .star {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <?php
    foreach ($messages as $message) {
        if (strpos($message, 'Thank you') === 0) {
            echo "<div class='message success'>$message</div>";
        } else {
            echo "<div class='message error'>$message</div>";
        }
    }
    ?>

    <h1>Product Review System</h1>

    <!-- Review Form -->
    <form class="review-form" method="POST">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="rating-stars">
            <label>Rating:</label><br>
            <?php
            for ($i = 1; $i <= 5; $i++) {
                echo "<input type='radio' name='rating' value='$i'> <span class='star'>★</span>";
            }
            ?>
        </div>

        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows='4' required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    <?php
    foreach ($reviews as $review) {
        echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 10px;'>";
        echo "<p><strong>" . $review['name'] . "</strong> - " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p><em>" . $review['comment'] . "</em></p>";
        echo "<small>Posted on: " . $review['date'] . "</small>";
        echo "</div>";
    }
    ?>
</body>
</html>


<?php
function create_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Validate inputs
        if (!is_numeric($user_id) || $user_id <= 0) {
            throw new Exception("Invalid user ID");
        }

        if (!is_numeric($product_id) || $product_id <= 0) {
            throw new Exception("Invalid product ID");
        }

        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Optional comment
        if ($comment !== null && strlen($comment) > 500) {
            throw new Exception("Comment is too long. Maximum length is 500 characters.");
        }

        // Prepare the SQL statement with placeholders for parameters
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = $conn->prepare($sql);

        if (!$stmt) {
            throw new Exception("Error preparing statement: " . $conn->error);
        }

        // Bind parameters to the prepared statement
        $stmt->bind_param('iids', $user_id, $product_id, $rating, $comment);

        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Error executing statement: " . $stmt->error);
        }

        echo "Review created successfully!";
        return true;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close the connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "This product is excellent!";

create_user_review($user_id, $product_id, $rating, $comment);
?>


<?php
// Connect to the database
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user reviews
function user_review() {
    global $conn;

    // Check if the form has been submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate input data
        $user_id = sanitize_string($_POST['user_id']);
        $product_id = sanitize_string($_POST['product_id']);
        $rating = sanitize_string($_POST['rating']);
        $review_title = sanitize_string($_POST['review_title']);
        $review_description = sanitize_string($_POST['review_description']);

        // Check if all required fields are filled
        if ($user_id == "" || $product_id == "" || $rating == "") {
            echo "Please fill in all required fields.";
            return;
        }

        // Store the review in the database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, review_title, review_description, review_date) 
                VALUES ('$user_id', '$product_id', '$rating', '$review_title', '$review_description', NOW())";

        if (!mysqli_query($conn, $sql)) {
            die("Error: " . mysqli_error($conn));
        }

        echo "Thank you for submitting your review!";
    }

    // Display existing reviews
    $product_id = isset($_GET['product_id']) ? sanitize_string($_GET['product_id']) : '';
    
    if ($product_id != '') {
        $sql = "SELECT * FROM reviews WHERE product_id = '$product_id'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            // Display average rating
            $avg_rating_sql = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = '$product_id'";
            $avg_rating_result = mysqli_query($conn, $avg_rating_sql);
            $row = mysqli_fetch_assoc($avg_rating_result);
            $average_rating = number_format($row['avg_rating'], 1);

            echo "<h3>Reviews for Product ID: $product_id</h3>";
            echo "<p>Average Rating: $average_rating/5</p>";

            while ($review_row = mysqli_fetch_assoc($result)) {
                display_review($review_row);
            }
        } else {
            echo "No reviews found for this product.";
        }
    }

    // Display review submission form
    display_review_form();
}

// Helper function to display a single review
function display_review($review) {
    global $conn;
    $user_id = $review['user_id'];
    
    // Get user information (assuming you have a users table)
    $user_sql = "SELECT username FROM users WHERE id = '$user_id'";
    $user_result = mysqli_query($conn, $user_sql);
    $user_row = mysqli_fetch_assoc($user_result);

    echo "<div class='review'>";
    echo "<h4>Review by: " . $user_row['username'] . "</h4>";
    echo "<p><strong>Rating:</strong> " . get_star_rating($review['rating']) . "</p>";
    echo "<p><strong>Title:</strong> " . $review['review_title'] . "</p>";
    echo "<p><strong>Description:</strong> " . $review['review_description'] . "</p>";
    echo "<p><em>Posted on: " . $review['review_date'] . "</em></p>";
    echo "</div>";
}

// Helper function to display review submission form
function display_review_form() {
    global $product_id;
    $product_id = isset($_GET['product_id']) ? sanitize_string($_GET['product_id']) : '';
    
    if ($product_id != '') {
        echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<input type='hidden' name='product_id' value='$product_id'>";
        echo "<div>";
            echo "<label for='user_id'>User ID:</label>";
            echo "<input type='text' id='user_id' name='user_id'>";
        echo "</div>";
        echo "<div>";
            echo "<label for='rating'>Rating (1-5):</label>";
            echo "<input type='number' id='rating' name='rating' min='1' max='5'>";
        echo "</div>";
        echo "<div>";
            echo "<label for='review_title'>Review Title:</label>";
            echo "<input type='text' id='review_title' name='review_title'>";
        echo "</div>";
        echo "<div>";
            echo "<label for='review_description'>Review Description:</label>";
            echo "<textarea id='review_description' name='review_description'></textarea>";
        echo "</div>";
        echo "<button type='submit' name='submit_review'>Submit Review</button>";
        echo "</form>";
    }
}

// Helper function to get star rating
function get_star_rating($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★ ";
        } else {
            $stars .= "☆ ";
        }
    }
    return $stars;
}

// Helper function to sanitize input strings
function sanitize_string($string) {
    global $conn;
    $string = trim($string);
    $string = mysqli_real_escape_string($conn, $string);
    return $string;
}

// Helper function to sanitize integer inputs
function sanitize_integer($integer) {
    global $conn;
    $integer = intval($integer);
    $integer = mysqli_real_escape_string($conn, $integer);
    return $integer;
}

// Call the user_review function
user_review();

// Close database connection
mysqli_close($conn);
?>


<?php
function submitUserReview($review, $rating) {
    // Validate inputs
    if (!is_string($review) || !ctype_digit((string)$rating)) {
        return false;
    }
    $rating = (int)$rating;
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Database connection details
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'your_database';

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
    if (!$conn) {
        return false;
    }

    // Prepare SQL statement
    $username = $_SESSION['username']; // Ensure user is logged in and session exists
    $date = date('Y-m-d H:i:s');

    $stmt = mysqli_prepare($conn, "INSERT INTO user_reviews (username, review_text, rating, review_date) VALUES (?, ?, ?, ?)");
    if (!$stmt) {
        mysqli_close($conn);
        return false;
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, 'ssii', $username, $review, $rating, $date);

    // Execute statement
    if (!mysqli_stmt_execute($stmt)) {
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return false;
    }

    // Close connections
    mysqli_stmt_close($stmt);
    mysqli_close($conn);

    return true;
}
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'your_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Sanitize the input
    $productId = mysqli_real_escape_string($conn, $productId);
    $userId = mysqli_real_escape_string($conn, $userId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    if ($rating < 1 || $rating > 5) {
        die("Invalid rating. Please choose a rating between 1 and 5.");
    }

    // Insert the review into the database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment)
            VALUES ('$productId', '$userId', '$rating', '$comment')";

    if (!mysqli_query($conn, $sql)) {
        die("Error submitting review: " . mysqli_error($conn));
    }

    echo "Review submitted successfully!";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $userId = $_SESSION['user_id']; // Assuming you have a session for the user
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    submitReview($productId, $userId, $rating, $comment, $conn);
}

// Close the database connection
mysqli_close($conn);
?>


<?php
function displayReviews($productId, $conn) {
    // Retrieve reviews for a specific product
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
                echo "<h4>Rating: " . str_repeat("★", $row['rating']) . "</h4>";
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Submitted by User ID: " . $row['user_id'] . " on " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage:
displayReviews($productId, $conn);

// Close the database connection
mysqli_close($conn);
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_NAME', 'review_system');
define('DB_USER', 'root');
define('DB_PASS', '');

class ReviewSystem {
    private $pdo;

    public function __construct() {
        try {
            $this->pdo = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
            $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }

    // Add a new review
    public function addReview($user_id, $product_id, $rating, $comment) {
        try {
            // Check if the user has already reviewed this product
            $stmt = $this->pdo->prepare("SELECT id FROM reviews WHERE user_id = ? AND product_id = ?");
            $stmt->execute([$user_id, $product_id]);
            
            if ($stmt->rowCount() > 0) {
                return false; // User already reviewed this product
            }

            // Insert the new review
            $stmt = $this->pdo->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
            $stmt->execute([$user_id, $product_id, $rating, $comment]);

            return true;
        } catch (PDOException $e) {
            die("Error adding review: " . $e->getMessage());
        }
    }

    // Display reviews for a product
    public function displayReviews($product_id) {
        try {
            $stmt = $this->pdo->prepare("SELECT r.id, u.username, r.rating, r.comment, r.review_date FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = ? ORDER BY r.review_date DESC");
            $stmt->execute([$product_id]);

            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

            if (empty($reviews)) {
                echo "No reviews yet.";
                return;
            }

            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>By " . htmlspecialchars($review['username']) . "</h3>";
                echo "<p>Rating: " . $this->getStars($review['rating']) . "</p>";
                echo "<p>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
                echo "<small>Posted on: " . date('jS M Y', strtotime($review['review_date'])) . "</small>";
                echo "</div><hr>";
            }
        } catch (PDOException $e) {
            die("Error displaying reviews: " . $e->getMessage());
        }
    }

    // Display average rating for a product
    public function displayAverageRating($product_id) {
        try {
            $stmt = $this->pdo->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = ?");
            $stmt->execute([$product_id]);

            $result = $stmt->fetch(PDO::FETCH_ASSOC);
            $average = round((float)$result['average'], 1);

            if ($average === 0 && $this->getReviewCount($product_id) == 0) {
                echo "No ratings yet.";
                return;
            }

            echo "Average Rating: " . $average . "/5 (" . $this->getStars($average, true) . ")";
        } catch (PDOException $e) {
            die("Error displaying average rating: " . $e->getMessage());
        }
    }

    // Helper function to display stars
    private function getStars($rating, $partial = false) {
        if ($partial) {
            return str_repeat('★', (int)$rating) . (($rating - (int)$rating > 0.5) ? '½' : '');
        } else {
            return str_repeat('★', $rating);
        }
    }

    // Helper function to get review count
    private function getReviewCount($product_id) {
        try {
            $stmt = $this->pdo->prepare("SELECT COUNT(*) as total FROM reviews WHERE product_id = ?");
            $stmt->execute([$product_id]);
            return (int)$stmt->fetch(PDO::FETCH_ASSOC)['total'];
        } catch (PDOException $e) {
            die("Error getting review count: " . $e->getMessage());
        }
    }
}

// Usage example:
$reviewSystem = new ReviewSystem();

// Add a new review
$user_id = 1; // Replace with actual user ID
$product_id = 1; // Replace with actual product ID
$rating = 4;
$comment = "Great product!";

if ($reviewSystem->addReview($user_id, $product_id, $rating, $comment)) {
    echo "Review added successfully!";
} else {
    echo "You have already reviewed this product.";
}

// Display reviews for product ID 1
echo "<h2>Product Reviews:</h2>";
$reviewSystem->displayReviews(1);

// Display average rating for product ID 1
echo "<h3>Average Rating:</h3>";
$reviewSystem->displayAverageRating(1);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    /**
     * Add a new review
     *
     * @param int $user_id The ID of the user writing the review
     * @param int $product_id The ID of the product being reviewed
     * @param int $rating The rating (1-5 stars)
     * @param string $comment The review comment
     * @return array|string Success message or error message
     */
    function add_review($user_id, $product_id, $rating, $comment) {
        global $conn;
        
        // Validate input
        if (!isset($user_id, $product_id, $rating, $comment)) {
            return "Missing parameters";
        }
        
        if (!is_numeric($user_id) || !is_numeric($product_id) || !is_numeric($rating)) {
            return "Invalid numeric value";
        }
        
        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5";
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment)
                               VALUES (:user_id, :product_id, :rating, :comment)");
                               
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        // Execute the query
        if ($stmt->execute()) {
            return "Review added successfully";
        } else {
            return "Error adding review";
        }
    }

    /**
     * Get reviews for a product
     *
     * @param int $product_id The ID of the product to get reviews for
     * @return array|bool An array of reviews or false on failure
     */
    function get_reviews($product_id) {
        global $conn;
        
        // Prepare SQL statement
        $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r 
                               LEFT JOIN users u ON r.user_id = u.id 
                               WHERE product_id = :product_id");
                               
        $stmt->bindParam(':product_id', $product_id);
        
        // Execute the query and fetch results
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * Update a review
     *
     * @param int $review_id The ID of the review to update
     * @param int $rating The new rating (1-5 stars)
     * @param string $comment The new comment
     * @return array|string Success message or error message
     */
    function update_review($review_id, $rating, $comment) {
        global $conn;
        
        // Validate input
        if (!isset($review_id, $rating, $comment)) {
            return "Missing parameters";
        }
        
        if (!is_numeric($review_id) || !is_numeric($rating)) {
            return "Invalid numeric value";
        }
        
        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5";
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("UPDATE reviews 
                               SET rating = :rating, comment = :comment 
                               WHERE id = :review_id");
                               
        $stmt->bindParam(':review_id', $review_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        // Execute the query
        if ($stmt->execute()) {
            return "Review updated successfully";
        } else {
            return "Error updating review";
        }
    }

    /**
     * Delete a review
     *
     * @param int $review_id The ID of the review to delete
     * @return array|string Success message or error message
     */
    function delete_review($review_id) {
        global $conn;
        
        // Validate input
        if (!isset($review_id)) {
            return "Missing parameters";
        }
        
        if (!is_numeric($review_id)) {
            return "Invalid numeric value";
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id = :review_id");
        $stmt->bindParam(':review_id', $review_id);
        
        // Execute the query
        if ($stmt->execute()) {
            return "Review deleted successfully";
        } else {
            return "Error deleting review";
        }
    }

} catch(PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = add_review(1, 2, 4, "Great product!");
    echo $result;
}

// Get all reviews for product ID 2
$reviews = get_reviews(2);
print_r($reviews);

// Update a review with ID 5
$result = update_review(5, 5, "Excellent quality!");
echo $result;

// Delete review with ID 3
$result = delete_review(3);
echo $result;
?>


<?php
// Function to handle user reviews (add or edit)
function handleUserReview($username, $rating, $comment, $review_id = null) {
    // Check if the user is authenticated
    if (!is_user_authenticated()) {
        return array('error' => 'You must be logged in to post a review.');
    }

    // Validate inputs
    if (empty($username) || !is_string($username)) {
        return array('error' => 'Username is required and must be a string.');
    }

    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return array('error' => 'Rating must be between 1 and 5.');
    }
    $rating = (int)$rating;

    if (!is_string($comment)) {
        return array('error' => 'Comment must be a string.');
    }

    // Connect to the database
    try {
        $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        if ($review_id === null) {
            // Insert a new review
            $sql = "INSERT INTO reviews (username, rating, comment, created_at) VALUES (?, ?, ?, NOW())";
            $stmt = $pdo->prepare($sql);
            $stmt->execute(array($username, $rating, $comment));
        } else {
            // Update an existing review
            $sql = "UPDATE reviews SET username=?, rating=?, comment=? WHERE review_id=?";
            $stmt = $pdo->prepare($sql);
            $stmt->execute(array($username, $rating, $comment, $review_id));
        }

        return array('success' => true);

    } catch(PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return array('error' => 'An error occurred while saving your review.');
    }
}

// Example usage:
// Adding a new review
$result = handleUserReview('john_doe', 4, 'Great product!');
if ($result['success']) {
    echo 'Review added successfully!';
} else {
    echo $result['error'];
}

// Editing an existing review with ID 123
$result = handleUserReview('john_doe', 5, 'Best product ever!', 123);
if ($result['success']) {
    echo 'Review updated successfully!';
} else {
    echo $result['error'];
}
?>


<?php
function submit_review($user_id, $review_text, $rating, $product_service_id, $conn) {
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $rating = (int)$rating;
    $product_service_id = (int)$product_service_id;

    // Validate inputs
    if ($rating < 1 || $rating > 5) {
        return ['error' => 'Rating must be between 1 and 5'];
    }

    if (empty($review_text)) {
        return ['error' => 'Review text cannot be empty'];
    }

    if (empty($user_id)) {
        return ['error' => 'User ID is required'];
    }

    // Prepare SQL query
    $sql = "INSERT INTO reviews (
        user_id, 
        review_text, 
        rating, 
        product_service_id,
        created_at
    ) VALUES (
        '$user_id',
        '$review_text',
        '$rating',
        '$product_service_id',
        NOW()
    )";

    // Check connection and execute query
    if (!$conn || !is_object($conn)) {
        return ['error' => 'Database connection not established'];
    }

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        return ['error' => 'Error submitting review: ' . mysqli_error($conn)];
    }

    // Return success with review ID
    $review_id = mysqli_insert_id($conn);
    return [
        'success' => true,
        'message' => 'Review submitted successfully',
        'review_id' => $review_id
    ];
}

// Example usage:
// Assuming you have a database connection established

$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (mysqli_connect_errno()) {
    die("Connection failed: " . mysqli_connect_error());
}

$user_id = 123;
$review_text = "This product is excellent!";
$rating = 5;
$product_service_id = 456;

$result = submit_review($user_id, $review_text, $rating, $product_service_id, $conn);

if ($result['success']) {
    echo "Review submitted successfully. Review ID: " . $result['review_id'];
} else {
    echo "Error: " . $result['error'];
}

mysqli_close($conn);
?>


define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'review_system');


function handle_review($product_id, $user_id, $rating, $comment, $update = false) {
    try {
        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        if (!$conn) {
            throw new Exception('Connection failed: ' . mysqli_error($conn));
        }

        if ($update) {
            // Update existing review
            $stmt = $conn->prepare("UPDATE reviews SET rating=?, comment=? WHERE user_id=? AND product_id=?");
            $stmt->bind_param('iisi', $rating, $comment, $user_id, $product_id);
        } else {
            // Insert new review
            $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, submission_date) VALUES (?, ?, ?, ?, NOW())");
            $stmt->bind_param('iiis', $user_id, $product_id, $rating, $comment);
        }

        if (!$stmt) {
            throw new Exception('Prepare failed: ' . $conn->error);
        }

        // Execute the statement
        $result = $stmt->execute();
        if ($result === false) {
            throw new Exception('Execute failed: ' . $stmt->error);
        }

        // Close connections
        $stmt->close();
        mysqli_close($conn);

        return true;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}


// Assuming these variables are set from your form or session
$product_id = 123;
$user_id = 456;
$rating = 5;
$comment = "Great product!";

// Check for existing review (example query)
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
$query = "SELECT * FROM reviews WHERE user_id=$user_id AND product_id=$product_id";
$result = mysqli_query($conn, $query);

if ($result && mysqli_num_rows($result) > 0) {
    // Update existing review
    handle_review($product_id, $user_id, $rating, $comment, true);
} else {
    // Insert new review
    handle_review($product_id, $user_id, $rating, $comment);
}
mysqli_close($conn);


<?php
// File: review.php

// Function to handle adding and displaying reviews
function user_reviews() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars($_POST['review_name']);
        $comment = htmlspecialchars($_POST['review_comment']);

        // Validate input
        if (empty($name) || empty($comment)) {
            echo "<p class='error'>Please fill in both name and comment!</p>";
        } else {
            // Load existing reviews from file
            $reviews_file = "reviews.json";
            $reviews_data = array();

            if (file_exists($reviews_file)) {
                $json_data = file_get_contents($reviews_file);
                $reviews_data = json_decode($json_data, true);
            }

            // Add new review with timestamp
            $new_review = array(
                'name' => $name,
                'comment' => $comment,
                'date' => date('Y-m-d H:i:s')
            );

            // Append to reviews data
            $reviews_data[] = $new_review;

            // Save back to file
            $json_output = json_encode($reviews_data, JSON_PRETTY_PRINT);
            file_put_contents($reviews_file, $json_output);

            // Redirect back to the same page to avoid resubmission
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        }
    }

    // Function to display reviews
    function display_reviews() {
        $reviews_file = "reviews.json";
        $output = '';

        if (file_exists($reviews_file)) {
            $json_data = file_get_contents($reviews_file);
            $reviews = json_decode($json_data, true);

            if (!empty($reviews)) {
                foreach ($reviews as $review) {
                    $output .= "<div class='review'>";
                    $output .= "<h3>" . $review['name'] . "</h3>";
                    $output .= "<p>" . $review['comment'] . "</p>";
                    $output .= "<small>Posted on: " . $review['date'] . "</small>";
                    $output .= "</div>";
                }
            } else {
                $output .= "<p>No reviews submitted yet!</p>";
            }
        } else {
            $output .= "<p>No reviews submitted yet!</p>";
        }

        return $output;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: white;
            border-radius: 5px;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="review-container">
        <!-- Review Form -->
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <div class="review-form">
                <h2>Submit Your Review:</h2>
                <input type="text" name="review_name" placeholder="Your Name" required><br><br>
                <textarea name="review_comment" placeholder="Write your review here..." rows="5" required></textarea><br><br>
                <button type="submit">Submit Review</button>
            </div>
        </form>

        <!-- Display Reviews -->
        <?php
        user_reviews();
        echo display_reviews();
        ?>
    </div>
</body>
</html>


<?php
// Function to create a user review
function submit_review($user_id, $product_id, $rating, $comment) {
    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Connect to database
    include 'config.php'; // Include your database configuration

    // Insert review into database
    $stmt = mysqli_prepare($conn, "
        INSERT INTO reviews (user_id, product_id, rating, comment)
        VALUES (?, ?, ?, ?)
    ");
    
    if ($stmt === false) {
        return "Database error: " . mysqli_error($conn);
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);

    // Execute statement
    if (mysqli_stmt_execute($stmt)) {
        // Update product average rating
        $result = mysqli_query($conn, "
            SELECT 
                COUNT(rating) AS total_ratings,
                AVG(rating) AS avg_rating
            FROM reviews
            WHERE product_id = $product_id
        ");
        
        $row = mysqli_fetch_assoc($result);
        $avg_rating = round($row['avg_rating'], 2);

        // Update product table with new average rating
        mysqli_query($conn, "
            UPDATE products 
            SET average_rating = $avg_rating 
            WHERE id = $product_id
        ");

        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_stmt_error($stmt);
    }

    // Close statement and connection
    mysqli_stmt_close($stmt);
    mysqli_close($conn);
}

// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "This is a great product!";

$result = submit_review($user_id, $product_id, $rating, $comment);

echo $result;

?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "reviews_db";

    // Create connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate input data
    if (!isset($user_id, $product_id, $rating, $comment)) {
        return false;
    }

    // Sanitize and validate inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }

    // Check if the user has already reviewed this product
    $check_query = "SELECT id FROM reviews WHERE user_id = '$user_id' AND product_id = '$product_id'";
    $result = $conn->query($check_query);

    if ($result->num_rows > 0) {
        return false; // User already reviewed this product
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
    VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        return true; // Review submitted successfully
    } else {
        return false; // Error submitting review
    }

    $conn->close();
}

// Example usage:
$user_id = 1;
$product_id = 123;
$rating = 5;
$comment = "Great product! Highly recommended.";

if (submit_review($user_id, $product_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start for CSRF token
session_start();

// Generate CSRF token if not exists
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
        }
        .review-card {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<?php
// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate CSRF token
    if (empty($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        die("Invalid request");
    }

    $errors = [];
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = trim($_POST['comment']);

    // Validate input
    if (empty($name)) {
        $errors[] = "Name is required";
    } elseif (!preg_match("/^[a-zA-Z ]+$/", $name)) {
        $errors[] = "Invalid name format. Only letters and spaces are allowed.";
    }

    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    if ($rating < 1 || $rating > 5) {
        $errors[] = "Rating must be between 1 and 5";
    }

    if (isset($comment) && strlen($comment) > 1000) {
        $errors[] = "Comment exceeds maximum length of 1000 characters";
    }

    // If no errors
    if (empty($errors)) {
        // Sanitize inputs
        $name = htmlspecialchars($name, ENT_QUOTES);
        $email = htmlspecialchars($email, ENT_QUOTES);
        $comment = htmlspecialchars($comment, ENT_QUOTES);

        // Escape special characters for database insertion
        $name_db = mysqli_real_escape_string($conn, $name);
        $email_db = mysqli_real_escape_string($conn, $email);
        $rating_db = mysqli_real_escape_string($conn, $rating);
        $comment_db = mysqli_real_escape_string($conn, $comment);

        // Get current date and time
        $submission_date = date('Y-m-d H:i:s');

        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, rating, comment, submission_date) 
                VALUES ('$name_db', '$email_db', '$rating_db', '$comment_db', '$submission_date')";

        if (mysqli_query($conn, $sql)) {
            echo "<div style='color: green; margin-bottom: 20px;'>Thank you for submitting your review!</div>";
            // Redirect after 3 seconds
            header("Refresh: 3; url=$_SERVER[PHP_SELF]");
            exit();
        } else {
            die("Error: " . mysqli_error($conn));
        }
    } else {
        foreach ($errors as $error) {
            echo "<div style='color: red;'>$error</div>";
        }
    }
}

// Display existing reviews
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review-card'>";
        echo "<h3>" . htmlspecialchars_decode($row['name']) . "</h3>";
        echo "<p><strong>Email:</strong> " . htmlspecialchars_decode($row['email']) . "</p>";
        
        // Display stars
        $rating = intval($row['rating']);
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                echo "<span class='rating-stars'>★</span>";
            } else {
                echo "<span class='rating-stars'>☆</span>";
            }
        }

        echo "<p><strong>Submitted on:</strong> " . $row['submission_date'] . "</p>";
        
        if (!empty($row['comment'])) {
            echo "<p><strong>Comments:</strong></p>";
            echo "<p>" . htmlspecialchars_decode($row['comment']) . "</p>";
        }
        
        echo "</div>";
    }
} else {
    echo "<div style='color: gray;'>No reviews found.</div>";
}

// Close database connection
mysqli_close($conn);
?>

<!-- Review submission form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">

    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required><br>

    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required><br>

    <label for="rating">Rating:</label>
    <select id="rating" name="rating">
        <option value="5">5 Stars</option>
        <option value="4">4 Stars</option>
        <option value="3">3 Stars</option>
        <option value="2">2 Stars</option>
        <option value="1">1 Star</option>
    </select><br>

    <label for="comment">Comments:</label>
    <textarea id="comment" name="comment" rows="4" cols="50"></textarea><br>

    <input type="submit" value="Submit Review">
</form>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Retrieve reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name'], ENT_QUOTES) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['comment'], ENT_QUOTES) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Function to handle review submission
function submit_review() {
    global $conn;
    
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = mysqli_real_escape_string($conn, htmlspecialchars($_POST['name'], ENT_QUOTES));
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, htmlspecialchars($_POST['comment'], ENT_QUOTES));
        
        // Validate input
        if (empty($name) || empty($comment)) {
            echo "<p class='error'>Please fill in all required fields.</p>";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "<p class='error'>Please select a valid rating between 1 and 5 stars.</p>";
            return;
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (name, rating, comment, submission_date)
                VALUES ('$name', '$rating', '$comment', NOW())";
                
        if (!mysqli_query($conn, $sql)) {
            echo "<p class='error'>Error submitting review: " . mysqli_error($conn) . "</p>";
        } else {
            echo "<p class='success'>Thank you for your review!</p>";
            // Redirect to avoid form resubmission
            header("Location: ?submitted=1");
            exit();
        }
    }
}

// Main function to handle reviews
function main() {
    // Check if review was submitted
    if (isset($_GET['submitted'])) {
        echo "<div class='success-message'>Your review has been submitted successfully!</div>";
    }
    
    // Display review form
    echo "<form method='post' action='" . htmlspecialchars($_SERVER['PHP_SELF'], ENT_QUOTES) . "'>";
    echo "<h2>Submit a Review</h2>";
    echo "<div class='form-group'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='name' required>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='rating'>Rating:</label>";
    echo "<select id='rating' name='rating' required>";
    echo "<option value='5'>★ ★ ★ ★ ★</option>";
    echo "<option value='4'>★ ★ ★ ★</option>";
    echo "<option value='3'>★ ★ ★</option>";
    echo "<option value='2'>★ ★</option>";
    echo "<option value='1'>★</option>";
    echo "</select>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='comment'>Comment:</label>";
    echo "<textarea id='comment' name='comment' rows='5' required></textarea>";
    echo "</div>";
    
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
    
    // Display existing reviews
    echo "<h2>Reviews</h2>";
    display_reviews();
}

// Create the reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        rating INT NOT NULL,
        comment TEXT NOT NULL,
        submission_date DATETIME DEFAULT CURRENT_TIMESTAMP
    )";

mysqli_query($conn, $sql);

// Run the main function
main();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Get current timestamp
    $timestamp = time();
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$timestamp')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a specific product
function get_reviews($product_id) {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Example usage:

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_id = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (submit_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Display reviews for a product
$product_id = 1; // Set your product ID here
$reviews = get_reviews($product_id);

if (!empty($reviews)) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<div class='rating'>";
        for ($i = 0; $i < $review['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        echo "</div>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . date('F j, Y', $review['timestamp']) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews available.";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to create user review
function create_review($product_id = 0, $user_id = 0, $rating = 0, $comment = '') {
    // Database connection
    try {
        // Get database connection
        $db = get_db_connection();
        
        // Validate inputs
        if (empty($product_id) || empty($user_id)) {
            throw new Exception("Product ID and User ID are required.");
        }
        
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5.");
        }
        
        // Sanitize inputs
        $product_id = intval($product_id);
        $user_id = intval($user_id);
        $rating = intval($rating);
        $comment = htmlspecialchars(trim($comment), ENT_QUOTES, 'UTF-8');
        
        // Prepare SQL statement
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at) 
                VALUES (:product_id, :user_id, :rating, :comment, NOW())";
                
        $stmt = $db->prepare($sql);
        
        // Bind parameters
        $stmt->bindParam(':product_id', $product_id, PDO::PARAM_INT);
        $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
        $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
        $stmt->bindParam(':comment', $comment, PDO::PARAM_STR);
        
        // Execute query
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Error submitting review.");
        }
    } catch (Exception $e) {
        // Handle error
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Helper function to get database connection
function get_db_connection() {
    try {
        $host = DB_HOST;
        $username = DB_USERNAME;
        $password = DB_PASSWORD;
        $dbname = DB_NAME;
        
        $db = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $db;
    } catch (PDOException $e) {
        throw new Exception("Connection failed: " . $e->getMessage());
    }
}
?>


// Example usage:
$review_result = create_review(
    $product_id = 5,
    $user_id = 10,
    $rating = 4,
    $comment = "This is a great product!"
);

if ($review_result) {
    echo "Review submitted successfully!";
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Connect to database
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

function display_reviews($product_id) {
    global $conn;
    
    // Fetch reviews from database
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC");
    $stmt->execute([$product_id]);
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (empty($reviews)) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        // Display each review
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
        echo "<p><em>Posted on " . date('F j, Y', strtotime($review['review_date'])) . "</em></p>";
        echo "<div class='stars'>";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

function submit_review($product_id) {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate input data
        $name = trim($_POST['name']);
        $email = trim($_POST['email']);
        $rating = $_POST['rating'];
        $comment = trim($_POST['comment']);
        
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("All fields are required!");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format!");
        }
        
        // Insert review into database
        $stmt = $conn->prepare("
            INSERT INTO reviews (product_id, name, email, rating, comment)
            VALUES (:product_id, :name, :email, :rating, :comment)
        ");
        try {
            $stmt->execute([
                'product_id' => $product_id,
                'name' => $name,
                'email' => $email,
                'rating' => $rating,
                'comment' => $comment
            ]);
            
            // Show success message
            echo "Thank you for your review!";
        } catch(PDOException $e) {
            die("Error submitting review: " . $e->getMessage());
        }
    }
}

// Example usage:
$product_id = 1; // Replace with actual product ID

if (isset($_POST['submit_review'])) {
    submit_review($product_id);
} else {
    display_reviews($product_id);
}
?>


<?php
// Function to handle review submissions
function submit_review($name, $review) {
    // Connect to database (replace with your database credentials)
    $db_host = "localhost";
    $db_user = "username";
    $db_pass = "password";
    $db_name = "reviews";

    // Create connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize inputs to prevent SQL injection
    $name = $conn->real_escape_string($name);
    $review = $conn->real_escape_string($review);

    // Get current timestamp
    $timestamp = time();

    // Insert review into database
    $sql = "INSERT INTO reviews (name, review, timestamp) 
            VALUES ('$name', '$review', '$timestamp')";

    if ($conn->query($sql) === TRUE) {
        echo "Review submitted successfully!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close connection
    $conn->close();
}

// Function to display reviews
function display_reviews() {
    // Connect to database (replace with your database credentials)
    $db_host = "localhost";
    $db_user = "username";
    $db_pass = "password";
    $db_name = "reviews";

    // Create connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Query to retrieve reviews in descending order of submission
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . $row["name"] . "</h3>";
            echo "<p>" . $row["review"] . "</p>";
            echo "<small>Posted on: " . date('F j, Y g:i a', $row["timestamp"]) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }

    // Close connection
    $conn->close();
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT users.username, reviews.review_text, reviews.rating, reviews.review_date 
            FROM reviews 
            JOIN users ON reviews.user_id = users.user_id 
            ORDER BY review_date DESC";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Display average rating
        $average_rating = calculate_average_rating();
        echo "<h3>Overall Rating: " . number_format($average_rating, 1) . "/5</h3>";
        
        // Display each review
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>Written by: " . $row["username"] . "</h4>";
            echo "<p>" . $row["review_text"] . "</p>";
            display_stars($row["rating"]);
            echo "<small>Posted on: " . date('F j, Y', strtotime($row["review_date"])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available yet.";
    }
}

// Function to calculate average rating
function calculate_average_rating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    return $row["average"];
}

// Function to display stars based on rating
function display_stars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo "<span class='star'>★</span>";
        } else {
            echo "<span class='star'>☆</span>";
        }
    }
}

// Function to handle review submission
function submit_review($user_id, $review_text, $rating) {
    global $conn;
    
    // Validate input
    if (empty($review_text) || !isset($rating)) {
        return "Please fill in all required fields.";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, review_text, rating, review_date)
            VALUES (?, ?, ?, NOW())";
            
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iss", $user_id, $review_text, $rating);
    
    if ($stmt->execute()) {
        return "Thank you for submitting your review!";
    } else {
        return "Error: " . $stmt->error;
    }
}

// Close database connection
$conn->close();
?>


<?php
// On your product/service page:
display_reviews();

// After form submission:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submit_review($_SESSION['user_id'], $_POST['review_text'], $_POST['rating']);
    echo $result;
}
?>


<?php
function submitReview($userId, $productId, $rating, $comment) {
    // Validate input
    if (empty($userId) || empty($productId) || empty($rating)) {
        return array('status' => 'error', 'message' => 'All fields are required');
    }

    try {
        // Database connection parameters
        $host = 'localhost';
        $dbUsername = 'root';
        $dbPassword = '';
        $dbName = 'reviews_db';

        // Create database connection
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception('Database connection failed: ' . $conn->connect_error);
        }

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception('Error preparing statement: ' . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return array(
                'status' => 'success',
                'message' => 'Review submitted successfully',
                'review' => array(
                    'user_id' => $userId,
                    'product_id' => $productId,
                    'rating' => $rating,
                    'comment' => $comment,
                    'review_date' => date('Y-m-d H:i:s')
                )
            );
        } else {
            return array('status' => 'error', 'message' => 'Error submitting review: ' . $stmt->error);
        }

        // Close database connection
        $conn->close();
    } catch (Exception $e) {
        return array('status' => 'error', 'message' => $e->getMessage());
    }
}

// Example usage:
$reviewData = submitReview(1, 5, 4, "Great product! It works perfectly.");
print_r($reviewData);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a new review
function addReview($userId, $productId, $comment, $rating) {
    global $conn;
    
    try {
        // Check if the user has already reviewed this product
        $checkStmt = $conn->prepare("SELECT id FROM reviews WHERE user_id = ? AND product_id = ?");
        $checkStmt->execute([$userId, $productId]);
        
        if ($checkStmt->rowCount() > 0) {
            return false; // User already reviewed this product
        }
        
        // Insert new review into the database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, comment, rating, created_at) 
                              VALUES (?, ?, ?, ?, NOW())");
        $result = $stmt->execute([$userId, $productId, $comment, $rating]);
        
        return $result;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        // Get reviews and user details
        $stmt = $conn->prepare("SELECT r.id, u.username, r.comment, r.rating, 
                                DATE_FORMAT(r.created_at, '%M %d, %Y') AS created_date
                              FROM reviews r
                              JOIN users u ON r.user_id = u.id
                              WHERE r.product_id = ?
                              ORDER BY r.created_at DESC");
        $stmt->execute([$productId]);
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) AS average_rating FROM reviews WHERE product_id = ?");
        $stmt->execute([$productId]);
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return $result['average_rating'] ? number_format($result['average_rating'], 1, '.', '') : 0;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Assuming user is logged in and we have their ID
    $userId = 1; // Replace with actual user ID
    $productId = 1; // Replace with actual product ID
    $comment = $_POST['comment'];
    $rating = intval($_POST['rating']);
    
    if ($rating < 1 || $rating > 5) {
        die("Invalid rating value");
    }
    
    addReview($userId, $productId, $comment, $rating);
}

// Display reviews
$productId = 1; // Replace with actual product ID
$reviews = getReviews($productId);

if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>By " . $review['username'] . "</h3>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<div class='rating'>Rating: " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "</div>";
        echo "<small>Posted on " . $review['created_date'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
$averageRating = getAverageRating($productId);
echo "<div class='average-rating'>Average Rating: " . str_repeat("★", intval($averageRating)) . str_repeat("☆", 5 - intval($averageRating)) . " ($averageRating)</div>";
?>


<?php
function handleUserReview($userId, $productId, $rating, $comment, $db) {
    // Check if the user has already reviewed this product
    $checkQuery = "SELECT review_id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = $db->prepare($checkQuery);
    $stmt->execute([$userId, $productId]);
    
    if ($stmt->rowCount() > 0) {
        return ["status" => "error", "message" => "You have already reviewed this product."];
    }

    // Insert the new review
    $insertQuery = "
        INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
        VALUES (?, ?, ?, ?, NOW())
    ";
    
    $stmt = $db->prepare($insertQuery);
    try {
        $stmt->execute([$userId, $productId, $rating, $comment]);
        return ["status" => "success", "message" => "Review added successfully."];
    } catch (PDOException $e) {
        return ["status" => "error", "message" => "Error adding review: " . $e->getMessage()];
    }
}

function fetchProductReviews($productId, $db) {
    // Fetch all reviews for a product
    $reviewsQuery = "
        SELECT 
            r.review_id,
            u.user_name,
            r.rating,
            r.comment,
            r.created_at
        FROM reviews r
        JOIN users u ON r.user_id = u.user_id
        WHERE r.product_id = ? AND r.status = 'active'
        ORDER BY r.created_at DESC
    ";
    
    $stmt = $db->prepare($reviewsQuery);
    $stmt->execute([$productId]);
    
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

function calculateAverageRating($productId, $db) {
    // Calculate average rating for a product
    $avgQuery = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = ? AND status = 'active'";
    $stmt = $db->prepare($avgQuery);
    $stmt->execute([$productId]);
    
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    return $result['average_rating'] ?: 0;
}

// Example usage:
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');

// Add a review
$reviewResult = handleUserReview(1, 5, 4, "Great product!", $db);
echo "<pre>";
print_r($reviewResult);
echo "</pre>";

// Fetch reviews for product ID 5
$reviews = fetchProductReviews(5, $db);
echo "<pre>";
print_r($reviews);
echo "</pre>";

// Get average rating for product ID 5
$averageRating = calculateAverageRating(5, $db);
echo "Average Rating: $averageRating";
?>


Array
(
    [status] => success
    [message] => Review added successfully.
)


Array
(
    [0] => Array
        (
            [review_id] => 1
            [user_name] => JohnDoe
            [rating] => 4
            [comment] => Great product!
            [created_at] => 2023-07-05 12:34:56
        )
    // ... more reviews ...
)


Average Rating: 4.2


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags($name));
    $email = htmlspecialchars(strip_tags($email));
    $comment = htmlspecialchars(strip_tags($comment));

    // Check for empty fields
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return 'Please fill in all required fields';
    }

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment, submission_date) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("ssis", $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        return 'Review submitted successfully!';
    } else {
        return 'Error submitting review: ' . $conn->error;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    // Query all reviews from database
    $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review with user details and formatted rating stars
            echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($row['name']) . '</h3>';
            echo '<p>Submitted on: ' . $row['submission_date'] . '</p>';
            echo '<p>Email: ' . substr(htmlspecialchars($row['email']), 0, 3) . '***' . substr(htmlspecialchars($row['email']), strpos(htmlspecialchars($row['email']), '@')) . '</p>';
            echo '<div class="rating">';
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            echo '</div>';
            echo '<p>' . htmlspecialchars($row['comment']) . '</p>';
            echo '</div>';
        }
    } else {
        echo 'No reviews found.';
    }
}

// Handle form submission
if (isset($_POST['submit'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Add review to database and display message
    $message = addReview($name, $email, $rating, $comment, $conn);
    echo '<div class="message">' . $message . '</div>';
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
        }
        .rating {
            display: inline-block;
            font-size: 24px;
            color: gold;
        }
        .message {
            color: green;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>Submit a Review</h1>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="name" placeholder="Your Name" required><br><br>
        <input type="email" name="email" placeholder="Your Email" required><br><br>
        <label>Rating:</label><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br><br>
        <textarea name="comment" placeholder="Your Review" required></textarea><br><br>
        <input type="submit" name="submit" value="Submit Review">
    </form>

    <h2>Reviews</h2>
    <?php
    // Reopen database connection for display function
    $conn = mysqli_connect($host, $username, $password, $dbname);
    if (!$conn) {
        die('Connection failed: ' . mysqli_connect_error());
    }
    displayReviews($conn);
    $conn->close();
    ?>
</body>
</html>


<?php
// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$database = "reviews";

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle and display reviews
function user_review_system() {
    global $conn;

    // Insert new review if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review = mysqli_real_escape_string($conn, $_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate input
        if ($rating < 1 || $rating > 5) {
            echo "Invalid rating. Please select a rating between 1 and 5.";
        } elseif (empty($name) || empty($review)) {
            echo "Please fill in all fields.";
        } else {
            // Insert review into database
            $sql = "INSERT INTO reviews (name, review, rating, date)
                    VALUES ('$name', '$review', '$rating', NOW())";
            
            if (!mysqli_query($conn, $sql)) {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Fetch all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);

    // Display review form and existing reviews
    ?>
    
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <h3>Leave a Review:</h3>
        <p>Name:<br>
            <input type="text" name="name" required>
        </p>
        <p>Rating (1-5):<br>
            <select name="rating" required>
                <option value="">Select Rating</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
            </select>
        </p>
        <p>Review:<br>
            <textarea name="review" rows="5" cols="40" required></textarea>
        </p>
        <input type="submit" value="Submit Review">
    </form>

    <?php if (mysqli_num_rows($result) > 0): ?>
        <h3>Existing Reviews:</h3>
        <div class="reviews">
            <?php while ($row = mysqli_fetch_assoc($result)): ?>
                <div class="review">
                    <p><strong><?php echo $row['name']; ?></strong></p>
                    <p>Rating: <?php 
                        // Display stars for rating
                        $stars = min(5, max(0, (int)$row['rating']));
                        for ($i = 1; $i <= $stars; $i++) {
                            echo "★";
                        }
                        for ($i = $stars + 1; $i <= 5; $i++) {
                            echo "☆";
                        }
                    ?></p>
                    <p><?php echo $row['review']; ?></p>
                    <p><em>Posted on <?php echo date('F j, Y', strtotime($row['date'])); ?></em></p>
                </div>
            <?php endwhile; ?>
        </div>

        // Display average rating
        $average_rating = mysqli_fetch_assoc(mysqli_query($conn, "SELECT AVG(rating) as average FROM reviews"));
        $average_rating = round($average_rating['average'], 1);
        echo "<h4>Average Rating: $average_rating/5</h4>";
    <?php endif; ?>
    
<?php
}

// Call the function
user_review_system();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection parameters
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Validate input
    if (!isset($rating) || !isset($comment)) {
        throw new Exception("Rating and comment are required.");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5.");
    }

    // Sanitize input
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment), ENT_QUOTES, 'UTF-8');

    // Insert review into database
    $stmt = $conn->prepare("
        INSERT INTO reviews (product_id, user_id, rating, comment, created_at)
        VALUES (:productId, :userId, :rating, :comment, NOW())
    ");
    
    $stmt->bindParam(':productId', $productId);
    $stmt->bindParam(':userId', $userId);
    $stmt->bindParam(':rating', $rating);
    $stmt->bindParam(':comment', $comment);

    try {
        $stmt->execute();
        return true;
    } catch(PDOException $e) {
        error_log("Error submitting review: " . $e->getMessage());
        throw new Exception("Failed to submit review.");
    }
}

// Function to display reviews for a product
function displayReviews($productId, $conn) {
    // Fetch reviews from database
    $stmt = $conn->prepare("
        SELECT 
            r.id AS review_id,
            u.username,
            r.rating,
            r.comment,
            DATE_FORMAT(r.created_at, '%M %d, %Y') AS created_date
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        WHERE r.product_id = :productId
        ORDER BY r.created_at DESC
    ");
    
    $stmt->bindParam(':productId', $productId);
    $stmt->execute();
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Display reviews
    if (empty($reviews)) {
        echo "<div class='no-reviews'>No reviews yet.</div>";
        return;
    }

    foreach ($reviews as $review) {
        $username = $review['username'] ?? 'Anonymous';
        $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
        
        echo <<<HTML
        <div class="review">
            <div class="review-header">
                <span class="username">$username</span>
                <div class="stars">$stars</div>
            </div>
            <p class="comment">{$review['comment']}</p>
            <small class="date">{$review['created_date']}</small>
        </div>
HTML;
    }
}

// Example usage:
// Assuming a product ID and user ID are available
$product_id = 1; // Replace with actual product ID
$user_id = 1;    // Replace with actual user ID

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        submitReview($product_id, $user_id, $_POST['rating'], $_POST['comment'], $conn);
        header("Location: product.php?id=$product_id");
        exit;
    } catch(Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Display existing reviews
displayReviews($product_id, $conn);

// Close database connection
$conn = null;
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["user_name"]) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row["rating"]) . "</p>";
            echo "<p>" . htmlspecialchars($row["comment"]) . "</p>";
            echo "<small>Posted on: " . $row["timestamp"] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }
}

// Function to add a new review
function add_review($user_name, $comment, $rating) {
    global $conn;
    
    // Sanitize inputs
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    $rating = intval($rating);

    // Check if fields are not empty
    if ($user_name == "" || $comment == "" || $rating == 0) {
        return "Please fill in all required fields.";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, comment, rating)
    VALUES (?, ?, ?)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssi", $user_name, $comment, $rating);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Function to calculate average rating
function get_average_rating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return number_format((float)$row["average"], 1, '.', '');
    } else {
        return "No ratings yet.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle review submission
function submitReview($user_name, $user_email, $review_text, $rating, $conn) {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $user_email = mysqli_real_escape_string($conn, htmlspecialchars($user_email));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, review_text, rating, review_date)
            VALUES ('$user_name', '$user_email', '$review_text', '$rating', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["user_name"]) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row["user_email"]) . "</p>";
            echo "<p>Rating: " . $row["rating"] . "/5</p>";
            echo "<p>Review: " . htmlspecialchars($row["review_text"]) . "</p>";
            echo "<p>Date: " . $row["review_date"] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include 'review_functions.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $user_email = $_POST['user_email'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];

    if (submitReview($user_name, $user_email, $review_text, $rating, $conn)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Redirect back to the reviews page after submission
header("Location: reviews.php");
exit();
?>


<?php
include 'review_functions.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php displayReviews($conn); ?>
</body>
</html>


<?php
// Review handling and display functions

function submitReview() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = $_POST['rating'];
        $comment = htmlspecialchars($_POST['comment']);
        
        // Validate input
        $errors = array();
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            $errors[] = "All fields must be filled out!";
        }
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format!";
        }
        if ($rating < 1 || $rating > 5) {
            $errors[] = "Rating must be between 1 and 5!";
        }
        
        if (empty($errors)) {
            // Store review in a file
            $review = array(
                'name' => $name,
                'email' => $email,
                'rating' => $rating,
                'comment' => $comment,
                'date' => date('Y-m-d H:i:s')
            );
            
            $reviews = array();
            if (file_exists('reviews.txt')) {
                $reviews = unserialize(file_get_contents('reviews.txt'));
            }
            $reviews[] = $review;
            file_put_contents('reviews.txt', serialize($reviews));
            
            // Redirect to thank you page
            header("Location: thanks.php");
            exit();
        } else {
            foreach ($errors as $error) {
                echo "<p class='error'>$error</p>";
            }
        }
    }
    
    // Display review form
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name">
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email">
        </div>
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Select a rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment"></textarea>
        </div>
        <button type="submit">Submit Review</button>
    </form>
<?php
}

function displayReviews() {
    $averageRating = 0;
    $totalRatings = 0;
    
    if (file_exists('reviews.txt')) {
        $reviews = unserialize(file_get_contents('reviews.txt'));
        
        // Calculate average rating
        foreach ($reviews as $review) {
            $totalRatings += $review['rating'];
        }
        $averageRating = $totalRatings / count($reviews);
        
        // Display reviews
        echo "<h2>Customer Reviews</h2>";
        echo "<p>Average Rating: " . number_format($averageRating, 1) . " out of 5</p>";
        
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>" . $review['name'] . "</h3>";
            echo "<p>Rating: " . $review['rating'] . "/5</p>";
            displayStars($review['rating']);
            echo "<p>" . $review['comment'] . "</p>";
            echo "<small>Posted on " . $review['date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

function displayStars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo "<img src='star-filled.png' alt='*'>";
        } else {
            echo "<img src='star-empty.png' alt='*'>";
        }
    }
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create review table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT(6),
    product_id INT(6),
    rating INT(2),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Create votes table if not exists
$sql = "CREATE TABLE IF NOT EXISTS review_votes (
    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT(6),
    review_id INT(6),
    vote_type ENUM('up', 'down'),
    voted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submitReview($conn, $userId, $productId, $rating, $comment) {
    // Check if user has already reviewed this product
    $checkQuery = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ii", $userId, $productId);
    mysqli_stmt_execute($stmt);
    
    if (mysqli_stmt_fetch($stmt)) {
        return false; // User already reviewed
    }
    
    $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                    VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to vote on a review
function voteOnReview($conn, $userId, $reviewId, $voteType) {
    // Check if user has already voted on this review
    $checkQuery = "SELECT id FROM review_votes WHERE user_id = ? AND review_id = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ii", $userId, $reviewId);
    mysqli_stmt_execute($stmt);
    
    if (mysqli_stmt_fetch($stmt)) {
        return false; // User already voted
    }
    
    $insertQuery = "INSERT INTO review_votes (user_id, review_id, vote_type) 
                    VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "iis", $userId, $reviewId, $voteType);
    
    if (mysqli_stmt_execute($stmt)) {
        // Update review votes
        $updateQuery = "UPDATE reviews SET upvotes = upvotes + 
            CASE WHEN vote_type = 'up' THEN 1 ELSE -1 END 
            WHERE id = ?";
        $stmtUpdate = mysqli_prepare($conn, $updateQuery);
        mysqli_stmt_bind_param($stmtUpdate, "i", $reviewId);
        mysqli_stmt_execute($stmtUpdate);
        
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($conn, $productId) {
    $sql = "SELECT r.*, 
           (SELECT COUNT(*) FROM review_votes WHERE review_id = r.id AND vote_type = 'up') AS upvotes,
           (SELECT COUNT(*) FROM review_votes WHERE review_id = r.id AND vote_type = 'down') AS downvotes
           FROM reviews r 
           WHERE r.product_id = ?
           ORDER BY r.rating DESC";
    
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>Review by: " . $row['user_id'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>Comment: " . $row['comment'] . "</p>";
        echo "<div class='votes'>";
        echo "<button onclick='voteReview(" . $row['id'] . ", \"up\")'>↑ Upvote</button>";
        echo "<span>" . $row['upvotes'] . "</span>";
        echo "<button onclick='voteReview(" . $row['id'] . ", \"down\")'>↓ Downvote</button>";
        echo "</div>";
        echo "<p>Posted on: " . $row['created_at'] . "</p>";
        echo "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Retrieve reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $author = htmlspecialchars($row['author']);
            $rating = intval($row['rating']);
            $review_text = htmlspecialchars($row['review_text']);
            $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));

            // Display review
            echo "<div class='review'>";
            echo "<h3>Review by $author</h3>";
            echo "<p class='rating'>Rating: ";
            for ($i = 0; $i < $rating; $i++) {
                echo "★";
            }
            for ($i = $rating; $i < 5; $i++) {
                echo "☆";
            }
            echo "</p>";
            echo "<p>$review_text</p>";
            echo "<p class='timestamp'>Posted on: $timestamp</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Function to handle review submission
function submit_review() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get and sanitize input data
        $author = mysqli_real_escape_string($conn, htmlspecialchars($_POST['author']));
        $rating = intval($_POST['rating']);
        $review_text = mysqli_real_escape_string($conn, htmlspecialchars($_POST['review_text']));

        // Validate inputs
        if (empty($author) || empty($review_text)) {
            echo "<p class='error'>Please fill in all required fields!</p>";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "<p class='error'>Invalid rating. Please select a rating between 1 and 5 stars.</p>";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (author, rating, review_text) VALUES ('$author', '$rating', '$review_text')";
        
        if (mysqli_query($conn, $sql)) {
            echo "<p class='success'>Thank you for submitting your review!</p>";
        } else {
            echo "<p class='error'>Error: " . mysqli_error($conn) . "</p>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection (replace with your actual connection details)
$host = 'localhost';
$user = 'username';
$pass = 'password';
$dbname = 'reviews';

$conn = new mysqli($host, $user, $pass, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Function to handle review submission
function submitReview($name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = sanitizeInput($name);
    $email = sanitizeInput($email);
    $rating = intval($rating);
    $comment = sanitizeInput($comment);

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Insert into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, review_date)
            VALUES (?, ?, ?, ?, NOW())";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ssis", $name, $email, $rating, $comment);
        $stmt->execute();
        $stmt->close();
        return "Review submitted successfully!";
    } else {
        return "Error: " . $conn->error;
    }
}

// Function to get reviews
function getReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($conn) {
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    if ($row['average'] > 0) {
        return round($row['average'], 1);
    } else {
        return 0;
    }
}

// Function to display stars
function displayStars($rating) {
    $stars = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= '<span class="star filled">★</span>';
        } else {
            $stars .= '<span class="star empty">☆</span>';
        }
    }
    return $stars;
}

// Function to display reviews
function displayReview($review) {
    echo "<div class='review'>";
    echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
    echo "<p class='date'>" . $review['review_date'] . "</p>";
    echo displayStars($review['rating']);
    echo "<p class='comment'>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
    echo "</div>";
}
?>


<!DOCTYPE html>
<html>
<head>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .star {
            font-size: 24px;
            margin-right: 5px;
        }
        .filled { color: gold; }
        .empty { color: #ccc; }
    </style>
</head>
<body>

<?php
// Show review form if user is submitting
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $message = submitReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment'], $conn);
    echo "<p>$message</p>";
}

// Display average rating
$averageRating = getAverageRating($conn);
echo "<h2>Reviews (Average: $averageRating)</h2>";

// Display all reviews
$result = getReviews($conn);
if ($result) {
    while ($row = $result->fetch_assoc()) {
        displayReview($row);
    }
}
?>

<!-- Review submission form -->
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required>
    </div>
    
    <div>
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required>
    </div>
    
    <div>
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Choose rating</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </select>
    </div>
    
    <div>
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" required></textarea>
    </div>
    
    <input type="submit" value="Submit Review">
</form>

<?php
$conn->close();
?>

</body>
</html>


<?php
// Include configuration file
require_once 'config.php';

function add_user_review($user_id, $product_id, $rating, $comment) {
    try {
        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if (!$conn) {
            throw new Exception("Could not connect to the database");
        }
        
        // Sanitize inputs
        $user_id = mysqli_real_escape_string($conn, $user_id);
        $product_id = mysqli_real_escape_string($conn, $product_id);
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, $comment);
        
        // Validate rating (assuming ratings are between 1 and 5)
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating value. Please choose a rating between 1 and 5.");
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews 
                (user_id, product_id, rating, comment) 
                VALUES ('$user_id', '$product_id', '$rating', '$comment')";
                
        if (!mysqli_query($conn, $sql)) {
            throw new Exception("Error adding review: " . mysqli_error($conn));
        }
        
        // Get the inserted review ID
        $review_id = mysqli_insert_id($conn);
        
        // Close database connection
        mysqli_close($conn);
        
        return array(
            'status' => 'success',
            'message' => 'Review added successfully!',
            'review_id' => $review_id
        );
        
    } catch (Exception $e) {
        // Handle exceptions and errors
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = add_user_review($user_id, $product_id, $rating, $comment);
    
    if ($result['status'] == 'success') {
        echo "Review added successfully! Review ID: " . $result['review_id'];
    } else {
        echo "Error adding review: " . $result['message'];
    }
}

// Helper function to update product rating based on new review
function update_product_rating($product_id) {
    try {
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if (!$conn) {
            throw new Exception("Could not connect to the database");
        }
        
        // Calculate average rating for the product
        $sql = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = '$product_id'";
        $result = mysqli_query($conn, $sql);
        
        if (!$result) {
            throw new Exception("Error calculating average rating: " . mysqli_error($conn));
        }
        
        $row = mysqli_fetch_assoc($result);
        $avg_rating = number_format($row['avg_rating'], 1, '.', '');
        
        // Update product's average rating
        $update_sql = "UPDATE products SET avg_rating = '$avg_rating' WHERE product_id = '$product_id'";
        if (!mysqli_query($conn, $update_sql)) {
            throw new Exception("Error updating product rating: " . mysqli_error($conn));
        }
        
        // Close connection
        mysqli_close($conn);
        
    } catch (Exception $e) {
        // Handle exceptions and errors
        echo "Error updating product rating: " . $e->getMessage();
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$dbname = 'reviews_db'; // Change to your database name

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    // Validate required fields
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("All fields are required.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Validate rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5.");
    }

    // Insert review into the database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, submission_date)
            VALUES ('$name', '$email', $rating, '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        echo "<p style='color: green;'>Thank you for your review!</p>";
    } else {
        die("Error: " . $sql . "<br>" . $conn->error);
    }
}

// Retrieve all reviews from the database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = $conn->query($sql);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .rating-stars {
            display: flex;
            gap: 5px;
            margin: 10px 0;
        }
        .review-item {
            background-color: #f9f9f9;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        h3, h4 {
            color: #333;
            margin-top: 0;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select><br><br>

            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5" required></textarea><br><br>

            <input type="submit" value="Submit Review">
        </form>
    </div>

    <!-- Display Existing Reviews -->
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class=\"review-item\">";
            echo "<h3>By " . htmlspecialchars($row["user_name"]) . "</h3>";
            echo "<p>Submitted on: " . $row["submission_date"] . "</p>";

            // Display rating stars
            echo "<div class=\"rating-stars\">";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span style='color: gold;'>★</span>";
                } else {
                    echo "<span>☆</span>";
                }
            }
            echo "</div>";

            echo "<p>" . htmlspecialchars($row["comment"]) . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
    $conn->close();
    ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255),
    product_id INT,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    approved BOOLEAN DEFAULT FALSE
)";

mysqli_query($conn, $sql);

// Function to add a new review
function addReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose between 1 and 5 stars.";
    }
    
    if (strlen($comment) == 0 || strlen($comment) > 1000) {
        return "Comment must be between 1 and 1000 characters.";
    }
    
    // Escape special characters
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        return "Review added successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to get reviews for a product
function getProductReviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    
    $result = mysqli_query($conn, $sql);
    $reviews = array();
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as total, AVG(rating) as average 
            FROM reviews WHERE product_id = $product_id";
    
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['total'] == 0) {
        return 0;
    } else {
        return number_format((float)$row['average'], 1, '.', '');
    }
}

// Function to delete a review
function deleteReview($review_id) {
    global $conn;
    
    $sql = "DELETE FROM reviews WHERE id = $review_id";
    
    if (mysqli_query($conn, $sql)) {
        return "Review deleted successfully!";
    } else {
        return "Error deleting review: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $result = addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);
    echo $result;
}

// Get and display reviews for product ID 1
$reviews = getProductReviews(1);
foreach ($reviews as $review) {
    echo "<div>";
    echo "<p>Rating: " . $review['rating'] . "/5</p>";
    echo "<p>Comment: " . $review['comment'] . "</p>";
    echo "<small>Posted on: " . $review['review_date'] . "</small>";
    echo "</div>";
}

// Display average rating
$average_rating = getAverageRating(1);
echo "<h3>Average Rating: $average_rating/5</h3>";
?>


<?php
function userReview($action = 'display', $reviewData = array()) {
    // File path to store reviews (make sure this directory is writable)
    $reviewsFile = 'user_reviews.txt';

    switch ($action) {
        case 'submit':
            if (!empty($reviewData)) {
                // Validate and sanitize input
                $username = htmlspecialchars(trim($reviewData['username']));
                $review = htmlspecialchars(trim($reviewData['review']));
                $rating = intval($reviewData['rating']);

                // Check if rating is valid (1-5 stars)
                if ($rating < 1 || $rating > 5) {
                    return 'Invalid rating. Please choose a rating between 1 and 5.';
                }

                // Create a review entry
                $reviewEntry = serialize(array(
                    'username' => $username,
                    'review'   => $review,
                    'rating'   => $rating,
                    'date'     => date('Y-m-d H:i:s')
                ));

                // Append review to file
                $fileHandle = fopen($reviewsFile, 'a');
                if ($fileHandle) {
                    fwrite($fileHandle, $reviewEntry . "
");
                    fclose($fileHandle);
                    return 'Thank you for your review!';
                } else {
                    return 'Error saving review. Please try again later.';
                }
            }
            break;

        case 'display':
            // Read reviews from file
            if (file_exists($reviewsFile)) {
                $reviews = array();
                $fileHandle = fopen($reviewsFile, 'r');
                while (($line = fgets($fileHandle)) !== false) {
                    $reviewEntry = unserialize($line);
                    if ($reviewEntry !== false && is_array($reviewEntry)) {
                        $reviews[] = $reviewEntry;
                    }
                }
                fclose($fileHandle);

                // Calculate average rating
                $totalRating = 0;
                foreach ($reviews as $review) {
                    $totalRating += $review['rating'];
                }
                $averageRating = count($reviews) > 0 ? round($totalRating / count($reviews), 2) : 0;

                // Display reviews and average rating
                echo "<div class='reviews'>";
                echo "<h3>Reviews ($averageRating/5)</h3>";
                foreach ($reviews as $review) {
                    echo "<div class='review'>";
                    echo "<strong>" . $review['username'] . "</strong><br>";
                    echo "<p>" . $review['review'] . "</p>";
                    echo "<span class='rating'>★ " . $review['rating'] . "</span><br>";
                    echo "<small>Posted on " . $review['date'] . "</small>";
                    echo "</div>";
                }
                echo "</div>";
            } else {
                // No reviews yet
                echo "<p>No reviews available. Be the first to review!</p>";
            }
            break;

        default:
            return 'Invalid action parameter.';
    }
}

// Example usage:

// Display reviews
userReview('display');

// Submit a review (example form submission)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $reviewResult = userReview('submit', array(
        'username' => $_POST['username'],
        'review'   => $_POST['review'],
        'rating'   => $_POST['rating']
    ));
    echo $reviewResult;
}
?>


<?php
// Function to save the review to a file
function saveReview($reviewData) {
    $filePath = 'reviews.txt';
    
    // Append the new review to the file
    $fh = fopen($filePath, 'a');
    fwrite($fh, serialize($reviewData) . "
");
    fclose($fh);
}

// Function to load and display reviews
function loadReviews() {
    $filePath = 'reviews.txt';
    $reviews = array();
    
    if (file_exists($filePath)) {
        $fh = fopen($filePath, 'r');
        while (($line = fgets($fh)) !== false) {
            $review = unserialize($line);
            if ($review !== false && $review !== '') {
                $reviews[] = $review;
            }
        }
        fclose($fh);
    }
    
    return $reviews;
}

// Process the review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = trim($_POST['comment']);
    
    // Validate input
    if ($name == '' || $email == '' || $rating < 1 || $rating > 5 || $comment == '') {
        echo "<div class='error'>Please fill in all required fields and select a rating between 1-5 stars.</div>";
    } else {
        // Sanitize input
        $name = htmlspecialchars($name, ENT_QUOTES);
        $email = htmlspecialchars($email, ENT_QUOTES);
        $comment = htmlspecialchars($comment, ENT_QUOTES);
        
        // Create review data array
        $reviewData = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );
        
        // Save the review
        saveReview($reviewData);
        echo "<div class='success'>Thank you for submitting your review!</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }
        .rating-stars {
            display: flex;
            gap: 10px;
        }
        .star-input {
            display: none;
        }
        .star-label {
            cursor: pointer;
        }
        .success, .error {
            padding: 10px;
            margin-top: 20px;
            border-radius: 5px;
        }
        .success {
            background-color: #dff0d8;
            color: #3c763d;
        }
        .error {
            background-color: #f2dede;
            color: #a94442;
        }
    </style>
</head>
<body>

<h1>Product Review System</h1>

<!-- Review Form -->
<div class="review-form">
    <h2>Submit Your Review</h2>
    
    <?php
    // Display any success or error messages here
    if (isset($_GET['success'])) {
        echo "<div class='success'>Thank you for submitting your review!</div>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="rating-stars">
            <label class="star-label">Rate this product:</label><br>
            <input type="radio" class="star-input" id="5-star" name="rating" value="5">
            <label for="5-star">★</label>

            <input type="radio" class="star-input" id="4-star" name="rating" value="4">
            <label for="4-star">★</label>

            <input type="radio" class="star-input" id="3-star" name="rating" value="3">
            <label for="3-star">★</label>

            <input type="radio" class="star-input" id="2-star" name="rating" value="2">
            <label for="2-star">★</label>

            <input type="radio" class="star-input" id="1-star" name="rating" value="1">
            <label for="1-star">★</label>
        </div>

        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>
</div>

<!-- Display Reviews -->
<h2>Customer Reviews</h2>
<?php
$reviews = loadReviews();
if (empty($reviews)) {
    echo "<p>No reviews submitted yet.</p>";
} else {
    foreach ($reviews as $review) {
        echo "<div style='border-bottom: 1px solid #ddd; padding-bottom: 15px; margin-bottom: 15px;'>";
        echo "<h3>{$review['name']}</h3>";
        echo "<p>Rating: ";
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "★";
        }
        echo "</p>";
        echo "<p>{$review['comment']}</p>";
        echo "<small>Posted on {$review['date']}</small>";
        echo "</div>";
    }
    
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    if (!empty($reviews)) {
        $averageRating = $totalRating / count($reviews);
        echo "<h3>Average Rating: " . round($averageRating, 1) . " stars</h3>";
    }
}
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'review_system';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $database);

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = sanitizeInput($_POST['comment']);

    // Validate input data
    if ($name == '' || $email == '' || $rating < 1 || $rating > 5 || $comment == '') {
        echo "Please fill in all required fields!";
    } else {
        // Check email format
        if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            echo "Please enter a valid email address!";
        } else {
            // Insert review into database
            $sql = "INSERT INTO reviews (user_name, user_email, rating, comment) 
                    VALUES ('$name', '$email', '$rating', '$comment')";
            
            if (mysqli_query($conn, $sql)) {
                echo "Thank you for submitting your review!";
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . $row['user_email'] . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>Submitted on: " . date('jS M Y', strtotime($row['submission_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

function userReview($action) {
    global $conn;

    switch ($action) {
        case 'display':
            displayReviews();
            break;
        case 'submit':
            submitReview();
            break;
        default:
            displayReviews();
            break;
    }
}

// Display existing reviews
function displayReviews() {
    global $conn;

    try {
        // Fetch all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Display each review
        echo "<div class='review-container'>";
        foreach ($reviews as $review) {
            echo "<div class='review'>";
                echo "<h3>Reviewer: " . htmlspecialchars($review['reviewer_name']) . "</h3>";
                echo "<p><strong>Rating:</strong> " . $review['rating'] . "/5</p>";
                echo "<p><strong>Comment:</strong> " . nl2br(htmlspecialchars($review['comment'])) . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($review['review_date'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }

    // Display review submission form
    displayReviewForm();
}

// Submit a new review
function submitReview() {
    global $conn;

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        try {
            // Sanitize and validate inputs
            $reviewerName = htmlspecialchars(trim($_POST['reviewer_name']));
            $rating = intval($_POST['rating']);
            $comment = htmlspecialchars(trim($_POST['comment']));

            if (empty($reviewerName) || empty($comment)) {
                throw new Exception("Please fill in all required fields.");
            }
            
            if ($rating < 1 || $rating > 5) {
                throw new Exception("Rating must be between 1 and 5.");
            }

            // Insert into database
            $stmt = $conn->prepare("
                INSERT INTO reviews 
                    (reviewer_name, rating, comment, review_date)
                VALUES (:name, :rating, :comment, NOW())
            ");
            $stmt->bindParam(':name', $reviewerName);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comment', $comment);

            if ($stmt->execute()) {
                header("Location: review.php?action=display");
                exit();
            } else {
                throw new Exception("Error submitting your review.");
            }
        } catch(PDOException $e) {
            echo "Database error: " . $e->getMessage();
        } catch(Exception $e) {
            echo $e->getMessage();
        }
    }
}

// Display the review submission form
function displayReviewForm() {
    // Check if user is logged in or authenticated before showing form
    if (isset($_SESSION['logged_in'])) {
        echo "<div class='review-form'>";
            echo "<h2>Submit Your Review</h2>";
            echo "<form action='?action=submit' method='post'>";
                echo "<p><strong>Name:</strong></p>";
                echo "<input type='text' name='reviewer_name' required />";
                
                echo "<p><strong>Rating (1-5):</strong></p>";
                for ($i = 1; $i <= 5; $i++) {
                    echo "<label>";
                        echo "<input type='radio' name='rating' value='$i'";
                        if (!isset($_POST['rating'])) {
                            if ($i == 3) echo " checked";
                        } else if ($_POST['rating'] == $i) {
                            echo " checked";
                        }
                        echo "> $i</label> ";
                    }
                echo "<br/>";
                
                echo "<p><strong>Your Review:</strong></p>";
                echo "<textarea name='comment' rows='5' cols='40' required></textarea>";
                
                echo "<input type='submit' value='Submit Review'>";
            echo "</form>";
        echo "</div>";
    } else {
        echo "<p>Please <a href='login.php'>log in</a> to submit a review.</p>";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    userReview($_GET['action']);
} else {
    userReview('display');
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Connect to the database
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // Function to display all reviews
    function displayReviews($pdo) {
        echo '<div class="reviews-container">';
        
        // Get all reviews from database
        $stmt = $pdo->query('SELECT * FROM reviews ORDER BY review_date DESC');
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='review'>";
            echo "<h3>{$row['review_author']}</h3>";
            echo "<p>{$row['review_text']}</p>";
            echo "<small>Posted on: {$row['review_date']}</small>";
            echo "</div>";
        }
        
        echo '</div>';
    }

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input
        $author = htmlspecialchars(trim($_POST['author']));
        $text = htmlspecialchars(trim($_POST['review_text']));

        if (empty($author) || empty($text)) {
            die('Please fill in all fields!');
        }

        // Insert new review into database
        try {
            $stmt = $pdo->prepare('INSERT INTO reviews SET 
                review_author = :author,
                review_text = :text,
                review_date = NOW()');
            
            $stmt->execute([
                ':author' => $author,
                ':text' => $text
            ]);
            
            // Redirect after submission to prevent duplicate entries
            header('Location: ' . $_SERVER['PHP_SELF']);
            exit();
        } catch (PDOException $e) {
            die('Error adding review: ' . $e->getMessage());
        }
    }

} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .reviews-container {
            margin-top: 20px;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        input, textarea {
            width: 100%;
            margin: 5px 0;
            padding: 8px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <input type="text" name="author" placeholder="Your Name" required>
            <textarea name="review_text" placeholder="Write your review here..." rows="5" required></textarea>
            <button type="submit">Submit Review</button>
            <button type="reset">Cancel</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <?php displayReviews($pdo); ?>

    <!-- Error Handling -->
    <?php
    if (isset($_GET['error'])) {
        echo '<div class="error">';
        switch ($_GET['error']) {
            case 'empty_fields':
                echo "Please fill in all required fields!";
                break;
            default:
                echo "An unknown error occurred!";
        }
        echo '</div>';
    }
    ?>
</body>
</html>


<?php
// Function to handle user reviews
function submit_review($name, $email, $review, $rating) {
    // Validate input
    if (empty($name) || empty($email) || empty($review)) {
        return "Please fill in all required fields.";
    }

    // Sanitize input
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $review = htmlspecialchars($review);

    // Validate rating
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Please select a valid rating (1-5 stars).";
    }

    // Store review in a file or database
    // For this example, we'll store it in a text file
    $filename = 'reviews.txt';
    
    // Create an array with the review data
    $review_data = [
        'name' => $name,
        'email' => $email,
        'review' => $review,
        'rating' => $rating,
        'date' => date('Y-m-d H:i:s')
    ];

    // Convert to JSON and append to file
    $json_review = json_encode($review_data);
    
    try {
        // Append the review to the file
        file_put_contents($filename, $json_review . PHP_EOL, FILE_APPEND);

        return "Thank you for your review!";
    } catch (Exception $e) {
        return "Error submitting review. Please try again later.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $review = $_POST['review'];
    $rating = $_POST['rating'];

    // Submit the review
    $result = submit_review($name, $email, $review, $rating);
    echo $result;
}
?>


<?php
// Function to get all reviews
function get_reviews() {
    $filename = 'reviews.txt';
    $reviews = [];

    if (file_exists($filename)) {
        // Read all lines from file
        $lines = file($filename, FILE_IGNORE_NEW_LINES);

        foreach ($lines as $line) {
            $review = json_decode($line, true);
            if ($review !== false && $review !== null) {
                $reviews[] = $review;
            }
        }
    }

    return $reviews;
}

// Display reviews
$reviews = get_reviews();

if (!empty($reviews)) {
    echo "<h2>Customer Reviews</h2>";
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<p><strong>" . htmlspecialchars($review['name']) . "</strong></p>";
        echo "<p>Rating: " . $review['rating'] . " stars</p>";
        echo "<p>" . htmlspecialchars($review['review']) . "</p>";
        echo "<p>Posted on: " . $review['date'] . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews available.</p>";
}
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255),
    rating INT,
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

if ($conn->query($sql) === FALSE) {
    die("Error creating table: " . $conn->error);
}

// Process form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    function sanitize_input($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    $name = sanitize_input($_POST['name']);
    $email = sanitize_input($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = sanitize_input($_POST['comment']);

    // Validate input data
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("ssis", $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        echo "Thank you for your review!";
    } else {
        die("Error submitting review: " . $conn->error);
    }

    $stmt->close();
}

// Display all reviews
function display_reviews() {
    global $conn;

    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Rating must be between 1 and 5.";
    }
    
    // Sanitize comment
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    
    // Check for empty comment
    if (empty($comment)) {
        return "Comment cannot be empty.";
    }
    
    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return "Review added successfully!";
    } else {
        return "Error adding review: " . $stmt->error;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $reviews = array();
    
    // Get all reviews for the product
    $result = $conn->query("SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC");
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $reviews[] = array(
                'review_id' => $row['review_id'],
                'user_id' => $row['user_id'],
                'rating' => $row['rating'],
                'comment' => htmlspecialchars_decode($row['comment']),
                'date' => $row['review_date']
            );
        }
    }
    
    return $reviews;
}

// Function to calculate average rating for a product
function get_average_rating($product_id) {
    global $conn;
    
    $result = $conn->query("SELECT AVG(rating) as average FROM reviews WHERE product_id = $product_id");
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average'], 1); // Round to one decimal place
    }
    
    return 0;
}

// Function to display reviews in HTML format
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    $average_rating = get_average_rating($product_id);
    
    if (empty($reviews)) {
        echo "<p>No reviews yet.</p>";
        return;
    }
    
    // Display average rating
    echo "<div class='average-rating'>";
    echo "<h3>Average Rating: " . $average_rating . " / 5</h3>";
    echo "</div>";
    
    // Display each review
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<div class='rating'>";
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "<p><strong>Review by:</strong> User ID: " . $review['user_id'] . "</p>";
        echo "<p>" . nl2br($review['comment']) . "</p>";
        echo "<p class='date'><small>Posted on: " . date('M j, Y g:i a', strtotime($review['date'])) . "</small></p>";
        echo "</div>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include the review functions
include('review_functions.php');

// Get form data
$product_id = $_POST['product_id'];
$rating = $_POST['rating'];
$comment = $_POST['comment'];

// Add the review and show feedback
echo add_review($_SESSION['user_id'], $product_id, $rating, $comment);

// Redirect back to product page after short delay
header("Refresh: 2; url=product.php?id=$product_id");
?>


<?php include('review_functions.php'); ?>
<div class="reviews-container">
    <?php display_reviews($product_id); ?>
</div>


<?php
// Function to create a user review
function createReview($userId, $productId, $rating, $comment = "") {
    // Database connection parameters
    $servername = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbname = "mydatabase";

    try {
        // Create database connection
        $conn = new mysqli($servername, $dbUsername, $dbPassword, $dbname);
        
        // Check if the user exists
        $checkUserQuery = "SELECT id FROM users WHERE id = ?";
        $stmt = $conn->prepare($checkUserQuery);
        $stmt->bind_param("i", $userId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            throw new Exception("Invalid user ID");
        }
        
        // Check if the product exists
        $checkProductQuery = "SELECT id FROM products WHERE id = ?";
        $stmt = $conn->prepare($checkProductQuery);
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            throw new Exception("Invalid product ID");
        }
        
        // Validate rating
        if (!is_int($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }
        
        // Prepare the insert statement
        $insertReviewQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                             VALUES (?, ?, ?, ?)";
                             
        $stmt = $conn->prepare($insertReviewQuery);
        $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);
        
        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Error inserting review: " . $stmt->error);
        }
        
        // Return the review ID of the newly inserted review
        return $conn->insert_id;
        
    } catch (Exception $e) {
        // Log the error or handle it as needed
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
try {
    $reviewId = createReview(1, 5, 4, "Great product!");
    echo "Review created with ID: " . $reviewId;
} catch (Exception $e) {
    echo "Error creating review: " . $e->getMessage();
}
?>


<?php
// Function to submit a review
function submitReview($userId, $productId, $rating, $comment, $connection) {
    // Validate input
    if (empty($userId) || empty($productId) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    // Escape special characters to prevent SQL injection
    $comment = mysqli_real_escape_string($connection, $comment);
    
    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
              VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";
    
    if (mysqli_query($connection, $query)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($connection);
    }
}

// Function to get reviews for a product
function getReviews($productId, $connection) {
    // Get all reviews for the specified product
    $query = "SELECT r.id AS review_id,
                    u.username,
                    r.rating,
                    r.comment,
                    r.created_at
              FROM reviews r
              JOIN users u ON r.user_id = u.id
              WHERE r.product_id = '$productId'
              ORDER BY r.created_at DESC";

    $result = mysqli_query($connection, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Convert result to associative array
        $reviews = [];
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        return "No reviews found for this product.";
    }
}
?>


// Example usage of submitReview()
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $productId = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    $result = submitReview($userId, $productId, $rating, $comment, $connection);
    echo $result;
}

// Example usage of getReviews()
$productId = 1; // Replace with your product ID
$reviews = getReviews($productId, $connection);

if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Reviewer: " . $review['username'] . "</h3>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['created_at'] . "</small>";
        echo "</div>";
    }
}


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Create database connection
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // SQL query to insert review into the database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
                VALUES ('$user_id', '$product_id', '$rating', '$comment')";

        // Execute the query
        if (mysqli_query($conn, $sql)) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . mysqli_error($conn);
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close the database connection
        mysqli_close($conn);
    }
}
?>


// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "This product is great!";
$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result; // Outputs: Review submitted successfully!


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Create database connection
    $conn = mysqli_connect($host, $username, $password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . $stmt->error;
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close the statement and connection
        if ($stmt) {
            $stmt->close();
        }
        mysqli_close($conn);
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            echo "<p class='date'>" . $row['date'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Function to submit a new review
function submit_review($user_name, $comment, $rating) {
    global $conn;
    
    // Validate input
    if (empty($user_name) || empty($comment) || empty($rating)) {
        return "Please fill in all fields.";
    }
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $comment = mysqli_real_escape_string($conn, $comment);
    $rating = intval($rating);
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, comment, rating, date) VALUES ('$user_name', '$comment', '$rating', NOW())";
    if (mysqli_query($conn, $sql)) {
        return "Thank you for your review!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submit_review($_POST['user_name'], $_POST['comment'], $_POST['rating']);
    echo "<p class='message'>$result</p>";
}

// Review submission form
echo "<form method='post'>";
echo "<input type='text' name='user_name' placeholder='Your Name'>";
echo "<textarea name='comment' placeholder='Write your review...'></textarea>";
echo "<label>Rating:</label>";
echo "<select name='rating'>";
for ($i = 1; $i <= 5; $i++) {
    echo "<option value='$i'>$i stars</option>";
}
echo "</select>";
echo "<button type='submit'>Submit Review</button>";
echo "</form>";

// Display existing reviews
display_reviews();

// Close database connection
mysqli_close($conn);
?>

<style>
body {
    font-family: Arial, sans-serif;
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
}

.review {
    border: 1px solid #ddd;
    padding: 20px;
    margin-bottom: 20px;
    background-color: #f9f9f9;
    border-radius: 5px;
}

.stars .star {
    color: #FFD700;
    font-size: 24px;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);
}

h3 {
    margin-top: 0;
    color: #333;
}

.date {
    font-style: italic;
    color: #666;
}

form input,
form textarea {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    box-sizing: border-box;
}

select {
    padding: 10px;
    width: 200px;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}

.message {
    color: #333;
    margin-top: 20px;
}
</style>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function display_reviews() {
    global $conn;
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $user_name = $row['user_name'];
            $date = date('F j, Y', strtotime($row['timestamp']));
            
            // Display review
            echo "<div class='review'>";
            echo "<h3>$user_name</h3>";
            echo "<p>Rating: " . str_repeat("★", $rating) . "</p>";
            echo "<p>Comment: $comment</p>";
            echo "<small>Posted on $date</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }
}

function submit_review($user_name, $email, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }
    
    // Sanitize input
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, email, rating, comment) 
            VALUES ('$user_name', '$email', '$rating', '$comment')";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

function get_average_rating() {
    global $conn;
    
    // Get average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    return number_format((float)$row['average'], 1, '.', '');
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Submit review
    $result = submit_review($user_name, $email, $rating, $comment);
    if ($result === true) {
        echo "<p>Thank you for submitting your review!</p>";
    } else {
        echo "<p>Error: $result</p>";
    }
}

// Display average rating
echo "<h2>Rating: " . str_repeat("★", (int)get_average_rating()) . "</h2>";

// Display all reviews
display_reviews();
?>

<!-- HTML Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="user_name" placeholder="Your Name" required><br>
    <input type="email" name="email" placeholder="Your Email" required><br>
    <select name="rating" required>
        <option value="">Select Rating</option>
        <option value="1">1 Star</option>
        <option value="2">2 Stars</option>
        <option value="3">3 Stars</option>
        <option value="4">4 Stars</option>
        <option value="5">5 Stars</option>
    </select><br>
    <textarea name="comment" placeholder="Your Review" required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<!-- CSS Styling -->
<style>
.review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
}
.rating-stars {
    color: gold;
}
</style>


<?php
function submitUserReview($reviewText, $rating, $productId) {
    // Input validation
    if (empty($reviewText) || !is_numeric($rating) || $rating < 1 || $rating > 5 || !isset($productId)) {
        throw new InvalidArgumentException("Invalid review data");
    }

    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        throw new RuntimeException("Database connection failed: " . mysqli_error($conn));
    }

    try {
        // Sanitize inputs
        $reviewText = mysqli_real_escape_string($conn, $reviewText);
        $rating = intval($rating);
        $productId = intval($productId);

        // Insert into database
        $sql = "INSERT INTO reviews (product_id, review_text, rating, date_created) 
                VALUES ($productId, '$reviewText', $rating, NOW())";

        if (mysqli_query($conn, $sql)) {
            return true;
        } else {
            throw new RuntimeException("Error inserting review: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        // Log the error or handle as needed
        return false;
    } finally {
        mysqli_close($conn);
    }
}

// Example usage and testing
try {
    if (isset($_POST['submit'])) {
        $reviewText = $_POST['review_text'];
        $rating = $_POST['rating'];
        $productId = 1; // Replace with actual product ID

        if (submitUserReview($reviewText, $rating, $productId)) {
            echo "Thank you for your review!";
        } else {
            echo "Error submitting review. Please try again.";
        }
    }
} catch (Exception $e) {
    echo "An error occurred: " . $e->getMessage();
}
?>


<?php
// Function to handle review submissions and display reviews
function userReviewSystem() {
    // Configuration
    $reviewsFile = 'reviews.txt'; // File to store reviews
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $review = htmlspecialchars(trim($_POST['review']));
        $rating = intval($_POST['rating']);
        
        // Validate input
        if (empty($name) || empty($review)) {
            echo "<div class='error'>Please fill in all required fields!</div>";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "<div class='error'>Please select a valid rating (1-5 stars)!</div>";
            return;
        }
        
        // Get existing reviews
        if (file_exists($reviewsFile)) {
            $reviews = unserialize(file_get_contents($reviewsFile));
        } else {
            $reviews = array();
        }
        
        // Add new review
        $newReview = array(
            'name' => $name,
            'review' => $review,
            'rating' => $rating,
            'date' => date('F j, Y'),
        );
        array_unshift($reviews, $newReview); // Add to beginning of array
        
        // Save reviews back to file
        if (file_put_contents($reviewsFile, serialize($reviews)) === false) {
            echo "<div class='error'>Error saving review. Please try again later!</div>";
            return;
        }
        
        // Show success message
        echo "<div class='success'>Thank you for submitting your review!</div>";
    }
    
    // Display existing reviews
    if (file_exists($reviewsFile)) {
        $reviews = unserialize(file_get_contents($reviewsFile));
        
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>{$review['name']}</h3>";
                echo "<div class='rating'>{$review['rating']} stars</div>";
                // Display rating as stars
                echo "<div class='stars'>";
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo "<span style='color: gold;'>★</span>";
                }
                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                    echo "<span>☆</span>";
                }
                echo "</div>";
                echo "<p>{$review['review']}</p>";
                echo "<div class='date'>{$review['date']}</div>";
                echo "</div>";
            }
        } else {
            echo "<div>No reviews yet!</div>";
        }
    } else {
        // Create empty file if it doesn't exist
        touch($reviewsFile);
        echo "<div>No reviews yet!</div>";
    }
}

// Call the function
userReviewSystem();
?>


<?php
// Database connection details
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $rating = mysqli_real_escape_string($conn, $_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Validate input
        if ($username == "" || $rating == "" || $comment == "") {
            echo "Please fill in all fields!";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comment, review_date) 
                VALUES ('$username', '$rating', '$comment', NOW())";

        if ($conn->query($sql) === TRUE) {
            echo "Thank you for submitting your review!";
            header("Location: thank_you.php");
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "No reviews found!";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection setup
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display reviews
function displayReviews($productId = 1) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
        $stmt->execute([$productId]);
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>Reviewer: " . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p>Rating: " . $review['rating'] . "/5</p>";
                echo "<p>" . htmlspecialchars($review['content']) . "</p>";
                echo "<p>Date Posted: " . date('F j, Y', strtotime($review['created_at'])) . "</p>";
                echo "<div class='voting'>";
                echo "<button onclick='upvoteReview(" . $review['id'] . ")'>Upvote</button>";
                echo "<span id='upvote_count_" . $review['id'] . "'>" . $review['upvotes'] . "</span>";
                echo "<button onclick='downvoteReview(" . $review['id'] . ")'>Downvote</button>";
                echo "<span id='downvote_count_" . $review['id'] . "'>" . $review['downvotes'] . "</span>";
                echo "</div>";
                echo "</div>";
            }
        } else {
            echo "No reviews found for this product.";
        }
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Function to add a new review
function addReview($productId, $userId, $content, $rating = 5) {
    global $conn;
    
    if (empty($productId) || empty($userId) || empty($content)) {
        return false;
    }
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, content, rating) VALUES (?, ?, ?, ?)");
        $stmt->execute([$productId, $userId, $content, $rating]);
        
        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to delete a review
function deleteReview($reviewId, $userId, $isAdmin = false) {
    global $conn;
    
    try {
        if ($isAdmin || is_review_owner($reviewId, $userId)) {
            $stmt = $conn->prepare("DELETE FROM reviews WHERE id = ?");
            $stmt->execute([$reviewId]);
            
            if ($stmt->rowCount() > 0) {
                return true;
            } else {
                return false;
            }
        } else {
            return "You are not authorized to delete this review.";
        }
    } catch(PDOException $e) {
        echo "Error deleting review: " . $e->getMessage();
        return false;
    }
}

// Helper function to check if user is the owner of a review
function is_review_owner($reviewId, $userId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE id = ? AND user_id = ?");
        $stmt->execute([$reviewId, $userId]);
        
        return $stmt->rowCount() > 0;
    } catch(PDOException $e) {
        echo "Error checking review ownership: " . $e->getMessage();
        return false;
    }
}

// Function to upvote a review
function upvoteReview($reviewId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE reviews SET upvotes = upvotes + 1 WHERE id = ?");
        $stmt->execute([$reviewId]);
        
        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error upvoting review: " . $e->getMessage();
        return false;
    }
}

// Function to downvote a review
function downvoteReview($reviewId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE reviews SET downvotes = downvotes + 1 WHERE id = ?");
        $stmt->execute([$reviewId]);
        
        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error downvoting review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if (isset($_POST['add_review'])) {
    $productId = 1; // Replace with actual product ID
    $userId = 1; // Replace with current user ID
    $content = $_POST['review_content'];
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 5;
    
    if (addReview($productId, $userId, $content, $rating)) {
        echo "Review added successfully!";
    } else {
        echo "Error adding review.";
    }
}
?>


<?php
// Function to handle review submission
function submit_review() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize and validate input data
        $name = trim($_POST['name']);
        $email = trim($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate inputs
        if ($name == "" || $email == "" || $rating < 1 || $rating > 5) {
            echo "Please fill in all required fields and select a rating between 1-5.";
            return;
        }

        // Database connection (replace with your database credentials)
        $host = 'localhost';
        $db_username = 'username';
        $db_password = 'password';
        $dbname = 'database_name';

        try {
            $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_username, $db_password);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            // Insert review into database
            $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (:name, :email, :rating, :comment)");
            $stmt->execute(array(
                ':name' => $name,
                ':email' => $email,
                ':rating' => $rating,
                ':comment' => $comment
            ));

            // Success message
            echo "Thank you for submitting your review!";
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }

        // Close database connection
        $conn = null;
    }
}

// Function to display reviews
function display_reviews() {
    // Database connection (replace with your database credentials)
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $dbname = 'database_name';

    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Retrieve reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
        while($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }

    // Close database connection
    $conn = null;
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display review form
function show_review_form() {
    echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
    echo '<input type="text" name="name" placeholder="Your Name" required><br>';
    echo '<textarea name="review_text" placeholder="Write your review here..." rows="4" cols="50" required></textarea><br>';
    echo 'Rating: <select name="rating" required>';
    for ($i = 1; $i <= 5; $i++) {
        echo '<option value="' . $i . '">' . $i . ' Star' . ($i != 1 ? 's' : '') . '</option>';
    }
    echo '</select><br>';
    echo '<input type="submit" name="submit_review" value="Submit Review">';
    echo '</form>';
}

// Function to handle review submission
function submit_review($conn) {
    if (isset($_POST['submit_review'])) {
        // Sanitize input data
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);
        $rating = intval($_POST['rating']);

        // Validate rating
        if ($rating < 1 || $rating > 5) {
            die("Invalid rating. Please select a rating between 1 and 5.");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, review_text, rating, timestamp)
                VALUES ('$name', '$review_text', $rating, NOW())";

        if ($conn->query($sql) === TRUE) {
            echo "<p style='color: green; margin-bottom: 20px;'>Thank you for submitting your review!</p>";
            header("Refresh: 1; url=".$_SERVER['PHP_SELF']);
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function display_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($row['name']) . '</h3>';
            echo '<p>' . htmlspecialchars($row['review_text']) . '</p>';
            display_rating($row['rating']);
            echo '<small>Posted on: ' . $row['timestamp'] . '</small>';
            echo '</div>';
        }
    } else {
        echo "<p>No reviews found. Be the first to review!</p>";
    }
}

// Function to display rating stars
function display_rating($rating) {
    echo '<div class="stars">';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo '<span class="star">★</span>';
        } else {
            echo '<span class="star">☆</span>';
        }
    }
    echo '</div>';
}

// Main script
try {
    // Check if review was submitted
    submit_review($conn);

    // Display review form and reviews
    show_review_form();
    display_reviews($conn);
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function addReview($name, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags($name));
    $reviewText = htmlspecialchars(strip_tags($reviewText));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, review_text, rating) VALUES (:name, :review, :rating)");
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':review', $reviewText);
        $stmt->bindParam(':rating', $rating);
        
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY timestamp DESC");
        $stmt->execute();
        
        $averageRating = 0;
        $reviewCount = 0;
        $totalRating = 0;
        
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>" . $row['review_text'] . "</p>";
            echo "<div class='stars'>";
            
            for ($i = 1; $i <= $row['rating']; $i++) {
                echo "<span class='star'>★</span>";
            }
            
            if ($row['rating'] < 5) {
                for ($i = $row['rating'] + 1; $i <= 5; $i++) {
                    echo "<span class='star'>☆</span>";
                }
            }
            
            echo "</div>";
            echo "</div>";
            
            // Calculate average rating
            $totalRating += $row['rating'];
            $reviewCount++;
        }
        
        if ($reviewCount > 0) {
            $averageRating = $totalRating / $reviewCount;
            echo "<div class='stats'>";
            echo "Average Rating: " . number_format($averageRating, 1) . "/5";
            echo " | Total Reviews: " . $reviewCount;
            echo "</div>";
        }
        
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        
        .stars {
            display: inline-block;
            color: gold;
            font-size: 24px;
            margin-top: 5px;
        }
        
        .star {
            display: inline-block;
            width: 30px;
            text-align: center;
        }
        
        #reviewForm {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .stats {
            margin-top: 20px;
            font-weight: bold;
            color: #333;
        }
    </style>
</head>
<body>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $reviewText = $_POST['review'];
    $rating = $_POST['rating'];
    
    if (empty($name) || empty($reviewText)) {
        echo "<p style='color: red;'>Please fill in all required fields.</p>";
    } elseif (!ctype_digit($rating) || $rating < 1 || $rating > 5) {
        echo "<p style='color: red;'>Please select a valid rating (1-5 stars).</p>";
    } else {
        if (addReview($name, $reviewText, $rating, $conn)) {
            header("Location: index.php");
            exit();
        } else {
            echo "<p style='color: red;'>Error adding review. Please try again.</p>";
        }
    }
}
?>

<form id="reviewForm" method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <h2>Submit Your Review</h2>
    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br><br>
        
        <label for="review">Review:</label><br>
        <textarea id="review" name="review" rows="5" cols="50" required></textarea><br><br>
        
        <label for="rating">Rating (1-5 stars):</label><br>
        <select id="rating" name="rating">
            <?php for ($i = 1; $i <= 5; $i++) { ?>
                <option value="<?php echo $i; ?>"><?php echo $i; ?> Star<?php echo $i == 1 ? '' : 's'; ?></option>
            <?php } ?>
        </select><br><br>
        
        <input type="submit" value="Submit Review">
    </div>
</form>

<h2>Customer Reviews</h2>
<?php displayReviews($conn); ?>

</body>
</html>


function display_reviews($reviews, $item_name) {
    if (empty($reviews)) {
        return "No reviews available for this item.";
    }

    // Calculate average rating
    $total_rating = 0;
    foreach ($reviews as $review) {
        $total_rating += $review['rating'];
    }
    $average_rating = count($reviews) > 0 ? ($total_rating / count($reviews)) : 0;

    // Format the output
    $output = "<div class='review-container'>";
    $output .= "<h2>Reviews for " . htmlspecialchars($item_name) . "</h2>";
    $output .= "<p>Average Rating: " . number_format($average_rating, 2) . "/5</p>";
    $output .= "<hr>";

    foreach ($reviews as $review) {
        $stars = str_repeat('★', $review['rating']) . str_repeat('☆', 5 - $review['rating']);
        $output .= "<div class='review-item'>";
        $output .= "<h3>Review by " . htmlspecialchars($review['user']) . "</h3>";
        $output .= "<p>Rating: " . $stars . "</p>";
        $output .= "<p>" . htmlspecialchars($review['comment']) . "</p>";
        $output .= "<small>Posted on " . date('jS F Y', strtotime($review['date'])) . "</small>";
        $output .= "</div><hr>";
    }

    $output .= "</div>";
    
    return $output;
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($author, $review_text, $rating) {
    global $conn;

    // Sanitize inputs
    $author = mysqli_real_escape_string($conn, htmlspecialchars($author));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);

    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (author, review_text, rating, timestamp)
            VALUES ('$author', '$review_text', '$rating', NOW())";

    if ($conn->query($sql) === TRUE) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;

    // Fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $author = htmlspecialchars_decode($row['author']);
            $review_text = htmlspecialchars_decode($row['review_text']);
            $rating = $row['rating'];
            $timestamp = strtotime($row['timestamp']);

            // Display review
            echo "<div class='review'>";
            echo "<h3>Review by " . $author . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $rating) . str_repeat("☆", 5 - $rating) . "</p>";
            echo "<p>" . $review_text . "</p>";
            echo "<p class='date'>" . date('F j, Y g:i a', $timestamp) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews have been submitted yet.";
    }
}

// Example usage:

// Check if review submission form was submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = $_POST['name'];
    $review_text = $_POST['review'];
    $rating = $_POST['rating'];

    // Call submit_review function and display result
    echo submit_review($name, $review_text, $rating);
}

// Display review form
echo "<form method='post' action='" . htmlspecialchars($_SERVER['PHP_SELF']) . "'>";
echo "<input type='text' name='name' placeholder='Your Name' required><br>";
echo "<textarea name='review' placeholder='Write your review...' required></textarea><br>";
echo "Rating:<br>";
echo "<select name='rating'>";
for ($i = 1; $i <= 5; $i++) {
    echo "<option value='$i'>$i stars</option>";
}
echo "</select><br>";
echo "<input type='submit' value='Submit Review'>";
echo "</form>";

// Display existing reviews
display_reviews();

// Close database connection
$conn->close();
?>


<?php
// Database connection
$host = "localhost";
$user = "root";
$password = "";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn) {
    // Validate inputs
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {
        return false;
    }

    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        return false;
    }

    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment, timestamp) 
            VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)";

    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "issss", $product_id, $user_name, $user_email, $rating, $comment);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

function display_reviews($product_id, $conn) {
    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row['user_name']) . "</h4>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>" . date('jS M Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        return false;
    }

    // Calculate average rating
    $sql_avg = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = ?";
    
    $stmt_avg = mysqli_prepare($conn, $sql_avg);
    mysqli_stmt_bind_param($stmt_avg, "i", $product_id);

    if (mysqli_stmt_execute($stmt_avg)) {
        $result_avg = mysqli_stmt_get_result($stmt_avg);
        $row_avg = mysqli_fetch_assoc($result_avg);
        
        echo "<div class='average-rating'>";
        echo "Average Rating: " . round($row_avg['avg_rating'], 1) . "/5";
        echo "</div>";
    }
}

// Example usage:

if (isset($_POST['submit_review'])) {
    $product_id = 1; // Set your product ID
    $user_name = $_POST['name'];
    $user_email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    if (submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn)) {
        echo "Thank you for submitting your review!";
        // Refresh the page to show new review
        header("Refresh:1");
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Display review form
echo "<form method='post' action=''>
      <input type='text' name='name' placeholder='Your Name' required><br>
      <input type='email' name='email' placeholder='Your Email' required><br>
      <select name='rating' required>
          <option value='' selected>Rating</option>
          <option value='5'>★ ★ ★ ★ ★</option>
          <option value='4'>★ ★ ★ ★</option>
          <option value='3'>★ ★ ★</option>
          <option value='2'>★ ★</option>
          <option value='1'>★</option>
      </select><br>
      <textarea name='comment' placeholder='Your Review' required></textarea><br>
      <input type='submit' name='submit_review' value='Submit Review'>
      </form>";

// Display existing reviews for product ID 1
display_reviews(1, $conn);

mysqli_close($conn);
?>


<?php
// Function to create and display a user review form and process submitted reviews
function user_review() {
    // Check if the form has been submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Retrieve form data
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = intval($_POST['rating']);
        $comment = $_POST['comment'];

        // Validate input data
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("All fields are required!");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format!");
        }

        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars!");
        }

        // Database connection
        $host = 'localhost';
        $username = 'root';
        $password = '';
        $database = 'reviews_db';

        $conn = mysqli_connect($host, $username, $password, $database);

        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Insert review into the database
        $sql = "INSERT INTO reviews (name, email, rating, comment, submission_date)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = mysqli_prepare($conn, $sql);
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        mysqli_stmt_bind_param($stmt, "ssis", $name, $email, $rating, $comment);

        if (!mysqli_stmt_execute($stmt)) {
            die("Execute failed: " . mysqli_stmt_error($stmt));
        }

        // Close statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);

        // Display success message
        echo "<h3>Thank you for submitting your review!</h3>";
    } else {
        // Display the review form
        ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required><br>
                
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required><br>
                
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select Rating</option>
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select><br>

                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="4" cols="50" required></textarea><br>
                
                <input type="submit" value="Submit Review">
            </div>
        </form>
        <?php
    }

    // Display existing reviews from the database
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    $conn = mysqli_connect($host, $username, $password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        echo "<h3>Previous Reviews:</h3>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<strong>" . htmlspecialchars($row['name']) . "</strong><br>";
            echo "Email: " . htmlspecialchars($row['email']) . "<br>";
            echo "Rating: " . str_repeat("★", $row['rating']) . "<br>";
            echo "Comment: " . htmlspecialchars($row['comment']) . "<br>";
            echo "Submitted on: " . htmlspecialchars($row['submission_date']) . "<br><br>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

// Check for connection errors
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display the review form
function displayReviewForm() {
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="rating">Rating:</label>
            <select id="rating" name="rating" required>
                <option value="">Select a rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        <div>
            <label for="comment">Comment:</label>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>
    <?php
}

// Function to save a review to the database
function saveReview($conn) {
    if (isset($_POST['submit_review'])) {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Check if this is an edit or a new review
        if (isset($_GET['review_id'])) {
            $review_id = intval($_GET['review_id']);
            $sql = "UPDATE reviews SET name='$name', email='$email', rating='$rating', comment='$comment' WHERE id='$review_id'";
        } else {
            $sql = "INSERT INTO reviews (name, email, rating, comment) VALUES ('$name', '$email', '$rating', '$comment')";
        }

        if (mysqli_query($conn, $sql)) {
            echo "Review saved successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Function to display all reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            ?>
            <div class="review">
                <h3><?php echo $row['name']; ?></h3>
                <p>Email: <?php echo $row['email']; ?></p>
                <p>Rating: <?php echo str_repeat("★", $row['rating']); ?></p>
                <p>Comment: <?php echo $row['comment']; ?></p>
                <small><?php echo date('j F Y, g:i a', strtotime($row['date'])); ?></small>
            </div>
            <?php
        }
    } else {
        echo "No reviews found.";
    }
}

// Main function to handle the review process
function handleReviews() {
    global $conn;
    
    // Check if we're editing an existing review
    if (isset($_GET['review_id'])) {
        $review_id = intval($_GET['review_id']);
        
        // Display edit form with existing data
        $sql = "SELECT * FROM reviews WHERE id='$review_id'";
        $result = mysqli_query($conn, $sql);
        
        if ($row = mysqli_fetch_assoc($result)) {
            ?>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>?review_id=<?php echo $review_id; ?>">
                <div>
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" value="<?php echo $row['name']; ?>" required>
                </div>
                <div>
                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" value="<?php echo $row['email']; ?>" required>
                </div>
                <div>
                    <label for="rating">Rating:</label>
                    <select id="rating" name="rating" required>
                        <?php
                        $ratings = array(5, 4, 3, 2, 1);
                        foreach ($ratings as $rating) {
                            $selected = ($rating == $row['rating']) ? "selected='selected'" : "";
                            echo "<option value='$rating' $selected>$rating Stars</option>";
                        }
                        ?>
                    </select>
                </div>
                <div>
                    <label for="comment">Comment:</label>
                    <textarea id="comment" name="comment" rows="4"><?php echo $row['comment']; ?></textarea>
                </div>
                <button type="submit" name="submit_review">Update Review</button>
            </form>
            <?php
        } else {
            echo "Review not found.";
        }
    } else {
        // Display the review form or all reviews
        displayReviewForm();
        displayReviews($conn);
    }
}

// Call the main function
handleReviews();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_name VARCHAR(255),
    email VARCHAR(255),
    rating INT,
    review_text TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to add a new review
function addReview($product_id, $user_name, $email, $rating, $review_text) {
    global $conn;

    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $email = mysqli_real_escape_string($conn, $email);
    $rating = (int)$rating;
    $review_text = mysqli_real_escape_string($conn, $review_text);

    // Check if rating is valid
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, email, rating, review_text) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $user_name, $email, $rating, $review_text);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function getReviews($product_id) {
    global $conn;

    $reviews = array();
    
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $reviews[] = $row;
    }

    return $reviews;
}

// Function to display reviews
function displayReviews($product_id) {
    $reviews = getReviews($product_id);
    
    if (!empty($reviews)) {
        echo "<div class='reviews'>";
        foreach ($reviews as $review) {
            echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
                echo "<small>Posted on: " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
}
?>


<?php
include 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $review_text = $_POST['review_text'];

    if (addReview($product_id, $user_name, $email, $rating, $review_text)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Review could not be submitted.";
    }
}
?>


<?php
include 'review_functions.php';

// Replace with actual product ID
$product_id = 1;
displayReviews($product_id);
?>


<?php
// Database connection configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die('Could not connect: ' . mysqli_error($conn));
}

// Function to add a new review
function addReview($user_id, $product_id, $rating, $comment, $conn) {
    // Sanitize input
    $rating = htmlspecialchars($rating);
    $comment = htmlspecialchars($comment);

    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES (?, ?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);
        
        if (!mysqli_stmt_execute($stmt)) {
            return "Error saving review: " . mysqli_error($conn);
        }
        // Close statement
        mysqli_stmt_close($stmt);
        return true;
    } else {
        return "Prepare failed: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($product_id, $conn) {
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        
        if (mysqli_stmt_execute($stmt)) {
            $result = mysqli_stmt_get_result($stmt);

            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review'>";
                echo "<div class='rating'>";
                for ($i = 1; $i <= $row['rating']; $i++) {
                    echo "<span class='star'>★</span>";
                }
                echo "</div>";
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
                echo "</div>";
            }

            // Close statement
            mysqli_stmt_close($stmt);
        } else {
            return "Error displaying reviews: " . mysqli_error($conn);
        }
    } else {
        return "Prepare failed: " . mysqli_error($conn);
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_SESSION['user_id']; // Assuming user is authenticated and session exists
    $product_id = 1; // Replace with your product ID logic
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    $result = addReview($user_id, $product_id, $rating, $comment, $conn);
    
    if ($result === true) {
        header("Location: review.php"); // Redirect back to the review page
        exit();
    } else {
        echo "<p class='error'>" . $result . "</p>";
    }
}

// Display the review form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .rating {
            color: #ffd700;
            font-size: 24px;
            margin-bottom: 10px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        .star {
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="review-container">
        <!-- Review Form -->
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <h2>Write a Review</h2>
            <div class="rating-select">
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select Rating</option>
                    <option value="1">★</option>
                    <option value="2">★★</option>
                    <option value="3">★★★</option>
                    <option value="4">★★★★</option>
                    <option value="5">★★★★★</option>
                </select><br><br>
            </div>
            <textarea id="comment" name="comment" rows="5" cols="60" placeholder="Write your review here..." required></textarea><br><br>
            <input type="submit" value="Submit Review">
        </form>

        <!-- Display Reviews -->
        <?php
        // Replace 1 with your actual product ID
        displayReviews(1, $conn);
        ?>

    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Function to add user review
function add_review($review_text, $rating, $user_id, $product_id) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Create database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Prepare SQL query to insert review
    $sql = "INSERT INTO reviews (review_text, rating, user_id, product_id, review_date)
            VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

    // Prepare statement
    $stmt = $conn->prepare($sql);

    // Check if statement was prepared successfully
    if ($stmt === false) {
        echo "Error preparing SQL statement: " . $conn->error;
        return false;
    }

    // Bind parameters to the statement
    $stmt->bind_param("sisii", $review_text, $rating, $user_id, $product_id);

    // Execute the query
    if ($stmt->execute()) {
        echo "Review added successfully!";
        return true;
    } else {
        echo "Error adding review: " . $stmt->error;
        return false;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
$review_text = "Great product, highly recommended!";
$rating = 5;
$user_id = 1;
$product_id = 1;

add_review($review_text, $rating, $user_id, $product_id);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>{$row['reviewer_name']}</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: {$row['reviewer_email']}</p>";
            echo "<p>Comment: {$row['comment']}</p>";
            echo "<small>Posted on: {$row['review_date']}</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

function submit_review() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $name = trim(htmlspecialchars($_POST['reviewer_name']));
        $email = trim(htmlspecialchars($_POST['reviewer_email']));
        $rating = (int)trim(htmlspecialchars($_POST['rating']));
        $comment = trim(htmlspecialchars($_POST['comment']));

        // Validate input data
        $errors = [];
        
        if (empty($name)) {
            $errors[] = "Name is required!";
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Valid email is required!";
        }
        
        if ($rating < 1 || $rating > 5) {
            $errors[] = "Rating must be between 1 and 5 stars!";
        }
        
        if (strlen($comment) < 5 || strlen($comment) > 1000) {
            $errors[] = "Comment must be between 5 and 1000 characters!";
        }

        // Display errors if any
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        } else {
            // Insert into database
            $sql = "INSERT INTO reviews (reviewer_name, reviewer_email, rating, comment, review_date)
                    VALUES ('$name', '$email', '$rating', '$comment', NOW())";
            
            if ($conn->query($sql) === TRUE) {
                echo "<div class='success'>Review submitted successfully!</div>";
            } else {
                echo "<div class='error'>Error: " . $conn->error . "</div>";
            }
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment, $conn) {
    // Check if the user has already reviewed this product
    $checkQuery = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, 'ii', $userId, $productId);
    mysqli_execute($stmt);
    
    if (mysqli_stmt_affected_rows($stmt) > 0) {
        return "You have already reviewed this product!";
    }

    // Insert the new review
    $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                    VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, 'iiis', $userId, $productId, $rating, $comment);

    if (mysqli_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews for a product
function displayReviews($productId, $conn) {
    $reviewsQuery = "SELECT r.id, r.rating, r.comment, u.username, r.created_at 
                    FROM reviews r 
                    JOIN users u ON r.user_id = u.id 
                    WHERE r.product_id = ? 
                    ORDER BY r.created_at DESC";
    
    $stmt = mysqli_prepare($conn, $reviewsQuery);
    mysqli_stmt_bind_param($stmt, 'i', $productId);
    mysqli_execute($stmt);

    $result = mysqli_stmt_get_result($stmt);
    $averageRating = calculateAverageRating($productId, $conn);
    
    echo "<h3>Product Reviews</h3>";
    echo "<p>Average Rating: " . number_format($averageRating, 1) . "/5</p>";
    
    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet!</p>";
        return;
    }

    while ($row = mysqli_fetch_assoc($result)) {
        $username = $row['username'];
        $rating = $row['rating'];
        $comment = $row['comment'];
        $created_at = date('M j, Y g:i a', strtotime($row['created_at']));

        // Display star rating
        echo "<div class='review'>";
        echo "<h4>Reviewed by: " . $username . "</h4>";
        echo "<p>Rating: ";
        for ($i = 1; $i <= $rating; $i++) {
            echo "★";
        }
        for ($i = $rating + 1; $i <=5; $i++) {
            echo "☆";
        }
        echo "</p>";
        echo "<p>" . $comment . "</p>";
        echo "<small>Posted on: " . $created_at . "</small>";
        echo "</div><br>";
    }
}

// Function to calculate average rating
function calculateAverageRating($productId, $conn) {
    $averageQuery = "SELECT AVG(rating) as average 
                    FROM reviews 
                    WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $averageQuery);
    mysqli_stmt_bind_param($stmt, 'i', $productId);
    mysqli_execute($stmt);

    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['average'];
}

// Example usage
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $productId = 1; // Specific product ID
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    $message = submitReview($userId, $productId, $rating, $comment, $conn);
    echo "<script>alert('" . $message . "');</script>";
}

displayReviews(1, $conn); // Display reviews for product ID 1

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'review_system';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    user_email VARCHAR(255),
    rating INT,
    review_text TEXT,
    review_date DATETIME
)";

if (mysqli_query($conn, $sql)) {
    // Table created successfully
} else {
    echo "Error creating table: " . mysqli_error($conn);
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $user_name = mysqli_real_escape_string($conn, $_POST['name']);
    $user_email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = intval($_POST['rating']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review']);

    // Validate email
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, review_text, review_date) 
            VALUES ('$user_name', '$user_email', '$rating', '$review_text', NOW())";

    if (mysqli_query($conn, $sql)) {
        echo "<script>alert('Thank you for your review!');</script>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Display all reviews
$sql = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    // Calculate average rating
    $total_ratings = 0;
    $average_rating = 0;

    while ($row = mysqli_fetch_assoc($result)) {
        $total_ratings += $row['rating'];
    }

    $num_reviews = mysqli_num_rows(mysqli_query($conn, "SELECT * FROM reviews"));
    if ($num_reviews > 0) {
        $average_rating = $total_ratings / $num_reviews;
    } else {
        $average_rating = 0;
    }

    // Display average rating
    echo "<h3>Average Rating: " . round($average_rating, 1) . "/5</h3>";
    
    // Display reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 10px 0;'>";
        echo "<h4>" . $row['user_name'] . "</h4>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . nl2br($row['review_text']) . "</p>";
        echo "<small>Reviewed on: " . date('F j, Y', strtotime($row['review_date'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet!</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
            color: #ddd;
        }
        
        .star-checked {
            color: orange !important;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <div style="margin-bottom: 30px;">
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <p>Name:<br>
            <input type="text" name="name" required></p>
            
            <p>Email:<br>
            <input type="email" name="email" required></p>
            
            <p>Rating:
                <span class="rating-stars">
                    <input type="radio" name="rating" value="5">★
                    <input type="radio" name="rating" value="4">★
                    <input type="radio" name="rating" value="3">★
                    <input type="radio" name="rating" value="2">★
                    <input type="radio" name="rating" value="1">★
                </span>
            </p>
            
            <p>Review:<br>
            <textarea name="review" rows="5" cols="40" required></textarea></p>
            
            <input type="submit" value="Submit Review">
        </form>
    </div>
</body>
</html>


<?php
// Function to handle user reviews
function userReview() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        $username = isset($_SESSION['username']) ? $_SESSION['username'] : 'Anonymous';

        // Validate input
        if (!isset($rating) || !isset($comment)) {
            echo "<script>alert('Please fill in all fields.');</script>";
            return;
        }

        // Sanitize input data
        $rating = intval($rating);
        $comment = htmlspecialchars(trim($comment));
        $username = htmlspecialchars(trim($username));

        // Create review array
        $review = [
            'id' => uniqid(),
            'user' => $username,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => date('Y-m-d H:i:s'),
            'approved' => 0, // 0 = pending approval, 1 = approved
        ];

        // Store review in file (you can modify to store in database)
        $reviewsFile = "reviews.json";
        
        if (file_exists($reviewsFile)) {
            $data = json_decode(file_get_contents($reviewsFile), true);
            array_push($data['reviews'], $review);
        } else {
            $data = ['reviews' => [$review]];
        }

        // Save the updated data
        file_put_contents($reviewsFile, json_encode($data, JSON_PRETTY_PRINT));

        // Show success message
        echo "<script>alert('Thank you for your review!');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .rating-stars {
            font-size: 24px;
            color: gold;
        }
        .rating-stars input[type="radio"] {
            display: none;
        }
        .rating-stars label {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Review</h2>
        <?php
        // Display review form
        if (!isset($_POST['submit'])) {
            echo '
                <form method="post" action="">
                    <p>Please rate this product:</p>
                    <div class="rating-stars">
                        <input type="radio" id="5-star" name="rating" value="5">
                        <label for="5-star">★</label>
                        <input type="radio" id="4-star" name="rating" value="4">
                        <label for="4-star">★</label>
                        <input type="radio" id="3-star" name="rating" value="3">
                        <label for="3-star">★</label>
                        <input type="radio" id="2-star" name="rating" value="2">
                        <label for="2-star">★</label>
                        <input type="radio" id="1-star" name="rating" value="1">
                        <label for="1-star">★</label>
                    </div>

                    <p>Write your review:</p>
                    <textarea name="comment" rows="5" cols="40" required></textarea><br>

                    <input type="submit" name="submit" value="Submit Review">
                </form>';
        }
        ?>

        <!-- Display saved reviews -->
        <?php
        $reviewsFile = "reviews.json";
        
        if (file_exists($reviewsFile)) {
            $data = json_decode(file_get_contents($reviewsFile), true);
            
            foreach ($data['reviews'] as $review) {
                echo '<div style="margin: 20px 0; padding: 10px; border: 1px solid #ddd; border-radius: 3px;">';
                echo "<strong>{$review['user']}</strong> - {$review['rating']} stars<br>";
                echo "<em>" . date('F j, Y g:i a', strtotime($review['timestamp'])) . "</em><br>";
                echo $review['comment'];
                echo '</div>';
            }
        }
        ?>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews_db';

try {
    $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, email, rating, comment, review_date) 
                              VALUES (:product_id, :user_name, :email, :rating, :comment, NOW())");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        return true;
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to get reviews for a product
function getReviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = :product_id ORDER BY review_date DESC");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die("Error fetching reviews: " . $e->getMessage());
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = :product_id");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return number_format($result['average'], 1, '.', '');
    } catch(PDOException $e) {
        die("Error calculating average rating: " . $e->getMessage());
    }
}

// Function to display reviews
function displayReviews($product_id) {
    $reviews = getReviews($product_id);
    
    if(empty($reviews)) {
        echo "<p>No reviews available for this product.</p>";
        return;
    }
    
    // Display average rating
    $average_rating = getAverageRating($product_id);
    echo "<h3>Product Rating: $average_rating/5</h3>";
    
    // Display individual reviews
    foreach ($reviews as $review) {
        echo "<div class='review'>";
            echo "<div class='review-header'>";
                echo "<span class='user-name'>{$review['user_name']}</span>";
                echo "<span class='rating'>";
                    for($i = 1; $i <= $review['rating']; $i++) {
                        echo "<span class='star'>★</span>";
                    }
                echo "</span>";
                echo "<span class='date'>{$review['review_date']}</span>";
            echo "</div>";
            
            echo "<div class='review-body'>";
                echo "<p>{$review['comment']}</p>";
            echo "</div>";
        echo "</div>";
    }
}
?>


<?php displayReviews($product_id); ?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to add a new review
function addReview($productId, $userName, $rating, $comment) {
    global $conn;
    
    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            (product_id, user_name, rating, comment, submission_date)
            VALUES (:product_id, :user_name, :rating, :comment, NOW())
        ");
        
        $stmt->bindParam(':product_id', $productId);
        $stmt->bindParam(':user_name', $userName);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to fetch all reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("
            SELECT * 
            FROM reviews 
            WHERE product_id = :product_id 
            ORDER BY submission_date DESC
        ");
        
        $stmt->bindParam(':product_id', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to calculate and display average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("
            SELECT 
                COUNT(rating) AS total_reviews,
                AVG(rating) AS average_rating 
            FROM reviews 
            WHERE product_id = :product_id
        ");
        
        $stmt->bindParam(':product_id', $productId);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['total_reviews'] > 0) {
            return number_format($result['average_rating'], 1, '.', '');
        } else {
            return 'No ratings yet';
        }
    } catch (PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
        return false;
    }
}

// Function to moderate reviews (delete a review)
function deleteReview($reviewId, $isAdmin = false) {
    global $conn;
    
    // Only admins can delete reviews
    if (!$isAdmin) {
        return false;
    }
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("
            DELETE FROM reviews 
            WHERE review_id = :review_id
        ");
        
        $stmt->bindParam(':review_id', $reviewId);
        $stmt->execute();
        
        return true;
    } catch (PDOException $e) {
        echo "Error deleting review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add a new review
    if (isset($_POST['submit_review'])) {
        $productId = $_POST['product_id'];
        $userName = htmlspecialchars($_POST['user_name']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);
        
        // Validate input
        if ($rating < 1 || $rating > 5) {
            die("Invalid rating. Please select a rating between 1 and 5.");
        }
        
        addReview($productId, $userName, $rating, $comment);
    }
}

// Display reviews for product ID 1
$reviews = getReviews(1);

if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
        echo "<p><strong>" . htmlspecialchars($review['user_name']) . "</strong></p>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "<small>Submitted on: " . $review['submission_date'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
echo "<h4>Average Rating: " . getAverageRating(1) . "/5</h4>";

?>


<?php
function createReview($reviewText, $rating, $userId, $productId) {
    // Database connection parameters
    $host = 'localhost';  // Replace with your database host
    $username = 'username';  // Replace with your database username
    $password = 'password';  // Replace with your database password
    $database = ' dbname';   // Replace with your database name

    // Create connection
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check connection
    if (!$conn) {
        throw new Exception("Connection failed: " . mysqli_connect_error());
    }

    try {
        // SQL statement to insert review
        $sql = "INSERT INTO reviews (review_text, rating, user_id, product_id)
                VALUES (?, ?, ?, ?)";

        $stmt = mysqli_prepare($conn, $sql);

        if ($stmt === false) {
            throw new Exception("Prepare failed: " . mysqli_error($conn));
        }

        // Bind parameters
        mysqli_stmt_bind_param($stmt, "ssii", $reviewText, $rating, $userId, $productId);

        // Validate input data
        if (empty($reviewText) || empty($rating) || empty($userId) || empty($productId)) {
            throw new Exception("All fields are required");
        }

        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Execute the statement
        $result = mysqli_stmt_execute($stmt);

        if (!$result) {
            throw new Exception("Execute failed: " . mysqli_stmt_error($stmt));
        }

        // Close statements and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);

        return true;

    } catch (Exception $e) {
        // Log the error or display it to the user
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


// Example usage:
$reviewText = "Great product!";
$rating = 5;
$userId = 123;
$productId = 456;

if (createReview($reviewText, $rating, $userId, $productId)) {
    echo "Review added successfully!";
}


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Validate input
    if (empty($user_id) || empty($product_id) || empty($rating)) {
        return "All fields must be filled out";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    // Connect to database
    $db_host = 'localhost';
    $db_name = 'your_database';
    $db_user = 'your_username';
    $db_pass = 'your_password';

    $conn = mysqli_connect($db_host, $db_user, $db_pass, $db_name);
    
    if (!$conn) {
        return "Database connection failed: " . mysqli_connect_error();
    }

    // Prepare and execute SQL statement
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (?, ?, ?, ?, NOW())";
            
    $stmt = mysqli_prepare($conn, $sql);
    
    if (!$stmt) {
        return "SQL error: " . mysqli_error($conn);
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        $affected_rows = mysqli_stmt_affected_rows($stmt);
        
        if ($affected_rows == 1) {
            return "Thank you for your review!";
        } else {
            return "Review submission failed";
        }
    } else {
        return "Error: " . mysqli_error($conn);
    }

    // Close statement and connection
    mysqli_stmt_close($stmt);
    mysqli_close($conn);
}

// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "Great product! Highly recommended.";

$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result;
?>


<?php
// Review submission and display function
function handleReviews($product_id) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Submit review
    if (isset($_POST['submit_review'])) {
        // Sanitize inputs
        $name = mysqli_real_escape_string($conn, $_POST['reviewer_name']);
        $email = mysqli_real_escape_string($conn, $_POST['reviewer_email']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Validate inputs
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            echo "Please fill in all fields.";
        } else {
            // Insert review into database
            $stmt = mysqli_prepare($conn, "INSERT INTO reviews (product_id, user_name, user_email, rating, comment, timestamp) VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)");
            mysqli_stmt_bind_param($stmt, "issssi", $product_id, $name, $email, $rating, $comment);
            
            if (mysqli_stmt_execute($stmt)) {
                echo "<div class='success'>Thank you for submitting your review!</div>";
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Display reviews
    $query = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $avg_query = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = ?";
        $avg_stmt = mysqli_prepare($conn, $avg_query);
        mysqli_stmt_bind_param($avg_stmt, "i", $product_id);
        mysqli_stmt_execute($avg_stmt);
        $avg_result = mysqli_stmt_get_result($avg_stmt);
        $row = mysqli_fetch_assoc($avg_result);
        $average_rating = number_format((float)$row['avg_rating'], 1, '.', '');

        echo "<h3>Customer Reviews</h3>";
        echo "<p class='rating'>Average Rating: " . $average_rating . "/5 (" . mysqli_num_rows($result) . " reviews)</p>";

        // Display each review
        while ($review = mysqli_fetch_assoc($result)) {
            $stars_html = str_repeat("<span class='star'>★</span>", $review['rating']);
            $date = date("d/m/Y H:i", strtotime($review['timestamp']));
            
            echo "<div class='review'>";
            echo "<div class='review-header'>";
            echo "<strong>" . $review['user_name'] . "</strong>";
            echo "<span class='stars'>" . $stars_html . "</span>";
            echo "<small>(" . $date . ")</small>";
            echo "</div>";
            echo "<p class='comment'>" . $review['comment'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }

    // Close database connection
    mysqli_close($conn);
}

// Display review form
function displayReviewForm() {
    ?>
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <div class="form-group">
            <label for="reviewer_name">Name:</label>
            <input type="text" id="reviewer_name" name="reviewer_name" required>
        </div>

        <div class="form-group">
            <label for="reviewer_email">Email:</label>
            <input type="email" id="reviewer_email" name="reviewer_email" required>
        </div>

        <div class="form-group">
            <label>Rating:</label><br>
            <?php
            // Display rating stars
            for ($i = 1; $i <= 5; $i++) {
                echo "<input type='radio' name='rating' value='$i'>★ ";
            }
            ?>
        </div>

        <div class="form-group">
            <label for="comment">Review:</label>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>

        <button type="submit" name="submit_review">Submit Review</button>
    </form>
    <?php
}

// Usage example:
if (isset($_GET['product_id'])) {
    displayReviewForm();
    handleReviews($_GET['product_id']);
}
?>


<?php
// Connect to database
$connection = mysqli_connect("localhost", "username", "password", "database");

function submitReview($review_id, $user_id, $rating, $comment = "", $timestamp) {
    global $connection;

    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please enter a number between 1 and 5.";
    }

    // Prepare SQL statement with placeholders for parameters
    $sql = "INSERT INTO reviews (review_id, user_id, rating, comment, timestamp) 
            VALUES (?, ?, ?, ?, ?)";

    try {
        // Create a prepared statement
        $stmt = mysqli_prepare($connection, $sql);

        // Bind the parameters to the statement
        mysqli_stmt_bind_param($stmt, "issis", $review_id, $user_id, $rating, $comment, $timestamp);

        // Execute the query
        mysqli_stmt_execute($stmt);

        // Check if the query was successful
        if (mysqli_stmt_affected_rows($stmt) == 1) {
            // Return success message
            return "Review submitted successfully!";
        } else {
            // Return error message
            return "Error submitting review.";
        }
    } catch (Exception $e) {
        // Return error message if something goes wrong
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
$review_id = 1;
$user_id = 5;
$rating = 4;
$comment = "Great product!";
$current_timestamp = date("Y-m-d H:i:s");

$result = submitReview($review_id, $user_id, $rating, $comment, $current_timestamp);
echo $result;

// Close database connection
mysqli_close($connection);
?>


<?php
// Include database configuration
require_once('config.php');

function addReview($reviewText, $rating, $userId, $productId) {
    // Connect to the database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Validate input
    if (empty($reviewText) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        echo "Invalid review data!";
        return false;
    }

    try {
        // Escape special characters to prevent SQL injection
        $reviewText = mysqli_real_escape_string($conn, $reviewText);
        
        // Insert the review into the reviews table
        $sql = "INSERT INTO reviews (review_text, rating, user_id, product_id, review_date) 
                VALUES (?, ?, ?, ?, NOW())";
                
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssii", $reviewText, $rating, $userId, $productId);

        if ($stmt->execute()) {
            // Update the average rating for the product
            $sqlAvg = "UPDATE products SET 
                        average_rating = (SELECT AVG(rating) FROM reviews WHERE product_id = ?),
                        review_count = (SELECT COUNT(*) FROM reviews WHERE product_id = ?)
                      WHERE id = ?";
            
            $stmtAvg = $conn->prepare($sqlAvg);
            $stmtAvg->bind_param("iii", $productId, $productId, $productId);
            
            if ($stmtAvg->execute()) {
                return true;
            } else {
                echo "Error updating average rating: " . $stmtAvg->error;
                return false;
            }
        } else {
            echo "Error adding review: " . $stmt->error;
            return false;
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        $conn->close();
    }
}

// Example usage:
// require_once('config.php');
// $reviewText = $_POST['review'];
// $rating = $_POST['rating'];
// $userId = 1; // Get from session or authentication
// $productId = 1; // Get from URL parameter

// if (addReview($reviewText, $rating, $userId, $productId)) {
//     echo "Review added successfully!";
// } else {
//     echo "Failed to add review.";
// }
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($productId, $author, $email, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $author = mysqli_real_escape_string($conn, $author);
    $email = mysqli_real_escape_string($conn, $email);
    $reviewText = mysqli_real_escape_string($conn, $reviewText);
    
    // Check if rating is valid
    if (!ctype_digit((string)$rating) || $rating < 1 || $rating > 5) {
        die("Invalid rating");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, author, email, review_text, rating, timestamp)
            VALUES ('$productId', '$author', '$email', '$reviewText', '$rating', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        header("Location: product.php?id=$productId");
        exit();
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($productId, $conn) {
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $averageRatingSql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$productId'";
        $averageRatingResult = mysqli_query($conn, $averageRatingSql);
        $averageRatingRow = mysqli_fetch_assoc($averageRatingResult);
        $averageRating = number_format((float)$averageRatingRow['average_rating'], 1, '.', '');
        
        echo "<div class='reviews'>";
        echo "<h2>Customer Reviews</h2>";
        echo "<p>Average Rating: $averageRating/5</p>";
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<div class='review-author'>" . $row['author'] . "</div>";
            echo "<div class='review-rating'>";
            displayStars($row['rating']);
            echo "</div>";
            echo "<div class='review-text'>" . nl2br($row['review_text']) . "</div>";
            echo "<div class='review-date'>" . date('F j, Y g:i a', strtotime($row['timestamp'])) . "</div>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "No reviews yet. Be the first to review this product!";
    }
}

// Function to display rating stars
function displayStars($rating) {
    $fullStars = floor($rating);
    $halfStar = ($rating - $fullStars) >= 0.5 ? 1 : 0;
    
    for ($i = 0; $i < $fullStars; $i++) {
        echo "<span class='star'>★</span>";
    }
    
    if ($halfStar) {
        echo "<span class='star half'>⯨</span>";
    }
    
    for ($i = $fullStars + $halfStar; $i < 5; $i++) {
        echo "<span class='star empty'>☆</span>";
    }
}

// Example usage:
// submitReview(1, "John Doe", "john@example.com", "Great product!", 5, $conn);
// displayReviews(1, $conn);

mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_name VARCHAR(255),
    user_email VARCHAR(255),
    review_text TEXT,
    rating INT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";
mysqli_query($conn, $sql);

// Function to display all reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $total_ratings = 0;
        $num_reviews = 0;

        while ($row = mysqli_fetch_assoc($result)) {
            $total_ratings += $row['rating'];
            $num_reviews++;
        }

        $average_rating = $num_reviews > 0 ? number_format(($total_ratings / $num_reviews), 1) : 0;
        
        // Reset result pointer
        mysqli_data_seek($result, 0);

        echo '<div class="review-container">';
        echo "<h3>Rating: $average_rating/5 ($num_reviews reviews)</h3>";

        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review-item">';
            echo "<h4>{$row['user_name']}</h4>";
            echo "<p>{$row['review_text']}</p>";
            
            // Display stars
            $stars = str_repeat('<i class="fas fa-star"></i>', $row['rating']);
            $empty_stars = str_repeat('<i class="far fa-star"></i>', 5 - $row['rating']);
            echo "<div class=\"stars\">{$stars}{$empty_stars}</div>";
            
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            echo '</div>';
        }
        echo '</div>';
    } else {
        echo '<p>No reviews yet. Be the first to review this product!</p>';
    }
}

// Function to submit a new review
function submit_review() {
    global $conn;

    if (isset($_POST['submit-review'])) {
        // Validate and sanitize input
        $product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;
        $user_name = mysqli_real_escape_string($conn, trim($_POST['review-name']));
        $user_email = mysqli_real_escape_string($conn, trim($_POST['review-email']));
        $review_text = mysqli_real_escape_string($conn, trim($_POST['review-text']));
        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;

        if (empty($user_name) || empty($user_email) || empty($review_text) || $rating < 1 || $rating > 5) {
            echo '<div class="error">Please fill in all required fields and select a valid rating.</div>';
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_name, user_email, review_text, rating) 
                VALUES (?, ?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 'isssi', $product_id, $user_name, $user_email, $review_text, $rating);

        if (mysqli_stmt_execute($stmt)) {
            echo '<div class="success">Thank you for your review!</div>';
            // Refresh reviews section
            display_reviews($product_id);
        } else {
            echo '<div class="error">Error submitting review. Please try again later.</div>';
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php display_reviews(1); ?>


<?php
class ReviewSystem {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Add a new review
    public function addReview($user_id, $product_id, $rating, $comment) {
        try {
            // Validate input
            if (!is_numeric($user_id) || !is_numeric($product_id) || 
                $rating < 1 || $rating > 5 || empty($comment)) {
                throw new Exception("Invalid input data");
            }

            // Check if user and product exist
            $this->checkUserExists($user_id);
            $this->checkProductExists($product_id);

            // Insert review into database
            $stmt = $this->conn->prepare("
                INSERT INTO reviews (user_id, product_id, rating, comment)
                VALUES (?, ?, ?, ?)
            ");
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
            $stmt->execute();

            // Update average rating for the product
            $this->updateProductRating($product_id);

            return "Review added successfully";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Get all reviews for a product
    public function getReviewsByProductId($product_id) {
        try {
            $this->checkProductExists($product_id);

            $stmt = $this->conn->prepare("
                SELECT r.*, u.username 
                FROM reviews r 
                JOIN users u ON r.user_id = u.id 
                WHERE product_id = ?
                ORDER BY review_date DESC
            ");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            return $result->fetch_all(MYSQLI_ASSOC);
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Update product average rating
    private function updateProductRating($product_id) {
        try {
            $stmt = $this->conn->prepare("
                UPDATE products 
                SET total_ratings = (
                    SELECT COUNT(*) FROM reviews WHERE product_id = ?
                ),
                avg_rating = (
                    SELECT AVG(rating) FROM reviews WHERE product_id = ?
                )
                WHERE id = ?
            ");
            $stmt->bind_param("iii", $product_id, $product_id, $product_id);
            $stmt->execute();
        } catch (Exception $e) {
            throw new Exception("Error updating product rating: " . $e->getMessage());
        }
    }

    // Check if user exists
    private function checkUserExists($user_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT id FROM users WHERE id = ?
            ");
            $stmt->bind_param("i", $user_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                throw new Exception("User does not exist");
            }
        } catch (Exception $e) {
            throw new Exception("Error checking user: " . $e->getMessage());
        }
    }

    // Check if product exists
    private function checkProductExists($product_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT id FROM products WHERE id = ?
            ");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                throw new Exception("Product does not exist");
            }
        } catch (Exception $e) {
            throw new Exception("Error checking product: " . $e->getMessage());
        }
    }

    // Update a review
    public function updateReview($review_id, $new_rating, $new_comment) {
        try {
            if (!is_numeric($review_id) || $new_rating < 1 || $new_rating > 5 || empty($new_comment)) {
                throw new Exception("Invalid input data");
            }

            // Check if review exists
            $this->checkReviewExists($review_id);

            $stmt = $this->conn->prepare("
                UPDATE reviews 
                SET rating = ?, comment = ? 
                WHERE id = ?
            ");
            $stmt->bind_param("isi", $new_rating, $new_comment, $review_id);
            $stmt->execute();

            // Update product average rating
            $product_id = $this->getProductIdFromReview($review_id);
            $this->updateProductRating($product_id);

            return "Review updated successfully";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Check if review exists
    private function checkReviewExists($review_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT id FROM reviews WHERE id = ?
            ");
            $stmt->bind_param("i", $review_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                throw new Exception("Review does not exist");
            }
        } catch (Exception $e) {
            throw new Exception("Error checking review: " . $e->getMessage());
        }
    }

    // Get product ID from review
    private function getProductIdFromReview($review_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT product_id FROM reviews WHERE id = ?
            ");
            $stmt->bind_param("i", $review_id);
            $stmt->execute();
            $result = $stmt->get_result();

            return $result->fetch_assoc()['product_id'];
        } catch (Exception $e) {
            throw new Exception("Error getting product ID: " . $e->getMessage());
        }
    }

    // Delete a review
    public function deleteReview($review_id) {
        try {
            if (!is_numeric($review_id)) {
                throw new Exception("Invalid input data");
            }

            // Check if review exists
            $this->checkReviewExists($review_id);

            $stmt = $this->conn->prepare("
                DELETE FROM reviews WHERE id = ?
            ");
            $stmt->bind_param("i", $review_id);
            $stmt->execute();

            // Update product average rating
            $product_id = $this->getProductIdFromReview($review_id);
            $this->updateProductRating($product_id);

            return "Review deleted successfully";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Display reviews with pagination
    public function displayReviews($product_id, $page = 1, $per_page = 5) {
        try {
            $this->checkProductExists($product_id);

            $offset = ($page - 1) * $per_page;

            $stmt = $this->conn->prepare("
                SELECT r.*, u.username 
                FROM reviews r 
                JOIN users u ON r.user_id = u.id 
                WHERE product_id = ?
                ORDER BY review_date DESC
                LIMIT ?, ?
            ");
            $stmt->bind_param("iii", $product_id, $offset, $per_page);
            $stmt->execute();
            $result = $stmt->get_result();

            return $result->fetch_all(MYSQLI_ASSOC);
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }
}
?>


$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}


$reviewSystem = new ReviewSystem($conn);


$result = $reviewSystem->addReview(1, 101, 5, "Great product!");
echo $result;


$reviews = $reviewSystem->getReviewsByProductId(101);
foreach ($reviews as $review) {
    echo "Rating: " . $review['rating'] . "<br>";
    echo "Comment: " . $review['comment'] . "<br>";
}


$result = $reviewSystem->deleteReview(201);
echo $result;


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize inputs
    $name = htmlspecialchars($_POST['name']);
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    $rating = intval($_POST['rating']);
    $review_text = htmlspecialchars($_POST['review']);

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($review_text)) {
        die("All fields are required!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5 stars!");
    }

    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, review_text, created_at) 
                              VALUES (:name, :email, :rating, :review_text, NOW())");
        
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':review_text', $review_text);

        $stmt->execute();
    } catch (PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Get all reviews
try {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY created_at DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    die("Error fetching reviews: " . $e->getMessage());
}

// Calculate average rating
$averageRating = 0;
$totalReviews = count($reviews);

if ($totalReviews > 0) {
    $sumRatings = array_sum(array_column($reviews, 'rating'));
    $averageRating = $sumRatings / $totalReviews;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Review System</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
        }
        .star {
            color: #ddd;
            text-decoration: none;
        }
        .star.active {
            color: gold;
        }
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .review-list {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <input type="email" name="email" placeholder="Your Email" required><br><br>
            
            <div class="rating-stars">
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
            </div>
            
            <select name="rating" required>
                <option value="">Choose Rating</option>
                <option value="5">Excellent</option>
                <option value="4">Very Good</option>
                <option value="3">Good</option>
                <option value="2">Fair</option>
                <option value="1">Poor</option>
            </select><br><br>

            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea><br><br>
            
            <input type="submit" value="Submit Review">
        </form>
    </div>

    <div class="review-list">
        <h2>Reviews</h2>
        <?php if ($totalReviews > 0): ?>
            <p>Average Rating: <?php echo number_format($averageRating, 1); ?> stars out of 5 (<?php echo $totalReviews; ?> reviews)</p>
            
            <?php foreach ($reviews as $review): 
                $rating = $review['rating'];
                $stars = str_repeat("★", $rating) . str_repeat("☆", 5 - $rating);
            ?>
                <div style="border-bottom: 1px solid #ccc; padding-bottom: 10px; margin-bottom: 10px;">
                    <h3><?php echo $review['name']; ?></h3>
                    <p class="stars"><?php echo $stars; ?></p>
                    <p><?php echo $review['review_text']; ?></p>
                    <small>Posted on <?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
                </div>
            <?php endforeach; ?>
        <?php else: ?>
            <p>No reviews yet. Be the first to review!</p>
        <?php endif; ?>
    </div>
</body>
</html>


<?php
session_start();

// Initialize reviews if not set
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

$reviewSubmitted = false;
$error = "";

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Check if it's a delete action
    if (isset($_POST['delete_id'])) {
        $id = intval($_POST['delete_id']);
        if (array_key_exists($id, $_SESSION['reviews'])) {
            unset($_SESSION['reviews'][$id]);
            // Re-index the array to maintain sequential keys
            $_SESSION['reviews'] = array_values($_SESSION['reviews']);
        }
    } else {
        $name = trim(htmlspecialchars($_POST['name']));
        $comment = trim(htmlspecialchars($_POST['comment']));

        if ($name == "" || $comment == "") {
            $error = "Please fill in both name and comment!";
        } elseif (strlen($name) > 50 || strlen($comment) > 1000) {
            $error = "Name must be less than 50 characters and comment less than 1000 characters!";
        } else {
            // Add the new review with an ID
            $id = count($_SESSION['reviews']);
            $_SESSION['reviews'][$id] = array(
                'name' => $name,
                'comment' => $comment
            );
            $reviewSubmitted = true;
        }
    }
}

// Function to display all reviews and the form
function display_reviews() {
    global $error, $reviewSubmitted;

    // Display error message if any
    if ($error != "") {
        echo "<div class='error'>$error</div>";
        $error = ""; // Clear the error after displaying
    }

    // If a review was submitted successfully
    if ($reviewSubmitted) {
        echo "<div class='success'>Thank you for your review!</div>";
    }

    // Display existing reviews
    if (!empty($_SESSION['reviews'])) {
        echo "<h3>Existing Reviews:</h3><ul>";
        foreach ($_SESSION['reviews'] as $id => $review) {
            echo "<li>";
            echo "Name: <strong>" . $review['name'] . "</strong><br />";
            echo "Comment: " . $review['comment'];
            // Add delete button
            echo "<form style='display:inline;' method='post'>";
            echo "<input type='hidden' name='delete_id' value='$id'/>";
            echo "<button type='submit'>Delete</button>";
            echo "</form>";
            echo "</li><br />";
        }
        echo "</ul>";
    } else {
        echo "No reviews yet!";
    }

    // Display the review form
    echo "<h3>Add a Review:</h3>";
    echo "<form method='post' action='".$_SERVER['PHP_SELF']."'>";
    echo "Name: <input type='text' name='name'/><br />";
    echo "Comment: <textarea name='comment' rows='4' cols='50'></textarea><br />";
    echo "<input type='submit' value='Submit Review'/>";
    echo "</form>";
}

// Call the function to display everything
display_reviews();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "review_system";

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($productId, $userName, $userEmail, $rating, $comment) {
    global $conn;

    // Sanitize inputs
    $userName = htmlspecialchars(strip_tags($userName));
    $userEmail = filter_var($userEmail, FILTER_VALIDATE_EMAIL);
    $rating = (int)$rating;
    $comment = htmlspecialchars(strip_tags($comment));

    if (!$userEmail || $rating < 1 || $rating > 5) {
        return false;
    }

    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, comment) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("issss", $productId, $userName, $userEmail, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;

    $reviews = array();
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $review = array(
            'id' => $row['review_id'],
            'user_name' => $row['user_name'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date_posted' => $row['date_posted']
        );
        array_push($reviews, $review);
    }

    return $reviews;
}

// Close database connection
$conn->close();
?>


<?php
function submitReview($reviewText, $productId, $userId = null) {
    // Validate input
    if (empty($reviewText) || empty($productId)) {
        return false;
    }

    // Sanitize input
    $reviewText = htmlspecialchars(trim($reviewText));
    $productId = intval($productId);
    
    if ($userId !== null) {
        $userId = intval($userId);
    }

    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prepare and execute SQL statement with prepared statements
    $sql = "INSERT INTO reviews (product_id, user_id, review_text, rating, timestamp) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
    
    if ($userId !== null) {
        $stmt = mysqli_prepare($conn, $sql);
        $rating = 5; // You can modify this to accept a rating parameter
        mysqli_stmt_bind_param($stmt, "iisi", $productId, $userId, $reviewText, $rating);
    } else {
        $sql = "INSERT INTO reviews (product_id, review_text, rating, timestamp) VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
        $stmt = mysqli_prepare($conn, $sql);
        $rating = 5; // You can modify this to accept a rating parameter
        mysqli_stmt_bind_param($stmt, "isi", $productId, $reviewText, $rating);
    }

    if (mysqli_stmt_execute($stmt)) {
        // Get the inserted review ID
        $reviewId = mysqli_insert_id($conn);
        return $reviewId;
    } else {
        // Return false if insertion failed
        return false;
    }

    // Close database connection
    mysqli_close($conn);
}
?>


$reviewText = "This is an excellent product!";
$productId = 123;
$userId = 456;

submitReview($reviewText, $productId, $userId);


$reviewText = "Great product!";
$productId = 123;

submitReview($reviewText, $productId);


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$database = "review_db";

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
            VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display all reviews for a product
function displayReviews($productId) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId'
            ORDER BY timestamp DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . str_repeat("★", $row['rating']) . "</h3>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available for this product.</p>";
    }
}

// Example usage:
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <?php
    // Display all reviews for product ID 1
    displayReviews(1);
    
    // Add a new review (example)
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $userId = 1; // Assume user is logged in
        $productId = $_POST['product_id'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (!empty($rating) && !empty($comment)) {
            addReview($userId, $productId, $rating, $comment);
            echo "<script>window.location.href='?success=1'</script>";
        }
    }
    
    // Show success message
    if (isset($_GET['success'])) {
        echo "<p>Thank you for submitting your review!</p>";
    }
    ?>
    
    <!-- Review Form -->
    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        <input type="hidden" name="product_id" value="1">
        
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Choose a rating</option>
                <option value="5">★ ★ ★ ★ ★</option>
                <option value="4">★ ★ ★ ★</option>
                <option value="3">★ ★ ★</option>
                <option value="2">★ ★</option>
                <option value="1">★</option>
            </select>
        </div><br>

        <div>
            <label for="comment">Review:</label><br>
            <textarea id="comment" name="comment"></textarea>
        </div><br>

        <button type="submit">Submit Review</button>
    </form>
</body>
</html>


<?php
function submitReview($user_id, $product_id, $rating, $comments = null) {
    // Database connection parameters
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    try {
        // Create database connection
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check if user already reviewed this product
        $checkReviewQuery = "
            SELECT review_id 
            FROM reviews 
            WHERE user_id = ? AND product_id = ?
        ";
        
        $stmt = $conn->prepare($checkReviewQuery);
        $stmt->bind_param("ii", $user_id, $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            // Insert new review
            $insertReviewQuery = "
                INSERT INTO reviews (user_id, product_id, rating, comments)
                VALUES (?, ?, ?, ?)
            ";
            
            $stmt = $conn->prepare($insertReviewQuery);
            $comments = ($comments === null) ? "" : mysqli_real_escape_string($conn, $comments);
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comments);
            $stmt->execute();

            // Update average rating for the product
            $updateAvgQuery = "
                UPDATE products 
                SET average_rating = (
                    SELECT AVG(rating) 
                    FROM reviews 
                    WHERE product_id = ?
                ) 
                WHERE product_id = ?
            ";
            
            $stmt = $conn->prepare($updateAvgQuery);
            $stmt->bind_param("ii", $product_id, $product_id);
            $stmt->execute();

            return "Review submitted successfully!";
        } else {
            // User already reviewed this product
            return "You have already reviewed this product.";
        }
    } catch (Exception $e) {
        // Handle any errors that occur
        return "Error submitting review: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($conn != null) {
            $conn->close();
        }
    }
}

// Example usage:
$user_id = 1;
$product_id = 101;
$rating = 5;
$comments = "Great product! Highly recommend.";

$result = submitReview($user_id, $product_id, $rating, $comments);
echo $result;

?>


<?php
function submit_review($user_id, $review_text, $rating) {
    // Validate inputs
    if (!isset($user_id) || !is_int($user_id)) {
        return false;
    }
    if (empty($review_text)) {
        return false;
    }
    if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false;
    }

    // Database connection
    $db = mysqli_connect('localhost', 'username', 'password', 'database_name');
    if (!$db) {
        trigger_error("Database connection failed: " . mysqli_error($db), E_USER_ERROR);
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($db, $user_id);
    $review_text = mysqli_real_escape_string($db, $review_text);
    $rating = mysqli_real_escape_string($db, $rating);

    // Insert review into database
    $query = "INSERT INTO reviews (user_id, review_text, rating) VALUES ('$user_id', '$review_text', '$rating')";
    
    if (!mysqli_query($db, $query)) {
        trigger_error("Database query failed: " . mysqli_error($db), E_USER_ERROR);
        return false;
    }

    // Close database connection
    mysqli_close($db);

    // Return true if review was submitted successfully
    return true;
}

// Example usage:
$user_id = 123;
$review_text = "This is a great product!";
$rating = 5;

if (submit_review($user_id, $review_text, $rating)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}
?>


<?php
function submit_review($productId, $rating, $username, $comment) {
    // Database connection details
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'reviews_db';

    try {
        // Connect to database
        $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
        
        if (!$conn) {
            throw new Exception("Could not connect to the database");
        }

        // Check if user has already reviewed this product
        $checkQuery = "SELECT * FROM reviews WHERE product_id = ? AND username = ?";
        $stmtCheck = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmtCheck, "is", $productId, $username);
        mysqli_stmt_execute($stmtCheck);
        $resultCheck = mysqli_stmt_get_result($stmtCheck);

        if (mysqli_num_rows($resultCheck) > 0) {
            // User already reviewed this product
            return false;
        }

        // Insert new review into the database
        $insertQuery = "INSERT INTO reviews (product_id, rating, username, comment, review_date) 
                       VALUES (?, ?, ?, ?, NOW())";
        
        $stmtInsert = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmtInsert, "isss", $productId, $rating, $username, $comment);

        if (mysqli_stmt_execute($stmtInsert)) {
            // Review submitted successfully
            return true;
        } else {
            // Error submitting review
            throw new Exception("Error submitting review: " . mysqli_error($conn));
        }

    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        if ($conn) {
            mysqli_close($conn);
        }
    }
}

// Example usage:
$product_id = 123; // Replace with actual product ID
$rating = 5; // Rating between 1-5
$username = "john_doe";
$comment = "This is a great product!";

try {
    if (submit_review($product_id, $rating, $username, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "You have already reviewed this product.";
    }
} catch (Exception $e) {
    echo 'Error: ' . $e->getMessage();
}
?>


<?php
// Function to handle review submission
function submit_review() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Sanitize inputs
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate required fields
        if (empty($name) || empty($email)) {
            die("Please fill in all required fields.");
        }

        // Set date of review
        $date = date('Y-m-d H:i:s');

        // Generate unique review ID
        $review_id = uniqid();

        // Review data array
        $review_data = [
            'id' => $review_id,
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => $date
        ];

        // Save review to file
        $file_path = 'reviews.txt';
        
        // Open file for appending
        $file_handle = fopen($file_path, 'a');
        
        if ($file_handle) {
            // Write serialized data to file
            fwrite($file_handle, serialize($review_data) . "
");
            fclose($file_handle);
            
            echo "Thank you for submitting your review!";
            header("Refresh: 2; url=reviews.php");
            exit();
        } else {
            die("Error saving review. Please try again.");
        }
    }
}

// Function to display stored reviews
function display_reviews() {
    $file_path = 'reviews.txt';
    
    if (file_exists($file_path)) {
        $reviews_file = fopen($file_path, 'r');
        
        while (($line = fgets($reviews_file)) !== false) {
            // Unserialize review data
            $review_data = unserialize($line);
            
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($review_data['name']) . "</h3>";
            echo "<p><strong>Email:</strong> " . htmlspecialchars($review_data['email']) . "</p>";
            echo "<p><strong>Rating:</strong> ";
            
            // Display stars based on rating
            for ($i = 1; $i <= $review_data['rating']; $i++) {
                echo "★";
            }
            
            echo "</p>";
            echo "<p>" . htmlspecialchars($review_data['comment']) . "</p>";
            echo "<p><em>Posted on: " . $review_data['date'] . "</em></p>";
            echo "</div>";
        }
        
        fclose($reviews_file);
    } else {
        echo "No reviews found.";
    }
}

// Function to delete a review
function delete_review($id) {
    $file_path = 'reviews.txt';
    
    if (file_exists($file_path)) {
        $temp_array = array();
        $file_handle = fopen($file_path, 'r');
        
        while (($line = fgets($file_handle)) !== false) {
            $review_data = unserialize($line);
            
            if ($review_data['id'] != $id) {
                array_push($temp_array, $line);
            }
        }
        
        fclose($file_handle);
        
        // Rewrite file without the deleted review
        $file_handle = fopen($file_path, 'w');
        foreach ($temp_array as $line) {
            fwrite($file_handle, $line);
        }
        fclose($file_handle);
    }
}

// Example form HTML
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Submit Review</title>
</head>
<body>
    <h1>Submit Your Review</h1>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>
        
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars (Best)</option>
        </select><br>
        
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment"></textarea><br>
        
        <input type="submit" value="Submit Review">
    </form>
    
    <?php
    // Submit review when form is submitted
    if (isset($_POST['name']) && isset($_POST['email'])) {
        submit_review();
    }
    ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($product_id, $user_name, $user_email, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $rating = (int)mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews 
            (product_id, user_name, user_email, rating, comment, submission_date)
            VALUES 
            ('$product_id', '$user_name', '$user_email', '$rating', '$comment', NOW())";
            
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    // Get reviews for product
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    // Calculate average rating
    $total_ratings = 0;
    $num_reviews = 0;
    while ($row = $result->fetch_assoc()) {
        $total_ratings += $row['rating'];
        $num_reviews++;
    }
    if ($num_reviews > 0) {
        $average_rating = $total_ratings / $num_reviews;
    } else {
        $average_rating = 0;
    }
    
    // Reset and fetch reviews again for display
    $result->rewind();
    
    echo "<div class='reviews'>";
    echo "<h3>Product Reviews</h3>";
    echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
    
    while ($row = $result->fetch_assoc()) {
        $date = date("F j, Y", strtotime($row['submission_date']));
        
        echo "<div class='review'>";
        echo "<h4>" . $row['user_name'] . "</h4>";
        echo "<p>Submitted on: " . $date . "</p>";
        display_stars($row['rating']);
        echo "<p>" . $row['comment'] . "</p>";
        echo "</div>";
    }
    
    echo "</div>";
}

// Helper function to display stars
function display_stars($rating) {
    $full Stars = (int)$rating;
    $half_star = ($rating - $full_stars) >= 0.5 ? 1 : 0;
    
    for ($i = 0; $i < $full_stars; $i++) {
        echo "<span class='star'>★</span>";
    }
    
    if ($half_star) {
        echo "<span class='star'>⯨</span>";
    }
    
    for ($i = $full_stars + $half_star; $i < 5; $i++) {
        echo "<span class='star'>☆</span>";
    }
}

// Example usage:
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .star { color: #ffd700; }
    </style>
</head>
<body>
    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="123">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select rating</option>
                <option value="5">5 Stars</option>
                <option value="4.5">4.5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3.5">3.5 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2.5">2.5 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1.5">1.5 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>
        <button type="submit">Submit Review</button>
    </form>

    <?php
    // Handle form submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (submit_review($product_id, $name, $email, $rating, $comment)) {
            echo "<script>alert('Thank you for your review!');</script>";
        } else {
            echo "<script>alert('Error submitting review. Please try again.');";
        }
    }

    // Display existing reviews
    display_reviews(123);
    ?>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
// Function to add new user review
function addReview($username, $rating, $comment) {
    // Validate input
    if (empty($comment)) {
        throw new Exception("Comment cannot be empty");
    }
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5 stars");
    }

    // Get existing reviews or create an empty array
    $reviews = getStoredReviews();

    // Create a new review entry
    $review = [
        'username' => htmlspecialchars($username),
        'rating' => $rating,
        'comment' => htmlspecialchars($comment),
        'date' => date('Y-m-d H:i:s')
    ];

    // Add new review to the array
    $reviews[] = $review;

    // Save reviews back to storage
    saveReviews($reviews);

    return true;
}

// Function to display all user reviews
function displayReviews() {
    $reviews = getStoredReviews();
    
    if (empty($reviews)) {
        echo "No reviews yet. Be the first to review!";
        return;
    }

    foreach ($reviews as $review) {
        $stars = str_repeat('★', $review['rating']) . str_repeat('☆', 5 - $review['rating']);
        
        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='username'>$review[username]</span>";
        echo "<span class='rating'>$stars</span>";
        echo "<span class='date'>$review[date]</span>";
        echo "</div>";
        echo "<div class='comment'>$review[comment]</div>";
        echo "</div>";
    }
}

// Helper function to get stored reviews
function getStoredReviews() {
    $reviewsFile = 'reviews.json';
    
    if (file_exists($reviewsFile)) {
        $contents = file_get_contents($reviewsFile);
        return json_decode($contents, true) ?: [];
    } else {
        return [];
    }
}

// Helper function to save reviews
function saveReviews($reviews) {
    $reviewsFile = 'reviews.json';
    
    try {
        $jsonContent = json_encode($reviews, JSON_PRETTY_PRINT);
        file_put_contents($reviewsFile, $jsonContent);
        return true;
    } catch (Exception $e) {
        throw new Exception("Error saving reviews: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        addReview($_POST['username'], $_POST['rating'], $_POST['comment']);
        echo "Thank you for your review!";
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

displayReviews();
?>


<?php
function displayUserReviews($connection) {
    try {
        // Query the database for all reviews
        $sql = "SELECT r.review_id, u.user_name, r.rating, r.comment, r.review_date 
                FROM reviews r 
                INNER JOIN users u ON r.user_id = u.user_id 
                ORDER BY r.review_date DESC";
                
        $result = mysqli_query($connection, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            echo "<div class='no-reviews'>No reviews yet.</div>";
            return;
        }
        
        $html = '<div class="reviews-container">';
        while ($row = mysqli_fetch_assoc($result)) {
            $html .= '
                <div class="review-item">
                    <div class="review-header">
                        <span class="user-name"><strong>' . htmlspecialchars($row['user_name']) . '</strong></span>
                        <span class="rating">' . str_repeat("★", $row['rating']) . '</span>
                    </div>
                    <div class="comment">
                        ' . nl2br(htmlspecialchars($row['comment'])) . '
                    </div>
                </div>';
        }
        $html .= '</div>';
        
        echo $html;
        
    } catch (Exception $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
// Establish database connection
$connection = new mysqli("localhost", "username", "password", "database");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// Display reviews
displayUserReviews($connection);

// Close connection
$connection->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function display_reviews() {
    global $conn;
    
    // Get all reviews from the database
    $query = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $review_id = $row['id'];
            $name = $row['name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $created_at = $row['created_at'];
            $votes = $row['votes'];
            
            // Display the review
            echo "<div class='review'>";
            echo "<h3>Review by: $name</h3>";
            echo "<p>Rating: " . str_repeat("★", $rating) . "</p>";
            echo "<p>$comment</p>";
            echo "<p>Posted on: $created_at</p>";
            echo "<div class='votes'>";
            echo "<span>Votes: $votes</span>";
            echo "<form method='post' action='upvote.php'>";
            echo "<input type='hidden' name='review_id' value='$review_id'>";
            echo "<button type='submit'>↑ Upvote</button>";
            echo "</form>";
            echo "</div>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found.";
    }
}

function add_review($name, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $name);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $query = "INSERT INTO reviews (name, rating, comment) VALUES ('$name', '$rating', '$comment')";
    if (mysqli_query($conn, $query)) {
        return true;
    } else {
        return false;
    }
}

function upvote_review($review_id) {
    global $conn;
    
    // Increment vote count for the review
    $query = "UPDATE reviews SET votes = votes + 1 WHERE id = '$review_id'";
    if (mysqli_query($conn, $query)) {
        return true;
    } else {
        return false;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include 'review_functions.php';
display_reviews();
?>


<?php
include 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($name, $rating, $comment)) {
        echo "Review added successfully!";
    } else {
        echo "Error adding review.";
    }
}
?>


<?php
include 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $review_id = $_POST['review_id'];
    
    if (upvote_review($review_id)) {
        echo "Thank you for voting!";
    } else {
        echo "Error voting.";
    }
}
?>


<?php
// Function to handle user reviews
function processReview($item_id, $rating, $comment, $username) {
    // Set the reviews file path
    $reviews_file = "reviews.json";

    // Get existing reviews from file
    if (file_exists($reviews_file)) {
        $json_data = file_get_contents($reviews_file);
        $reviews = json_decode($json_data, true);
    } else {
        $reviews = array();
    }

    // Validate input
    if (!isset($rating) || !isset($comment) || !isset($username)) {
        return "Please fill in all required fields.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Add new review
    $new_review = array(
        'item_id' => $item_id,
        'username' => $username,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    );

    array_push($reviews, $new_review);

    // Save the updated reviews to file
    $json_data = json_encode($reviews);
    file_put_contents($reviews_file, $json_data);

    return "Thank you for submitting your review!";
}

// Function to get all reviews for an item
function getReviewsByItem($item_id) {
    $reviews_file = "reviews.json";

    if (!file_exists($reviews_file)) {
        return array();
    }

    $json_data = file_get_contents($reviews_file);
    $reviews = json_decode($json_data, true);

    // Filter reviews for the specified item
    $item_reviews = array();
    foreach ($reviews as $review) {
        if ($review['item_id'] == $item_id) {
            array_push($item_reviews, $review);
        }
    }

    return $item_reviews;
}

// Example usage:

// To submit a new review:
$result = processReview(123, 4, "Great product!", "john_doe");
echo $result;

// To get reviews for an item:
$item_reviews = getReviewsByItem(123);
print_r($item_reviews);

?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to add a review
function addReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Escape special characters
    $rating = htmlspecialchars(strip_tags($rating));
    $comment = htmlspecialchars(strip_tags($comment));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date, approved) 
                              VALUES (:userId, :productId, :rating, :comment, NOW(), 0)");
        
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r 
                              JOIN users u ON r.user_id = u.id 
                              WHERE r.product_id = :productId AND r.approved = 1 
                              ORDER BY r.review_date DESC");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to get average rating for a product
function getProductRating($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) as average_rating FROM reviews 
                              WHERE product_id = :productId AND approved = 1");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return number_format($result['average_rating'], 1, '.', '');
    } catch (PDOException $e) {
        echo "Error fetching rating: " . $e->getMessage();
        return false;
    }
}

// Function to approve/reject reviews
function moderateReview($reviewId, $approve = true) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE reviews SET approved = :approved WHERE id = :reviewId");
        
        $stmt->bindParam(':reviewId', $reviewId);
        $stmt->bindParam(':approved', $approve ? 1 : 0);
        
        return $stmt->execute();
    } catch (PDOException $e) {
        echo "Error moderating review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add a new review
    $userId = 1; // Get from session or authentication
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($userId, $productId, $rating, $comment)) {
        echo "Review added successfully!";
    }
}

// Display reviews for product ID 1
$reviews = getReviews(1);
if ($reviews) {
    foreach ($reviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<h3>By: " . $review['username'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['review_date'] . "</small>";
        echo "</div>";
    }
}

// Get and display average rating
$averageRating = getProductRating(1);
echo "<h2>Average Rating: $averageRating</h2>";
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

class ReviewSystem {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Submit a new review
    public function submitReview($productId, $name, $email, $rating, $comment) {
        // Sanitize inputs
        $name = htmlspecialchars($name);
        $email = htmlspecialchars($email);
        $comment = htmlspecialchars($comment);

        // Check if all fields are filled
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            return "Please fill in all required fields.";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return "Invalid email format.";
        }

        // Validate rating (1-5)
        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5 stars.";
        }

        // Insert review into database
        $stmt = $this->conn->prepare("INSERT INTO reviews 
                                    (product_id, name, email, rating, comment, submission_date)
                                    VALUES (?, ?, ?, ?, ?, NOW())");
        
        if (!$stmt) {
            return "Database error occurred while submitting review.";
        }

        $stmt->bind_param("isids", $productId, $name, $email, $rating, $comment);

        if ($stmt->execute()) {
            return true;
        } else {
            return "Error submitting review: " . $stmt->error;
        }
    }

    // Display reviews for a product
    public function displayReviews($productId) {
        $reviews = array();
        
        $stmt = $this->conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
        $stmt->bind_param("i", $productId);
        $stmt->execute();

        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            $reviews[] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'submission_date' => $row['submission_date']
            );
        }

        return $this->displayReviewsHTML($reviews);
    }

    // Display reviews HTML
    private function displayReviewsHTML($reviews) {
        if (empty($reviews)) {
            return "<p>No reviews available.</p>";
        }

        $output = '<div class="reviews">';
        
        foreach ($reviews as $review) {
            $output .= '<div class="review-item">';
            $output .= '<h3>' . $review['name'] . '</h3>';
            $output .= '<div class="rating">Rating: ' . str_repeat('★', $review['rating']) . '</div>';
            $output .= '<p>' . $review['comment'] . '</p>';
            $output .= '<small>Posted on: ' . $review['submission_date'] . '</small>';
            $output .= '</div>';
        }

        $averageRating = $this->calculateAverageRating($reviews);
        $output .= '<div class="average-rating">';
        $output .= '<h4>Average Rating:</h4>';
        $output .= '<div>' . str_repeat('★', $averageRating) . '</div>';
        $output .= '</div>';

        $output .= '</div>';

        return $output;
    }

    // Calculate average rating
    private function calculateAverageRating($reviews) {
        if (empty($reviews)) {
            return 0;
        }

        $total = array_sum(array_column($reviews, 'rating'));
        $average = $total / count($reviews);
        return round($average);
    }

    // Upvote a review
    public function upvoteReview($reviewId) {
        $stmt = $this->conn->prepare("UPDATE reviews SET votes = votes + 1 WHERE id = ?");
        $stmt->bind_param("i", $reviewId);

        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }

    // Downvote a review
    public function downvoteReview($reviewId) {
        $stmt = $this->conn->prepare("UPDATE reviews SET votes = votes - 1 WHERE id = ?");
        $stmt->bind_param("i", $reviewId);

        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }
}

// Example usage:
$reviewSystem = new ReviewSystem($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = $reviewSystem->submitReview($_POST['product_id'], $_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    
    if ($result === true) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>$result</div>";
    }
}

echo $reviewSystem->displayReviews(1); // Display reviews for product ID 1

$conn->close();
?>


<?php
function submit_review($review_text, $rating, $id = null) {
    try {
        // Validate input
        if (strlen(trim($review_text)) < 1) {
            throw new Exception("Review cannot be empty");
        }
        
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Database connection
        $mysqli = mysqli_connect("hostname", "username", "password", "database");

        if (mysqli_connect_errno()) {
            return false;
        }

        // Check if updating an existing review or adding a new one
        if ($id !== null) {
            // Verify the review ID exists before updating
            $check_review = mysqli_prepare($mysqli, "SELECT id FROM reviews WHERE id = ?");
            mysqli_stmt_bind_param($check_review, "i", $id);
            mysqli_stmt_execute($check_review);
            mysqli_stmt_store_result($check_review);

            if (mysqli_stmt_num_rows($check_review) === 0) {
                throw new Exception("Review ID does not exist");
            }
        }

        // Prepare SQL statement
        if ($id === null) {
            $stmt = mysqli_prepare($mysqli, "INSERT INTO reviews (review_text, rating) VALUES (?, ?)");
        } else {
            $stmt = mysqli_prepare($mysqli, "UPDATE reviews SET review_text = ?, rating = ? WHERE id = ?");
            mysqli_stmt_bind_param($stmt, "sii", $review_text, $rating, $id);
        }

        if ($id === null) {
            mysqli_stmt_bind_param($stmt, "si", $review_text, $rating);
        }

        // Execute the statement
        if (!mysqli_stmt_execute($stmt)) {
            throw new Exception("Database error occurred");
        }

        // Close statements and connection
        mysqli_stmt_close($stmt);
        mysqli_close($mysqli);

        return ($id === null) ? mysqli_insert_id($mysqli) : true;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


// Adding a new review
$review_text = "Great product!";
$rating = 5;
$new_review_id = submit_review($review_text, $rating);

if ($new_review_id) {
    echo "Review added successfully with ID: " . $new_review_id;
}

// Updating an existing review
$review_id_to_update = 123;
$updated_review_text = "Product is okay.";
$updated_rating = 3;
$update_success = submit_review($updated_review_text, $updated_rating, $review_id_to_update);

if ($update_success) {
    echo "Review updated successfully";
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user reviews
function handle_reviews() {
    global $conn;
    
    // Check if review form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize and validate input data
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));
        
        // Validate inputs
        if (empty($name)) {
            die("Name is required");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address");
        }
        
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5");
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, rating, comment) 
                VALUES (?, ?, ?, ?)";
                
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssis", $name, $email, $rating, $comment);
        
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            die("Error submitting review: " . $conn->error);
        }
    }
    
    // Display reviews
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['created_at'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) AS average_rating FROM reviews";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        $average_rating = number_format($row['average_rating'], 1);
        echo "<div class='rating'>";
        echo "<h4>Average Rating: " . $average_rating . "/5</h4>";
        echo "</div>";
    }
}

// Call the function
handle_reviews();

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = "localhost";
$user = "root";
$password = "";
$dbname = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Validate input
    if (!is_numeric($user_id) || !is_numeric($product_id)) {
        return "Invalid user or product ID";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Get current date and time
    $date = date("Y-m-d H:i:s");

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$date')";

    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Example usage:
$user_id = 1;
$product_id = 101;
$rating = 4;
$comment = "Great product! Highly recommend.";

$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result;

// Close database connection
mysqli_close($conn);
?>


function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Prepare SQL statement
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                                   VALUES (?, ?, ?, ?, ?)");

    if ($stmt === false) {
        return "Error preparing statement: " . mysqli_error($conn);
    }

    // Bind parameters
    $date = date("Y-m-d H:i:s");
    mysqli_stmt_bind_param($stmt, "iisss", $user_id, $product_id, $rating, $comment, $date);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_stmt_error($stmt);
    }

    // Close the statement
    mysqli_stmt_close($stmt);
}


<?php
function submit_review($user_id, $product_id, $rating, $review_title, $review_text) {
    // Validate input
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($review_title) || empty($review_text)) {
        return "All fields are required!";
    }

    // Database connection
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // Escape special characters to prevent SQL injection
        $user_id = $conn->real_escape_string($user_id);
        $product_id = $conn->real_escape_string($product_id);
        $rating = $conn->real_escape_string($rating);
        $review_title = $conn->real_escape_string($review_title);
        $review_text = $conn->real_escape_string($review_text);

        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, review_title, review_text, review_date) 
                VALUES ('$user_id', '$product_id', '$rating', '$review_title', '$review_text', NOW())";

        if ($conn->query($sql) === TRUE) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . $sql . "<br>" . $conn->error;
        }

    } catch (Exception $e) {
        return "Error occurred: " . $e->getMessage();
    }

    // Close database connection
    $conn->close();
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 4;
$review_title = "Great Product!";
$review_text = "This is a fantastic product. Highly recommended!";

$result = submit_review($user_id, $product_id, $rating, $review_title, $review_text);
echo $result;

?>


<?php
// Initialize reviews if not set
if (!isset($_SESSION)) {
    session_start();
}
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $review = array(
        'id' => count($_SESSION['reviews']) + 1,
        'username' => htmlspecialchars(trim($_POST['username'])),
        'rating' => intval($_POST['rating']),
        'comment' => htmlspecialchars(trim($_POST['comment'])),
        'timestamp' => time()
    );

    // Validate input
    if ($review['username'] != "" && $review['rating'] >= 1 && $review['rating'] <= 5 && $review['comment'] != "") {
        array_push($_SESSION['reviews'], $review);
        $_SESSION['message'] = "Review submitted successfully!";
    } else {
        $_SESSION['message'] = "Please fill in all fields with valid information.";
    }
}

// Calculate average rating
$averageRating = 0;
if (count($_SESSION['reviews']) > 0) {
    $sumRatings = array_sum(array_column($_SESSION['reviews'], 'rating'));
    $averageRating = $sumRatings / count($_SESSION['reviews']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
        }
        .stars span {
            color: gold;
        }
        .rating-text {
            display: inline-block;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <?php if (isset($_SESSION['message'])) { ?>
            <div style="color: red; margin-bottom: 10px;"><?php echo $_SESSION['message']; ?></div>
        <?php unset($_SESSION['message']); } ?>

        <p><input type="text" name="username" placeholder="Your Name" required></p>
        <p>Rating:</p>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">⭐⭐⭐⭐⭐ (5)</option>
            <option value="4">⭐⭐⭐⭐ (4)</option>
            <option value="3">⭐⭐⭐ (3)</option>
            <option value="2">⭐⭐ (2)</option>
            <option value="1">⭐ (1)</option>
        </select><br><br>
        <p><textarea name="comment" placeholder="Write your review..." required></textarea></p>
        <button type="submit">Submit Review</button>
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    
    <?php if (count($_SESSION['reviews']) > 0) { ?>
        <div class="average-rating">
            Average Rating: <?php echo number_format($averageRating, 1); ?>/5
        </div>

        <?php foreach ($_SESSION['reviews'] as $review) { ?>
            <div class="review-container">
                <h3><?php echo $review['username']; ?></h3>
                <p><?php echo date('F j, Y g:i a', $review['timestamp']); ?></p>
                <div class="stars">
                    <span>⭐</span>
                    <?php for ($i = 1; $i <= $review['rating'] - 1; $i++) { ?>
                        <span>⭐</span>
                    <?php } ?>
                </div>
                <p class="comment"><?php echo $review['comment']; ?></p>
            </div>
        <?php } ?>
    <?php } else { ?>
        <p>No reviews yet. Be the first to review this product!</p>
    <?php } ?>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        // Bind parameters
        mysqli_stmt_bind_param($stmt, "ssis", $name, $email, $rating, $comment);
        
        // Execute statement
        if (!mysqli_stmt_execute($stmt)) {
            die("Error submitting review: " . mysqli_error($conn));
        }
        
        // Close statement
        mysqli_stmt_close($stmt);
    }

    // Redirect back to the same page after submission
    header("Location: " . $_SERVER["PHP_SELF"]);
    exit();
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY id DESC";
$result = mysqli_query($conn, $sql);

if (!$result) {
    die("Error fetching reviews: " . mysqli_error($conn));
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .review-item {
            background-color: #f9f9f9;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 5px;
        }
        .stars {
            color: gold;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>
            
            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select Rating</option>
                    <option value="5">⭐⭐⭐⭐⭐</option>
                    <option value="4">⭐⭐⭐⭐</option>
                    <option value="3">⭐⭐⭐</option>
                    <option value="2">⭐⭐</option>
                    <option value="1">⭐</option>
                </select>
            </div>

            <div>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="4" required></textarea>
            </div>
            
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <?php if (mysqli_num_rows($result) > 0): ?>
        <h2>Customer Reviews</h2>
        <?php while ($row = mysqli_fetch_assoc($result)): ?>
            <div class="review-item">
                <strong><?php echo $row['name']; ?></strong><br>
                <span class="stars"><?php echo str_repeat("⭐", $row['rating']); ?></span><br>
                <em><?php echo $row['email']; ?></em><br><br>
                <?php echo $row['comment']; ?>
            </div>
        <?php endwhile; ?>
    <?php else: ?>
        <p>No reviews available yet.</p>
    <?php endif; ?>

    <!-- Close database connection -->
    <?php mysqli_close($conn); ?>
</body>
</html>


<?php
function submitReview($userId, $productId, $rating, $comment) {
    // Database connection details
    $host = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbName = "database_name";

    try {
        // Connect to database
        $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
        
        if (!$conn) {
            throw new Exception("Connection failed: " . mysqli_connect_error());
        }

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date) 
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = mysqli_prepare($conn, $sql);
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . mysqli_error($conn));
        }

        // Bind parameters
        mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);

        // Execute the statement
        $result = mysqli_stmt_execute($stmt);
        
        if ($result) {
            // Get the last inserted review ID
            $lastId = mysqli_insert_id($conn);

            // Close the statement and connection
            mysqli_stmt_close($stmt);
            mysqli_close($conn);

            return array(
                "status" => "success",
                "message" => "Review submitted successfully!",
                "review_id" => $lastId
            );
        } else {
            throw new Exception("Execute failed: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        // Close the statement and connection if any
        if (isset($stmt)) {
            mysqli_stmt_close($stmt);
        }
        if (isset($conn)) {
            mysqli_close($conn);
        }

        return array(
            "status" => "error",
            "message" => $e->getMessage()
        );
    }
}
?>


// Example usage:
$reviewResult = submitReview(1, 5, 4, "Great product!");
print_r($reviewResult);


<?php
// Review class
class Review {
    private $review_id;
    private $user_id;
    private $product_id;
    private $rating;
    private $comment;
    private $timestamp;

    // Getters
    public function getReviewId() {
        return $this->review_id;
    }

    public function getUserId() {
        return $this->user_id;
    }

    public function getProductId() {
        return $this->product_id;
    }

    public function getRating() {
        return $this->rating;
    }

    public function getComment() {
        return $this->comment;
    }

    public function getTimestamp() {
        return $this->timestamp;
    }

    // Setters
    public function setReviewId($id) {
        $this->review_id = $id;
    }

    public function setUserId($id) {
        $this->user_id = $id;
    }

    public function setProductId($id) {
        $this->product_id = $id;
    }

    public function setRating($rating) {
        if ($rating >= 1 && $rating <= 5) {
            $this->rating = $rating;
        } else {
            throw new Exception("Invalid rating. Rating must be between 1 and 5.");
        }
    }

    public function setComment($comment) {
        $this->comment = htmlspecialchars(trim($comment));
    }

    public function setTimestamp($timestamp) {
        $this->timestamp = $timestamp;
    }

    // Method to create a new review in the database
    public static function addReview($user_id, $product_id, $rating, $comment) {
        global $connection;

        try {
            $stmt = $connection->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) VALUES (?, ?, ?, ?, NOW())");
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);

            if ($stmt->execute()) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to get all reviews for a specific product
    public static function getAllReviews($product_id) {
        global $connection;

        try {
            $stmt = $connection->prepare("SELECT * FROM reviews WHERE product_id = ?");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            $reviews = array();
            while ($row = $result->fetch_assoc()) {
                $review = new Review();
                $review->setReviewId($row['review_id']);
                $review->setUserId($row['user_id']);
                $review->setProductId($row['product_id']);
                $review->setRating($row['rating']);
                $review->setComment($row['comment']);
                $review->setTimestamp($row['timestamp']);
                $reviews[] = $review;
            }

            return $reviews;
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to delete a review
    public static function deleteReview($review_id) {
        global $connection;

        try {
            $stmt = $connection->prepare("DELETE FROM reviews WHERE review_id = ?");
            $stmt->bind_param("i", $review_id);

            if ($stmt->execute()) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to display reviews in HTML format
    public static function displayReviews($reviews) {
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>Review by User ID: " . $review->getUserId() . "</h3>";
                echo "<p>Rating: " . self::getStars($review->getRating()) . "</p>";
                echo "<p>Comment: " . $review->getComment() . "</p>";
                echo "<p>Date: " . $review->getTimestamp() . "</p>";
                echo "</div><br />";
            }
        } else {
            echo "<p>No reviews available.</p>";
        }
    }

    // Helper method to display stars
    private static function getStars($rating) {
        $stars = "";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                $stars .= "★";
            } else {
                $stars .= "☆";
            }
        }
        return $stars;
    }
}

// Example usage:
// Add a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id'];
    $product_id = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    if ($review->addReview($user_id, $product_id, $rating, $comment)) {
        echo "Thank you for your review!";
    } else {
        echo "Error adding review.";
    }
}

// Display all reviews for product with ID 1
$reviews = Review::getAllReviews(1);
Review::displayReviews($reviews);
?>


<?php
function submitReview($username, $reviewText) {
    // Validate input
    if (empty($username) || empty($reviewText)) {
        return "Error: All fields are required.";
    }

    // Database connection details
    $host = 'localhost';
    $db_user = 'your_username';
    $db_password = 'your_password';
    $dbname = 'your_database';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_user, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute SQL statement to insert review
        $stmt = $conn->prepare("INSERT INTO reviews (username, review_text) VALUES (:username, :reviewText)");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':reviewText', $reviewText);
        
        $stmt->execute();

        return "Thank you for your review!";
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
$username = "JohnDoe";
$reviewText = "This is a great product!";
$result = submitReview($username, $reviewText);
echo $result;

?>


<?php
// Get user input from form
$username = $_POST['username'];
$reviewText = $_POST['review'];

// Call the submitReview function
$result = submitReview($username, $reviewText);

// Display result
echo $result;
?>


<?php
// Review handling function
function handleReview($book_id, $user_name, $rating, $review_text) {
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }

    // Sanitize user inputs
    $user_name = htmlspecialchars(trim($user_name));
    $review_text = htmlspecialchars(trim($review_text));

    // Create review data array
    $review = [
        'book_id' => $book_id,
        'user_name' => $user_name,
        'rating' => (int)$rating,
        'review_text' => $review_text,
        'timestamp' => time()
    ];

    // Save the review to a file or database
    if (saveReview($review)) {
        return true; // Review saved successfully
    } else {
        return false; // Error saving review
    }
}

// Function to save the review data
function saveReview($review) {
    $file = 'reviews.json';

    // Load existing reviews
    if (file_exists($file)) {
        $data = file_get_contents($file);
        $reviews = json_decode($data, true);
        if ($reviews === null) {
            $reviews = [];
        }
    } else {
        $reviews = [];
    }

    // Add new review
    array_push($reviews, $review);

    // Save updated reviews to file
    $success = file_put_contents($file, json_encode($reviews, JSON_PRETTY_PRINT));

    return $success !== false;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $book_id = $_POST['book_id'];
    $user_name = $_POST['user_name'];
    $rating = $_POST['rating'];
    $review_text = $_POST['review_text'];

    if (handleReview($book_id, $user_name, $rating, $review_text)) {
        echo "Thank you for your review!";
    } else {
        echo "Error submitting your review. Please try again.";
    }
}
?>

<!-- Example HTML form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="book_id" value="1">
    
    <div>
        <label for="user_name">Name:</label>
        <input type="text" id="user_name" name="user_name" required>
    </div>

    <div>
        <label for="rating">Rating (1-5):</label>
        <select id="rating" name="rating">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </select>
    </div>

    <div>
        <label for="review_text">Review:</label>
        <textarea id="review_text" name="review_text" required></textarea>
    </div>

    <button type="submit">Submit Review</button>
</form>


<?php
class ReviewManager {
    private $pdo;

    public function __construct(PDO $pdo) {
        $this->pdo = $pdo;
    }

    // Adds a new review
    public function addReview($user_id, $product_id, $rating, $title, $content) {
        try {
            // Validate inputs
            if (!$this->isValidUser($user_id)) return ['success' => false, 'error' => 'Invalid user ID'];
            if (!$this->isProductExists($product_id)) return ['success' => false, 'error' => 'Product not found'];
            if ($rating < 1 || $rating > 5) return ['success' => false, 'error' => 'Rating must be between 1 and 5'];
            if (empty(trim($title)) || empty(trim($content))) return ['success' => false, 'error' => 'Title and content cannot be empty'];

            // Sanitize inputs
            $title = htmlspecialchars(trim($title));
            $content = htmlspecialchars(trim($content));

            $stmt = $this->pdo->prepare("INSERT INTO reviews (user_id, product_id, rating, title, content, created_at) VALUES (?, ?, ?, ?, ?, NOW())");
            if (!$stmt->execute([$user_id, $product_id, $rating, $title, $content])) {
                return ['success' => false, 'error' => 'Failed to add review'];
            }

            return ['success' => true, 'message' => 'Review added successfully'];

        } catch (PDOException $e) {
            error_log("Error adding review: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Updates an existing review
    public function updateReview($review_id, $new_rating = null, $new_title = null, $new_content = null) {
        try {
            if (!$this->isReviewExists($review_id)) return ['success' => false, 'error' => 'Review not found'];

            // Prepare fields to update
            $updateFields = [];
            $params = [];

            if ($new_rating !== null) {
                if ($new_rating < 1 || $new_rating > 5) return ['success' => false, 'error' => 'Rating must be between 1 and 5'];
                $updateFields[] = "rating = ?";
                $params[] = $new_rating;
            }

            if ($new_title !== null && !empty(trim($new_title))) {
                $new_title = htmlspecialchars(trim($new_title));
                $updateFields[] = "title = ?";
                $params[] = $new_title;
            }

            if ($new_content !== null && !empty(trim($new_content))) {
                $new_content = htmlspecialchars(trim($new_content));
                $updateFields[] = "content = ?";
                $params[] = $new_content;
            }

            if (empty($updateFields)) return ['success' => false, 'error' => 'No changes provided'];

            // Check if the user is authorized to update this review
            $stmtCheckUser = $this->pdo->prepare("SELECT user_id FROM reviews WHERE id = ?");
            $stmtCheckUser->execute([$review_id]);
            $row = $stmtCheckUser->fetch(PDO::FETCH_ASSOC);
            
            // Here, you would typically check if the current user has permission (e.g., admin or original poster)
            // For simplicity, assuming only the author can update their review
            // In a real application, you'd compare with the current user's ID
            $params[] = $review_id;
            $stmtUpdate = $this->pdo->prepare("UPDATE reviews SET " . implode(', ', $updateFields) . " WHERE id = ?");
            if (!$stmtUpdate->execute($params)) {
                return ['success' => false, 'error' => 'Failed to update review'];
            }

            return ['success' => true, 'message' => 'Review updated successfully'];

        } catch (PDOException $e) {
            error_log("Error updating review: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Deletes a review
    public function deleteReview($review_id) {
        try {
            if (!$this->isReviewExists($review_id)) return ['success' => false, 'error' => 'Review not found'];

            // Check user permission (e.g., admin or the review's author)
            // For simplicity, assuming only admins can delete reviews
            $stmtCheckUser = $this->pdo->prepare("SELECT user_id FROM reviews WHERE id = ?");
            $stmtCheckUser->execute([$review_id]);
            $row = $stmtCheckUser->fetch(PDO::FETCH_ASSOC);

            // Here, you'd compare with the current user's role and ID
            // If not authorized, return error

            $stmtDelete = $this->pdo->prepare("DELETE FROM reviews WHERE id = ?");
            if (!$stmtDelete->execute([$review_id])) {
                return ['success' => false, 'error' => 'Failed to delete review'];
            }

            return ['success' => true, 'message' => 'Review deleted successfully'];

        } catch (PDOException $e) {
            error_log("Error deleting review: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Retrieves reviews for a product
    public function getReviews($product_id, $page = 1, $per_page = 10) {
        try {
            if (!$this->isProductExists($product_id)) return ['success' => false, 'error' => 'Product not found'];

            $offset = ($page - 1) * $per_page;

            $stmt = $this->pdo->prepare("SELECT r.*, u.username FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = ? AND r.status = 'approved' ORDER BY r.created_at DESC LIMIT ? OFFSET ?");
            $stmt->execute([$product_id, $per_page, $offset]);

            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

            return ['success' => true, 'data' => $reviews];

        } catch (PDOException $e) {
            error_log("Error retrieving reviews: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Calculates average rating for a product
    public function calculateAverageRating($product_id) {
        try {
            if (!$this->isProductExists($product_id)) return ['success' => false, 'error' => 'Product not found'];

            $stmt = $this->pdo->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = ?");
            $stmt->execute([$product_id]);
            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            return ['success' => true, 'data' => round($result['average'], 1)];

        } catch (PDOException $e) {
            error_log("Error calculating average rating: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Helper methods
    private function isValidUser($user_id) {
        $stmt = $this->pdo->prepare("SELECT id FROM users WHERE id = ?");
        $stmt->execute([$user_id]);
        return $stmt->rowCount() > 0;
    }

    private function isProductExists($product_id) {
        $stmt = $this->pdo->prepare("SELECT id FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        return $stmt->rowCount() > 0;
    }

    private function isReviewExists($review_id) {
        $stmt = $this->pdo->prepare("SELECT id FROM reviews WHERE id = ?");
        $stmt->execute([$review_id]);
        return $stmt->rowCount() > 0;
    }
}

// Usage example
try {
    // Assuming $pdo is a valid PDO instance
    $reviewManager = new ReviewManager($pdo);

    // Adding a review
    $result = $reviewManager->addReview(1, 5, 4, "Great product!", "This product exceeded my expectations.");
    print_r($result);

    // Updating a review
    $updateResult = $reviewManager->updateReview(1, null, "Even better product!", null);
    print_r($updateResult);

    // Deleting a review
    $deleteResult = $reviewManager->deleteReview(1);
    print_r($deleteResult);

    // Retrieving reviews
    $reviews = $reviewManager->getReviews(5);
    print_r($reviews);

    // Calculating average rating
    $averageRating = $reviewManager->calculateAverageRating(5);
    print_r($averageRating);

} catch (Exception $e) {
    echo "An error occurred: " . $e->getMessage();
}


<?php
// Function to handle user review submissions
function submitReview() {
    // Database connection details
    $host = 'localhost';
    $db_name = 'reviews_db';
    $username = 'root';
    $password = '';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if form is submitted
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            // Get form data
            $username = $_POST['username'];
            $rating = $_POST['rating'];
            $comment = $_POST['comment'];
            $review_date = date('Y-m-d H:i:s');
            
            // Handle file upload (if any)
            $image_path = '';
            if ($_FILES['review_image']['name'] != '') {
                $target_dir = 'uploads/';
                $target_file = $target_dir . basename($_FILES["review_image"]["name"]);
                
                // Validate image
                $uploadOk = 1;
                $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

                // Check if image file is a actual image or fake image
                $check = getimagesize($_FILES["review_image"]["tmp_name"]);
                if ($check === false) {
                    throw new Exception("File is not an image.");
                }

                // Allow only certain file formats
                $allowedFormats = array('jpg', 'jpeg', 'png', 'gif');
                if (!in_array($imageFileType, $allowedFormats)) {
                    throw new Exception("Only JPG, JPEG, PNG & GIF files are allowed.");
                }

                // Check file size (max 5MB)
                if ($_FILES["review_image"]["size"] > 5000000) {
                    throw new Exception("Sorry, your file is too large.");
                }

                // Rename the image to avoid duplicates
                $newFilename = time() . '_' . basename($_FILES['review_image']['name']);
                $target_file = $target_dir . $newFilename;

                // Upload the image
                if (move_uploaded_file($_FILES["review_image"]["tmp_name"], $target_file)) {
                    $image_path = 'uploads/' . $newFilename;
                } else {
                    throw new Exception("Sorry, there was an error uploading your file.");
                }
            }

            // Validate form input
            if ($username == '') {
                throw new Exception("Username is required.");
            }
            
            if (!isset($rating) || $rating < 1 || $rating > 5) {
                throw new Exception("Rating must be between 1 and 5.");
            }

            if (strlen($comment) > 500) {
                throw new Exception("Comment cannot exceed 500 characters.");
            }

            // Prepare SQL statement
            $stmt = $conn->prepare("
                INSERT INTO reviews (
                    username,
                    rating,
                    comment,
                    review_image,
                    review_date
                ) VALUES (
                    :username,
                    :rating,
                    :comment,
                    :review_image,
                    :review_date
                )
            ");

            // Bind parameters
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comment', $comment);
            $stmt->bindParam(':review_image', $image_path);
            $stmt->bindParam(':review_date', $review_date);

            // Execute query
            if ($stmt->execute()) {
                echo "Review submitted successfully!";
                header("Location: review_success.php");
                exit();
            } else {
                throw new Exception("Error submitting review.");
            }
        }
    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    } finally {
        // Close database connection
        if (isset($conn)) {
            $conn = null;
        }
    }
}

// Call the function
submitReview();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

// Create database connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM user_reviews ORDER BY submission_date DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>By: " . htmlspecialchars($row['author'], ENT_QUOTES, 'UTF-8') . "</h4>";
            echo "<p>" . nl2br(htmlspecialchars($row['content'], ENT_QUOTES, 'UTF-8')) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }
}

function submit_review($author, $content) {
    global $conn;
    
    // Sanitize input
    $author = mysqli_real_escape_string($conn, htmlspecialchars(trim($author)));
    $content = mysqli_real_escape_string($conn, htmlspecialchars(trim($content)));
    
    // Check if fields are not empty
    if (empty($author) || empty($content)) {
        return false;
    }
    
    // Insert review into database
    $sql = "INSERT INTO user_reviews (author, content, submission_date)
            VALUES ('$author', '$content', NOW())";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

// Process form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $content = $_POST['content'];
    
    if (submit_review($author, $content)) {
        echo "<div class='success'>";
        echo "Thank you for your review!";
        echo "</div>";
    } else {
        echo "<div class='error'>";
        echo "Error submitting review. Please try again.";
        echo "</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>

<h1>Submit a Review</h1>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="author">Name:</label><br>
    <input type="text" id="author" name="author"><br>
    
    <label for="content">Review:</label><br>
    <textarea id="content" name="content" rows="5"></textarea><br>
    
    <input type="submit" value="Submit Review">
</form>

<h2>Previous Reviews</h2>
<?php display_reviews(); ?>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Function to display average rating
function getAverageRating() {
    global $conn;
    $stmt = $conn->query("SELECT AVG(rating) as average FROM reviews");
    $result = $stmt->fetch();
    return number_format($result['average'], 1);
}

// Function to handle review submission
function submitReview($name, $email, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (empty($name) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL) && $email != '') {
        return "Invalid email format.";
    }
    
    if (!ctype_digit((string)$rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    // Sanitize input
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $comment = htmlspecialchars($comment);
    
    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->execute([$name, $email, $rating, $comment]);
        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    try {
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
        while ($row = $stmt->fetch()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $submissionDate = $row['submission_date'];
            
            // Display star rating
            $stars = str_repeat("★", $rating) . str_repeat("☆", 5 - $rating);
            
            echo "<div class='review'>";
            echo "<div class='rating'>$stars</div>";
            echo "<div class='comment'>$comment</div>";
            echo "<div class='date'>Submitted on: $submissionDate</div>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        $result = submitReview($name, $email, $rating, $comment);
        if ($result == "Review submitted successfully!") {
            // Reload page to show new review
            header("Location: #" . md5(uniqid()));
            exit();
        } else {
            echo "<div class='error'>$result</div>";
        }
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($product_id, $name, $email, $rating, $comment, $conn) {
    try {
        // Sanitize input
        $name = htmlspecialchars(strip_tags($name));
        $email = filter_var($email, FILTER_SANITIZE_EMAIL);
        $comment = htmlspecialchars(strip_tags($comment));

        if (empty($product_id) || empty($name) || empty($email) || empty($rating) || empty($comment)) {
            throw new Exception("All fields are required");
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check rating range
        $rating = (int)$rating;
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Prepare and execute query
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            (product_id, name, email, rating, comment, created_at)
            VALUES (:product_id, :name, :email, :rating, :comment, NOW())
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            throw new Exception("Error submitting review");
        }

    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews($product_id, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT * FROM reviews 
            WHERE product_id = :product_id 
            ORDER BY created_at DESC
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();

        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($reviews)) {
            return "No reviews yet.";
        }

        $output = '<div class="reviews-container">';
        foreach ($reviews as $review) {
            $stars = str_repeat('<span class="star">★</span>', $review['rating']);
            
            $output .= '
                <div class="review-item">
                    <h3>' . $review['name'] . '</h3>
                    <p class="rating">' . $stars . '</p>
                    <p class="comment">' . $review['comment'] . '</p>
                    <small>Posted on ' . date('F j, Y', strtotime($review['created_at'])) . '</small>
                </div>';
        }
        $output .= '</div>';

        return $output;

    } catch (Exception $e) {
        return "Error displaying reviews: " . $e->getMessage();
    }
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        textarea {
            width: 100%;
            height: 150px;
        }
        .star {
            color: #ffd700;
            font-size: 24px;
        }
    </style>
</head>
<body>

<h1>Product Review System</h1>

<!-- Review Form -->
<div class="review-form">
    <h2>Submit Your Review</h2>
    <form action="" method="post">
        <input type="hidden" name="product_id" value="1"> <!-- Product ID -->
        
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="5">★ ★ ★ ★ ★</option>
            <option value="4">★ ★ ★ ★</option>
            <option value="3">★ ★ ★</option>
            <option value="2">★ ★</option>
            <option value="1">★</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>
</div>

<!-- Display Reviews -->
<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = submitReview(
        $_POST['product_id'],
        $_POST['name'],
        $_POST['email'],
        $_POST['rating'],
        $_POST['comment'],
        $conn
    );
    
    echo "<script>alert('$result');</script>";
}

echo displayReviews(1, $conn);
?>

</body>
</html>


<?php
// Function to add a new review
function addReview($userId, $productId, $rating, $comment) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    try {
        // Sanitize inputs
        $rating = intval($rating);
        $comment = htmlspecialchars($comment);
        
        // Validate input
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Rating must be between 1 and 5.");
        }
        
        if (!is_numeric($userId) || !is_numeric($productId)) {
            throw new Exception("Invalid user or product ID.");
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
                VALUES (?, ?, ?, ?)";
                
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            // Update product's average rating
            $this->updateProductRating($productId);
            
            return array(
                'status' => 'success',
                'message' => 'Review added successfully',
                'review_id' => mysqli_insert_id($conn)
            );
        } else {
            throw new Exception("Error adding review: " . mysqli_error($conn));
        }
        
    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}

// Function to update product average rating after review is added
function updateProductRating($productId) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    try {
        // Calculate new average rating
        $sql = "SELECT COUNT(*) as total_reviews, AVG(rating) as avg_rating 
                FROM reviews 
                WHERE product_id = ?";
                
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);
        
        $total_reviews = $row['total_reviews'];
        $avg_rating = $row['avg_rating'];
        
        // Update product table
        $updateSql = "UPDATE products 
                      SET total_ratings = ?, avg_rating = ?
                      WHERE id = ?";
                      
        $updateStmt = mysqli_prepare($conn, $updateSql);
        mysqli_stmt_bind_param($updateStmt, "idi", $total_reviews, $avg_rating, $productId);
        
        if (!mysqli_stmt_execute($updateStmt)) {
            throw new Exception("Error updating product ratings: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}

// Function to get reviews for a product
function getProductReviews($productId) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    try {
        $sql = "SELECT r.id, u.username, r.rating, r.comment, DATE_FORMAT(r.created_at, '%Y-%m-%d %H:%i') as created_at 
                FROM reviews r
                JOIN users u ON r.user_id = u.id
                WHERE r.product_id = ?
                ORDER BY r.created_at DESC";
                
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        
        if (mysqli_stmt_execute($stmt)) {
            $result = mysqli_stmt_get_result($stmt);
            $reviews = array();
            
            while ($row = mysqli_fetch_assoc($result)) {
                $reviews[] = $row;
            }
            
            return array(
                'status' => 'success',
                'data' => $reviews
            );
        } else {
            throw new Exception("Error retrieving reviews: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}

// Example usage:
// Add a new review
$reviewResult = addReview(1, 5, 4, "Great product, highly recommended!");
print_r($reviewResult);

// Get reviews for product ID 5
$reviews = getProductReviews(5);
print_r($reviews);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die('Could not connect: ' . $e->getMessage());
}

// Function to handle and display reviews
function user_reviews($conn) {
    // Get all reviews from database
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Handle review submission
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Validate input
        $username = $_POST['username'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        if (empty($username) || empty($rating) || empty($comment)) {
            echo "Please fill in all fields!";
            exit();
        }

        // Insert review into database
        $stmt_insert = $conn->prepare("INSERT INTO reviews (username, rating, comment, timestamp) VALUES (:username, :rating, :comment, NOW())");
        $stmt_insert->bindParam(':username', $username);
        $stmt_insert->bindParam(':rating', $rating);
        $stmt_insert->bindParam(':comment', $comment);
        $stmt_insert->execute();

        // Redirect to prevent form resubmission
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }

    // Display review form
    echo "<div class='review-form'>";
    echo "<h2>Submit Your Review</h2>";
    echo "<form method='post' action='" . $_SERVER['PHP_SELF'] . "'>";
    echo "<input type='text' name='username' placeholder='Your Name' required><br>";
    echo "<select name='rating' required>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value='$i'>$i Stars</option>";
    }
    echo "</select><br>";
    echo "<textarea name='comment' placeholder='Your Review' required></textarea><br>";
    echo "<input type='submit' value='Submit'>";
    echo "</form>";
    echo "</div>";

    // Display existing reviews
    if (count($reviews) > 0) {
        echo "<div class='existing-reviews'>";
        foreach ($reviews as $review) {
            $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
            $time_ago = date_diff(date_create($review['timestamp']), date_create())->format("%d days ago");
            
            echo "<div class='review'>";
            echo "<h3>By " . htmlspecialchars($review['username']) . "</h3>";
            echo "<p class='stars'>" . $stars . "</p>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted " . $time_ago . "</small>";
            echo "</div>";
        }
        echo "</div>";
        
        // Calculate and display average rating
        $stmt_avg = $conn->query("SELECT AVG(rating) AS avg_rating FROM reviews");
        $avg_rating = $stmt_avg->fetch(PDO::FETCH_ASSOC);
        $average = round($avg_rating['avg_rating'], 1);
        
        echo "<div class='average-rating'>";
        echo "Average Rating: $average/5";
        echo "</div>";
    } else {
        echo "No reviews yet. Be the first to review!";
    }
}

// Call the function
user_reviews($conn);

// Close database connection
$conn = null;
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database configuration
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';

    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return false;
    }

    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if all required fields are provided
    if (empty($user_id) || empty($product_id) || empty($rating)) {
        return false;
    }

    // Prepare SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";

    if (mysqli_query($conn, $sql)) {
        mysqli_close($conn);
        return true;
    } else {
        mysqli_close($conn);
        return false;
    }
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "This product is amazing!";

if (submit_review($user_id, $product_id, $rating, $comment)) {
    echo "Thank you for submitting your review!";
} else {
    echo "Error submitting review. Please try again.";
}
?>


<?php
function createReview($username, $rating, $comment, $db) {
    // Validate inputs
    if (empty($username)) {
        return "Username is required";
    }
    if (!isset($rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    try {
        // Prepare the SQL statement to insert review
        $sql = "INSERT INTO reviews (username, rating, comment, created_at) 
                VALUES (:username, :rating, :comment, NOW())";

        $stmt = $db->prepare($sql);
        
        // Bind parameters
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return "Review created successfully";
        } else {
            return "Error creating review: " . implode(", ", $stmt->errorInfo());
        }
    } catch (PDOException $e) {
        // Handle any exceptions that occur during database operations
        return "Database error: " . $e->getMessage();
    }
}
?>


<?php
// Assume $db is your PDO database connection object

$username = "john_doe";
$rating = 4;
$comment = "Great product!";

$result = createReview($username, $rating, $comment, $db);

if ($result === "Review created successfully") {
    echo "Thank you for your review!";
} else {
    echo "Error: " . $result;
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function add_review($user_id, $category, $rating, $comment) {
    global $conn;
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    if (empty($comment)) {
        return false;
    }
    
    try {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, category, rating, comment, status, created_at)
                              VALUES (:user_id, :category, :rating, :comment, 'active', NOW())");
        
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':category', $category);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function display_reviews($category = '', $limit = 10, $offset = 0) {
    global $conn;
    
    try {
        // Build SQL query
        $sql = "SELECT * FROM reviews WHERE status = 'active'";
        
        if (!empty($category)) {
            $sql .= " AND category = :category";
        }
        
        $sql .= " ORDER BY created_at DESC LIMIT :limit OFFSET :offset";
        
        $stmt = $conn->prepare($sql);
        
        // Bind parameters
        if (!empty($category)) {
            $stmt->bindParam(':category', $category);
        }
        $stmt->bindParam(':limit', $limit, PDO::PARAM_INT);
        $stmt->bindParam(':offset', $offset, PDO::PARAM_INT);
        
        $stmt->execute();
        
        // Fetch results
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            return "No reviews found";
        }
        
        // Display reviews
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "</small>";
            echo "</div>";
        }
        
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add new review
    if (isset($_POST['submit_review'])) {
        $user_id = 1; // Replace with actual user ID
        $category = $_POST['category'];
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));
        
        if (add_review($user_id, $category, $rating, $comment)) {
            echo "Review added successfully!";
        } else {
            echo "Error adding review.";
        }
    }
}

// Display all reviews
display_reviews();
?>

<!-- HTML Form -->
<form method="post" action="">
    <input type="hidden" name="submit_review" value="1">
    <select name="category">
        <option value="product">Product Review</option>
        <option value="service">Service Review</option>
        <option value="experience">Experience Review</option>
    </select>
    
    <div class="rating">
        <input type="radio" name="rating" value="5" id="5">
        <label for="5">★</label>
        <input type="radio" name="rating" value="4" id="4">
        <label for="4">★</label>
        <input type="radio" name="rating" value="3" id="3">
        <label for="3">★</label>
        <input type="radio" name="rating" value="2" id="2">
        <label for="2">★</label>
        <input type="radio" name="rating" value="1" id="1">
        <label for="1">★</label>
    </div>

    <textarea name="comment" placeholder="Write your review..." required></textarea>
    <button type="submit">Submit Review</button>
</form>

<!-- CSS Styling -->
<style>
.review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
}

.rating {
    display: flex;
    align-items: center;
    gap: 5px;
}
</style>


<?php
function submit_review($user_id, $product_id, $rating, $review_text) {
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }
    
    if (empty($user_id) || empty($product_id)) {
        throw new Exception("User ID and Product ID are required");
    }
    
    // Database connection
    require_once('db_config.php');
    
    try {
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }
        
        // Check if user has already reviewed this product
        $check_review_query = "
            SELECT review_id 
            FROM reviews 
            WHERE user_id = ? AND product_id = ?
        ";
        
        $stmt = $conn->prepare($check_review_query);
        $stmt->bind_param("ii", $user_id, $product_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Update existing review
            $update_review_query = "
                UPDATE reviews 
                SET rating = ?, review_text = ?, review_date = CURRENT_TIMESTAMP 
                WHERE user_id = ? AND product_id = ?
            ";
            
            $stmt = $conn->prepare($update_review_query);
            $stmt->bind_param("iisi", $rating, $review_text, $user_id, $product_id);
            $stmt->execute();
        } else {
            // Insert new review
            $insert_review_query = "
                INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)
            ";
            
            $stmt = $conn->prepare($insert_review_query);
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $review_text);
            $stmt->execute();
        }
        
        $stmt->close();
        $conn->close();
        
        return "Review submitted successfully!";
    } catch (Exception $e) {
        // Handle any errors
        error_log("Error submitting review: " . $e->getMessage());
        throw new Exception("Failed to submit review");
    }
}
?>


try {
    $result = submit_review(123, 456, 5, "Great product!");
    echo $result; // Should display "Review submitted successfully!"
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Connect to database
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['author']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Date: " . htmlspecialchars($row['date']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to add new review
function add_review($author, $rating, $comment) {
    global $conn;
    
    // SQL injection prevention
    $author = mysqli_real_escape_string($conn, htmlspecialchars($author));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    $date = date("Y-m-d H:i:s");
    
    // Insert into database
    $sql = "INSERT INTO reviews (author, rating, comment, date) VALUES ('$author', '$rating', '$comment', '$date')";
    
    if (mysqli_query($conn, $sql)) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Validate input
    if (empty($author) || empty($comment)) {
        echo "Please fill in all required fields.";
    } else {
        add_review($author, $rating, $comment);
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            background-color: #fff;
            border-radius: 5px;
        }
        input, textarea {
            margin-bottom: 10px;
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h2>Leave a Review</h2>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="author" placeholder="Your Name" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br>
        <textarea name="comment" placeholder="Your Review" rows="5" required></textarea><br>
        <input type="submit" value="Submit Review">
    </form>

    <?php display_reviews(); ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Escape the inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if all fields are filled
    if ($userId == "" || $productId == "" || $rating == "" || $comment == "") {
        return "Please fill in all required fields.";
    }
    
    // Submit the review to the database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp, approved) 
              VALUES ('$userId', '$productId', '$rating', '$comment', NOW(), '0')";
    
    if (mysqli_query($conn, $query)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    // Escape the input to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Fetch all approved reviews for the given product
    $query = "SELECT r.*, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = '$productId' AND r.approved = '1'
              ORDER BY r.timestamp DESC";
    
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
                echo "<h3>Rating: " . $row['rating'] . "/5</h3>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                echo "<small>Posted by " . htmlspecialchars($row['username']) . " on " . date('F j, Y', strtotime($row['timestamp'])) . "</small><br>";
                echo "<div class='helpful'>";
                    // Add helpful vote functionality
                    echo "<a href='#'>Helpful (" . get Helpful Votes . ")</a>";
                echo "</div>";
            echo "</div>";
        }
    } else {
        echo "No reviews found for this product.";
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    // Escape the input to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Calculate average rating
    $query = "SELECT AVG(rating) as average 
              FROM reviews 
              WHERE product_id = '$productId' AND approved = '1'";
    
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average'], 2); // Round to 2 decimal places
}

// Example usage:

// Submit a new review when form is submitted
if (isset($_POST['submit_review'])) {
    $reviewMessage = submitReview(
        $_SESSION['user_id'],
        $_GET['product_id'],
        $_POST['rating'],
        $_POST['comment']
    );
    
    if ($reviewMessage == "Review submitted successfully!") {
        // Refresh the page to show new review
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit();
    } else {
        echo $reviewMessage;
    }
}

// Display all reviews for a product
echo "<h2>Product Reviews</h2>";
displayReviews($_GET['product_id']);

// Display average rating
echo "<p>Average Rating: " . getAverageRating($_GET['product_id']) . "/5</p>";

// Close the database connection
mysqli_close($conn);
?>


<?php
// Function to create or update a user review
function submitReview($reviewText, $userId, $rating = null, $reviewDate = null) {
    // Database connection parameters
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "reviews_db";

    try {
        // Validate inputs
        if (!is_string($reviewText) || trim($reviewText) === "") {
            throw new InvalidArgumentException("Review text cannot be empty.");
        }
        
        if (!is_int($userId)) {
            throw new InvalidArgumentException("User ID must be an integer.");
        }

        // Optional parameters validation
        if ($rating !== null) {
            if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
                throw new InvalidArgumentException("Rating must be between 1 and 5.");
            }
            $rating = (int)$rating;
        }

        if ($reviewDate !== null && !strtotime($reviewDate)) {
            throw new InvalidArgumentException("Invalid date format. Please use 'YYYY-MM-DD'.");
        }

        // Establish database connection
        $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (review_text, user_id, rating, review_date) 
                VALUES (:reviewText, :userId, :rating, :reviewDate)";

        $statement = $pdo->prepare($sql);
        
        // Bind parameters
        $statement->bindParam(':reviewText', $reviewText);
        $statement->bindParam(':userId', $userId, PDO::PARAM_INT);

        if ($rating !== null) {
            $statement->bindParam(':rating', $rating, PDO::PARAM_INT);
        } else {
            $statement->bindValue(':rating', null);
        }

        if ($reviewDate !== null) {
            $statement->bindParam(':reviewDate', $reviewDate);
        } else {
            // Set current date if not provided
            $statement->bindValue(':reviewDate', date('Y-m-d'));
        }

        // Execute the statement
        $statement->execute();

        return "Review submitted successfully. Review ID: " . $pdo->lastInsertId();

    } catch (PDOException $e) {
        throw new RuntimeException("Database error: " . $e->getMessage(), 0, $e);
    } catch (InvalidArgumentException $e) {
        throw $e;
    }
}

// Example usage:
try {
    $reviewText = "This is a great product!";
    $userId = 123;
    $rating = 5;
    $reviewDate = date('Y-m-d');

    $result = submitReview($reviewText, $userId, $rating, $reviewDate);
    echo $result;

} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    // Input validation
    $errors = array();
    if (empty($name) || strlen($name) < 3) {
        $errors[] = "Please enter a valid name (minimum 3 characters)";
    }
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    }
    if ($rating == 0) {
        $errors[] = "Please select a rating";
    }
    if (empty($comment) || strlen($comment) < 5) {
        $errors[] = "Please write a comment (minimum 5 characters)";
    }

    // If no errors, insert into database
    if (count($errors) == 0) {
        $sql = "INSERT INTO reviews (name, email, rating, comment, created_at)
                VALUES ('$name', '$email', $rating, '$comment', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "<p class='success'>Thank you for your review!</p>";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    } else {
        foreach ($errors as $error) {
            echo "<p class='error'>$error</p>";
        }
    }
}

// Retrieve and display all reviews
$sql = "SELECT * FROM reviews ORDER BY created_at DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        $rating_stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
        echo "
            <div class='review'>
                <h3>{$row['name']}</h3>
                <p class='rating'>$rating_stars</p>
                <p class='comment'>{$row['comment']}</p>
                <small>Submitted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small>
            </div>
        ";
    }
} else {
    echo "<p>No reviews found. Be the first to review!</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .rating {
            color: #ff6b35;
            font-size: 24px;
        }
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class='review-form'>
        <h2>Submit Your Review</h2>
        <form action='<?php echo $_SERVER['PHP_SELF']; ?>' method='post'>
            <label for='name'>Name:</label>
            <input type='text' id='name' name='name' required><br>

            <label for='email'>Email:</label>
            <input type='email' id='email' name='email' required><br>

            <label>Rating:</label>
            <div class='rating-stars'>
                <input type='radio' name='rating' value='5'> ★★★★★<br>
                <input type='radio' name='rating' value='4'> ★★★★☆<br>
                <input type='radio' name='rating' value='3'> ★★★☆☆<br>
                <input type='radio' name='rating' value='2'> ★★☆☆☆<br>
                <input type='radio' name='rating' value='1'> ★☆☆☆☆
            </div><br>

            <label for='comment'>Comment:</label>
            <textarea id='comment' name='comment' rows='4' required></textarea><br>

            <input type='submit' name='submit' value='Submit Review'>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if (isset($_POST['submit'])) {
    // Sanitize and validate input
    $name = htmlspecialchars(trim($_POST['name']));
    $review_text = htmlspecialchars(trim($_POST['review']));
    $rating = intval($_POST['rating']);

    if (empty($name) || empty($review_text) || empty($rating)) {
        echo "Please fill in all required fields!";
    } else {
        // Prepare and bind the SQL statement
        $stmt = mysqli_prepare($conn, "INSERT INTO reviews (author, review_text, rating, review_date) VALUES (?, ?, ?, CURRENT_TIMESTAMP)");
        mysqli_stmt_bind_param($stmt, "sss", $name, $review_text, $rating);

        if (mysqli_stmt_execute($stmt)) {
            echo "<p style='color: green;'>Thank you for submitting your review!</p>";
        } else {
            echo "<p style='color: red;'>Error submitting review. Please try again.</p>";
        }

        mysqli_stmt_close($stmt);
    }
}

// Fetch and display existing reviews
$reviews_query = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $reviews_query);

echo "<h2>Existing Reviews</h2>";
if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 10px;'>";
        echo "<h3>Reviewer: " . $row['author'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>Review: " . $row['review_text'] . "</p>";
        echo "<p>Date: " . date('jS M Y, g:i a', strtotime($row['review_date'])) . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews found. Be the first to review!</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }
        input, textarea {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Submit a Review</h1>
    
    <div class="review-form">
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="5" cols="40" required></textarea><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Select a rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>

            <input type="submit" name="submit" value="Submit Review">
        </form>
    </div>
</body>
</html>


<?php
function submitReview($userId, $productId, $rating, $comment) {
    // Database configuration
    include('db_config.php');

    try {
        // Connect to database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Sanitize inputs
        $userId = intval($userId);
        $productId = intval($productId);
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, trim($$comment));

        // Validate input
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Prepare SQL statement to insert review
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, NOW())";

        // Create prepared statement
        $stmt = $conn->prepare($sql);
        
        if ($stmt === false) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("iiis", $userId, $productId, $rating, $comment);

        // Execute the statement
        $result = $stmt->execute();

        if ($result) {
            // Log successful review submission (optional)
            file_put_contents('review_log.txt', "Review submitted by user {$userId} for product {$productId} at " . date('Y-m-d H:i:s') . "
", FILE_APPEND);
            
            return true;
        } else {
            throw new Exception("Error submitting review: " . $stmt->error);
        }

    } catch (Exception $e) {
        // Log error
        file_put_contents('error_log.txt', "Review submission failed: " . $e->getMessage() . " at " . date('Y-m-d H:i:s') . "
", FILE_APPEND);
        return false;
    }
}

// Example usage:
// if (submitReview(1, 5, 4, "Great product!")) {
//     echo "Thank you for your review!";
// } else {
//     echo "Sorry, there was an error submitting your review.";
// }

?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($productId, $userName, $reviewText, $rating) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    $userName = mysqli_real_escape_string($conn, $userName);
    $reviewText = mysqli_real_escape_string($conn, $reviewText);
    $rating = mysqli_real_escape_string($conn, $rating);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, review_text, rating, review_date) 
            VALUES ('$productId', '$userName', '$reviewText', '$rating', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function displayReviews($productId) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get all reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("⭐", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $productId = $_POST['product_id'];
    $userName = $_POST['user_name'];
    $reviewText = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (addReview($productId, $ userName, $reviewText, $rating)) {
        echo "Thank you for your review!";
    } else {
        echo "Error adding review.";
    }
}

// Display reviews for product ID 1
displayReviews(1);

// Close database connection
mysqli_close($conn);
?>


<?php
function displayUserReview($total_reviews, $average_rating, $individual_ratings = array()) {
    // Calculate star distribution
    $star_counts = array_fill(0, 6, 0); // Indexes 0-5 (0 unused)
    
    if (!empty($individual_ratings)) {
        foreach ($individual_ratings as $rating) {
            $rounded_rating = round($rating);
            if ($rounded_rating > 0 && $rounded_rating <= 5) {
                $star_counts[$rounded_rating]++;
            }
        }
    } else {
        // If no individual ratings, calculate based on average
        $average_rating = round($average_rating, 1);
        $half_stars = ($average_rating * 2) % 2;
        
        for ($i = 1; $i <= 5; $i++) {
            if ($average_rating >= $i) {
                $star_counts[$i]++;
            } else {
                break;
            }
        }
    }

    // Handle case with no reviews
    if ($total_reviews == 0) {
        return "No reviews yet.";
    }

    // Build the HTML output
    $output = "<div class='review-stats'>";
    
    if (!empty($individual_ratings)) {
        foreach ($individual_ratings as $rating) {
            $stars = str_repeat('<span class="star full"></span>', floor($rating));
            
            if ($rating % 1 != 0) {
                $stars .= '<span class="star half"></span>';
            }
            
            $output .= "<div class='review'>";
            $output .= $stars;
            $output .= " (<span class='rating-text'>$rating</span>)";
            $output .= "</div>";
        }
    } else {
        // Display average rating
        for ($i = 1; $i <= $star_counts[5]; $i++) {
            $output .= '<span class="star full"></span>';
        }

        if ($average_rating != floor($average_rating)) {
            $output .= '<span class="star half"></span>';
        }
        
        $output .= " (<span class='rating-text'>{$average_rating}/5</span>)";
    }

    // Add review count
    $output .= "<div class='review-count'>";
    $output .= "$total_reviews reviews";
    $output .= "</div>";
    
    $output .= "</div>";

    return $output;
}
?>


$reviews = array(4.5, 5, 3, 2.5, 5);
$result = displayUserReview(count($reviews), 4.2, $reviews);

echo $result;


<?php
// Database connection setup
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating value
    }
    
    // Sanitize and escape input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars(trim($comment)));
    
    // Check if user exists
    $checkUserQuery = "SELECT id FROM users WHERE id = ?";
    $stmt = mysqli_prepare($conn, $checkUserQuery);
    mysqli_stmt_bind_param($stmt, "i", $userId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false; // User doesn't exist
    }
    
    // Insert review into database
    $insertQuery = "
        INSERT INTO reviews (user_id, product_id, rating, comment)
        VALUES (?, ?, ?, ?)
    ";
    
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true; // Review submitted successfully
    } else {
        return false; // Error submitting review
    }
}

function getReviews($productId) {
    global $conn;
    
    $reviews = array();
    
    $query = "
        SELECT 
            r.id AS review_id,
            u.username,
            r.rating,
            r.comment,
            r.date,
            COUNT(DISTINCT v.vote_id) AS total_votes
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        LEFT JOIN votes v ON r.id = v.review_id
        WHERE r.product_id = ?
        GROUP BY r.id
        ORDER BY r.date DESC
    ";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'id' => $row['review_id'],
            'username' => $row['username'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date' => date('M j, Y', strtotime($row['date'])),
            'total_votes' => $row['total_votes']
        );
    }
    
    return $reviews;
}

function voteReview($reviewId, $userId, $voteType) {
    global $conn;
    
    // Validate input
    if ($voteType != 1 && $voteType != -1) {
        return false; // Invalid vote type (upvote = 1, downvote = -1)
    }
    
    // Check if user exists
    $checkUserQuery = "SELECT id FROM users WHERE id = ?";
    $stmt = mysqli_prepare($conn, $checkUserQuery);
    mysqli_stmt_bind_param($stmt, "i", $userId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false; // User doesn't exist
    }
    
    // Check if review exists
    $checkReviewQuery = "SELECT id FROM reviews WHERE id = ?";
    $stmt = mysqli_prepare($conn, $checkReviewQuery);
    mysqli_stmt_bind_param($stmt, "i", $reviewId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false; // Review doesn't exist
    }
    
    // Check if user has already voted for this review
    $checkVoteQuery = "SELECT id FROM votes WHERE review_id = ? AND user_id = ?";
    $stmt = mysqli_prepare($conn, $checkVoteQuery);
    mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        return false; // User already voted for this review
    }
    
    // Insert vote
    $insertVoteQuery = "
        INSERT INTO votes (review_id, user_id, vote_type)
        VALUES (?, ?, ?)
    ";
    
    $stmt = mysqli_prepare($conn, $insertVoteQuery);
    mysqli_stmt_bind_param($stmt, "iii", $reviewId, $userId, $voteType);
    
    if (mysqli_stmt_execute($stmt)) {
        // Update review votes count
        $updateReviewQuery = "
            UPDATE reviews SET total_votes = total_votes + 1 WHERE id = ?
        ";
        
        $stmt2 = mysqli_prepare($conn, $updateReviewQuery);
        mysqli_stmt_bind_param($stmt2, "i", $reviewId);
        mysqli_stmt_execute($stmt2);
        
        return true; // Vote submitted successfully
    } else {
        return false; // Error submitting vote
    }
}
?>


// Submitting a review
$userId = 1;
$productId = 5;
$rating = 4;
$comment = "Great product!";
if (submitReview($userId, $productId, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

// Getting reviews for a product
$reviews = getReviews(5);
foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
    echo "<p>By " . $review['username'] . " on " . $review['date'] . "</p>";
    echo "<p>" . $review['comment'] . "</p>";
    echo "<div class='votes'>";
    echo "<button onclick='voteReview(".$review['id'].", 1, 1)'>Upvote</button>";
    echo "<span>".$review['total_votes']."</span>";
    echo "<button onclick='voteReview(".$review['id'].", 1, -1)'>Downvote</button>";
    echo "</div></div>";
}


<?php
function add_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'reviews_db';

    // Validate input
    if (!isset($user_id, $product_id, $rating, $comment)) {
        return "All fields are required";
    }

    // Check for valid values
    if (!ctype_digit((string)$user_id) || !ctype_digit((string)$product_id)) {
        return "Invalid user or product ID";
    }
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }
    if (strlen($comment) < 1 || strlen($comment) > 1000) {
        return "Comment must be between 1 and 1000 characters";
    }

    // Connect to database
    $mysqli = new mysqli($host, $db_username, $db_password, $database);
    
    if ($mysqli->connect_errno) {
        return "Failed to connect to database: " . $mysqli->connect_error;
    }

    // Sanitize input
    $comment = $mysqli->real_escape_string($comment);

    // Prepare and execute the SQL query
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES (?, ?, ?, ?)";
    
    if ($stmt = $mysqli->prepare($sql)) {
        $stmt->bind_param("iiis", $user_id, $product_id, $rating, $comment);
        
        if ($stmt->execute()) {
            return "Review added successfully";
        } else {
            return "Error adding review: " . $stmt->error;
        }
    } else {
        return "Prepare failed: " . $mysqli->error;
    }

    // Close database connection
    $mysqli->close();
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 4;
$comment = "This product is great!";
$result = add_user_review($user_id, $product_id, $rating, $comment);
echo $result;

?>


<?php
function display_reviews() {
    // Sample review data (you would typically get this from a database)
    $reviews = array(
        array(
            'id' => 1,
            'user_name' => 'John Doe',
            'comment' => 'Great service! I had an amazing experience.',
            'rating' => 5,
            'timestamp' => time() - (86400 * 3) // 3 days ago
        ),
        array(
            'id' => 2,
            'user_name' => 'Jane Smith',
            'comment' => 'The staff was very helpful, but the wait time could be improved.',
            'rating' => 4,
            'timestamp' => time() - (86400 * 1) // 1 day ago
        ),
        array(
            'id' => 3,
            'user_name' => 'Bob Johnson',
            'comment' => 'Not the best experience. Will not return.',
            'rating' => 2,
            'timestamp' => time() - (86400 * 7) // 1 week ago
        )
    );

    // Display reviews
    echo '<div class="reviews-container">';
    
    foreach ($reviews as $review) {
        // Format timestamp
        $formatted_date = date('j M Y H:i', $review['timestamp']);
        
        // Get star rating
        $stars = get_stars($review['rating']);
        
        echo <<<HTML
            <div class="review-item">
                <h4>{$review['user_name']}</h4>
                <p>{$review['comment']}</p>
                <div class="rating">$stars</div>
                <small>{$formatted_date}</small>
            </div>
            
HTML;
    }
    
    echo '</div>';
}

// Helper function to display stars based on rating
function get_stars($rating) {
    $full_stars = floor($rating);
    $has_half_star = ($rating - $full_stars) >= 0.5;
    $stars_html = '';
    
    for ($i = 0; $i < $full_stars; $i++) {
        $stars_html .= '★';
    }
    
    if ($has_half_star) {
        $stars_html .= '⯨'; // Half star emoji
    }
    
    return $stars_html;
}

// Call the function to display reviews
display_reviews();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display review form
function display_review_form() {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <h3>Submit a Review</h3>
        <div class="rating">
            <label for="stars">Rating:</label><br>
            <input type="radio" name="stars" value="5"> 5
            <input type="radio" name="stars" value="4"> 4
            <input type="radio" name="stars" value="3"> 3
            <input type="radio" name="stars" value="2"> 2
            <input type="radio" name="stars" value="1"> 1
        </div>
        <br>
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4" cols="50"></textarea>
        <br>
        <input type="submit" name="submit_review" value="Submit">
    </form>
    <?php
}

// Function to submit review
function submit_review($conn) {
    if (isset($_POST['submit_review'])) {
        $stars = $_POST['stars'];
        $comment = $_POST['comment'];
        
        // Sanitize inputs
        $stars = mysqli_real_escape_string($conn, $stars);
        $comment = mysqli_real_escape_string($conn, $comment);
        
        // Validate inputs
        if ($stars < 1 || $stars > 5) {
            echo "Invalid rating!";
            return;
        }
        if (empty($comment)) {
            echo "Please write a comment!";
            return;
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (stars, comment) VALUES ('$stars', '$comment')";
        if ($conn->query($sql) === TRUE) {
            echo "Review submitted successfully!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function display_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $stars = str_repeat("⭐", $row["stars"]);
            echo "<div class='review'>";
            echo "<p>Rating: $stars</p>";
            echo "<p>Comment: " . $row["comment"] . "</p>";
            echo "<p>" . date('d/m/Y H:i', strtotime($row["timestamp"])) . "</p>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
        .rating input[type="radio"] {
            display: inline-block;
            margin-right: 5px;
        }
    </style>
</head>
<body>

<?php
display_review_form();
submit_review($conn);
echo "<h3>Reviews:</h3>";
display_reviews($conn);

$conn->close();
?>
</body>
</html>


<?php
function handleReviews($db) {
    session_start();
    
    // Check if the action parameter is set
    $action = isset($_POST['action']) ? $_POST['action'] : '';
    
    switch ($action) {
        case 'display':
            displayReviews($db);
            break;
            
        case 'submit':
            submitReview($db);
            break;
            
        case 'edit':
            editReview($db);
            break;
            
        case 'delete':
            deleteReview($db);
            break;
            
        default:
            echo "Invalid action";
            break;
    }
}

function displayReviews($db) {
    $query = "SELECT r.*, u.name 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              ORDER BY r.review_date DESC";
    
    $stmt = $db->prepare($query);
    $stmt->execute();
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Reviewer: {$review['name']}</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Review: {$review['comment']}</p>";
        echo "<small>Posted on: {$review['review_date']}</small><br>";
        
        if ($_SESSION['user_id'] == $review['user_id']) {
            echo "<a href='edit_review.php?id={$review['id']}'>Edit</a> | ";
            echo "<a href='delete_review.php?id={$review['id']}'>Delete</a>";
        }
        
        echo "</div><hr>";
    }
}

function submitReview($db) {
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['status' => 'error', 'message' => 'You must be logged in to post a review!']));
    }

    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars($_POST['comment']);

    if (empty($name) || empty($email) || $rating == 0 || empty($comment)) {
        die(json_encode(['status' => 'error', 'message' => 'Please fill in all required fields!']));
    }

    $stmt = $db->prepare("INSERT INTO reviews 
                        SET user_id = :user_id,
                            name = :name,
                            email = :email,
                            rating = :rating,
                            comment = :comment,
                            review_date = NOW()");
    
    $result = $stmt->execute([
        'user_id' => $_SESSION['user_id'],
        'name' => $name,
        'email' => $email,
        'rating' => $rating,
        'comment' => $comment
    ]);
    
    if ($result) {
        echo json_encode(['status' => 'success', 'message' => 'Review submitted successfully!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Error submitting review!']);
    }
}

function editReview($db) {
    $review_id = intval($_POST['id']);
    
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['status' => 'error', 'message' => 'You must be logged in to edit a review!']));
    }

    // Verify ownership of the review
    $stmt = $db->prepare("SELECT user_id FROM reviews WHERE id = :id");
    $stmt->execute(['id' => $review_id]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result['user_id'] != $_SESSION['user_id']) {
        die(json_encode(['status' => 'error', 'message' => 'You are not authorized to edit this review!']));
    }

    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars($_POST['comment']);

    if ($rating == 0 || empty($comment)) {
        die(json_encode(['status' => 'error', 'message' => 'Please fill in all required fields!']));
    }

    $stmt = $db->prepare("UPDATE reviews 
                        SET rating = :rating,
                            comment = :comment
                        WHERE id = :id");
    
    $result = $stmt->execute([
        'id' => $review_id,
        'rating' => $rating,
        'comment' => $comment
    ]);
    
    if ($result) {
        echo json_encode(['status' => 'success', 'message' => 'Review updated successfully!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Error updating review!']);
    }
}

function deleteReview($db) {
    $review_id = intval($_POST['id']);
    
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['status' => 'error', 'message' => 'You must be logged in to delete a review!']));
    }

    // Verify ownership of the review
    $stmt = $db->prepare("SELECT user_id FROM reviews WHERE id = :id");
    $stmt->execute(['id' => $review_id]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result['user_id'] != $_SESSION['user_id']) {
        die(json_encode(['status' => 'error', 'message' => 'You are not authorized to delete this review!']));
    }

    $stmt = $db->prepare("DELETE FROM reviews WHERE id = :id");
    $result = $stmt->execute(['id' => $review_id]);
    
    if ($result) {
        echo json_encode(['status' => 'success', 'message' => 'Review deleted successfully!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Error deleting review!']);
    }
}
?>


<?php
require 'database.php'; // Include your PDO connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    handleReviews($db);
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment, $db_connection) {
    // Sanitize input values
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags($comment), ENT_QUOTES);

    try {
        // Check if the rating is within valid range (1-5)
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Please choose a rating between 1 and 5.");
        }

        // Prepare SQL query
        $query = "INSERT INTO reviews 
                  SET user_id = :user_id,
                      product_id = :product_id,
                      rating = :rating,
                      comment = :comment,
                      review_date = NOW()";

        // Prepare the statement
        $stmt = $db_connection->prepare($query);
        
        // Bind parameters
        $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
        $stmt->bindParam(':product_id', $product_id, PDO::PARAM_INT);
        $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
        $stmt->bindParam(':comment', $comment);

        // Execute the query
        if ($stmt->execute()) {
            return array('status' => 'success', 'message' => 'Review submitted successfully!');
        } else {
            return array('status' => 'error', 'message' => 'Error submitting review. Please try again.');
        }
    } catch (PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return array('status' => 'error', 'message' => 'Database error occurred while submitting your review.');
    } catch (Exception $e) {
        // Handle other exceptions
        return array('status' => 'error', 'message' => $e->getMessage());
    }
}
?>


// Sample input data
$user_id = 123;
$product_id = 456;
$rating = 4;
$comment = "This is a great product! I love it!";
$db_connection = $pdo; // Your database connection

// Submit review
$result = submit_review($user_id, $product_id, $rating, $comment, $db_connection);

// Display result
if ($result['status'] == 'success') {
    echo "Review submitted successfully!";
} else {
    echo "Error: " . $result['message'];
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Create table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(100),
    review_text TEXT,
    rating INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to save a new review
function saveReview($user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize input data
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating) 
            VALUES ('$user_name', '$review_text', '$rating')";
            
    mysqli_query($conn, $sql);
    return true;
}

// Function to get all reviews
function getAllReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Check if review was submitted
if (isset($_POST['submit_review'])) {
    // Get form data
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    // Validate input
    if (empty($user_name) || empty($review_text)) {
        echo "Please fill in all required fields!";
    } else {
        if (saveReview($user_name, $review_text, $rating)) {
            echo "Thank you for your review!";
        } else {
            echo "There was an error saving your review. Please try again.";
        }
    }
}

// Display review form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .review-list { margin: 20px; }
        .single-review { margin-bottom: 15px; padding: 10px; border: 1px solid #eee; }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Write a Review</h2>
    <form method="post" action="">
        <input type="text" name="user_name" placeholder="Your Name" required><br><br>
        <textarea name="review_text" placeholder="Write your review here..." rows="4" required></textarea><br><br>
        <label>Rating:</label>
        <select name="rating">
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>
</div>

<div class="review-list">
    <h2>Customer Reviews</h2>
    <?php
    $reviews = getAllReviews();
    
    if (empty($reviews)) {
        echo "No reviews yet. Be the first to review!";
    } else {
        foreach ($reviews as $review) {
            echo "<div class='single-review'>";
            echo "<strong>" . htmlspecialchars_decode($review['user_name']) . "</strong><br>";
            echo "<span style='color: #ff8f00;'>★ " . $review['rating'] . "/5</span><br>";
            echo "<p>" . htmlspecialchars_decode($review['review_text']) . "</p>";
            echo "<small>Posted on " . $review['created_at'] . "</small>";
            echo "</div>";
        }
    }
    
    // Calculate and display average rating
    $sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews";
    $result_avg = mysqli_query($conn, $sql_avg);
    $row_avg = mysqli_fetch_assoc($result_avg);
    
    if ($row_avg['avg_rating'] > 0) {
        echo "<div style='margin-top: 20px; font-size: 1.2em;'>";
        echo "Average Rating: <span style='color: #ff8f00;'>★ " . round($row_avg['avg_rating'], 1) . "/5</span>";
        echo "</div>";
    }
    
    mysqli_close($conn);
    ?>
</div>

</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $current_user_id = $_SESSION['user_id'];
    $review_name = mysqli_real_escape_string($conn, $_POST['review_name']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

    if (!empty($review_name) && !empty($review_text)) {
        $sql = "INSERT INTO reviews (user_id, name, review_text) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 'iss', $current_user_id, $review_name, $review_text);

        if (mysqli_stmt_execute($stmt)) {
            echo "Review submitted successfully!";
            header("Location: reviews.php?refresh=true");
            exit();
        } else {
            die("Error submitting review: " . mysqli_error($conn));
        }
    } else {
        die("Please fill in all fields.");
    }
}
?>


<?php
session_start();
require_once 'db_connection.php';

function get_reviews() {
    global $conn;
    $sql = "SELECT r.*, u.role FROM reviews r LEFT JOIN users u ON r.user_id = u.id ORDER BY date_posted DESC";
    $result = mysqli_query($conn, $sql);
    return $result ? mysqli_fetch_all($result, MYSQLI_ASSOC) : [];
}

$reviews = get_reviews();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php foreach ($reviews as $review): ?>
        <div class="review-box">
            <h3><?php echo htmlspecialchars($review['name']); ?></h3>
            <p><?php echo nl2br(htmlspecialchars($review['review_text'])); ?></p>
            <small>Posted on: <?php echo date('F j, Y', strtotime($review['date_posted'])); ?></small>
            
            <!-- Delete Review Button -->
            <?php if ($_SESSION['user_id'] == $review['user_id'] || $_SESSION['role'] == 'admin'): ?>
                <form action="delete_review.php" method="POST">
                    <input type="hidden" name="review_id" value="<?php echo $review['id']; ?>">
                    <button type="submit">Delete</button>
                </form>
            <?php endif; ?>
        </div>
    <?php endforeach; ?>

    <!-- Review Form -->
    <?php include 'review_form.php'; ?>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $current_user_id = $_SESSION['user_id'];
    $review_id = intval($_POST['review_id']);

    // Check if user is admin or owner of the review
    $sql = "SELECT user_id FROM reviews WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $review_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        if ($row['user_id'] == $current_user_id || $_SESSION['role'] == 'admin') {
            // Delete the review
            $delete_sql = "DELETE FROM reviews WHERE id = ?";
            $delete_stmt = mysqli_prepare($conn, $delete_sql);
            mysqli_stmt_bind_param($delete_stmt, 'i', $review_id);

            if (mysqli_stmt_execute($delete_stmt)) {
                header("Location: reviews.php?refresh=true");
                exit();
            } else {
                die("Error deleting review: " . mysqli_error($conn));
            }
        } else {
            die("You are not authorized to delete this review.");
        }
    } else {
        die("Review not found.");
    }
}
?>


<?php
$host = 'localhost';
$db_name = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new mysqli($host, $username, $password, $db_name);
} catch (Exception $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


<?php
function displayUserReviews($reviews, $users) {
    // Check if inputs are valid arrays
    if (!is_array($reviews) || empty($reviews) || !is_array($users) || empty($users)) {
        return "No reviews available";
    }

    $output = "<div class='user-reviews'>";
    
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = round($totalRating / count($reviews), 2);
    
    // Display average rating
    $output .= "<div class='average-rating'>";
    $output .= "Average Rating: $averageRating/5 stars";
    $output .= "</div>";

    // Display each review
    foreach ($reviews as $review) {
        // Get reviewer details
        $reviewerId = $review['reviewer_id'];
        $reviewerName = isset($users[$reviewerId]['name']) ? $users[$reviewerId]['name'] : 'Anonymous';
        
        $output .= "<div class='review-item'>";
        $output .= "<div class='review-header'>";
        $output .= "<span class='reviewer-name'>$reviewerName</span>";
        $output .= "<span class='rating-stars'>";
        
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                $output .= "★";
            } else {
                $output .= "☆";
            }
        }
        
        $output .= "</span>";
        $output .= "</div>";
        $output .= "<p class='review-text'>" . htmlspecialchars($review['text']) . "</p>";
        $output .= "<div class='review-date'>";
        $output .= date('F j, Y', strtotime($review['date']));
        $output .= "</div>";
        $output .= "</div>";
    }

    $output .= "</div>";

    return $output;
}

// Example usage:

$reviews = array(
    array(
        'id' => 1,
        'reviewer_id' => 101,
        'rating' => 5,
        'text' => "Excellent product! Highly recommended.",
        'date' => "2023-10-01"
    ),
    array(
        'id' => 2,
        'reviewer_id' => 102,
        'rating' => 4,
        'text' => "Good quality, but could be better.",
        'date' => "2023-10-02"
    )
);

$users = array(
    101 => array('name' => 'John Doe'),
    102 => array('name' => 'Jane Smith')
);

echo displayUserReviews($reviews, $users);
?>


<?php
// Function to create user review
function createReview($userId, $productId, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'my_store';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check if review already exists for this user and product
        $checkQuery = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ii", $userId, $productId);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Review already exists
            return "You have already submitted a review for this product.";
        } else {
            // Insert new review into database
            $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                           VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);

            if ($stmt->execute()) {
                // Review successfully added
                return "Thank you for submitting your review!";
            } else {
                // Error inserting review
                throw new Exception("Error adding review: " . $conn->error);
            }
        }

        $stmt->close();
        $conn->close();

    } catch (Exception $e) {
        // Handle any exceptions
        return "An error occurred: " . $e->getMessage();
    }
}

// Example usage:
$userId = 1;
$productId = 5;
$rating = 4;
$comment = "Great product, highly recommend!";
$result = createReview($userId, $productId, $rating, $comment);
echo $result;

?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($user_name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Check rating range
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, email, rating, comment, date_posted)
            VALUES ('$user_name', '$email', '$rating', '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date_posted DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Rating: " . createStars($row['rating']) . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<p>Date Posted: " . date('F j, Y', strtotime($row['date_posted'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to create star rating
function createStars($rating) {
    $stars = "";
    for ($i = 1; $i <= $rating; $i++) {
        $stars .= "<i class='fas fa-star'></i>";
    }
    return $stars;
}

// Pagination function (optional)
function pagination($conn, $results_per_page = 5) {
    $sql = "SELECT COUNT(*) as total FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    $total = $row['total'];
    
    $page = isset($_GET['page']) ? $_GET['page'] : 1;
    $offset = ($page - 1) * $results_per_page;

    $pages = ceil($total / $results_per_page);

    echo "<div class='pagination'>";
    for ($i = 1; $i <= $pages; $i++) {
        if ($i == $page) {
            echo "<a href='?page=$i' class='current'>$i</a>";
        } else {
            echo "<a href='?page=$i'>$i</a>";
        }
    }
    echo "</div>";

    return $offset;
}

// Close database connection
mysqli_close($conn);
?>



<?php
// Include the review functions
include("review_functions.php");

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submitReview($_POST['user_name'], $_POST['email'], $_POST['rating'], $_POST['comment'], $conn);
    echo $result;
}

// Display all reviews
displayReviews($conn);

// Show pagination
pagination($conn, 5); // Displays 5 reviews per page
?>


<?php
// This function handles adding new reviews and displaying existing ones
function user_review_system() {
    // Database connection details (update these with your actual database credentials)
    $db_host = 'localhost';
    $db_user = 'root';
    $db_password = '';
    $db_name = 'reviews';

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get all reviews from the database
    $get_reviews_sql = "SELECT * FROM user_reviews ORDER BY review_id DESC";
    $result = $conn->query($get_reviews_sql);

    // Initialize variables for average rating calculation
    $total_rating = 0;
    $number_of_ratings = 0;

    // Display existing reviews
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>Rating: " . str_repeat("★", $row['rating']) . "</h4>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Reviewed by: " . htmlspecialchars($row['user_name']) . " on " . $row['review_date'] . "</small>";
            echo "</div>";
            
            // Calculate total rating
            $total_rating += $row['rating'];
            $number_of_ratings++;
        }
        
        // Display average rating
        if ($number_of_ratings > 0) {
            $average_rating = $total_rating / $number_of_ratings;
            echo "<div class='average-rating'>";
            echo "Average Rating: " . number_format($average_rating, 1) . "/5";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }

    // Close database connection
    $conn->close();

    // Display review form
    echo "<div class='review-form'>";
    echo "<h2>Leave a Review</h2>";
    echo "<form action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "' method='post'>";
    echo "<input type='text' name='user_name' placeholder='Your Name' required><br>";
    echo "Rating: ";
    for ($i = 5; $i >= 1; $i--) {
        echo "<input type='radio' name='rating' value='" . $i . "' checked> " . str_repeat("★", $i) . " ";
    }
    echo "<br>";
    echo "<textarea name='comment' placeholder='Your Review' required></textarea><br>";
    echo "<input type='submit' name='submit_review' value='Submit Review'>";
    echo "</form>";
    echo "</div>";

    // Process submitted review
    if (isset($_POST['submit_review'])) {
        $user_name = htmlspecialchars($_POST['user_name']);
        $rating = $_POST['rating'];
        $comment = htmlspecialchars($_POST['comment']);

        // Insert new review into database
        $insert_sql = "INSERT INTO user_reviews (user_name, rating, comment, review_date) 
                      VALUES ('$user_name', '$rating', '$comment', CURRENT_TIMESTAMP)";
        
        if ($conn->query($insert_sql)) {
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Error submitting review: " . $conn->error . "</div>";
        }
    }

    // Add some CSS styling
    echo "<style>
        .review { margin-bottom: 20px; padding: 10px; border: 1px solid #ddd; }
        .average-rating { font-weight: bold; color: #333; margin-top: 20px; }
        .review-form { margin-top: 20px; background-color: #f5f5f5; padding: 20px; }
        input[type='text'], textarea { width: 100%; margin: 10px 0; padding: 8px; }
        input[type='submit'] { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; }
        input[type='submit']:hover { background-color: #45a049; }
        .success { color: green; margin-top: 10px; }
        .error { color: red; margin-top: 10px; }
    </style>";
}
?>

<!-- Call the review function -->
<?php
user_review_system();
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add review
function add_review($name, $review) {
    global $conn;
    
    // Sanitize input
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $review = mysqli_real_escape_string($conn, htmlspecialchars($review));
    
    // Insert into database
    $sql = "INSERT INTO reviews (name, review, date) VALUES ('$name', '$review', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews
function get_reviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return $result;
    } else {
        return false;
    }
}

// Close connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .review-form { margin-bottom: 30px; }
        .review-form input, .review-form textarea { width: 100%; padding: 8px; margin: 5px 0; }
        .review-list { margin-top: 20px; }
        .review-item { border: 1px solid #ddd; padding: 15px; margin-bottom: 10px; border-radius: 4px; }
        .review-author { font-weight: bold; color: #333; }
        .review-date { color: #666; font-size: 0.9em; }
    </style>
</head>
<body>

<h2>Leave a Review</h2>

<div class="review-form">
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <textarea name="review" rows="4" placeholder="Write your review here..." required></textarea><br>
        <button type="submit">Submit Review</button>
    </form>
</div>

<?php
// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $review = $_POST['review'];
    
    if (add_review($name, $review)) {
        echo "<script>alert('Review submitted successfully!');</script>";
    } else {
        echo "<script>alert('Error submitting review. Please try again.');</script>";
    }
}

// Display existing reviews
$reviews = get_reviews();
if ($reviews) {
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo "<div class='review-item'>";
        echo "<div class='review-author'>" . htmlspecialchars($row['name']) . "</div>";
        echo "<div class='review-date'>" . $row['date'] . "</div>";
        echo "<p>" . htmlspecialchars($row['review']) . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet.</p>";
}
?>

</body>
</html>


<?php
function submit_review($username, $rating, $comment = "") {
    // Database connection details
    $host = 'localhost';
    $db_name = 'reviews_db';
    $username_db = 'root';
    $password_db = '';

    try {
        // Create a database connection using PDO
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username_db, $password_db);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate input
        if (empty($username) || strlen($username) > 50) {
            return array('success' => false, 'message' => 'Username must be between 1 and 50 characters');
        }

        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            return array('success' => false, 'message' => 'Rating must be a number between 1 and 5');
        }

        if (strlen($comment) > 500) {
            return array('success' => false, 'message' => 'Comment cannot exceed 500 characters');
        }

        // Prepare the SQL statement
        $sql = "INSERT INTO reviews (username, rating, comment, review_date)
                VALUES (:username, :rating, :comment, NOW())";

        $stmt = $conn->prepare($sql);

        // Bind parameters to the statement
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', ($comment !== "" ? $comment : null));

        // Execute the query
        $stmt->execute();

        return array('success' => true, 'message' => 'Review submitted successfully!');

    } catch(PDOException $e) {
        // Return error message if something goes wrong
        return array('success' => false, 'message' => 'Error submitting review: ' . $e->getMessage());
    }
}

// Example usage:
$review = submit_review(
    "JohnDoe",
    4,
    "Great product! Highly recommended."
);

if ($review['success']) {
    echo $review['message'];
} else {
    echo $review['message'];
}
?>


function submit_review($review_id = null, $user_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if review_id is provided (for updating an existing review)
    if ($review_id !== null) {
        // Update existing review
        $query = "UPDATE reviews SET rating = ?, comment = ? WHERE id = ?";
        
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "iss", $rating, $comment, $review_id);
        
        if (mysqli_stmt_execute($stmt)) {
            return array("success" => true, "message" => "Review updated successfully");
        } else {
            return array("success" => false, "message" => "Error updating review: " . mysqli_error($conn));
        }
    } else {
        // Insert new review
        $query = "INSERT INTO reviews (user_id, rating, comment) VALUES (?, ?, ?)";
        
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "iss", $user_id, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            return array("success" => true, "message" => "Review submitted successfully");
        } else {
            return array("success" => false, "message" => "Error submitting review: " . mysqli_error($conn));
        }
    }

    // Close database connection
    mysqli_close($conn);
}


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch all reviews from the database
    $sql = "SELECT name, review FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row["name"]) . "</h4>";
            echo "<p>" . htmlspecialchars($row["review"]) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Function to handle review submission
function submitReview() {
    global $conn;
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $review = htmlspecialchars(trim($_POST['review']));
        
        // Validate inputs
        if (empty($name) || empty($review)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("INSERT INTO reviews (name, review) VALUES (?, ?)");
        $stmt->bind_param("ss", $name, $review);
        
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
        
        // Close the statement
        $stmt->close();
    }
}

// Display form for submitting reviews
function displayReviewForm() {
    echo "<div class='review-form'>";
    echo "<h2>Submit Your Review</h2>";
    echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
    echo "<input type='text' name='name' placeholder='Your Name' required><br>";
    echo "<textarea name='review' placeholder='Write your review here...' required></textarea><br>";
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
    echo "</div>";
}

// Main function to run the application
function main() {
    // Display review form
    displayReviewForm();
    
    // Handle review submission if form was submitted
    submitReview();
    
    // Display all reviews
    displayReviews();
}

// Run the main function
main();

// Close database connection
$conn->close();
?>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create review table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
id INT AUTO_INCREMENT PRIMARY KEY,
product_id INT,
user_name VARCHAR(255),
user_email VARCHAR(255),
rating INT,
comments TEXT,
timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

$conn->query($sql);

function submit_review() {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    $user_name = mysqli_real_escape_string($conn, $_POST['name']);
    $user_email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = mysqli_real_escape_string($conn, $_POST['rating']);
    $comments = mysqli_real_escape_string($conn, $_POST['comments']);
    
    // Validate input
    if (empty($user_name) || empty($user_email) || empty($rating)) {
        echo "Please fill in all required fields.";
        return;
    }
    
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address.";
        return;
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comments)
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$comments')";
    
    if ($conn->query($sql) === TRUE) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row['user_name']) . "</h4>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['user_email']) . "</p>";
            echo "<p>Comments: " . htmlspecialchars($row['comments']) . "</p>";
            echo "<small>" . date('jS M Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    submit_review();
}

display_reviews(1); // Display reviews for product ID 1
?>



<?php
// Database connection
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $mysqli;
    
    // Sanitize input
    $user_id = intval($user_id);
    $product_id = intval($product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($mysqli, htmlspecialchars($comment));
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, date_added)
              VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";
    
    if ($mysqli->query($query)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a specific product
function get_reviews($product_id) {
    global $mysqli;
    
    $product_id = intval($product_id);
    
    // Get reviews from database
    $query = "SELECT r.*, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = '$product_id' 
              ORDER BY r.date_added DESC";
    
    $result = $mysqli->query($query);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    
    if ($reviews) {
        echo '<div class="reviews">';
        
        while ($row = $reviews->fetch_assoc()) {
            $user_name = $row['username'];
            $rating = $row['rating'];
            $comment = htmlspecialchars_decode($row['comment']);
            $date = date('F j, Y', strtotime($row['date_added']));
            
            echo '<div class="review">';
                echo "<h4>Review by $user_name</h4>";
                echo "<p><strong>Rating:</strong> $rating/5</p>";
                echo "<p><strong>Comment:</strong> $comment</p>";
                echo "<small>Reviewed on $date</small>";
            echo '</div>';
        }
        
        echo '</div>';
    } else {
        echo '<p>No reviews available for this product.</p>';
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming user is logged in and has a valid session
    $user_id = $_SESSION['user_id'];
    $product_id = $_GET['product_id']; // Make sure to validate this
    
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo 'Review added successfully!';
    } else {
        echo 'Error adding review. Please try again.';
    }
}

// Display reviews for a product
if (isset($_GET['product_id'])) {
    display_reviews($_GET['product_id']);
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function add_review($product_id, $username, $useremail, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (!isset($product_id, $username, $useremail, $rating, $comment)) {
        return false;
    }
    
    if (!is_numeric($product_id) || $product_id <= 0) {
        return false;
    }
    
    if (strlen(trim($username)) == 0) {
        return false;
    }
    
    if (!filter_var($useremail, FILTER_VALIDATE_EMAIL)) {
        return false;
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false;
    }
    
    // Prepare and bind
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, username, useremail, rating, comment, review_date) VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)");
    $stmt->bind_param("issss", $product_id, $username, $useremail, $rating, $comment);
    
    // Execute and check
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

function display_reviews($product_id) {
    global $conn;
    
    $reviews = array();
    
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    while ($row = $result->fetch_assoc()) {
        $reviews[] = array(
            'id' => $row['id'],
            'username' => htmlspecialchars($row['username']),
            'rating' => $row['rating'],
            'comment' => htmlspecialchars($row['comment']),
            'date' => date('F j, Y', strtotime($row['review_date']))
        );
    }
    
    return $reviews;
}
?>


<?php
if (isset($_POST['submit_review'])) {
    // Assuming $product_id is defined and valid
    $product_id = $_POST['product_id'];
    $username = $_POST['username'];
    $useremail = $_POST['useremail'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($product_id, $username, $useremail, $rating, $comment)) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>Error submitting review. Please try again.</div>";
    }
}

$reviews = display_reviews($product_id);
?>

<div class="reviews-list">
    <?php foreach ($reviews as $review) { ?>
        <div class="review-item">
            <h3><?php echo $review['username']; ?></h3>
            <div class="stars">
                <?php 
                    $stars = str_repeat('★ ', $review['rating']);
                    $empty_stars = str_repeat('☆ ', 5 - $review['rating']);
                    echo rtrim($stars . $empty_stars, ' ');
                ?>
            </div>
            <p><?php echo $review['comment']; ?></p>
            <small>Posted on <?php echo $review['date']; ?></small>
        </div>
    <?php } ?>
</div>


<?php
// Database configuration
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';      // Replace with your database password
$dbname = 'reviews_db'; // Replace with your database name

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');
}

// Process the form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize inputs
    $username = isset($_POST['username']) ? sanitizeInput($_POST['username']) : '';
    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : '';
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $review_text = isset($_POST['review_text']) ? sanitizeInput($_POST['review_text']) : '';

    // Set default error message
    $error = "";

    if (empty($username) || empty($email) || empty($rating) || empty($review_text)) {
        $error = "All fields are required!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Please enter a valid email address!";
    } elseif ($rating < 1 || $rating > 5) {
        $error = "Rating must be between 1 and 5!";
    }

    if (empty($error)) {
        // Prepare the SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (username, email, rating, review_text) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("ssis", $username, $email, $rating, $review_text);

        if ($stmt->execute()) {
            // Success: redirect back to the same page
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            echo "Error: " . $conn->error;
        }

        $stmt->close();
    }
}

// Retrieve all reviews from database
$reviews_query = "SELECT id, username, rating, review_text, submission_date FROM reviews ORDER BY submission_date DESC";
$result = $conn->query($reviews_query);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .stars {
            font-size: 24px;
            color: gold;
        }
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php if (isset($error) && $error != "") { ?>
        <div style="color: red; margin-bottom: 20px;"><?php echo $error; ?></div>
    <?php } ?>

    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Name:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <?php for ($i = 5; $i >= 1; $i--) { ?>
            <input type="radio" name="rating" value="<?php echo $i; ?>" id="star<?php echo $i; ?>">
            <label for="star<?php echo $i; ?>">★</label>
        <?php } ?><br>

        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
            $date = date('Y-m-d H:i', strtotime($row['submission_date']));
    ?>

        <div class="review-box">
            <strong><?php echo htmlspecialchars($row['username']); ?></strong><br>
            <?php echo $stars; ?><br>
            <em>Submitted on <?php echo $date; ?></em><br>
            <p><?php echo nl2br(htmlspecialchars($row['review_text'])); ?></p>
        </div>

    <?php }
        $result->free();
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    } ?>

</body>
</html>

<?php
$conn->close();
?>


<?php
function submit_review($review_text, $user_id, $product_id) {
    // Validate input parameters
    if (!is_string($review_text) || trim($review_text) === '') {
        return "Error: Review text is empty or not a string.";
    }
    
    if (!is_numeric($user_id) || $user_id <= 0) {
        return "Error: Invalid user ID.";
    }
    
    if (!is_numeric($product_id) || $product_id <= 0) {
        return "Error: Invalid product ID.";
    }
    
    // Database connection parameters
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';
    
    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);
    
    if ($conn->connect_error) {
        return "Error: Failed to connect to the database.";
    }
    
    // Prepare and execute SQL query to insert review
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, created_at, updated_at)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";
    
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        return "Error: Failed to prepare the SQL statement.";
    }
    
    // Bind parameters
    $stmt->bind_param("iis", $user_id, $product_id, $review_text);
    
    if ($stmt->execute()) {
        // Review submitted successfully
        $response = array(
            'status' => 'success',
            'message' => 'Review submitted successfully.',
            'review_id' => $stmt->insert_id
        );
        return json_encode($response);
    } else {
        // Error submitting review
        return "Error: Failed to submit the review. Please try again later.";
    }
    
    // Close database connection
    $conn->close();
}

// Example usage:
$review_text = "This is a great product!";
$user_id = 1;
$product_id = 5;

$result = submit_review($review_text, $user_id, $product_id);
echo $result;

?>


<?php
function displayUserReviews() {
    // Database connection details
    $host = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbName = "database_name";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = mysqli_query($conn, $sql);

    $output = "";

    while ($row = mysqli_fetch_assoc($result)) {
        $output .= "
            <div class='review-card'>
                <div class='review-header'>
                    <h3>" . $row['username'] . "</h3>
                    <div class='rating'>";
        
        // Display rating stars
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                $output .= "<span class='star'>★</span>";
            } else {
                $output .= "<span class='star'>☆</span>";
            }
        }

        $output .= "
                    </div>
                </div>
                <p class='review-text'>" . $row['review_text'] . "</p>
                <small class='review-date'>" . date('Y-m-d', strtotime($row['timestamp'])) . "</small>
            </div>";
    }

    // Close database connection
    mysqli_close($conn);

    if (empty($output)) {
        return "<p>No reviews have been submitted yet.</p>";
    } else {
        return $output;
    }
}
?>


<?php
// Include the function
require_once('review-function.php');

// Display reviews
echo displayUserReviews();
?>


<?php
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $review = htmlspecialchars($_POST['user_review']);

    // Validate inputs
    if (empty($username) || empty($review)) {
        echo "<div class='error'>Please fill in both name and review!</div>";
    } else {
        $filename = "reviews.txt";

        // Create file if it doesn't exist
        if (!file_exists($filename)) {
            touch($filename);
        }

        // Check file write permissions
        if (is_writable($filename)) {
            // Append the new review to the file
            $review_data = PHP_EOL . $username . "|" . $review;
            file_put_contents($filename, $review_data, FILE_APPEND | LOCK_EX);
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Unable to write to the reviews file. Contact the administrator.</div>";
        }
    }
}


<div class="reviews">
    <h2>Previous Reviews</h2>
    <?php
    $filename = "reviews.txt";
    
    if (file_exists($filename) && is_readable($filename)) {
        // Read all lines from the file
        $lines = file($filename, FILE_IGNORE_NEW_LINES);
        
        foreach ($lines as $line) {
            if (!empty($line)) {
                list($name, $comment) = explode('|', $line, 2);
                echo "<div class='review'>";
                echo "<strong>$name</strong><br>";
                echo "$comment<br><hr>";
                echo "</div>";
            }
        }
    } else {
        echo "No reviews available yet.";
    }
    ?>
</div>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            margin-bottom: 20px;
        }
        .reviews {
            background-color: #f9f9f9;
            padding: 10px;
            border-radius: 5px;
        }
        .error, .success {
            margin-bottom: 10px;
            padding: 5px;
            border-radius: 3px;
        }
        .error { background-color: #ffe6e6; color: red; }
        .success { background-color: #e6ffed; color: green; }
    </style>
</head>
<body>

<?php
// Handle form submission if it exists
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $review = htmlspecialchars($_POST['user_review']);

    if (empty($username) || empty($review)) {
        echo "<div class='error'>Please fill in both name and review!</div>";
    } else {
        $filename = "reviews.txt";

        if (!file_exists($filename)) {
            touch($filename);
        }

        if (is_writable($filename)) {
            $review_data = PHP_EOL . $username . "|" . $review;
            file_put_contents($filename, $review_data, FILE_APPEND | LOCK_EX);
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Unable to write to the reviews file. Contact the administrator.</div>";
        }
    }
}
?>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Your Name" required><br>
        <textarea name="user_review" placeholder="Write your review here..." rows="4" cols="50" required></textarea><br>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>
</div>

<div class="reviews">
    <h2>Previous Reviews</h2>
    <?php
    $filename = "reviews.txt";
    
    if (file_exists($filename) && is_readable($filename)) {
        $lines = file($filename, FILE_IGNORE_NEW_LINES);
        
        foreach ($lines as $line) {
            if (!empty($line)) {
                list($name, $comment) = explode('|', $line, 2);
                echo "<div class='review'>";
                echo "<strong>$name</strong><br>";
                echo "$comment<br><hr>";
                echo "</div>";
            }
        }
    } else {
        echo "No reviews available yet.";
    }
    ?>
</div>

</body>
</html>


<?php
function handleUserReview($review_id = null, $user_id = null, $rating = null, $comments = null) {
    // Database connection details
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    // Create connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // If review_id is provided, update the existing review
        if ($review_id !== null) {
            $stmt = $conn->prepare("UPDATE reviews SET rating=?, comments=? WHERE id=?");
            $stmt->bind_param("sii", $rating, $comments, $review_id);
        } 
        // Otherwise, insert a new review
        else {
            $stmt = $conn->prepare("INSERT INTO reviews (user_id, rating, comments) VALUES (?, ?, ?)");
            $stmt->bind_param("isi", $user_id, $rating, $comments);
        }

        // Execute the statement
        if ($stmt->execute()) {
            return "Review " . ($review_id ? "updated" : "added") . " successfully. Affected rows: " . $stmt->affected_rows;
        } else {
            throw new Exception("Error executing database query: " . $conn->error);
        }
    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    } finally {
        // Close the statement and connection
        if ($stmt) $stmt->close();
        $conn->close();
    }
}
?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Create table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    item_id INT,
    rating INT,
    comment TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .stars {
            display: inline-block;
            margin: 5px;
        }
        .star {
            color: #ffd700;
        }
    </style>
</head>
<body>

<?php
// Function to add a new review
function addReview($item_id, $user_id, $rating, $comment) {
    global $conn;

    // Check if the rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        die("Invalid rating");
    }

    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (item_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("iiis", $item_id, $user_id, $rating, $comment);
    $stmt->execute();
}

// Function to display all reviews for an item
function getReviews($item_id) {
    global $conn;

    $reviews = array();

    // Get the reviews from the database
    $result = mysqli_query($conn, "SELECT * FROM reviews WHERE item_id = '$item_id' ORDER BY timestamp DESC");
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }

    return $reviews;
}

// Function to display stars for rating
function displayStars($rating) {
    $stars_html = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars_html .= "<span class='star'>★</span>";
        } else {
            $stars_html .= "<span>☆</span>";
        }
    }
    return $stars_html;
}

// Example usage:
$item_id = 1; // Replace with actual item ID
$user_id = 1; // Replace with actual user ID

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    addReview($item_id, $user_id, $rating, $comment);
}

// Display reviews
$reviews = getReviews($item_id);

foreach ($reviews as $review) {
    echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px 0;'>";
    echo "Rating: " . displayStars($review['rating']) . "<br>";
    echo "Comment: " . htmlspecialchars($review['comment'], ENT_QUOTES) . "<br>";
    echo "Posted on: " . $review['timestamp'] . "<br>";
    echo "</div>";
?>

<!-- Review Form -->
<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    <label for="rating">Rating:</label><br>
    <input type="number" id="rating" name="rating" min="1" max="5" required><br>
    
    <label for="comment">Comment:</label><br>
    <textarea id="comment" name="comment" rows="4" cols="50" required></textarea><br>
    
    <input type="submit" value="Submit Review">
</form>

<?php
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $review_text) {
    try {
        // Connect to database
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, review_text, timestamp) 
                              VALUES (:user_id, :product_id, :rating, :review_text, NOW())");

        // Execute the statement with parameters
        $stmt->execute(array(
            ':user_id' => $user_id,
            ':product_id' => $product_id,
            ':rating' => $rating,
            ':review_text' => $review_text
        ));

        // Close connection
        $conn = null;

        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


if (submit_review($user_id, $product_id, $rating, $review_text)) {
    echo "Review submitted successfully!";
} else {
    echo "There was an error submitting your review.";
}


<?php
// Function to handle user reviews
function submitReview($userId, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    try {
        // Connect to the database
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Validate inputs
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception('Invalid rating. Please select a rating between 1 and 5.');
        }
        
        if (empty($comment)) {
            throw new Exception('Please enter your review comment.');
        }

        // Sanitize inputs
        $rating = intval($rating);
        $comment = htmlspecialchars(strip_tags($comment));

        // Prepare the SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, rating, comment, date) VALUES (?, ?, ?, NOW())");
        if (!$stmt) {
            throw new Exception('Error preparing statement.');
        }

        // Bind parameters
        $stmt->bind_param("iis", $userId, $rating, $comment);

        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception('Error submitting review. Please try again later.');
        }

        // Close the statement and connection
        $stmt->close();
        $conn->close();

        return true;
    } catch (Exception $e) {
        // Handle any errors that occurred
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['rating'], $_POST['comment'])) {
        // Assuming user authentication is in place and $userId is defined
        $userId = 1; // Replace with actual user ID
        submitReview($userId, $_POST['rating'], $_POST['comment']);
    }
}
?>


function getReviews() {
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    try {
        $conn = new mysqli($host, $username, $password, $database);
        
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Fetch reviews from the database
        $result = $conn->query("SELECT * FROM reviews ORDER BY date DESC");

        if (!$result) {
            throw new Exception('Error fetching reviews.');
        }

        $reviews = array();
        while ($row = $result->fetch_assoc()) {
            $reviews[] = $row;
        }

        $result->close();
        $conn->close();

        return $reviews;
    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}

// Display reviews
$reviews = getReviews();
if ($reviews) {
    foreach ($reviews as $review) {
        // Display each review here
        echo '<div class="review">';
        echo '<div class="rating">';
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo '<span class="star-filled">★</span>';
            } else {
                echo '<span class="star-empty">★</span>';
            }
        }
        echo '</div>';
        echo '<p>' . $review['comment'] . '</p>';
        echo '<small>Posted by: ' . $review['user_id'] . ' on ' . date('F j, Y', strtotime($review['date'])) . '</small>';
        echo '</div>';
    }
}


<?php
function submit_review($review_id, $user_id, $rating, $comment) {
    // Database connection parameters
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';

    // Validate inputs
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating value. Please select a rating between 1 and 5.";
    }

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if user has already reviewed this item
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE review_id = :review_id AND user_id = :user_id");
        $stmt->execute([':review_id' => $review_id, ':user_id' => $user_id]);
        
        if ($stmt->rowCount() > 0) {
            return "You have already submitted a review for this item.";
        }

        // Insert new review
        $stmt = $conn->prepare("INSERT INTO reviews (review_id, user_id, rating, comment) 
                              VALUES (:review_id, :user_id, :rating, :comment)");
        
        $stmt->execute([
            ':review_id' => $review_id,
            ':user_id' => $user_id,
            ':rating' => $rating,
            ':comment' => $comment
        ]);

        // Log the review submission (optional)
        $log_message = "User {$user_id} submitted a review for item {$review_id}: Rating {$rating}, Comment: {$comment}";
        error_log($log_message);

        return "Review submitted successfully!";

    } catch(PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return "An error occurred while submitting your review. Please try again later.";
    }
}
?>


$user_id = 123; // Current user's ID
$review_id = 456; // ID of the item being reviewed
$rating = 5; // Rating given by the user (1-5)
$comment = "This is an excellent product!"; // Review comment

$result = submit_review($review_id, $user_id, $rating, $comment);
echo $result;


<?php
// User Review Function
function submitReview($userName, $reviewText, $rating = null, $dbHost, $dbUser, $dbPass, $dbName) {
    // Establish Database Connection
    try {
        $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }
        
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, review_text, rating, review_date) 
                              VALUES (?, ?, ?, CURRENT_TIMESTAMP)");
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }
        
        // Bind parameters to placeholders
        // s = string, i = integer, d = double
        $stmt->bind_param("s?s", $userName, $reviewText, $rating);
        
        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $conn->error);
        }
        
        // Close connection
        $stmt->close();
        $conn->close();
        
        return "Review submitted successfully!";
    } catch (Exception $e) {
        // Handle any exceptions and return error message
        return "Error submitting review: " . $e->getMessage();
    }
}

// Example usage:
$userName = "John Doe";
$reviewText = "This is a great product!";
$rating = 5; // Optional, can be omitted or set to null

$dbHost = "localhost";
$dbUser = "root";
$dbPass = "";
$dbName = "my_database";

$result = submitReview($userName, $reviewText, $rating, $dbHost, $dbUser, $dbPass, $dbName);
echo $result;

// Note: Make sure your database table 'reviews' exists and has the following columns:
/*
CREATE TABLE reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL,
    review_text TEXT NOT NULL,
    rating TINYINT DEFAULT NULL CHECK (rating BETWEEN 1 AND 5),
    review_date DATETIME DEFAULT CURRENT_TIMESTAMP
);
*/
?>


<?php
include('config.php'); // Include your database connection

// Sanitize inputs
$product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
$user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
$review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

// Insert review into the database
$sql = "INSERT INTO reviews (product_id, user_name, review_text) 
        VALUES ('$product_id', '$user_name', '$review_text')";

if (mysqli_query($conn, $sql)) {
    header("Location: product.php?id=$product_id");
} else {
    echo "Error submitting review: " . mysqli_error($conn);
}

// Close the database connection
mysqli_close($conn);
?>


<?php
include('config.php'); // Include your database connection

function get_reviews($product_id, $conn) {
    $reviews = array();
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = array(
                'id' => $row['id'],
                'user_name' => $row['user_name'],
                'review_text' => $row['review_text'],
                'created_at' => date('M j, Y - g:i a', strtotime($row['created_at']))
            );
        }
    } else {
        return "No reviews available.";
    }
    
    mysqli_close($conn);
    return $reviews;
}

// Usage example:
$product_id = 1; // Replace with the actual product ID
$all_reviews = get_reviews($product_id, $conn);

if (is_array($all_reviews)) {
    foreach ($all_reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . htmlspecialchars($review['user_name']) . "</h4>";
        echo "<p>" . nl2br(htmlspecialchars($review['review_text'])) . "</p>";
        echo "<small>Posted on " . $review['created_at'] . "</small>";
        echo "</div>";
    }
} else {
    echo $all_reviews;
}
?>


<?php
function user_review($action, $db_host, $db_username, $db_password, $db_name, $review = array()) {
    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    switch ($action) {
        case 'display':
            // Get all reviews from database
            $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
            $result = $conn->query($sql);
            
            if ($result->num_rows > 0) {
                while($row = $result->fetch_assoc()) {
                    echo "<div class='review'>";
                    echo "<div class='username'>{$row['username']}</div>";
                    echo "<div class='rating'>";
                    // Display stars based on rating
                    $stars = str_repeat("★", $row['rating']);
                    $remaining = 5 - $row['rating'];
                    $stars .= str_repeat("☆", $remaining);
                    echo $stars;
                    echo "</div>";
                    echo "<div class='comment'>{$row['comment']}</div>";
                    echo "<div class='date'>{$row['review_date']}</div>";
                    echo "</div>";
                }
            } else {
                echo "No reviews available.";
            }
            break;
            
        case 'add':
            // Sanitize input
            $username = mysqli_real_escape_string($conn, $review['username']);
            $comment = mysqli_real_escape_string($conn, $review['comment']);
            $rating = intval($review['rating']);
            
            if (!empty($username) && !empty($comment) && $rating >= 1 && $rating <=5) {
                // Insert into database
                $sql = "INSERT INTO reviews (username, comment, rating, review_date)
                        VALUES ('$username', '$comment', '$rating', NOW())";
                
                if ($conn->query($sql)) {
                    echo "Review submitted successfully!";
                } else {
                    echo "Error: " . $sql . "<br>" . $conn->error;
                }
            } else {
                echo "Please fill in all fields correctly.";
            }
            break;
            
        default:
            echo "Invalid action specified.";
    }
    
    // Close database connection
    $conn->close();
}

// Example usage:

// Display reviews
user_review('display', 'localhost', 'root', '', 'reviews_db');

// Add review
$review = array(
    'username' => 'JohnDoe',
    'comment' => 'Great product!',
    'rating' => 5
);
user_review('add', 'localhost', 'root', '', 'reviews_db', $review);

?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submitReview($username, $email, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $username = htmlspecialchars(trim($username));
    $email = htmlspecialchars(trim($email));
    $reviewText = htmlspecialchars(trim($reviewText));
    $rating = (int)$rating;

    // Check if rating is valid
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }

    // Get current date
    $date = date('Y-m-d H:i:s');

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (username, email, review_text, rating, review_date) VALUES (?, ?, ?, ?, ?)");
    if ($stmt === false) {
        return "Error preparing statement: " . $conn->error;
    }

    // Bind parameters
    $stmt->bind_param("ssisi", $username, $email, $reviewText, $rating, $date);

    // Execute the query
    if ($stmt->execute()) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $stmt->error;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $reviewText = $_POST['review_text'];
    $rating = $_POST['rating'];

    // Call submitReview function
    $result = submitReview($username, $email, $reviewText, $rating, $conn);
    
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!isset($productId, $userId, $rating, $comment)) {
        return false;
    }
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    if (strlen($comment) > 500) {
        return false;
    }
    
    // Sanitize inputs
    $productId = intval($productId);
    $userId = intval($userId);
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment), ENT_QUOTES, 'UTF-8');
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment, created_at) 
                              VALUES (:productId, :userId, :rating, :comment, NOW())");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $result = $stmt->execute();
        
        if ($result) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to get reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.id, u.username, r.rating, r.comment, r.created_at 
                              FROM reviews r 
                              JOIN users u ON r.user_id = u.id 
                              WHERE r.product_id = :productId 
                              ORDER BY r.created_at DESC");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die("Error fetching reviews: " . $e->getMessage());
    }
}

// Function to delete a review
function deleteReview($reviewId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id = :reviewId");
        $stmt->bindParam(':reviewId', $reviewId);
        $result = $stmt->execute();
        
        return $result ? true : false;
    } catch(PDOException $e) {
        die("Error deleting review: " . $e->getMessage());
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) as average 
                              FROM reviews 
                              WHERE product_id = :productId");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        die("Error calculating average rating: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $rating = intval($_POST['rating']);
    $comment = $_POST['comment'];
    
    if (submitReview($productId, $userId, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Display reviews
$reviews = getReviews(1); // Get reviews for product ID 1

foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h4>By: {$review['username']}</h4>";
    echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
    echo "<p>{$review['comment']}</p>";
    echo "<small>Posted on: {$review['created_at']}</small>";
    echo "</div>";
}

// Display average rating
echo "Average Rating: " . getAverageRating(1) . "/5";
?>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Display reviews function
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews for the product
    $sql = "SELECT r.review_id, r.user_id, r.rating, r.comment, r.date_created, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = ? 
            ORDER BY r.date_created DESC";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    
    $result = mysqli_stmt_get_result($stmt);
    
    // Calculate average rating
    $average_rating_sql = "SELECT AVG(rating) as avg_rating 
                           FROM reviews 
                           WHERE product_id = ?";
                           
    $avg_stmt = mysqli_prepare($conn, $average_rating_sql);
    mysqli_stmt_bind_param($avg_stmt, "i", $product_id);
    mysqli_stmt_execute($avg_stmt);
    
    $avg_result = mysqli_stmt_get_result($avg_stmt);
    $avg_row = mysqli_fetch_assoc($avg_result);
    $average_rating = number_format((float)$avg_row['avg_rating'], 1, '.', '');
    
    // Display average rating
    echo "<div class='average-rating'>";
    echo "Average Rating: <strong>" . $average_rating . "/5</strong>";
    echo "</div>";
    
    // Display individual reviews
    while ($row = mysqli_fetch_assoc($result)) {
        $rating = $row['rating'];
        $comment = $row['comment'];
        $username = $row['username'];
        $date = date('F j, Y', strtotime($row['date_created']));
        
        echo "<div class='review'>";
        echo "<h3>Rating: " . str_repeat("★", $rating) . "</h3>";
        echo "<p><strong>" . $username . "</strong> - " . $date . "</p>";
        echo "<p>" . $comment . "</p>";
        echo "</div>";
    }
}

// Submit review function
function submit_review($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }
    
    if (empty($comment)) {
        return "Please provide a comment for your review.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment) 
            VALUES (?, ?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iisi", $product_id, $user_id, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}
?>


<?php
$product_id = 1; // Replace with actual product ID

display_reviews($product_id);
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($product_id, $user_name, $user_email, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $user_email = mysqli_real_escape_string($conn, htmlspecialchars($user_email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Check if all required fields are filled
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment, submission_date)
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        
        while ($row = mysqli_fetch_assoc($result)) {
            $rating = $row['rating'];
            
            // Display review details
            echo "<div class='review'>";
                echo "<h3>" . $row['user_name'] . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $rating) . str_repeat("☆", 5 - $rating) . "</p>";
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Submitted on: " . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "<p>No reviews available for this product.</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_system";

// Create database connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $rating = intval($_POST['rating']);
    $review = sanitizeInput($_POST['review']);

    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, review_text) 
            VALUES (?, ?, ?, ?)";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssis", $name, $email, $rating, $review);
        $stmt->execute();
        echo "Thank you for submitting your review!";
    } catch (mysqli_sql_exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Query database for reviews
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Date: " . htmlspecialchars($row['date']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Example usage
if (isset($_GET['action']) && $_GET['action'] == 'display') {
    displayReviews();
}
?>


<?php
// Display all reviews
displayReviews();
?>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to leave a review!</p>";
    }
}

// Function to submit new review
function submitReview($user_name, $review_text) {
    global $conn;
    
    // Sanitize input data
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    
    // Get current date and time
    $date = date("Y-m-d H:i:s");
    
    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, review_date) VALUES ('$user_name', '$review_text', '$date')";
    
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>";
        echo "Thank you for your review!";
        echo "</div>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $user_name = $_POST['user_name'];
        $review_text = $_POST['review_text'];
        
        // Check if fields are not empty
        if (!empty($user_name) && !empty($review_text)) {
            submitReview($user_name, $review_text);
        } else {
            echo "<div class='error'>";
            echo "Please fill in all required fields!";
            echo "</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reviews System</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        .review h3 {
            color: #333;
            font-size: 18px;
            margin-top: 0;
        }
        .review p {
            line-height: 1.6;
            margin-bottom: 10px;
        }
        .review small {
            color: #666;
            font-size: 12px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input, textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .success, .error {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid;
            border-radius: 4px;
        }
        .success {
            background-color: #dff0d8;
            color: #3c763d;
            border-color: #d6e9c6;
        }
        .error {
            background-color: #f2dede;
            color: #a94442;
            border-color: #ebccd1;
        }
    </style>
</head>
<body>
    <h2>Customer Reviews</h2>

    <?php displayReviews(); ?>

    <h3>Leave a Review</h3>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <div class="form-group">
            <label for="user_name">Name:</label>
            <input type="text" id="user_name" name="user_name" required>
        </div>
        
        <div class="form-group">
            <label for="review_text">Review:</label>
            <textarea id="review_text" name="review_text" rows="5" required></textarea>
        </div>
        
        <button type="submit" name="submit_review">Submit Review</button>
    </form>

    <?php
    // Close database connection
    mysqli_close($conn);
    ?>
</body>
</html>


<?php
function displayUserReviews() {
    // Database configuration
    $host = 'localhost';
    $db_user = 'root';
    $db_password = '';
    $db_name = 'reviews';

    // Connect to database
    $connection = new mysqli($host, $db_user, $db_password, $db_name);

    // Check connection
    if ($connection->connect_error) {
        die("Connection failed: " . $connection->connect_error);
    }

    // Fetch all reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $connection->query($sql);

    // Display existing reviews
    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>By " . $row['author_name'] . "</h3>";
            echo "<p>" . $row['content'] . "</p>";
            echo "<small>Posted on: " . $row['date_posted'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<div class='no-reviews'>No reviews yet!</div>";
    }

    // Close the database connection
    $connection->close();

    // Display review submission form
    displayReviewForm();
}

function displayReviewForm() {
    // Display a simple HTML form for submitting reviews
    ?>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST" class="review-form">
        <h2>Leave a Review</h2>
        <input type="text" name="author_name" placeholder="Your Name" required><br><br>
        <textarea name="content" placeholder="Write your review here..." rows="5" required></textarea><br><br>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>

    <style>
        /* Basic CSS styling */
        .reviews {
            margin: 20px;
        }

        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }

        .no-reviews {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 20px;
        }

        .review-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .review-form h2 {
            color: #333;
            margin-bottom: 15px;
        }

        .review-form input,
        .review-form textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
    <?php
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['submit_review'])) {
    // Database configuration
    $host = 'localhost';
    $db_user = 'root';
    $db_password = '';
    $db_name = 'reviews';

    try {
        // Connect to database
        $connection = new mysqli($host, $db_user, $db_password, $db_name);

        // Check connection
        if ($connection->connect_error) {
            throw new Exception("Connection failed: " . $connection->connect_error);
        }

        // Prepare and bind the insert statement
        $stmt = $connection->prepare("INSERT INTO reviews (author_name, content, date_posted) VALUES (?, ?, NOW())");
        $stmt->bind_param("ss", $_POST['author_name'], $_POST['content']);

        if ($stmt->execute()) {
            // Redirect back to the page after submission
            header("Location: " . htmlspecialchars($_SERVER['PHP_SELF']));
            exit();
        } else {
            echo "Error submitting review: " . $stmt->error;
        }

        // Close the statement and connection
        $stmt->close();
        $connection->close();

    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Call the display function
displayUserReviews();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = sanitize($_POST['name']);
    $email = sanitize($_POST['email']);
    $rating = (int)$_POST['rating'];
    $comment = sanitize($_POST['comment']);

    // Validate input
    if ($name == '' || $email == '' || $rating < 1 || $rating > 5 || $comment == '') {
        die("Please fill in all fields correctly.");
    }

    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->execute([$name, $email, $rating, $comment]);
        header("Location: $_SERVER[PHP_SELF]");
        exit();
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to display reviews
function display_reviews($conn) {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
    while ($row = $stmt->fetch()) {
        $rating_stars = str_repeat('★', $row['rating']) . str_repeat('☆', 5 - $row['rating']);
        $time_ago = date_diff(date_create($row['created_at']), new DateTime())->format("%d days ago");
        
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
        echo "<p>Rating: " . $rating_stars . "</p>";
        echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
        echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
        echo "<small>" . $time_ago . "</small>";
        echo "</div>";
    }
}

// Create reviews table if not exists
try {
    $conn->exec("CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        email VARCHAR(100) NOT NULL,
        rating INT NOT NULL,
        comment TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )");
} catch(PDOException $e) {
    die("Error creating table: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .review-form { margin-bottom: 30px; }
        .rating-stars { display: flex; gap: 5px; }
        .star { cursor: pointer; color: #ff4081; }
        .review { border: 1px solid #ddd; padding: 15px; margin-bottom: 20px; }
    </style>
</head>
<body>

<h1>Submit a Review</h1>
<div class="review-form">
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="rating-stars">
            <label>Rating:</label>
            <?php for ($i = 5; $i >= 1; $i--): ?>
                <input type="radio" name="rating" value="<?php echo $i; ?>" id="star<?php echo $i; ?>">
                <label class="star" for="star<?php echo $i; ?>">★</label>
            <?php endfor; ?>
        </div>

        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>
</div>

<h2>Reviews</h2>
<?php
if ($conn->query("SELECT COUNT(*) FROM reviews")->fetchColumn() == 0) {
    echo "<p>No reviews yet. Be the first to review!</p>";
} else {
    display_reviews($conn);
}
?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$user = 'root'; // Change to your database user
$password = ''; // Change to your database password
$dbname = 'reviews_db'; // Change to your database name

try {
    $conn = new mysqli($host, $user, $password, $dbname);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize and validate inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));
    $product_id = intval($_GET['product_id']); // Ensure product_id is passed safely

    if (empty($name) || empty($email) || empty($comment)) {
        throw new Exception("All fields are required");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format");
    }

    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5 stars");
    }

    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, email, rating, comment) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        // Redirect to product page or review list with a success message
        header("Location: product.php?id=$product_id&msg=Review+submitted+successfully!");
        exit();
    } else {
        throw new Exception("Error submitting review");
    }

} catch (Exception $e) {
    // Handle exceptions and display error messages
    $error_message = $e->getMessage();
    header("Location: submit_review.php?error=" . urlencode($error_message));
    exit();
}

$conn->close();
?>


<?php
function display_reviews($product_id) {
    $host = 'localhost';
    $user = 'root'; // Change to your database user
    $password = ''; // Change to your database password
    $dbname = 'reviews_db'; // Change to your database name

    try {
        $conn = new mysqli($host, $user, $password, $dbname);
        
        if ($conn->connect_error) {
            throw new Exception("Connection failed");
        }

        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            echo "<p>No reviews yet. Be the first to review this product!</p>";
            return;
        }

        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }

    } catch (Exception $e) {
        echo "<p>Error displaying reviews: " . $e->getMessage() . "</p>";
    } finally {
        $conn->close();
    }
}
?>


<?php
// Initialize an array to store reviews if it doesn't exist yet
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Function to handle review submission and display
function userReview() {
    // Check if the form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Basic validation
        if ($username !== '' && $rating >= 1 && $rating <= 5 && $comment !== '') {
            global $review_id; // Use a global variable to track review IDs

            // Create an array for the new review
            $new_review = array(
                'id' => $review_id,
                'username' => $username,
                'rating' => $rating,
                'comment' => $comment,
                'date' => date('Y-m-d H:i:s')
            );

            // Add the new review to the session
            $_SESSION['reviews'][$review_id] = $new_review;
            $review_id++; // Increment the review ID for next submission

            // Redirect to avoid form resubmission on page refresh
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            echo "<p class='error'>Please fill in all fields correctly.</p>";
        }
    }

    // Calculate and display the average rating
    $average_rating = 0;
    $total_ratings = count($_SESSION['reviews']);
    
    if ($total_ratings > 0) {
        $sum_ratings = array_sum(array_column($_SESSION['reviews'], 'rating'));
        $average_rating = $sum_ratings / $total_ratings;
    }

    // Display the average rating
    echo "<h3>Overall Rating: " . number_format($average_rating, 1) . "/5</h3>";

    // Display all reviews
    if (empty($_SESSION['reviews'])) {
        echo "<p>No reviews yet.</p>";
    } else {
        echo "<div class='reviews'>";
        foreach ($_SESSION['reviews'] as $review) {
            echo "<div class='review'>";
            echo "<strong>Username:</strong> " . $review['username'] . "<br>";
            echo "<strong>Rating:</strong> " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "<br>";
            echo "<strong>Comment:</strong> " . $review['comment'] . "<br>";
            echo "<strong>Date:</strong> " . $review['date'] . "<br>";
            echo "</div>";
        }
        echo "</div>";
    }
}

// Initialize review_id if not set
if (!isset($review_id)) {
    $review_id = 1;
}

// Call the function when needed
userReview();
?>


session_start();


<?php
// Function to handle and display user reviews
function user_reviews() {
    $reviews_file = 'reviews.txt';
    
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize inputs
        $username = htmlspecialchars($_POST['username']);
        $review = htmlspecialchars($_POST['review']);
        
        // Add timestamp
        $timestamp = date('j F Y, H:i:s');
        
        // Store the review in the file
        $review_data = "$username|$review|$timestamp
";
        file_put_contents($reviews_file, $review_data, FILE_APPEND);
        
        // Redirect back to the page to prevent form resubmission
        header("Location: {$_SERVER['PHP_SELF']}");
        exit();
    }
    
    // Display existing reviews
    if (file_exists($reviews_file)) {
        $reviews = file_get_contents($reviews_file);
        $reviews = explode("
", $reviews);
        
        echo "<div class='reviews'>";
        foreach ($reviews as $review) {
            $review_parts = explode("|", $review);
            if (count($review_parts) == 3) {
                list($username, $review_text, $timestamp) = $review_parts;
                echo "<div class='review'>";
                echo "<h4>$username</h4>";
                echo "<p>$review_text</p>";
                echo "<small>Posted on: $timestamp</small>";
                echo "</div>";
            }
        }
        echo "</div>";
    } else {
        // If no reviews exist, show a message
        echo "<p>No reviews yet. Be the first to leave a review!</p>";
    }
    
    // Display review form
    echo <<<_FORM
    <form action="{$_SERVER['PHP_SELF']}" method="post">
        <input type="text" name="username" placeholder="Your Name" required>
        <textarea name="review" placeholder="Write your review here..." required></textarea>
        <button type="submit">Submit Review</button>
    </form>
_FORM;
}
?>


<?php require_once('review.php'); ?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Handle review submission
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $productId = 1; // Example product ID
        $userName = $_POST['user_name'];
        $reviewText = $_POST['review_text'];
        $rating = $_POST['rating'];

        // Validate input
        if (empty($userName) || empty($reviewText) || !isset($rating)) {
            die('Please fill in all fields');
        }

        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, review_text, rating, timestamp) 
                              VALUES (:productId, :userName, :reviewText, :rating, NOW())");
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':userName', $userName);
        $stmt->bindParam(':reviewText', $reviewText);
        $stmt->bindParam(':rating', $rating);
        $stmt->execute();

        // Redirect to prevent form resubmission
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }

} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Get reviews from database
$stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = 1 ORDER BY timestamp DESC");
$stmt->execute();
$reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .rating {
            display: inline-block;
            width: 100px;
        }
        .star {
            color: #ffd700;
        }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<form method="post" action="">
    <div>
        <label for="user_name">Your Name:</label><br>
        <input type="text" id="user_name" name="user_name" required>
    </div>
    <div>
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" cols="50" required></textarea>
    </div>
    <div>
        <label>Rating:</label><br>
        <?php for ($i = 1; $i <= 5; $i++) { ?>
            <input type="radio" name="rating" value="<?php echo $i; ?>" id="star<?php echo $i; ?>">
            <label class="star" for="star<?php echo $i; ?>">★</label>
        <?php } ?>
    </div>
    <button type="submit">Submit Review</button>
</form>

<h2>Customer Reviews</h2>
<div id="reviews">
    <?php foreach ($reviews as $review) { ?>
        <div class="review-item">
            <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>
            <div class="rating">
                <?php 
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo '<span class="star">★</span>';
                }
                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                    echo '<span>☆</span>';
                }
                ?>
            </div>
            <p><?php echo htmlspecialchars($review['review_text']); ?></p>
            <small><?php echo date('F j, Y g:i a', strtotime($review['timestamp'])); ?></small>
        </div>
    <?php } ?>

    <!-- Display average rating -->
    <div class="average-rating">
        <?php 
        $avgRating = $conn->query("SELECT AVG(rating) as avg FROM reviews WHERE product_id = 1");
        $row = $avgRating->fetch(PDO::FETCH_ASSOC);
        $average = round($row['avg'], 1);
        $percentage = ($average / 5) * 100;
        ?>
        <h3>Average Rating: <?php echo $average; ?>/5 (<?php echo $percentage; ?>%)</h3>
    </div>
</div>

</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Function to add a new review
function addReview($conn, $userId, $productId, $rating, $title, $comment) {
    // Sanitize inputs
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $title = mysqli_real_escape_string($conn, $title);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if inputs are not empty
    if ($userId == "" || $productId == "" || $rating == "" || $title == "" || $comment == "") {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, title, comment) VALUES (?, ?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iiiss", $userId, $productId, $rating, $title, $comment);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($conn, $productId) {
    // Sanitize input
    $productId = mysqli_real_escape_string($conn, $productId);

    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Fetch all reviews
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }

    return $reviews;
}

// Function to display reviews
function displayReviews($conn, $productId) {
    $reviews = getReviews($conn, $productId);

    if (empty($reviews)) {
        echo "<p>No reviews available yet.</p>";
        return;
    }

    foreach ($reviews as $review) {
        // Get user info (assuming you have a users table)
        $userId = $review['user_id'];
        $sql_user = "SELECT username FROM users WHERE id = ?";
        $stmt_user = mysqli_prepare($conn, $sql_user);
        mysqli_stmt_bind_param($stmt_user, "i", $userId);
        mysqli_stmt_execute($stmt_user);
        $result_user = mysqli_stmt_get_result($stmt_user);
        $user_row = mysqli_fetch_assoc($result_user);
        $username = $user_row['username'];

        // Display review
        echo "<div class='review'>";
        echo "<h3>Reviewer: " . htmlspecialchars($username) . "</h3>";
        echo "<p>Date: " . date('F j, Y', strtotime($review['review_date'])) . "</p>";
        echo "<p>Rating: " . getStars($review['rating']) . "</p>";
        echo "<h4>" . htmlspecialchars($review['title']) . "</h4>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

// Function to calculate average rating
function getAverageRating($conn, $productId) {
    // Sanitize input
    $productId = mysqli_real_escape_string($conn, $productId);

    // Get total ratings and count
    $sql = "SELECT SUM(rating) AS total_rating, COUNT(*) AS review_count FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);

    if ($row['review_count'] == 0) {
        return 0;
    }

    $average = $row['total_rating'] / $row['review_count'];
    return round($average, 1);
}

// Function to display stars based on rating
function getStars($rating) {
    $stars = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★";
        } else {
            $stars .= "☆";
        }
    }
    return $stars;
}

// Example usage:
// Add a new review
if (isset($_POST['submit_review'])) {
    $userId = $_SESSION['user_id'];
    $productId = $_GET['product_id'];
    $rating = intval($_POST['rating']);
    $title = $_POST['title'];
    $comment = $_POST['comment'];

    if (addReview($conn, $userId, $productId, $rating, $title, $comment)) {
        echo "<p>Thank you for submitting your review!</p>";
    } else {
        echo "<p>Error submitting review. Please try again.</p>";
    }
}

// Display reviews and average rating
echo "<h2>Product Reviews</h2>";
echo "<p>Rating: " . getStars(getAverageRating($conn, $productId)) . "</p>";
displayReviews($conn, $productId);
?>


<?php
// Connect to database or define variables as needed

// Function to display user reviews
function display_reviews() {
    // Example: Get reviews from database
    $reviews = array(
        array('id' => 1, 'user_name' => 'John Doe', 'review_text' => 'Great product!', 'rating' => 5, 'date_posted' => '2023-09-20'),
        array('id' => 2, 'user_name' => 'Jane Smith', 'review_text' => 'Good service', 'rating' => 4, 'date_posted' => '2023-09-19'),
    );
    
    // Display reviews
    echo '<div class="reviews-container">';
    foreach ($reviews as $review) {
        echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($review['user_name']) . '</h3>';
            echo '<p>Rating: ' . str_repeat('★', $review['rating']) . '</p>';
            echo '<p>' . nl2br(htmlspecialchars($review['review_text'])) . '</p>';
            echo '<small>Posted on: ' . date('F j, Y', strtotime($review['date_posted'])) . '</small>';
        echo '</div>';
    }
    echo '</div>';
}

// Function to handle new reviews
function submit_review() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars(trim($_POST['review_name']));
        $review_text = htmlspecialchars(trim($_POST['review_text']));
        $rating = intval($_POST['review_rating']);
        
        // Validate input
        if ($name == "" || $review_text == "") {
            echo "<div class='error'>Please fill in all required fields!</div>";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "<div class='error'>Please select a valid rating (1-5 stars)!</div>";
            return;
        }
        
        // Save review to database or file
        // Example: Save to text file
        $filename = 'reviews.txt';
        $content = $name . '|' . $review_text . '|' . $rating . '|' . date('Y-m-d H:i:s') . "
";
        
        if (file_exists($filename)) {
            $handle = fopen($filename, 'a');
        } else {
            $handle = fopen($filename, 'w');
        }
        
        if ($handle) {
            fwrite($handle, $content);
            fclose($handle);
            
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Error saving your review. Please try again later.</div>";
        }
    }
}

// Main code
if (isset($_POST['submit_review'])) {
    submit_review();
}

display_reviews();

?>

<!-- HTML form for submitting reviews -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="review_name" placeholder="Your Name" required>
    <textarea name="review_text" placeholder="Write your review here..." required></textarea>
    <select name="review_rating">
        <option value="">Rating (1-5 stars)</option>
        <option value="1">★</option>
        <option value="2">★★</option>
        <option value="3">★★★</option>
        <option value="4">★★★★</option>
        <option value="5">★★★★★</option>
    </select>
    <button type="submit" name="submit_review">Submit Review</button>
</form>

<!-- Add some CSS styling -->
<style>
.reviews-container {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
}

.review {
    border: 1px solid #ddd;
    margin-bottom: 20px;
    padding: 15px;
}

.error, .success {
    padding: 10px;
    margin: 10px 0;
    border-radius: 4px;
}

.error {
    background-color: #ffebee;
    color: #d32f2f;
}

.success {
    background-color: #a5d6a7;
    color: #1b5e20;
}
</style>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = htmlspecialchars(stripslashes(trim($comment)));
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, created_at) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to fetch reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r INNER JOIN users u ON r.user_id = u.id WHERE r.product_id = ? ORDER BY r.created_at DESC");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
}

// Function to display reviews
function display_reviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews yet.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        // Display user information and review content
        echo "<div class='review'>";
        echo "<div class='user-info'>";
        echo "<span class='username'>" . htmlspecialchars($review['username']) . "</span>";
        echo "<div class='rating'>";
        
        // Display stars for rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "</div>";
        echo "<p class='comment'>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    $stmt = $conn->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result()->fetch_assoc();
    return round($result['average'], 1);
}

// Function to handle review voting
function vote_review($review_id, $vote_type) {
    global $conn;
    
    // Update votes based on type (upvote/downvote)
    if ($vote_type == 'up') {
        $stmt = $conn->prepare("UPDATE reviews SET upvotes = upvotes + 1 WHERE id = ?");
    } else {
        $stmt = $conn->prepare("UPDATE reviews SET downvotes = downvotes + 1 WHERE id = ?");
    }
    
    $stmt->bind_param("i", $review_id);
    return $stmt->execute();
}

// Example usage:
$product_id = 1; // Replace with actual product ID
$reviews = get_reviews($product_id);

echo "<h2>Product Reviews</h2>";
echo "<p>Rating: " . get_average_rating($product_id) . "/5</p>";

if (!empty($_POST['submit_review'])) {
    $user_id = 1; // Replace with actual user ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>Error submitting review.</div>";
    }
}

// Display review form
echo "<form method='post'>";
echo "<input type='number' name='rating' min='1' max='5' required placeholder='Rating (1-5)'>";
echo "<textarea name='comment' required placeholder='Write your review...'></textarea>";
echo "<button type='submit' name='submit_review'>Submit Review</button>";
echo "</form>";

display_reviews($reviews);

// Close database connection
$conn->close();
?>


<?php
function addReview($contentId, $userId, $rating) {
    try {
        // Database configuration
        $host = 'localhost';
        $db   = 'your_database_name';
        $user = 'your_username';
        $pass = 'your_password';

        // Create a new PDO instance
        $pdo = new PDO("mysql:host=$host;dbname=$db", $user, $pass);
        
        // Check if user already reviewed this content
        $stmt = $pdo->prepare('SELECT review_id FROM reviews WHERE content_id = ? AND user_id = ?');
        $stmt->execute([$contentId, $userId]);
        if ($stmt->rowCount() > 0) {
            return ['error' => 'You have already reviewed this content.'];
        }
        
        // Insert new review
        $stmt = $pdo->prepare('INSERT INTO reviews (content_id, user_id, rating) VALUES (?, ?, ?)');
        $result = $stmt->execute([$contentId, $userId, $rating]);
        
        if (!$result) {
            return ['error' => 'Error adding review. Please try again.'];
        }
        
        // Calculate average rating
        $stmt = $pdo->prepare('SELECT AVG(rating) as avg_rating FROM reviews WHERE content_id = ?');
        $stmt->execute([$contentId]);
        $averageRating = $stmt->fetch()['avg_rating'];
        
        return ['success' => true, 'average_rating' => round($averageRating, 1)];
        
    } catch(PDOException $e) {
        return ['error' => 'Error: ' . $e->getMessage()];
    }
}

// Example usage:
$contentId = 5;
$userId = 3;
$rating = 4;

$result = addReview($contentId, $userId, $rating);

if (isset($result['success'])) {
    echo "Review added successfully! Average rating: " . $result['average_rating'];
} else {
    echo $result['error'];
}
?>


<?php
// Database connection
function connectDB() {
    $host = "localhost";
    $user = "username";
    $pass = "password";
    $dbname = "reviews_db";

    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $pass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $conn;
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// Submit review
function submitReview($reviewText, $rating) {
    try {
        $db = connectDB();
        
        // Sanitize input
        $reviewText = htmlspecialchars(trim($reviewText));
        $rating = intval($rating);
        
        // Check if rating is valid
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Please choose a rating between 1 and 5.");
        }
        
        // Insert review into database
        $stmt = $db->prepare("INSERT INTO reviews (review_text, rating) VALUES (?, ?)");
        $stmt->execute([$reviewText, $rating]);
        
        return true;
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Display all reviews
function displayReviews() {
    try {
        $db = connectDB();
        
        // Get all reviews from database
        $stmt = $db->query("SELECT id, review_text, rating, date Posted FROM reviews ORDER BY posted DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<p><strong>Rating:</strong> " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p><strong>Review:</strong> " . htmlspecialchars_decode($review['review_text']) . "</p>";
                echo "<p><em>Posted on: " . date('jS M Y', strtotime($review['posted'])) . "</em></p>";
                echo "</div>";
            }
        } else {
            echo "No reviews found.";
        }
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Calculate average rating
function calculateAverageRating() {
    try {
        $db = connectDB();
        
        // Get total ratings and count
        $stmt = $db->query("SELECT SUM(rating) as total, COUNT(*) as count FROM reviews");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['count'] > 0) {
            $average = $result['total'] / $result['count'];
            return round($average, 1); // Round to one decimal place
        } else {
            return 0;
        }
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        // Handle review submission
        $reviewText = $_POST['review_text'];
        $rating = isset($_POST['rating']) ? $_POST['rating'] : 0;
        
        try {
            submitReview($reviewText, $rating);
            header("Location: " . $_SERVER["PHP_SELF"]); // Refresh to show new review
            exit();
        } catch(Exception $e) {
            echo "<div class='error'>" . $e->getMessage() . "</div>";
        }
    }
}

// Display average rating and reviews
echo "<h3>Product Reviews</h3>";
echo "<p>Average Rating: " . calculateAverageRating() . "/5</p>";

displayReviews();
?>

<!-- Review Form -->
<form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    <textarea name="review_text" placeholder="Write your review here..." required></textarea>
    <label>Rating:</label><br>
    <input type="radio" name="rating" value="5"> 5 Stars<br>
    <input type="radio" name="rating" value="4"> 4 Stars<br>
    <input type="radio" name="rating" value="3"> 3 Stars<br>
    <input type="radio" name="rating" value="2"> 2 Stars<br>
    <input type="radio" name="rating" value="1"> 1 Star<br>
    <button type="submit" name="submit_review">Submit Review</button>
</form>

<!-- CSS Styling -->
<style>
.review {
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
}
.error {
    color: red;
    margin-bottom: 10px;
}
</style>


<?php
function submit_review($review_text, $user_id, $product_id, $rating = null) {
    // Database connection details
    $db_host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $db_name = "database_name";

    // Connect to database
    $mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    // Sanitize input data (prevent SQL injection)
    $review_text = htmlspecialchars($review_text);
    $user_id = intval($user_id);
    $product_id = intval($product_id);
    $rating = ($rating !== null) ? intval($rating) : null;

    // Prepare and execute the SQL query
    if ($rating !== null) {
        $sql = "INSERT INTO reviews (review_text, user_id, product_id, rating, created_at)
                VALUES (?, ?, ?, ?, NOW())";
    } else {
        $sql = "INSERT INTO reviews (review_text, user_id, product_id, created_at)
                VALUES (?, ?, ?, NOW())";
    }

    // Use prepared statement to prevent SQL injection
    if ($rating !== null) {
        $stmt = $mysqli->prepare($sql);
        $stmt->bind_param("siii", $review_text, $user_id, $product_id, $rating);
    } else {
        $stmt = $mysqli->prepare($sql);
        $stmt->bind_param("siis", $review_text, $user_id, $product_id);
    }

    if ($stmt->execute()) {
        echo "Review submitted successfully!";
        return true;
    } else {
        echo "Error submitting review: " . $stmt->error;
        return false;
    }

    // Close database connection
    $mysqli->close();
}

// Example usage:
// submit_review("This is a great product!", 1, 5, 5);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'database_name';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY submission_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h4>Written by: " . htmlspecialchars($row['user_name']) . "</h4>";
        echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
        echo "<div class='rating'>";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "</div>";
    }
}

// Function to submit a new review
function submit_review($product_id, $user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $user_name));
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $review_text));
    $rating = (int)$rating;
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, review_text, rating, submission_date) 
            VALUES (?, ?, ?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "isii", $product_id, $user_name, $review_text, $rating);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return round($row['average'], 1);
    } else {
        return 0;
    }
}

// Function to count total reviews
function get_review_count($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as count FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return $row['count'];
    } else {
        return 0;
    }
}

// Example usage:
$product_id = 1; // Replace with actual product ID

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (submit_review($product_id, $user_name, $review_text, $rating)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .star { color: #gold; }
        .review { border: 1px solid #ddd; padding: 10px; margin: 5px 0; }
        .rating { display: inline-block; margin-top: 5px; }
    </style>
</head>
<body>

<h2>Product Reviews</h2>

<!-- Review Submission Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
    <div>
        <label for="user_name">Your Name:</label><br>
        <input type="text" id="user_name" name="user_name" required>
    </div>
    
    <div>
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" cols="50" required></textarea>
    </div>
    
    <div>
        <label>Rating:</label><br>
        <input type="radio" name="rating" value="5"> ★★★★★<br>
        <input type="radio" name="rating" value="4"> ★★★★☆<br>
        <input type="radio" name="rating" value="3"> ★★★☆☆<br>
        <input type="radio" name="rating" value="2"> ★★☆☆☆<br>
        <input type="radio" name="rating" value="1"> ★☆☆☆☆<br>
    </div>
    
    <button type="submit">Submit Review</button>
</form>

<!-- Display Reviews -->
<h3>Customer Reviews</h3>
<?php
display_reviews($product_id);
?>

<!-- Display Average Rating and Review Count -->
<div style="margin-top: 20px;">
    <?php
    $average_rating = get_average_rating($product_id);
    $review_count = get_review_count($product_id);
    
    echo "<p>Average Rating: $average_rating/5 ($review_count reviews)</p>";
    ?>
</div>

</body>
</html>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($name, $email, $rating, $review_text, $conn) {
    // Sanitize input
    $name = mysqli_real_escape_string($conn, htmlspecialchars(trim($name)));
    $email = mysqli_real_escape_string($conn, htmlspecialchars(trim($email)));
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars(trim($review_text)));

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, review_text, timestamp) 
            VALUES ('$name', '$email', '$rating', '$review_text', NOW())";

    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["name"]) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row["rating"]) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row["email"]) . "</p>";
            echo "<p>Review: " . htmlspecialchars($row["review_text"]) . "</p>";
            echo "<small>Posted on: " . date('d/m/Y H:i', $row["timestamp"]) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews found.</p>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user reviews
function handleReview($productId, $userId, $rating, $comment) {
    global $conn;

    // Sanitize inputs
    $productId = mysqli_real_escape_string($conn, $productId);
    $userId = mysqli_real_escape_string($conn, $userId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if user has already reviewed this product
    $checkQuery = "SELECT id FROM reviews WHERE product_id = '$productId' AND user_id = '$userId'";
    $result = mysqli_query($conn, $checkQuery);

    if (mysqli_num_rows($result) > 0) {
        // User already reviewed - update the review
        $updateQuery = "UPDATE reviews SET rating = '$rating', comment = '$comment' WHERE product_id = '$productId' AND user_id = '$userId'";
        mysqli_query($conn, $updateQuery);
    } else {
        // Insert new review
        $insertQuery = "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES ('$productId', '$userId', '$rating', '$comment')";
        mysqli_query($conn, $insertQuery);
    }

    // Display all reviews for the product
    displayReviews($productId);
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;

    $productId = mysqli_real_escape_string($conn, $productId);

    $reviewsQuery = "SELECT * FROM reviews WHERE product_id = '$productId'";
    $result = mysqli_query($conn, $reviewsQuery);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $averageRating = mysqli_fetch_assoc(mysqli_query($conn, "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = '$productId'"));
        echo "<h3>Product Reviews</h3>";
        echo "<p>Average Rating: " . round($averageRating['avg_rating'], 1) . "/5</p>";
        
        // Display each review
        while ($row = mysqli_fetch_assoc($result)) {
            $ratingStars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
            echo "<div class='review'>";
            echo "<p><strong>Rating:</strong> " . $ratingStars . "</p>";
            echo "<p><strong>Comment:</strong> " . $row['comment'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available yet.";
    }
}

// Example usage:
$product_id = 1;
$user_id = 1;
$rating = 4; // Scale of 1-5
$comment = "This is a great product!";

handleReview($product_id, $user_id, $rating, $comment);

?>


<?php
// Database configuration
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($user_id, $review_text, $rating) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $rating = intval($rating);

    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, review_text, rating) 
            VALUES ('$user_id', '$review_text', '$rating')";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a user
function get_reviews($user_id) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);

    $reviews = array();

    $sql = "SELECT * FROM reviews WHERE user_id = '$user_id'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $reviews[] = array(
                'id' => $row['id'],
                'review_text' => $row['review_text'],
                'rating' => $row['rating']
            );
        }
    }

    return $reviews;
}

// Function to get average rating
function get_average_rating($user_id) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);

    $sql = "SELECT AVG(rating) as average FROM reviews WHERE user_id = '$user_id'";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        return round($row['average'], 2); // Round to 2 decimal places
    }
    
    return 0;
}

// Function to get total number of reviews
function get_total_reviews($user_id) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);

    $sql = "SELECT COUNT(*) as count FROM reviews WHERE user_id = '$user_id'";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        return $row['count'];
    }
    
    return 0;
}

// Close database connection
$conn->close();
?>


<?php
// Include the review functions file
include('review_functions.php');

// Example usage:
$user_id = 'example_user';
$review_text = "This is a great product!";
$rating = 5;

if (add_review($user_id, $review_text, $rating)) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

echo "<br>";

// Get and display reviews
$reviews = get_reviews($user_id);
echo "Total Reviews: " . get_total_reviews($user_id) . "<br>";
echo "Average Rating: " . get_average_rating($user_id) . "/5<br><br>";

foreach ($reviews as $review) {
    echo "Rating: $review[rating]/5 <br>";
    echo "Review: $review[review_text] <br><br>";
}
?>


<?php
function userReviewForm() {
    // Initialize static variable to hold reviews across function calls
    static $reviews = array();
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate inputs
        $name = trim($_POST["reviewer_name"]);
        $reviewText = trim($_POST["review_text"]);
        
        if ($name !== "" && $reviewText !== "") {
            // Add new review to the array
            $reviews[] = array(
                'name' => $name,
                'text' => $reviewText
            );
            
            // Optionally reset form fields after submission
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        } else {
            $errorMessage = "Please enter both your name and review!";
        }
    }
    
    // Output the HTML form and reviews
    ?>
    <div class="review-container">
        <?php if (isset($errorMessage)) { ?>
            <p class="error"><?php echo $errorMessage; ?></p>
        <?php } ?>
        
        <h2>Leave a Review</h2>
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <div class="form-group">
                <label for="reviewer_name">Name:</label><br>
                <input type="text" id="reviewer_name" name="reviewer_name" required>
            </div>
            
            <div class="form-group">
                <label for="review_text">Review:</label><br>
                <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea>
            </div>
            
            <button type="submit" name="submit_review">Submit Review</button>
        </form>
        
        <?php if (!empty($reviews)) { ?>
            <h3>Previous Reviews:</h3>
            <ul class="review-list">
                <?php foreach ($reviews as $index => $rev) { ?>
                    <li>
                        <strong><?php echo htmlspecialchars($rev['name']); ?>:</strong><br>
                        <?php echo htmlspecialchars($rev['text']); ?>
                    </li>
                <?php } ?>
            </ul>
        <?php } ?>
    </div>
<?php
}

// Call the function to display the form and handle submissions
userReviewForm();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submitReview($user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection and XSS attacks
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating, created_at) 
            VALUES ('$user_name', '$review_text', '$rating', NOW())";
    
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

function getReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    $reviews = array();
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $reviews[] = $row;
        }
    }
    
    return $reviews;
}

function upvoteReview($review_id) {
    global $conn;
    
    // Update upvotes count
    $sql = "UPDATE reviews SET upvotes = upvotes + 1 WHERE id = '$review_id'";
    $conn->query($sql);
}

function downvoteReview($review_id) {
    global $conn;
    
    // Update downvotes count
    $sql = "UPDATE reviews SET downvotes = downvotes + 1 WHERE id = '$review_id'";
    $conn->query($sql);
}
?>


<?php
// Include the review functions
include('review_functions.php');

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = isset($_POST['rating']) ? (int)$_POST['rating'] : 0;
    
    if (!empty($user_name) && !empty($review_text)) {
        if (submitReview($user_name, $review_text, $rating)) {
            echo "Thank you for your review!";
        } else {
            echo "Error submitting review.";
        }
    } else {
        echo "Please fill in all required fields.";
    }
}

// Get all reviews
$reviews = getReviews();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <!-- Review Form -->
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="user_name">Name:</label><br>
        <input type="text" id="user_name" name="user_name"><br>
        
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text"></textarea><br>
        
        <label for="rating">Rating:</label><br>
        <input type="number" id="rating" name="rating" min="1" max="5"><br>
        
        <input type="submit" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    <?php foreach ($reviews as $review) { ?>
        <div class="review">
            <p><strong><?php echo htmlspecialchars($review['user_name']); ?></strong></p>
            <p><?php echo htmlspecialchars($review['review_text']); ?></p>
            <p>Rating: <?php echo $review['rating']; ?> stars</p>
            <p>Posted on: <?php echo date('F j, Y', strtotime($review['created_at'])); ?></p>
            
            <!-- Voting System -->
            <div class="votes">
                <button onclick="vote('up', '<?php echo $review['id']; ?>')">↑ Upvote</button>
                <span><?php echo $review['upvotes']; ?></span>
                <button onclick="vote('down', '<?php echo $review['id']; ?>')">↓ Downvote</button>
            </div>
        </div>
    <?php } ?>

    <!-- Voting JavaScript -->
    <script>
        function vote(action, review_id) {
            // Make an AJAX call to upvote/downvote
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    window.location.reload(); // Refresh to show updated votes
                }
            };
            xhttp.open("POST", "vote.php", true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send("action=" + action + "&review_id=" + review_id);
        }
    </script>
</body>
</html>


<?php
include('review_functions.php');

if (isset($_POST['action']) && isset($_POST['review_id'])) {
    $action = $_POST['action'];
    $review_id = $_POST['review_id'];
    
    if ($action == 'up') {
        upvoteReview($review_id);
    } elseif ($action == 'down') {
        downvoteReview($review_id);
    }
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Review function
function user_reviews($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $name = htmlspecialchars($_POST['name']);
        $comment = htmlspecialchars($_POST['comment']);
        $rating = intval($_POST['rating']);

        // Validate input
        if ($name == "" || $comment == "" || $rating < 1) {
            echo "Please fill in all required fields!";
            exit();
        }

        // Insert review into database
        try {
            $stmt = $conn->prepare("INSERT INTO reviews (user_name, comment, rating, submission_date) 
                                  VALUES (:name, :comment, :rating, NOW())");
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':comment', $comment);
            $stmt->bindParam(':rating', $rating);

            if ($stmt->execute()) {
                echo "Thank you for submitting your review!";
            } else {
                echo "Error submitting your review. Please try again.";
            }
        } catch(PDOException $e) {
            die("Database error: " . $e->getMessage());
        }

        // Display all reviews
    } else {
        // Get all reviews from database
        try {
            $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

            if ($reviews) {
                echo "<h2>Reviews</h2>";
                foreach ($reviews as $review) {
                    echo "<div class='review'>";
                    echo "<p><strong>" . htmlspecialchars($review['user_name']) . "</strong></p>";
                    echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
                    echo "<p>Rating: " . $review['rating'] . "/5</p>";
                    echo "<p>Submitted on: " . date('F j, Y', strtotime($review['submission_date'])) . "</p>";
                    echo "</div>";
                }
            } else {
                echo "No reviews found. Be the first to review!";
            }
        } catch(PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    }

    // Display review form
    if (!isset($_POST['submit'])) {
        // Generate CSRF token
        session_start();
        $token = md5(uniqid(mt_rand(), true));
        $_SESSION['csrf_token'] = $token;

        echo "<h2>Submit a Review</h2>";
        echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<input type='hidden' name='csrf_token' value='$token'>";
        
        echo "<p><label for='name'>Name:</label><br>";
        echo "<input type='text' id='name' name='name' required></p>";

        echo "<p><label for='comment'>Comment:</label><br>";
        echo "<textarea id='comment' name='comment' rows='5' cols='40' required></textarea></p>";

        echo "<p><label for='rating'>Rating:</label><br>";
        echo "<select id='rating' name='rating'>";
        echo "<option value='1'>1</option>";
        echo "<option value='2'>2</option>";
        echo "<option value='3'>3</option>";
        echo "<option value='4'>4</option>";
        echo "<option value='5' selected>5</option>";
        echo "</select></p>";

        echo "<input type='submit' name='submit' value='Submit Review'>";
        echo "</form>";
    }
}

// Call the review function
user_reviews($conn);

// Close database connection
$conn = null;
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check if the connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Sanitize the input data
$name = trim(mysqli_real_escape_string($conn, $_POST['name']));
$email = trim(mysqli_real_escape_string($conn, $_POST['email']));
$rating = intval($_POST['rating']);
$review_text = htmlspecialchars(trim(mysqli_real_escape_string($conn, $_POST['review_text'])));
$current_date = date('Y-m-d H:i:s');

// Insert the review into the database
$sql = "INSERT INTO reviews (name, email, rating, review_text, created_at) 
        VALUES ('$name', '$email', $rating, '$review_text', '$current_date')";

if ($conn->query($sql)) {
    // Redirect back to the review submission page
    header("Location: review_form.html");
} else {
    echo "Error submitting review: " . $conn->error;
}

// Close the database connection
$conn->close();
?>


<?php
function display_reviews() {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $dbname = 'reviews_db';

    // Connect to the database
    $conn = new mysqli($host, $username, $password, $dbname);

    // Check if the connection was successful
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Fetch all approved reviews from the database
    $sql = "SELECT * FROM reviews WHERE status = 'approved' ORDER BY created_at DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
                echo "<h3>Review by " . htmlspecialchars($row['name']) . "</h3>";
                echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
                echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
                echo "<p>" . nl2br(htmlspecialchars($row['review_text'])) . "</p>";
                echo "<small>Posted on: " . $row['created_at'] . "</small>";
            echo "</div><hr>";
        }
    } else {
        echo "No reviews found.";
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
// Configuration
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews_db";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Sanitize inputs
    $user_id = intval($user_id);
    $product_id = intval($product_id);
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));

    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }

    if (empty($comment)) {
        throw new Exception("Comment cannot be empty");
    }

    // Insert into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, submission_date) 
            VALUES ($user_id, $product_id, $rating, '$comment', NOW())";

    if (!mysqli_query($conn, $sql)) {
        throw new Exception("Error adding review: " . mysqli_error($conn));
    }
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;

    try {
        $product_id = intval($product_id);

        // Calculate average rating
        $avg_sql = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = $product_id";
        $result = mysqli_query($conn, $avg_sql);
        $row = mysqli_fetch_assoc($result);
        $avg_rating = round($row['avg_rating'], 1);

        echo "<div class='review-container'>";
        echo "<h3>Average Rating: " . $avg_rating . " stars</h3>";

        // Get all reviews
        $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY submission_date DESC";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review'>";
                echo "<div class='rating'>";
                for ($i = 1; $i <= $row['rating']; $i++) {
                    echo "<span class='star'>★</span>";
                }
                for ($i = $row['rating'] + 1; $i <= 5; $i++) {
                    echo "<span class='star'>☆</span>";
                }
                echo "</div>";
                echo "<p class='comment'>" . htmlspecialchars($row['comment']) . "</p>";
                echo "<small class='date'>" . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews yet!</p>";
        }
        echo "</div>";

    } catch (Exception $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}
?>


<?php
include 'review_functions.php';

if (isset($_POST['rating']) && isset($_POST['comment'])) {
    try {
        add_review(
            $user_id = $_SESSION['user_id'], // Replace with actual user ID
            $product_id = intval($_POST['product_id']),
            $rating = intval($_POST['rating']),
            $comment = $_POST['comment']
        );
        echo "Thank you for submitting your review!";
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
include 'review_functions.php';
display_reviews($product_id);
?>


<?php
class Review {
    private $id;
    private $author;
    private $email;
    private $rating;
    private $comment;
    private $date;

    public function __construct($id, $author, $email, $rating, $comment) {
        $this->id = $id;
        $this->author = $author;
        $this->email = $email;
        $this->rating = $rating;
        $this->comment = $comment;
        $this->date = date('Y-m-d H:i:s');
    }

    public function getId() {
        return $this->id;
    }

    public function getAuthor() {
        return $this->author;
    }

    public function getEmail() {
        return $this->email;
    }

    public function getRating() {
        return $this->rating;
    }

    public function getComment() {
        return $this->comment;
    }

    public function getDate() {
        return $this->date;
    }
}

class ReviewManager {
    private $reviews = array();
    private $filePath;

    public function __construct($filePath) {
        $this->filePath = $filePath;
        if (file_exists($filePath)) {
            $data = file_get_contents($filePath);
            $this->reviews = unserialize($data);
        }
    }

    public function addReview($id, $author, $email, $rating, $comment) {
        // Validate input
        if (empty($author) || empty($email) || empty($rating) || empty($comment)) {
            return false;
        }

        $review = new Review($id, $author, $email, $rating, $comment);
        array_push($this->reviews, $review);

        // Save to file
        $this->save();

        return true;
    }

    public function getReviews() {
        return $this->reviews;
    }

    private function save() {
        $data = serialize($this->reviews);
        file_put_contents($this->filePath, $data);
    }

    public function displayReviews() {
        foreach ($this->getReviews() as $review) {
            echo "<div class='review'>";
            echo "<h3>Review by: " . $review->getAuthor() . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $review->getRating()) . "</p>";
            echo "<p>" . $review->getComment() . "</p>";
            echo "<small>Posted on: " . $review->getDate() . "</small>";
            echo "</div>";
        }
    }
}

// Example usage:
$filePath = 'reviews.txt';
$reviewManager = new ReviewManager($filePath);

// Add a new review
$id = uniqid();
$author = "John Doe";
$email = "john@example.com";
$rating = 5;
$comment = "Great product!";
$success = $reviewManager->addReview($id, $author, $email, $rating, $comment);
if ($success) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

// Display all reviews
echo "<h2>All Reviews:</h2>";
$reviewManager->displayReviews();
?>


<?php
// Function to add a user review
function addReview($userId, $productId, $rating, $comment) {
    // Include database configuration file
    include 'db-config.php';
    
    // Connect to the database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return false;
    }
    
    // Sanitize inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Get current timestamp
    $timestamp = time();
    
    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
            VALUES ('$userId', '$productId', '$rating', '$comment', '$timestamp')";
    
    if ($conn->query($sql)) {
        // Review added successfully
        return true;
    } else {
        // Error adding review
        echo "Error: " . $sql . "<br>" . $conn->error;
        return false;
    }
    
    // Close database connection
    $conn->close();
}

// Example usage:
// addReview(1, 5, 4, "Great product! It works perfectly.");
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'yourusername');
define('DB_PASSWORD', 'yourpassword');
define('DB_NAME', 'yourdatabase');
?>


<?php
function user_review($item_id = null, $username = null, $rating = null, $comment = null, $limit = 5) {
    // Database connection details
    $db_host = 'localhost';
    $db_name = 'reviews_db';
    $db_user = 'root';
    $db_pass = '';

    // Connect to database
    $connection = mysql_connect($db_host, $db_user, $db_pass);
    if (!$connection) {
        die('Could not connect: ' . mysql_error());
    }
    
    mysql_select_db($db_name);

    // Insert new review if data is provided
    if ($item_id && $username && $rating && $comment) {
        $query = "INSERT INTO reviews (item_id, username, rating, comment, date) VALUES ('$item_id', '$username', '$rating', '$comment', NOW())";
        mysql_query($query);
    }

    // Fetch existing reviews
    $reviews_query = "SELECT * FROM reviews WHERE item_id = '$item_id' ORDER BY date DESC LIMIT $limit";
    $result = mysql_query($reviews_query);

    // Calculate average rating
    $avg_rating_query = "SELECT AVG(rating) as avg_rating FROM reviews WHERE item_id = '$item_id'";
    $avg_result = mysql_query($avg_rating_query);
    $avg_row = mysql_fetch_assoc($avg_result);
    $average_rating = number_format((float)$avg_row['avg_rating'], 1, '.', '');

    // Display review form and results
    if ($result) {
        echo "<div class='reviews'>";
        echo "<h3>Reviews</h3>";
        
        // Display average rating
        echo "<p>Average Rating: $average_rating/5</p>";
        
        while ($row = mysql_fetch_assoc($result)) {
            echo "<div class='review-item'>";
            echo "<div class='review-header'>";
            echo "<span class='username'>" . htmlspecialchars($row['username']) . "</span>";
            echo "<div class='rating'>";
            
            // Display stars
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            
            echo "</div>";
            echo "</div>";
            echo "<p class='comment'>" . nl2br(htmlspecialchars($row['comment'])) . "</p>";
            echo "<small class='date'>" . date('F j, Y', strtotime($row['date'])) . "</small>";
            echo "</div>";
        }
        
        echo "</div>";
    }

    // Close database connection
    mysql_close($connection);
}

// Example usage:
// Insert new review
user_review(123, 'JohnDoe', 4, 'Great product! Highly recommended.', 5);

// Display reviews
echo "<h2>Product Reviews</h2>";
user_review(123); // Display all reviews for item_id 123 with default limit of 5

?>


<?php
// Include the review function file
include('review_function.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process submitted review
    if (isset($_POST['item_id'], $_POST['username'], $_POST['rating'], $_POST['comment'])) {
        user_review($_POST['item_id'], $_POST['username'], $_POST['rating'], $_POST['comment']);
    }
}

// Display existing reviews for item ID 123
echo "<h2>Product Reviews</h2>";
user_review(123);
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

class Review {
    private $conn;

    public function __construct() {
        // Connect to database
        $this->conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        
        if ($this->conn->connect_error) {
            die("Connection failed: " . $this->conn->connect_error);
        }
    }

    // Function to submit a review
    public function submitReview($user_id, $product_id, $rating, $comment) {
        try {
            // Prepare and bind the statement
            $stmt = $this->conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, created_at) VALUES (?, ?, ?, ?, NOW())");
            $stmt->bind_param("iids", $user_id, $product_id, $rating, $comment);
            
            // Execute the statement
            if ($stmt->execute()) {
                return true; // Review submitted successfully
            } else {
                return false; // Error submitting review
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Function to fetch reviews for a product
    public function getReviews($product_id, $limit = 5) {
        try {
            $reviews = array();

            // Prepare and bind the statement
            $stmt = $this->conn->prepare("SELECT r.*, u.username FROM reviews r INNER JOIN users u ON r.user_id = u.id WHERE product_id = ? ORDER BY created_at DESC LIMIT ?");
            $stmt->bind_param("ii", $product_id, $limit);
            
            // Execute the statement
            if ($stmt->execute()) {
                // Get result set
                $result = $stmt->get_result();
                
                while ($row = $result->fetch_assoc()) {
                    $review = array(
                        'user_name' => $row['username'],
                        'rating' => $row['rating'],
                        'comment' => $row['comment'],
                        'created_at' => date('M j, Y g:i a', strtotime($row['created_at'])),
                        // You can add more fields as needed
                    );
                    
                    array_push($reviews, $review);
                }
                
                return $reviews;
            } else {
                return false; // Error fetching reviews
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function __destruct() {
        // Close database connection
        if ($this->conn != null) {
            $this->conn->close();
        }
    }
}

// Example usage:
$review = new Review();

// Submit a review
$user_id = 1; // Replace with actual user ID
$product_id = 10; // Replace with actual product ID
$rating = 5; // Rating between 1 and 5
$comment = "This is an amazing product!"; // User comment

if ($review->submitReview($user_id, $product_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review!";
}

// Get reviews for a product
$product_reviews = $review->getReviews(10, 5); // Get 5 latest reviews for product ID 10

if ($product_reviews) {
    foreach ($product_reviews as $rev) {
        echo "<div class='review'>";
        echo "<p><strong>" . $rev['user_name'] . "</strong> - " . str_repeat("★", $rev['rating']) . "</p>";
        echo "<p>" . $rev['comment'] . "</p>";
        echo "<small>" . $rev['created_at'] . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews found.";
}
?>


<?php
// Function to add a user review
function addReview($username, $rating, $comment = "") {
    // Validate inputs
    if (empty($username) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid input";
    }
    
    // Sanitize inputs to prevent SQL injection and XSS attacks
    $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');
    $comment = htmlspecialchars($comment, ENT_QUOTES, 'UTF-8');
    
    // Connect to database
    include('db_config.php'); // Include your database configuration
    
    try {
        // Check if username exists in users table
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            return "Username does not exist";
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comment) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sis", $username, $rating, $comment);
        
        if ($stmt->execute()) {
            return "Review added successfully";
        } else {
            return "Error adding review: " . $stmt->error;
        }
    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
$reviewResult = addReview("JohnDoe", 4, "Great product!");
echo $reviewResult;
?>


// Required parameters: username and rating
addReview("JaneSmith", 5);

// With optional comment parameter
addReview("JohnDoe", 4, "This is a great product!");

// Minimum rating (1)
addReview("MikeJohnson", 1, "Not satisfied with the quality");

// Maximum rating (5)
addReview("SarahWilliams", 5, "Excellent service and product");


<?php
function addReview($userId, $productId, $rating, $comment) {
    // Connect to database
    try {
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Validate input
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            return "Invalid rating. Please enter a number between 1 and 5.";
        }
        if (strlen($comment) > 1000) {
            return "Comment is too long. Maximum allowed length is 1000 characters.";
        }
        
        // Sanitize inputs
        $userId = htmlspecialchars(strip_tags($userId));
        $productId = htmlspecialchars(strip_tags($productId));
        $rating = intval($rating);
        $comment = htmlspecialchars(strip_tags($comment));
        
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) 
                              VALUES (:userId, :productId, :rating, :comment)");
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            // Calculate average rating for the product
            $avgStmt = $conn->prepare("SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = :productId");
            $avgStmt->bindParam(':productId', $productId);
            $avgStmt->execute();
            
            $avgResult = $avgStmt->fetch(PDO::FETCH_ASSOC);
            $averageRating = round($avgResult['avg_rating'], 1);
            
            // Update product table with new average rating
            $updateAvgStmt = $conn->prepare("UPDATE products SET average_rating = :averageRating WHERE id = :productId");
            $updateAvgStmt->bindParam(':averageRating', $averageRating);
            $updateAvgStmt->bindParam(':productId', $productId);
            
            if ($updateAvgStmt->execute()) {
                return "Review added successfully!";
            } else {
                return "Error updating average rating.";
            }
        } else {
            return "Error adding review.";
        }
        
    } catch(PDOException $e) {
        echo "Connection failed: " . $e->getMessage();
        return "Database error occurred.";
    }
}
?>


// Example usage:
$reviewResult = addReview(1, 2, 4, "Great product!");
echo $reviewResult;


<?php
// Connect to database
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function reviewSystem() {
    global $conn;
    
    // Handle form submission
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'submit_review':
                submitReview();
                break;
            case 'delete_review';
                deleteReview();
                break;
            default:
                break;
        }
    }

    displayReviews();
}

function submitReview() {
    global $conn;

    // Validate input
    if (empty($_POST['comment'])) {
        echo "Please enter a comment.";
        return;
    }

    if (!isset($_POST['rating']) || $_POST['rating'] < 1 || $_POST['rating'] > 5) {
        echo "Please select a rating between 1 and 5.";
        return;
    }

    $comment = mysqli_real_escape_string($conn, $_POST['comment']);
    $rating = intval($_POST['rating']);

    // Get current user's ID (assuming you have a user authentication system)
    $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;

    if ($user_id == 0) {
        echo "Please log in to post a review.";
        return;
    }

    // Insert into database
    $sql = "INSERT INTO reviews (user_id, rating, comment, submission_date)
            VALUES ('$user_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql)) {
        header("Location: {$_SERVER['PHP_SELF']}"); // Refresh page to show new review
    } else {
        echo "Error submitting review: " . $conn->error;
    }
}

function deleteReview() {
    global $conn;

    if (!isset($_POST['review_id'])) {
        return;
    }

    $review_id = intval($_POST['review_id']);

    // Verify ownership of the review
    $sql = "SELECT user_id FROM reviews WHERE id = '$review_id'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $user_id = $row['user_id'];

        // Check if current user is the review author
        if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $user_id) {
            $sql_delete = "DELETE FROM reviews WHERE id = '$review_id'";
            if ($conn->query($sql_delete)) {
                header("Location: {$_SERVER['PHP_SELF']}"); // Refresh page after deletion
            } else {
                echo "Error deleting review: " . $conn->error;
            }
        } else {
            echo "You are not authorized to delete this review.";
        }
    } else {
        echo "Review not found.";
    }
}

function displayReviews() {
    global $conn;

    // Get all reviews
    $sql = "SELECT r.id, r.user_id, r.rating, r.comment, r.submission_date, u.username 
            FROM reviews r 
            LEFT JOIN users u ON r.user_id = u.id 
            ORDER BY submission_date DESC";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Display average rating
        displayAverageRating();

        echo "<div class='reviews'>";
        
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
                displayRatingStars($row['rating']);
                echo "<p><strong>" . htmlspecialchars($row['username']) . "</strong></p>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                
                // Display delete button if current user is the review author
                if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $row['user_id']) {
                    echo "<form method='post'>";
                        echo "<input type='hidden' name='action' value='delete_review'>";
                        echo "<input type='hidden' name='review_id' value='" . $row['id'] . "'>";
                        echo "<button type='submit'>Delete Review</button>";
                    echo "</form>";
                }
            echo "</div>";
        }

        echo "</div>";
    } else {
        echo "No reviews yet.";
    }
}

function displayRatingStars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo "<span class='star'>★</span>";
        } else {
            echo "<span class='star'>☆</span>";
        }
    }
}

function displayAverageRating() {
    global $conn;

    // Calculate average rating
    $sql = "SELECT AVG(rating) AS avg_rating FROM reviews";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $avg_rating = number_format($row['avg_rating'], 1);

        echo "<div class='average-rating'>";
            displayRatingStars(round($avg_rating));
            echo "<span>Average Rating: {$avg_rating}/5</span>";
        echo "</div>";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .star {
            color: #ffd700;
            font-size: 24px;
            margin-right: 5px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .average-rating {
            background-color: #f8f9fa;
            padding: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <?php
    // Display review form and reviews
    if (isset($_SESSION['user_id'])) { ?>
        <form method="post">
            <h3>Submit a Review:</h3>
            <input type="hidden" name="action" value="submit_review">
            
            <div class="rating-stars">
                Rating: 
                <?php for ($i = 1; $i <= 5; $i++) { ?>
                    <input type="radio" name="rating" id="star<?=$i;?>" value="<?=$i;?>">
                    <label for="star<?=$i;?>">★</label>
                <?php } ?>
            </div>

            <textarea name="comment" placeholder="Write your review..." required></textarea>
            <button type="submit">Submit Review</button>
        </form>
    <?php } else { ?>
        <p>Please log in to submit a review.</p>
    <?php } ?>

    <!-- Display reviews -->
    <?php reviewSystem(); ?>
</body>
</html>


<?php
// Initialize the reviews array (this would typically be stored in a database in a real application)
$reviews = array();

function add_review($user_id, $username, $rating, $comment) {
    global $reviews;
    
    // Create a unique review ID using uniqid()
    $review_id = uniqid();
    
    // Add the new review to the reviews array
    $new_review = array(
        'id' => $review_id,
        'user_id' => $user_id,
        'username' => $username,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s') // Add current timestamp
    );
    
    $reviews[] = $new_review;
    
    return true;
}

function get_reviews() {
    global $reviews;
    return $reviews;
}

// Example usage:
add_review(1, "JohnDoe", 4, "This is a great product!");
add_review(2, "JaneSmith", 5, "Excellent service and quality!");

// Output the reviews
$all_reviews = get_reviews();

function output_reviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Rating: " . $review['rating'] . "/5</h3>";
        echo "<p><strong>" . htmlspecialchars($review['username']) . "</strong></p>";
        echo "<p>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
        echo "<small>" . $review['timestamp'] . "</small>";
        echo "</div>";
    }
}

// Display the reviews
output_reviews($all_reviews);
?>


<?php
// Function to handle user reviews
function user_review($review_id = 0, $user_id = 0, $rating = 0, $comment = '', $action = 'add') {
    // Database connection details
    $host = "localhost";
    $username = "your_username";
    $password = "your_password";
    $database = "your_database";

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Escape special characters to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Perform action based on the parameter
    switch ($action) {
        case 'add':
            // Add new review
            $sql = "INSERT INTO reviews (user_id, rating, comment)
                    VALUES ('$user_id', '$rating', '$comment')";
            break;

        case 'update':
            // Update existing review
            $sql = "UPDATE reviews 
                    SET rating='$rating', comment='$comment'
                    WHERE review_id='$review_id'";
            break;

        case 'delete':
            // Delete review
            $sql = "DELETE FROM reviews 
                    WHERE review_id='$review_id'";
            break;

        default:
            // Default action (could be set to return an error)
            return false;
    }

    // Execute the query
    if (mysqli_query($conn, $sql)) {
        // Close database connection
        mysqli_close($conn);
        return true;
    } else {
        // Close database connection
        mysqli_close($conn);
        die("Error: " . mysqli_error($conn));
        return false;
    }
}

// Example usage:
// Adding a new review
if (user_review(0, 1, 5, 'Great product!', 'add')) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

// Updating an existing review
if (user_review(1, 1, 4, 'Good product!', 'update')) {
    echo "Review updated successfully!";
} else {
    echo "Error updating review.";
}

// Deleting a review
if (user_review(2, '', '', '', 'delete')) {
    echo "Review deleted successfully!";
} else {
    echo "Error deleting review.";
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$database = "reviews_db";

// Create database connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Check if the user has already reviewed this product
    $checkQuery = "SELECT * FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ii", $userId, $productId);
    $stmt->execute();
    
    if ($stmt->fetch()) {
        return false; // User already reviewed this product
    }
    
    // Insert the new review into the database
    $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) 
                   VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getProductReviews($productId) {
    global $conn;
    
    $query = "SELECT r.*, u.username FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE product_id = ? 
              ORDER BY timestamp DESC";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    return $result->fetch_all(MYSQLI_ASSOC);
}

// Function to update a review
function updateReview($reviewId, $rating, $comment) {
    global $conn;
    
    $updateQuery = "UPDATE reviews SET rating = ?, comment = ? WHERE id = ?";
    $stmt = $conn->prepare($updateQuery);
    $stmt->bind_param("isi", $rating, $comment, $reviewId);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to delete a review
function deleteReview($reviewId) {
    global $conn;
    
    $deleteQuery = "DELETE FROM reviews WHERE id = ?";
    $stmt = $conn->prepare($deleteQuery);
    $stmt->bind_param("i", $reviewId);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($productId) {
    $reviews = getProductReviews($productId);
    
    if (empty($reviews)) {
        echo "<p>No reviews available for this product.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>By " . htmlspecialchars($review['username']) . "</h4>";
        echo "<p>Rating: " . htmlspecialchars($review['rating']) . " stars</p>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "<small>Posted on: " . date('F j, Y', strtotime($review['timestamp'])) . "</small>";
        echo "</div><hr>";
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $userId = 1; // Get this from user session
    $productId = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($userId, $productId, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Review could not be submitted.";
    }
}

// Display all reviews for a product
$productId = 1; // Example product ID
displayReviews($productId);

$conn->close();
?>


<?php
function handleUserReview($reviewId = null, $userId, $username, $rating, $comment, $connection) {
    try {
        if ($reviewId === null) {
            // Add new review
            $stmt = $connection->prepare("INSERT INTO reviews (user_id, username, rating, comment) VALUES (?, ?, ?, ?)");
            $stmt->bind_param("isss", $userId, $username, $rating, $comment);
            if ($stmt->execute()) {
                return "Review added successfully";
            } else {
                return "Error adding review: " . $stmt->error;
            }
        } else {
            // Check if we're updating or deleting
            $action = $_POST['action'] ?? 'update';
            
            if ($action === 'delete') {
                // Delete review
                $stmt = $connection->prepare("UPDATE reviews SET deleted = 1 WHERE review_id = ?");
                $stmt->bind_param("i", $reviewId);
                if ($stmt->execute()) {
                    return "Review deleted successfully";
                } else {
                    return "Error deleting review: " . $stmt->error;
                }
            } else {
                // Update review
                $stmt = $connection->prepare("UPDATE reviews SET rating = ?, comment = ? WHERE review_id = ?");
                $stmt->bind_param("isi", $rating, $comment, $reviewId);
                if ($stmt->execute()) {
                    return "Review updated successfully";
                } else {
                    return "Error updating review: " . $stmt->error;
                }
            }
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    }
}
?>


$result = handleUserReview(
    null,
    $userId,
    $username,
    $rating,
    $comment,
    $connection
);


$result = handleUserReview(
    $reviewId,
    $userId,
    $username,
    $rating,
    $comment,
    $connection
);


// In your form or request, include a hidden input:
<input type="hidden" name="action" value="delete">

// Then call the function:
$result = handleUserReview($reviewId, null, null, null, null, $connection);


<?php
// Function to handle review submission
function submitReview($name, $email, $rating, $comment) {
    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if (!preg_match("/^[\S.]+@[\S.]+\.[\S.]+$/", $email)) {
        return "Invalid email format!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Sanitize inputs
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $comment = htmlspecialchars($comment);

    // Create review array
    $review = [
        'name' => $name,
        'email' => $email,
        'rating' => $rating,
        'comment' => $comment,
        'date' => date('Y-m-d H:i:s')
    ];

    // Load existing reviews
    if (file_exists('reviews.json')) {
        $reviews = json_decode(file_get_contents('reviews.json'), true);
    } else {
        $reviews = [];
    }

    // Add new review
    array_unshift($reviews, $review);

    // Save reviews back to file
    file_put_contents('reviews.json', json_encode($reviews));

    return "Review submitted successfully!";
}

// Function to display reviews
function displayReviews() {
    if (!file_exists('reviews.json')) {
        echo "<p>No reviews yet!</p>";
        return;
    }

    $reviews = json_decode(file_get_contents('reviews.json'), true);

    echo "<div class='reviews'>";
    foreach ($reviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<h3>{$review['name']}</h3>";
        echo "<p>Email: " . str_replace('@', ' at ', $review['email']) . "</p>"; // Obfuscate email
        echo "<div class='rating'>";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "<p>{$review['comment']}</p>";
        echo "<small>Posted on {$review['date']}</small>";
        echo "</div>";
    }
    echo "</div>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submitReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    echo $result;
} else {
    displayReviews();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .star { color: #gold; }
        .review { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .reviews { max-width: 800px; margin: 0 auto; }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php
    if ($_SERVER["REQUEST_METHOD"] == "GET") {
        displayReviews();
    }
    ?>

    <form method="post" action="">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">★☆☆☆☆</option>
            <option value="2">★★☆☆☆</option>
            <option value="3">★★★☆☆</option>
            <option value="4">★★★★☆</option>
            <option value="5">★★★★★</option>
        </select><br>
        <textarea name="comment" placeholder="Your Review" required></textarea><br>
        <button type="submit">Submit Review</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'reviews';

// Connect to database
$conn = new mysqli($host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, date) VALUES (
        '" . mysqli_real_escape_string($conn, $name) . "',
        '" . mysqli_real_escape_string($conn, $email) . "',
        '" . mysqli_real_escape_string($conn, $rating) . "',
        '" . mysqli_real_escape_string($conn, $comment) . "',
        CURRENT_TIMESTAMP
    )";

    if ($conn->query($sql)) {
        header("Location: $_SERVER[PHP_SELF]");
        exit;
    } else {
        echo "Error submitting review: " . $conn->error;
    }
}

// Get reviews from database
$sql = "SELECT * FROM reviews ORDER BY date DESC";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            margin-bottom: 30px;
        }
        .rating-stars {
            font-size: 24px;
            color: #ffd700;
        }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <div class="rating-stars">
            <label>Rating:</label>
            <select name="rating">
                <option value="5">★★★★★</option>
                <option value="4">★★★★☆</option>
                <option value="3">★★★☆☆</option>
                <option value="2">★★☆☆☆</option>
                <option value="1">★☆☆☆☆</option>
            </select>
        </div><br>
        <textarea name="comment" placeholder="Your Review" rows="4" required></textarea><br>
        <input type="submit" value="Submit Review">
    </form>
</div>

<div class="reviews-list">
    <h2>Review List</h2>
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Mask email address
            $masked_email = substr_replace($row['email'], '***', 1, -5);

            echo "<div class='review-item'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Email: " . $masked_email . "</p>";
            echo "<p>Rating: ";
            for ($i = 0; $i < $row['rating']; $i++) {
                echo "★";
            }
            echo "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<p>Date: " . date("d M Y H:i", strtotime($row['date'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
    ?>
</div>

<?php
$conn->close();
?>



<?php
// Function to display and submit user reviews
function userReview() {
    // Array to store reviews (simulating a database)
    $reviews = array();
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $review = htmlspecialchars(trim($_POST['review']));
        
        // Validate input
        if (empty($name) || empty($review)) {
            echo "<div class='error'>Please fill in both name and review fields!</div>";
        } else {
            // Create a new review entry with timestamp
            $newReview = array(
                'name' => $name,
                'review' => $review,
                'timestamp' => time()
            );
            
            // Add the new review to the reviews array (simulating database insertion)
            array_push($reviews, $newReview);
            
            // Redirect back to avoid form resubmission
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        }
    }
    
    // Display existing reviews
    if (!empty($reviews)) {
        echo "<h3>Previous Reviews:</h3>";
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<p><strong>" . $review['name'] . "</strong></p>";
            echo "<p>" . $review['review'] . "</p>";
            echo "<small>Posted on: " . date('jS M Y, g:i a', $review['timestamp']) . "</small>";
            echo "</div>";
        }
    } else {
        // Show message if no reviews yet
        echo "<p class='info'>Be the first to leave a review!</p>";
    }
    
    // Display review form
    echo "<h3>Leave a Review:</h3>";
    echo "<form method='post' action='" . $_SERVER["PHP_SELF"] . "'>";
    echo "<input type='text' name='name' placeholder='Your Name'>";
    echo "<textarea name='review' placeholder='Write your review here...'></textarea>";
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $dbusername, $dbpassword, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['username']) . "</h3>";
            echo "<p>Rating: " . str_repeat("⭐️", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        // No reviews found
        echo "<p>No reviews available for this product.</p>";
    }

    $stmt->close();
}

// Function to submit a new review
function submit_review() {
    global $conn;

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = sanitizeInput($_POST['comment']);

        // Validate input
        if (empty($username) || empty($email) || empty($comment)) {
            echo "Please fill in all required fields!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars!";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, username, email, rating, comment) VALUES (?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("isidi", $product_id, $username, $email, $rating, $comment);

        if ($stmt->execute()) {
            echo "Review submitted successfully!";
        } else {
            echo "Error submitting review: " . $stmt->error;
        }

        $stmt->close();
    }
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = htmlspecialchars(strip_tags(trim($data)));
    return $data;
}

?>


<?php display_reviews(1); ?>


<?php
// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    rating INT,
    comment TEXT,
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $_POST['username']);
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    if ($user_name && $rating > 0) {
        $sql = "INSERT INTO reviews (user_name, rating, comment)
                VALUES ('$user_name', '$rating', '$comment')";
        
        if (mysqli_query($conn, $sql)) {
            echo "<div class='alert alert-success'>Thank you for your review!</div>";
        } else {
            echo "<div class='alert alert-danger'>Error submitting review. Please try again.</div>";
        }
    } else {
        echo "<div class='alert alert-warning'>Please fill in all required fields (Name and Rating).</div>";
    }
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);
$reviews = mysqli_fetch_all($result, MYSQLI_ASSOC);

mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
            color: #ffd700;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        #review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<form id="review-form" method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <div class="form-group">
        <label for="username">Name:</label><br>
        <input type="text" id="username" name="username" required>
    </div>

    <div class="form-group">
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">★★★★★</option>
            <option value="4">★★★★☆</option>
            <option value="3">★★☆☆☆</option>
            <option value="2">★☆☆☆☆</option>
            <option value="1">☆☆☆☆☆</option>
        </select>
    </div>

    <div class="form-group">
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4" cols="50"></textarea>
    </div>

    <button type="submit">Submit Review</button>
</form>

<h2>Reviews</h2>
<?php foreach ($reviews as $review): ?>
<div class="review-container">
    <div class="review-header">
        <span class="rating-stars"><?php echo str_repeat('★', $review['rating']) ?></span>
        <span style="margin-left: 10px;">- <?php echo htmlspecialchars($review['user_name']) ?></span>
        <span style="float: right; color: #666;">
            <?php echo date("F j, Y g:i a", strtotime($review['submission_date'])) ?>
        </span>
    </div>
    <p><?php echo nl2br(htmlspecialchars($review['comment'])) ?></p>
</div>
<?php endforeach; ?>

</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$db_name = "reviews_db";

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Escape special characters
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;

    // Get all reviews for the given product
    $sql = "SELECT r.id, u.username AS reviewer_name, p.product_name, r.rating,
            r.comment, DATE_FORMAT(r.timestamp, '%M %d, %Y') AS date
            FROM reviews r
            LEFT JOIN users u ON r.user_id = u.id
            LEFT JOIN products p ON r.product_id = p.id
            WHERE p.id = '$product_id'
            ORDER BY r.timestamp DESC";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Submit review
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    $result = submit_review($user_id, $product_id, $rating, $comment);
    echo $result;
}

// Display reviews for product ID 1
$reviews_result = get_reviews(1);

if ($reviews_result) {
    while ($row = $reviews_result->fetch_assoc()) {
        // Format and display the review
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['reviewer_name']) . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "<small>Posted on: " . $row['date'] . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews found for this product.";
}

// Close database connection
$conn->close();
?>


<?php
// Review class
class Review {
    private $reviewsFile = 'reviews.txt';

    // Get all reviews
    public function getReviews() {
        if (file_exists($this->reviewsFile)) {
            $data = file_get_contents($this->reviewsFile);
            return unserialize($data);
        }
        return array();
    }

    // Add a new review
    public function addReview($name, $email, $rating, $comment) {
        $reviews = $this->getReviews();
        
        $newReview = array(
            'id' => count($reviews) + 1,
            'name' => htmlspecialchars($name),
            'email' => htmlspecialchars($email),
            'rating' => intval($rating),
            'comment' => htmlspecialchars($comment),
            'timestamp' => time()
        );
        
        $reviews[] = $newReview;
        file_put_contents($this->reviewsFile, serialize($reviews));
    }

    // Display reviews
    public function displayReviews() {
        $reviews = $this->getReviews();
        if (!empty($reviews)) {
            echo '<div class="reviews">';
            
            // Calculate averages
            $totalRating = 0;
            foreach ($reviews as $review) {
                $totalRating += $review['rating'];
            }
            $averageRating = $totalRating / count($reviews);
            
            echo '<div class="ratings">';
            echo '<p>Average Rating: ' . number_format($averageRating, 1) . '/5</p>';
            echo '</div>';

            foreach ($reviews as $review) {
                echo '<div class="review-item">';
                echo '<h3>' . $review['name'] . '</h3>';
                
                // Display stars
                echo '<div class="stars">';
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo '<span class="star">★</span>';
                }
                if ($review['rating'] < 5) {
                    for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                        echo '<span class="star">☆</span>';
                    }
                }
                echo '</div>';
                
                echo '<p>' . $review['comment'] . '</p>';
                echo '<small>Posted on: ' . date('jS M Y', $review['timestamp']) . '</small>';
                
                // Helpful counter
                echo '<div class="helpful">';
                echo '<span class="helpful-count">0</span> people found this helpful';
                echo '</div>';
                
                echo '</div>';
            }
            
            echo '</div>';
        } else {
            echo 'No reviews yet. Be the first to review!';
        }
    }

    // Mark a review as helpful
    public function markHelpful($reviewId) {
        $reviews = $this->getReviews();
        
        foreach ($reviews as &$review) {
            if ($review['id'] == $reviewId) {
                $review['helpful']++;
                break;
            }
        }
        
        file_put_contents($this->reviewsFile, serialize($reviews));
    }
}

// Example usage:
if (isset($_POST['submit-review'])) {
    // Validate input
    if (!empty($_POST['name']) && !empty($_POST['email']) && isset($_POST['rating']) && !empty($_POST['comment'])) {
        $review = new Review();
        $review->addReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    }
}

// Display review form
?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <input type="email" name="email" placeholder="Email Address" required><br>
    <select name="rating">
        <option value="5">★ ★ ★ ★ ★</option>
        <option value="4">★ ★ ★ ★</option>
        <option value="3">★ ★ ★</option>
        <option value="2">★ ★</option>
        <option value="1">★</option>
    </select><br>
    <textarea name="comment" placeholder="Your Review" required></textarea><br>
    <input type="submit" name="submit-review" value="Submit Review">
</form>

<?php
$review = new Review();
$review->displayReviews();
?>


<?php
// Function to handle user reviews
function submit_review($user_id, $product_id, $review_text = "", $rating = 0) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "your_database_name";

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection failed
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $rating = mysqli_real_escape_string($conn, $rating);

    // Get current timestamp
    $timestamp = date("Y-m-d H:i:s");

    // SQL query to insert review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating, review_date)
            VALUES ('$user_id', '$product_id', '$review_text', '$rating', '$timestamp')";

    // Execute the query
    if (mysqli_query($conn, $sql)) {
        // Review submitted successfully
        return true;
    } else {
        // Error submitting review
        echo "Error: " . mysqli_error($conn);
        return false;
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];

    if (submit_review($user_id, $product_id, $review_text, $rating)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Sorry, there was an error submitting your review. Please try again.";
    }
}
?>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function addReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Check if user has already reviewed this product
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id");
    $stmt->execute(['user_id' => $user_id, 'product_id' => $product_id]);
    
    if ($stmt->rowCount() > 0) {
        return "You have already reviewed this product!";
    }
    
    // Insert new review
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (:user_id, :product_id, :rating, :comment, NOW())";
    $stmt = $conn->prepare($sql);
    $result = $stmt->execute([
        'user_id' => $user_id,
        'product_id' => $product_id,
        'rating' => $rating,
        'comment' => $comment
    ]);
    
    if ($result) {
        return "Review added successfully!";
    } else {
        return "Error adding review!";
    }
}

// Function to get reviews for a product
function getProductReviews($product_id) {
    global $conn;
    
    // Get all reviews and user details for the given product
    $sql = "SELECT r.*, u.user_name, u.avatar FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = :product_id 
            ORDER BY review_date DESC";
    
    $stmt = $conn->prepare($sql);
    $stmt->execute(['product_id' => $product_id]);
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = :product_id";
    $stmt = $conn->prepare($sql);
    $stmt->execute(['product_id' => $product_id]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    return $result['average_rating'] ?: 0;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $review_result = addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);
    echo $review_result;
}

// Display reviews for a product
$product_id = 1; // Example product ID
$reviews = getProductReviews($product_id);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .review-container {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .user-info {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 15px;
        }
        .stars {
            color: #FFD700;
        }
    </style>
</head>
<body>
    <?php if (!empty($reviews)): ?>
        <h2>Product Reviews (<?php echo count($reviews); ?>)</h2>
        
        <?php foreach ($reviews as $review): 
            $average_rating = getAverageRating($product_id);
        ?>
            <div class="review-container">
                <div class="user-info">
                    <img src="<?php echo $review['avatar']; ?>" alt="User Avatar" class="avatar">
                    <h3><?php echo $review['user_name']; ?></h3>
                </div>
                
                <!-- Display stars -->
                <?php 
                function displayStars($rating) {
                    $full_stars = floor($rating);
                    $has_half_star = ($rating - $full_stars) >= 0.5;
                    
                    echo str_repeat('★', $full_stars);
                    if ($has_half_star) {
                        echo '⯨';
                    }
                }
                
                displayStars($review['rating']);
                ?>
                
                <p><?php echo $review['comment']; ?></p>
                <small>Reviewed on: <?php echo date('F j, Y', strtotime($review['review_date'])); ?></small>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <h2>No reviews available</h2>
    <?php endif; ?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function save_review($name, $email, $rating, $comments, $conn) {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $rating = (int)$rating;
    $comments = mysqli_real_escape_string($conn, $comments);

    // Validate input
    if ($name == "" || $email == "") {
        return "Name and email are required.";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Insert into database
    $timestamp = date('Y-m-d H:i:s');
    $sql = "INSERT INTO reviews (name, email, rating, comments, created_at)
            VALUES ('$name', '$email', '$rating', '$comments', '$timestamp')";

    if (mysqli_query($conn, $sql)) {
        return "Thank you for your review!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

function get_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            display_review($row);
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

function display_review($review) {
    $rating = str_repeat("★", $review['rating']);
    $date = date('jS F Y, g:i a', strtotime($review['created_at']));

    echo "
        <div class='review'>
            <h3>Reviewer: {$review['name']}</h3>
            <p>Email: {$review['email']}</p>
            <p>Rating: $rating</p>
            <p>Comments: {$review['comments']}</p>
            <small>Reviewed on: $date</small>
        </div>";
}

// Process form submission
if (isset($_POST['submit'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comments = $_POST['comments'];

    $result = save_review($name, $email, $rating, $comments, $conn);
    if ($result === "Thank you for your review!") {
        header("Location: index.php?success=1");
        exit();
    } else {
        echo "<div class='error'>$result</div>";
    }
}

// Display all reviews
get_reviews($conn);

mysqli_close($conn);
?>


<?php
// Initialize reviews array if it doesn't exist
if (!isset($_SESSION)) {
    session_start();
}
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    $name = htmlspecialchars(trim($_POST['review_name']));
    $reviewText = htmlspecialchars(trim($_POST['review_text']));
    
    if ($name !== "" && $reviewText !== "") {
        // Add new review to the reviews array
        $newReview = array(
            'id' => count($_SESSION['reviews']) + 1,
            'name' => $name,
            'text' => $reviewText,
            'timestamp' => date('Y-m-d H:i:s')
        );
        $_SESSION['reviews'][] = $newReview;
    }
}

// Function to display reviews
function displayReviews() {
    global $reviews;
    
    if (empty($_SESSION['reviews'])) {
        echo "<p>No reviews yet.</p>";
    } else {
        foreach ($_SESSION['reviews'] as $review) {
            echo "<div class='review'>";
            echo "<h4>Review by " . $review['name'] . "</h4>";
            echo "<p>" . $review['text'] . "</p>";
            echo "<small>Posted on " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        h4 {
            color: #333;
            font-size: 16px;
        }
        small {
            color: #666;
        }
    </style>
</head>
<body>
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="review_name">Name:</label><br>
        <input type="text" id="review_name" name="review_name" required><br>
        
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea><br>
        
        <input type="submit" name="submit_review" value="Submit Review">
    </form>

    <h2>Reviews</h2>
    <?php displayReviews(); ?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to insert a review into the database
function insertReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date) 
            VALUES ($userId, $productId, $rating, '$comment', NOW())";
            
    if ($conn->query($sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to get reviews for a product
function getReviews($productId) {
    global $conn;
    
    // Sanitize input
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get all reviews for the specified product
    $sql = "SELECT r.review_id, u.username, r.rating, 
            r.comment, r.review_date 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = $productId 
            ORDER BY r.review_date DESC";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return "No reviews found for this product.";
    }
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    // Get reviews
    $reviews = getReviews($ productId);
    
    if (is_string($reviews)) {
        echo "<p>" . $reviews . "</p>";
        return;
    }
    
    // Display each review
    while ($row = $reviews->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>Review by: " . $row['username'] . "</h3>";
        echo "<p>" . $row['comment'] . "</p>";
        echo "<div class='rating'>";
        
        // Display stars
        for ($i = 1; $i <= $row['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        
        for ($i = $row['rating'] + 1; $i <= 5; $i++) {
            echo "<span class='star'>☆</span>";
        }
        
        echo "</div>";
        echo "<p>Reviewed on: " . $row['review_date'] . "</p>";
        echo "</div><br>";
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming these values are coming from a form
    $userId = $_SESSION['user_id'];
    $productId = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['review_comment'];
    
    // Insert the review
    $result = insertReview($userId, $productId, $rating, $comment);
    echo $result;
}

// Display reviews for a product
$product_id = 1; // Example product ID
displayReviews($product_id);

$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to submit a user review
function submitReview($userId, $productId, $rating, $comment, $conn) {
    try {
        // Sanitize inputs
        $userId = mysqli_real_escape_string($conn, $userId);
        $productId = mysqli_real_escape_string($conn, $productId);
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, $comment);

        // Check if rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";

        if (!mysqli_query($conn, $sql)) {
            throw new Exception("Error submitting review: " . mysqli_error($conn));
        }

        // Get the ID of the inserted review
        $reviewId = mysqli_insert_id($conn);

        return array(
            'status' => 'success',
            'message' => 'Review submitted successfully',
            'review_id' => $reviewId
        );

    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Function to get product reviews
function getProductReviews($productId, $conn) {
    try {
        // Sanitize input
        $productId = mysqli_real_escape_string($conn, $productId);

        // Get all reviews for the product
        $sql = "SELECT r.review_id, u.username, r.rating, r.comment, r.review_date
                FROM reviews r
                JOIN users u ON r.user_id = u.user_id
                WHERE r.product_id = '$productId'
                ORDER BY r.review_date DESC";

        $result = mysqli_query($conn, $sql);

        if (!$result) {
            throw new Exception("Error retrieving reviews: " . mysqli_error($conn));
        }

        // Convert result to array of reviews
        $reviews = array();
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }

        return array(
            'status' => 'success',
            'data' => $reviews
        );

    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Function to calculate average rating
function getAverageRating($productId, $conn) {
    try {
        // Sanitize input
        $productId = mysqli_real_escape_string($conn, $productId);

        // Calculate average rating
        $sql = "SELECT AVG(rating) as average_rating
                FROM reviews
                WHERE product_id = '$productId'";

        $result = mysqli_query($conn, $sql);

        if (!$result) {
            throw new Exception("Error calculating average rating: " . mysqli_error($conn));
        }

        $row = mysqli_fetch_assoc($result);
        $averageRating = $row['average_rating'] ?: 0;

        return array(
            'status' => 'success',
            'data' => $averageRating
        );

    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Submit review example
    $result = submitReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment'], $conn);
    print_r($result);
} else {
    // Get reviews and average rating example
    $productId = 1; // Replace with actual product ID

    $reviewsResult = getProductReviews($productId, $conn);
    $averageRatingResult = getAverageRating($productId, $conn);

    echo "Reviews:<br>";
    print_r($reviewsResult);
    
    echo "<br>Average Rating:<br>";
    print_r($averageRatingResult);
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = filter_var(trim($_POST['email']), FILTER_VALIDATE_EMAIL);
    $rating = (int)trim($_POST['rating']);
    $review_text = htmlspecialchars(trim($_POST['review_text']));

    if ($name && $email && $rating && $review_text) {
        // Insert review into database
        try {
            $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, review_text, created_at) VALUES (?, ?, ?, ?, NOW())");
            $stmt->execute([$name, $email, $rating, $review_text]);

            echo "<p class='success'>Thank you for your review!</p>";
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    } else {
        echo "<p class='error'>Please fill in all required fields.</p>";
    }
}

// Display existing reviews
try {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY created_at DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    die("Error: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; }
        .review-form { margin-bottom: 30px; }
        .success, .error { color: #fff; padding: 10px; border-radius: 5px; display: block; margin-bottom: 20px; }
        .success { background-color: #4CAF50; }
        .error { background-color: #f44336; }
        .review-item { border-bottom: 1px solid #ddd; padding: 15px 0; }
        .rating-stars span { color: #ffd700; }
    </style>
</head>
<body>

<h2>Leave a Review</h2>
<div class="review-form">
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Select rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select>
        </div>

        <div>
            <label for="review_text">Review:</label><br>
            <textarea id="review_text" name="review_text" rows="4" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>
</div>

<h2>Reviews</h2>
<?php foreach ($reviews as $review): ?>
<div class="review-item">
    <div><strong><?php echo htmlspecialchars($review['user_name']); ?></strong> - <?php echo substr($review['user_email'], 0, strpos($review['user_email'], '@')) . '@...'; ?></div>
    <div class="rating-stars">
        <?php 
        $stars = str_repeat("<span>&#9733;</span>", (int)$review['rating']);
        echo $stars; 
        ?>
    </div>
    <div><?php echo htmlspecialchars($review['review_text']); ?></div>
    <div>Posted on: <?php echo date('M j, Y g:i a', strtotime($review['created_at'])); ?></div>
</div>
<?php endforeach; ?>

</body>
</html>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Process review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validate input
    if ($name == "" || $comment == "") {
        echo "Please fill in all required fields!";
    } elseif ($rating < 1 || $rating > 5) {
        echo "Rating must be between 1 and 5!";
    } else {
        // Insert into database
        $sql = "INSERT INTO reviews (user_name, rating, comment, review_date)
                VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
        
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "sii", $name, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Thank you for your review!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Display reviews
$sql = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
        echo get_stars_html($row['rating']);
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "<small>Posted on: " . format_date($row['review_date']) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet!";
}

// Helper function for stars
function get_stars_html($rating) {
    $html = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $html .= "<span class='star'>★</span>";
        } else {
            $html .= "<span class='star'>☆</span>";
        }
    }
    return $html;
}

// Helper function for date formatting
function format_date($date_str) {
    $date = new DateTime($date_str);
    return $date->format('F j, Y g:i a');
}

mysqli_close($conn);
?>

<!-- HTML Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <select name="rating" required>
        <option value="">Rating</option>
        <option value="5">★ ★ ★ ★ ★</option>
        <option value="4">★ ★ ★ ★</option>
        <option value="3">★ ★ ★</option>
        <option value="2">★ ★</option>
        <option value="1">★</option>
    </select><br>
    <textarea name="comment" placeholder="Your Review" required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<style>
.review {
    margin: 20px;
    padding: 15px;
    border: 1px solid #ddd;
    background-color: #f9f9f9;
}

.star {
    color: orange;
    font-size: 24px;
}
</style>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

// Function to handle user reviews
function user_review($action = '', $admin = false) {
    global $mysqli;
    
    // Create table if not exists
    $sql = "CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        review TEXT,
        date DATETIME
    )";
    $mysqli->query($sql);

    switch ($action) {
        case 'add':
            // Add a new review
            if (isset($_POST['name']) && isset($_POST['review'])) {
                $name = mysqli_real_escape_string($mysqli, $_POST['name']);
                $review = mysqli_real_escape_string($mysqli, $_POST['review']);
                
                $stmt = $mysqli->prepare("INSERT INTO reviews (name, review, date) VALUES (?, ?, NOW())");
                $stmt->bind_param("ss", $name, $review);
                $stmt->execute();
                $stmt->close();

                header("Location: ?added=1");
                exit;
            }
            break;

        case 'delete':
            // Delete a review (admin only)
            if ($admin && isset($_GET['delete_id'])) {
                $id = mysqli_real_escape_string($mysqli, $_GET['delete_id']);
                
                $stmt = $mysqli->prepare("DELETE FROM reviews WHERE id = ?");
                $stmt->bind_param("i", $id);
                $stmt->execute();
                $stmt->close();

                header("Location: ?deleted=1");
                exit;
            }
            break;

        default:
            // Display all reviews
            $sql = "SELECT * FROM reviews ORDER BY date DESC";
            $result = $mysqli->query($sql);

            if ($result) {
                while ($row = mysqli_fetch_assoc($result)) {
                    echo "<div class='review'>";
                    echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
                    echo "<p>" . htmlspecialchars($row['review']) . "</p>";
                    echo "<small>" . date('F j, Y g:i a', strtotime($row['date'])) . "</small>";
                    
                    // Show delete button if admin
                    if ($admin) {
                        echo "<a href='?action=delete&delete_id=" . $row['id'] . "' class='delete-btn'>Delete</a>";
                    }
                    
                    echo "</div>";
                }
                mysqli_free_result($result);
            }
    }
}

// Display review form and styling
echo <<< EOT
<style>
.review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
}
.delete-btn {
    color: red;
    text-decoration: none;
}
</style>

EOT;

if (isset($_GET['added'])) {
    echo "<p>Review added successfully!</p>";
} elseif (isset($_GET['deleted'])) {
    echo "<p>Review deleted successfully!</p>";
}

// Display review form
echo <<< EOT
<form action="?action=add" method="post">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <textarea name="review" placeholder="Write your review..." required></textarea><br>
    <button type="submit">Submit Review</button>
</form>

EOT;

// Display all reviews
user_review('', $admin = false); // Set admin to true if user is logged in as admin

?>


user_review();


user_review('add');


user_review('delete', true);


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Get form data
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        // Sanitize input
        $rating = intval($rating);
        $comment = htmlspecialchars(strip_tags($comment));
        
        // Validate input
        if ($rating < 1 || $rating > 5) {
            echo "Invalid rating. Please select a rating between 1 and 5.";
            return;
        }
        
        if (empty($comment)) {
            echo "Please enter your review comment.";
            return;
        }
        
        // Insert into database
        $sql = "INSERT INTO reviews (rating, comment) VALUES (?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("is", $rating, $comment);
        
        if ($stmt->execute()) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT rating, comment, DATE_FORMAT(date_added, '%M %d, %Y') as date FROM reviews";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while($row = $result->fetch_assoc()) {
            // Display rating stars
            $stars = str_repeat("★", $row['rating']);
            
            // Display review content
            echo "<div class='review'>";
            echo "<p class='rating'>$stars</p>";
            echo "<p class='comment'>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<p class='date'>" . $row['date'] . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "No reviews available yet.";
    }
}

// Close database connection
$conn->close();
?>



<?php displayReviews(); ?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review System</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .review-form {
            margin-bottom: 30px;
        }

        .review-box {
            background-color: #f9f9f9;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 5px;
        }

        .rating-stars {
            font-size: 24px;
            color: gold;
        }
    </style>
</head>
<body>

<?php
session_start();

// Initialize reviews array if it doesn't exist
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = trim($_POST['comment']);

    if (empty($name) || empty($email) || empty($comment)) {
        echo "<div style='color: red; margin-bottom: 20px;'>All fields are required!</div>";
    } else {
        // Create a new review array
        $new_review = array(
            'id' => count($_SESSION['reviews']) + 1,
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => time()
        );

        // Add the new review to the array
        $_SESSION['reviews'][] = $new_review;

        // Redirect back to the same page to show updated reviews
        header("Location: " . $_SERVER["PHP_SELF"]);
        exit();
    }
}

// Display all reviews
function display_reviews() {
    global $rating;
    if (!isset($_SESSION['reviews']) || empty($_SESSION['reviews'])) {
        echo "<p>No reviews yet. Be the first to review!</p>";
    } else {
        foreach ($_SESSION['reviews'] as $review) {
            $timestamp = date('F j, Y g:i a', $review['timestamp']);
            $time_ago = time_ago($review['timestamp']);

            echo "<div class='review-box'>";
            echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
            echo "<p><strong>Email:</strong> " . htmlspecialchars($review['email']) . "</p>";
            echo "<div class='rating-stars'>";
            for ($i = 1; $i <= $review['rating']; $i++) {
                echo "★";
            }
            for ($i = 1; $i <= (5 - $review['rating']); $i++) {
                echo "☆";
            }
            echo "</div>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Reviewed on $timestamp ($time_ago)</small>";
            echo "</div>";
        }
    }
}

// Helper function to display time since review was posted
function time_ago($timestamp) {
    $current_time = time();
    $difference = $current_time - $timestamp;

    if ($difference < 60) {
        return "Just now";
    } elseif ($difference < 3600) {
        return floor($difference / 60) . " minutes ago";
    } elseif ($difference < 86400) {
        return floor($difference / 3600) . " hours ago";
    } else {
        return floor($difference / 86400) . " days ago";
    }
}
?>

<div class="review-container">
    <h1>Product Review</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form method="POST" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5" selected>5 Stars</option>
            </select><br><br>

            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea><br><br>

            <input type="submit" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <?php display_reviews(); ?>
</div>

</body>
</html>


<?php
$reviewsFile = 'reviews.json';

// Function to handle and display reviews
function userReview($reviewsFile) {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = htmlspecialchars($_POST['username']);
        $comment = htmlspecialchars($_POST['comment']);
        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;

        // Validate rating between 1 and 5
        if ($rating < 1 || $rating > 5) {
            $rating = 0; // Handle invalid ratings as needed
        }

        // Review data
        $review = array(
            'username' => $username,
            'comment' => $comment,
            'rating' => $rating,
            'date' => date('Y-m-d H:i:s')
        );

        // Load existing reviews or initialize an empty array
        if (file_exists($reviewsFile)) {
            $reviews = json_decode(file_get_contents($reviewsFile), true);
        } else {
            $reviews = array();
        }

        // Add new review
        array_push($reviews, $review);

        // Save back to file
        $jsonContent = json_encode($reviews, JSON_PRETTY_PRINT);
        file_put_contents($reviewsFile, $jsonContent);
    }

    // Load reviews for display
    if (file_exists($reviewsFile)) {
        $reviews = json_decode(file_get_contents($reviewsFile), true);
    } else {
        $reviews = array();
    }

    // Calculate average rating
    $averageRating = 0;
    $totalRatings = 0;

    foreach ($reviews as $review) {
        $totalRatings += $review['rating'];
    }

    if (count($reviews) > 0) {
        $averageRating = $totalRatings / count($reviews);
    } else {
        $averageRating = 0;
    }

    // Display average rating
    echo "<h3>Rating: " . number_format($averageRating, 1) . "/5</h3>";

    // Display each review
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . $review['username'] . "</h4>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['date'] . "</small>";
        echo "</div>";
    }
}

// Call the function
userReview($reviewsFile);
?>


<?php
// Database connection parameters
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }
    
    if (empty($comment)) {
        throw new Exception("Comment cannot be empty");
    }

    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";

    if (!mysqli_query($conn, $sql)) {
        throw new Exception("Error adding review: " . mysqli_error($conn));
    }

    return true;
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;

    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = '$product_id' 
            ORDER BY r.review_date DESC";

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        throw new Exception("Error fetching reviews: " . mysqli_error($conn));
    }

    return $result;
}

// Function to calculate average rating for a product
function get_average_rating($product_id) {
    global $conn;

    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Calculate average rating
    $sql = "SELECT AVG(rating) as average 
            FROM reviews 
            WHERE product_id = '$product_id'";

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        throw new Exception("Error calculating average rating: " . mysqli_error($conn));
    }

    $row = mysqli_fetch_assoc($result);
    return round($row['average'], 1); // Round to one decimal place
}

// Example usage:

try {
    // Add a review
    add_review(1, 101, 4, "Great product!");

    // Get reviews for product ID 101
    $reviews = get_reviews(101);
    
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo "User: " . $row['username'] . "<br>";
        echo "Rating: " . $row['rating'] . "/5<br>";
        echo "Comment: " . $row['comment'] . "<br>";
        echo "Date: " . $row['review_date'] . "<br><br>";
    }

    // Get average rating for product ID 101
    $average_rating = get_average_rating(101);
    echo "Average Rating: " . $average_rating . "/5";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
mysqli_close($conn);
?>


<?php
class ReviewSystem {
    private $dbHost = 'localhost';
    private $dbName = 'reviews_db';
    private $dbUser = 'root';
    private $dbPass = '';

    private $connection;

    public function __construct() {
        $this->connectDB();
    }

    // Database connection
    private function connectDB() {
        try {
            $this->connection = new mysqli($this->dbHost, $this->dbUser, $this->dbPass, $this->dbName);
        } catch (mysqli_sql_exception $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }

    // Get all reviews
    public function getReviews() {
        $reviews = array();
        
        if ($result = $this->connection->query("SELECT * FROM reviews ORDER BY review_date DESC")) {
            while ($row = $result->fetch_assoc()) {
                $reviews[] = array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'rating' => $row['rating'],
                    'content' => $row['content'],
                    'date' => date('Y-m-d H:i:s', strtotime($row['review_date']))
                );
            }
            $result->close();
        }

        return $reviews;
    }

    // Add new review
    public function addReview($name, $rating, $content) {
        if (empty($name)) {
            return "Name is required!";
        }
        if (!isset($rating) || $rating < 1 || $rating > 5) {
            return "Please select a valid rating!";
        }
        if (empty($content)) {
            return "Review content cannot be empty!";
        }

        try {
            $stmt = $this->connection->prepare("INSERT INTO reviews (name, rating, content, review_date) VALUES (?, ?, ?, NOW())");
            $stmt->bind_param("sii", $name, $rating, $content);
            if ($stmt->execute()) {
                return "Review added successfully!";
            }
            return "Error adding review!";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        } finally {
            $stmt->close();
        }
    }

    // Display reviews
    public function displayReviews() {
        $reviews = $this->getReviews();

        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
                echo "<div class='rating'>" . $this->getStars($review['rating']) . "</div>";
                echo "<p>" . nl2br(htmlspecialchars($review['content'])) . "</p>";
                echo "<small>Posted on: " . $review['date'] . "</small>";
                echo "</div><hr>";
            }
        } else {
            echo "No reviews yet!";
        }
    }

    // Helper function to display stars
    private function getStars($rating) {
        $stars = '';
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                $stars .= "<span class='star'>★</span>";
            } else {
                $stars .= "<span class='star'>☆</span>";
            }
        }
        return $stars;
    }

    // Close database connection
    public function __destruct() {
        if ($this->connection != null) {
            $this->connection->close();
        }
    }
}

// Usage example:
$reviewSystem = new ReviewSystem();

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = $reviewSystem->addReview($_POST['name'], $_POST['rating'], $_POST['content']);
    echo "<script>alert('{$result}');</script>";
}

$reviewSystem->displayReviews();
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submit_review($name, $email, $rating, $comments) {
    global $conn;
    
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags(trim($name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $rating = intval($rating);
    $comments = htmlspecialchars(strip_tags(trim($comments)));
    
    if(empty($name) || empty($email) || empty($rating)) {
        return "Please fill in all required fields.";
    }
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comments, review_date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->execute([$name, $email, $rating, $comments]);
        
        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    try {
        // Retrieve reviews from the database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        
        // Check if any reviews exist
        if($stmt->rowCount() == 0) {
            return "No reviews available.";
        }
        
        // Display each review
        $output = "<div class='reviews'>";
        foreach($stmt as $row) {
            $output .= "<div class='review'>";
            $output .= "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            $output .= "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            $output .= "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            $output .= "<p>Comments: " . htmlspecialchars($row['comments']) . "</p>";
            $output .= "<small>" . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            $output .= "</div>";
        }
        $output .= "</div>";
        
        return $output;
    } catch(PDOException $e) {
        return "Error displaying reviews: " . $e->getMessage();
    }
}
?>


<?php include('display_reviews.php') ?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
        h3 {
            color: #333;
            font-size: 18px;
        }
        p {
            color: #666;
            line-height: 1.5;
        }
        small {
            color: #999;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <?php echo display_reviews() ?>
</body>
</html>


<?php
include('database.php');

if(isset($_POST['name']) && isset($_POST['email']) && isset($_POST['rating'])) {
    $result = submit_review($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comments']);
    echo $result;
} else {
    echo "Invalid request.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Assuming user authentication is handled elsewhere
    session_start();
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['error' => 'Please log in to submit a review.']));
    }

    $productId = 1; // Replace with actual product ID handling
    $userId = $_SESSION['user_id'];
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars($_POST['comment'], ENT_QUOTES);

    if ($rating < 1 || $rating > 5) {
        die(json_encode(['error' => 'Please select a valid rating.']));
    }

    // Insert review
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->execute([$productId, $userId, $rating, $comment]);

    // Generate response HTML
    $response = "<div class='review'>";
    $response .= "<div class='stars'>";
    for ($i = 1; $i <= $rating; $i++) {
        $response .= "<span class='star'>★</span>";
    }
    $response .= str_repeat("<span class='star' style='color: #cccccc;'>★</span>", 5 - $rating);
    $response .= "</div>";
    $response .= "<p>".$comment."</p>";
    $response .= "<small>Posted by User ".date('F j, Y')."</small>";
    $response .= "</div>";

    echo json_encode(['success' => true, 'html' => $response]);

} catch(PDOException $e) {
    die(json_encode(['error' => 'Error submitting review: '.$e->getMessage()]));
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Replace with actual product ID
    $productId = 1;

    // Fetch reviews
    $stmt = $conn->query("SELECT * FROM reviews WHERE product_id = $productId ORDER BY created_at DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    if (empty($reviews)) {
        echo '<p>No reviews available yet.</p>';
        exit;
    }

    foreach ($reviews as $review) {
        $response .= "<div class='review'>";
        $response .= "<div class='stars'>";
        for ($i = 1; $i <= $review['rating']; $i++) {
            $response .= "<span class='star'>★</span>";
        }
        $response .= str_repeat("<span class='star' style='color: #cccccc;'>★</span>", 5 - $review['rating']);
        $response .= "</div>";
        $response .= "<p>".$review['comment']."</p>";
        $response .= "<small>Posted by User ".date('F j, Y', strtotime($review['created_at']))."</small>";
        $response .= "</div>";
    }

    echo $response;

} catch(PDOException $e) {
    die('Error loading reviews: '.$e->getMessage());
}
?>


// In your login script:
session_start();
$_SESSION['user_id'] = $userId;


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to add a new review
function submitReview($productId, $userId, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars(trim($comment)));
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return 'Invalid rating. Please choose a rating between 1 and 5.';
    }
    if (empty($comment)) {
        return 'Comment cannot be empty.';
    }
    
    // Get current timestamp
    $timestamp = time();
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, timestamp) 
            VALUES (?, ?, ?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "iisss", $productId, $userId, $rating, $comment, $timestamp);
        if (mysqli_stmt_execute($stmt)) {
            return 'Review submitted successfully!';
        } else {
            return 'Error submitting review: ' . mysqli_error($conn);
        }
    } else {
        return 'Error preparing statement: ' . mysqli_error($conn);
    }
}

// Function to display reviews for a product
function getReviews($productId) {
    global $conn;
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $productId);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo '<div class="review">';
            echo '<h3>Rating: ' . str_repeat('★', $row['rating']) . '</h3>';
            echo '<p>' . htmlspecialchars($row['comment'], ENT_QUOTES) . '</p>';
            echo '<small>Posted on: ' . date('F j, Y, g:i a', $row['timestamp']) . '</small>';
            echo '</div>';
        }
    } else {
        return 'Error preparing statement: ' . mysqli_error($conn);
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming you have user authentication
    $productId = intval($_GET['product_id']);
    $userId = $_SESSION['user_id'];
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = $_POST['comment'];
    
    $result = submitReview($productId, $userId, $rating, $comment);
    echo $result;
}

// Display reviews for product ID 1
getReviews(1);

// Close database connection
mysqli_close($conn);
?>


<?php
function submit_review($user_id, $product_id, $rating, $comments) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Create a new database connection
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to insert review into the reviews table
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comments)
            VALUES (?, ?, ?, ?)";

    // Prepare the statement
    $stmt = mysqli_prepare($conn, $sql);

    // Bind parameters to the statement
    mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $rating, $comments);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        // Close the statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return true; // Review submitted successfully
    } else {
        // Close the statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return false; // Error submitting review
    }
}
?>


// Example usage:
$user_id = 1;
$product_id = 101;
$rating = 5;
$comments = "Great product! Highly recommended.";

if (submit_review($user_id, $product_id, $rating, $comments)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}


<?php
// Connect to database (replace with your own credentials)
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function submitReview($name, $rating, $comment, $conn) {
    // Sanitize input
    $name = htmlspecialchars(strip_tags(trim($name)));
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    
    // Check if inputs are valid
    if ($name == "" || $comment == "") {
        return "Please fill in all required fields.";
    }
    
    // Insert review into database
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, rating, comment, date) VALUES (?, ?, ?, NOW())");
    mysqli_stmt_bind_param($stmt, "sis", $name, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Retrieve reviews from database
    $result = mysqli_query($conn, "SELECT * FROM reviews ORDER BY date DESC");
    
    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['date'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
        
        // Calculate and display average rating
        $average_rating = mysqli_query($conn, "SELECT AVG(rating) AS avg FROM reviews");
        $avg_row = mysqli_fetch_assoc($average_rating);
        echo "<p class='average-rating'>Average Rating: " . number_format($avg_row['avg'], 1) . "/5</p>";
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
require_once 'review_functions.php';

// Get form data
$name = $_POST['name'];
$rating = $_POST['rating'];
$comment = $_POST['comment'];

// Submit review
$conn = mysqli_connect($host, $username, $password, $database);
$result = submitReview($name, $rating, $comment, $conn);

echo $result;

?>


<?php
require_once 'review_functions.php';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Display all reviews
displayReviews($conn);

// Close connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($productId, $userName, $userEmail, $rating, $reviewText) {
    global $conn;
    
    // Sanitize input data
    $userName = htmlspecialchars(strip_tags(trim($userName)));
    $userEmail = htmlspecialchars(strip_tags(trim($userEmail)));
    $reviewText = htmlspecialchars(strip_tags(trim($reviewText)));
    
    try {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, review_text) 
                              VALUES (:productId, :userName, :userEmail, :rating, :reviewText)");
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':userName', $userName);
        $stmt->bindParam(':userEmail', $userEmail);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':reviewText', $reviewText);
        
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to get reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = :productId ORDER BY timestamp DESC");
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to display review form
function displayReviewForm($productId) {
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
    
    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
    </div>

    <div class="form-group">
        <label for="rating">Rating:</label>
        <select id="rating" name="rating" required>
            <option value="">Choose a rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
    </div>

    <div class="form-group">
        <label for="review">Review:</label>
        <textarea id="review" name="review" rows="5" required></textarea>
    </div>

    <button type="submit" name="submit_review">Submit Review</button>
</form>
<?php
}

// Function to display reviews
function displayReviews($productId) {
    $reviews = getReviews($productId);
    
    if ($reviews !== false && count($reviews) > 0) {
        echo "<div class='reviews'>";
        foreach ($reviews as $review) {
            $ratingStars = str_repeat("★", $review['rating']);
            $ratingStars .= str_repeat("☆", 5 - $review['rating']);
            
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<span class='user-name'>" . $review['user_name'] . "</span>";
                    echo "<div class='rating'>$ratingStars</div>";
                    echo "<small class='timestamp'>" . date('F j, Y g:i a', strtotime($review['timestamp'])) . "</small>";
                echo "</div>";
                echo "<p class='review-text'>" . $review['review_text'] . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
}

// Process submitted review
if (isset($_POST['submit_review'])) {
    $productId = $_POST['product_id'];
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $reviewText = $_POST['review'];

    if (submitReview($productId, $name, $email, $rating, $reviewText)) {
        echo "<div class='success-message'>Thank you for your review!</div>";
    } else {
        echo "<div class='error-message'>Error submitting review. Please try again.</div>";
    }
}

// Display review form and reviews
?>



<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($user_name, $email, $review_text, $rating, $conn) {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $email = mysqli_real_escape_string($conn, $email);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    
    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_name, email, review_text, rating, submission_date) 
            VALUES ('$user_name', '$email', '$review_text', $rating, NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews found.</p>";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and process input
    $user_name = $_POST['name'];
    $email = $_POST['email'];
    $review_text = $_POST['review'];
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    
    if ($rating < 1 || $rating > 5) {
        echo "Please select a valid rating (1-5 stars).";
    } else {
        addReview($user_name, $email, $review_text, $rating, $conn);
    }
}

// Display review form
echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
echo "<div>";
echo "<label for='name'>Name:</label><br>";
echo "<input type='text' id='name' name='name' required><br>";
echo "</div>";

echo "<div>";
echo "<label for='email'>Email:</label><br>";
echo "<input type='email' id='email' name='email' required><br>";
echo "</div>";

echo "<div>";
echo "<label for='review'>Review:</label><br>";
echo "<textarea id='review' name='review' rows='5' cols='40' required></textarea><br>";
echo "</div>";

echo "<div>";
echo "<label>Rating:</label><br>";
for ($i = 1; $i <= 5; $i++) {
    echo "<input type='radio' name='rating' value='$i'> $i stars<br>";
}
echo "</div>";

echo "<input type='submit' value='Submit Review'>";
echo "</form>";

// Display existing reviews
displayReviews($conn);

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

function display_review_form() {
    // Initialize reviews array if not set
    if (!isset($_SESSION['reviews'])) {
        $_SESSION['reviews'] = array();
    }
    
    // Check if form was submitted
    $submitted = isset($_POST['submit']);
    $errors = array();
    $success_message = '';
    
    if ($submitted) {
        // Validate input
        $name = trim($_POST['name']);
        $rating = $_POST['rating'];
        $comment = trim($_POST['comment']);
        
        if (empty($name)) {
            $errors[] = "Please enter your name.";
        } elseif (strlen($name) < 2) {
            $errors[] = "Name must be at least 2 characters long.";
        }
        
        if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
            $errors[] = "Please select a rating between 1 and 5 stars.";
        }
        
        if (empty($comment)) {
            $errors[] = "Please enter your comment.";
        } elseif (strlen($comment) < 5) {
            $errors[] = "Comment must be at least 5 characters long.";
        }
        
        // If no errors, process the review
        if (empty($errors)) {
            $review_id = count($_SESSION['reviews']) + 1;
            $timestamp = date('Y-m-d H:i:s');
            
            $new_review = array(
                'id' => $review_id,
                'name' => $name,
                'rating' => $rating,
                'comment' => $comment,
                'timestamp' => $timestamp
            );
            
            $_SESSION['reviews'][] = $new_review;
            $success_message = "Thank you for submitting your review!";
        }
    }
    
    // Display the form and reviews
    ?>
    <html>
    <head>
        <title>Product Review</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
            }
            .review-form {
                background-color: #f5f5f5;
                padding: 20px;
                border-radius: 5px;
                margin-bottom: 20px;
            }
            .review-list {
                margin-top: 20px;
            }
            .review-item {
                margin-bottom: 15px;
                padding: 15px;
                background-color: #fff;
                border: 1px solid #ddd;
                border-radius: 3px;
            }
        </style>
    </head>
    <body>
        <h1>Product Review</h1>
        
        <?php if ($submitted && empty($errors)): ?>
            <div style="color: green; margin-bottom: 10px;">
                <?php echo $success_message; ?>
            </div>
        <?php endif; ?>
        
        <?php if (!empty($errors)): ?>
            <div style="color: red; margin-bottom: 10px;">
                <?php foreach ($errors as $error): ?>
                    <p><?php echo htmlspecialchars($error); ?></p>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
        
        <div class="review-form">
            <h2>Submit a Review</h2>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <div style="margin-bottom: 10px;">
                    <label for="name">Name:</label><br>
                    <input type="text" id="name" name="name" value="<?php echo htmlspecialchars($name ?? ''); ?>" required>
                </div>
                
                <div style="margin-bottom: 10px;">
                    <label for="rating">Rating:</label><br>
                    <select id="rating" name="rating">
                        <?php for ($i = 1; $i <= 5; $i++): ?>
                            <option value="<?php echo $i; ?>" <?php if (isset($rating) && $rating == $i) { echo 'selected'; } ?>>
                                <?php echo $i; ?> Star<?php echo ($i != 1) ? 's' : ''; ?>
                            </option>
                        <?php endfor; ?>
                    </select>
                </div>
                
                <div style="margin-bottom: 10px;">
                    <label for="comment">Comment:</label><br>
                    <textarea id="comment" name="comment" rows="5"><?php echo htmlspecialchars($comment ?? ''); ?></textarea>
                </div>
                
                <button type="submit" name="submit">Submit Review</button>
            </form>
        </div>

        <?php if (!empty($_SESSION['reviews'])): ?>
            <div class="review-list">
                <h2>Customer Reviews</h2>
                <?php foreach ($_SESSION['reviews'] as $review): ?>
                    <div class="review-item">
                        <div style="margin-bottom: 5px;">
                            <strong><?php echo htmlspecialchars($review['name']); ?></strong><br>
                            <?php
                                // Display stars using HTML entities
                                for ($i = 1; $i <= $review['rating']; $i++) {
                                    echo "★ ";
                                }
                                for ($i = $review['rating'] + 1; $i <=5; $i++) {
                                    echo "☆ ";
                                }
                            ?>
                        </div>
                        <p><?php echo htmlspecialchars($review['comment']); ?></p>
                        <small style="color: #666;">
                            Posted on <?php echo date('F j, Y', strtotime($review['timestamp'])); ?>
                        </small>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </body>
    </html>
    <?php
}

// Call the function to display the form and reviews
display_review_form();
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($name, $email, $review_text, $rating) {
    global $conn;

    // Validate input fields
    if (empty($name) || empty($email) || empty($review_text)) {
        return 'Please fill in all required fields.';
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return 'Please enter a valid email address.';
    }

    // Sanitize inputs to prevent SQL injection
    $name = htmlspecialchars(strip_tags(trim($name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $review_text = htmlspecialchars(strip_tags(trim($review_text)));

    if ($rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5 stars.';
    }

    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, review_text, rating, created_at) 
                              VALUES (:name, :email, :review_text, :rating, NOW())");
        
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':review_text', $review_text);
        $stmt->bindParam(':rating', $rating);

        $stmt->execute();

        return 'Review submitted successfully!';
    } catch(PDOException $e) {
        return 'Error submitting review: ' . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;

    try {
        // Fetch all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY created_at DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($reviews)) {
            echo '<p>No reviews available.</p>';
            return;
        }

        // Display each review
        foreach ($reviews as $review) {
            echo '<div class="review">';
            echo '<h3>' . $review['name'] . '</h3>';
            echo '<p>Rating: ' . str_repeat('★', $review['rating']) . '</p>';
            echo '<p>' . $review['review_text'] . '</p>';
            echo '<small>Posted on: ' . date('F j, Y', strtotime($review['created_at'])) . '</small>';
            echo '</div>';
        }
    } catch(PDOException $e) {
        echo 'Error displaying reviews: ' . $e->getMessage();
    }
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submitReview() {
    global $conn;

    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comments = $_POST['comments'];

    // Validate input
    if (empty($name) || empty($email) || empty($rating)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // SQL injection prevention
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $comments = mysqli_real_escape_string($conn, $comments);

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comments) 
            VALUES ('$name', '$email', '$rating', '$comments')";

    if ($conn->query($sql) === TRUE) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

function displayReviews() {
    global $conn;

    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>Review #" . $row['id'] . "</h3>";
            echo "<p><strong>Name:</strong> " . $row['name'] . "</p>";
            echo "<p><strong>Email:</strong> " . substr($row['email'], 0, -5) . "*****</p>"; // Mask email
            echo "<p><strong>Rating:</strong> " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p><strong>Comments:</strong> " . $row['comments'] . "</p>";
            echo "<p><em>" . $row['date'] . "</em></p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            margin: 10px;
            padding: 15px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }
        h3 {
            color: #333;
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "POST") { 
        submitReview();
    } else { ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select a rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>

            <label for="comments">Comments:</label><br>
            <textarea id="comments" name="comments" required></textarea><br>

            <input type="submit" value="Submit Review">
        </form>
    <?php } ?>

    <h2>Previous Reviews</h2>
    <?php displayReviews(); ?>
</body>
</html>


<?php
function create_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to insert review into the database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

        if ($conn->query($sql) === TRUE) {
            // Return true if review was successfully added
            return true;
        } else {
            // Display error message if insertion failed
            echo "Error: " . $sql . "<br>" . $conn->error;
            return false;
        }

        // Close database connection
        $conn->close();
    } catch (Exception $e) {
        // Handle any exceptions and display an error message
        echo "An error occurred while submitting your review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
$user_id = 1;     // Replace with actual user ID
$product_id = 5;   // Replace with actual product ID
$rating = 4;       // Rating between 1 and 5 stars
$comment = "This is a great product!"; 

if (create_user_review($user_id, $product_id, $rating, $comment)) {
    echo "Thank you for your review!";
} else {
    echo "Sorry, there was an error submitting your review.";
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
    // Validate and sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = (int) $_POST['rating'];
    $comments = htmlspecialchars(trim($_POST['comments']));

    if (empty($name) || empty($comments)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Insert review into the database
    $stmt = $pdo->prepare('INSERT INTO reviews (name, email, rating, comments, created_at) VALUES (?, ?, ?, ?, NOW())');
    $stmt->execute([$name, $email, $rating, $comments]);

    if ($stmt->rowCount() > 0) {
        echo "Thank you for submitting your review!";
    } else {
        die("There was an error submitting your review.");
    }
}

// Display the review form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review-form { max-width: 600px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input, textarea { width: 100%; padding: 8px; margin-top: 5px; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Choose a rating</option>
                    <option value="5">5 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="2">2 Stars</option>
                    <option value="1">1 Star</option>
                </select>
            </div>

            <div class="form-group">
                <label for="comments">Comments:</label><br>
                <textarea id="comments" name="comments" rows="5" required></textarea>
            </div>

            <button type="submit" name="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display existing reviews -->
    <?php
    $reviewsStmt = $pdo->query('SELECT * FROM reviews ORDER BY created_at DESC');
    while ($review = $reviewsStmt->fetch(PDO::FETCH_ASSOC)) {
        echo "<div style='margin: 20px auto; padding: 15px; border: 1px solid #ddd;'>";
        echo "<h3>{$review['name']}</h3>";
        echo "<p>Rating: {$review['rating']} stars</p>";
        echo "<p>Comments: {$review['comments']}</p>";
        echo "<small>Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "</small>";
        echo "</div>";
    }
    ?>
</body>
</html>


<?php
// Function to display user reviews
function display_reviews($product_id) {
    // Connect to database
    $connection = mysqli_connect("localhost", "username", "password", "database");
    
    // Check connection
    if(mysqli_connect_errno()) {
        echo "Failed to connect: " . mysqli_connect_error();
        return;
    }
    
    // Get reviews from database
    $query = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($connection, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    // Display reviews
    while($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='review-author'>" . htmlspecialchars($row['author'], ENT_QUOTES) . "</span>";
        echo "<div class='review-rating'>";
        
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "</div>";
        echo "<p class='review-comment'>" . htmlspecialchars($row['comment'], ENT_QUOTES) . "</p>";
        echo "<div class='review-date'>" . date('F j, Y', strtotime($row['review_date'])) . "</div>";
        echo "</div>";
    }
    
    // Close database connection
    mysqli_close($connection);
}

// Function to handle review submission
function submit_review() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $author = trim($_POST['author']);
        $email = trim($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']), ENT_QUOTES);
        
        // Validate inputs
        if ($author == "" || $email == "" || $rating < 1 || $rating > 5) {
            die("Please fill in all required fields.");
        }
        
        // Connect to database
        $connection = mysqli_connect("localhost", "username", "password", "database");
        
        // Check connection
        if(mysqli_connect_errno()) {
            echo "Failed to connect: " . mysqli_connect_error();
            return;
        }
        
        // Prevent SQL injection and XSS attacks
        $author = mysqli_real_escape_string($connection, $author);
        $email = mysqli_real_escape_string($connection, $email);
        $comment = mysqli_real_escape_string($connection, $comment);
        
        // Insert review into database
        $query = "INSERT INTO reviews (product_id, author, email, rating, comment, review_date) VALUES (?, ?, ?, ?, ?, NOW())";
        $stmt = mysqli_prepare($connection, $query);
        mysqli_stmt_bind_param($stmt, "isidi", $product_id, $author, $email, $rating, $comment);
        
        if(mysqli_stmt_execute($stmt)) {
            echo "<div class='success-message'>";
            echo "Thank you for submitting your review!";
            echo "</div>";
        } else {
            echo "<div class='error-message'>";
            echo "Error: Review could not be submitted. Please try again.";
            echo "</div>";
        }
        
        // Close database connection
        mysqli_close($connection);
    }
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create database connection
try {
    $dbh = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to create review table if not exists
function create_review_table($dbh) {
    $sql = "
        CREATE TABLE IF NOT EXISTS reviews (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT NOT NULL,
            rating INT NOT NULL,
            comment TEXT NOT NULL,
            submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS review_stats (
            id INT AUTO_INCREMENT PRIMARY KEY,
            average_rating FLOAT(2,1),
            total_reviews INT
        );
    ";
    
    try {
        $dbh->exec($sql);
    } catch (PDOException $e) {
        echo "Error creating tables: " . $e->getMessage();
    }
}

// Function to submit a review
function submit_review($user_id, $rating, $comment, $dbh, $review_id = null) {
    // Validate inputs
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose between 1 and 5 stars.";
    }
    
    if (strlen(trim($comment)) == 0) {
        return "Comment cannot be empty.";
    }
    
    if (strlen(trim($comment)) > 500) {
        return "Comment is too long. Maximum length is 500 characters.";
    }

    // Check if user has already submitted a review
    $stmt = $dbh->prepare("SELECT id FROM reviews WHERE user_id = ?");
    $stmt->execute([$user_id]);
    
    if ($stmt->rowCount() > 0) {
        return "You have already submitted a review.";
    }

    // Insert new review
    try {
        $sql = "INSERT INTO reviews (user_id, rating, comment) VALUES (?, ?, ?)";
        $stmt = $dbh->prepare($sql);
        $stmt->execute([$user_id, $rating, trim($comment)]);
        
        // Update average rating and total reviews in review_stats table
        $total_reviews = get_total_reviews($dbh);
        $average_rating = get_average_rating($dbh);
        
        if ($total_reviews == 0) {
            $new_average = $rating;
        } else {
            $new_average = ($average_rating * $total_reviews + $rating) / ($total_reviews + 1);
        }
        
        $sql_update = "UPDATE review_stats SET average_rating = ?, total_reviews = ?";
        $stmt_update = $dbh->prepare($sql_update);
        $stmt_update->execute([$new_average, $total_reviews + 1]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to get average rating
function get_average_rating($dbh) {
    try {
        $sql = "SELECT average_rating FROM review_stats ORDER BY id DESC LIMIT 1";
        $stmt = $dbh->query($sql);
        
        if ($stmt->rowCount() == 0) {
            return 0;
        }
        
        return $stmt->fetchColumn();
    } catch (PDOException $e) {
        echo "Error fetching average rating: " . $e->getMessage();
        return 0;
    }
}

// Function to get total reviews
function get_total_reviews($dbh) {
    try {
        $sql = "SELECT total_reviews FROM review_stats ORDER BY id DESC LIMIT 1";
        $stmt = $dbh->query($sql);
        
        if ($stmt->rowCount() == 0) {
            return 0;
        }
        
        return $stmt->fetchColumn();
    } catch (PDOException $e) {
        echo "Error fetching total reviews: " . $e->getMessage();
        return 0;
    }
}

// Function to display all reviews
function display_reviews($dbh) {
    try {
        $sql = "
            SELECT r.*, u.username 
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            ORDER BY submission_date DESC
        ";
        
        $stmt = $dbh->query($sql);
        
        if ($stmt->rowCount() == 0) {
            return "No reviews available.";
        }
        
        $reviews_html = "<div class='reviews'>";
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $reviews_html .= "
                <div class='review'>
                    <h3>Rating: {$row['rating']} stars</h3>
                    <p>{$row['comment']}</p>
                    <small>Submitted by {$row['username']} on " . date('F j, Y', strtotime($row['submission_date'])) . "</small>
                </div>
            ";
        }
        $reviews_html .= "</div>";
        
        return $reviews_html;
    } catch (PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
        return "";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['rating']) && !empty($_POST['comment'])) {
        $result = submit_review($_POST['user_id'], $_POST['rating'], $_POST['comment'], $dbh);
        
        if ($result === true) {
            echo "Review submitted successfully!";
        } else {
            echo $result;
        }
    }
}

// Display average rating and total reviews
echo "<p>Current Average Rating: " . get_average_rating($dbh) . " stars</p>";
echo "<p>Total Reviews: " . get_total_reviews($dbh) . "</p>";

// Display all reviews
echo display_reviews($dbh);
?>


<?php
// Function to submit a new review
function submit_review($user_name, $user_email, $comment) {
    // Set file path (make sure this directory is writable)
    $reviews_file = 'reviews.txt';
    
    // Get current timestamp
    $timestamp = date('Y-m-d H:i:s');
    
    // Create an array of review data
    $review_data = [
        'user_name' => htmlspecialchars($user_name),
        'user_email' => htmlspecialchars($user_email),
        'comment' => htmlspecialchars($comment),
        'timestamp' => $timestamp
    ];
    
    try {
        // Open the file for writing
        $file_handle = fopen($reviews_file, 'a');
        
        // Serialize and write the review data to the file
        fwrite($file_handle, serialize($review_data) . "
");
        
        // Close the file
        fclose($file_handle);
        
        return true;
    } catch (Exception $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function display_reviews() {
    $reviews_file = 'reviews.txt';
    
    if (!file_exists($reviews_file)) {
        return; // File doesn't exist yet
    }
    
    try {
        // Read all lines from the file
        $lines = file($reviews_file, FILE_IGNORE_NEW_LINES);
        
        foreach ($lines as $line) {
            // Unserialize each review
            $review = unserialize($line);
            
            if (is_array($review)) {
                // Display the review
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p><em>Submitted on: " . $review['timestamp'] . "</em></p>";
                echo "<p>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
                echo "</div>";
            }
        }
    } catch (Exception $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}
?>


<?php
// Submit a review when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['user_name']) && !empty($_POST['comment'])) {
        submit_review($_POST['user_name'], $_POST['user_email'], $_POST['comment']);
    }
}

// Display all reviews below the form
display_reviews();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to save review
function saveReview($name, $email, $rating, $comment, $conn) {
    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return false;
    }

    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false;
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return false;
    }

    // Sanitize input
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Insert into database
    $query = "INSERT INTO reviews (name, email, rating, comment, review_date) 
              VALUES (?, ?, ?, ?, NOW())";

    $stmt = $conn->prepare($query);
    $stmt->bind_param("ssds", $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    $query = "SELECT name, rating, comment, review_date FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('Y-m-d H:i', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet.";
    }

    // Calculate and display average rating
    $avgQuery = "SELECT AVG(rating) AS avg_rating FROM reviews";
    $avgResult = $conn->query($avgQuery);
    $row = $avgResult->fetch_assoc();
    
    if ($row['avg_rating'] != null) {
        echo "<div class='average-rating'>";
        echo "Average Rating: " . number_format($row['avg_rating'], 1, '.', '') . "/5";
        echo "</div>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Connect to the database
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Query to fetch all reviews
    $sql = "SELECT * FROM user_reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Review by " . $row['username'] . "</h3>";
            echo "<p>" . $row['review_text'] . "</p>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Posted on: " . $row['review_date'] . "</p>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Function to submit a new review
function submit_review($username, $review_text, $rating) {
    global $conn;
    
    // Validate input
    if (empty($username) || empty($review_text)) {
        return "Please fill in all required fields!";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating! Please choose a rating between 1 and 5.";
    }
    
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    
    // Insert into database
    $sql = "INSERT INTO user_reviews (username, review_text, rating) 
            VALUES ('$username', '$review_text', '$rating')";
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to delete a review
function delete_review($id) {
    global $conn;
    
    // Sanitize input
    $id = mysqli_real_escape_string($conn, $id);
    
    // Delete from database
    $sql = "DELETE FROM user_reviews WHERE id='$id'";
    if (mysqli_query($conn, $sql)) {
        return "Review deleted successfully!";
    } else {
        return "Error deleting review: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(50),
    review_text TEXT,
    rating INT,
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submit_review($user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize inputs
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $review_text = htmlspecialchars(strip_tags(trim($review_text)));
    $rating = intval($rating);
    
    if ($user_name == '' || $review_text == '' || $rating < 1 || $rating > 5) {
        return false;
    }
    
    // Prepare and execute the query
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (user_name, review_text, rating) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($stmt, 'sii', $user_name, $review_text, $rating);
    $result = mysqli_stmt_execute($stmt);
    
    if ($result) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews
function get_reviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'id' => $row['id'],
            'user_name' => $row['user_name'],
            'review_text' => $row['review_text'],
            'rating' => $row['rating'],
            'submission_date' => $row['submission_date']
        );
    }
    
    return $reviews;
}

// Function to display reviews
function display_reviews() {
    $reviews = get_reviews();
    if (empty($reviews)) {
        echo "<p>No reviews yet!</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['user_name'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>" . $review['review_text'] . "</p>";
        echo "<small>" . date('F j, Y', strtotime($review['submission_date'])) . "</small>";
        echo "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
function user_review($connection) {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
        $username = mysqli_real_escape_string($connection, $_POST['username']);
        $comment = mysqli_real_escape_string($connection, $_POST['comment']);

        // Basic validation
        if (empty($username) || empty($comment)) {
            echo "Please fill in all fields!";
            exit();
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (username, comment, date)
                VALUES ('$username', '$comment', NOW())";
        
        if (!mysqli_query($connection, $sql)) {
            die('Error submitting review: ' . mysqli_error($connection));
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews ORDER BY date DESC LIMIT 10";
    $result = mysqli_query($connection, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>Review by " . htmlspecialchars($row['username']) . "</h4>";
            echo "<p>" . nl2br(htmlspecialchars($row['comment'])) . "</p>";
            echo "<small>Posted on: " . $row['date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }

    // Show review submission form
    echo '<form method="post" action="">
          <input type="text" name="username" placeholder="Your Name">
          <textarea name="comment" rows="5" placeholder="Write your review..."></textarea>
          <button type="submit" name="submit">Submit Review</button>
          </form>';
}
?>


$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}


<?php
function submit_review($user_id, $review_text, $rating) {
    // Validate inputs
    if (empty($user_id) || !is_numeric($user_id)) {
        return "Error: User ID is invalid.";
    }
    
    if (empty($review_text) || !is_string(trim($review_text))) {
        return "Error: Review text cannot be empty.";
    }
    
    if (!isset($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }
    
    // Database connection
    try {
        $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Prepare the SQL statement
        $sql = "INSERT INTO reviews (review_id, user_id, review_text, rating, review_date) 
                VALUES (:review_id, :user_id, :review_text, :rating, NOW())";
                
        $stmt = $pdo->prepare($sql);
        
        // Bind parameters
        $params = array(
            ':review_id' => uniqid(),
            ':user_id' => $user_id,
            ':review_text' => trim($review_text),
            ':rating' => $rating
        );
        
        // Execute the statement
        $stmt->execute($params);
        
        return true;
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}
?>


$result = submit_review(123, "This is a great product!", 5);

if ($result === true) {
    echo "Review submitted successfully!";
} else {
    echo $result;
}


<?php
function submit_review($product_id, $user_id, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'reviews_db';

    try {
        // Connect to database
        $conn = new mysqli($host, $db_username, $db_password, $database);
        
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Check if user has already reviewed this product
        $check_query = "
            SELECT review_id 
            FROM reviews 
            WHERE product_id = ? AND user_id = ?
        ";
        
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ii", $product_id, $user_id);
        $stmt->execute();
        
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            return "You have already reviewed this product.";
        }

        // Insert new review
        $insert_query = "
            INSERT INTO reviews (product_id, user_id, rating, comment)
            VALUES (?, ?, ?, ?)
        ";

        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("iisi", $product_id, $user_id, $rating, $comment);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error submitting review: " . $stmt->error;
        }

    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
$product_id = 123;
$user_id = 456;
$rating = 5;
$comment = "This is a great product!";

$result = submit_review($product_id, $user_id, $rating, $comment);
echo $result;

?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'review_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Sanitize inputs
    $productId = mysqli_real_escape_string($conn, $productId);
    $userId = mysqli_real_escape_string($conn, $userId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Validate rating (assuming 1-5 stars)
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, timestamp) 
            VALUES ('$productId', '$userId', '$rating', '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to display reviews for a product
function displayReviews($productId, $conn) {
    $sql = "SELECT r.*, u.username FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$productId' 
            ORDER BY r.timestamp DESC";

    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Reviewed by " . $row['username'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . " stars</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Submit review when form is submitted
    if (isset($_POST['submit_review'])) {
        $productId = $_POST['product_id'];
        $userId = $_POST['user_id'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        submitReview($productId, $userId, $rating, $comment, $conn);
    }
}

// Display reviews for product ID 1
displayReviews(1, $conn);

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px 0;
        }
        .rating-stars {
            font-size: 24px;
        }
    </style>
</head>
<body>
    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="1">
        <input type="hidden" name="user_id" value="1">

        <div class="rating-stars">
            Rating: 
            <?php
                // Display rating stars
                $stars = 5;
                for ($i=1; $i<=$stars; $i++) {
                    echo "<input type='radio' name='rating' value='$i'>$i ";
                }
            ?>
        </div>

        <textarea name="comment" placeholder="Write your review here..."></textarea>
        <br>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>
</body>
</html>


<?php
// Configuration
$dbHost = 'localhost';
$dbUser = 'username';
$dbPass = 'password';
$dbName = 'database_name';

// Connect to database
$connection = mysqli_connect($dbHost, $dbUser, $dbPass, $dbName);

if (!$connection) {
    die("Database connection failed: " . mysqli_error($connection));
}

function submitReview($username, $review, $connection) {
    // Sanitize inputs
    $username = htmlspecialchars(mysqli_real_escape_string($connection, trim($username)));
    $review = htmlspecialchars(mysqli_real_escape_string($connection, trim($review)));

    // Check if username and review are not empty
    if (empty($username) || empty($review)) {
        return "Please fill in all fields!";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (username, review, submission_date)
            VALUES ('$username', '$review', NOW())";

    if (mysqli_query($connection, $sql)) {
        // Redirect back to the form after 1 second with a thank you message
        header("Refresh: 1; url=reviews.php");
        echo "Thank you for your review!";
    } else {
        return "Error submitting review: " . mysqli_error($connection);
    }
}

function displayReviews($connection) {
    // Fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($connection, $sql);

    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>By " . htmlspecialchars($row['username']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review']) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to leave a review!</p>";
    }
}

// Close database connection
mysqli_close($connection);
?>


<?php
// Function to display user reviews
function displayUserReviews($product_id) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating_sql = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = $product_id";
        $average_rating_result = mysqli_query($conn, $average_rating_sql);
        $average_rating_row = mysqli_fetch_assoc($average_rating_result);
        $average_rating = number_format((float)$average_rating_row['avg_rating'], 1, '.', '');
        
        echo "<div class='reviews-container'>";
        echo "<h3>Customer Reviews</h3>";
        echo "<p>Average Rating: $average_rating/5</p>";
        
        while ($row = mysqli_fetch_assoc($result)) {
            // Review details
            $user_id = $row['user_id'];
            $rating = $row['rating'];
            $comment = $row['review_comment'];
            $date = $row['review_date'];
            
            // Get user info
            $user_sql = "SELECT username, email FROM users WHERE id = $user_id";
            $user_result = mysqli_query($conn, $user_sql);
            $user_row = mysqli_fetch_assoc($user_result);
            $username = $user_row['username'];
            $email = $user_row['email'];
            
            // Display review
            echo "<div class='review'>";
            echo "<div class='review-header'>";
            echo "<span class='username'>$username</span>";
            echo "<span class='date'>($date)</span>";
            echo "</div>";
            
            // Display rating stars
            echo "<div class='rating'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            
            // Display comment
            echo "<p class='comment'>$comment</p>";
            
            // Review actions
            echo "<div class='review-actions'>";
            echo "<button class='helpful'>Helpful</button>";
            if (isset($_SESSION['admin'])) {
                echo "<button onclick='approveReview($row[review_id])'>Approve</button>";
            }
            echo "</div>";
            echo "</div>";
        }
        
        // Close database connection
        mysqli_close($conn);
        echo "</div>";
    } else {
        echo "<p>No reviews available for this product.</p>";
    }
}

// Example usage:
displayUserReviews(1);
?>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_SESSION['user_id'])) {
    // Sanitize inputs
    $rating = filter_var($_POST['rating'], FILTER_SANITIZE_NUMBER_INT);
    $comment = htmlspecialchars(trim($_POST['comment']));
    $product_id = filter_var($_POST['product_id'], FILTER_SANITIZE_NUMBER_INT);
    
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_comment) 
            VALUES ($_SESSION[user_id], $product_id, $rating, '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success-message'>Thank you for your review!</div>";
    } else {
        echo "<div class='error-message'>Error submitting review. Please try again.</div>";
    }
    
    // Close connection
    mysqli_close($conn);
}
?>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function processReview($conn) {
    try {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Sanitize input data
            $user_name = htmlspecialchars($_POST['username']);
            $rating = intval($_POST['rating']);
            $comment = htmlspecialchars($_POST['comment']);

            // Validate input data
            if ($user_name == "" || $comment == "" || $rating < 1) {
                throw new Exception("Please fill in all required fields and select a rating.");
            }

            // Insert review into database
            $stmt = $conn->prepare("INSERT INTO reviews (username, rating, comment, submission_date) VALUES (?, ?, ?, NOW())");
            $stmt->bind_param("sii", $user_name, $rating, $comment);

            if ($stmt->execute()) {
                echo "<script>alert('Thank you for submitting your review!');</script>";
            } else {
                throw new Exception("Error submitting review: " . $conn->error);
            }

            $stmt->close();
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

function displayReviews($conn) {
    try {
        // Fetch all reviews from database
        $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

        if ($result->num_rows > 0) {
            echo "<h3>Previous Reviews:</h3>";
            while ($row = $result->fetch_assoc()) {
                $rating_display = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
                $date = date("F j, Y g:i a", strtotime($row['submission_date']));

                echo "<div class='review'>";
                echo "<h4>" . htmlspecialchars($row['username']) . "</h4>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                echo "<div class='rating'>" . $rating_display . " (" . $date . ")</div>";
                echo "</div><br>";
            }
        } else {
            echo "<p>No reviews available.</p>";
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
        .rating {
            color: #gold;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <h1>Submit a Review</h1>
    
    <!-- Review submission form -->
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label for="username">Name:</label><br>
            <input type="text" id="username" name="username" required><br>
            
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>
            
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5" cols="30" required></textarea><br>
        </div><br>
        
        <input type="submit" value="Submit Review">
    </form>

    <?php
    // Process the review if form is submitted
    processReview($conn);
    
    // Display existing reviews
    displayReviews($conn);
    ?>

</body>
</html>


<?php
// Function to save a new review
function save_review($db_connection) {
    // Get the form data
    $review = $_POST['review'];
    $rating = $_POST['rating'];
    $product_id = $_POST['product_id'];
    $user_id = $_POST['user_id'];

    // Validate input data
    if (empty($review) || !isset($rating) || !ctype_digit((string)$rating) || $rating < 1 || $rating > 5 || !isset($product_id) || !is_numeric($product_id) || $product_id <= 0 || !isset($user_id) || !is_numeric($user_id) || $user_id <= 0) {
        return "Invalid input data!";
    }

    // Escape special characters to prevent SQL injection
    $review = mysqli_real_escape_string($db_connection, $review);

    // Insert the new review into the database
    $query = "INSERT INTO reviews (review_text, rating, product_id, user_id) 
              VALUES ('$review', $rating, $product_id, $user_id)";

    if (!mysqli_query($db_connection, $query)) {
        return "Error saving review: " . mysqli_error($db_connection);
    }

    // Return success message
    return "Review saved successfully!";
}

// Function to display reviews for a product
function display_reviews($db_connection, $product_id) {
    // Get all reviews for the specified product
    $query = "SELECT r.review_text, r.rating, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = $product_id 
              ORDER BY r.review_date DESC";

    $result = mysqli_query($db_connection, $query);

    if (!$result) {
        return "Error fetching reviews: " . mysqli_error($db_connection);
    }

    // Calculate average rating and total reviews
    $total_reviews = 0;
    $average_rating = 0;

    // Get review count and sum of ratings for the product
    $stats_query = "SELECT COUNT(*) as total, SUM(rating) as total_rating 
                    FROM reviews 
                    WHERE product_id = $product_id";
    $stats_result = mysqli_query($db_connection, $stats_query);

    if ($stats_row = mysqli_fetch_assoc($stats_result)) {
        $total_reviews = $stats_row['total'];
        $average_rating = ($total_reviews > 0) ? ($stats_row['total_rating'] / $total_reviews) : 0;
    }

    // Display reviews
    echo "<div class='product-reviews'>";
    echo "<h3>Customer Reviews</h3>";
    echo "<p>$total_reviews reviews</p>";
    echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";

    while ($row = mysqli_fetch_assoc($result)) {
        $review_text = $row['review_text'];
        $rating = $row['rating'];
        $username = $row['username'];

        echo "<div class='review'>";
        echo "<h4>Rating: $rating/5</h4>";
        echo "<p>By: $username</p>";
        echo "<p>$review_text</p>";
        echo "</div>";
    }

    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }

    echo "</div>";
}
?>


<?php
// Establish database connection
$host = 'localhost';
$db_name = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

$db_connection = mysqli_connect($host, $username, $password, $db_name);

if (!$db_connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Save the review
$review_result = save_review($db_connection);

if (strpos($review_result, "Error") === false && strpos($review_result, "Invalid") === false) {
    echo $review_result;
} else {
    echo $review_result;
}

mysqli_close($db_connection);
?>


<?php
// Establish database connection
$host = 'localhost';
$db_name = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

$db_connection = mysqli_connect($host, $username, $password, $db_name);

if (!$db_connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Display reviews for product with ID 1 (change as needed)
$product_id = 1;
display_reviews($db_connection, $product_id);

mysqli_close($db_connection);
?>


<?php
// Configuration
$reviewsFile = 'reviews.txt';

// Error message initialization
$error = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate and sanitize input
    $username = trim($_POST['username']);
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = trim($_POST['comment']);

    if (empty($username)) {
        $error = 'Please enter your name.';
    } elseif ($rating < 1 || $rating > 5) {
        $error = 'Please select a rating between 1 and 5 stars.';
    } elseif (empty($comment)) {
        $error = 'Please write a comment.';
    } else {
        // Sanitize input
        $username = htmlspecialchars($username, ENT_QUOTES);
        $comment = htmlspecialchars($comment, ENT_QUOTES);

        // Create review data array
        $reviewData = [
            'username' => $username,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        ];

        try {
            // Open file for writing
            $fileHandle = fopen($reviewsFile, 'a');
            if (flock($fileHandle, LOCK_EX)) { // Lock file to prevent concurrent writes
                // Write review data as JSON string
                fwrite($fileHandle, json_encode($reviewData) . "
");
                flock($fileHandle, LOCK_UN); // Release lock
            }
            fclose($fileHandle);

            // Redirect back after successful submission
            header('Location: ' . $_SERVER['PHP_SELF']);
            exit();
        } catch (Exception $e) {
            $error = 'Error saving review. Please try again later.';
            error_log('Review submission failed: ' . $e->getMessage());
        }
    }
}

// Function to load reviews from file
function loadReviews($file) {
    if (!file_exists($file)) {
        return [];
    }

    $reviews = array();
    $lines = file($file);
    foreach ($lines as $line) {
        $line = trim($line);
        if (!empty($line)) {
            $reviewData = json_decode($line, true);
            if (is_array($reviewData)) {
                $reviews[] = $reviewData;
            }
        }
    }

    return $reviews;
}

// Load existing reviews
$reviews = loadReviews($reviewsFile);

// Function to display star rating
function displayStars($rating) {
    $stars = str_repeat('★', $rating);
    $emptyStars = str_repeat('☆', 5 - $rating);
    return $stars . $emptyStars;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        .star-rating {
            font-size: 24px;
            color: #ffd700;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php if (!empty($error)): ?>
        <div style="color: red; margin-bottom: 20px;">
            Error: <?php echo $error; ?>
        </div>
    <?php endif; ?>

    <!-- Review submission form -->
    <form class="review-form" method="post">
        <div>
            <label for="username">Name:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div style="margin-top: 10px;">
            <label>Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">★★★★★ (5)</option>
                <option value="4">★★★★☆ (4)</option>
                <option value="3">★★★☆☆ (3)</option>
                <option value="2">★★☆☆☆ (2)</option>
                <option value="1">★☆☆☆☆ (1)</option>
            </select>
        </div>

        <div style="margin-top: 10px;">
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" cols="50" required></textarea>
        </div>

        <button type="submit" style="margin-top: 10px;">Submit Review</button>
    </form>

    <?php if (!empty($reviews)): ?>
        <h2>Latest Reviews:</h2>
        <?php foreach ($reviews as $review): 
            // Limit comment length to prevent long comments from breaking layout
            $comment = substr($review['comment'], 0, 300); 
            if (strlen($review['comment']) > 300) {
                $comment .= '...';
            }
        ?>
            <div style="border-bottom: 1px solid #ddd; padding-bottom: 15px; margin-bottom: 15px;">
                <div>
                    <strong><?php echo htmlspecialchars($review['username']); ?></strong>
                    <span class="star-rating" style="margin-left: 10px;">
                        <?php echo displayStars($review['rating']); ?>
                    </span>
                </div>
                <p><?php echo $comment; ?></p>
                <small style="color: #666;">
                    <?php echo date('j M Y, H:i', strtotime($review['date'])); ?>
                </small>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <p>No reviews available. Be the first to review this product!</p>
    <?php endif; ?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    product_id INT,
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize inputs
        $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
        $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);
        
        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, product_id, rating, comment, timestamp)
                VALUES ('$user_name', '$product_id', '$rating', '$comment', NOW())";
        
        if (!mysqli_query($conn, $sql)) {
            die('Error submitting review: ' . mysqli_error($conn));
        }
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    // Get reviews for product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        echo '<div class="reviews">';
        
        // Calculate average rating
        $sum_ratings = 0;
        $count = 0;
        while ($row = mysqli_fetch_assoc($result)) {
            $sum_ratings += $row['rating'];
            $count++;
        }
        $average_rating = number_format(($sum_ratings / $count), 1);
        
        echo '<div class="average-rating">';
        echo '<h3>Average Rating:</h3>';
        echo '<p>' . $average_rating . '/5</p>';
        echo '</div>';
        
        // Reset result pointer
        mysqli_data_seek($result, 0);
        
        while ($row = mysqli_fetch_assoc($result)) {
            $user_name = htmlspecialchars($row['user_name']);
            $rating = $row['rating'];
            $comment = htmlspecialchars($row['comment']);
            $timestamp = date('M j, Y g:i a', strtotime($row['timestamp']));
            
            echo '<div class="review">';
            echo '<div class="review-header">';
            echo '<span class="user-name">' . $user_name . '</span>';
            echo '<div class="rating">';
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            echo '</div>';
            echo '</div>';
            echo '<p class="comment">' . $comment . '</p>';
            echo '<small class="timestamp">' . $timestamp . '</small>';
            echo '</div>';
        }
        
        echo '</div>';
    } else {
        echo 'No reviews yet.';
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submit_review() {
    global $conn;

    // Sanitize input data
    $user_name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $rating = (int)$_POST['rating'];
    $comment = htmlspecialchars($_POST['comment']);

    // Get current date and time
    $date = date('Y-m-d H:i:s');

    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, date) 
            VALUES ('$user_name', '$email', $rating, '$comment', '$date')";

    if (mysqli_query($conn, $sql)) {
        echo "Review submitted successfully!";
        header("Refresh:2; url=reviews.php"); // Redirect after 2 seconds
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;

    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>" . $row['date'] . "</small>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!-- HTML Form for submitting reviews -->
<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        .stars {
            color: #ffd700;
        }
    </style>
</head>
<body>
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        submit_review();
    } else {
        // Display review form
        echo "<h2>Submit Your Review</h2>";
        echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<label for='name'>Name:</label><br>";
        echo "<input type='text' id='name' name='name' required><br><br>";
        
        echo "<label for='email'>Email:</label><br>";
        echo "<input type='email' id='email' name='email' required><br><br>";
        
        echo "<label for='rating'>Rating:</label><br>";
        echo "<select id='rating' name='rating'>";
        for ($i = 1; $i <= 5; $i++) {
            echo "<option value='$i'>$i stars</option>";
        }
        echo "</select><br><br>";
        
        echo "<label for='comment'>Comment:</label><br>";
        echo "<textarea id='comment' name='comment' rows='4' cols='50' required></textarea><br><br>";
        
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
    }
    
    // Display existing reviews
    echo "<h2>Reviews</h2>";
    display_reviews();
    ?>
</body>
</html>


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview() {
    global $conn;
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Insert into database
        $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, review_date) 
                VALUES ('$name', '$email', $rating, '$comment', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "Review submitted successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT r.*, u.user_name AS username 
            FROM reviews r 
            LEFT JOIN users u ON r.user_email = u.user_email 
            ORDER BY review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $total_ratings = 0;
        $average_rating = 0;
        
        while ($row = mysqli_fetch_assoc($result)) {
            $total_ratings += $row['rating'];
            echo "<div class='review'>";
            echo "<h3>Review by " . $row['username'] . "</h3>";
            echo "<p><strong>Rating:</strong> " . $row['rating'] . "/5</p>";
            echo "<p><strong>Comment:</strong> " . $row['comment'] . "</p>";
            echo "<p><em>Posted on: " . $row['review_date'] . "</em></p>";
            echo "</div>";
        }
        
        // Calculate average
        $average_rating = ($total_ratings / mysqli_num_rows($result)) * 1;
        $rounded_average = round($average_rating, 2);
        
        echo "<div class='average-rating'>";
        echo "Average Rating: " . $rounded_average . "/5";
        echo "</div>";
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
displayReviews();
?>


<?php
// Function to create a new review
function createReview($userId, $productId, $rating, $comment = "") {
    // Database connection details
    $servername = "localhost";
    $username = "your_username";
    $password = "your_password";
    $dbname = "your_database";

    // Create connection
    $conn = mysqli_connect($servername, $username, $password, $dbname);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = intval($rating); // Ensure rating is an integer
    $comment = mysqli_real_escape_string($conn, $comment);

    // Validate rating (assuming ratings are between 1 and 5)
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please provide a rating between 1 and 5.";
    }

    // SQL query to insert the review
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
            VALUES ('$userId', '$productId', '$rating', '" . ($comment ? "'$comment'" : "NULL") . "', NOW())";

    if (mysqli_query($conn, $sql)) {
        // Return success message
        return "Review submitted successfully!";
    } else {
        // Return error message
        return "Error: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Function to get reviews for a product
function getReviewsByProduct($productId) {
    // Database connection details
    $servername = "localhost";
    $username = "your_username";
    $password = "your_password";
    $dbname = "your_database";

    // Create connection
    $conn = mysqli_connect($servername, $username, $password, $dbname);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);

    // SQL query to fetch reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY created_at DESC";
    
    // Optional: Limit the number of reviews returned
    $limit = 5; // Change this value as needed
    $sql .= " LIMIT $limit";

    $result = mysqli_query($conn, $sql);
    $reviews = array();

    if ($result) {
        while ($row = mysqli_fetch_assoc($result)) {
            $review = array(
                'id' => $row['id'],
                'user_id' => $row['user_id'],
                'product_id' => $row['product_id'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'created_at' => $row['created_at']
            );
            array_push($reviews, $review);
        }
    } else {
        // Return error message
        return "Error: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);

    return $reviews;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $userId = $_POST['user_id'];
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Create a new review
    $reviewResult = createReview($userId, $productId, $rating, $comment);
    echo $reviewResult;
}

// Get reviews for a specific product
$productReviews = getReviewsByProduct(1); // Replace 1 with the actual product ID

// Calculate average rating and display reviews
if (is_array($productReviews)) {
    $totalRating = 0;
    foreach ($productReviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = $totalRating / count($productReviews);

    echo "<h3>Product Reviews</h3>";
    echo "<p>Average Rating: " . number_format($averageRating, 1) . "/5</p>";

    foreach ($productReviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<p><strong>" . str_repeat("★", $review['rating']) . "</strong></p>";
        if (!empty($review['comment'])) {
            echo "<p>" . $review['comment'] . "</p>";
        }
        echo "</div>";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(100),
    user_email VARCHAR(100),
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

mysqli_query($conn, $sql);

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = (int)$_POST['rating'];
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    // Insert into database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, timestamp) 
            VALUES ('$name', '$email', $rating, '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        header("Location: $_SERVER[PHP_SELF]");
        exit();
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Get all reviews
$sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);
$reviews = mysqli_fetch_all($result, MYSQLI_ASSOC);

// Calculate average rating
$total_ratings = 0;
$count = count($reviews);
if ($count > 0) {
    foreach ($reviews as $review) {
        $total_ratings += $review['rating'];
    }
    $average_rating = $total_ratings / $count;
} else {
    $average_rating = 0;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .rating-stars {
            color: #ffd700;
        }
        .review-item {
            border-bottom: 1px solid #ddd;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="review-container">
        <?php if (!empty($average_rating)) { ?>
            <h2>Average Rating: <?php echo number_format($average_rating, 1); ?> stars</h2>
        <?php } ?>

        <h2>Leave a Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Choose a rating</option>
                    <option value="5">5 stars</option>
                    <option value="4">4 stars</option>
                    <option value="3">3 stars</option>
                    <option value="2">2 stars</option>
                    <option value="1">1 star</option>
                </select>
            </div>

            <div>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="5" required></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>

        <?php if (!empty($reviews)) { ?>
            <h2>Reviews</h2>
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>
                    <p><?php echo htmlspecialchars($review['user_email']); ?></p>
                    <div class="rating-stars">
                        <?php 
                            $stars = str_repeat('★ ', $review['rating']);
                            echo $stars;
                        ?>
                    </div>
                    <p><?php echo nl2br(htmlspecialchars($review['comment'])); ?></p>
                    <small>Posted on: <?php echo date('F j, Y', strtotime($review['timestamp'])); ?></small>
                </div>
            <?php } ?>
        <?php } else { ?>
            <p>No reviews yet. Be the first to leave a review!</p>
        <?php } ?>
    </div>
</body>
</html>


<?php
function display_reviews($reviews, $product_id) {
    // Initialize an empty array to hold matching reviews
    $matching_reviews = array();

    // Loop through each review to find those that match the product ID
    foreach ($reviews as $review) {
        if ($review['product_id'] == $product_id) {
            $matching_reviews[] = $review;
        }
    }

    // If there are no matching reviews, display a message
    if (empty($matching_reviews)) {
        echo "<div class='no-reviews'>No reviews yet.</div>";
        return;
    }

    // Display the reviews in an ordered list
    echo "<ol class='reviews'>";
    
    foreach ($matching_reviews as $review) {
        // Start each review item
        echo "<li class='review'>";
        
        // Display the author and content of the review
        echo "<div class='review-content'>";
        echo "<p><strong>" . htmlspecialchars($review['author']) . "</strong></p>";
        echo "<p>" . nl2br(htmlspecialchars($review['content'])) . "</p>";
        echo "</div>";

        // Display the star rating
        $stars = "";
        for ($i = 0; $i < $review['rating']; $i++) {
            $stars .= "★";
        }
        echo "<div class='rating'>";
        echo "<span class='stars'>" . $stars . "</span>";
        echo "</div>";

        // Display the review date
        echo "<div class='date'>";
        echo "<small>" . date('F j, Y', strtotime($review['date'])) . "</small>";
        echo "</div>";
        
        // End of this review item
        echo "</li>";
    }
    
    // Close the ordered list
    echo "</ol>";
}
?>


$reviews = array(
    array(
        'product_id' => 1,
        'author' => 'John Doe',
        'content' => "This is a great product! I highly recommend it.",
        'rating' => 5,
        'date' => '2023-07-20'
    ),
    array(
        'product_id' => 1,
        'author' => 'Jane Smith',
        'content' => "Okay but nothing special. It works but could be better.",
        'rating' => 3,
        'date' => '2023-07-19'
    ),
);

// Display reviews for product ID 1
display_reviews($reviews, 1);


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($name, $review) {
    global $conn;
    
    // Sanitize the inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $review = mysqli_real_escape_string($conn, htmlspecialchars($review));
    
    // Insert into database
    $sql = "INSERT INTO reviews (name, review) VALUES ('$name', '$review')";
    
    if ($conn->query($sql)) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Retrieve all reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["name"]) . "</h3>";
            echo "<p>" . htmlspecialchars($row["review"]) . "</p>";
            echo "<small>Posted on: " . $row["timestamp"] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the values from the form
    $name = $_POST['name'];
    $review = $_POST['review'];
    
    // Validate input
    if (empty($name) || empty($review)) {
        echo "Please fill in all fields!";
    } else {
        addReview($name, $review);
    }
}

// Close the database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process review submission
if (isset($_POST['submit_review'])) {
    // Sanitize and validate inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validation errors
    $errors = array();

    if (empty($name)) {
        $errors[] = "Name is required.";
    }
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Valid email is required.";
    }
    if ($rating < 1 || $rating > 5) {
        $errors[] = "Rating must be between 1 and 5 stars.";
    }
    if (empty($comment)) {
        $errors[] = "Comment is required.";
    }

    // If no errors, insert into database
    if (empty($errors)) {
        try {
            $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)");
            $stmt->bind_param("ssis", $name, $email, $rating, $comment);
            $stmt->execute();
            $stmt->close();

            // Redirect after successful submission
            header("Location: review.php?success=1");
            exit();
        } catch (mysqli_sql_exception $e) {
            echo "Error submitting review: " . $e->getMessage();
        }
    } else {
        foreach ($errors as $error) {
            echo "<p class='error'>$error</p>";
        }
    }
}

// Fetch reviews from database
$reviews = array();
$result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $reviews[] = $row;
    }
} else {
    echo "No reviews found.";
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .rating-stars input[type="radio"] { display: none; }
        .rating-stars label { color: #ddd; cursor: pointer; }
        .rating-stars label:before { content: "★ "; }
        .rating-stars input[type="radio"]:checked ~ label { color: #ffd700; }
        .review-list { margin-top: 20px; }
        .review-item { margin-bottom: 15px; padding: 10px; border: 1px solid #ddd; }
        .star-rated { color: #ffd700; }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <div class="review-form">
        <h2>Leave a Review</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <p>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </p>
            <p>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </p>
            <p>
                <label>Rating:</label><br>
                <div class="rating-stars">
                    <input type="radio" id="5-star" name="rating" value="5">
                    <label for="5-star">5</label>
                    <input type="radio" id="4-star" name="rating" value="4">
                    <label for="4-star">4</label>
                    <input type="radio" id="3-star" name="rating" value="3">
                    <label for="3-star">3</label>
                    <input type="radio" id="2-star" name="rating" value="2">
                    <label for="2-star">2</label>
                    <input type="radio" id="1-star" name="rating" value="1">
                    <label for="1-star">1</label>
                </div>
            </p>
            <p>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="5" cols="30" required></textarea>
            </p>
            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <div class="review-list">
        <h2>Customer Reviews</h2>
        <?php foreach ($reviews as $review): ?>
            <div class="review-item">
                <p><strong><?php echo htmlspecialchars($review['name']); ?></strong></p>
                <p class="star-rated"><?php display_stars($review['rating']); ?> (<?php echo $review['rating']; ?> stars)</p>
                <p><?php echo htmlspecialchars($review['comment']); ?></p>
                <small>Submitted on: <?php echo $review['submission_date']; ?></small>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Star Display Helper Function -->
    <?php
    function display_stars($rating) {
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                echo "★ ";
            } else {
                echo "☆ ";
            }
        }
    }
    ?>
</body>
</html>


<?php
// Database connection configuration
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to fetch and display reviews
function getReviews($product_id) {
    global $conn;

    // Get all reviews for a product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        
        $result = $stmt->get_result();

        // Display reviews
        while ($row = $result->fetch_assoc()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $author = $row['author'];
            $review_date = date('jS M Y, g:i a', strtotime($row['review_date']));

            // Display review content
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    // Display rating stars
                    echo "<div class='rating'>";
                        for ($i = 1; $i <= 5; $i++) {
                            if ($i <= $rating) {
                                echo "<span class='star'>⭐️</span>";
                            } else {
                                echo "<span class='star' style='opacity:0.3'>⭐️</span>";
                            }
                        }
                    echo "</div>";
                    echo "<span class='review-date'>$review_date</span>";
                echo "</div>";
                
                // Display review comment and author
                echo "<p>$comment</p>";
                echo "<p class='author'>- $author</p>";
            echo "</div>";
        }
    }

    // Calculate average rating
    $sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = ?";
    
    if ($stmt = $conn->prepare($sql_avg)) {
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        
        $avg_result = $stmt->get_result();
        $row = $avg_result->fetch_assoc();
        $average_rating = number_format($row['avg_rating'], 1);

        // Display average rating
        echo "<div class='average-rating'>";
            echo "Average Rating: <span>$average_rating/5</span>";
        echo "</div>";
    }

    $stmt->close();
}

// Function to handle review submission
function submitReview() {
    global $conn;

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $author = $_POST['author'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        $product_id = $_POST['product_id'];

        // Validate input
        if (empty($author) || empty($email) || empty($rating) || empty($comment)) {
            die("Please fill in all required fields.");
        }

        // Check rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars.");
        }

        // Sanitize input data
        $author = mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($author))));
        $email = mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($email))));
        $comment = mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($comment))));

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, author, email, rating, comment) 
                VALUES (?, ?, ?, ?, ?)";

        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("isiii", $product_id, $author, $email, $rating, $comment);
            $stmt->execute();
            
            // Close statement
            $stmt->close();

            // Redirect back to the product page or review section
            header("Location: " . $_SERVER['HTTP_REFERER']);
        }
    }
}

// Function to handle helpfulness voting
function voteReview($review_id, $vote) {
    global $conn;

    if ($vote == 'up' || $vote == 'down') {
        // Update helpfulness count
        $sql = "UPDATE reviews SET helpful_$vote = helpful_$vote + 1 WHERE id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $review_id);
            $stmt->execute();
            $stmt->close();

            // Get updated helpfulness counts
            $sql_counts = "SELECT helpful_up, helpful_down FROM reviews WHERE id = ?";
            
            if ($stmt = $conn->prepare($sql_counts)) {
                $stmt->bind_param("i", $review_id);
                $stmt->execute();
                
                $result = $stmt->get_result();
                $row = $result->fetch_assoc();

                // Output helpfulness counts
                echo "Up: " . $row['helpful_up'] . ", Down: " . $row['helpful_down'];
            }
        }
    }
}
?>


<?php
// Display reviews for a specific product
$product_id = 1; // Replace with actual product ID
getReviews($product_id);
?>


<?php
function user_review($product_id) {
    // Database configuration
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $db_name = 'reviews_db';

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die('Connection failed: ' . mysqli_connect_error());
    }

    // Check for review submission
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $name = $_POST['name'];
        $comment = $_POST['comment'];
        $rating = $_POST['rating'];

        // Validate input
        if (empty($name) || empty($comment)) {
            die('Name and comment are required.');
        }

        if (!isset($rating) || $rating < 1 || $rating > 5) {
            die('Rating must be between 1 and 5.');
        }

        // Prevent multiple submissions from the same user短时间内
        if (isset($_SESSION['last_review_submission'])) {
            if (time() - $_SESSION['last_review_submission'] < 30) { // Minimum 30 seconds between reviews
                die('Please wait before submitting another review.');
            }
        } else {
            $_SESSION['last_review_submission'] = time();
        }

        // Insert new review into the database
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, comment, rating, date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("isii", $product_id, $name, $comment, $rating);
        
        if ($stmt->execute() === TRUE) {
            // Redirect to avoid form resubmission
            header('Location: ' . $_SERVER['PHP_SELF'] . '?product_id=' . $product_id);
            exit();
        } else {
            die('Error submitting review.');
        }
    }

    // Retrieve reviews for the specified product
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ? ORDER BY date DESC");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Display each review
        while ($row = $result->fetch_assoc()) {
            echo <<<EOD
<div class="review">
    <div class="review-header">
        <span class="review-author">{$row['name']}</span>
        <span class="review-rating">{$row['rating']} stars</span>
    </div>
    <div class="review-body">
        {$row['comment']}
    </div>
    <div class="review-date">
        Posted on {$row['date']}
    </div>
</div>
EOD;
        }
    } else {
        // No reviews found
        echo '<p>No reviews have been submitted yet.</p>';
    }

    // Display review submission form
    if ($result->num_rows == 0 || isset($_GET['submit'])) {
        echo <<<FORM
<form action="" method="post">
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <input type="text" name="name" placeholder="Your Name" required>
        <textarea name="comment" placeholder="Write your review here..." required></textarea>
        <label for="rating">Rating:</label>
        <select id="rating" name="rating">
            <option value="">Choose a rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
        <input type="submit" value="Submit Review">
    </div>
</form>
FORM;
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a review
function createReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
            VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getProductReviews($productId) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE product_id = '$productId' 
            ORDER BY created_at DESC";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to get average rating for a product
function getProductRating($productId) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get average rating from database
    $sql = "SELECT AVG(rating) as average_rating 
            FROM reviews 
            WHERE product_id = '$productId'";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average_rating'], 1); // Round to one decimal place
    } else {
        return 0;
    }
}

// Example usage:
$productId = 123; // Replace with actual product ID

// Create a review
if (createReview(456, $productId, 5, "Great product!")) {
    echo "Review created successfully!";
} else {
    echo "Error creating review.";
}

// Get and display reviews for product
$reviews = getProductReviews($productId);
if ($reviews) {
    while ($row = $reviews->fetch_assoc()) {
        echo "<div>";
        echo "<strong>" . $row['username'] . "</strong> - ";
        echo "<em>" . $row['rating'] . " stars</em><br>";
        echo $row['comment'];
        echo "</div>";
    }
} else {
    echo "No reviews available.";
}

// Get and display average rating
$averageRating = getProductRating($productId);
echo "<p>Average Rating: " . $averageRating . " stars</p>";

// Close database connection
$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment, $conn) {
    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating); // Ensure rating is an integer
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
              VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $rating, $comment);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id, $conn) {
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Get all reviews for the product
    $query = "SELECT r.review_id, u.user_name, r.rating, r.comment, r.timestamp
              FROM reviews r
              JOIN users u ON r.user_id = u.user_id
              WHERE r.product_id = ?
              ORDER BY r.timestamp DESC";

    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);

        // Start output
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            $user_name = $row['user_name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));

            // Display review
            echo "<div class='review'>";
            echo "<h4> Reviewed by " . htmlspecialchars($user_name) . "</h4>";
            echo "<p><strong>Rating:</strong> ";
            for ($i = 0; $i < $rating; $i++) {
                echo "&#9733;";
            }
            echo "</p>";
            echo "<p>" . htmlspecialchars($comment) . "</p>";
            echo "<p class='timestamp'>" . $timestamp . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        // Handle error
        echo "Error displaying reviews: " . mysqli_error($conn);
    }
}

// Function to calculate average rating
function get_average_rating($product_id, $conn) {
    $product_id = mysqli_real_escape_string($conn, $product_id);

    $query = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);
        return round($row['average'], 1); // Round to one decimal place
    } else {
        return 0;
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Function to handle review submission
function submitReview() {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = (int)trim($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate input
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            echo "Please fill in all fields!";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars!";
            return;
        }

        // Store the review
        $review = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );

        // Save to file (you might want to use a database in production)
        $reviewsFile = fopen('reviews.txt', 'a');
        fwrite($reviewsFile, serialize($review) . "
");
        fclose($reviewsFile);

        echo "Thank you for submitting your review!";
    }
}

// Function to display reviews
function displayReviews() {
    // Get all reviews from file
    $reviewsData = @file_get_contents('reviews.txt');
    if ($reviewsData === false) {
        return;
    }

    $reviews = explode("
", $reviewsData);
    foreach ($reviews as $review) {
        if (trim($review) == '') continue;

        $review = unserialize($review);
        if ($review !== false) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>{$review['name']}</h3>";
            echo "<p>{$review['email']}</p>";
            echo "<div class='stars'>";
            for ($i = 1; $i <= $review['rating']; $i++) {
                echo "<span class='star'>★</span>";
            }
            echo "</div>";
            echo "<p>{$review['comment']}</p>";
            echo "<small>Posted on {$review['date']}</small>";
            echo "</div>";
        }
    }
}

// Function to calculate average rating
function getAverageRating() {
    $ratings = array();
    $reviewsData = @file_get_contents('reviews.txt');
    if ($reviewsData === false) {
        return 0;
    }

    $reviews = explode("
", $reviewsData);
    foreach ($reviews as $review) {
        if (trim($review) == '') continue;

        $review = unserialize($review);
        if ($review !== false) {
            $ratings[] = $review['rating'];
        }
    }

    if (count($ratings) > 0) {
        return array_sum($ratings) / count($ratings);
    } else {
        return 0;
    }
}
?>


<?php displayReviews(); ?>


Average Rating: <?php echo number_format(getAverageRating(), 1); ?> stars


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating value";
    }
    
    if (strlen($comment) == 0) {
        return "Comment cannot be empty";
    }
    
    // Check if user exists
    $check_user = "SELECT id FROM users WHERE id = ?";
    $stmt = mysqli_prepare($conn, $check_user);
    mysqli_stmt_bind_param($stmt, "i", $user_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return "User does not exist";
    }
    
    // Insert review
    $insert_review = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                     VALUES (?, ?, ?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $insert_review);
    mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return "Error adding review: " . mysqli_error($conn);
    }
}

// Function to fetch reviews for a product
function get_reviews($product_id, $limit = 10, $order_by = 'created_at', $sort = 'DESC') {
    global $conn;
    
    // Validate parameters
    if (!is_numeric($product_id)) {
        return false;
    }
    
    // Build the query
    $query = "SELECT r.id AS review_id,
                    u.username,
                    r.rating,
                    r.comment,
                    r.created_at
             FROM reviews r
             JOIN users u ON r.user_id = u.id
             WHERE r.product_id = ?
             ORDER BY $order_by $sort
             LIMIT ?";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ii", $product_id, $limit);
    
    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        return $result;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    // Get reviews for the product
    $reviews_result = get_reviews($product_id);
    
    if ($reviews_result && mysqli_num_rows($reviews_result) > 0) {
        echo '<div class="reviews-container">';
        
        while ($review = mysqli_fetch_assoc($reviews_result)) {
            echo '<div class="review">';
                echo '<div class="review-header">';
                    echo '<span class="username">' . htmlspecialchars($review['username']) . '</span>';
                    // Display rating stars
                    echo '<div class="rating">';
                        for ($i = 1; $i <= 5; $i++) {
                            if ($i <= $review['rating']) {
                                echo '<span class="star">★</span>';
                            } else {
                                echo '<span class="star">☆</span>';
                            }
                        }
                    echo '</div>';
                echo '</div>';
                
                echo '<p class="comment">' . htmlspecialchars($review['comment']) . '</p>';
                
                // Display helpful vote button
                echo '<div class="vote-container">';
                    echo '<button class="helpful-vote">Was this helpful?</button>';
                echo '</div>';
                
                echo '<small class="date">' . date('F j, Y', strtotime($review['created_at'])) . '</small>';
            echo '</div>';
        }
        
        echo '</div>';
    } else {
        echo 'No reviews available for this product.';
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $user_id = 1; // Replace with actual user ID
    $product_id = 1; // Replace with actual product ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = add_review($user_id, $product_id, $rating, $comment);
    if ($result === true) {
        echo "Review added successfully!";
    } else {
        echo $result;
    }
}

// Display reviews for product ID 1
display_reviews(1);

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview($author, $rating, $review_text, $conn) {
    // Sanitize inputs
    $author = mysqli_real_escape_string($conn, htmlspecialchars($author));
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));

    // Validate inputs
    if ($author == "" || $rating < 1 || $rating > 5 || $review_text == "") {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (author, rating, review_text) 
            VALUES ('$author', '$rating', '$review_text')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Review by " . htmlspecialchars($row['author']) . "</h3>";
            echo "<p>Rating: ";
            // Display stars
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Submitted on: " . date('F j, Y', $row['timestamp']) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include 'review_functions.php';

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $rating = $_POST['rating'];
    $review_text = $_POST['review_text'];
    
    // Submit the review
    if (submitReview($author, $rating, $review_text, $conn)) {
        echo "<script>alert('Thank you for submitting your review!');</script>";
    } else {
        echo "<script>alert('Error submitting review. Please try again.');history.go(-1);</script>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
function submitUserReview($userId, $reviewText, $rating) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    try {
        // Validate input
        if (empty(trim($reviewText)) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
            return "Invalid review or rating. Please provide a valid review and rating between 1 and 5.";
        }

        // Connect to database
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the SQL query to insert review
        $stmt = $conn->prepare("
            INSERT INTO reviews (user_id, review_text, rating, review_date)
            VALUES (:userId, :reviewText, :rating, NOW())
        ");
        
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':reviewText', $reviewText);
        $stmt->bindParam(':rating', $rating);

        $stmt->execute();

        // Calculate and return average rating after submission
        $avgRatingQuery = $conn->prepare("
            SELECT AVG(rating) as average_rating FROM reviews WHERE user_id = :userId
        ");
        
        $avgRatingQuery->bindParam(':userId', $userId);
        $avgRatingQuery->execute();
        $result = $avgRatingQuery->fetch(PDO::FETCH_ASSOC);

        return "Review submitted successfully! Current average rating: " . number_format($result['average_rating'], 1, '.', '');

    } catch (PDOException $e) {
        // Handle database errors
        return "Error submitting review: " . $e->getMessage();
    }
}

// Example usage:
$userId = 1;
$userReview = "Great experience!";
$userRating = 5;

echo submitUserReview($userId, $userReview, $userRating);
?>


<?php
// Database configuration
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a user review
function create_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (
        empty($user_id) ||
        empty($product_id) ||
        !is_numeric($rating) || 
        $rating < 1 || 
        $rating > 5 ||
        empty($comment)
    ) {
        return "Error: Invalid input";
    }

    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment', CURRENT_TIMESTAMP)";

    if ($conn->query($sql) === TRUE) {
        return array(
            "status" => "success",
            "message" => "Review submitted successfully",
            "review_id" => $conn->insert_id
        );
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Example usage:
$user_id = 123; // Replace with actual user ID
$product_id = 456; // Replace with actual product ID
$rating = 4; // Rating from 1 to 5
$comment = "This is a great product!"; // Review comment

$result = create_review($user_id, $product_id, $rating, $comment);

// Display result
if (is_array($result)) {
    echo "<pre>";
    print_r($result);
    echo "</pre>";
} else {
    echo $result;
}

$conn->close();
?>


<?php
function add_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'reviews_db';

    // Create database connection
    $conn = new mysqli($host, $db_username, $db_password, $database);

    // Check for connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Prepare and execute SQL query
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
            
    if ($conn->query($sql)) {
        // Review added successfully
        $conn->close();
        return true;
    } else {
        // Error adding review
        $conn->close();
        return false;
    }
}
?>


// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "Great product!";

if (add_review($user_id, $product_id, $rating, $comment)) {
    echo "Thank you for your review!";
} else {
    echo "Error adding review. Please try again.";
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle reviews submission and display
function handleReviews() {
    global $conn;

    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $rating = (int)$_POST['rating'];
        $review_text = mysqli_real_escape_string($conn, $_POST['review']);

        // Validate input
        if ($name == '' || $email == '' || $review_text == '') {
            echo "Please fill in all required fields.";
            exit();
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, rating, review_text)
                VALUES ('$name', '$email', $rating, '$review_text')";
        
        if (!mysqli_query($conn, $sql)) {
            echo "Error: " . mysqli_error($conn);
        }

        // Redirect back to the page
        header('Location: ' . $_SERVER['PHP_SELF']);
        exit();
    }

    // Retrieve reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<div class='rating'>Rating: ";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y g:i a', $row['timestamp']) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }

    // Close database connection
    mysqli_close($conn);
}

// Call the function to display reviews
handleReviews();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .rating-stars span {
            color: gold;
        }
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Review submission form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST" class="review-form">
            <h2>Submit a Review</h2>
            <p>Please fill in your details and review below:</p>
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <input type="email" name="email" placeholder="Email Address" required><br><br>
            <div class="rating-stars">
                Rating: 
                <select name="rating">
                    <?php for ($i = 1; $i <=5; $i++) { ?>
                        <option value="<?php echo $i ?>"><?php echo $i ?> Stars</option>
                    <?php } ?>
                </select><br><br>
            </div>
            <textarea name="review" placeholder="Write your review here..." rows="4" cols="50" required></textarea><br><br>
            <input type="submit" value="Submit Review">
        </form>

        <!-- Display reviews -->
        <?php handleReviews(); ?>
    </div>
</body>
</html>


<?php
// This function handles adding new reviews and displaying existing ones
function userReviewSystem() {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    try {
        // Create a database connection
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if the form is submitted
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Sanitize and validate input
            $name = htmlspecialchars(trim($_POST['name']));
            $rating = intval($_POST['rating']);
            $comment = htmlspecialchars(trim($_POST['comment']));

            // Basic validation
            if ($name == '' || $comment == '') {
                throw new Exception('Please fill in all fields');
            }

            if ($rating < 1 || $rating > 5) {
                throw new Exception('Rating must be between 1 and 5 stars');
            }

            // Insert the review into the database
            $stmt = $conn->prepare("INSERT INTO reviews (name, rating, comment, timestamp) VALUES (:name, :rating, :comment, NOW())");
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comment', $comment);

            $stmt->execute();

            // Redirect back to the page after submission
            header('Location: ' . $_SERVER['PHP_SELF']);
            exit();
        }

        // Get all reviews from the database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY timestamp DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    }
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        /* Add some basic styling */
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
        }

        .star {
            font-size: 24px;
        }

        .review-list {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 5px;
        }

        .review-item {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div>
                <label>Rating:</label><br>
                <div class="rating-stars">
                    <?php for ($i = 1; $i <= 5; $i++) { ?>
                        <input type="radio" name="rating" value="<?php echo $i; ?>" class="star">★
                    <?php } ?>
                </div>
            </div>

            <div>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="4" required></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <div class="review-list">
        <?php if (!empty($reviews)) { ?>
            <h2>Customer Reviews</h2>
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <div class="rating-stars">
                        <?php for ($i = 1; $i <= $review['rating']; $i++) { ?>
                            <span class="star">★</span>
                        <?php } ?>
                    </div>
                    <h3><?php echo $review['name']; ?></h3>
                    <p><?php echo $review['comment']; ?></p>
                    <small><?php echo date('F j, Y', strtotime($review['timestamp'])); ?></small>
                </div>
            <?php } ?>
        <?php } else { ?>
            <p>No reviews yet. Be the first to review this product!</p>
        <?php } ?>
    </div>

</body>
</html>

<?php
} // End of userReviewSystem function

// Call the function
userReviewSystem();
?>


<?php
function user_review($name = '', $review = '', $rating = 0, $email = '') {
    // File where reviews will be stored
    $filename = 'reviews.txt';
    
    // If all parameters are empty, display existing reviews
    if (empty($name) && empty($review) && empty($rating) && empty($email)) {
        // Read reviews from file and display them
        if (file_exists($filename)) {
            $reviews = unserialize(file_get_contents($filename));
            
            echo '<div class="reviews">';
            foreach ($reviews as $review_data) {
                echo '<div class="review-card">';
                    echo '<h3>' . htmlspecialchars($review_data['name']) . '</h3>';
                    if (!empty($review_data['email'])) {
                        echo '<p>' . htmlspecialchars($review_data['email']) . '</p>';
                    }
                    echo '<p>Rating: ' . $review_data['rating'] . '/5</p>';
                    echo '<p>' . nl2br(htmlspecialchars($review_data['review'])) . '</p>';
                    // Add delete button
                    echo '<a href="?id=' . htmlspecialchars($review_data['id']) . '" class="delete-btn">Delete</a>';
                echo '</div>';
            }
            echo '</div>';
        } else {
            echo 'No reviews yet!';
        }
        
        return;
    }
    
    // Validate input
    if (empty($name) || $rating < 1 || $rating > 5) {
        die('Please fill in all required fields!');
    }
    
    // Check if review file exists
    if (!file_exists($filename)) {
        touch($filename);
    }
    
    // Generate unique ID for the review
    $id = uniqid();
    
    // Create array of review data
    $review_data = [
        'id' => $id,
        'name' => htmlspecialchars($name),
        'email' => htmlspecialchars($email),
        'rating' => (int)$rating,
        'review' => htmlspecialchars($review),
        'timestamp' => time()
    ];
    
    // Read existing reviews from file
    $reviews = array();
    if (file_exists($filename)) {
        $contents = file_get_contents($filename);
        $reviews = unserialize($contents);
    }
    
    // Add new review to the beginning of the array
    array_unshift($reviews, $review_data);
    
    // Save reviews back to file
    $success = file_put_contents($filename, serialize($reviews));
    
    if ($success === false) {
        die('Error saving review!');
    }
    
    // Display success message
    echo '<div class="success-message">Review submitted successfully!</div>';
}

// Example usage:
if (isset($_GET['id'])) {
    // Delete review with specified ID
    $filename = 'reviews.txt';
    if (file_exists($filename)) {
        $reviews = unserialize(file_get_contents($filename));
        foreach ($reviews as $key => $review_data) {
            if ($review_data['id'] == $_GET['id']) {
                unset($reviews[$key]);
                break;
            }
        }
        file_put_contents($filename, serialize(array_values($reviews)));
    }
}

// Display form for submitting reviews
echo '<form method="post" action="">';
echo '<h2>Submit a Review</h2>';
echo '<input type="text" name="name" placeholder="Your Name" required><br>';
echo '<textarea name="review" placeholder="Write your review..." required></textarea><br>';
echo '<select name="rating">';
for ($i = 1; $i <= 5; $i++) {
    echo '<option value="' . $i . '">' . $i . ' Star' . ($i != 1 ? 's' : '') . '</option>';
}
echo '</select><br>';
echo '<input type="email" name="email" placeholder="Your Email (optional)">';
echo '<button type="submit">Submit Review</button>';
echo '</form>';

// Display existing reviews
user_review();
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection parameters
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews_products (user_id, product_id, rating, comment, date_created)
                            VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)");

    if ($stmt === false) {
        return "Error: " . mysqli_error($conn);
    }

    // Bind parameters to the statement
    $stmt->bind_param("iiss", $user_id, $product_id, $rating, $comment);

    // Execute the statement
    if ($stmt->execute()) {
        // Get the new average rating for the product
        $average_rating = get_average_rating($product_id);
        
        // Close the statement and connection
        $stmt->close();
        $conn->close();

        return array(
            'status' => 'success',
            'message' => 'Review submitted successfully!',
            'average_rating' => $average_rating
        );
    } else {
        // Return error if execution failed
        $error = "Error: " . $stmt->error;
        $stmt->close();
        $conn->close();
        return array(
            'status' => 'error',
            'message' => $error
        );
    }
}

// Helper function to get average rating for a product
function get_average_rating($product_id) {
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $stmt = $conn->prepare("SELECT AVG(rating) as average FROM reviews_products WHERE product_id = ?");
    
    if ($stmt === false) {
        return "Error: " . mysqli_error($conn);
    }

    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        $average_rating = round($row['average'], 2); // Round to two decimal places
        return $average_rating;
    }

    $stmt->close();
    $conn->close();
}

// Example usage:
$user_id = 1;
$product_id = 1;
$rating = 5;
$comment = "Great product!";

$result = submit_review($user_id, $product_id, $rating, $comment);

if ($result['status'] == 'success') {
    echo "Review submitted successfully!";
    echo "New average rating: " . $result['average_rating'];
} else {
    echo "Error submitting review: " . $result['message'];
}
?>


<?php
// Function to handle and display reviews
function user_review() {
    // Database connection parameters
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Create database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Process form submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize user input
        $user_name = htmlspecialchars($_POST['name']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);

        // Validate input
        if ($rating < 1 || $rating > 5) {
            die("Invalid rating! Rating must be between 1 and 5.");
        }

        if (strlen($comment) == 0) {
            die("Comment cannot be empty!");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, rating, comment, review_date)
                VALUES ('$user_name', '$rating', '$comment', NOW())";

        if ($conn->query($sql) === TRUE) {
            echo "<p>Review submitted successfully!</p>";
        } else {
            die("Error submitting review: " . $conn->error);
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>Rating: " . str_repeat("★", $row['rating']) . "</h4>";
            echo "<p><strong>" . $row['user_name'] . "</strong></p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }

    // Close database connection
    $conn->close();
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($user_id, $product_id, $rating, $review_text) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $review_text = htmlspecialchars(strip_tags($review_text));
    
    // Check if all required fields are filled
    if ($rating < 1 || $rating > 5 || empty($review_text)) {
        return "Please fill in all required fields.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, review_date) 
            VALUES (?, ?, ?, ?, NOW())";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $rating, $review_text);
        
        if (mysqli_stmt_execute($stmt)) {
            return "Review submitted successfully!";
        } else {
            return "Error submitting review: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    // Get all reviews for the product
    $sql = "SELECT r.review_text, r.rating, r.review_date, u.user_name 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = ? 
            ORDER BY r.review_date DESC";
            
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>By " . $row['user_name'] . " - " . date('M j, Y', strtotime($row['review_date'])) . "</h4>";
            echo "<p>" . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['review_text'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "Error displaying reviews: " . mysqli_error($conn);
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average_rating 
            FROM reviews 
            WHERE product_id = ?";
            
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            return number_format((float)$row['average_rating'], 1, '.', '');
        }
    } else {
        return 0;
    }
}

// Example usage:
// Submit a review
$user_id = 1;
$product_id = 1;
$rating = 5;
$review_text = "This is an amazing product!";
echo submitReview($user_id, $product_id, $rating, $review_text);

// Display reviews for product ID 1
echo "<h2>Product Reviews</h2>";
displayReviews(1);

// Get average rating
echo "<p>Average Rating: " . getAverageRating(1) . "/5</p>";

// Close database connection
mysqli_close($conn);
?>


<?php
function user_review() {
    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "reviews";

    // Create database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Handle review submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $rating = $_POST['rating'];
        $comment = trim($_POST['comment']);

        // Validate input
        if (empty($username) || empty($email) || empty($rating) || empty($comment)) {
            echo "Please fill in all required fields.";
        } else {
            // Sanitize inputs to prevent SQL injection
            $username = mysqli_real_escape_string($conn, $username);
            $email = mysqli_real_escape_string($conn, $email);
            $rating = mysqli_real_escape_string($conn, $rating);
            $comment = mysqli_real_escape_string($conn, $comment);

            // Insert review into database
            $sql = "INSERT INTO reviews (username, email, rating, comment)
                    VALUES ('$username', '$email', '$rating', '$comment')";
            
            if ($conn->query($sql) === TRUE) {
                echo "<p style='color: green;'>Thank you for your review!</p>";
            } else {
                echo "Error: " . $sql . "<br>" . $conn->error;
            }
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 15px;'>";
            echo "<h3>" . $row["username"] . "</h3>";
            echo "<p>Rating: " . $row["rating"] . " stars</p>";
            echo "<p>" . $row["comment"] . "</p>";
            echo "<p style='color: #666;'>Posted on: " . $row["date"] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }

    // Close database connection
    $conn->close();
}

// Display the review form
echo "<h2>Submit a Review</h2>
      <form method='post' action='" . $_SERVER['PHP_SELF'] . "'>
          <label for='username'>Username:</label><br>
          <input type='text' id='username' name='username'><br>

          <label for='email'>Email:</label><br>
          <input type='email' id='email' name='email'><br>

          <label for='rating'>Rating:</label><br>";
          
// Create rating radio buttons
for ($i = 1; $i <= 5; $i++) {
    echo "<input type='radio' name='rating' value='$i'>$i stars<br>";
}

echo "<label for='comment'>Comment:</label><br>
      <textarea id='comment' name='comment' rows='4'></textarea><br>
      <input type='submit' value='Submit Review'>
      </form>";

// Call the review function
user_review();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to save review to database
function saveReview($product_id, $name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags(trim($name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags(trim($comment)));

    // Check if all fields are filled
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return false;
    }

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, email, rating, comment) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }

    $stmt->close();
}

// Function to display reviews
function displayReviews($product_id, $conn) {
    $reviews = array();

    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $review = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'timestamp' => $row['timestamp']
        );
        $reviews[] = $review;
    }

    $stmt->close();

    return $reviews;
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("iiis", $userId, $productId, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getProductReviews($productId) {
    global $conn;
    
    $reviews = array();
    
    // Get reviews from database
    $result = mysqli_query($conn, "SELECT r.*, u.username FROM reviews r 
                                  JOIN users u ON r.user_id = u.id 
                                  WHERE r.product_id = $productId ORDER BY r.review_date DESC");
    
    if ($result) {
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = array(
                'id' => $row['id'],
                'user_id' => $row['user_id'],
                'username' => $row['username'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'review_date' => $row['review_date']
            );
        }
    }
    
    return $reviews;
}

// Function to calculate average rating for a product
function getAverageRating($productId) {
    global $conn;
    
    $result = mysqli_query($conn, "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = $productId");
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average_rating'], 1); // Round to one decimal place
}

// Function to display review form
function displayReviewForm() {
    if (isLoggedIn()) { // Assuming you have a login system
        ?>
        <form method="post" action="submit_review.php">
            <div class="rating-container">
                <label for="rating">Rating:</label>
                <select name="rating" id="rating">
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>
            
            <div class="comment-container">
                <label for="comment">Comment:</label>
                <textarea name="comment" id="comment" rows="4"></textarea>
            </div>
            
            <button type="submit" name="submit_review">Submit Review</button>
        </form>
        <?php
    } else {
        echo "Please log in to submit a review.";
    }
}

// Function to display reviews for a product
function displayProductReviews($productId) {
    $reviews = getProductReviews($productId);
    $averageRating = getAverageRating($productId);
    
    if (!empty($reviews)) {
        ?>
        <div class="product-reviews">
            <h3>Product Reviews</h3>
            <p>Average Rating: <?php echo $averageRating; ?> stars</p>
            
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <div class="review-header">
                        <span class="username"><?php echo $review['username']; ?></span>
                        <span class="rating"><?php echo str_repeat("★", $review['rating']); ?></span>
                    </div>
                    <p class="comment"><?php echo $review['comment']; ?></p>
                </div>
            <?php } ?>
        </div>
        <?php
    } else {
        echo "No reviews available for this product.";
    }
}

// Function to check if user is logged in (example)
function isLoggedIn() {
    // Assuming you have a session-based login system
    return isset($_SESSION['user_id']);
}
?>


<?php
// Connect to database
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if (isset($_POST['submit'])) {
    // Sanitize inputs
    $rating = htmlspecialchars($_POST['rating']);
    $review = htmlspecialchars($_POST['review']);

    // Validate input lengths
    if ($rating < 1 || $rating > 5) {
        echo "Invalid rating!";
    } elseif (strlen($review) < 1 || strlen($review) > 500) {
        echo "Review must be between 1 and 500 characters!";
    } else {
        // Insert review into database
        $sql = "INSERT INTO reviews (rating, review_text)
                VALUES (?, ?)";
        
        if ($stmt = mysqli_prepare($conn, $sql)) {
            mysqli_stmt_bind_param($stmt, "is", $rating, $review);
            mysqli_stmt_execute($stmt);
            echo "Thank you for submitting your review!";
            // Reset form
            header("refresh:2;url=reviews.php");
        }
    }
}

// Get reviews from database
$sql = "SELECT rating, review_text, timestamp FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);

// Calculate average rating
$average_rating = 0;
$total_ratings = 0;

$sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews";
$result_avg = mysqli_query($conn, $sql_avg);
if ($row_avg = mysqli_fetch_assoc($result_avg)) {
    $average_rating = round($row_avg['avg_rating'], 1);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .stars {
            font-size: 24px;
        }
        .review-box {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>
    
    <!-- Review form -->
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        <div class="stars">
            Rating:<br>
            <select name="rating">
                <option value="">Select rating</option>
                <option value="5">★★★★★</option>
                <option value="4">★★★★☆</option>
                <option value="3">★★☆☆☆</option>
                <option value="2">★☆☆☆☆</option>
                <option value="1">☆☆☆☆☆</option>
            </select>
        </div><br>

        <div>
            Review:<br>
            <textarea name="review" rows="4" cols="50"></textarea>
        </div><br>

        <input type="submit" name="submit" value="Submit">
    </form>

    <!-- Display reviews -->
    <h3>Customer Reviews</h3>
    <p>Average Rating: <?php echo $average_rating; ?> stars</p>

    <?php
    while ($row = mysqli_fetch_assoc($result)) {
        // Convert rating to stars
        $stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
        
        echo "<div class='review-box'>";
        echo "<p><strong>Rating:</strong> " . $stars . "</p>";
        echo "<p><strong>Review:</strong> " . $row['review_text'] . "</p>";
        echo "<p><em>Posted on: " . $row['timestamp'] . "</em></p>";
        echo "</div>";
    }
    ?>

</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Initialize some sample data (you would typically retrieve this from a database)
$data = array(
    'john_doe' => array(
        'reviews' => array(
            array(
                'id' => 1,
                'text' => 'This is a great product!',
                'rating' => 5,
                'timestamp' => strtotime('2023-01-01')
            ),
            array(
                'id' => 2,
                'text' => 'Good quality, but could be better.',
                'rating' => 4,
                'timestamp' => strtotime('2023-01-02')
            )
        )
    ),
    'jane_smith' => array(
        'reviews' => array(
            array(
                'id' => 3,
                'text' => 'I love this product!',
                'rating' => 5,
                'timestamp' => strtotime('2023-01-03')
            )
        )
    )
);

// Function to add a new review
function addReview($username, $reviewText, $rating) {
    global $data;
    
    // Initialize the user if they don't exist
    if (!isset($data[$username])) {
        $data[$username] = array('reviews' => array());
    }
    
    // Create a new review ID (you could use UUID or database auto-increment)
    $newReviewId = uniqid();
    
    $newReview = array(
        'id' => $newReviewId,
        'text' => $reviewText,
        'rating' => $rating,
        'timestamp' => time()
    );
    
    // Add the new review to the user's reviews
    $data[$username]['reviews'][] = $newReview;
    
    return true;
}

// Function to get all reviews for a user
function getReviews($username) {
    global $data;
    
    if (!isset($data[$username])) {
        return array();
    }
    
    return $data[$username]['reviews'];
}

// Function to delete a review
function deleteReview($username, $reviewId) {
    global $data;
    
    if (!isset($data[$username])) {
        return false;
    }
    
    // Loop through reviews and find the matching ID
    foreach ($data[$username]['reviews'] as $key => $review) {
        if ($review['id'] == $reviewId) {
            unset($data[$username]['reviews'][$key]);
            return true;
        }
    }
    
    return false;
}

// Function to update a review
function updateReview($username, $reviewId, $newText, $newRating) {
    global $data;
    
    if (!isset($data[$username])) {
        return false;
    }
    
    // Loop through reviews and find the matching ID
    foreach ($data[$username]['reviews'] as &$review) {
        if ($review['id'] == $reviewId) {
            $review['text'] = $newText;
            $review['rating'] = $newRating;
            $review['timestamp'] = time(); // Update timestamp
            return true;
        }
    }
    
    return false;
}

// Function to calculate average rating for a user
function getAverageRating($username) {
    global $data;
    
    if (!isset($data[$username]) || empty($data[$username]['reviews'])) {
        return 0;
    }
    
    $total = array_sum(array_column($data[$username]['reviews'], 'rating'));
    $average = $total / count($data[$username]['reviews']);
    
    return round($average, 1);
}

// Example usage:
if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'add_review':
            addReview('john_doe', $_POST['review_text'], $_POST['rating']);
            break;
        
        case 'delete_review':
            deleteReview('john_doe', $_POST['review_id']);
            break;
        
        case 'update_review':
            updateReview('john_doe', $_POST['review_id'], $_POST['new_text'], $_POST['new_rating']);
            break;
    }
}

// Display all reviews for a user
$reviews = getReviews('john_doe');
foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h3>Rating: {$review['rating']}</h3>";
    echo "<p>{$review['text']}</p>";
    echo "<small>".date('Y-m-d H:i:s', $review['timestamp'])."</small>";
    echo "</div>";
}

// Display average rating
echo "Average Rating: ".getAverageRating('john_doe');
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submit_review($product_id, $user_name, $user_email, $rating, $comment) {
    global $conn;

    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment) 
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;

    // Get all reviews for this product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $total_rating = 0;
        while ($row = mysqli_fetch_assoc($result)) {
            $total_rating += $row['rating'];
        }
        $average_rating = number_format(($total_rating / mysqli_num_rows($result)), 1, '.', '');

        echo "<div class='reviews'>";
        echo "<h3>Product Reviews</h3>";
        echo "<p>Average Rating: $average_rating stars</p>";

        // Reset result pointer to display reviews
        mysqli_data_seek($result, 0);

        while ($row = mysqli_fetch_assoc($result)) {
            $user_name = $row['user_name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $date = date('F j, Y', strtotime($row['review_date']));

            echo "<div class='review'>";
            echo "<h4>$user_name</h4>";
            echo "<p>Rating: $rating stars</p>";
            echo "<p>$comment</p>";
            echo "<small>Posted on $date</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "No reviews available for this product.";
    }
}

// Function to display review form
function display_review_form($product_id) {
    echo "<form method='post' action='submit_review.php'>";
    echo "<input type='hidden' name='product_id' value='$product_id'>";
    echo "<div class='form-group'>";
    echo "<label for='user_name'>Name:</label>";
    echo "<input type='text' id='user_name' name='user_name' required>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='user_email'>Email:</label>";
    echo "<input type='email' id='user_email' name='user_email' required>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='rating'>Rating:</label><br>";
    echo "<input type='radio' name='rating' value='5' required> 5 stars<br>";
    echo "<input type='radio' name='rating' value='4'> 4 stars<br>";
    echo "<input type='radio' name='rating' value='3'> 3 stars<br>";
    echo "<input type='radio' name='rating' value='2'> 2 stars<br>";
    echo "<input type='radio' name='rating' value='1'> 1 star";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='comment'>Comment:</label>";
    echo "<textarea id='comment' name='comment' rows='5' required></textarea>";
    echo "</div>";
    
    echo "<button type='submit' name='submit_review'>Submit Review</button>";
    echo "</form>";
}

// Close database connection
mysqli_close($conn);
?>



display_review_form($product_id);


display_reviews($product_id);


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Query to get all reviews
    $sql = "SELECT * FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($row['username']) . "</h3>";
                echo "<p>Rating: " . $row['rating'] . " stars</p>";
                echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Function to handle review submission
function submitReview() {
    global $conn;
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        // Validate input
        if (empty($username) || empty($rating) || empty($comment)) {
            die("Please fill in all required fields!");
        }
        
        if (!preg_match("/^[0-9]+$/", $rating) || $rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars!");
        }
        
        // Sanitize input
        $username = htmlspecialchars(strip_tags($username));
        $comment = htmlspecialchars(strip_tags($comment));
        
        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comment) VALUES ('$username', '$rating', '$comment')";
        
        if ($conn->query($sql)) {
            echo "Thank you for your review!";
            displayReviews();
        } else {
            die("Error: " . $sql . "<br>" . $conn->error);
        }
    }
}

// Main function to handle both submission and display
function userReview() {
    // Create reviews table if not exists
    global $conn;
    
    $sql = "CREATE TABLE IF NOT EXISTS reviews (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(255) NOT NULL,
            rating INT NOT NULL,
            comment TEXT NOT NULL,
            timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          )";
          
    if (!$conn->query($sql)) {
        die("Error creating table: " . $conn->error);
    }
    
    // Display review form
    echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<div>";
            echo "<label for='username'>Name:</label>";
            echo "<input type='text' id='username' name='username' required><br>";
            
            echo "<label for='rating'>Rating (1-5):</label>";
            echo "<input type='number' id='rating' name='rating' min='1' max='5' required><br>";
            
            echo "<label for='comment'>Comment:</label>";
            echo "<textarea id='comment' name='comment' rows='4' cols='50' required></textarea><br>";
            
            echo "<input type='submit' value='Submit Review'>";
        echo "</div>";
    echo "</form>";
    
    // Submit review if form was submitted
    submitReview();
    
    // Display existing reviews
    displayReviews();
}

// Call the main function
userReview();

// Close database connection
$conn->close();
?>


<?php
function submit_review($product_id, $user_id, $rating = 0, $review_text = '') {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'your_database';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die('Connection failed: ' . mysqli_connect_error());
    }

    // Check if the user has already submitted a review for this product
    $check_review_query = "SELECT id FROM reviews WHERE product_id = $product_id AND user_id = $user_id";
    $result = mysqli_query($conn, $check_review_query);

    if (mysqli_num_rows($result) > 0) {
        echo "You have already submitted a review for this product!";
        return;
    }

    // Insert the new review into the database
    $insert_query = "
        INSERT INTO reviews (
            product_id,
            user_id,
            rating,
            review_text,
            submission_date
        ) VALUES (
            $product_id,
            $user_id,
            $rating,
            '$review_text',
            CURRENT_TIMESTAMP
        )
    ";

    if (mysqli_query($conn, $insert_query)) {
        // Update the product's average rating
        $update_avg_rating = "
            UPDATE products 
            SET avg_rating = (
                SELECT AVG(rating) 
                FROM reviews 
                WHERE product_id = $product_id
            ), review_count = (
                SELECT COUNT(*) 
                FROM reviews 
                WHERE product_id = $product_id
            )
            WHERE id = $product_id
        ";
        
        if (mysqli_query($conn, $update_avg_rating)) {
            echo "Thank you for your review!";
        } else {
            echo "Error updating average rating: " . mysqli_error($conn);
        }
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }

    // Close the database connection
    mysqli_close($conn);
}

// Example usage:
$product_id = 1;
$user_id = 5;
$rating = 4;
$review_text = "Great product! Highly recommended.";

submit_review($product_id, $user_id, $rating, $review_text);
?>


<?php
// Function to display and handle product reviews
function display_reviews($product_id) {
    // Database connection parameters
    $host = "localhost";
    $username = "root";
    $password = "";
    $database_name = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database_name);

    // Check if the connection is successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to fetch all reviews for a specific product
    $sql = "SELECT user_name, review_text, review_date FROM reviews WHERE product_id = ?";
    
    // Prepare and bind parameters
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    // Execute the query
    mysqli_stmt_execute($stmt);

    // Get result set
    $result = mysqli_stmt_get_result($stmt);

    // Check if there are any reviews
    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet.</p>";
    } else {
        // Display existing reviews
        while ($row = mysqli_fetch_assoc($result)) {
            $review_date = date('d/m/Y H:i', strtotime($row['review_date']));
            echo "
                <div class='review'>
                    <h3>Review by " . htmlspecialchars($row['user_name']) . "</h3>
                    <p>" . htmlspecialchars($row['review_text']) . "</p>
                    <small>Posted on: $review_date</small>
                </div>
            ";
        }
    }

    // Close the statement
    mysqli_stmt_close($stmt);

    // Display review form for new reviews
    echo "
        <form method='post' action='submit_review.php'>
            <input type='hidden' name='product_id' value='" . $product_id . "'>
            <div class='form-group'>
                <label>Your Name:</label>
                <input type='text' name='user_name' required>
            </div>
            <div class='form-group'>
                <label>Review:</label>
                <textarea name='review_text' required></textarea>
            </div>
            <button type='submit'>Submit Review</button>
        </form>
    ";

    // Close database connection
    mysqli_close($conn);
}
?>


<?php 
$product_id = 1; // Replace with actual product ID
display_reviews($product_id);
?>


<?php
// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

    // Insert into database
    $sql = "INSERT INTO reviews (product_id, user_name, review_text, review_date) 
            VALUES ($product_id, '$user_name', '$review_text', NOW())";

    if (mysqli_query($conn, $sql)) {
        header("Location: product.php?id=$product_id");
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}
?>


<?php
function handleUserReview($db_connection, $user_id, $item_id, $rating, $comment, $review_id = null, $action = 'add') {
    // Validate inputs
    if (!is_numeric($user_id) || !is_numeric($item_id) || !is_numeric($rating)) {
        return array('status' => 'error', 'message' => 'Invalid input data');
    }

    // Check if the user exists
    $stmt = $db_connection->prepare("SELECT id FROM users WHERE id = ?");
    $stmt->execute(array($user_id));
    $result = $stmt->fetch();
    if (!$result) {
        return array('status' => 'error', 'message' => 'Invalid User ID');
    }

    // Check if the review exists (for update action)
    if ($action == 'update') {
        $stmt = $db_connection->prepare("SELECT id FROM reviews WHERE id = ? AND user_id = ?");
        $stmt->execute(array($review_id, $user_id));
        $result = $stmt->fetch();
        if (!$result) {
            return array('status' => 'error', 'message' => 'Invalid Review ID');
        }
    }

    // Validate rating
    if ($rating < 1 || $rating > 5) {
        return array('status' => 'error', 'message' => 'Rating must be between 1 and 5');
    }

    try {
        if ($action == 'add') {
            // Add new review
            $stmt = $db_connection->prepare("INSERT INTO reviews (user_id, item_id, rating, comment) VALUES (?, ?, ?, ?)");
            $stmt->execute(array($user_id, $item_id, $rating, $comment));
            
        } elseif ($action == 'update') {
            // Update existing review
            $stmt = $db_connection->prepare("UPDATE reviews SET rating = ?, comment = ? WHERE id = ?");
            $stmt->execute(array($rating, $comment, $review_id));
        }

        // Calculate and update average rating for the item
        $stmt = $db_connection->prepare("SELECT AVG(rating) as avg_rating FROM reviews WHERE item_id = ?");
        $stmt->execute(array($item_id));
        $avg_result = $stmt->fetch();
        
        $stmt = $db_connection->prepare("UPDATE items SET average_rating = ? WHERE id = ?");
        $stmt->execute(array($avg_result['avg_rating'], $item_id));

        return array('status' => 'success', 'message' => ($action == 'add') ? 'Review added successfully!' : 'Review updated successfully!');

    } catch(PDOException $e) {
        // Handle any database errors
        error_log("Database error: " . $e->getMessage());
        return array('status' => 'error', 'message' => 'An error occurred while processing your review. Please try again later.');
    }
}
?>


// Add a new review
$result = handleUserReview(
    $db_connection,
    123, // User ID
    456, // Item ID
    5,   // Rating (1-5)
    "Great product!", // Comment
    null, // Review ID (not needed for add)
    'add'
);

// Update an existing review
$result = handleUserReview(
    $db_connection,
    123, // User ID
    456, // Item ID
    4,   // New rating
    "Great product but could be better!", // New comment
    789, // Review ID
    'update'
);

// Check the result
if ($result['status'] == 'success') {
    echo $result['message'];
} else {
    echo $result['message'];
}


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview() {
    // Sanitize and validate input
    if (isset($_POST['submit'])) {
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);

        // Basic validation
        if ($name == "" || $email == "" || $rating == 0 || $comment == "") {
            echo "Please fill in all required fields.";
            return;
        }

        // Email format validation
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address.";
            return;
        }

        // Database query to insert review
        global $conn;

        $stmt = mysqli_prepare($conn, "
            INSERT INTO reviews (name, email, rating, comment)
            VALUES (?, ?, ?, ?)
        ");

        mysqli_stmt_bind_param($stmt, "ssis", $name, $email, $rating, $comment);

        if (mysqli_stmt_execute($stmt)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }

        mysqli_stmt_close($stmt);
    }
}

// Display existing reviews
function displayReviews() {
    global $conn;

    $query = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>

<div class='review-form'>
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="">Choose a rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5" required></textarea><br>

        <input type="submit" name="submit" value="Submit Review">
    </form>
</div>

<?php
submitReview();
displayReviews();
?>

</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id VARCHAR(255),
product_id INT,
review_text TEXT,
rating INT,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

if (mysqli_query($conn, $sql)) {
    // echo "Table created successfully";
} else {
    die("Error creating table: " . mysqli_error($conn));
}

// Function to add a review
function add_review($user_id, $product_id, $review_text, $rating) {
    global $conn;
    
    // Sanitize input
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $review_text));
    $rating = intval($rating);
    
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating)
    VALUES ('$user_id', '$product_id', '$review_text', '$rating')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        die("Error adding review: " . mysqli_error($conn));
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average'], 1);
}

// Close database connection
mysqli_close($conn);
?>


// Add a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id'];
    $product_id = $_GET['product_id'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];

    if (add_review($user_id, $product_id, $review_text, $rating)) {
        echo "Thank you for your review!";
    }
}

// Display reviews
$product_id = 1; // Replace with actual product ID
$reviews = get_reviews($product_id);

if ($reviews) {
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo "<div class='review'>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . $row['review_text'] . "</p>";
        echo "<small>Posted on: " . $row['created_at'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
echo "Average Rating: " . get_average_rating($product_id) . "/5";


<?php
function submit_review($user_id, $feedback) {
    // Validate input
    if (empty($user_id) || empty($feedback)) {
        return "Please fill in all required fields";
    }
    
    // Sanitize inputs
    $user_id = htmlspecialchars(trim($user_id));
    $feedback = htmlspecialchars(trim($feedback));
    
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';
    
    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, feedback, date_submitted)
            VALUES (?, ?, NOW())";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "is", $user_id, $feedback);
    
    if (mysqli_stmt_execute($stmt)) {
        return "Thank you for your review!";
    } else {
        error_log("Review submission failed: " . mysqli_error($conn));
        return "Error submitting your review. Please try again later.";
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 123;
$feedback = "This is a great product!";
$result = submit_review($user_id, $feedback);
echo $result;
?>


<?php
// Function to create or update user reviews
function handleUserReview($userId, $reviewText, $rating) {
    // Validate input
    if (!is_numeric($userId)) {
        return "Error: User ID must be a number.";
    }
    
    if (empty($reviewText)) {
        return "Error: Review text cannot be empty.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }

    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // Check if user exists
        $checkUserQuery = "SELECT id FROM users WHERE id = ?";
        $stmt = $conn->prepare($checkUserQuery);
        $stmt->bind_param('i', $userId);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            return "Error: User not found.";
        }

        // Insert review
        $insertReviewQuery = "INSERT INTO reviews (user_id, review_text, rating) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertReviewQuery);
        $stmt->bind_param('isd', $userId, $reviewText, $rating);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error: Review could not be submitted. Please try again later.";
        }
    } catch (mysqli_sql_exception $e) {
        return "Database Error: " . $e->getMessage();
    } finally {
        // Close the database connection
        $conn->close();
    }
}

// Example usage:
$userId = 1;
$reviewText = "This is a great product!";
$rating = 5;

$result = handleUserReview($userId, $reviewText, $rating);
echo $result;
?>


<?php
function userReview($productId) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $dbname = "reviews_db";

    // Connect to database
    $conn = new mysqli($host, $username, $password, $dbname);
    
    // Check for database connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Handle review submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $userId = $_SESSION['user_id']; // Assuming user is logged in
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment)
                VALUES ($productId, $userId, $rating, '$comment')";
        
        if ($conn->query($sql) === TRUE) {
            echo "<script>alert('Thank you for your review!');</script>";
            header("Refresh:0");
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }

    // Display existing reviews
    $sql = "SELECT users.username, reviews.rating, reviews.comment, reviews.submit_date 
            FROM reviews 
            JOIN users ON reviews.user_id = users.id 
            WHERE product_id = $productId 
            ORDER BY submit_date DESC";
    
    $result = $conn->query($sql);

    // Calculate average rating
    $averageRatingSql = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = $productId";
    $averageResult = $conn->query($averageRatingSql);
    $row = $averageResult->fetch_assoc();
    $avgRating = round($row['avg_rating'], 1);

    // Display average rating and reviews
    echo "<div class='review-section'>";
    echo "<h3>Average Rating: " . ($avgRating !== null ? $avgRating : 0) . "/5</h3>";
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<p><strong>" . $row['username'] . "</strong></p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<p class='review-date'>" . $row['submit_date'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }

    // Display review form
    if (isset($_SESSION['user_id'])) { // Only logged in users can leave reviews
        echo "<form method='post'>";
        echo "<h3>Leave a Review</h3>";
        echo "<input type='radio' name='rating' value='5'> ★★★★★<br>";
        echo "<input type='radio' name='rating' value='4'> ★★★★☆<br>";
        echo "<input type='radio' name='rating' value='3'> ★★★☆☆<br>";
        echo "<input type='radio' name='rating' value='2'> ★★☆☆☆<br>";
        echo "<input type='radio' name='rating' value='1'> ★☆☆☆☆<br>";
        echo "<textarea name='comment' placeholder='Write your review here...'></textarea><br>";
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
    } else {
        echo "<p>Please login to leave a review.</p>";
    }

    echo "</div>";

    // Close database connection
    $conn->close();
}
?>


<?php
session_start();
// Include the function definition
require_once 'review_function.php';

// Display reviews for product ID 1
userReview(1);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function display_reviews($product_id) {
    global $conn;
    
    // SQL query to fetch reviews
    $sql = "SELECT review_id, user_name, review_text, rating, review_date 
            FROM reviews 
            WHERE product_id = :product_id 
            ORDER BY review_date DESC";
            
    try {
        // Prepare and execute the statement
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':product_id', $product_id, PDO::PARAM_INT);
        $stmt->execute();
        
        // Check if there are any reviews
        if ($stmt->rowCount() == 0) {
            echo "<div class='no-reviews'>No reviews yet!</div>";
            return;
        }
        
        // Display each review
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $user_name = htmlspecialchars($row['user_name']);
            $review_text = htmlspecialchars($row['review_text']);
            $rating = $row['rating'];
            $review_date = date('F j, Y', strtotime($row['review_date']));
            
            echo "<div class='review'>";
                echo "<h3>$user_name</h3>";
                echo "<p>Rating: " . get_stars($rating) . "</p>";
                echo "<p>$review_text</p>";
                echo "<small>Posted on $review_date</small>";
            echo "</div>";
        }
        
    } catch (PDOException $e) {
        die("Query failed: " . $e->getMessage());
    }
}

function get_stars($rating = 0) {
    // Maximum rating
    $max_rating = 5;
    
    $full_star = "<span class='star'>★</span>";
    $half_star = "<span class='star'>⯨</span>"; // Half star
    $empty_star = "<span class='star'>☆</span>";
    
    $stars_html = '';
    
    if ($rating > 0 && $rating <= $max_rating) {
        for ($i = 1; $i <= $max_rating; $i++) {
            if ($rating >= $i + 0.5) {
                $stars_html .= $full_star;
            } elseif ($rating >= $i - 0.5) {
                $stars_html .= $half_star;
            } else {
                $stars_html .= $empty_star;
            }
        }
    } else {
        // Show empty stars if no rating
        for ($i = 1; $i <= $max_rating; $i++) {
            $stars_html .= $empty_star;
        }
    }
    
    return $stars_html;
}

// Example usage:
if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
    display_reviews($_GET['product_id']);
} else {
    echo "Invalid product ID.";
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $review_text) {
    // Database connection details
    $db_host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $db_name = "reviews_db";

    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL statement to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)
            VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

    if ($stmt = $conn->prepare($sql)) {
        // Bind parameters to the prepared statement
        $stmt->bind_param("iiss", $user_id, $product_id, $rating, $review_text);

        if ($stmt->execute()) {
            // Update product average rating
            $update_avg_rating_sql = "UPDATE products SET 
                                        avg_rating = (SELECT AVG(rating) FROM reviews WHERE product_id = ?)
                                      WHERE id = ?";
            
            $update_stmt = $conn->prepare($update_avg_rating_sql);
            $update_stmt->bind_param("ii", $product_id, $product_id);
            $update_stmt->execute();
            $update_stmt->close();

            // Close statement and connection
            $stmt->close();
            $conn->close();

            return "Review submitted successfully!";
        } else {
            // Close statement and connection
            $stmt->close();
            $conn->close();
            
            return "Error submitting review: " . $stmt->error;
        }
    } else {
        // Close connection
        $conn->close();
        
        return "Error preparing review submission: " . $conn->error;
    }
}
?>


<?php
function get_user_reviews($item_id, $sort_by = 'recent', $page = 1, $items_per_page = 5, $db_connection) {
    // Calculate offset for pagination
    $offset = ($page - 1) * $items_per_page;

    // Get total number of reviews for this item
    $total_reviews_query = "SELECT COUNT(*) as total FROM reviews WHERE item_id = ?";
    $stmt = mysqli_prepare($db_connection, $total_reviews_query);
    mysqli_stmt_bind_param($stmt, "i", $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    $total_reviews = $row['total'];

    // Determine sorting order
    switch ($sort_by) {
        case 'highest-rated':
            $order_by = "rating DESC, review_date DESC";
            break;
        case 'lowest-rated':
            $order_by = "rating ASC, review_date DESC";
            break;
        default: // Most recent by date
            $order_by = "review_date DESC";
    }

    // Get reviews for this item
    $reviews_query = "
        SELECT 
            u.username,
            r.rating,
            r.comment,
            r.review_date
        FROM reviews r
        JOIN users u ON r.user_id = u.user_id
        WHERE r.item_id = ?
        ORDER BY $order_by
        LIMIT ? OFFSET ?";
    
    $stmt = mysqli_prepare($db_connection, $reviews_query);
    mysqli_stmt_bind_param($stmt, "iii", $item_id, $items_per_page, $offset);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Fetch reviews into an array
    $reviews = [];
    while ($row = mysqli_fetch_assoc($result)) {
        $review_date_formatted = date('Y-m-d', strtotime($row['review_date']));
        $reviews[] = [
            'username' => $row['username'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date' => $review_date_formatted
        ];
    }

    // Return the results and pagination info
    return [
        'reviews' => $reviews,
        'total_reviews' => $total_reviews,
        'current_page' => $page,
        'items_per_page' => $items_per_page
    ];
}

// Example usage:
$db_connection = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_errno()) {
    die("Failed to connect to MySQL: " . mysqli_connect_error());
}

$reviews_data = get_user_reviews(
    item_id: 1,
    sort_by: 'highest-rated',
    page: 1,
    items_per_page: 5,
    db_connection: $db_connection
);

// Display reviews
foreach ($reviews_data['reviews'] as $review) {
    echo "<div class='review'>";
    echo "<h3>{$review['username']}</h3>";
    echo "<p>Rating: {$review['rating']} stars</p>";
    echo "<p>{$review['comment']}</p>";
    echo "<small>{$review['date']}</small>";
    echo "</div>";
}

// Display pagination
$total_pages = ceil($reviews_data['total_reviews'] / $reviews_data['items_per_page']);
for ($i = 1; $i <= $total_pages; $i++) {
    echo "<a href='?page=$i'>Page $i</a> ";
}

mysqli_close($db_connection);
?>


<?php
// Function to display user reviews for a product
function get_user_reviews($product_id) {
    // Database connection parameters
    $host = 'localhost';
    $user = 'username';
    $password = 'password';
    $database = 'reviews_db';

    // Create database connection
    $conn = new mysqli($host, $user, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to fetch reviews for the specified product
    $sql = "SELECT user_name, rating, review_text, review_date 
            FROM reviews 
            WHERE product_id = ? 
            ORDER BY review_date DESC";

    // Prepare statement
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
    }

    // Bind parameter
    $stmt->bind_param('i', $product_id);

    // Execute query
    $stmt->execute();

    // Get result
    $result = $stmt->get_result();

    // Generate HTML for reviews
    $reviews_html = '';
    while ($row = $result->fetch_assoc()) {
        $reviews_html .= '<div class="review">';
        $reviews_html .= '<div class="review-header">';
        $reviews_html .= '<span class="user-name">' . htmlspecialchars($row['user_name']) . '</span>';
        $reviews_html .= '<div class="rating">';
        
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                $reviews_html .= '★';
            } else {
                $reviews_html .= '☆';
            }
        }
        
        $reviews_html .= '</div>';
        $reviews_html .= '</div>';
        $reviews_html .= '<div class="review-body">';
        $reviews_html .= htmlspecialchars($row['review_text']);
        $reviews_html .= '</div>';
        $reviews_html .= '<div class="review-footer">';
        $reviews_html .= 'Date: ' . $row['review_date'];
        $reviews_html .= '</div>';
        $reviews_html .= '</div>';
    }

    // Close database connection
    $stmt->close();
    $conn->close();

    return $reviews_html;
}

// Example usage:
$product_id = 1; // Replace with the actual product ID
$reviews = get_user_reviews($product_id);
echo $reviews;
?>


function handleUserReview($conn, $action, $user_id, $product_id, $comment = "", $rating = 0, $review_id = "") {
    // Sanitize input data
    $comment = mysqli_real_escape_string($conn, $comment);
    
    switch ($action) {
        case 'add':
            // Add a new review
            $sql = "INSERT INTO reviews (user_id, product_id, comment, rating, created_at) 
                    VALUES (?, ?, ?, ?, NOW())";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $comment, $rating);
                
                if (mysqli_stmt_execute($stmt)) {
                    // Get the last inserted review ID
                    $review_id = mysqli_insert_id($conn);
                    return array(
                        'status' => 'success',
                        'message' => 'Review added successfully!',
                        'review_id' => $review_id
                    );
                } else {
                    return array(
                        'status' => 'error',
                        'message' => 'Error adding review: ' . mysqli_stmt_error($stmt)
                    );
                }
                mysqli_stmt_close($stmt);
            }
            break;
            
        case 'update':
            // Update an existing review
            $sql = "UPDATE reviews SET comment=?, rating=? WHERE id=? AND user_id=?";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                mysqli_stmt_bind_param($stmt, "sisi", $comment, $rating, $review_id, $user_id);
                
                if (mysqli_stmt_execute($stmt)) {
                    return array(
                        'status' => 'success',
                        'message' => 'Review updated successfully!'
                    );
                } else {
                    return array(
                        'status' => 'error',
                        'message' => 'Error updating review: ' . mysqli_stmt_error($stmt)
                    );
                }
                mysqli_stmt_close($stmt);
            }
            break;
            
        case 'delete':
            // Delete a review
            $sql = "DELETE FROM reviews WHERE id=? AND user_id=?";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                mysqli_stmt_bind_param($stmt, "ii", $review_id, $user_id);
                
                if (mysqli_stmt_execute($stmt)) {
                    return array(
                        'status' => 'success',
                        'message' => 'Review deleted successfully!'
                    );
                } else {
                    return array(
                        'status' => 'error',
                        'message' => 'Error deleting review: ' . mysqli_stmt_error($stmt)
                    );
                }
                mysqli_stmt_close($stmt);
            }
            break;
            
        default:
            // Invalid action
            return array(
                'status' => 'error',
                'message' => 'Invalid action specified!'
            );
    }
}


$result = handleUserReview($conn, 'add', $user_id, $product_id, $comment, $rating);


$result = handleUserReview($conn, 'update', $user_id, $product_id, $new_comment, $new_rating, $review_id);


$result = handleUserReview($conn, 'delete', $user_id, $product_id, "", 0, $review_id);


<?php
// Initialize reviews array (you might want to use a database in a real application)
$reviews = array();

// Function to handle reviews
function user_reviews() {
    global $reviews;
    
    // Review submission form
    if (!isset($_POST['submit_review'])) {
        display_review_form();
    } else {
        // Process submitted review
        $name = htmlspecialchars(trim($_POST['review_name']));
        $rating = (int)$_POST['review_rating'];
        
        // Validate input
        if ($name == "" || $rating < 1 || $rating > 5) {
            echo "Please enter a valid name and rating between 1-5 stars!";
        } else {
            // Store the review (in memory - not persistent)
            $review_id = count($reviews) + 1;
            $reviews[] = array(
                'id' => $review_id,
                'name' => $name,
                'rating' => $rating,
                'date' => date('Y-m-d H:i:s')
            );
            
            // Redirect to view reviews
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    }
}

// Function to display review form
function display_review_form() {
    global $reviews;
    
    ?>
    <html>
    <head>
        <title>Product Review</title>
        <style>
            .stars {
                color: gold;
            }
            .error { color: red; }
        </style>
    </head>
    <body>
        <?php if (!empty($reviews)) { 
            // Display existing reviews
            echo "<h2>Reviews:</h2>";
            foreach ($reviews as $review) {
                $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
                echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;'>";
                echo "<h3>Reviewer: {$review['name']}</h3>";
                echo "<p class='stars'>{$stars}</p>";
                echo "<small>Posted on: {$review['date']}</small>";
                echo "</div>";
            }
        } ?>

        <!-- Review Form -->
        <div style="margin-top: 20px;">
            <?php if (isset($_GET['error'])) { 
                // Display error message
                echo "<div class='error'>Error: Please fill in all required fields!</div>";
            } ?>
            
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <h2>Submit Your Review</h2>
                <p>Name:</p>
                <input type="text" name="review_name" required><br>
                
                <p>Rating (1-5 stars):</p>
                <?php for ($i = 1; $i <= 5; $i++) { 
                    // Display rating options
                    echo "<input type='radio' name='review_rating' value='{$i}' checked {$i == 5 ? 'checked' : ''}>{$i} stars <br>";
                } ?>

                <input type="submit" name="submit_review" value="Submit Review">
            </form>
        </div>
    </body>
    </html>
    <?php
}

// Call the user_reviews function when this script is loaded
if (isset($_GET['action']) && $_GET['action'] == 'reviews') {
    user_reviews();
} else {
    // Main content of your page
    echo "<h1>Welcome to Our Product Page</h1>";
    echo "<a href='".$_SERVER['PHP_SELF']."?action=reviews'>View and Submit Reviews</a>";
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    $query = "SELECT * FROM reviews ORDER BY id DESC";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Review by " . htmlspecialchars($row['author']) . "</h3>";
            echo "<p>" . nl2br(htmlspecialchars($row['content'])) . "</p>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Submitted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Function to submit a new review
function submit_review($author, $content, $rating) {
    global $conn;
    
    // Validate input
    if (empty($author) || empty($content) || !is_numeric($rating)) {
        return false;
    }
    
    $rating = intval($rating);
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Sanitize input
    $author = htmlspecialchars(mysqli_real_escape_string($conn, $author), ENT_QUOTES);
    $content = htmlspecialchars(mysqli_real_escape_string($conn, $content), ENT_QUOTES);
    
    // Insert into database
    $query = "INSERT INTO reviews (author, content, rating, timestamp) 
              VALUES ('$author', '$content', '$rating', NOW())";
              
    if (!mysqli_query($conn, $query)) {
        return false;
    }
    
    return true;
}

// Function to add a rating
function add_rating($id, $rating) {
    global $conn;
    
    // Validate input
    if (!is_numeric($id) || !is_numeric($rating)) {
        return false;
    }
    
    $id = intval($id);
    $rating = intval($rating);
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Update rating in database
    $query = "UPDATE reviews SET rating = '$rating' WHERE id = '$id'";
    
    if (!mysqli_query($conn, $query)) {
        return false;
    }
    
    return true;
}

// Function to validate review input
function validate_review($author, $content, $rating) {
    $errors = array();
    
    if (empty($author)) {
        $errors[] = "Please enter your name.";
    }
    
    if (empty($content)) {
        $errors[] = "Please write a review.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        $errors[] = "Please select a valid rating between 1 and 5.";
    }
    
    return $errors;
}
?>

<!-- Sample HTML form -->
<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .review {
            margin: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input, textarea {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            margin-bottom: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>

<?php
// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $content = $_POST['content'];
    $rating = $_POST['rating'];
    
    $errors = validate_review($author, $content, $rating);
    
    if (empty($errors)) {
        if (submit_review($author, $content, $rating)) {
            echo "<p>Thank you for your review!</p>";
        } else {
            echo "<p>Error submitting review. Please try again.</p>";
        }
    } else {
        foreach ($errors as $error) {
            echo "<p style='color: red'>" . $error . "</p>";
        }
    }
}
?>

<h1>Leave a Review</h1>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <div class="form-group">
        <label for="author">Name:</label>
        <input type="text" id="author" name="author" required>
    </div>
    
    <div class="form-group">
        <label for="content">Review:</label>
        <textarea id="content" name="content" rows="5" required></textarea>
    </div>
    
    <div class="form-group">
        <label>Rating:</label><br>
        <input type="radio" name="rating" value="5" required> 5
        <input type="radio" name="rating" value="4"> 4
        <input type="radio" name="rating" value="3"> 3
        <input type="radio" name="rating" value="2"> 2
        <input type="radio" name="rating" value="1"> 1
    </div>
    
    <button type="submit">Submit Review</button>
</form>

<h2>Reviews</h2>
<?php display_reviews(); ?>

</body>
</html>


<?php
function submit_review($user_id, $rating, $comment = null) {
    try {
        // Validate inputs
        if (!is_numeric($user_id) || $user_id <= 0) {
            throw new Exception("Invalid user ID");
        }
        
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }
        
        // Database connection (assuming $conn is a mysqli object)
        global $conn;
        
        // Prepare and execute the SQL statement
        $sql = "INSERT INTO reviews (user_id, rating, comment) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        
        if ($comment === null) {
            $stmt->bind_param("iis", $user_id, $rating, NULL);
        } else {
            $stmt->bind_param("iis", $user_id, $rating, $comment);
        }
        
        if (!$stmt->execute()) {
            throw new Exception("Error adding review: " . $stmt->error);
        }
        
        return true; // Review added successfully
        
    } catch (Exception $e) {
        // Log the error or handle it as needed
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}
?>


// Example usage:
$user_id = 123;
$rating = 5;
$comment = "Great product!";

if (submit_review($user_id, $rating, $comment)) {
    echo "Review submitted successfully!";
}


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Create review table
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    rating INT,
    comment TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    votes INT DEFAULT 0
)";

try {
    $conn->exec($sql);
} catch (PDOException $e) {
    echo "Error creating table: " . $e->getMessage();
}

// Function to submit a review
function submitReview($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $product_id = intval($product_id);
    $user_id = intval($user_id);
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags($comment));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->execute([$product_id, $user_id, $rating, $comment]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.*, u.name AS username FROM reviews r JOIN users u ON r.user_id = u.id WHERE product_id = ? ORDER BY timestamp DESC");
        $stmt->execute([$product_id]);
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            echo "No reviews available for this product.";
            return;
        }
        
        foreach ($reviews as $review) {
            echo "<div class='review'>";
                echo "<h3>Review by: " . htmlspecialchars($review['username']) . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>Comment: " . htmlspecialchars($review['comment']) . "</p>";
                echo "<div class='vote-section'>";
                    echo "<button onclick='voteReview(" . $review['id'] . ", 1)'>↑ Upvote</button>";
                    echo "<span>Votes: " . $review['votes'] . "</span>";
                    echo "<button onclick='voteReview(" . $review['id'] . ", -1)'>↓ Downvote</button>";
                echo "</div>";
                echo "<small>Posted on: " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
    } catch (PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Function to vote for a review
function voteReview($review_id, $vote_type) {
    global $conn;
    
    // Check if user is logged in
    session_start();
    if (!isset($_SESSION['user_id'])) {
        die("Please login to vote!");
    }
    
    try {
        $current_votes = 0;
        
        // Get current votes
        $stmt = $conn->prepare("SELECT votes FROM reviews WHERE id = ?");
        $stmt->execute([$review_id]);
        if ($row = $stmt->fetch()) {
            $current_votes = $row['votes'];
        }
        
        // Update votes
        $new_votes = $current_votes + $vote_type;
        $new_votes = max($new_votes, 0); // Don't allow negative votes
        
        $stmt = $conn->prepare("UPDATE reviews SET votes = ? WHERE id = ?");
        $stmt->execute([$new_votes, $review_id]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error voting: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        // Check if user is logged in
        session_start();
        if (!isset($_SESSION['user_id'])) {
            die("Please login to submit a review!");
        }
        
        $product_id = $_POST['product_id'];
        $user_id = $_SESSION['user_id'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (submitReview($product_id, $user_id, $rating, $comment)) {
            echo "Thank you for submitting your review!";
        }
    }
}

// Display login form
function displayLoginForm() {
    echo "<form action='login.php' method='post'>";
        echo "<input type='email' name='email' placeholder='Email' required>";
        echo "<input type='password' name='password' placeholder='Password' required>";
        echo "<button type='submit'>Login</button>";
    echo "</form>";
}

// Example login script
if (isset($_POST['login'])) {
    $email = htmlspecialchars(strip_tags($_POST['email']));
    $password = $_POST['password'];
    
    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($row = $stmt->fetch()) {
            if (password_verify($password, $row['password'])) {
                session_start();
                $_SESSION['user_id'] = $row['id'];
                header('Location: review_page.php');
            } else {
                echo "Invalid credentials!";
            }
        } else {
            echo "User not found!";
        }
    } catch (PDOException $e) {
        echo "Error logging in: " . $e->getMessage();
    }
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    try {
        // Create database connection
        $conn = new mysqli($servername, $username, $password, $dbname);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL statement to insert review
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        
        // Prepare and bind parameters
        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }
        $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return true; // Review submitted successfully
        } else {
            throw new Exception("Error submitting review: " . $stmt->error);
        }

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close statement and connection if they exist
        if ($stmt) {
            $stmt->close();
        }
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
try {
    $user_id = 123; // Replace with actual user ID
    $product_id = 456; // Replace with actual product ID
    $rating = 5; // Rating between 1 and 5
    $comment = "This is a great product!"; // Review comment

    if (submit_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    }
} catch (Exception $e) {
    echo "Error submitting review: " . $e->getMessage();
}
?>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $review = htmlspecialchars(trim($_POST['review']));

    // Basic validation
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        $error = "All fields are required!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format!";
    } elseif ($rating < 1 || $rating > 5) {
        $error = "Rating must be between 1 and 5!";
    } else {
        // Insert into database
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, review, created_at) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("ssii", $name, $email, $rating, $review);
        
        if ($stmt->execute()) {
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            $error = "Error submitting review!";
        }
    }
}

// Retrieve reviews
$reviews = array();
$sql = "SELECT * FROM reviews ORDER BY created_at DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $reviews[] = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'email' => $row['email'],
            'rating' => $row['rating'],
            'review' => $row['review'],
            'created_at' => $row['created_at']
        );
    }
}

// Close connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .stars {
            display: inline-block;
            margin-right: 10px;
        }

        .star {
            color: #FFD700;
            font-size: 24px;
        }

        .review-form, .review-list {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .review-item {
            border-bottom: 1px solid #ddd;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <?php if (isset($error)) { ?>
            <p style="color: red;"><?php echo $error; ?></p>
        <?php } ?>

        <h2>Submit a Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name">
            </div>

            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email">
            </div>

            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating">
                    <?php for ($i = 1; $i <= 5; $i++) { ?>
                        <option value="<?php echo $i; ?>"><?php echo $i; ?> Stars</option>
                    <?php } ?>
                </select>
            </div>

            <div>
                <label for="review">Review:</label><br>
                <textarea id="review" name="review" rows="5"></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>
    </div>

    <div class="review-list">
        <h2>Reviews</h2>
        <?php if (empty($reviews)) { ?>
            <p>No reviews yet!</p>
        <?php } else { ?>
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <div class="stars">
                        <?php for ($i = 1; $i <= $review['rating']; $i++) { ?>
                            <span class="star">★</span>
                        <?php } ?>
                    </div>
                    <h3><?php echo $review['name']; ?></h3>
                    <p><?php echo $review['email']; ?></p>
                    <p><?php echo $review['review']; ?></p>
                    <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
                </div>
            <?php } ?>
        <?php } ?>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product ID from hidden field
    $product_id = $_POST['product_id'];
    
    // Validate and sanitize inputs
    $user_name = sanitizeInput($_POST['user_name']);
    $user_email = sanitizeInput($_POST['user_email']);
    $rating = intval($_POST['rating']);
    $review_text = sanitizeInput($_POST['review_text']);

    // Check for empty fields
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($review_text)) {
        die("All fields are required!");
    }

    // Validate email format
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Validate rating (1-5)
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5 stars!");
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, review_text) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $user_name, $user_email, $rating, $review_text);

    if ($stmt->execute()) {
        echo "Thank you for submitting your review!";
    } else {
        die("Error: " . $stmt->error);
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
} else {
    die("Invalid request method!");
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to fetch and display reviews for a product
function getReviewsByProduct($product_id) {
    global $conn;

    $reviews = array();
    
    // Fetch all reviews for the given product ID
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();

    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $reviews[] = array(
            'id' => $row['id'],
            'user_name' => $row['user_name'],
            'rating' => $row['rating'],
            'review_text' => $row['review_text'],
            'created_at' => $row['created_at']
        );
    }

    // Close statement and connection
    $stmt->close();

    return $reviews;
}

// Example usage:
$product_id = 1; // Replace with your product ID
$reviews = getReviewsByProduct($product_id);

foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h3>" . $review['user_name'] . "</h3>";
    echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
    echo "<p>" . $review['review_text'] . "</p>";
    echo "<small>" . date('F j, Y', strtotime($review['created_at'])) . "</small>";
    echo "</div>";
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submitReview($user_id, $rating, $review_text) {
    global $conn;
    
    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, trim($user_id));
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, trim($review_text));
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, rating, review_text, review_date) 
            VALUES ('$user_id', '$rating', '$review_text', NOW())";
    
    if ($conn->query($sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . str_repeat("★", $row['rating']) . "</h3>";
            echo "<p>Review: " . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted by: " . htmlspecialchars($row['user_id']) . " on " . date('F j, Y g:i a', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to calculate average rating
function getAverageRating() {
    global $conn;
    
    // Get all ratings from database
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    
    if ($result && $result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average'], 1); // Round to one decimal place
    }
    return 0;
}

// Function to display star rating
function displayStars($rating) {
    $full_stars = intval($rating);
    $has_half_star = ($rating - $full_stars) >= 0.5;
    
    echo "<div class='stars'>";
    for ($i = 0; $i < $full_stars; $i++) {
        echo "★ ";
    }
    if ($has_half_star) {
        echo "⯨ "; // Half star
    }
    echo "</div>";
}

// Main script
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $review_result = submitReview($_POST['username'], $_POST['rating'], $_POST['review']);
    echo "<p>" . $review_result . "</p>";
}

// Display average rating
echo "<h2>Rating: ";
displayStars(getAverageRating());
echo "</h2>";

// Review form
?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="username" placeholder="Enter your username" required><br>
    <select name="rating" required>
        <option value="">Choose a rating</option>
        <option value="1">1 Star</option>
        <option value="2">2 Stars</option>
        <option value="3">3 Stars</option>
        <option value="4">4 Stars</option>
        <option value="5">5 Stars</option>
    </select><br>
    <textarea name="review" placeholder="Write your review..." required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<?php
// Display all reviews
displayReviews();

// Close database connection
$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle review submission
function submitReview($user_name, $rating, $comment, $conn) {
    // Sanitize inputs to prevent SQL injection and XSS
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $rating = intval(mysqli_real_escape_string($conn, $rating));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Check for valid rating (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, rating, comment, date, status) 
            VALUES ('$user_name', '$rating', '$comment', NOW(), 'pending')";
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to fetch and display approved reviews
function displayReviews($conn) {
    // Fetch all approved reviews ordered by date
    $sql = "SELECT * FROM reviews WHERE status='approved' ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars_decode($row['user_name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars_decode($row['comment']) . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['date'])) . "</small>";
            echo "</div>";
        }
    } else {
        // If no reviews yet
        echo "<p>No reviews available. Be the first to review!</p>";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Submit the review and show feedback
    if (submitReview($user_name, $rating, $comment, $conn)) {
        echo "<div class='success'>Thank you for your review!</div>";
    } else {
        echo "<div class='error'>Error submitting review. Please try again.</div>";
    }
}

// Display existing reviews
displayReviews($conn);

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration file
include 'db_config.php';

// Function to validate input data
function test_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to add review
function add_review($con) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get values from form
        $name = test_input($_POST['name']);
        $email = test_input($_POST['email']);
        $rating = $_POST['rating'];
        $comment = test_input($_POST['comment']);

        // Validate input data
        $errors = array();

        if (empty($name)) {
            $errors['name'] = "Name is required";
        }

        if (empty($email)) {
            $errors['email'] = "Email is required";
        } else {
            // Check email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors['email'] = "Invalid email format";
            }
        }

        if (empty($rating) || !ctype_digit($rating) || $rating < 1 || $rating > 5) {
            $errors['rating'] = "Rating must be between 1 and 5";
        }

        if (empty($comment)) {
            $errors['comment'] = "Comment is required";
        } else {
            // Check comment length
            if (strlen($comment) < 5) {
                $errors['comment'] = "Comment must be at least 5 characters long";
            }
        }

        // If no errors, insert into database
        if (empty($errors)) {
            try {
                // Prepare and execute the query
                $stmt = $con->prepare("INSERT INTO reviews (name, email, rating, comment) 
                    VALUES (:name, :email, :rating, :comment)");
                $stmt->execute(array(
                    ':name' => $name,
                    ':email' => $email,
                    ':rating' => $rating,
                    ':comment' => $comment
                ));
                
                // Success message
                echo "Thank you for your review!";
                return;
            } catch(PDOException $e) {
                die("Connection failed: " . $e->getMessage());
            }
        } else {
            // Display error messages
            foreach ($errors as $key => $value) {
                echo "<div class='alert alert-danger'>{$value}</div>";
            }
        }
    }
}

// Function to display reviews
function display_reviews($con) {
    try {
        // Prepare and execute the query
        $stmt = $con->query("SELECT * FROM reviews ORDER BY id DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Display each review
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>" . $review['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
            echo "<p>Comment: " . $review['comment'] . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "</small>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}
?>


<?php
// Connect to database
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'reviews_db';

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<div class='rating'>Rating: " . $row['rating'] . " stars</div>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<div class='no-reviews'>No reviews available.</div>";
    }
}

// Function to add a new review
function addReview($userName, $reviewText, $rating) {
    global $conn;
    
    // Sanitize inputs
    $userName = htmlspecialchars(trim($userName));
    $reviewText = htmlspecialchars(trim($reviewText));
    $rating = intval($rating);
    
    if ($userName == "" || $reviewText == "") {
        return "Please fill in all required fields.";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating, timestamp)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $userName, $reviewText, $rating);
    
    if ($stmt->execute()) {
        return "Review added successfully!";
    } else {
        return "Error adding review: " . $conn->error;
    }
}

// Function to calculate average rating
function getAverageRating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        return round($row['average'], 1); // Round to one decimal place
    }
    
    return 0;
}

// Close database connection
$conn->close();
?>


<?php
include 'review_functions.php';

$reviewStatus = addReview($_POST['user_name'], $_POST['review_text'], $_POST['rating']);

if ($reviewStatus == "Review added successfully!") {
    header("Location: reviews_page.php"); // Redirect back to reviews page
} else {
    echo $reviewStatus;
}
?>


<?php include 'review_functions.php'; ?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .rating {
            color: #ff9f00;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h2>Product Reviews</h2>
    
    <!-- Average Rating -->
    <div class="average-rating">
        <span>Average Rating:</span>
        <?php 
        $avgRating = getAverageRating();
        echo "<span class='rating'>$avgRating stars</span>";
        ?>
    </div>

    <!-- Review Form -->
    <?php include 'review_form.html'; ?>

    <!-- Display Reviews -->
    <?php displayReviews(); ?>
</body>
</html>


<?php
// Function to create user review
function create_user_review($user_id, $product_id, $rating, $review) {
    // Database connection parameters
    $db_host = 'localhost';
    $db_name = 'your_database_name';
    $db_username = 'your_username';
    $db_password = 'your_password';

    // Connect to the database
    $mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check for connection errors
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    // Sanitize inputs
    $user_id = $mysqli->real_escape_string($user_id);
    $product_id = $mysqli->real_escape_string($product_id);
    $rating = intval($rating);
    $review = $mysqli->real_escape_string($review);

    // Validate input
    if ($rating < 1 || $rating > 5) {
        $mysqli->close();
        return false;
    }

    if (strlen($review) == 0) {
        $mysqli->close();
        return false;
    }

    // Insert review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review, created_at, updated_at)
            VALUES (?, ?, ?, ?, NOW(), NOW())";

    $stmt = $mysqli->prepare($sql);
    if (!$stmt) {
        die("Prepare failed: " . $mysqli->error);
    }

    // Bind parameters
    $stmt->bind_param("iiss", $user_id, $product_id, $rating, $review);

    // Execute the statement
    if ($stmt->execute()) {
        // Get the last inserted ID
        $last_id = $stmt->insert_id;
        $stmt->close();
        $mysqli->close();

        return array(
            'status' => true,
            'message' => 'Review created successfully',
            'review_id' => $last_id
        );
    } else {
        // Return error if failed
        return array(
            'status' => false,
            'message' => 'Error creating review: ' . $stmt->error
        );
    }
}
?>


// Example usage:
$user_id = 1; // Replace with actual user ID
$product_id = 5; // Replace with actual product ID
$rating = 4;
$review_text = "This is a great product!";

$result = create_user_review($user_id, $product_id, $rating, $review_text);

if ($result['status']) {
    echo "Review created successfully. Review ID: " . $result['review_id'];
} else {
    echo "Error creating review: " . $result['message'];
}


<?php
function displayUserReviews($connection, $limit = 5, $sort_by = 'date') {
    // This function displays user reviews with ratings and comments
    // Parameters:
    // - $connection: Database connection object
    // - $limit: Number of reviews to display (default is 5)
    // - $sort_by: Sort by 'date' or 'rating' (default is 'date')

    // Create a helper function to display stars
    $displayStars = function($rating) {
        $stars = '';
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                $stars .= '<span class="star filled">★</span>';
            } else {
                $stars .= '<span class="star empty">☆</span>';
            }
        }
        return $stars;
    };

    // SQL query to fetch reviews
    switch($sort_by) {
        case 'rating':
            $sql = "SELECT * FROM reviews ORDER BY rating DESC LIMIT ?";
            break;
        default:
            $sql = "SELECT * FROM reviews ORDER BY review_date DESC LIMIT ?";
    }

    try {
        // Prepare and execute the query
        $stmt = $connection->prepare($sql);
        $stmt->bind_param("i", $limit);
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo '<div class="reviews-container">';
            
            while ($row = $result->fetch_assoc()) {
                echo '<div class="review-item">';
                    // Display user information
                    echo '<div class="user-info">';
                        echo '<span class="username">'.$row['username'].'</span>';
                        echo '<span class="rating">'.$displayStars($row['rating']).'</span>';
                    echo '</div>';
                    
                    // Display review content
                    echo '<div class="review-content">';
                        echo '<p>'.$row['comment'].'</p>';
                        echo '<small class="date">'.date('F j, Y', $row['review_date']).'</small>';
                    echo '</div>';
                echo '</div>';
            }
            
            echo '</div>';
        } else {
            echo 'No reviews available.';
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


$connection = new mysqli('localhost', 'username', 'password', 'database_name');
if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}


// Display 5 most recent reviews
displayUserReviews($connection);

// Display 10 highest-rated reviews sorted by rating
displayUserReviews($connection, 10, 'rating');


<?php
// Database configuration
$host = 'localhost';
$dbname = 'review_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($user_name, $email, $rating, $comments, $conn) {
    // Validate input
    if(empty($user_name) || empty($email) || empty($rating)) {
        return "Please fill in all required fields!";
    }

    // Check email format
    if(!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, email, rating, comments, review_date) 
                              VALUES (:user_name, :email, :rating, :comments, NOW())");
        
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comments', $comments);

        $stmt->execute();

        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        // Get all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if(empty($reviews)) {
            echo "<p>No reviews available.</p>";
            return;
        }

        // Display reviews in a table
        echo "<table border='1' cellpadding='5'>";
        echo "<tr><th>Name</th><th>Email</th><th>Rating</th><th>Comments</th><th>Date</th></tr>";

        foreach ($reviews as $review) {
            echo "<tr>";
            echo "<td>" . htmlspecialchars($review['user_name']) . "</td>";
            echo "<td>" . htmlspecialchars($review['email']) . "</td>";
            echo "<td>" . htmlspecialchars($review['rating']) . "/5</td>";
            echo "<td>" . nl2br(htmlspecialchars($review['comments'])) . "</td>";
            echo "<td>" . date('Y-m-d H:i', strtotime($review['review_date'])) . "</td>";
            echo "</tr>";
        }

        echo "</table>";
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Check if form is submitted
if(isset($_POST['submit'])) {
    // Call submitReview function with the input values
    $result = submitReview($_POST['user_name'], $_POST['email'], $_POST['rating'], $_POST['comments'], $conn);
    echo $result;
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .review-form input, .review-form textarea { width: 100%; margin: 5px 0; padding: 8px; }
        .review-form select { width: 200px; padding: 8px; }
        table { margin-top: 20px; border-collapse: collapse; }
        th, td { padding: 10px; text-align: left; }
    </style>
</head>
<body>

<h1>Product Review System</h1>

<div class="review-form">
    <form method="post" action="">
        <input type="text" name="user_name" placeholder="Enter your name" required><br>
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>
        <textarea name="comments" placeholder="Write your review..." rows="4" required></textarea><br>
        <input type="submit" name="submit" value="Submit Review">
    </form>
</div>

<?php displayReviews($conn); ?>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review = mysqli_real_escape_string($conn, $_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate input
        if (empty($name) || empty($review)) {
            return "Please fill in all required fields!";
        }

        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5 stars!";
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, review_text, rating, submission_date)
                VALUES ('$name', '$review', '$rating', NOW())";

        if (mysqli_query($conn, $sql)) {
            return "Thank you for submitting your review!";
        } else {
            return "Error submitting review: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $name = $row['name'];
            $review_text = $row['review_text'];
            $rating = $row['rating'];
            $submission_date = date('F j, Y g:i a', strtotime($row['submission_date']));

            // Display each review
            echo "<div class='review'>";
            echo "<h3>$name</h3>";
            echo "<p>Rating: $rating stars</p>";
            echo "<p>$review_text</p>";
            echo "<small>Submitted on: $submission_date</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// review.php - A simple user review system

session_start();

// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if user is authenticated (logged in)
    if (!isset($_SESSION['user_id'])) {
        die("Please login to post a review.");
    }

    // Sanitize input data
    $name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['name']));
    $comment = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['comment']));

    if (empty($name) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, name, comment, post_date)
            VALUES ('".$_SESSION['user_id']."', '$name', '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        echo "<script>alert('Review submitted successfully!');</script>";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Fetch and display existing reviews
$sql = "SELECT name, comment, post_date FROM reviews ORDER BY post_date DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>".$row['name']."</h3>";
        echo "<p>".$row['comment']."</p>";
        echo "<small>Posted on: ".$row['post_date']."</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet!";
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
            background-color: #f9f9f9;
        }
        .review h3 {
            margin-top: 0;
            color: #333;
        }
        .review p {
            line-height: 1.6;
            color: #666;
        }
        .review small {
            color: #999;
            font-size: 0.8em;
        }
    </style>
</head>
<body>

<?php if (isset($_SESSION['user_id'])) { ?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="name" placeholder="Your Name" required><br><br>
    <textarea name="comment" placeholder="Write your review here..." rows="4" required></textarea><br><br>
    <button type="submit">Submit Review</button>
</form>
<?php } else { ?>
<p>Please login to post a review.</p>
<?php } ?>

</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$db_name = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display all reviews
function displayReviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r 
                                JOIN users u ON r.user_id = u.id 
                                WHERE product_id = :product_id 
                                ORDER BY review_date DESC");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Calculate average rating
        $average_rating = 0;
        $total_ratings = count($reviews);
        
        foreach ($reviews as $review) {
            $average_rating += $review['rating'];
        }
        
        if ($total_ratings > 0) {
            $average_rating /= $total_ratings;
        } else {
            $average_rating = 0;
        }
        
        echo "<div class='average-rating'>";
        echo "Average Rating: " . number_format($average_rating, 1) . "/5";
        echo "</div>";
        
        foreach ($reviews as $review) {
            $stars_html = getStarsHTML($review['rating']);
            
            echo "<div class='review'>";
            echo "<h3>Reviewed by " . htmlspecialchars($review['username']) . "</h3>";
            echo "<div class='stars'>$stars_html</div>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted on: " . $review['review_date'] . "</small><br>";
            
            // Show edit button if user is logged in
            if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $review['user_id']) {
                echo "<a href='edit_review.php?review_id=" . $review['id'] . "' class='edit-btn'>Edit Review</a>";
            }
            
            echo "</div>";
        }
        
    } catch (PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Function to add a new review
function addReview($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    try {
        // Validate input
        if (empty($product_id) || empty($user_id) || empty($rating) || empty($comment)) {
            throw new Exception("All fields are required");
        }
        
        $stmt = $conn->prepare("INSERT INTO reviews SET 
                                product_id = :product_id,
                                user_id = :user_id,
                                rating = :rating,
                                comment = :comment,
                                review_date = NOW()");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            header("Location: reviews.php?product_id=$product_id");
            exit();
        }
        
    } catch (PDOException $e) {
        die("Error adding review: " . $e->getMessage());
    }
}

// Function to edit a review
function getReviewById($review_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE id = :review_id");
        $stmt->bindParam(':review_id', $review_id);
        $stmt->execute();
        
        if ($stmt->rowCount() == 1) {
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } else {
            throw new Exception("Review not found");
        }
    } catch (PDOException $e) {
        die("Error fetching review: " . $e->getMessage());
    }
}

// Function to update edited review
function updateReview($review_id, $rating, $comment) {
    global $conn;
    
    try {
        // Validate input
        if (empty($rating) || empty($comment)) {
            throw new Exception("All fields are required");
        }
        
        $stmt = $conn->prepare("UPDATE reviews SET 
                                rating = :rating,
                                comment = :comment
                              WHERE id = :review_id");
        
        $stmt->bindParam(':review_id', $review_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            header("Location: reviews.php?product_id=$_GET[product_id]");
            exit();
        }
    } catch (PDOException $e) {
        die("Error updating review: " . $e->getMessage());
    }
}

// Function to delete a review
function deleteReview($review_id, $user_id) {
    global $conn;
    
    try {
        // Verify user ownership of the review
        if ($user_id != $_SESSION['user_id']) {
            throw new Exception("You are not authorized to delete this review");
        }
        
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id = :review_id");
        $stmt->bindParam(':review_id', $review_id);
        
        if ($stmt->execute()) {
            header("Location: reviews.php?product_id=$_GET[product_id]");
            exit();
        }
    } catch (PDOException $e) {
        die("Error deleting review: " . $e->getMessage());
    }
}

// Helper function to display stars
function getStarsHTML($rating) {
    $stars = '';
    
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= '<span class="star filled">★</span>';
        } else {
            $stars .= '<span class="star empty">☆</span>';
        }
    }
    
    return $stars;
}

// Close database connection
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                r.id,
                u.username AS author,
                r.content,
                r.rating,
                r.created_at,
                r.updated_at
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE r.product_id = ?
            ORDER BY r.created_at DESC
        ");
        
        $stmt->execute([$productId]);
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            echo "<p>No reviews yet. Be the first to review this product!</p>";
            return;
        }
        
        foreach ($reviews as $review) {
            $date = $review['updated_at'] ? $review['updated_at'] : $review['created_at'];
            $displayDate = date('M j, Y', strtotime($date));
            
            echo "<div class='review'>";
                echo "<div class='author'> Reviewed by " . htmlspecialchars($review['author']) . "</div>";
                echo "<div class='content'>" . nl2br(htmlspecialchars($review['content'])) . "</div>";
                echo "<div class='rating'>";
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $review['rating']) {
                            echo "<span class='star'>★</span>";
                        } else {
                            echo "<span class='star'>☆</span>";
                        }
                    }
                echo "</div>";
                echo "<div class='date'>" . $displayDate . "</div>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Function to add a new review
function addReview($productId, $userId, $content, $rating) {
    global $conn;
    
    try {
        // Check if user has already reviewed this product
        $checkStmt = $conn->prepare("
            SELECT id FROM reviews 
            WHERE product_id = ? AND user_id = ?
        ");
        $checkStmt->execute([$productId, $userId]);
        
        if ($checkStmt->rowCount() > 0) {
            return false; // User already reviewed this product
        }
        
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            SET 
                product_id = ?,
                user_id = ?,
                content = ?,
                rating = ?,
                created_at = NOW(),
                updated_at = NOW()
        ");
        
        return $stmt->execute([$productId, $userId, htmlspecialchars($content), $rating]);
    } catch(PDOException $e) {
        die("Error adding review: " . $e->getMessage());
    }
}

// Function to edit a review
function editReview($reviewId, $content, $rating) {
    global $conn;
    
    try {
        // Check if the review exists and belongs to the current user
        $checkStmt = $conn->prepare("
            SELECT id FROM reviews 
            WHERE id = ? AND user_id = ?
        ");
        $checkStmt->execute([$reviewId, $_SESSION['user_id']]);
        
        if ($checkStmt->rowCount() == 0) {
            return false; // Review not found or unauthorized
        }
        
        $stmt = $conn->prepare("
            UPDATE reviews 
            SET 
                content = ?,
                rating = ?,
                updated_at = NOW()
            WHERE id = ?
        ");
        
        return $stmt->execute([htmlspecialchars($content), $rating, $reviewId]);
    } catch(PDOException $e) {
        die("Error editing review: " . $e->getMessage());
    }
}

// Function to delete a review
function deleteReview($reviewId) {
    global $conn;
    
    try {
        // Check if the review exists and belongs to the current user
        $checkStmt = $conn->prepare("
            SELECT id FROM reviews 
            WHERE id = ? AND user_id = ?
        ");
        $checkStmt->execute([$reviewId, $_SESSION['user_id']]);
        
        if ($checkStmt->rowCount() == 0) {
            return false; // Review not found or unauthorized
        }
        
        $stmt = $conn->prepare("
            DELETE FROM reviews 
            WHERE id = ?
        ");
        
        return $stmt->execute([$reviewId]);
    } catch(PDOException $e) {
        die("Error deleting review: " . $e->getMessage());
    }
}

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Create table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(100) NOT NULL,
    user_email VARCHAR(100) NOT NULL,
    rating INT NOT NULL,
    comment TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";
mysqli_query($conn, $sql);

// Function to handle review submission and display
function user_reviews() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        // Validate input
        $errors = array();
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            $errors[] = "All fields are required!";
        }

        if (!isset($rating) || $rating < 1 || $rating > 5) {
            $errors[] = "Please select a valid rating (1-5 stars)";
        }

        // If no errors, insert into database
        if (empty($errors)) {
            // Sanitize input
            $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
            $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
            $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

            // Insert review into database
            $sql = "INSERT INTO reviews (user_name, user_email, rating, comment) 
                    VALUES ('$name', '$email', '$rating', '$comment')";
            mysqli_query($conn, $sql);
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>" . $row['user_email'] . "</p>";
            echo display_rating($row['rating']);
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }

    // Display review form
    display_review_form();
}

// Function to display rating stars
function display_rating($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "<span class='star'>★</span>";
        } else {
            $stars .= "<span class='star'>☆</span>";
        }
    }
    return $stars;
}

// Function to display review form
function display_review_form() {
    // Check if there are any errors
    if (isset($errors) && !empty($errors)) {
        foreach ($errors as $error) {
            echo "<div class='error'>" . $error . "</div>";
        }
    }

    // Display the review form
    echo "<form method='post'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='name'><br><br>";

    echo "<label for='email'>Email:</label>";
    echo "<input type='email' id='email' name='email'><br><br>";

    echo "<label for='rating'>Rating:</label>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<input type='radio' id='rating$i' name='rating' value='$i'>";
        echo "<label for='rating$i'>$i stars</label> ";
    }
    echo "<br><br>";

    echo "<label for='comment'>Comment:</label>";
    echo "<textarea id='comment' name='comment'></textarea><br><br>";

    echo "<input type='submit' value='Submit Review'>";
    echo "</form>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to display user reviews
function displayUserReviews($page = 1) {
    // Database configuration
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';

    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Number of reviews per page
    $per_page = 5;

    // Calculate the offset for pagination
    $offset = ($page - 1) * $per_page;

    // SQL query to fetch reviews
    $sql = "SELECT review_id, user_name, rating, comment, date 
            FROM reviews 
            ORDER BY date DESC 
            LIMIT $offset, $per_page";

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Calculate total number of reviews
    $total_sql = "SELECT COUNT(*) AS total_reviews FROM reviews";
    $total_result = mysqli_query($conn, $total_sql);
    $total_row = mysqli_fetch_assoc($total_result);
    $total_reviews = $total_row['total_reviews'];

    // Calculate total pages
    $total_pages = ceil($total_reviews / $per_page);

    // Display reviews
    $output = '<div class="reviews-container">';

    while ($row = mysqli_fetch_assoc($result)) {
        $review_id = $row['review_id'];
        $user_name = $row['user_name'];
        $rating = $row['rating'];
        $comment = $row['comment'];
        $date = $row['date'];

        // Format date
        $formatted_date = date('F j, Y', strtotime($date));

        $output .= '<div class="review">';
        $output .= '<div class="review-header">';
        $output .= "<h3>$user_name</h3>";
        $output .= "<span class='rating'>$rating/5</span>";
        $output .= "</div>";
        $output .= "<p class='comment'>$comment</p>";
        $output .= "<small class='date'>$formatted_date</small>";
        $output .= '</div>';
    }

    // Display pagination
    $output .= '<div class="pagination">';
    for ($i = 1; $i <= $total_pages; $i++) {
        if ($i == $page) {
            $output .= "<a href='?page=$i' class='active'>$i</a>";
        } else {
            $output .= "<a href='?page=$i'>$i</a>";
        }
    }
    $output .= '</div>';

    // Close database connection
    mysqli_close($conn);

    return $output;
}

// Example usage in your main PHP script:
?>
<!DOCTYPE html>
<html>
<head>
    <style>
        .reviews-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        .rating {
            color: #ff8c00;
            font-weight: bold;
        }
        .comment {
            font-size: 16px;
            line-height: 1.5;
        }
        .date {
            color: #666;
            font-size: 12px;
        }
        .pagination {
            text-align: center;
            margin-top: 20px;
        }
        .pagination a {
            padding: 8px 16px;
            margin: 4px;
            border: 1px solid #ddd;
            background-color: #fff;
            text-decoration: none;
            color: #333;
            cursor: pointer;
        }
        .pagination a.active {
            background-color: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
    </style>
</head>
<body>
<?php
// Include the function file
require_once('review_function.php');

// Get the current page from URL or set default to 1
$page = isset($_GET['page']) ? intval($_GET['page']) : 1;

// Display reviews with pagination
echo displayUserReviews($page);
?>
</body>
</html>


<?php
// submit_review.php

// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get product ID from URL or session (modify as needed)
$product_id = 1; // Example product ID

// Validate and sanitize input
$name = htmlspecialchars(trim($_POST['name']));
$email = htmlspecialchars(trim($_POST['email']));
$rating = intval($_POST['rating']);
$comment = htmlspecialchars(trim($_POST['comment']));

if ($name == "" || $email == "" || $comment == "") {
    die("All fields are required!");
}

if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Invalid email format!");
}

if ($rating < 1 || $rating > 5) {
    die("Rating must be between 1 and 5!");
}

// Insert review into database
$sql = "INSERT INTO reviews (product_id, name, email, rating, comment)
VALUES ('$product_id', '$name', '$email', '$rating', '$comment')";

if (mysqli_query($conn, $sql)) {
    // Redirect to thank you page or show success message
    header("Location: review_success.php");
} else {
    die("Error inserting review: " . mysqli_error($conn));
}

mysqli_close($conn);
?>


<?php
// display_reviews.php

function fetch_reviews($product_id) {
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    $conn = mysqli_connect($servername, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    if ($result === FALSE) {
        die("Error fetching reviews: " . mysqli_error($conn));
    }

    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }

    mysqli_close($conn);
    return $reviews;
}

function display_reviews() {
    global $product_id; // Make sure to set product_id appropriately

    $reviews = fetch_reviews($product_id);

    if (empty($reviews)) {
        echo "<p>No reviews available yet.</p>";
        return;
    }

    foreach ($reviews as $review) {
        $rating_stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
        $date = date('F j, Y', strtotime($review['review_date']));

        echo <<<EOD
<div class="review">
    <h3>{$review['name']}</h3>
    <p>Rating: {$rating_stars}</p>
    <p>Email: {$review['email']}</p>
    <p>Comment: {$review['comment']}</p>
    <small>Reviewed on: $date</small>
</div><br>

EOD;
    }
}
?>


function calculate_average_rating($product_id) {
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    $conn = mysqli_connect($servername, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = $product_id";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    $average_rating = round($row['average'], 1);
    echo "<h2>Average Rating: {$average_rating}/5</h2>";

    mysqli_close($conn);
}


<?php
// Database connection configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'review_system';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate rating (assuming 1-5 scale)
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Invalid rating value. Must be between 1 and 5.");
    }
    
    // Get current timestamp
    $timestamp = time();
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$timestamp')";
            
    if (!mysqli_query($conn, $sql)) {
        throw new Exception("Error adding review: " . mysqli_error($conn));
    }
    
    return true;
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get all reviews for the specified product
    $sql = "SELECT r.*, u.username 
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE r.product_id = '$product_id'
            ORDER BY r.timestamp DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        throw new Exception("Error retrieving reviews: " . mysqli_error($conn));
    }
    
    // Convert result to array of reviews
    $reviews = [];
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = [
            'id' => $row['id'],
            'user_id' => $row['user_id'],
            'username' => $row['username'],
            'product_id' => $row['product_id'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'timestamp' => $row['timestamp']
        ];
    }
    
    return $reviews;
}

// Function to display reviews
function display_reviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        $date = date('F j, Y g:i a', $review['timestamp']);
        
        // Display review
        echo "
            <div class='review-container'>
                <div class='review-header'>
                    <span class='username'>{$review['username']}</span>
                    <span class='rating'>{$review['rating']} stars</span>
                    <span class='date'>{$date}</span>
                </div>
                <p class='comment'>{$review['comment']}</p>
            </div>
        ";
    }
}

// Example usage:
try {
    // Add a review
    if (isset($_POST['submit_review'])) {
        $user_id = $_SESSION['user_id']; // Assuming user is authenticated
        $product_id = 1; // Replace with actual product ID
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        add_review($user_id, $product_id, $rating, $comment);
    }
    
    // Get and display reviews for a product
    $product_id = 1; // Replace with actual product ID
    $reviews = get_reviews($product_id);
    display_reviews($reviews);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
mysqli_close($conn);

?>


<?php
function userReview($productId = 1, $name = '', $rating = 0, $comment = '', $add = false) {
    // Database connection parameters
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    // Create database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    if ($add) {
        // Insert new review into the database
        if (!empty($name) && !empty($comment) && $rating >= 1 && $rating <=5) {
            try {
                $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, rating, comment, timestamp) 
                                      VALUES (?, ?, ?, ?, NOW())");
                $stmt->bind_param("isii", $productId, $name, $rating, time());
                
                if ($stmt->execute()) {
                    // Success: Redirect back to the page
                    header("Location: ?product=$productId");
                    exit();
                } else {
                    echo "Error adding review: " . $conn->error;
                }
            } catch (mysqli_sql_exception $e) {
                echo "Database error occurred";
            }
        }
    }

    // Get reviews for this product
    $reviewsQuery = $conn->query("SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY timestamp DESC");
    
    // Calculate average rating
    $averageRatingQuery = $conn->query("SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = '$productId'");
    $averageRow = $averageRatingQuery->fetch_assoc();
    $averageRating = number_format($averageRow['avg_rating'], 1);

    // Display reviews and average rating
    echo "<div class='reviews-container'>";
    
    // Show average rating
    echo "<div class='average-rating'>
            Average Rating: <span style='font-size:24px; font-weight:bold;'>$averageRating</span>/5
          </div>";

    if ($reviewsQuery->num_rows > 0) {
        while($row = $reviewsQuery->fetch_assoc()) {
            $reviewName = htmlspecialchars($row['name']);
            $reviewRating = $row['rating'];
            $reviewComment = htmlspecialchars($row['comment']);
            $timestamp = date('F j, Y', $row['timestamp']);

            echo "<div class='review'>";
            echo "<h3>$reviewName</h3>";
            echo "<p>Rating: ";
            for ($i=1; $i<=$reviewRating; $i++) {
                echo "★";
            }
            echo "</p>";
            echo "<p>$reviewComment</p>";
            echo "<small>$timestamp</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }

    // Display review form
    if (!$add) {
        echo "<div class='review-form'>";
        echo "<h2>Write a Review</h2>";
        echo "<form method='post' action='?product=$productId&add=1'>";
        echo "<input type='hidden' name='productId' value='$productId'>";
        echo "<p>Your Name:<br>";
        echo "<input type='text' name='name' required></p>";
        echo "<p>Rating:<br>";
        echo "<select name='rating' required>";
        for ($i=1; $i<=5; $i++) {
            echo "<option value='$i'>$i stars</option>";
        }
        echo "</select></p>";
        echo "<p>Comment:<br>";
        echo "<textarea name='comment' required></textarea></p>";
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
        echo "</div>";
    }

    $conn->close();
}

// Call the function
if (isset($_GET['product'])) {
    userReview(
        $_GET['product'],
        isset($_POST['name']) ? $_POST['name'] : '',
        isset($_POST['rating']) ? $_POST['rating'] : 0,
        isset($_POST['comment']) ? $_POST['comment'] : '',
        isset($_GET['add']) && $_GET['add'] == 1
    );
} else {
    echo "Product ID not specified.";
}
?>


<?php
function submit_review($review_data, $db_host, $db_user, $db_password, $db_name) {
    // Extract review data
    $rating = isset($review_data['rating']) ? intval($review_data['rating']) : 0;
    $comment = isset($review_data['comment']) ? trim($review_data['comment']) : '';

    // Database connection
    $conn = mysqli_connect($db_host, $db_user, $db_password, $db_name);
    
    if (!$conn) {
        throw new Exception("Database connection failed: " . mysqli_error($conn));
    }

    try {
        // Sanitize input data
        $rating = mysqli_real_escape_string($conn, $rating);
        $comment = mysqli_real_escape_string($conn, $comment);

        // Validate rating and comment
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5.");
        }

        if (empty($comment)) {
            throw new Exception("Comment cannot be empty.");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (rating, comment) VALUES ('$rating', '$comment')";
        
        if (!mysqli_query($conn, $sql)) {
            throw new Exception("Error inserting review: " . mysqli_error($conn));
        }

        return true;

    } catch (Exception $e) {
        // Log the error or handle it as needed
        echo 'Error: ' . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}
?>


$review_data = array(
    'rating' => 5,
    'comment' => "Great product! Highly recommend."
);

$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

try {
    if (submit_review($review_data, $db_host, $db_user, $db_password, $db_name)) {
        echo "Review submitted successfully!";
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function getUserReviews($userId = null, $reviewId = null) {
    global $conn;

    // Validate input parameters
    if (!is_null($userId) && !ctype_digit((string)$userId)) {
        throw new InvalidArgumentException('User ID must be a positive integer');
    }
    
    if (!is_null($reviewId) && !ctype_digit((string)$reviewId)) {
        throw new InvalidArgumentException('Review ID must be a positive integer');
    }

    $reviews = array();

    try {
        // If both parameters are null, get all reviews
        if (is_null($userId) && is_null($reviewId)) {
            $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
            
            $stmt = $conn->prepare($sql);
            $stmt->execute();
            $result = $stmt->get_result();

            while ($row = $result->fetch_assoc()) {
                $reviews[] = $row;
            }
        } 
        // If reviewId is provided, get a specific review
        elseif (!is_null($reviewId)) {
            $sql = "SELECT * FROM reviews WHERE review_id = ?";
            
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('i', $reviewId);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($row = $result->fetch_assoc()) {
                $reviews[] = $row;
            }
        } 
        // If userId is provided, get all reviews for that user
        else {
            $sql = "SELECT * FROM reviews WHERE user_id = ?";
            
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('i', $userId);
            $stmt->execute();
            $result = $stmt->get_result();

            while ($row = $result->fetch_assoc()) {
                $reviews[] = $row;
            }
        }

        return array(
            'status' => REVIEW_SUCCESS,
            'data' => $reviews
        );

    } catch (Exception $e) {
        return array(
            'status' => REVIEW_ERROR,
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection if it's open
        if ($conn && $stmt) {
            $stmt->close();
        }
    }
}

// Example usage:
try {
    // Get all reviews
    $allReviews = getUserReviews();
    print_r($allReviews);

    // Get reviews by user ID
    $userId = 1;
    $userReviews = getUserReviews($userId);
    print_r($userReviews);

    // Get a specific review by review ID
    $reviewId = 5;
    $specificReview = getUserReviews(null, $reviewId);
    print_r($specificReview);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


<?php
// Function to handle user reviews
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection
    global $conn;

    try {
        // Check if the user has already reviewed this product
        $check_query = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ii", $user_id, $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            return "You have already reviewed this product!";
        }

        // Insert the new review
        $insert_query = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                        VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
        $stmt->execute();

        // Update the product's average rating
        $update_avg_rating = "UPDATE products SET average_rating = 
                            (SELECT AVG(rating) FROM reviews WHERE product_id = ?)
                            WHERE id = ?";
        $stmt = $conn->prepare($update_avg_rating);
        $stmt->bind_param("ii", $product_id, $product_id);
        $stmt->execute();

        return "Review submitted successfully!";

    } catch (Exception $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Example usage:
$review_result = submit_review(1, 5, 4, "Great product!");
echo $review_result;
?>


<?php
// Function to handle user reviews
function submitReview($name, $email, $rating, $comment, $product_id) {
    // Sanitize inputs
    $name = htmlspecialchars(trim($name));
    $email = htmlspecialchars(trim($email));
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));

    // Validate input fields
    if ($name == "" || $email == "" || $rating < 1 || $rating > 5) {
        return "Please fill in all required fields with valid information.";
    }

    // Database connection
    include('db_config.php'); // Include database configuration file

    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, email, rating, comment, product_id) VALUES (?, ?, ?, ?, ?)");
    
    if ($stmt === false) {
        return "Error preparing the query.";
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "ssisi", $name, $email, $rating, $comment, $product_id);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        // Close the statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return "Thank you for your review!";
    } else {
        // Handle any errors
        $error = mysqli_error($conn);
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return "Error submitting your review: $error";
    }
}

// Example usage:
// if (isset($_POST['submit'])) {
//     $name = $_POST['name'];
//     $email = $_POST['email'];
//     $rating = $_POST['rating'];
//     $comment = $_POST['comment'];
//     $product_id = $_POST['product_id'];

//     $result = submitReview($name, $email, $rating, $comment, $product_id);
//     echo $result;
// }
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to create review form
function createReviewForm() {
    echo '
        <form action="' . $_SERVER['PHP_SELF'] . '" method="POST">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>
            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            <div>
                <label for="review">Review:</label><br>
                <textarea id="review" name="review" rows="5" cols="40" required></textarea>
            </div>
            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating">
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>
            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    ';
}

// Function to submit review
function submitReview() {
    global $conn;
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $review = htmlspecialchars(trim($_POST['review']));
        $rating = (int)trim($_POST['rating']);
        
        // Validate input fields
        if (empty($name) || empty($email) || empty($review)) {
            die("All fields are required!");
        }
        
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars!");
        }

        // Prepare SQL statement
        $stmt = $conn->prepare("
            INSERT INTO reviews (name, email, review_text, rating, submission_date)
            VALUES (:name, :email, :review_text, :rating, NOW())
        ");
        
        try {
            // Bind parameters and execute query
            $stmt->execute([
                ':name' => $name,
                ':email' => $email,
                ':review_text' => $review,
                ':rating' => $rating
            ]);
            
            echo "Thank you for submitting your review!";
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    try {
        // Get all reviews from database
        $stmt = $conn->query("
            SELECT name, rating, review_text, submission_date
            FROM reviews
            ORDER BY submission_date DESC
        ");
        
        // Display each review
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo '
                <div class="review">
                    <h3>' . $row['name'] . '</h3>
                    <p>Rating: ' . str_repeat('★', $row['rating']) . '</p>
                    <p>' . $row['review_text'] . '</p>
                    <small>Submitted on: ' . $row['submission_date'] . '</small>
                </div>
            ';
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Main function
function main() {
    // Check if review is being submitted
    if (isset($_POST['submit_review'])) {
        submitReview();
    } else {
        // Display review form and existing reviews
        createReviewForm();
        displayReviews();
    }
}

// Run the main function
main();

// Close database connection
$conn = null;
?>


<?php
// Database connection (replace with your own credentials)
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, created_at)
            VALUES ('$name', '$email', '$rating', '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display review details
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>" . date('F j, Y g:i a', strtotime($row['created_at'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews found.</p>";
    }
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Add review to database
    $result = addReview($name, $email, $rating, $comment, $conn);

    if ($result === true) {
        echo "<div class='success'>Thank you for your review!</div>";
    } else {
        echo "<div class='error'>" . $result . "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .stars {
            color: gold;
        }

        .error {
            color: red;
        }

        .success {
            color: green;
        }
    </style>
</head>
<body>
    <h2>Submit a Review</h2>
    
    <!-- Review Form -->
    <div class="review-form">
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="rating">Rating (1-5):</label><br>
            <select id="rating" name="rating">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
            </select><br>

            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" cols="50" required></textarea><br>

            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <h2>Reviews</h2>
    <?php displayReviews($conn); ?>

</body>
</html>


<?php
// Function to handle user reviews
function createReview() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = htmlspecialchars(trim($_POST['name']));
        $email = trim($_POST['email']);
        $rating = intval($_POST['rating']);
        $comments = htmlspecialchars(trim($_POST['comments']));

        // Validate inputs
        if (empty($name) || empty($email) || empty($comments)) {
            die("Please fill in all required fields.");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address.");
        }

        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars.");
        }

        // Database connection
        try {
            $pdo = new PDO('mysql:host=localhost;dbname=reviews', 'username', 'password');
            $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            
            // Prepare the SQL statement
            $sql = "INSERT INTO reviews (name, email, rating, comments, created_at) 
                    VALUES (:name, :email, :rating, :comments, NOW())";
            
            $stmt = $pdo->prepare($sql);
            
            // Bind parameters
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comments', $comments);

            // Execute the query
            if ($stmt->execute()) {
                echo "Thank you for your review!";
            } else {
                die("Error submitting review. Please try again later.");
            }
        } catch (PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    } else {
        // Show the review form
        ?>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select rating</option>
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>

            <div>
                <label for="comments">Comments:</label><br>
                <textarea id="comments" name="comments" required></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>
        <?php
    }
}

// Call the function
createReview();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Table structure
// CREATE TABLE reviews (
//     id INT AUTO_INCREMENT PRIMARY KEY,
//     user_name VARCHAR(100),
//     rating INT CHECK (rating >= 1 AND rating <=5),
//     comment TEXT,
//     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
// );

function add_review($user_name, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate inputs
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    $sql = "INSERT INTO reviews (user_name, rating, comment) VALUES ('$user_name', $rating, '$comment')";
    
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

function show_reviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    $reviews = array();
    while ($row = $result->fetch_assoc()) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

function calculate_average_rating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    return number_format((float)$row['average'], 1, '.', '');
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        $user_name = $_POST['user_name'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (add_review($user_name, $rating, $comment)) {
            header("Location: reviews.php");
            exit();
        } else {
            echo "Error adding review!";
        }
    }
}

// Get all reviews
$reviews = show_reviews();

// Get average rating
$average_rating = calculate_average_rating();

$conn->close();
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reviews System</title>
</head>
<body>
    <!-- Review Form -->
    <h2>Add a Review</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="user_name" placeholder="Your Name" required><br>
        <select name="rating" required>
            <option value="">Choose Rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br>
        <textarea name="comment" placeholder="Your Review" required></textarea><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Reviews (Average: <?php echo $average_rating; ?>)</h2>
    <?php foreach ($reviews as $review): ?>
        <div style="border-bottom: 1px solid #ccc; padding-bottom: 10px;">
            <strong><?php echo $review['user_name']; ?></strong> - <?php echo str_repeat('★', $review['rating']); ?><br>
            <p><?php echo $review['comment']; ?></p>
            <small>Posted on <?php echo date('F j, Y, g:i a', strtotime($review['created_at'])); ?></small>
        </div>
    <?php endforeach; ?>

    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        form input[type="text"], form select, form textarea {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
            box-sizing: border-box;
        }
        form textarea {
            height: 150px;
        }
        form input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }
        form input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to create review table if it doesn't exist
function createReviewTable() {
    global $conn;
    
    $sql = "CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        product_id INT NOT NULL,
        user_name VARCHAR(100) NOT NULL,
        user_email VARCHAR(100) NOT NULL,
        comment TEXT NOT NULL,
        rating INT NOT NULL,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )";
    
    if (!mysqli_query($conn, $sql)) {
        echo "Error creating table: " . mysqli_error($conn);
    }
}

// Function to insert a new review into the database
function insertReview($productId, $userName, $userEmail, $comment, $rating) {
    global $conn;
    
    // Sanitize inputs
    $userName = htmlspecialchars(trim($userName));
    $userEmail = htmlspecialchars(trim($userEmail));
    $comment = htmlspecialchars(trim($comment));
    $rating = intval($rating);
    
    // Prepare SQL statement
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (product_id, user_name, user_email, comment, rating) VALUES (?, ?, ?, ?, ?)");
    mysqli_stmt_bind_param($stmt, "issss", $productId, $userName, $userEmail, $comment, $rating);
    
    if (mysqli_stmt_execute($stmt)) {
        // Redirect to avoid form resubmission
        header("Location: product.php?id=$productId");
        exit();
    } else {
        echo "Error inserting review: " . mysqli_error($conn);
    }
    
    mysqli_stmt_close($stmt);
}

// Function to display reviews for a product
function displayReviews($productId) {
    global $conn;
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    // Calculate average rating
    $averageRating = calculateAverageRating($productId);
    
    echo "<div class='reviews-container'>";
        echo "<h2>Customer Reviews</h2>";
        echo "<p>Average Rating: " . number_format($averageRating, 2) . " / 5</p>";
        
        // Display star rating
        displayStarRating($averageRating);
        
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review-item'>";
                    echo "<div class='user-details'>";
                        echo "<strong>" . $row['user_name'] . "</strong>";
                        displayStarRating($row['rating']);
                    echo "</div>";
                    echo "<p class='comment'>" . $row['comment'] . "</p>";
                    echo "<p class='timestamp'>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</p>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews yet.</p>";
        }
    echo "</div>";
    
    mysqli_stmt_close($stmt);
}

// Function to calculate average rating
function calculateAverageRating($productId) {
    global $conn;
    
    $sql = "SELECT AVG(rating) AS average FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['average'] ?: 0;
}

// Function to display star rating
function displayStarRating($rating) {
    $fullStars = intval($rating);
    $hasHalfStar = ($rating - $fullStars) >= 0.5;
    
    echo "<div class='stars'>";
        for ($i = 1; $i <= $fullStars; $i++) {
            echo "<span class='star'>★</span>";
        }
        
        if ($hasHalfStar) {
            echo "<span class='star half'>⯨</span>";
        }
        
        // Fill remaining stars with empty
        for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {
            echo "<span class='star'>☆</span>";
        }
    echo "</div>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// File: review_system.php

// Configuration
$review_file = 'reviews.txt'; // File to store reviews

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize and validate inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $review = htmlspecialchars(trim($_POST['review']));

    // Basic validation
    if (empty($name) || empty($review)) {
        die("Please fill in both name and review fields.");
    }

    if (strlen($name) > 50) {
        die("Name must be less than 50 characters.");
    }

    if (strlen($review) < 10 || strlen($review) > 1000) {
        die("Review must be between 10 and 1000 characters.");
    }

    // Create review data array
    $review_data = [
        'name' => $name,
        'review' => $review,
        'date' => date('Y-m-d H:i:s')
    ];

    // Read existing reviews
    if (file_exists($review_file)) {
        $reviews = file_get_contents($review_file);
        $reviews_array = json_decode($reviews, true);
    } else {
        $reviews_array = [];
    }

    // Add new review to array
    array_unshift($reviews_array, $review_data);

    // Write back to file
    $json_reviews = json_encode($reviews_array, JSON_PRETTY_PRINT);
    if (file_put_contents($review_file, $json_reviews) === false) {
        die("Error saving review. Please try again later.");
    }

    // Confirmation message
    echo "Thank you for submitting your review!";
} else {
    // Display review form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review-form { max-width: 600px; margin: 20px auto; padding: 20px; }
        .review-form input, .review-form textarea { width: 100%; margin: 5px 0; padding: 8px; }
        .review-form button { background-color: #4CAF50; color: white; padding: 10px 16px; border: none; cursor: pointer; }
        .review-form button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required>
            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea>
            <button type="submit">Submit Review</button>
        </form>
    </div>
<?php
}
?>


<?php
// File: display_reviews.php

$review_file = 'reviews.txt';

if (file_exists($review_file)) {
    $reviews = json_decode(file_get_contents($review_file), true);
} else {
    $reviews = [];
}

if (empty($reviews)) {
    echo "No reviews available.";
} else {
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reviews</title>
    <style>
        .review-container { max-width: 800px; margin: 20px auto; }
        .review-item { border-bottom: 1px solid #ddd; padding: 15px 0; }
        .review-header { font-weight: bold; color: #333; }
        .review-date { color: #666; font-size: 0.9em; }
    </style>
</head>
<body>
    <div class="review-container">
        <?php foreach ($reviews as $review) : ?>
            <div class="review-item">
                <div class="review-header"><?php echo htmlspecialchars($review['name']); ?></div>
                <div class="review-date"><?php echo date('F j, Y', strtotime($review['date'])); ?></div>
                <p><?php echo nl2br(htmlspecialchars($review['review'])); ?></p>
            </div>
        <?php endforeach; ?>
    </div>
</body>
</html>
<?php
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview($user_name, $rating, $comment, $conn) {
    // Sanitize input data
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $user_name));
    $rating = intval(mysqli_real_escape_string($conn, $rating));
    $comment = htmlspecialchars(mysqli_real_escape_string($conn, $comment));
    
    // Get current date and time
    $date = date('Y-m-d H:i:s');
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, rating, comment, review_date) 
            VALUES ('$user_name', '$rating', '$comment', '$date')";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating = mysqli_fetch_assoc(
            mysqli_query($conn, "SELECT AVG(rating) AS avg_rating FROM reviews")
        )['avg_rating'];
        
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('Y-m-d', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
        
        // Display average rating and total reviews
        echo "<div class='review-stats'>";
        echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
        echo "<p>Total Reviews: " . mysqli_num_rows($result) . "</p>";
        echo "</div>";
    } else {
        echo "<p>No reviews available.</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),
review TEXT,
rating INT,
timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)";

if (!mysqli_query($conn, $sql)) {
    die("Table creation failed: " . mysqli_error($conn));
}

// Function to add a new review
function addReview($conn, $name, $review, $rating) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags($name));
    $review = htmlspecialchars(strip_tags($review));
    
    if (empty($name) || empty($review) || !is_numeric($rating)) {
        return "Please fill in all fields";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars";
    }

    // Prepare and bind
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, review, rating) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($stmt, "sss", $name, $review, $rating);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review']) . "</p>";
            echo "<small>Posted on: " . date('jS M Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $review = $_POST['review'];
    $rating = $_POST['rating'];

    // Add review to database
    $result = addReview($conn, $name, $review, $rating);

    if ($result === true) {
        echo "<p>Thank you for your review!</p>";
    } else {
        echo "<p>Error: " . $result . "</p>";
    }
}

// Display the review form
echo <<<EOD
<form method="post">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <textarea name="review" placeholder="Write your review here..." required></textarea><br>
    <label>Rating:</label>
    <select name="rating" required>
        <option value="">Select rating</option>
        <option value="1">1 star</option>
        <option value="2">2 stars</option>
        <option value="3">3 stars</option>
        <option value="4">4 stars</option>
        <option value="5">5 stars</option>
    </select><br>
    <input type="submit" value="Submit Review">
</form>

EOD;

// Display existing reviews
echo "<h2>Previous Reviews:</h2>";
displayReviews($conn);

mysqli_close($conn);
?>


<?php
class UserReview {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Add a new review
    public function addReview($product_id, $user_id, $rating, $review_text) {
        try {
            $sql = "INSERT INTO reviews (product_id, user_id, rating, review_text) 
                    VALUES ('$product_id', '$user_id', '$rating', '$review_text')";
            $result = $this->db->query($sql);
            
            if ($result) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            throw new Exception("Error adding review: " . $e->getMessage());
        }
    }

    // Get reviews for a specific product
    public function getReviews($product_id) {
        try {
            $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
            $result = $this->db->query($sql);
            
            if ($result && $result->num_rows > 0) {
                return $result->fetch_all(MYSQLI_ASSOC);
            } else {
                return array();
            }
        } catch (Exception $e) {
            throw new Exception("Error fetching reviews: " . $e->getMessage());
        }
    }

    // Delete a review by ID
    public function deleteReview($review_id, $user_id) {
        try {
            $sql = "DELETE FROM reviews WHERE id = '$review_id' AND user_id = '$user_id'";
            $result = $this->db->query($sql);
            
            if ($result) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            throw new Exception("Error deleting review: " . $e->getMessage());
        }
    }

    // Update an existing review
    public function updateReview($review_id, $user_id, $rating, $review_text) {
        try {
            $sql = "UPDATE reviews SET rating = '$rating', review_text = '$review_text' 
                    WHERE id = '$review_id' AND user_id = '$user_id'";
            $result = $this->db->query($sql);
            
            if ($result) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            throw new Exception("Error updating review: " . $e->getMessage());
        }
    }

    // Get average rating for a product
    public function getAverageRating($product_id) {
        try {
            $sql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$product_id'";
            $result = $this->db->query($sql);
            
            if ($result && $result->num_rows > 0) {
                return (float)$result->fetch_assoc()['average_rating'];
            } else {
                return 0.0;
            }
        } catch (Exception $e) {
            throw new Exception("Error calculating average rating: " . $e->getMessage());
        }
    }
}
?>


<?php
// Assuming you have a database connection established
$connection = new mysqli("localhost", "username", "password", "database");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

$user_review = new UserReview($connection);

// Add a new review
$added = $user_review->addReview(1, 5, 4, "Great product!");
echo "Review added: " . ($added ? "Yes" : "No") . "<br>";

// Get reviews for product ID 1
$reviews = $user_review->getReviews(1);
foreach ($reviews as $review) {
    echo "Rating: " . $review['rating'] . ", Review: " . $review['review_text'] . "<br>";
}

// Update a review
$updated = $user_review->updateReview(2, 5, 5, "Excellent product!");
echo "Review updated: " . ($updated ? "Yes" : "No") . "<br>";

// Delete a review
$deleted = $user_review->deleteReview(3, 5);
echo "Review deleted: " . ($deleted ? "Yes" : "No") . "<br>";

// Get average rating for product ID 1
$average = $user_review->getAverageRating(1);
echo "Average Rating: " . $average;

$connection->close();
?>


<?php
// Function to handle user reviews
function submit_review() {
    // Check if form is submitted
    if (!isset($_POST['submit'])) {
        return;
    }

    // Sanitize input data
    $review_title = htmlspecialchars(trim($_POST['review_title']));
    $review_content = htmlspecialchars(trim($_POST['review_content']));
    $rating = intval($_POST['rating']);
    $user_id = intval($_POST['user_id']);
    $product_id = intval($_POST['product_id']);

    // Database connection
    include('db_config.php'); // Include your database configuration file

    try {
        // Validate input data
        if (empty($review_title) || empty($review_content)) {
            throw new Exception("Please fill in all required fields.");
        }

        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5 stars.");
        }

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (review_title, review_content, rating, user_id, product_id, created_at)
                VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)";

        // Prepare and bind parameters
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "ssiii", $review_title, $review_content, $rating, $user_id, $product_id);

        // Execute the statement
        if (mysqli_stmt_execute($stmt)) {
            echo "Thank you for submitting your review!";
        } else {
            throw new Exception("Error submitting review. Please try again.");
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    } finally {
        // Close the statement and connection
        if ($stmt) {
            mysqli_stmt_close($stmt);
        }
        if ($conn) {
            mysqli_close($conn);
        }
    }
}

// Call the function
submit_review();
?>


<?php

// Function to add a new review
function addReview($name, $comment, $rating) {
    // Validate inputs
    if (empty($name) || empty($comment)) {
        throw new Exception("Name and comment cannot be empty");
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }

    // Review data array
    $review = [
        'name' => htmlspecialchars($name),
        'comment' => htmlspecialchars($comment),
        'rating' => (int)$rating,
        'date' => date('Y-m-d H:i:s')
    ];

    // Reviews file path
    $filePath = 'reviews.txt';

    // Read existing reviews
    if (file_exists($filePath)) {
        $reviewsContent = file_get_contents($filePath);
        $reviewsArray = unserialize($reviewsContent);
        $reviewsArray[] = $review;
    } else {
        $reviewsArray = [$review];
    }

    // Save the updated reviews array back to file
    $success = file_put_contents($filePath, serialize($reviewsArray));

    if ($success === false) {
        throw new Exception("Failed to save review");
    }

    return true;
}

// Function to get all reviews
function getReviews() {
    $filePath = 'reviews.txt';

    if (file_exists($filePath)) {
        $reviewsContent = file_get_contents($filePath);
        $reviewsArray = unserialize($reviewsContent);
        return $reviewsArray;
    } else {
        return [];
    }
}

// Example usage:
try {
    // Add a new review
    addReview("John Doe", "Great product!", 5);

    // Get all reviews and display them
    $reviews = getReviews();
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['name'] . "</h3>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<p>Date: " . $review['date'] . "</p>";
        echo "</div>";
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to display all reviews
function display_reviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                r.review_id,
                r.user_name,
                r.rating,
                r.comment,
                r.created_at
            FROM reviews r
            WHERE r.product_id = ?
            ORDER BY r.created_at DESC
        ");
        
        $stmt->execute([$product_id]);
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            echo "<p>No reviews available yet.</p>";
            return;
        }
        
        foreach ($reviews as $review) {
            echo "
                <div class='review'>
                    <h3>{$review['user_name']}</h3>
                    <div class='rating'>";
                        for ($i = 1; $i <= 5; $i++) {
                            if ($i <= $review['rating']) {
                                echo "<span class='star'>★</span>";
                            } else {
                                echo "<span class='star'>☆</span>";
                            }
                        }
                    echo "</div>
                    <p>{$review['comment']}</p>
                    <small>Posted on {$review['created_at']}</small>
                </div>
            ";
        }
    } catch (PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Function to submit a new review
function submit_review($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    try {
        // Sanitize inputs
        $user_name = htmlspecialchars(trim($user_name));
        $email = htmlspecialchars(trim($email));
        $rating = intval($rating);
        $comment = htmlspecialchars(trim($comment));
        
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating value. Rating must be between 1 and 5.");
        }
        
        // Insert review into database
        $stmt = $conn->prepare("
            INSERT INTO reviews 
                (product_id, user_name, email, rating, comment)
            VALUES (?, ?, ?, ?, ?)
        ");
        
        $stmt->execute([$product_id, $user_name, $email, $rating, $comment]);
        
        return true;
    } catch (PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                AVG(rating) AS average_rating,
                COUNT(*) AS total_reviews
            FROM reviews
            WHERE product_id = ?
        ");
        
        $stmt->execute([$product_id]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        $average_rating = number_format($result['average_rating'], 1, '.', '');
        $total_reviews = $result['total_reviews'];
        
        return [
            'average' => $average_rating,
            'total' => $total_reviews
        ];
    } catch (PDOException $e) {
        die("Error calculating average rating: " . $e->getMessage());
    }
}

// Function to display review form
function display_review_form($product_id, $errors = []) {
    // Check if there are any errors
    if (!empty($errors)) {
        echo "<div class='error-messages'>";
            foreach ($errors as $error) {
                echo "<p>$error</p>";
            }
        echo "</div>";
    }
    
    echo "
        <form method='POST' action='submit_review.php'>
            <input type='hidden' name='product_id' value='$product_id'>
            
            <div class='form-group'>
                <label for='user_name'>Name:</label>
                <input type='text' id='user_name' name='user_name' required>
            </div>
            
            <div class='form-group'>
                <label for='email'>Email:</label>
                <input type='email' id='email' name='email' required>
            </div>
            
            <div class='form-group'>
                <label>Rating:</label><br>
                <input type='radio' name='rating' value='5'> ★★★★★<br>
                <input type='radio' name='rating' value='4'> ★★★★☆<br>
                <input type='radio' name='rating' value='3'> ★★★☆☆<br>
                <input type='radio' name='rating' value='2'> ★★☆☆☆<br>
                <input type='radio' name='rating' value='1'> ★☆☆☆☆
            </div>
            
            <div class='form-group'>
                <label for='comment'>Comment:</label>
                <textarea id='comment' name='comment' rows='5' required></textarea>
            </div>
            
            <button type='submit' class='submit-btn'>Submit Review</button>
        </form>
    ";
}
?>


<?php
session_start();
require_once 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    try {
        submit_review($product_id, $user_name, $email, $rating, $comment);
        header("Location: product.php?id=$product_id");
        exit();
    } catch (Exception $e) {
        // Store errors in session
        $_SESSION['errors'] = [$e->getMessage()];
        header("Location: product.php?id=$product_id");
        exit();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle review submission
function submitReview() {
    global $conn;
    
    // Sanitize input data
    $product_id = htmlspecialchars($_POST['product_id']);
    $user_name = htmlspecialchars($_POST['user_name']);
    $user_email = htmlspecialchars($_POST['user_email']);
    $rating = intval($_POST['rating']);
    $review_text = htmlspecialchars($_POST['review_text']);
    
    // Check if all required fields are filled
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($review_text)) {
        die("Please fill in all required fields.");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, review_text, review_date)
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$review_text', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>Thank you for submitting your review!</div>";
    } else {
        die("Error: " . mysqli_error($conn));
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
                echo "<h3>" . $row['user_name'] . "</h3>";
                echo "<p>Rating: " . getStars($row['rating']) . "</p>";
                echo "<p>Email: " . substr($row['user_email'], 0, -4) . "****</p>"; // Mask email for privacy
                echo "<p>" . $row['review_text'] . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<div class='no-reviews'>No reviews available for this product.</div>";
    }
}

// Helper function to display stars
function getStars($rating) {
    $stars = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "<span class='fa fa-star'></span>";
        } else {
            $stars .= "<span class='fa fa-star-o'></span>";
        }
    }
    return $stars;
}

// Close database connection
mysqli_close($conn);
?>


<?php displayReviews($product_id); ?>


<?php
// Database connection settings
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment) {
    global $conn;
    
    // Sanitize input data
    $productId = intval($productId);
    $userId = intval($userId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, submission_date) 
            VALUES ('$productId', '$userId', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function displayReviews($productId) {
    global $conn;
    
    // Sanitize input data
    $productId = intval($productId);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username, u.profile_picture 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$productId' 
            ORDER BY r.submission_date DESC";
    
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Output reviews
        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review">';
            echo '<div class="user-info">';
            echo '<img src="' . $row['profile_picture'] . '" alt="User Profile">';
            echo '<span class="username">' . $row['username'] . '</span>';
            echo '</div>';
            
            // Display rating stars
            echo '<div class="rating">';
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            echo '</div>';
            
            // Display comment
            echo '<p class="comment">' . $row['comment'] . '</p>';
            
            // Display submission date
            echo '<div class="date">';
            echo date('F j, Y g:i a', strtotime($row['submission_date']));
            echo '</div>';
            
            // Voting buttons
            echo '<div class="votes">';
            echo '<button onclick="voteReview(' . $row['id'] . ', 1)">↑</button>';
            echo '<span class="vote-count">' . $row['votes'] . '</span>';
            echo '<button onclick="voteReview(' . $row['id'] . ', -1)">↓</button>';
            echo '</div>';
            
            echo '</div>';
        }
    } else {
        echo 'No reviews found for this product.';
    }
}

// Function to handle voting
function voteReview($reviewId, $voteType) {
    global $conn;
    
    // Sanitize input data
    $reviewId = intval($reviewId);
    $voteType = intval($voteType);
    
    // Check if user has already voted for this review
    session_start();
    $userId = $_SESSION['user_id'];
    
    $sql = "SELECT id FROM votes WHERE review_id = '$reviewId' AND user_id = '$userId'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        // Update vote count
        $sql = "UPDATE reviews SET votes = votes + $voteType WHERE id = '$reviewId'";
        mysqli_query($conn, $sql);
        
        // Record the vote
        $sql = "INSERT INTO votes (review_id, user_id, vote_type) 
                VALUES ('$reviewId', '$userId', '$voteType')";
        mysqli_query($conn, $sql);
        
        return true;
    } else {
        return false;
    }
}

// Helper function to sanitize input data
function sanitizeInput($data) {
    global $conn;
    return mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($data))));
}
?>


<?php
// Function to handle user reviews
function handleUserReview($review_file) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = sanitizeInput($_POST["name"]);
        $email = sanitizeInput($_POST["email"]);
        $rating = intval($_POST["rating"]);
        $comment = sanitizeInput($_POST["comment"]);
        
        // Validate input
        if ($name == "" || $email == "" || $comment == "") {
            echo "All fields are required!";
            return;
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars!";
            return;
        }
        
        // Create review array
        $review = [
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        ];
        
        // Save review to file
        $json_review = json_encode($review);
        $fp = fopen($review_file, 'a');
        fwrite($fp, $json_review . "
");
        fclose($fp);
        
        echo "Thank you for your review!";
    }
    
    // Display existing reviews
    displayReviews($review_file);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to display reviews
function displayReviews($review_file) {
    if (file_exists($review_file)) {
        $reviews = file($review_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
        
        foreach ($reviews as $review_line) {
            $review = json_decode($review_line, true);
            
            if ($review !== null) {
                echo "<div class='review'>";
                echo "<h3>{$review['name']}</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>Email: {$review['email']}</p>";
                echo "<p>Comment: {$review['comment']}</p>";
                echo "<small>Posted on: {$review['date']}</small>";
                echo "</div>";
            }
        }
    }
}
?>


<?php
function manageUserReviews($conn, $productId, $userId = null, $rating = null, $comment = null, $displayReviews = false) {
    // If all parameters are provided except displayReviews, assume we're submitting a review
    if ($userId !== null && $rating !== null && $comment !== null) {
        try {
            // Check if the user has already reviewed this product
            $checkReviewQuery = "SELECT COUNT(*) AS count FROM reviews WHERE product_id = ? AND user_id = ?";
            $stmt = mysqli_prepare($conn, $checkReviewQuery);
            mysqli_stmt_bind_param($stmt, "ii", $productId, $userId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            $row = mysqli_fetch_assoc($result);

            if ($row['count'] == 0) {
                // Insert the new review
                $insertReviewQuery = "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)";
                $stmt = mysqli_prepare($conn, $insertReviewQuery);
                mysqli_stmt_bind_param($stmt, "iiis", $productId, $userId, $rating, $comment);
                mysqli_stmt_execute($stmt);
                echo "Thank you for submitting your review!";
            } else {
                // Review already exists
                echo "You have already submitted a review for this product.";
            }
        } catch (mysqli_sql_exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    if ($displayReviews) {
        try {
            // Get all reviews for the specified product
            $getReviewsQuery = "
                SELECT r.rating, r.comment, u.full_name 
                FROM reviews r 
                LEFT JOIN users u ON r.user_id = u.id 
                WHERE r.product_id = ?
                ORDER BY r.review_date DESC";
            
            $stmt = mysqli_prepare($conn, $getReviewsQuery);
            mysqli_stmt_bind_param($stmt, "i", $productId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            // Calculate average rating
            $averageRating = 0;
            $reviewCount = 0;

            while ($row = mysqli_fetch_assoc($result)) {
                $averageRating += $row['rating'];
                $reviewCount++;
            }

            if ($reviewCount > 0) {
                $averageRating /= $reviewCount;
                // Reset result pointer to display reviews
                mysqli_data_seek($result, 0);
            } else {
                echo "No reviews available for this product.";
                return;
            }

            // Display average rating
            echo "<h3>Average Rating: " . number_format($averageRating, 1) . "/5</h3>";
            
            // Display each review
            while ($row = mysqli_fetch_assoc($result)) {
                $ratingStars = str_repeat("⭐", $row['rating']);
                $fullName = $row['full_name'] ?? 'Anonymous';
                echo "<div class='review'>";
                echo "<p><strong>$fullName</strong> gave " . $ratingStars . "</p>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                echo "</div>";
            }
        } catch (mysqli_sql_exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}
?>


manageUserReviews($conn, 1, 5, 4, "Great product!");


manageUserReviews($conn, 1, null, null, null, true);


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get form data
$name = mysqli_real_escape_string($conn, $_POST['name']);
$email = mysqli_real_escape_string($conn, $_POST['email']);
$rating = intval($_POST['rating']);
$comment = mysqli_real_escape_string($conn, $_POST['comment']);

// Validate email format
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Invalid email format");
}

// SQL query to insert review
$sql = "INSERT INTO product_reviews (user_name, user_email, rating, comment)
VALUES ('$name', '$email', $rating, '$comment')";

if (mysqli_query($conn, $sql)) {
    // Redirect back to the product page or thank you message
    header("Location: product_page.php?thankyou");
} else {
    echo "Error: " . $sql . "<br>" . mysqli_error($conn);
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// SQL query to get all reviews for a product
$sql = "SELECT * FROM product_reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);

?>

<div class="review-display">
    <h2>Product Reviews</h2>
    
    <?php if (mysqli_num_rows($result) > 0) : ?>
        <?php while ($row = mysqli_fetch_assoc($result)) : ?>
            <div class="single-review">
                <p><strong><?php echo $row['user_name']; ?></strong></p>
                <div class="rating-stars">
                    <?php 
                        $stars = str_repeat('★', $row['rating']);
                        $remaining = 5 - $row['rating'];
                        echo $stars . str_repeat('☆', $remaining);
                    ?>
                </div>
                <p><?php echo $row['comment']; ?></p>
                <small><?php echo date('F j, Y g:i a', strtotime($row['submission_date'])); ?></small>
            </div>
        <?php endwhile; ?>
    <?php else : ?>
        <p>No reviews available yet.</p>
    <?php endif; ?>

</div>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'reviews';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <!-- Add Font Awesome for star ratings -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        .review-form input, .review-form textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            box-sizing: border-box;
        }
        .review-form button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }
        .review-form button:hover {
            background-color: #45a049;
        }
        .reviews {
            margin-top: 30px;
        }
        .review-item {
            padding: 15px;
            border-bottom: 1px solid #ddd;
        }
        .review-header {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .rating {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Review Form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" class="review-form">
            <h2>Submit a Review</h2>
            <input type="text" name="user_name" placeholder="Your Name" required>
            <input type="email" name="user_email" placeholder="Your Email" required>
            <input type="number" name="rating" min="1" max="5" step="1" value="5" required>
            <textarea name="review_text" placeholder="Write your review here..." rows="4" required></textarea>
            <button type="submit" name="submit_review">Submit Review</button>
        </form>

        <!-- Display Reviews -->
        <?php
        if (isset($_POST['submit_review'])) {
            // Sanitize input
            $user_name = htmlspecialchars($_POST['user_name']);
            $user_email = htmlspecialchars(filter_var($_POST['user_email'], FILTER_VALIDATE_EMAIL));
            $rating = intval($_POST['rating']);
            $review_text = htmlspecialchars($_POST['review_text']);

            try {
                $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, review_text) 
                                      VALUES (:name, :email, :rating, :text)");
                $stmt->bindParam(':name', $user_name);
                $stmt->bindParam(':email', $user_email);
                $stmt->bindParam(':rating', $rating);
                $stmt->bindParam(':text', $review_text);
                $stmt->execute();

                header("Location: " . $_SERVER['PHP_SELF']);
            } catch(PDOException $e) {
                echo "Error saving review: " . $e->getMessage();
            }
        }

        // Fetch reviews from database
        try {
            $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error fetching reviews: " . $e->getMessage();
        }
        ?>

        <div class="reviews">
            <?php foreach ($reviews as $review): ?>
                <div class="review-item">
                    <div class="review-header">
                        <span class="rating">
                            <?php 
                            for ($i = 1; $i <= 5; $i++) {
                                if ($i <= $review['rating']) {
                                    echo '<i class="fas fa-star"></i>';
                                } else {
                                    echo '<i class="far fa-star"></i>';
                                }
                            }
                            ?>
                        </span>
                        <h3><?php echo $review['user_name']; ?></h3>
                    </div>
                    <p><?php echo $review['review_text']; ?></p>
                    <small>Submitted on <?php echo date('F j, Y', strtotime($review['submission_date'])); ?></small>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'review_system';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($productId, $name, $email, $rating, $reviewText, $conn) {
    try {
        // Validate input
        if (empty($name) || empty($email) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
            return false;
        }

        // Prepare the statement
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            SET 
                product_id = :productId,
                name = :name,
                email = :email,
                rating = :rating,
                review_text = :reviewText,
                timestamp = NOW()
        ");
        
        // Bind parameters
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':reviewText', $reviewText);

        // Execute the statement
        $stmt->execute();

        return true;
    } catch(PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT 
                id,
                name,
                email,
                rating,
                review_text,
                timestamp
            FROM 
                reviews
            WHERE 
                product_id = :productId
            ORDER BY 
                timestamp DESC
        ");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error getting reviews: " . $e->getMessage();
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($productId, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT 
                AVG(rating) AS average_rating
            FROM 
                reviews
            WHERE 
                product_id = :productId
        ");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return round($result['average_rating'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
        return false;
    }
}

// Function to count total reviews
function getTotalReviews($productId, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT 
                COUNT(*) AS total_reviews
            FROM 
                reviews
            WHERE 
                product_id = :productId
        ");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return $result['total_reviews'];
    } catch(PDOException $e) {
        echo "Error counting reviews: " . $e->getMessage();
        return false;
    }
}

// Example usage
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (submitReview($_POST['product_id'], $_POST['name'], $_POST['email'], $_POST['rating'], $_POST['review_text'], $conn)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please check all fields.";
    }
}

// Display reviews
$productId = 1; // Example product ID
$reviews = getReviews($productId, $conn);
if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . htmlspecialchars($review['name']) . "</h4>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
        echo "<small>" . date('F j, Y', strtotime($review['timestamp'])) . "</small>";
        echo "</div>";
    }
}

// Display average rating
$averageRating = getAverageRating($productId, $conn);
if ($averageRating !== false) {
    echo "<div class='rating'>";
    echo "Average Rating: " . $averageRating . "/5";
    echo "</div>";
}

// Display total reviews
$totalReviews = getTotalReviews($productId, $conn);
if ($totalReviews !== false) {
    echo "<div class='total-reviews'>";
    echo "Total Reviews: " . $totalReviews;
    echo "</div>";
}
?>


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY date_created DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . $row['rating'] . "/5</h3>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted by " . $row['username'] . " on " . $row['date_created'] . "</small><br>";
            
            // Display edit and delete buttons for the author
            if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $row['user_id']) {
                echo "<a href='edit_review.php?review_id=" . $row['review_id'] . "'>Edit</a> | ";
                echo "<a href='delete_review.php?review_id=" . $row['review_id'] . "'>Delete</a>";
            }
            
            // Display voting buttons
            display_vote_buttons($row['review_id']);
            
            echo "</div><hr>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to submit a new review
function submit_review($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a number between 1 and 5.";
    }
    
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, date_created)
            VALUES ('$product_id', '$user_id', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to edit an existing review
function edit_review($review_id, $new_rating, $new_comment) {
    global $conn;
    
    // Sanitize input
    $review_id = intval($review_id);
    $new_rating = intval($new_rating);
    $new_comment = mysqli_real_escape_string($conn, htmlspecialchars($new_comment));
    
    // Validate input
    if ($new_rating < 1 || $new_rating > 5) {
        return "Invalid rating. Please choose a number between 1 and 5.";
    }
    
    $sql = "UPDATE reviews SET rating = '$new_rating', comment = '$new_comment', last_updated = NOW()
            WHERE review_id = $review_id";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to delete a review
function delete_review($review_id) {
    global $conn;
    
    // Sanitize input
    $review_id = intval($review_id);
    
    $sql = "DELETE FROM reviews WHERE review_id = $review_id";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display voting buttons
function display_vote_buttons($review_id) {
    global $conn;
    
    // Check if user has already voted for this review
    if (isset($_SESSION['user_id'])) {
        $sql = "SELECT * FROM votes WHERE review_id = $review_id AND user_id = " . $_SESSION['user_id'];
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            // User has already voted
            echo "<small>Your vote: ";
            while ($row = mysqli_fetch_assoc($result)) {
                if ($row['vote'] == 1) {
                    echo "Helpful";
                } else {
                    echo "Not helpful";
                }
            }
            echo "</small>";
        } else {
            // Display voting buttons
            echo "<form method='post' action='submit_vote.php'>";
            echo "<input type='hidden' name='review_id' value='" . $review_id . "'>";
            echo "<button type='submit' name='vote' value='1'>Helpful</button>";
            echo "<button type='submit' name='vote' value='-1'>Not helpful</button>";
            echo "</form>";
        }
    } else {
        // User not logged in
        echo "<small><a href='login.php'>Log in</a> to vote.</small>";
    }
}

// Example usage:
if (isset($_GET['product_id'])) {
    display_reviews($_GET['product_id']);
}
?>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews';

$conn = mysqli_connect($host, $user, $password, $dbname);

// Function to submit a review
function submitReview($conn) {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize inputs
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review_text = mysqli_real_escape_string($conn, $_POST['review-text']);
        $rating = (int)$_POST['rating'];
        
        // Validate input
        if ($name == '' || $review_text == '' || $rating < 1 || $rating > 5) {
            die('Please fill in all fields correctly!');
        }
        
        // Insert into database
        $sql = "INSERT INTO reviews (user_id, name, review_text, rating, submission_date)
                VALUES ('".$_SESSION['user_id']."', '".$name."', '".$review_text."', ".$rating.", NOW())";
                
        if (!mysqli_query($conn, $sql)) {
            die('Error submitting review: ' . mysqli_error($conn));
        }
        
        // Redirect to product page after submission
        header("Location: ".$_SERVER['HTTP_REFERER']);
        exit();
    }
}

// Function to display reviews
function displayReviews($conn) {
    $id = $_GET['product_id']; // Assuming you're passing the product ID
    
    $sql = "SELECT * FROM reviews WHERE product_id = ".$id;
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review">';
            echo '<h3>' . $row['name'] . '</h3>';
            displayStars($row['rating']);
            echo '<p>' . $row['review_text'] . '</p>';
            echo '<small>Submitted on: ' . date('j F Y', strtotime($row['submission_date'])) . '</small>';
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet!</p>';
    }
}

// Function to display stars based on rating
function displayStars($rating) {
    $fullStars = (int)$rating;
    $halfStar = ($rating - floor($rating)) >= 0.5 ? 1 : 0;
    
    for ($i=0; $i<5; $i++) {
        if ($i < $fullStars) {
            echo '⭐';
        } elseif ($i == $fullStars && $halfStar) {
            echo '⯨'; // Half star
        } else {
            echo '☆';
        }
    }
}

// Function to calculate average rating
function getAverageRating($conn, $product_id) {
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ".$product_id;
    $result = mysqli_query($conn, $sql);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return round($row['average'], 1); // Round to one decimal place
    }
    return 0;
}

// Close database connection
mysqli_close($conn);
?>


<?php displayReviews($conn); ?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {
    // Sanitize input data
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['user_name']));
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['review_text']));
    $rating = intval($_POST['rating']);
    $product_id = intval($_POST['product_id']);

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, rating, review_text, created_at) 
            VALUES ('$product_id', '$user_name', '$rating', '$review_text', NOW())";

    if (mysqli_query($conn, $sql)) {
        echo "<p style='color: green'>Thank you for your review!</p>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Get reviews for product
function get_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            display_review($row);
        }
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
}

// Display individual review
function display_review($review_data) {
    $stars = str_repeat("★", $review_data['rating']) . str_repeat("☆", 5 - $review_data['rating']);
    
    echo "<div class='review-box'>";
    echo "<h3>By " . $review_data['user_name'] . "</h3>";
    echo "<p class='stars'>" . $stars . "</p>";
    echo "<p>" . $review_data['review_text'] . "</p>";
    echo "<small>Posted on: " . date('F j, Y', strtotime($review_data['created_at'])) . "</small>";
    echo "</div>";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .rating {
            margin: 10px 0;
        }
        
        .stars {
            color: #ffd700;
            font-size: 24px;
        }
        
        .review-box {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>

<h1>Product Reviews</h1>

<!-- Review submission form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="product_id" value="1">
    
    <div class="rating">
        <label for="rating">Rating:</label>
        <select id="rating" name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">★★★★★ - Excellent</option>
            <option value="4">★★★★☆ - Very Good</option>
            <option value="3">★★★☆☆ - Average</option>
            <option value="2">★★☆☆☆ - Poor</option>
            <option value="1">★☆☆☆☆ - Terrible</option>
        </select>
    </div>

    <div>
        <label for="user_name">Name:</label><br>
        <input type="text" id="user_name" name="user_name" required maxlength="50">
    </div>

    <div>
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" cols="50" required></textarea>
    </div>

    <input type="submit" name="submit_review" value="Submit Review">
</form>

<!-- Display existing reviews -->
<?php
$product_id = 1; // Example product ID
get_reviews($product_id);
?>

</body>
</html>


<?php
function displayUserReviews($productId, $numReviews = 5) {
    // Database connection parameters
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    try {
        // Create database connection
        $conn = new mysqli($servername, $username, $password, $dbname);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // SQL query to fetch reviews for the given product ID
        $sql = "SELECT user_name, rating, comment, review_date 
                FROM reviews 
                WHERE product_id = ? 
                ORDER BY review_date DESC 
                LIMIT ?";
        
        // Prepare and bind parameters
        $stmt = $conn->prepare($sql);
        if ($stmt === false) {
            throw new Exception("Prepare failed: " . $conn->error);
        }
        
        $stmt->bind_param("ii", $productId, $numReviews);

        // Execute the query
        $stmt->execute();
        
        // Get the result set
        $result = $stmt->get_result();

        // Check if there are any reviews
        if ($result->num_rows > 0) {
            echo "<div class='reviews-container'>";
            
            while ($row = $result->fetch_assoc()) {
                echo "<div class='review-item'>";
                echo "<div class='review-header'>";
                echo "<span class='user-name'>" . htmlspecialchars($row["user_name"]) . "</span>";
                echo "<span class='review-date'>" . $row["review_date"] . "</span>";
                echo "</div>";
                
                echo "<div class='rating'>Rating: " . $row["rating"] . " stars</div>";
                echo "<div class='comment'>" . htmlspecialchars($row["comment"]) . "</div>";
                echo "</div>";
            }
            
            echo "</div>";
        } else {
            echo "No reviews found for this product.";
        }

        // Close statement and connection
        $stmt->close();
        $conn->close();

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Example usage:
productId = 123;
displayUserReviews($productId, 5); // Display 5 reviews for product ID 123
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

try {
    $conn = new mysqli($host, $username, $password, $database);
    
    // Check connection
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Function to submit a review
    function submitReview($productId, $userId, $rating, $comment, $conn) {
        // Sanitize inputs
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Please select a rating between 1 and 5.");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, NOW())";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("iisi", $productId, $userId, $rating, $comment);
            
            if (!$stmt->execute()) {
                throw new Exception("Error submitting review: " . $stmt->error);
            }
            
            // Update average rating
            updateAverageRating($productId, $conn);
            
            return true;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to get all reviews for a product
    function getReviews($productId, $conn) {
        $sql = "SELECT r.*, u.username FROM reviews r 
                LEFT JOIN users u ON r.user_id = u.id 
                WHERE r.product_id = ?
                ORDER BY r.created_at DESC";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to get average rating
    function getAverageRating($productId, $conn) {
        $sql = "SELECT average_rating FROM average_ratings WHERE product_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            $result = $stmt->get_result()->fetch_assoc();
            
            return isset($result['average_rating']) ? number_format($result['average_rating'], 1) : 0;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to update average rating
    function updateAverageRating($productId, $conn) {
        $sql = "SELECT COUNT(*) as review_count, SUM(rating) as total_rating 
                FROM reviews WHERE product_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            $result = $stmt->get_result()->fetch_assoc();

            $average = $result['review_count'] > 0 ? 
                ($result['total_rating'] / $result['review_count']) : 0;

            // Update average ratings table
            $updateSql = "REPLACE INTO average_ratings (product_id, average_rating) 
                         VALUES (?, ?)";
            
            if ($updateStmt = $conn->prepare($updateSql)) {
                $updateStmt->bind_param("id", $productId, $average);
                return $updateStmt->execute();
            } else {
                throw new Exception("Error preparing update statement: " . $conn->error);
            }
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to edit a review
    function editReview($reviewId, $newRating, $newComment, $conn) {
        $newRating = intval($newRating);
        $newComment = mysqli_real_escape_string($conn, htmlspecialchars($newComment));

        if ($newRating < 1 || $newRating > 5) {
            throw new Exception("Invalid rating. Please select a rating between 1 and 5.");
        }

        // Update review in database
        $sql = "UPDATE reviews SET rating = ?, comment = ?, updated_at = NOW() 
                WHERE review_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("iis", $newRating, $newComment, $reviewId);
            
            if (!$stmt->execute()) {
                throw new Exception("Error updating review: " . $stmt->error);
            }
            
            // Update average rating
            $productId = getProductIdFromReview($reviewId, $conn);
            updateAverageRating($productId, $conn);
            
            return true;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to delete a review
    function deleteReview($reviewId, $conn) {
        // Delete review from database
        $sql = "DELETE FROM reviews WHERE review_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $reviewId);
            
            if (!$stmt->execute()) {
                throw new Exception("Error deleting review: " . $stmt->error);
            }
            
            // Update average rating
            $productId = getProductIdFromReview($reviewId, $conn);
            updateAverageRating($productId, $conn);
            
            return true;
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Helper function to get product ID from review
    function getProductIdFromReview($reviewId, $conn) {
        $sql = "SELECT product_id FROM reviews WHERE review_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $reviewId);
            $stmt->execute();
            return $stmt->get_result()->fetch_assoc()['product_id'];
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

    // Function to count reviews
    function countReviews($productId, $conn) {
        $sql = "SELECT COUNT(*) as review_count FROM reviews WHERE product_id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            return $stmt->get_result()->fetch_assoc()['review_count'];
        } else {
            throw new Exception("Error preparing statement: " . $conn->error);
        }
    }

} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to validate and sanitize input data
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Function to insert a new review into the database
function submitReview($name, $email, $rating, $comment) {
    global $conn;

    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment, timestamp) 
                              VALUES (:name, :email, :rating, :comment, NOW())");
        
        // Bind parameters to the placeholders
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Error inserting review into database");
        }
    } catch(PDOException $e) {
        throw new Exception("Database error: " . $e->getMessage());
    }
}

// Function to validate user input before submitting
function validateReview($formData) {
    $errors = array();

    // Validate name
    if (empty($formData['name'])) {
        $errors[] = 'Name is required';
    } elseif (!preg_match('/^[a-zA-Z\s]+$/', $formData['name'])) {
        $errors[] = 'Invalid characters in name. Only letters and spaces are allowed.';
    }

    // Validate email
    if (empty($formData['email']) || !filter_var($formData['email'], FILTER_VALIDATE_EMAIL)) {
        $errors[] = 'Please enter a valid email address';
    }

    // Validate rating
    if (!isset($formData['rating']) || !ctype_digit((string)$formData['rating']) || 
        ($formData['rating'] < 1 || $formData['rating'] > 5)) {
        $errors[] = 'Rating must be between 1 and 5';
    }

    // Validate comment
    if (empty($formData['comment'])) {
        $errors[] = 'Please write your review/comment';
    } elseif (strlen($formData['comment']) < 10) {
        $errors[] = 'Comment must be at least 10 characters long';
    } elseif (preg_match('/(spam|admin)/i', $formData['comment'])) {
        $errors[] = 'Inappropriate content detected in comment';
    }

    return $errors;
}

// Function to display all reviews
function displayReviews() {
    global $conn;

    try {
        // Query the database for all reviews
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY timestamp DESC");
        
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo '<div class="review">';
            echo '<h3>' . validateInput($row['name']) . '</h3>';
            echo '<p>' . validateInput($row['comment']) . '</p>';
            
            // Display stars
            echo '<div class="rating">';
            for ($i = 1; $i <= $row['rating']; $i++) {
                echo '<span class="star">★</span>';
            }
            for ($i = 1; $i <= (5 - $row['rating']); $i++) {
                echo '<span class="star">☆</span>';
            }
            echo '</div>';
            
            // Display timestamp
            echo '<small>' . date('F j, Y g:i a', strtotime($row['timestamp'])) . '</small>';
            echo '</div>';
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}
?>


<?php
require_once 'review-functions.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $formData = array(
        'name' => validateInput($_POST['name']),
        'email' => validateInput($_POST['email']),
        'rating' => intval($_POST['rating']),
        'comment' => validateInput($_POST['comment'])
    );

    // Validate the form data
    $errors = validateReview($formData);

    if (empty($errors)) {
        try {
            submitReview($formData['name'], $formData['email'], 
                        $formData['rating'], $formData['comment']);
            echo '<p class="success">Thank you for your review!</p>';
        } catch(Exception $e) {
            die('<p class="error">' . $e->getMessage() . '</p>');
        }
    } else {
        foreach ($errors as $error) {
            echo '<p class="error">' . $error . '</p>';
        }
    }
}
?>


<?php require_once 'review-functions.php'; ?>
<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .star { color: gold; }
    </style>
</head>
<body>
    <?php displayReviews(); ?>
</body>
</html>


<?php
// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $rating, $comment, $conn) {
    global $connection;
    
    // Escape the inputs to prevent SQL injection
    $name = mysqli_real_escape_string($connection, $name);
    $rating = mysqli_real_escape_string($connection, $rating);
    $comment = mysqli_real_escape_string($connection, $comment);
    
    // Insert the review into the database
    $sql = "INSERT INTO reviews (user_name, rating, comment, timestamp) 
            VALUES ('$name', '$rating', '$comment', NOW())";
    if (!mysqli_query($connection, $sql)) {
        die("Error inserting review: " . mysqli_error($connection));
    }
}

// Function to display all reviews
function displayReviews($conn) {
    global $connection;
    
    // Fetch all reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($connection, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Validate input
    if (empty($name) || empty($comment)) {
        echo "Please fill in all required fields!";
    } else if (!ctype_digit($rating) || $rating < 1 || $rating > 5) {
        echo "Please select a valid rating between 1 and 5!";
    } else {
        addReview($name, $rating, $comment, $connection);
    }
}

// Display the review form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px 0;
        }
        .review {
            margin: 15px 0;
            padding: 10px;
            border-bottom: 1px dotted #ccc;
        }
    </style>
</head>
<body>

<div class="review-box">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name"><br><br>
        
        <label for="rating">Rating (1-5):</label><br>
        <select id="rating" name="rating">
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br><br>
        
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4"></textarea><br><br>
        
        <input type="submit" value="Submit Review">
    </form>
</div>

<h2>Previous Reviews</h2>
<?php displayReviews($connection); ?>

</body>
</html>

// Close the database connection
mysqli_close($connection);
?>


$connection = mysqli_connect("localhost", "username", "password", "database_name");


<?php
// Function to handle and display user reviews
function userReviewSystem() {
    // Review data array
    $reviews = [];
    
    // Check if review form has been submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);
        
        // Validate input
        if ($name == "" || $email == "" || $rating < 1 || $rating > 5 || $comment == "") {
            echo "Please fill in all fields with valid information!";
            exit;
        }
        
        // Create review array
        $review = [
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => date('Y-m-d H:i:s')
        ];
        
        // Load existing reviews from file
        if (file_exists('reviews.json')) {
            $json_data = file_get_contents('reviews.json');
            $reviews = json_decode($json_data, true);
        }
        
        // Add new review
        array_unshift($reviews, $review); // Add to beginning of array
        
        // Save reviews back to file
        $json_output = json_encode($reviews, JSON_PRETTY_PRINT);
        file_put_contents('reviews.json', $json_output);
    }
    
    // Load existing reviews from file
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);
    }
    
    // Display review form
    ?>
    <div class="review-container">
        <h2>Submit a Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name"><br><br>
            
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email"><br><br>
            
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select><br><br>
            
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5"></textarea><br><br>
            
            <input type="submit" value="Submit Review">
        </form>
        
        <?php if (!empty($reviews)): ?>
            <h2>Reviews</h2>
            <div class="review-list">
                <?php foreach ($reviews as $review): ?>
                    <div class="review-item">
                        <div class="review-header">
                            <span class="review-name"><?php echo $review['name']; ?></span>
                            <div class="review-stars">
                                <?php 
                                for ($i = 1; $i <= $review['rating']; $i++) {
                                    echo '<span class="star">★</span>';
                                }
                                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                                    echo '<span class="star">☆</span>';
                                }
                                ?>
                            </div>
                        </div>
                        <p><?php echo $review['comment']; ?></p>
                        <small><?php echo $review['timestamp']; ?></small>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </div>
    
    <style>
        .review-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        
        h2 {
            color: #333;
            border-bottom: 2px solid #ddd;
            padding-bottom: 10px;
        }
        
        form {
            margin-bottom: 30px;
        }
        
        input[type="text"], input[type="email"], textarea, select {
            width: 100%;
            padding: 8px;
            margin: 5px 0 20px 0;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        
        .review-list {
            margin-top: 20px;
        }
        
        .review-item {
            border-bottom: 1px solid #ddd;
            padding: 15px 0;
        }
        
        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        
        .star {
            color: #FFD700;
            font-size: 24px;
        }
        
        small {
            color: #666;
            display: block;
            margin-top: 5px;
        }
    </style>
    <?php
}

// Call the review system function
userReviewSystem();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'review_system';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submit_review($user_id, $product_id, $rating, $comment, $conn) {
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Validate input
    if (!isset($user_id) || !isset($product_id) || !isset($rating) || !isset($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Check if user exists
    $check_user = mysqli_query($conn, "SELECT id FROM users WHERE id='$user_id'");
    if (!$check_user->num_rows > 0) {
        return "Invalid user ID!";
    }

    // Check if product exists
    $check_product = mysqli_query($conn, "SELECT id FROM products WHERE id='$product_id'");
    if (!$check_product->num_rows > 0) {
        return "Invalid product ID!";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

function get_reviews($product_id, $conn, $limit = 10, $offset = 0) {
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Get reviews for a specific product
    $sql = "SELECT r.*, u.username 
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE r.product_id = '$product_id'
            ORDER BY created_at DESC
            LIMIT $offset, $limit";

    $result = $conn->query($sql);
    $reviews = array();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $review = array(
                'id' => $row['id'],
                'user_id' => $row['user_id'],
                'username' => $row['username'],
                'product_id' => $row['product_id'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'created_at' => date('F j, Y g:i a', strtotime($row['created_at']))
            );
            array_push($reviews, $review);
        }
        return $reviews;
    } else {
        return "No reviews found!";
    }
}

// Example usage:

// Submit review
$user_id = 1;
$product_id = 1;
$rating = 5;
$comment = "Great product! Highly recommended.";

echo submit_review($user_id, $product_id, $rating, $comment, $conn);

// Get reviews for product ID 1
$reviews = get_reviews(1, $conn);
if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "Rating: " . $review['rating'] . "<br>";
        echo "Comment: " . $review['comment'] . "<br>";
        echo "Posted by: " . $review['username'] . "<br>";
        echo "Date: " . $review['created_at'] . "<br><br>";
    }
} else {
    echo $reviews;
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a user review
function createReview($reviewId, $userId, $rating, $comment, $timestamp = null) {
    global $conn;

    // If timestamp is not provided, use current time
    if ($timestamp === null) {
        $timestamp = date('Y-m-d H:i:s');
    }

    try {
        // Start a transaction
        $conn->begin_transaction();

        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (review_id, user_id, rating, comment, timestamp) VALUES (?, ?, ?, ?, ?)");
        
        if ($stmt === false) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("issss", $reviewId, $userId, $rating, $comment, $timestamp);

        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $stmt->error);
        }

        // Close the statement
        $stmt->close();

        // Commit the transaction
        $conn->commit();

        return true;

    } catch (Exception $e) {
        // Rollback on error
        $conn->rollback();
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
$reviewId = 12345; // Replace with actual review ID
$userId = 67890;   // Replace with actual user ID
$rating = 4;       // Rating between 1-5, for example
$comment = "This is a great product!"; 

if (createReview($reviewId, $userId, $rating, $comment)) {
    echo "Review created successfully!";
} else {
    echo "Failed to create review.";
}

// Close the database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviewdb";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Submit review function
function submitReview($conn) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $username = htmlspecialchars($_POST['username']);
        $rating = intval($_POST['rating']);
        $comments = htmlspecialchars($_POST['comments']);
        
        // Check if all fields are filled
        if (empty($username) || empty($rating) || empty($comments)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comments, submission_date)
                VALUES ('$username', '$rating', '$comments', CURRENT_TIMESTAMP)";
        
        if (mysqli_query($conn, $sql)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Display reviews function
function displayReviews($conn) {
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Reviewer: " . $row['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>Comments: " . $row['comments'] . "</p>";
            echo "<p>Submitted on: " . date('jS M Y, g:i a', strtotime($row['submission_date'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Calculate average rating function
function averageRating($conn) {
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    $average = round($row['average'], 1);
    echo "Average Rating: " . str_repeat("★", floor($average)) . (($average - floor($average)) >= 0.5 ? "½" : "") . str_repeat("☆", 5 - ceil($average));
}

// Close database connection
mysqli_close($conn);
?>


submitReview($conn);


displayReviews($conn);


averageRating($conn);


<?php
function process_review($connection) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $review_id = isset($_POST['review_id']) ? $_POST['review_id'] : '';
        $review_text = htmlspecialchars(trim($_POST['review_text']));
        $rating = intval($_POST['rating']);
        $reviewer_name = htmlspecialchars(trim($_POST['reviewer_name']));

        // Determine if we're adding a new review or editing an existing one
        if ($review_id == '') {
            // Insert new review
            $sql = "INSERT INTO reviews (review_text, rating, reviewer_name) 
                    VALUES ('$review_text', '$rating', '$reviewer_name')";
        } else {
            // Update existing review
            $sql = "UPDATE reviews SET review_text='$review_text', rating='$rating', reviewer_name='$reviewer_name' 
                    WHERE id='$review_id'";
        }

        // Execute query
        if ($connection->query($sql) === TRUE) {
            $response = array(
                'status' => 'success',
                'message' => 'Review processed successfully!'
            );
            if ($review_id == '') {
                // Get the last inserted ID for new reviews
                $last_id = $connection->insert_id;
                $response['review_id'] = $last_id;
            } else {
                $response['review_id'] = $review_id;
            }
            return json_encode($response);
        } else {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Error processing review: ' . $connection->error
            ));
        }
    } else {
        // Return error if form not submitted
        return json_encode(array(
            'status' => 'error',
            'message' => 'No review data submitted.'
        ));
    }
}

// Example usage:
// 1. Connect to database
$connection = new mysqli("localhost", "username", "password", "database");

// Check connection
if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// 2. Process review
$result = process_review($connection);

// 3. Output result
echo $result;

// Close connection
$connection->close();
?>


<?php
// Include database configuration
include('config.php');

function add_review($rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate input
    if (!isset($rating) || !isset($comment)) {
        die("Please fill in all required fields.");
    }
    
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5.");
    }
    
    // Insert review into database
    $query = "INSERT INTO reviews (rating, comment) VALUES ('$rating', '$comment')";
    mysqli_query($conn, $query);
}

function display_reviews() {
    global $conn;
    
    // Get all reviews from the database
    $query = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        echo "<h2>Customer Reviews</h2>";
        while ($row = mysqli_fetch_assoc($result)) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $created_at = $row['created_at'];
            
            // Display rating stars
            echo "<div class='review'>";
            echo "<p>Rating: ";
            for ($i = 1; $i <= $rating; $i++) {
                echo "⭐";
            }
            echo "</p>";
            echo "<p>Comment: $comment</p>";
            echo "<small>Posted on: $created_at</small>";
            echo "</div><br>";
        }
        
        // Calculate and display average rating
        $avg_query = "SELECT AVG(rating) AS avg_rating FROM reviews";
        $avg_result = mysqli_query($conn, $avg_query);
        $row = mysqli_fetch_assoc($avg_result);
        $avg_rating = number_format($row['avg_rating'], 1);
        
        echo "<h3>Average Rating: $avg_rating/5</h3>";
    } else {
        echo "No reviews found.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL,
    rating INT NOT NULL,
    comment TEXT NOT NULL,
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

$conn->query($sql);

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $user_name = trim(htmlspecialchars($_POST['name']));
        $rating = intval($_POST['rating']);
        $comment = trim(htmlspecialchars($_POST['comment']));

        // Validate input
        if ($user_name == "" || $comment == "") {
            echo "Please fill in all required fields.";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars.";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, rating, comment)
                VALUES ('$user_name', '$rating', '$comment')";
                
        if ($conn->query($sql)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Calculate average rating
        $avg_rating_sql = "SELECT AVG(rating) as avg_rating FROM reviews";
        $avg_result = $conn->query($avg_rating_sql);
        $row = $avg_result->fetch_assoc();
        $average_rating = round($row['avg_rating'], 1);

        echo "<div class='review-stats'>";
        echo "<h2>Average Rating: " . $average_rating . "/5</h2>";
        echo "</div>";

        // Display each review
        while ($row = $result->fetch_assoc()) {
            $stars = str_repeat('<span class="star">★</span>', $row['rating']);
            if (strpos($stars, '★') === false) {
                // No rating stars if rating is 0
            } else {
                echo "<div class='review'>";
                echo "<h3>Reviewer: " . $row['user_name'] . "</h3>";
                echo "<p class='rating'>Rating: " . str_repeat('<span class="star">★</span>', $row['rating']) . "</p>";
                if ($row['rating'] == 5) {
                    // Add some text for perfect rating
                }
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Submitted on: " . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
                echo "</div>";
            }
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
$conn->close();
?>


<?php
function submitReview($userId, $productId, $rating, $reviewText) {
    // Database configuration
    $host = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbName = "reviews_db";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // Start transaction
        mysqli_begin_transaction($conn);
        
        // Check if user has already reviewed this product
        $checkReviewQuery = "SELECT review_id FROM reviews WHERE user_id = ? AND product_id = ?";
        $stmtCheck = mysqli_prepare($conn, $checkReviewQuery);
        mysqli_stmt_bind_param($stmtCheck, "ii", $userId, $productId);
        mysqli_stmt_execute($stmtCheck);
        
        // Get result
        $result = mysqli_stmt_get_result($stmtCheck);
        $existingReview = mysqli_fetch_assoc($result);

        if ($existingReview) {
            // User already reviewed this product
            return "You have already reviewed this product.";
        } else {
            // Insert new review
            $insertReviewQuery = "INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)
                                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
            
            $stmtInsert = mysqli_prepare($conn, $insertReviewQuery);
            mysqli_stmt_bind_param($stmtInsert, "iisi", $userId, $productId, $rating, $reviewText);
            
            if (mysqli_stmt_execute($stmtInsert)) {
                // Commit the transaction
                mysqli_commit($conn);
                return "Review submitted successfully!";
            } else {
                // Rollback on error
                mysqli_rollback($conn);
                return "Error submitting review: " . mysqli_error($conn);
            }
        }

    } catch (Exception $e) {
        // Rollback on exception
        mysqli_rollback($conn);
        return "An error occurred while processing your review. Please try again later.";
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}
?>


$userId = 123;
$productId = 456;
$rating = 5;
$reviewText = "This is an excellent product!";

$result = submitReview($userId, $productId, $rating, $reviewText);
echo $result;


<?php
session_start();
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Error messages
$errors = [];

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // Sanitize and validate input data
    $user_name = mysqli_real_escape_string($conn, trim($_POST['name']));
    $review_text = mysqli_real_escape_string($conn, trim($_POST['review']));
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;

    // Input validation
    if (empty($user_name)) {
        $errors[] = "Please enter your name.";
    }
    if (empty($review_text)) {
        $errors[] = "Please write a review.";
    }
    if ($rating < 1 || $rating > 5) {
        $errors[] = "Please select a rating between 1 and 5 stars.";
    }

    // If no errors, insert into database
    if (empty($errors)) {
        $sql = "INSERT INTO reviews (user_name, review_text, rating)
                VALUES ('$user_name', '$review_text', '$rating')";
        
        if (!mysqli_query($conn, $sql)) {
            $errors[] = "Error submitting your review. Please try again.";
        } else {
            // Clear previous errors
            unset($_SESSION['errors']);
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    } else {
        $_SESSION['errors'] = $errors;
    }
}

// Get all reviews from database
$sql_reviews = "SELECT * FROM reviews ORDER BY created_at DESC";
$result = mysqli_query($conn, $sql_reviews);
$reviews = [];
if ($result) {
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .stars {
            display: flex;
            gap: 5px;
            font-size: 24px;
        }
        input[type="radio"] {
            display: none;
        }
        label.star {
            cursor: pointer;
            color: #ddd;
        }
        label.star:hover,
        label.star.active {
            color: gold;
        }
        .review-list {
            margin-top: 30px;
        }
        .single-review {
            border-bottom: 1px solid #eee;
            padding: 20px 0;
        }
    </style>
</head>
<body>
    <?php if (isset($_SESSION['errors']) && !empty($_SESSION['errors'])) : ?>
        <div style="color: red; margin-bottom: 20px;">
            <?php foreach ($_SESSION['errors'] as $error) : ?>
                <?php echo $error; ?><br>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <!-- Review Form -->
    <form class="review-form" method="post">
        <h2>Submit Your Review</h2>
        
        <div class="stars">
            <input type="radio" name="rating" id="5-stars" value="5">
            <label for="5-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="4-stars" value="4">
            <label for="4-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="3-stars" value="3">
            <label for="3-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="2-stars" value="2">
            <label for="2-stars" class="star">★</label>
            
            <input type="radio" name="rating" id="1-star" value="1" checked>
            <label for="1-star" class="star">★</label>
        </div>

        <input type="text" name="name" placeholder="Enter your name" required>
        
        <textarea name="review" placeholder="Write your review..." rows="4" required></textarea>
        
        <button type="submit">Submit Review</button>
    </form>

    <!-- Reviews List -->
    <?php if (!empty($reviews)) : ?>
        <div class="review-list">
            <h2>Customer Reviews</h2>
            <?php foreach ($reviews as $review) : ?>
                <div class="single-review">
                    <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>
                    
                    <div class="stars">
                        <?php for ($i = 1; $i <= $review['rating']; $i++) : ?>
                            <span style="color: gold;">★</span>
                        <?php endfor; ?>
                        <?php for ($i = 1; $i <= (5 - $review['rating']); $i++) : ?>
                            <span>★</span>
                        <?php endfor; ?>
                    </div>

                    <p><?php echo htmlspecialchars($review['review_text']); ?></p>
                    
                    <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
                </div>
            <?php endforeach; ?>

            <!-- Calculate and display average rating -->
            <?php
            $averageRating = 0;
            $totalRatings = count($reviews);
            
            if ($totalRatings > 0) {
                $sum = array_sum(array_column($reviews, 'rating'));
                $averageRating = $sum / $totalRatings;
            }
            ?>

            <div class="average-rating">
                <h3>Average Rating: <?php echo number_format($averageRating, 1); ?>/5</h3>
                
                <div class="stars average-stars">
                    <?php $averageFullStars = floor($averageRating); ?>
                    <?php for ($i = 1; $i <= $averageFullStars; $i++) : ?>
                        <span style="color: gold;">★</span>
                    <?php endfor; ?>

                    <?php if ($averageRating - $averageFullStars > 0) : ?>
                        <span>⯨</span>
                    <?php endif; ?>

                    <?php for ($i = 1; $i <= (5 - ceil($averageRating)); $i++) : ?>
                        <span>★</span>
                    <?php endfor; ?>
                </div>
            </div>
        </div>
    <?php else : ?>
        <p>No reviews yet. Be the first to review this product!</p>
    <?php endif; ?>

    <!-- Close database connection -->
    <?php mysqli_close($conn); ?>
</body>
</html>


<?php
// Function to display the review form
function display_review_form() {
    // Display the HTML form
    echo '
        <form method="post" action="submit_review.php">
            <div class="review-form">
                <h2>Write a Review</h2>
                <input type="text" name="title" placeholder="Review Title" required>
                <textarea name="content" placeholder="Write your review here..." required></textarea>
                <div class="rating">
                    <label for="rating">Rating:</label>
                    <select name="rating" id="rating">
                        <option value="5">5 Stars</option>
                        <option value="4">4 Stars</option>
                        <option value="3">3 Stars</option>
                        <option value="2">2 Stars</option>
                        <option value="1">1 Star</option>
                    </select>
                </div>
                <button type="submit" name="submit_review">Submit Review</button>
            </div>
        </form>
    ';
}

// Function to submit a review
function submit_review($title, $content, $rating) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs
    $title = mysqli_real_escape_string($conn, htmlspecialchars($title));
    $content = mysqli_real_escape_string($conn, htmlspecialchars($content));
    $rating = intval($rating);
    
    // Validate inputs
    if (strlen($title) < 1 || strlen($title) > 200) {
        die("Title must be between 1 and 200 characters.");
    }
    
    if (strlen($content) < 1) {
        die("Review content cannot be empty.");
    }
    
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5 stars.");
    }
    
    // Get user ID from session
    if (!isset($_SESSION['user_id'])) {
        die("Please login to submit a review.");
    }
    $user_id = $_SESSION['user_id'];
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, title, content, rating, submission_date)
            VALUES ('$user_id', '$title', '$content', '$rating', NOW())";
    
    if (!mysqli_query($conn, $sql)) {
        die("Error submitting review: " . mysqli_error($conn));
    }
    
    // Close database connection
    mysqli_close($conn);
    
    header("Location: thank_you.php");
    exit();
}

// Function to display reviews from the database
function display_reviews() {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Get all reviews ordered by submission date
    $sql = "SELECT r.*, u.username FROM reviews r
            JOIN users u ON r.user_id = u.id
            ORDER BY r.submission_date DESC";
    
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Error fetching reviews: " . mysqli_error($conn));
    }
    
    // Display each review
    while ($row = mysqli_fetch_assoc($result)) {
        echo '
            <div class="review">
                <h3>' . htmlspecialchars($row['title']) . '</h3>
                <p>By ' . htmlspecialchars($row['username']) . ' - ' .
                    date('F j, Y', strtotime($row['submission_date'])) . '</p>
                <div class="stars">' . get_stars($row['rating']) . '</div>
                <p>' . nl2br(htmlspecialchars($row['content'])) . '</p>
            </div>
        ';
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Helper function to display stars based on rating
function get_stars($rating) {
    $stars = '';
    for ($i = 1; $i <= $rating; $i++) {
        $stars .= '★';
    }
    return $stars;
}
?>


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($user_id, $product_id, $rating, $review_text) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, created_at) 
            VALUES ('$user_id', '$product_id', '$rating', '$review_text', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function getProductReviews($product_id) {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get all reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return number_format((float)$row['average_rating'], 1, '.', '');
    } else {
        return 0;
    }
}

// Function to display star rating
function displayStars($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★";
        } else {
            $stars .= "☆";
        }
    }
    return $stars;
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .rating-stars {
            color: gold;
            font-size: 24px;
        }
        
        .review-form input[type="text"],
        .review-form textarea {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <?php
    // Display review form
    if (isset($_GET['product_id'])) {
        $product_id = $_GET['product_id'];
        
        echo "<h2>Write a Review for Product #" . $product_id . "</h2>";
        echo "<form method='post' action='submit_review.php'>";
        echo "<input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<label>Your Name:</label><br>";
        echo "<input type='text' name='user_name' required><br>";
        echo "<label>Email:</label><br>";
        echo "<input type='email' name='email' required><br>";
        echo "<label>Rating:</label><br>";
        for ($i = 1; $i <= 5; $i++) {
            echo "<input type='radio' name='rating' value='" . $i . "'>" . $i . " Stars<br>";
        }
        echo "<br><label>Review:</label><br>";
        echo "<textarea name='review_text' rows='4' required></textarea><br>";
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
    }
    
    // Display reviews
    if (isset($_GET['product_id'])) {
        $reviews = getProductReviews($product_id);
        
        if ($reviews) {
            while ($row = mysqli_fetch_assoc($reviews)) {
                echo "<div class='review-container'>";
                echo "<h3>" . $row['user_name'] . "</h3>";
                echo "<p class='rating-stars'>" . displayStars($row['rating']) . "</p>";
                echo "<p>" . $row['review_text'] . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small><br>";
                echo "<div class='helpful'><button onclick=\"incrementHelpful(" . $row['id'] . ")\"> Helpful (" . $row['helpful_count'] . ") </button></div>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews available for this product.</p>";
        }
    }
    
    // Display average rating
    if (isset($_GET['product_id'])) {
        $average_rating = getAverageRating($product_id);
        echo "<h3> Average Rating: " . $average_rating . "/5 </h3>";
    }
    ?>

    <script>
        function incrementHelpful(review_id) {
            // Implement helpful count functionality here
            alert('Thank you for your feedback!');
        }
    </script>
</body>
</html>


<?php
// Initialize reviews array (you would typically use a database in a real application)
$reviews = array();

function handleReviews($action, $username = "", $rating = 0, $comment = "") {
    global $reviews;
    
    switch ($action) {
        case "submit":
            // Add new review to the array
            $review_id = count($reviews); // Simple ID system using count
            $new_review = array(
                "id" => $review_id,
                "username" => $username,
                "rating" => $rating,
                "comment" => $comment,
                "date" => date("Y-m-d H:i:s")
            );
            array_push($reviews, $new_review);
            break;
            
        case "display":
            // Display all reviews
            if (empty($reviews)) {
                echo "<p>No reviews yet!</p>";
            } else {
                echo "<div class='review-list'>";
                foreach ($reviews as $review) {
                    echo "<div class='review'>";
                    echo "<h4>Rating: {$review['rating']} stars</h4>";
                    echo "<p><strong>{$review['username']}</strong></p>";
                    echo "<p>{$review['comment']}</p>";
                    echo "<small>Posted on {$review['date']}</small>";
                    echo "</div>";
                }
                echo "</div>";
                
                // Display average rating
                $average_rating = calculateAverageRating();
                echo "<div class='average-rating'>";
                echo "Average Rating: $average_rating stars";
                echo "</div>";
            }
            break;
            
        case "delete":
            // Delete a review by username
            foreach ($reviews as $key => $review) {
                if ($review['username'] == $username) {
                    unset($reviews[$key]);
                    array_values($reviews); // Re-index the array
                }
            }
            break;
    }
}

function calculateAverageRating() {
    global $reviews;
    
    if (empty($reviews)) {
        return 0;
    } else {
        $total_ratings = array_sum(array_column($reviews, 'rating'));
        $average_rating = $total_ratings / count($reviews);
        return number_format($average_rating, 1); // Round to one decimal place
    }
}

// Example usage:
// Submit a new review
handleReviews("submit", "JohnDoe", 5, "Great product! Highly recommended.");

// Display all reviews with average rating
echo "<h2>Product Reviews</h2>";
handleReviews("display");

// Delete a review by username
handleReviews("delete", "JohnDoe");
?>



// Submit a new review
handleReviews("submit", "JaneSmith", 4, "Good product but could be better.");

// Display all reviews
echo "<h2>Product Reviews</h2>";
handleReviews("display");

// Delete a specific review
handleReviews("delete", "JaneSmith");


<?php
function createReview($reviewed_user_id, $reviewer_id, $rating, $feedback, $db) {
    try {
        // Check if any fields are empty
        if (empty($reviewed_user_id) || empty($reviewer_id) || empty($rating)) {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Please fill in all required fields'
            ));
        }

        // Validate rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Rating must be between 1 and 5'
            ));
        }

        // Ensure users cannot review themselves
        if ($reviewed_user_id == $reviewer_id) {
            return json_encode(array(
                'status' => 'error',
                'message' => 'You cannot review yourself'
            ));
        }

        // Insert the new review into the database
        $query = "INSERT INTO reviews (reviewed_user_id, reviewer_id, rating, feedback, timestamp)
                  VALUES (:reviewed_user_id, :reviewer_id, :rating, :feedback, NOW())";
        
        $stmt = $db->prepare($query);
        $stmt->bindParam(':reviewed_user_id', $reviewed_user_id);
        $stmt->bindParam(':reviewer_id', $reviewer_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':feedback', $feedback);

        if ($stmt->execute()) {
            return json_encode(array(
                'status' => 'success',
                'message' => 'Review submitted successfully',
                'data' => array(
                    'reviewed_user_id' => $reviewed_user_id,
                    'reviewer_id' => $reviewer_id,
                    'rating' => $rating,
                    'feedback' => $feedback
                )
            ));
        } else {
            return json_encode(array(
                'status' => 'error',
                'message' => 'Error submitting review'
            ));
        }

    } catch (PDOException $e) {
        // Rollback the transaction if something goes wrong
        $db->rollBack();
        return json_encode(array(
            'status' => 'error',
            'message' => 'Database error: ' . $e->getMessage()
        ));
    }
}
?>


// Example usage:
$reviewed_user_id = 1;
$reviewer_id = 2;
$rating = 5;
$feedback = "Great service!";
$db = new PDO(...);

$result = createReview($reviewed_user_id, $reviewer_id, $rating, $feedback, $db);
echo $result;


<?php
// Function to create a user review form and display existing reviews
function userReview() {
    // Check if the form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = htmlspecialchars($_POST['name']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);
        
        // Create an array with review details
        $review = [
            'name' => $name,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => date('Y-m-d H:i:s')
        ];
        
        // Save the review to a text file
        $file = fopen("reviews.txt", "a");
        fwrite($file, json_encode($review) . "
");
        fclose($file);
    }

    // Display existing reviews
    echo '<div class="review-container">';
    
    // Check if the reviews file exists
    if (file_exists("reviews.txt") && filesize("reviews.txt") > 0) {
        $lines = file("reviews.txt");
        
        foreach ($lines as $line) {
            $review = json_decode($line);
            
            echo '<div class="single-review">';
            echo '<h3>' . $review->name . '</h3>';
            echo '<p>Rating: ' . str_repeat('★', $review->rating) . '</p>';
            echo '<p>' . $review->comment . '</p>';
            echo '<small>' . $review->timestamp . '</small>';
            echo '</div>';
        }
    } else {
        echo '<p>No reviews have been submitted yet.</p>';
    }
    
    echo '</div>';
    
    // Display the review form
    echo '<div class="review-form">';
    echo '<h2>Submit a Review</h2>';
    echo '<form method="post" action="' . $_SERVER['PHP_SELF'] . '">';
    echo '<label for="name">Name:</label><br>';
    echo '<input type="text" id="name" name="name" required><br>';
    echo '<label for="rating">Rating (1-5):</label><br>';
    echo '<select id="rating" name="rating">';
    for ($i = 1; $i <= 5; $i++) {
        echo '<option value="' . $i . '">' . $i . ' Star' . ($i != 1 ? 's' : '') . '</option>';
    }
    echo '</select><br>';
    echo '<label for="comment">Comment:</label><br>';
    echo '<textarea id="comment" name="comment" required></textarea><br>';
    echo '<input type="submit" value="Submit Review">';
    echo '</form>';
    echo '</div>';
}

// Add some basic styling
echo '<style>
.review-container {
    background: #f5f5f5;
    padding: 20px;
    margin-bottom: 20px;
}
.single-review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 15px;
}
.review-form {
    background: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}
input, select, textarea {
    width: 100%;
    margin-bottom: 10px;
    padding: 8px;
    border: 1px solid #ddd;
}
</style>';
?>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate inputs
    if (empty($_POST['rating']) || empty($_POST['comment'])) {
        $error = "Please fill in all required fields!";
    } else {
        $rating = $_POST['rating'];
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);
        $user_id = 1; // Replace with actual user ID

        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, rating, comment) 
                VALUES ('$user_id', '$rating', '$comment')";

        if (mysqli_query($conn, $sql)) {
            $success = "Thank you for submitting your review!";
            header("Refresh: 2; url=reviews.php");
        } else {
            $error = "Error submitting review: " . mysqli_error($conn);
        }
    }
}

// Get all reviews
$sql_reviews = "SELECT * FROM reviews ORDER BY id DESC";
$result = mysqli_query($conn, $sql_reviews);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
            color: gold;
        }
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .review-box {
            background-color: #f9f9f9;
            padding: 15px;
            margin: 10px 0;
            border-radius: 3px;
        }
        .success, .error {
            padding: 10px;
            margin: 10px 0;
            border-radius: 3px;
        }
        .success { background-color: #dff0d8; color: #3c763d; }
        .error { background-color: #f2dede; color: #a94442; }
    </style>
</head>
<body>

<h1>Review System</h1>

<?php
if (isset($success)) {
    echo "<div class='success'>" . $success . "</div>";
}
if (isset($error)) {
    echo "<div class='error'>" . $error . "</div>";
}

// Display review form
?>

<div class="review-form">
    <h2>Submit Your Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="rating">Rating:</label><br>
            <select name="rating" id="rating">
                <option value="">Please select a rating</option>
                <option value="5">5 Stars (Excellent)</option>
                <option value="4">4 Stars (Very Good)</option>
                <option value="3">3 Stars (Average)</option>
                <option value="2">2 Stars (Poor)</option>
                <option value="1">1 Star (Terrible)</option>
            </select>
        </div><br>

        <div>
            <label for="comment">Review:</label><br>
            <textarea name="comment" id="comment" rows="5"></textarea>
        </div><br>

        <button type="submit">Submit Review</button>
    </form>
</div>

<br>

<h2>Reviews</h2>

<?php
if (mysqli_num_rows($result) > 0) {
    // Display average rating
    $avg_rating_sql = "SELECT AVG(rating) as avg_rating FROM reviews";
    $avg_result = mysqli_query($conn, $avg_rating_sql);
    $avg_row = mysqli_fetch_assoc($avg_result);
    
    echo "<div style='margin-bottom: 20px;'>";
    echo "<strong>Average Rating:</strong> " . number_format($avg_row['avg_rating'], 1) . "/5";
    echo "<span class='rating-stars'>★</span><br>";
    echo "(Total reviews: " . mysqli_num_rows($result) . ")";
    echo "</div>";

    // Display all reviews
    while ($row = mysqli_fetch_assoc($result)) {
        $user_id = $row['user_id'];
        $username_sql = "SELECT username FROM users WHERE id='$user_id'";
        $username_result = mysqli_query($conn, $username_sql);
        $username_row = mysqli_fetch_assoc($username_result);
        
        echo "<div class='review-box'>";
        echo "<h3>Review by: " . $username_row['username'] . "</h3>";
        echo "<div class='rating-stars'>";
        for ($i = 1; $i <= $row['rating']; $i++) {
            echo "★";
        }
        for ($i = $row['rating'] + 1; $i <=5; $i++) {
            echo "☆"; 
        }
        echo "</div>";
        echo "<p>" . $row['comment'] . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet. Be the first to review!</p>";
}

// Close database connection
mysqli_close($conn);
?>

</body>
</html>


<?php
function displayUserReview($productId, $productName, $price, $reviews) {
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = count($reviews) > 0 ? round($totalRating / count($reviews), 1) : 0;

    // Display product information
    echo "<div class='product-review'>";
    echo "<h2>$productName</h2>";
    echo "<p>Price: $$price</p>";
    
    // Display average rating
    if ($averageRating > 0) {
        $stars = floor($averageRating);
        for ($i = 1; $i <= $stars; $i++) {
            echo "★";
        }
        if ($averageRating - $stars >= 0.5) {
            echo "½";
        }
        for ($i = $stars + 1; $i <= 5; $i++) {
            echo "☆";
        }
    } else {
        echo "<p>No reviews yet</p>";
    }

    // Display individual reviews
    if (!empty($reviews)) {
        echo "<div class='review-section'>";
        foreach ($reviews as $review) {
            echo "<div class='single-review'>";
            echo "<h3>Review by " . htmlspecialchars($review['username']) . "</h3>";
            
            // Display stars for this review
            $rating = $review['rating'];
            for ($i = 1; $i <= $rating; $i++) {
                echo "★";
            }
            for ($i = $rating + 1; $i <= 5; $i++) {
                echo "☆";
            }
            
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($review['timestamp'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
    }

    // Close product review container
    echo "</div>";
}
?>


// Example usage:
$product_id = 1;
$product_name = "Example Product";
$price = 49.99;

// Retrieve reviews from database
$query = "SELECT r.rating, r.comment, r.timestamp, u.username 
          FROM reviews r 
          INNER JOIN users u ON r.user_id = u.user_id 
          WHERE r.product_id = $product_id";
$result = mysqli_query($connection, $query);

$reviews = array();
while ($row = mysqli_fetch_assoc($result)) {
    $reviews[] = $row;
}

displayUserReview($product_id, $product_name, $price, $reviews);


<?php
// Connect to MySQL database
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    // Sanitize input to prevent SQL injection and XSS
    return htmlspecialchars(trim($data));
}

function submitReview($name, $email, $rating, $comments, $conn) {
    global $conn;
    
    // Sanitize inputs
    $name = sanitizeInput($name);
    $email = sanitizeInput($email);
    $rating = intval($rating); // Ensure rating is an integer
    $comments = sanitizeInput($comments);
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comments)
            VALUES ('$name', '$email', $rating, '$comments')";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review submitted successfully!";
}

function displayReviews($conn) {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Comments: " . $row['comments'] . "</p>";
            echo "<small>" . date('F j, Y g:i a', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

function calculateAverageRating($conn) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['average'] == 0 || !$row['average']) {
        return "No ratings yet!";
    } else {
        return round($row['average'], 1) . "/5";
    }
}
?>


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Review class
class Review {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Add review to database
    public function add_review($name, $review_text) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO reviews (name, review_text, timestamp) VALUES (?, ?, NOW())");
            $stmt->bind_param("ss", $name, $review_text);
            
            if ($stmt->execute()) {
                return true;
            } else {
                throw new Exception("Error adding review: " . $this->conn->error);
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get reviews from database
    public function get_reviews() {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM reviews ORDER BY timestamp DESC");
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                return $result->fetch_all(MYSQLI_ASSOC);
            } else {
                throw new Exception("No reviews found.");
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return array();
        }
    }
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    // Initialize Review class
    $review = new Review($conn);
    
    // Sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $review_text = htmlspecialchars(trim($_POST['review_text']));
    
    // Check if fields are not empty
    if (!empty($name) && !empty($review_text)) {
        if ($review->add_review($name, $review_text)) {
            // Success message
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            // Error message
            echo "<div class='error'>Error adding review. Please try again.</div>";
        }
    } else {
        // Empty fields error
        echo "<div class='error'>Please fill in all required fields.</div>";
    }
}

// Get and display reviews
$review = new Review($conn);
$reviews = $review->get_reviews();

if (!empty($reviews)) {
    foreach ($reviews as $rev) {
        echo "<div class='review'>";
        echo "<h3>" . $rev['name'] . "</h3>";
        echo "<p>" . $rev['review_text'] . "</p>";
        echo "<small>Posted on: " . date('F j, Y', strtotime($rev['timestamp'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "<div class='info'>No reviews available.</div>";
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if (isset($_POST['submit'])) {
    // Sanitize inputs
    $name = htmlspecialchars_decode(trim($_POST['name']));
    $email = htmlspecialchars_decode(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $review = htmlspecialchars_decode(trim($_POST['review']));

    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        echo "All fields are required!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address!";
    } else if (strlen($name) < 2 || strlen($name) > 50) {
        echo "Name must be between 2 and 50 characters!";
    } else if (strlen($review) < 10) {
        echo "Review must be at least 10 characters long!";
    } else {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, review, created_at) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("ssii", $name, $email, $rating, $review);

        if ($stmt->execute()) {
            echo "Thank you for submitting your review!";
            // Clear form fields
            header("Refresh:2; url=index.php");
        } else {
            echo "Error submitting review: " . $conn->error;
        }

        $stmt->close();
    }
}

// Display reviews from database
function displayReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while ($row = $result->fetch_assoc()) {
            $averageRating = calculateAverageRating();
            $stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
            
            echo "
                <div class='review'>
                    <h3>Review by {$row['name']}</h3>
                    <p>Rating: $stars</p>
                    <p>{$row['review']}</p>
                    <small>Posted on " . date('F j, Y', strtotime($row['created_at'])) . "</small>
                </div>
            ";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Calculate average rating
function calculateAverageRating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average'], 1);
    } else {
        return 0;
    }
}

$conn->close();
?>


<?php
// Include database connection file
include('db_connection.php');

// Function to handle review submission and display
function user_reviews() {
    // Check if the form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = mysqli_real_escape_string($GLOBALS['conn'], $_POST['review_name']);
        $review_text = mysqli_real_escape_string($GLOBALS['conn'], $_POST['review_text']);

        // Insert review into database
        $sql = "INSERT INTO reviews (author, comment) VALUES ('$name', '$review_text')";
        
        if (!mysqli_query($GLOBALS['conn'], $sql)) {
            die("Error submitting review: " . mysqli_error($GLOBALS['conn']));
        }
    }

    // Get all reviews from database
    $result = mysqli_query($GLOBALS['conn'], "SELECT * FROM reviews ORDER BY id DESC");

    // Display reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>By " . htmlspecialchars($row['author']) . "</h3>";
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "</div>";
    }

    // Close database connection
    mysqli_close($GLOBALS['conn']);
}

// HTML and CSS for the review form
echo "
<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <meta charset='UTF-8'>
    <style>
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }

        input, textarea {
            width: 100%;
            padding: 8px;
            margin: 10px 0;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f9f9f9;
            border-radius: 3px;
        }
    </style>
</head>
<body>
    <div class='container'>
        <h1>Leave a Review</h1>
        
        <form class='review-form' method='post' action='" . $_SERVER['PHP_SELF'] . "'>
            <input type='text' name='review_name' placeholder='Your Name' required><br>
            <textarea name='review_text' placeholder='Write your review here...' rows='4' required></textarea><br>
            <button type='submit'>Submit Review</button>
        </form>

        <h2>Previous Reviews</h2>
";

// Call the user_reviews function to display existing reviews
user_reviews();

echo "
    </div>
</body>
</html>";
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($user_name, $review_text) {
    global $conn;
    
    // Sanitize inputs
    $user_name = htmlspecialchars(trim($user_name));
    $review_text = htmlspecialchars(trim($review_text));
    
    // SQL query to insert review
    $sql = "INSERT INTO reviews (user_name, review_text, timestamp)
            VALUES ('$user_name', '$review_text', CURRENT_TIMESTAMP)";
            
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>" . date('F j, Y g:i a', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['name'];
    $review_text = $_POST['review'];
    
    if (!empty($user_name) && !empty($review_text)) {
        if (addReview($user_name, $review_text)) {
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Error submitting review. Please try again.</div>";
        }
    } else {
        echo "<div class='error'>Please fill in all fields.</div>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 20px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        .success, .error {
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .success { background-color: #dff0d8; color: #3c763d; }
        .error { background-color: #f2dede; color: #a94442; }
    </style>
</head>
<body>
    <div class="review-container">
        <h1>Leave a Review</h1>
        
        <!-- Review Form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST" class="review-form">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <textarea name="review" placeholder="Write your review here..." rows="4" required></textarea><br><br>
            <button type="submit">Submit Review</button>
        </form>

        <!-- Display Reviews -->
        <?php displayReviews(); ?>
    </div>
</body>
</html>


<?php
function submitReview() {
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {

        // Get and sanitize input data
        $user_name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $review_text = htmlspecialchars(trim($_POST['review']));

        // Validate inputs
        if (empty($user_name) || empty($email) || empty($rating) || empty($review_text)) {
            echo "All fields are required!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address!";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5!";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, email, rating, review_text, submission_date)
                VALUES (?, ?, ?, ?, NOW())";

        if ($stmt = mysqli_prepare($conn, $sql)) {
            mysqli_stmt_bind_param($stmt, "ssis", $user_name, $email, $rating, $review_text);

            if (mysqli_stmt_execute($stmt)) {
                echo "Thank you for submitting your review!";
            } else {
                echo "Error: " . mysqli_error($conn);
            }

            mysqli_stmt_close($stmt);
        }

    }

    // Close database connection
    mysqli_close($conn);
}

// Call the function if it's included in another file
submitReview();
?>


<?php
// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    // Output the reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
        echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
        
        // Display stars
        $stars = intval($row['rating']);
        for ($i=1; $i<=5; $i++) {
            if ($i <= $stars) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
        echo "<small>Submitted on: " . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews found!";
}

// Close database connection
mysqli_close($conn);
?>


<?php
function createReview($product_id) {
    // Database connection parameters
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbname = "reviews_db";

    // Connect to database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get review data from POST request
    $review_name = trim($_POST['review_name']);
    $review_email = trim($_POST['review_email']);
    $rating = $_POST['rating'];
    $comments = trim($_POST['comments']);

    // Validate input
    if (empty($review_name) || empty($review_email) || empty($rating) || empty($comments)) {
        echo "Please fill in all required fields.";
        return;
    }

    if (!filter_var($review_email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format.";
        return;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, name, email, rating, comments)
            VALUES ('$product_id', '$review_name', '$review_email', '$rating', '$comments')";

    if ($conn->query($sql) === TRUE) {
        echo "<div class='alert alert-success'>
                Thank you for your review!
              </div>";
        
        // Redirect to the same page after 2 seconds
        header("Refresh: 2; url=view_reviews.php?id=$product_id");
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    createReview($_GET['id']);
}
?>


<?php
// Review handling function
function handle_reviews() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $title = $_POST['review_title'];
        $content = $_POST['review_content'];
        $rating = $_POST['review_rating'];

        // Validate input
        if (empty($title) || empty($content) || empty($rating)) {
            echo "Please fill in all required fields.";
            return;
        }

        // Save review to a file or database here
        // For this example, we'll save it to an array in a text file

        $reviews_file = 'reviews.txt';
        $review_data = [
            'title' => $title,
            'content' => $content,
            'rating' => $rating,
            'author' => $_SERVER['PHP_AUTH_USER'] ?? 'Anonymous',
            'date' => date('Y-m-d H:i:s')
        ];

        // Append review to file
        file_put_contents($reviews_file, serialize($review_data) . PHP_EOL, FILE_APPEND);

        // Redirect after submission
        header('Location: ' . $_SERVER['PHP_SELF']);
        exit();
    }

    // Display existing reviews
    $reviews_file = 'reviews.txt';
    $average_rating = 0;
    $total_reviews = 0;

    if (file_exists($reviews_file) && filesize($reviews_file) > 0) {
        $reviews = file($reviews_file);
        foreach ($reviews as $review_line) {
            $review = unserialize($review_line);
            if (!empty($review)) {
                // Calculate average rating
                $average_rating += $review['rating'];
                $total_reviews++;
            }
        }
        $average_rating /= $total_reviews;
    }

    // Display reviews
    echo "<div class='reviews'>";
    echo "<h2>Product Reviews</h2>";
    
    if ($total_reviews > 0) {
        echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
        foreach ($reviews as $review_line) {
            $review = unserialize($review_line);
            if (!empty($review)) {
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['title']) . "</h3>";
                echo "<p>By " . htmlspecialchars($review['author']) . " on " . $review['date'] . "</p>";
                echo "<div class='rating'>";
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo "⭐";
                }
                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                    echo "⬜";
                }
                echo "</div>";
                echo "<p>" . htmlspecialchars($review['content']) . "</p>";
                echo "</div>";
            }
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }

    // Review submission form
    echo "<h2>Submit a Review</h2>";
    echo "<form method='post'>";
    echo "<input type='text' name='review_title' placeholder='Review Title' required><br>";
    echo "<textarea name='review_content' placeholder='Write your review here...' rows='5' cols='50' required></textarea><br>";
    echo "<select name='review_rating' required>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value='$i'>$i stars</option>";
    }
    echo "</select><br>";
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
    echo "</div>";
}

// Call the function
handle_reviews();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to get all reviews
function get_reviews($item_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE item_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Function to display average rating
function get_average_rating($item_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE item_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    $row = mysqli_fetch_assoc($result);
    return number_format($row['average'], 1, '.', '');
}

// Function to submit new review
function submit_review($user_name, $email, $rating, $comment, $item_id) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $email = mysqli_real_escape_string($conn, $email);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    $sql = "INSERT INTO reviews (user_name, email, rating, comment, item_id) 
            VALUES (?, ?, ?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'ssisi', $user_name, $email, $rating, $comment, $item_id);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_GET['action']) && $_GET['action'] == 'submit_review') {
    $user_name = $_POST['name'];
    $email = $_POST['email'];
    $rating = intval($_POST['rating']);
    $comment = $_POST['comment'];
    $item_id = 1; // Set your item ID
    
    if (submit_review($user_name, $email, $rating, $comment, $item_id)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Example usage
$item_id = 1;
$reviews = get_reviews($item_id);
$average_rating = get_average_rating($item_id);

echo "<h2>Item Reviews</h2>";
echo "<p>Average Rating: $average_rating stars</p>";

if (!empty($reviews)) {
    echo "<div class='reviews'>";
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['user_name'] . "</h3>";
        echo "<p>Rating: " . $review['rating'] . " stars</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['date'] . "</small>";
        echo "</div>";
    }
    echo "</div>";
} else {
    echo "<p>No reviews available.</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!-- Review Submission Form -->
<form method="post" action="?action=submit_review">
    <input type="text" name="name" placeholder="Your Name" required>
    <input type="email" name="email" placeholder="Email Address" required>
    
    <div class="rating">
        <label>Rating:</label>
        <input type="radio" name="rating" value="5"> 5
        <input type="radio" name="rating" value="4"> 4
        <input type="radio" name="rating" value="3"> 3
        <input type="radio" name="rating" value="2"> 2
        <input type="radio" name="rating" value="1"> 1
    </div>
    
    <textarea name="comment" placeholder="Write your review here..." required></textarea>
    <button type="submit">Submit Review</button>
</form>


<?php
// Array to store reviews
$reviews = array();

// Function to handle review submission
function submitReview($name, $rating, $comment) {
    global $reviews;
    
    // Sanitize inputs
    $name = htmlspecialchars(trim($name));
    $comment = htmlspecialchars(trim($comment));
    
    if (empty($name) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    // Add review to the array
    $review = array(
        'name' => $name,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    );
    
    $reviews[] = $review;
    
    return "Review submitted successfully!";
}

// Function to display reviews
function displayReviews() {
    global $reviews;
    
    if (empty($reviews)) {
        echo "<p>No reviews yet. Be the first to review!</p>";
        return;
    }
    
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = $totalRating / count($reviews);
    
    echo "<div class='reviews'>";
    echo "<h3>Reviews</h3>";
    echo "<p>Average Rating: " . number_format($averageRating, 1) . "/5</p>";
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . $review['name'] . "</h4>";
        echo "<div class='rating'>";
        
        // Display stars
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . $review['timestamp'] . "</small>";
        echo "</div>";
    }
    echo "</div>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process review submission
    $name = $_POST['name'];
    $rating = intval($_POST['rating']);
    $comment = $_POST['comment'];
    
    $message = submitReview($name, $rating, $comment);
    echo "<p>" . $message . "</p>";
}

// Display the review form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .star {
            font-size: 24px;
            margin-right: 3px;
        }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        
        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>
        
        <button type="submit">Submit Review</button>
    </form>
</div>

<?php
displayReviews();
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {
    // Sanitize input data
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['user_name']));
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['review_text']));
    $rating = intval($_POST['rating']);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating) 
            VALUES ('$user_name', '$review_text', $rating)";

    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>Error: " . mysqli_error($conn) . "</div>";
    }
}

// Fetch all reviews
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .review-form { margin-bottom: 30px; }
        .review { border: 1px solid #ddd; padding: 15px; margin-bottom: 15px; }
        .rating { font-weight: bold; color: #ff6600; }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<form class="review-form" action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
    <input type="text" name="user_name" placeholder="Your Name" required><br><br>
    <textarea name="review_text" placeholder="Write your review here..." required></textarea><br><br>
    <select name="rating" required>
        <option value="">Select Rating</option>
        <option value="5">5 Stars</option>
        <option value="4">4 Stars</option>
        <option value="3">3 Stars</option>
        <option value="2">2 Stars</option>
        <option value="1">1 Star</option>
    </select><br><br>
    <input type="submit" name="submit_review" value="Submit Review">
</form>

<h2>Reviews</h2>
<?php
if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<p><strong>" . $row['user_name'] . "</strong></p>";
        echo "<p>" . $row['review_text'] . "</p>";
        echo "<p class='rating'>Rating: " . $row['rating'] . " stars</p>";
        echo "<p>Submitted on: " . $row['submission_date'] . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet.</p>";
}
?>

<?php
// Calculate average rating
$avg_query = "SELECT AVG(rating) as average FROM reviews";
$avg_result = mysqli_query($conn, $avg_query);
if ($row = mysqli_fetch_assoc($avg_result)) {
    $average_rating = round($row['average'], 1);
} else {
    $average_rating = 0;
}
?>

<h3>Average Rating: <?php echo $average_rating; ?> /5</h3>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
class Review {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Function to submit a review
    public function submitReview($productId, $userName, $email, $comment, $rating) {
        try {
            // Sanitize input data
            $sanitizedProductID = $this->db->real_escape_string($productId);
            $sanitizedUserName = $this->db->real_escape_string($userName);
            $sanitizedEmail = $this->db->real_escape_string($email);
            $sanitizedComment = $this->db->real_escape_string($comment);
            $sanitizedRating = (int)$rating;

            // Insert review into database
            $sql = "INSERT INTO reviews (product_id, user_name, email, comment, rating, submission_date) 
                    VALUES ('$sanitizedProductID', '$sanitizedUserName', '$sanitizedEmail', '$sanitizedComment', '$sanitizedRating', NOW())";
            
            if ($this->db->query($sql)) {
                return true;
            } else {
                throw new Exception("Error submitting review: " . $this->db->error);
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }

    // Function to display reviews for a product
    public function displayReviews($productId) {
        try {
            $sanitizedProductID = $this->db->real_escape_string($productId);

            // Get all reviews for the specified product
            $sql = "SELECT * FROM reviews WHERE product_id = '$sanitizedProductID' ORDER BY submission_date DESC";
            
            $result = $this->db->query($sql);
            
            if ($result) {
                $reviews = array();

                while ($row = $result->fetch_assoc()) {
                    $review = array(
                        'id' => $row['id'],
                        'user_name' => $row['user_name'],
                        'email' => $row['email'],
                        'comment' => $row['comment'],
                        'rating' => $row['rating'],
                        'submission_date' => $row['submission_date']
                    );
                    
                    array_push($reviews, $review);
                }

                return $reviews;
            } else {
                throw new Exception("Error retrieving reviews: " . $this->db->error);
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }

    // Function to display average rating
    public function displayAverageRating($productId) {
        try {
            $sanitizedProductID = $this->db->real_escape_string($productId);

            // Calculate average rating
            $sql = "SELECT AVG(rating) as average_rating 
                    FROM reviews 
                    WHERE product_id = '$sanitizedProductID'";
            
            $result = $this->db->query($sql);
            
            if ($result) {
                $row = $result->fetch_assoc();
                return round($row['average_rating'], 1); // Rounded to one decimal place
            } else {
                throw new Exception("Error retrieving average rating: " . $this->db->error);
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }
}

// Example usage:
// Assuming $db is your database connection
$review = new Review($db);

// Submit a review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if ($review->submitReview($_POST['product_id'], $_POST['name'], $_POST['email'], $_POST['comment'], $_POST['rating'])) {
        echo "Thank you for submitting your review!";
    }
}

// Display reviews and average rating
$productId = 1; // Replace with actual product ID
$averageRating = $review->displayAverageRating($productId);
echo "Average Rating: $averageRating/5";

$reviews = $review->displayReviews($productId);
foreach ($reviews as $rev) {
    echo "<div class='review'>";
    echo "<h4>" . htmlspecialchars($rev['user_name']) . "</h4>";
    echo "<p>Rating: " . str_repeat("★", $rev['rating']) . "</p>";
    echo "<p>Email: " . htmlspecialchars($rev['email']) . "</p>";
    echo "<p>Comment: " . htmlspecialchars($rev['comment']) . "</p>";
    echo "<p>Submitted on: " . date('F j, Y', strtotime($rev['submission_date'])) . "</p>";
    echo "</div>";
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database configuration
    $host = 'localhost';
    $db_name = 'your_database';
    $username = 'your_username';
    $password = 'your_password';

    try {
        // Connect to the database
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if user has already submitted a review for this product
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE user_id = :user_id AND product_id = :product_id");
        $stmt->execute(array(':user_id' => $user_id, ':product_id' => $product_id));
        
        if ($stmt->rowCount() > 0) {
            return array(
                'status' => 'error',
                'message' => 'You have already submitted a review for this product.'
            );
        }

        // Insert the new review
        $stmt = $conn->prepare("
            INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES (:user_id, :product_id, :rating, :comment)
        ");
        $stmt->execute(array(
            ':user_id' => $user_id,
            ':product_id' => $product_id,
            ':rating' => $rating,
            ':comment' => $comment
        ));

        // Calculate average rating and total reviews for the product
        $stmt = $conn->prepare("
            SELECT 
                AVG(rating) AS avg_rating, 
                COUNT(id) AS total_reviews 
            FROM reviews 
            WHERE product_id = :product_id
        ");
        $stmt->execute(array(':product_id' => $product_id));
        $result = $stmt->fetch(PDO::FETCH_ASSOC);

        // Get all reviews for the product
        $stmt = $conn->prepare("
            SELECT 
                r.id,
                u.username,
                r.rating,
                r.comment,
                DATE_FORMAT(r.review_date, '%Y-%m-%d %H:%i:%s') as review_date
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            WHERE product_id = :product_id
            ORDER BY r.review_date DESC
        ");
        $stmt->execute(array(':product_id' => $product_id));
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        // Close the database connection
        $conn = null;

        return array(
            'status' => 'success',
            'average_rating' => number_format($result['avg_rating'], 1, '.', ''),
            'total_reviews' => $result['total_reviews'],
            'reviews' => $reviews
        );

    } catch(PDOException $e) {
        // Close the database connection in case of error
        if ($conn != null) {
            $conn = null;
        }
        return array(
            'status' => 'error',
            'message' => 'An error occurred while submitting your review. Please try again later.'
        );
    }
}
?>


// Example user inputs
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "This is a great product!";

$result = submit_review($user_id, $product_id, $rating, $comment);

if ($result['status'] == 'success') {
    echo "Thank you for submitting your review!";
    echo "<br>Average Rating: " . $result['average_rating'];
    echo "<br>Total Reviews: " . $result['total_reviews'];
    
    foreach ($result['reviews'] as $review) {
        echo "<div>";
        echo "<strong>" . $review['username'] . "</strong> - " . $review['rating'] . "/5";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . $review['review_date'] . "</small>";
        echo "</div>";
    }
} else {
    echo "Error: " . $result['message'];
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Review submission function
function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Check if user has already reviewed this product
    $stmt = $conn->prepare("SELECT review_id FROM reviews WHERE product_id = ? AND user_id = ?");
    $stmt->execute([$productId, $userId]);
    
    if ($stmt->rowCount() > 0) {
        return "You have already reviewed this product!";
    } else {
        // Insert new review
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->execute([$productId, $userId, $rating, $comment]);
        
        return "Review submitted successfully!";
    }
}

// Display reviews function
function displayReviews($productId, $conn) {
    // Get all reviews for the product
    $stmt = $conn->prepare("SELECT r.review_id, u.username, r.rating, r.comment, r.review_date 
                           FROM reviews r 
                           JOIN users u ON r.user_id = u.user_id 
                           WHERE r.product_id = ? 
                           ORDER BY r.review_date DESC");
    $stmt->execute([$productId]);
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (empty($reviews)) {
        echo "<p>No reviews available for this product.</p>";
    } else {
        foreach ($reviews as $review) {
            // Display each review
            echo "<div class='review'>";
            echo "<h4>Reviewer: " . htmlspecialchars($review['username']) . "</h4>";
            echo "<p>Rating: " . $review['rating'] . " stars</p>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Reviewed on: " . date('M j, Y g:i a', strtotime($review['review_date'])) . "</small>";
            echo "</div>";
        }
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $productId = intval($_POST['product_id']);
    $userId = intval($_SESSION['user_id']); // Assuming user is authenticated
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']), ENT_QUOTES);

    // Validate input
    if ($rating < 1 || $rating > 5) {
        echo "Invalid rating!";
    } elseif (empty($comment)) {
        echo "Please write a comment!";
    } else {
        // Submit review
        $result = submitReview($productId, $userId, $rating, $comment, $conn);
        echo $result;
    }
}

// Display all reviews for product ID 1 (example)
displayReviews(1, $conn);

$conn = null; // Close database connection
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a specific product
function display_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>Rating: " . $row['rating'] . "/5</h4>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found for this product.";
    }
}

// Function to delete a review
function delete_review($review_id) {
    global $conn;
    
    // Sanitize input
    $review_id = mysqli_real_escape_string($conn, $review_id);
    
    // Delete review from database
    $sql = "DELETE FROM reviews WHERE id = '$review_id'";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Review added successfully!";
    } else {
        echo "Error adding review: " . mysqli_error($conn);
    }
}

// Display reviews for product ID 1
display_reviews(1);

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_name VARCHAR(100),
    email VARCHAR(100),
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

$conn->query($sql);

// Function to add a new review
function addReview($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    // Sanitize input data
    $user_name = htmlspecialchars(strip_tags($user_name));
    $email = htmlspecialchars(strip_tags($email));
    $comment = htmlspecialchars(strip_tags($comment));
    
    // Prepare and bind
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, email, rating, comment, timestamp) VALUES (?, ?, ?, ?, ?, NOW())");
    $stmt->bind_param("isiii", $product_id, $user_name, $email, $rating, $comment);
    
    // Execute the query
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h4>" . $row['user_name'] . "</h4>";
        echo "<p>Rating: " . getStars($row['rating']) . "</p>";
        echo "<p>Email: " . $row['email'] . "</p>";
        echo "<p>Comment: " . $row['comment'] . "</p>";
        echo "<small>" . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
        echo "</div>";
    }
}

// Helper function to display stars for rating
function getStars($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★";
        } else {
            $stars .= "☆";
        }
    }
    return $stars;
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
            background-color: #f9f9f9;
        }
        h4 { color: #333; }
        p { line-height: 1.6; }
    </style>
</head>
<body>

<?php
// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = 1; // Example product ID
    
    if (!empty($_POST['name']) && !empty($_POST['email']) && isset($_POST['rating']) && !empty($_POST['comment'])) {
        $success = addReview($product_id, $_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
        
        if ($success) {
            echo "<p>Thank you for your review!</p>";
        } else {
            echo "<p>Error submitting review. Please try again.</p>";
        }
    } else {
        echo "<p>Please fill in all required fields.</p>";
    }
}

// Display review form
?>

<h2>Submit a Review</h2>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name">
    </div>
    
    <div>
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email">
    </div>
    
    <div>
        <label>Rating:</label><br>
        <select name="rating">
            <option value="">Select rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
    </div>
    
    <div>
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5"></textarea>
    </div>
    
    <input type="submit" value="Submit Review">
</form>

<h2>Reviews</h2>
<?php
displayReviews(1); // Display reviews for product ID 1
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize and validate input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $review_text = htmlspecialchars(trim($_POST['review_text']));

    if (empty($name) || empty($email) || empty($rating) || empty($review_text)) {
        die("All fields are required!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5!");
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, review_text, timestamp) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("ssii", $name, $email, $rating, $review_text);

    if ($stmt->execute()) {
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } else {
        die("Error submitting review: " . $conn->error);
    }

    $stmt->close();
}

// Get reviews from database
$query = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = $conn->query($query);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .rating-stars {
            color: #gold;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px 0;
            background-color: #f9f9f9;
        }
        form {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review submission form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select>
        </div>
        <div>
            <label for="review_text">Review:</label><br>
            <textarea id="review_text" name="review_text" rows="5" required></textarea>
        </div>
        <button type="submit">Submit Review</button>
    </form>

    <!-- Display existing reviews -->
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Generate stars based on rating
            $stars_html = str_repeat("★ ", $row['rating']);
            $stars_html .= str_repeat("☆ ", 5 - $row['rating']);

            echo "<div class='review-container'>";
                echo "<h3>By " . $row['user_name'] . "</h3>";
                echo "<p>" . $row['review_text'] . "</p>";
                echo "<div class='rating-stars'>" . $stars_html . "</div>";
                echo "<p>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }

    $conn->close();
    ?>
</body>
</html>


<?php
// Function to create user review for a product
function createReview($reviewText, $rating, $productId) {
    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "my_store";

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate input
        if (empty($reviewText) || !isset($rating) || !isset($productId)) {
            return "Error: All fields must be filled out!";
        }

        // Sanitize inputs to prevent SQL injection
        $reviewText = htmlspecialchars(strip_tags(trim($reviewText)));
        $rating = intval($rating);
        $productId = intval($productId);

        // Check if rating is valid (assuming scale of 1-5)
        if ($rating < 1 || $rating > 5) {
            return "Error: Invalid rating!";
        }

        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (
            product_id, 
            review_text,
            rating,
            created_at
        ) VALUES (
            :productId,
            :reviewText,
            :rating,
            NOW()
        )");

        // Bind parameters
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':reviewText', $reviewText);
        $stmt->bindParam(':rating', $rating);

        // Execute query
        $stmt->execute();

        // Return success message with review ID
        $lastInsertId = $conn->lastInsertId();
        return "Review submitted successfully! Review ID: $lastInsertId";

    } catch(PDOException $e) {
        // Return error message if something goes wrong
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
$product_id = 123;
$user_review = "This is a great product!";
$rating = 5;

$result = createReview($user_review, $rating, $product_id);
echo $result;
?>


<?php
// Connect to the database (replace with your actual database connection)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $name = htmlspecialchars($_POST['name']);
    $comment = htmlspecialchars($_POST['comment']);
    
    if (empty($name) || empty($comment)) {
        echo "<p class='error'>Please fill in all required fields.</p>";
    } else {
        // Insert review into the database
        $sql = "INSERT INTO reviews (name, comment, rating, date)
                VALUES ('$name', '$comment', '".$_POST['rating']."', CURRENT_TIMESTAMP)";
        
        if ($conn->query($sql) === TRUE) {
            echo "<p class='success'>Thank you for submitting your review!</p>";
        } else {
            echo "<p class='error'>Error: " . $sql . "<br>" . $conn->error."</p>";
        }
    }
}

// Fetch reviews from the database
$sql = "SELECT * FROM reviews ORDER BY date DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Display reviews
    while($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>".$row["name"]."</h3>";
        echo "<p>".$row["comment"]."</p>";
        echo "<div class='rating'>";
        
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row["rating"]) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "<p class='date'>".$row["date"]."</p>";
        echo "</div>";
    }
} else {
    echo "No reviews found.";
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .review-form input, .review-form textarea {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
        }
        
        .review-form button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        .reviews {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
        }
        
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        .star {
            font-size: 24px;
            margin-right: 3px;
        }
        
        .error, .success {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit a Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br>
            <textarea name="comment" rows="5" placeholder="Write your review here..." required></textarea><br>
            <select name="rating">
                <option value="">Rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <div class="reviews">
        <h2>Reviews</h2>
        <?php // Reviews will be displayed here ?>
    </div>
</body>
</html>


<?php
// Function to handle user reviews
function handleUserReview($reviewId = null, $userId, $rating, $comment = "", $date = null) {
    // Validate inputs
    if (!isset($userId) || empty($userId)) {
        throw new InvalidArgumentException("User ID is required.");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new InvalidArgumentException("Rating must be between 1 and 5.");
    }

    try {
        // Database connection parameters
        $host = "localhost";
        $dbUsername = "username";
        $dbPassword = "password";
        $dbName = "reviews_db";

        // Connect to database
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Set default date if not provided
        if (!$date) {
            $date = date('Y-m-d H:i:s');
        }

        // Check if review exists and update or insert
        if ($reviewId) {
            $sql = "
                UPDATE reviews 
                SET rating = ?, comment = ?, last_updated_date = ?
                WHERE id = ?
            ";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("siss", $rating, $comment, $date, $reviewId);
        } else {
            $sql = "
                INSERT INTO reviews (user_id, rating, comment, creation_date)
                VALUES (?, ?, ?, ?)
            ";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("isss", $userId, $rating, $comment, $date);
        }

        // Execute the query
        if ($stmt->execute()) {
            $response = [
                "status" => "success",
                "message" => $reviewId ? "Review updated successfully." : "Review created successfully.",
                "insert_id" => !$reviewId ? $conn->insert_id : null,
                "affected_rows" => $stmt->affected_rows
            ];
        } else {
            throw new Exception("Query failed: " . $stmt->error);
        }

    } catch (Exception $e) {
        return [
            "status" => "error",
            "message" => $e->getMessage()
        ];
    } finally {
        // Close statements and connection
        if ($stmt) {
            $stmt->close();
        }
        if ($conn) {
            $conn->close();
        }
    }

    return $response;
}

// Example usage:
try {
    // Create a new review
    $newReview = handleUserReview(
        null, 
        12345,
        4,
        "This product is great!",
        date('Y-m-d H:i:s')
    );
    
    print_r($newReview);

    // Update an existing review
    $updateReview = handleUserReview(
        67890,
        12345,
        5,
        "The best product ever! ★★★★★",
        date('Y-m-d H:i:s')
    );
    
    print_r($updateReview);

} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
function displayUserReviews($productId) {
    // Database connection details
    $host = 'localhost';
    $dbname = 'your_database_name';
    $dbuser = 'your_username';
    $dbpass = 'your_password';

    try {
        // Create a new PDO instance
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $dbuser, $dbpass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // SQL query to fetch reviews for the product
        $sql = "SELECT r.review_id, r.user_id, r.rating, r.comment, r.review_date, u.username 
                FROM reviews r 
                LEFT JOIN users u ON r.user_id = u.user_id 
                WHERE r.product_id = ? 
                ORDER BY r.review_date DESC";

        // Prepare the statement
        $stmt = $conn->prepare($sql);
        $stmt->execute([$productId]);

        // Check if there are any reviews
        if ($stmt->rowCount() == 0) {
            echo "<div class='no-reviews'>No reviews yet for this product.</div>";
            return;
        }

        // Display the reviews
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $reviewId = $row['review_id'];
            $userId = $row['user_id'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $reviewDate = date('M j, Y', strtotime($row['review_date']));
            $username = $row['username'] ?? 'Anonymous';

            // Display review
            echo "<div class='review'>";
            echo "<div class='review-header'>";
            echo "<span class='username'>$username</span>";
            echo "<span class='rating'>Rating: $rating/5</span>";
            echo "<span class='date'>$reviewDate</span>";
            echo "</div>";
            echo "<div class='review-body'>";
            echo "<p>$comment</p>";
            echo "</div>";
            echo "</div>";
        }

    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
displayUserReviews(1);
?>


<?php
// Function to create a new user review
function createReview($user_id, $product_id, $rating, $comment) {
    // Validate inputs
    if (!is_numeric($user_id) || !is_numeric($product_id)) {
        return false;
    }
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
    VALUES ('$user_id', '$product_id', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        // Get the last inserted ID
        $last_id = mysqli_insert_id($conn);
        return $last_id;
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        return false;
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Function to display reviews for a product
function getReviews($product_id) {
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Query database for reviews
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        $reviews = array();
        while($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        return false;
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "Great product! Highly recommended.";

// Create a review
createReview($user_id, $product_id, $rating, $comment);

// Get and display reviews for product ID 456
$reviews = getReviews(456);
if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div>";
        echo "<p>Rating: " . $review['rating'] . "</p>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}
?>


<?php
function submitReview($review_id, $user_id, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if this is a new review or an update
    if ($review_id == 0) {
        // Insert new review
        $sql = "INSERT INTO reviews (user_id, rating, comment) 
                VALUES ('$user_id', '$rating', '$comment')";
    } else {
        // Update existing review
        $sql = "UPDATE reviews SET rating='$rating', comment='$comment' 
                WHERE id='$review_id' AND user_id='$user_id'";
    }

    // Execute the query
    if (mysqli_query($conn, $sql)) {
        // Close database connection and return success message
        mysqli_close($conn);
        return "Review submitted successfully!";
    } else {
        // Close database connection and return error message
        mysqli_close($conn);
        return "Error: " . mysqli_error($conn);
    }
}

// Example usage:
// $result = submitReview(0, 12345, 5, 'This is an amazing product!');
// echo $result;

?>


// Adding a new review
$result = submitReview(0, 12345, 5, 'This is an amazing product!');
echo $result; // Should return success message

// Updating an existing review
$result = submitReview(1, 12345, 4, 'This product is really good!');
echo $result; // Should return success message or error if something goes wrong


<?php
function manageUserReview($operation, $reviewId = null, $userId = null, $rating = null, $comment = null, $dbConnection = null) {
    // Required parameters based on operation
    if ($operation == 'add') {
        if (empty($userId) || empty($rating)) {
            throw new Exception("User ID and rating are required for adding a review.");
        }
    } elseif ($operation == 'update' || $operation == 'delete') {
        if (empty($reviewId)) {
            throw new Exception("Review ID is required for updating or deleting a review.");
        }
    }

    // Sanitize input data
    $sanitizedData = array();
    if (!empty($userId)) {
        $sanitizedData['user_id'] = intval($userId);
    }
    if (!empty($rating)) {
        $sanitizedData['rating'] = intval($rating);
    }
    if (!empty($comment)) {
        $sanitizedData['comment'] = htmlspecialchars(strip_tags($comment), ENT_QUOTES, 'UTF-8');
    }

    try {
        switch ($operation) {
            case 'add':
                // Add new review
                $stmt = $dbConnection->prepare("INSERT INTO reviews (user_id, rating, comment, created_at) VALUES (:user_id, :rating, :comment, NOW())");
                if (!empty($sanitizedData['comment'])) {
                    $stmt->bindParam(':comment', $sanitizedData['comment']);
                } else {
                    $stmt->bindValue(':comment', null);
                }
                $stmt->execute();
                return $dbConnection->lastInsertId();
                break;

            case 'update':
                // Update existing review
                $stmt = $dbConnection->prepare("UPDATE reviews SET rating = :rating, comment = :comment WHERE review_id = :review_id");
                if (!empty($sanitizedData['comment'])) {
                    $stmt->bindParam(':comment', $sanitizedData['comment']);
                } else {
                    $stmt->bindValue(':comment', null);
                }
                $stmt->execute();
                return true;
                break;

            case 'delete':
                // Delete review
                $stmt = $dbConnection->prepare("DELETE FROM reviews WHERE review_id = :review_id");
                $stmt->bindParam(':review_id', $reviewId, PDO::PARAM_INT);
                $stmt->execute();
                return true;
                break;

            default:
                throw new Exception("Invalid operation. Supported operations: add, update, delete.");
        }
    } catch (PDOException $e) {
        error_log("Database Error: " . $e->getMessage());
        throw new Exception("An error occurred while processing your request.");
    }
}

// Example usage:

// 1. Adding a new review
$reviewId = manageUserReview(
    'add',
    null,
    123, // User ID
    5,   // Rating (1-5)
    "This is an excellent product!", 
    $dbConnection
);

// 2. Updating an existing review
manageUserReview(
    'update',
    456, // Review ID
    null,
    4,   // New rating
    "Great product! I love it.", 
    $dbConnection
);

// 3. Deleting a review
manageUserReview(
    'delete',
    789, // Review ID to delete
    null,
    null,
    null,
    $dbConnection
);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function addReview($name, $email, $rating, $comment, $conn) {
    $stmt = $conn->prepare("INSERT INTO reviews (reviewer_name, reviewer_email, rating, comment, submission_date)
                          VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)");
    if ($stmt === false) {
        throw new Exception("Prepare failed: " . $conn->error);
    }

    $stmt->bind_param("ssis", $name, $email, $rating, $comment);

    if (!$stmt->execute()) {
        throw new Exception("Execute failed: " . $stmt->error);
    }
}

function getReviews($conn) {
    $reviews = array();
    $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

    while ($row = $result->fetch_assoc()) {
        $review['id'] = $row['id'];
        $review['name'] = $row['reviewer_name'];
        $review['email'] = $row['reviewer_email'];
        $review['rating'] = $row['rating'];
        $review['comment'] = $row['comment'];
        $review['date'] = date("F j, Y", strtotime($row['submission_date']));
        array_push($reviews, $review);
    }
    return $reviews;
}

// Process form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        try {
            addReview($name, $email, $rating, $comment, $conn);
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        } catch (Exception $e) {
            echo "Error adding review: " . $e->getMessage();
        }
    }
}

// Get all reviews
$reviews = getReviews($conn);

// Close database connection
$conn->close();

// Display the reviews
echo "<div class='review-container'>";
foreach ($reviews as $review) {
    echo "<div class='review-item'>";
    echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
    echo "<p><strong>Email:</strong> " . htmlspecialchars($review['email']) . "</p>";
    echo "<p><strong>Rating:</strong> ";
    for ($i = 1; $i <= $review['rating']; $i++) {
        echo "★";
    }
    echo "</p>";
    echo "<p><em>" . htmlspecialchars($review['comment']) . "</em></p>";
    echo "<p class='submission-date'><small>Submitted on: " . $review['date'] . "</small></p>";
    echo "</div>";
}
echo "</div>";
?>


<?php
// Database connection
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "reviews_db";

$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create review form
function createReviewForm() {
    global $conn;
    ?>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form id="reviewForm" method="POST">
            <input type="text" name="name" placeholder="Your Name" required><br>
            <input type="email" name="email" placeholder="Your Email" required><br>
            <select name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">⭐️ ⭐️ ⭐️ ⭐️ ⭐️ - Excellent</option>
                <option value="4">⭐️ ⭐️ ⭐️ ⭐️ - Very Good</option>
                <option value="3">⭐️ ⭐️ ⭐️ - Average</option>
                <option value="2">⭐️ ⭐️ - Poor</option>
                <option value="1">⭐️ - Bad</option>
            </select><br>
            <textarea name="review" placeholder="Write your review..." required></textarea><br>
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display reviews -->
    <div id="reviews">
        <?php displayReviews(); ?>
    </div>
    <?php
}

// Function to process submitted reviews
function submitReview() {
    global $conn;
    
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $review = $_POST['review'];
        
        // Sanitize input
        $name = htmlspecialchars($name);
        $email = htmlspecialchars($email);
        $rating = intval($rating);
        $review = htmlspecialchars($review);
        
        // Insert into database
        $sql = "INSERT INTO reviews (name, email, rating, review) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssis", $name, $email, $rating, $review);
        
        if ($stmt->execute()) {
            echo "Review submitted successfully!";
            // Refresh reviews section
            displayReviews();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
        
        $stmt->close();
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("⭐️ ", $row['rating']) . "</p>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Review: " . $row['review'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Close database connection
$conn->close();
?>

<script>
document.getElementById('reviewForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    
    fetch('submit_review.php', {
        method: 'POST',
        body: formData
    })
    .then(response => response.text())
    .then(data => {
        document.getElementById('reviews').innerHTML = data;
    });
});
</script>

<style>
.review-form {
    max-width: 600px;
    margin: 20px auto;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.review {
    margin: 10px 0;
    padding: 10px;
    border-bottom: 1px solid #eee;
}

h3, h2 {
    color: #333;
}

textarea, input[type="text"], input[type="email"] {
    width: 100%;
    margin: 5px 0;
    padding: 8px;
    box-sizing: border-box;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}
</style>


<?php
// Initialize an empty array to store reviews if it doesn't exist
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = [];
}

/**
 * Add a new user review
 * @param string $userId The unique identifier of the user
 * @param int $rating The rating (1-5)
 * @param string $comment The review comment
 */
function addReview($userId, $rating, $comment) {
    global $_SESSION;

    // Sanitize input
    $userId = htmlspecialchars($userId);
    $rating = intval($rating);
    $comment = htmlspecialchars($comment);

    // Validate rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Create review array
    $review = [
        'user_id' => $userId,
        'username' => $_SESSION['username'], // Assuming user has a session
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    ];

    // Add review to the reviews array
    $_SESSION['reviews'][] = $review;

    return true;
}

/**
 * Get all reviews
 * @return array Array of reviews
 */
function getReviews() {
    global $_SESSION;
    return $_SESSION['reviews'];
}

/**
 * Calculate average rating
 * @return float Average rating
 */
function calculateAverageRating() {
    global $_SESSION;
    
    $ratings = array_column($_SESSION['reviews'], 'rating');
    $count = count($ratings);

    if ($count == 0) {
        return 0;
    }

    return number_format(array_sum($ratings) / $count, 1);
}

/**
 * Display reviews and average rating
 */
function displayReviews() {
    $averageRating = calculateAverageRating();
    $reviews = getReviews();

    // Display average rating
    echo "<div class='average-rating'>";
    echo "Average Rating: $averageRating/5";
    echo "</div>";

    // Display all reviews
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>By {$review['username']}</h4>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Comment: {$review['comment']}</p>";
        echo "<small>Posted on: {$review['timestamp']}</small>";
        echo "</div>";
    }
}

// Example usage:
// Assuming user is logged in and has a session
if (isset($_POST['submit_review'])) {
    $userId = $_SESSION['user_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    if (addReview($userId, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Please enter a rating between 1 and 5.";
    }
}

// Display reviews
displayReviews();
?>


<?php
function submitReview($item_id, $user_id, $rating, $comment = '') {
    // Database connection details
    $host = 'localhost';
    $db_name = 'your_database_name';
    $username = 'your_username';
    $password = 'your_password';

    try {
        // Create a new PDO instance
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate input
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception('Invalid rating. Please select a rating between 1 and 5.');
        }
        
        // Prepare the review data
        $timestamp = date('Y-m-d H:i:s');
        $comment = htmlspecialchars($comment); // Sanitize comment

        // Insert the review into the database
        $stmt = $conn->prepare("INSERT INTO reviews (item_id, user_id, rating, comment, timestamp) 
                              VALUES (:item_id, :user_id, :rating, :comment, :timestamp)");
        
        $stmt->bindParam(':item_id', $item_id);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        $stmt->bindParam(':timestamp', $timestamp);

        $stmt->execute();

        // Calculate average rating for the item
        $avgStmt = $conn->prepare("SELECT AVG(rating) as average_rating FROM reviews WHERE item_id = :item_id");
        $avgStmt->bindParam(':item_id', $item_id);
        $avgStmt->execute();
        
        $result = $avgStmt->fetch(PDO::FETCH_ASSOC);
        $averageRating = $result['average_rating'] ?: 0;

        // Close the connection
        $conn = null;

        return array(
            'status' => 'success',
            'message' => 'Review submitted successfully!',
            'average_rating' => number_format($averageRating, 1)
        );

    } catch(PDOException $e) {
        return array(
            'status' => 'error',
            'message' => 'Error submitting review: ' . $e->getMessage()
        );
    }
}
?>


// Example usage:
$item_id = 1;
$user_id = 1;
$rating = 4;
$comment = "This is a great product!";

$result = submitReview($item_id, $user_id, $rating, $comment);

if ($result['status'] == 'success') {
    echo "Thank you for your review!";
    echo "<br>Current average rating: " . $result['average_rating'];
} else {
    echo "Error: " . $result['message'];
}


<?php
class UserReview {
    public $userName;
    public $comment;
    public $rating;

    function __construct($name, $comment, $rating) {
        $this->userName = $name;
        $this->comment = $comment;
        $this->rating = $rating;
    }
}

function displayReviews($reviews) {
    // Display each review
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Reviewed by: " . htmlspecialchars($review->userName) . "</h3>";
        echo "<p>" . htmlspecialchars($review->comment) . "</p>";
        
        // Generate stars based on rating
        $stars = "";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review->rating) {
                $stars .= "★";
            } else {
                $stars .= "☆";
            }
        }
        echo "<div class='stars'>$stars</div>";
        echo "</div><br>";
    }

    // Calculate average rating
    if (!empty($reviews)) {
        $totalRating = array_sum(array_column($reviews, 'rating'));
        $averageRating = $totalRating / count($reviews);
        echo "<div class='average-rating'>";
        echo "Average Rating: " . number_format($averageRating, 1) . "/5";
        echo "</div>";
    } else {
        echo "No reviews available.";
    }
}

// Example usage:
$review1 = new UserReview("Alice", "Great product! Highly recommended.", 4);
$review2 = new UserReview("Bob", "Good quality but could be better.", 3);
$reviews = array($review1, $review2);

displayReviews($reviews);
?>


<?php
// Function to create or update a user review
function submitReview($reviewId, $userId, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'username';
    $dbPassword = 'password';
    $dbName = 'reviews_db';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if review already exists for the user
        $checkReviewQuery = "SELECT id FROM reviews WHERE user_id = :userId AND review_id = :reviewId";
        $stmt = $conn->prepare($checkReviewQuery);
        $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
        $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Update existing review
            $updateReviewQuery = "UPDATE reviews 
                                  SET rating = :rating, 
                                      comment = :comment 
                                  WHERE user_id = :userId 
                                    AND review_id = :reviewId";
            $stmt = $conn->prepare($updateReviewQuery);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':comment', $comment, PDO::PARAM_STR);
            $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
            $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);
            $stmt->execute();
            
            return array('status' => 'success', 'message' => 'Review updated successfully');
        } else {
            // Insert new review
            $insertReviewQuery = "INSERT INTO reviews (review_id, user_id, rating, comment) 
                                  VALUES (:reviewId, :userId, :rating, :comment)";
            $stmt = $conn->prepare($insertReviewQuery);
            $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);
            $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':comment', $comment, PDO::PARAM_STR);
            $stmt->execute();
            
            return array('status' => 'success', 'message' => 'Review submitted successfully');
        }
    } catch(PDOException $e) {
        // Handle database errors
        return array('status' => 'error', 'message' => 'Error submitting review: ' . $e->getMessage());
    } finally {
        // Close the statement
        if ($stmt !== null) {
            $stmt = null;
        }
    }
}

// Example usage:
$reviewId = 123; // ID of the item being reviewed
$userId = 456;   // ID of the user submitting the review
$rating = 5;     // Rating from 1 to 5
$comment = "This is a great product!"; 

$result = submitReview($reviewId, $userId, $rating, $comment);

if ($result['status'] == 'success') {
    echo $result['message'];
} else {
    echo $result['message'];
}
?>


<?php
// Function to add a new review
function addReview($conn, $userId, $userName, $reviewRating, $reviewText) {
    // Validate input values
    if ($reviewRating < 1 || $reviewRating > 5) {
        return false; // Invalid rating value
    }
    
    // SQL query to insert the review into the database
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, user_name, review_rating, review_text, review_date) 
                           VALUES (:userId, :userName, :reviewRating, :reviewText, NOW())");
    
    try {
        // Bind parameters
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':userName', $userName);
        $stmt->bindParam(':reviewRating', $reviewRating);
        $stmt->bindParam(':reviewText', $reviewText);
        
        // Execute the query
        $stmt->execute();
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews for a specific item/product
function displayReviews($conn, $itemId) {
    // SQL query to fetch reviews for the given item
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE reviewed_item_id = :itemId ORDER BY review_date DESC");
    
    try {
        // Bind parameter
        $stmt->bindParam(':itemId', $itemId);
        
        // Execute the query
        $stmt->execute();
        
        // Fetch all reviews
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (count($reviews) > 0) {
            echo "<div class='reviews'>";
            
            foreach ($reviews as $review) {
                // Display each review
                echo "<div class='review'>";
                echo "<h4>" . htmlspecialchars($review['user_name']) . "</h4>";
                echo "<p>Rating: " . str_repeat("★", $review['review_rating']) . "</p>";
                echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
                echo "<small>" . date('Y-m-d H:i', strtotime($review['review_date'])) . "</small>";
                echo "</div>";
            }
            
            echo "</div>";
        } else {
            echo "No reviews available for this item.";
        }
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
    }
}

// Function to calculate and display average rating
function getAverageRating($conn, $itemId) {
    // SQL query to calculate average rating
    $stmt = $conn->prepare("SELECT AVG(review_rating) AS avg_rating FROM reviews WHERE reviewed_item_id = :itemId");
    
    try {
        // Bind parameter
        $stmt->bindParam(':itemId', $itemId);
        
        // Execute the query
        $stmt->execute();
        
        // Fetch result
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['avg_rating'] !== null) {
            return number_format($result['avg_rating'], 1); // Round to one decimal place
        } else {
            return "No ratings yet";
        }
    } catch (PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
        return false;
    }
}
?>


// Add a new review
$userId = 1;
$userName = "John Doe";
$rating = 4;
$text = "This is a great product!";
if (addReview($conn, $userId, $userName, $rating, $text)) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

// Display reviews for item ID 5
displayReviews($conn, 5);

// Get and display average rating for item ID 5
$averageRating = getAverageRating($conn, 5);
if ($averageRating) {
    echo "Average Rating: $averageRating stars";
}


<?php
function userReviewSystem() {
    // Static variables to store reviews and votes
    static $reviews = array();
    static $votes = array();

    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        if (isset($_POST['action'])) {
            switch ($_POST['action']) {
                case 'add_review':
                    // Add new review
                    $review_id = count($reviews);
                    $reviews[$review_id] = array(
                        'user' => $_POST['user_name'],
                        'comment' => $_POST['comment'],
                        'votes' => 0,
                        'vote_count' => 1 // Initial vote
                    );
                    break;
                
                case 'vote':
                    // Update votes for a review
                    $review_id = intval($_POST['review_id']);
                    if (!isset($votes[$review_id])) {
                        $votes[$review_id] = 0;
                    }
                    $votes[$review_id] += intval($_POST['value']);
                    break;
            }
        }
    }

    // Calculate average ratings
    foreach ($reviews as $id => $review) {
        if (isset($votes[$id])) {
            $reviews[$id]['average_rating'] = number_format(($votes[$id] / $review['vote_count']), 1);
        } else {
            $reviews[$id]['average_rating'] = 0;
        }
    }

    // Display review form and current reviews
    echo '<div class="review-system">';
    
    // Add Review Form
    echo '<h2>Add a Review</h2>';
    echo '<form method="post" action="">';
    echo '<input type="hidden" name="action" value="add_review">';
    echo '<p><strong>Your Name:</strong> <input type="text" name="user_name" required></p>';
    echo '<p><strong>Review:</strong> <textarea name="comment" rows="4" cols="50" required></textarea></p>';
    echo '<p><input type="submit" value="Submit Review"></p>';
    echo '</form>';

    // Display Reviews
    if (!empty($reviews)) {
        echo '<h2>Reviews</h2>';
        foreach ($reviews as $id => $review) {
            echo '<div class="review">';
            echo '<p><strong>' . htmlspecialchars($review['user']) . ':</strong></p>';
            echo '<p>' . htmlspecialchars($review['comment']) . '</p>';
            echo '<p>Average Rating: ' . $review['average_rating'] . '/5</p>';
            
            // Voting buttons
            if (!isset($_COOKIE["voted_$id"])) {
                echo '<form method="post" action="">';
                echo '<input type="hidden" name="action" value="vote">';
                echo '<input type="hidden" name="review_id" value="' . $id . '">';
                echo '<input type="image" src="up_arrow.png" name="value" value="1">';
                echo '<input type="image" src="down_arrow.png" name="value" value="-1">';
                echo '</form>';
            } else {
                echo '<p>Thank you for voting!</p>';
            }
            
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet. Be the first to review!</p>';
    }

    echo '</div>';

    // Add some basic styling
    echo '<style>
        .review-system {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #eee;
            border-radius: 3px;
        }
        form {
            margin-bottom: 20px;
        }
        input[type="text"], textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>';
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Check if user already submitted a review for this product
    $check_query = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = $conn->prepare($check_query);
    $stmt->bind_param("ii", $user_id, $product_id);
    $stmt->execute();
    
    if ($stmt->fetch()) {
        return false; // User already reviewed
    }
    
    // Insert new review
    $insert_query = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
                    VALUES (?, ?, ?, ?, NOW())";
    $stmt = $conn->prepare($insert_query);
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    // Get all reviews for this product
    $query = "SELECT r.id, r.rating, r.comment, r.created_at, u.username 
             FROM reviews r 
             JOIN users u ON r.user_id = u.id 
             WHERE r.product_id = ?
             ORDER BY r.created_at DESC";
             
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
}

// Function to get average rating for a product
function get_average_rating($product_id) {
    global $conn;
    
    // Calculate average rating
    $query = "SELECT AVG(rating) as average 
             FROM reviews 
             WHERE product_id = ?";
             
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result()->fetch_assoc();
    return round($result['average'], 2); // Round to 2 decimal places
}

// Example usage:

// Submit a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id']; // Get logged-in user's ID
    $product_id = $_GET['product_id'];
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));
    
    if ($rating >= 1 && $rating <= 5) {
        if (submit_review($user_id, $product_id, $rating, $comment)) {
            echo "Review submitted successfully!";
        } else {
            echo "Error submitting review or you already reviewed this product.";
        }
    } else {
        echo "Please select a valid rating between 1 and 5.";
    }
}

// Display reviews for a product
$product_id = $_GET['product_id'];
$reviews = get_reviews($product_id);
$average_rating = get_average_rating($product_id);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .rating-stars {
            display: inline-block;
            color: gold;
        }
        .review-form {
            margin-bottom: 20px;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <h2>Product Reviews</h2>
    
    <!-- Review Form -->
    <?php if (isset($_SESSION['user_id'])) { ?>
        <form class="review-form" method="post">
            <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
            
            <div class="rating-stars">
                <input type="radio" name="rating" value="5"> ★★★★★<br>
                <input type="radio" name="rating" value="4"> ★★★★<br>
                <input type="radio" name="rating" value="3"> ★★★<br>
                <input type="radio" name="rating" value="2"> ★★<br>
                <input type="radio" name="rating" value="1"> ★<br>
            </div>
            
            <textarea name="comment" placeholder="Write your review..."></textarea><br>
            
            <button type="submit" name="submit_review">Submit Review</button>
        </form>
    <?php } else { ?>
        <p>Please login to submit a review.</p>
    <?php } ?>

    <!-- Display Reviews -->
    <div class="reviews-container">
        <h3>Average Rating: <?php echo $average_rating; ?> / 5</h3>
        
        <?php foreach ($reviews as $review) { ?>
            <div class="review-container">
                <strong><?php echo $review['username']; ?></strong><br>
                <?php 
                    // Display stars
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $review['rating']) {
                            echo "★";
                        } else {
                            echo "☆";
                        }
                    }
                ?>
                
                <p><?php echo $review['comment']; ?></p>
                <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
            </div>
        <?php } ?>

    </div>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Review functions class
class UserReview {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Display reviews for a product
    public function displayReviews($productId) {
        $query = "SELECT * FROM reviews WHERE product_id = ?";
        
        if ($stmt = mysqli_prepare($this->conn, $query)) {
            mysqli_stmt_bind_param($stmt, "i", $productId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review'>";
                echo "<h3>By " . htmlspecialchars($row['author']) . "</h3>";
                echo "<p>" . htmlspecialchars($row['content']) . "</p>";
                echo "<div class='rating'>";
                $this->displayStars($row['rating']);
                echo "</div>";
                echo "<small>" . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
                echo "</div>";
            }

            mysqli_stmt_close($stmt);
        }
    }

    // Submit a new review
    public function submitReview($userId, $productId, $rating, $content) {
        if ($rating < 1 || $rating > 5) {
            return "Invalid rating. Please choose between 1 and 5 stars.";
        }

        $query = "INSERT INTO reviews (user_id, product_id, rating, content, timestamp) VALUES (?, ?, ?, ?, NOW())";
        
        if ($stmt = mysqli_prepare($this->conn, $query)) {
            mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $content);
            
            if (mysqli_stmt_execute($stmt)) {
                return true;
            } else {
                return "Error submitting review: " . mysqli_error($this->conn);
            }
            mysqli_stmt_close($stmt);
        }
    }

    // Delete a review
    public function deleteReview($reviewId) {
        $query = "DELETE FROM reviews WHERE id = ?";
        
        if ($stmt = mysqli_prepare($this->conn, $query)) {
            mysqli_stmt_bind_param($stmt, "i", $reviewId);
            
            if (mysqli_stmt_execute($stmt)) {
                return true;
            } else {
                return "Error deleting review: " . mysqli_error($this->conn);
            }
            mysqli_stmt_close($stmt);
        }
    }

    // Helper function to display stars
    private function displayStars($rating) {
        for ($i = 1; $i <= 5; $i++) {
            if ($rating >= $i) {
                echo "<span class='fa fa-star'></span>";
            } elseif ($rating + 0.5 >= $i) {
                echo "<span class='fa fa-star-half-o'></span>";
            } else {
                echo "<span class='fa fa-star-o'></span>";
            }
        }
    }
}

// Initialize the UserReview object
$reviewSystem = new UserReview($conn);

// Example usage:

// Display reviews for product ID 1
$reviewSystem->displayReviews(1);

// Submit a review
$userId = 1;
$productId = 1;
$rating = 4;
$content = "This is a great product!";
echo $reviewSystem->submitReview($userId, $productId, $rating, $content) ? "Review submitted successfully!" : "Error submitting review.";

// Delete a review
$reviewId = 1;
echo $reviewSystem->deleteReview($reviewId) ? "Review deleted successfully!" : "Error deleting review.";

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to create review form
function createReviewForm() {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <h2>Write a Review</h2>
        <div class="form-group">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>
            
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>
            
            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="5" cols="40" required></textarea><br>
            
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select><br>
            
            <input type="submit" name="submit_review" value="Submit Review">
        </div>
    </form>
    <?php
}

// Function to handle review submission
function submitReview($conn) {
    if (isset($_POST['submit_review'])) {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $review = mysqli_real_escape_string($conn, $_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate input
        if (empty($name) || empty($email) || empty($review) || $rating < 1 || $rating > 5) {
            echo "Please fill in all required fields and select a valid rating.";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, review_text, rating) 
                VALUES ('$name', '$email', '$review', '$rating')";
        
        if (mysqli_query($conn, $sql)) {
            echo "<div class='success'>Thank you for submitting your review!</div>";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Get all reviews
    $sql = "SELECT name, review_text, rating FROM reviews";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        echo "<h2>Customer Reviews</h2>";
        while ($row = mysqli_fetch_assoc($result)) {
            $stars = str_repeat("★", $row['rating']);
            echo "
                <div class='review'>
                    <p><strong>{$row['name']}</strong></p>
                    <p>$stars</p>
                    <p>{$row['review_text']}</p>
                </div>
            ";
        }
    } else {
        echo "No reviews yet. Be the first to review!";
    }

    // Calculate average rating
    $avg_sql = "SELECT AVG(rating) as avg_rating FROM reviews";
    $avg_result = mysqli_query($conn, $avg_sql);
    $avg_row = mysqli_fetch_assoc($avg_result);

    if ($avg_row['avg_rating'] !== null) {
        echo "
            <div class='average-rating'>
                <h3>Average Rating:</h3>
                <p>" . number_format($avg_row['avg_rating'], 2) . " stars</p>
            </div>
        ";
    }
}

// Main function
function main() {
    global $conn;

    // Create review form and display reviews
    createReviewForm();
    submitReview($conn);
    displayReviews($conn);

    mysqli_close($conn);
}

main();

?>


<?php
function create_user_review($review_text, $rating, $user_id, $product_id) {
    // Database connection configuration
    include 'db_config.php';

    try {
        // Check if all required parameters are set
        if (!isset($review_text, $rating, $user_id, $product_id)) {
            throw new Exception("Missing required parameters");
        }

        // Prepare the SQL statement
        $stmt = $pdo->prepare("
            INSERT INTO reviews (
                review_text,
                rating,
                user_id,
                product_id,
                created_at
            ) VALUES (
                :review_text,
                :rating,
                :user_id,
                :product_id,
                NOW()
            )
        ");

        // Bind parameters to the statement
        $stmt->bindParam(':review_text', $review_text);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);

        // Execute the query
        if ($stmt->execute()) {
            return true; // Review created successfully
        } else {
            throw new Exception("Error creating review");
        }

    } catch (PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return false;
    } catch (Exception $e) {
        // Handle other errors
        error_log("Application error: " . $e->getMessage());
        return false;
    }
}
?>


<?php
include 'db_config.php';
include 'review_function.php';

// Sample data
$review_text = "This is a great product!";
$rating = 5;
$user_id = 123;
$product_id = 456;

if (create_user_review($review_text, $rating, $user_id, $product_id)) {
    echo "Review created successfully!";
} else {
    echo "Error creating review.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($productId, $userName, $userEmail, $rating, $reviewText) {
    global $conn;

    // Sanitize inputs
    $sanitizedName = mysqli_real_escape_string($conn, htmlspecialchars($userName));
    $sanitizeEmail = mysqli_real_escape_string($conn, htmlspecialchars($userEmail));
    $sanitizeRating = intval($rating);
    $sanitizeReview = mysqli_real_escape_string($conn, htmlspecialchars($reviewText));

    // Check if all required fields are filled
    if (empty($sanitizedName) || empty($sanitizeEmail) || empty($sanitizeRating) || empty($sanitizeReview)) {
        return "Please fill in all required fields.";
    }

    // Validate email format
    if (!filter_var($sanitizeEmail, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    // Ensure rating is between 1 and 5
    if ($sanitizeRating < 1 || $sanitizeRating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, review_text, timestamp) VALUES (?, ?, ?, ?, ?, NOW())");
    $stmt->bind_param("issssi", $productId, $sanitizedName, $sanitizeEmail, $sanitizeRating, $sanitizeReview);

    if ($stmt->execute()) {
        return "Thank you for your review!";
    } else {
        return "Error: " . $stmt->error;
    }

    $stmt->close();
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;

    // Get all reviews for the product
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC");
    $stmt->bind_param("i", $productId);
    $stmt->execute();

    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        // Display each review
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
        echo "<small>Posted on: " . $row['timestamp'] . "</small>";
        echo "</div>";
    }

    $stmt->close();
}

// Close database connection
$conn->close();
?>


<?php
require_once 'db_connect.php';

// Get form data
$productId = $_POST['product_id'];
$userName = $_POST['name'];
$userEmail = $_POST['email'];
$rating = $_POST['rating'];
$reviewText = $_POST['review'];

// Add the review
$message = addReview($productId, $userName, $userEmail, $rating, $reviewText);

echo $message;
?>


<?php
require_once 'db_connect.php';

$productId = 1; // Set this to your current product ID

displayReviews($productId);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize inputs
    $reviewName = htmlspecialchars($_POST['review_name']);
    $reviewText = htmlspecialchars($_POST['review_text']);
    $rating = intval($_POST['rating']);

    // Insert into database
    $sql = "INSERT INTO reviews (username, review_text, rating) VALUES ('$reviewName', '$reviewText', $rating)";
    
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>Thank you for your review!</div>";
    } else {
        echo "<div class='error'>Error submitting review: " . mysqli_error($conn) . "</div>";
    }
}

// Display existing reviews
$sql = "SELECT * FROM reviews ORDER BY date_posted DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        $username = htmlspecialchars($row['username']);
        $reviewText = nl2br(htmlspecialchars($row['review_text']));
        $rating = intval($row['rating']);
        $datePosted = date('F j, Y g:i a', strtotime($row['date_posted']));

        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='username'>$username</span>";
        echo "<span class='stars'>"; 
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                echo "<span class='star-filled'>★</span>";
            } else {
                echo "<span class='star-empty'>☆</span>";
            }
        }
        echo "</span>";
        echo "<span class='date'>$datePosted</span>";
        echo "</div>";
        echo "<p class='review-text'>$reviewText</p>";
        echo "</div>";
    }
} else {
    echo "<div class='info'>No reviews found yet!</div>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to handle user reviews
function submit_review($user_id, $product_id, $rating, $comment) {
    // Validate inputs
    if (empty($user_id) || empty($product_id)) {
        return "Error: User ID and Product ID are required.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }
    
    // Database connection parameters
    $host = 'localhost';
    $dbname = 'your_database_name';
    $dbuser = 'your_username';
    $dbpass = 'your_password';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $dbuser, $dbpass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if user has already reviewed this product
        $stmt = $conn->prepare("SELECT review_id FROM reviews WHERE user_id = :user_id AND product_id = :product_id");
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            return "Error: You have already submitted a review for this product.";
        }

        // Insert new review into database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) 
                              VALUES (:user_id, :product_id, :rating, :comment)");
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            // Return success message
            return "Thank you for submitting your review!";
        } else {
            // Return error message
            return "Error: Failed to submit review.";
        }

    } catch(PDOException $e) {
        // Handle any database errors
        return "Database Error: " . $e->getMessage();
    } finally {
        // Close database connection
        $conn = null;
    }
}

// Example usage:
$user_id = 123; // Replace with actual user ID
$product_id = 456; // Replace with actual product ID
$rating = 5; // Rating between 1 and 5
$comment = "Great product! Highly recommend.";

$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result;
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($review_id, $user_id, $rating, $comment, $conn) {
    // Sanitize input
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (review_id, user_id, rating, comment, review_date) 
            VALUES (?, ?, ?, ?, NOW())";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ssis", $review_id, $user_id, $rating, $comment);
        $stmt->execute();
        $stmt->close();
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($item_id, $conn) {
    // Get all reviews for the item
    $sql = "SELECT r.review_id, u.user_name, r.rating, r.comment, r.review_date 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.item_id = ? 
            ORDER BY r.review_date DESC";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $item_id);
        $stmt->execute();
        $result = $stmt->get_result();

        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>Review by: " . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
        
        $stmt->close();
    }
}

// Function to calculate average rating
function calculate_average_rating($item_id, $conn) {
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average 
            FROM reviews 
            WHERE item_id = ?";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $item_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            return round($row['average'], 1);
        }
        
        $stmt->close();
    }
    
    return 0;
}

// Example usage:
$item_id = "item123";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

// Display all reviews for the item
display_reviews($item_id, $conn);

// Calculate and display average rating
$average_rating = calculate_average_rating($item_id, $conn);
echo "<div class='average-rating'>";
echo "Average Rating: " . str_repeat("★", $average_rating) . " ($average_rating/5)";
echo "</div>";

// Close database connection
$conn->close();

?>


<?php
session_start();
require_once('config.php'); // Database connection file

// Function to display review form
function display_review_form() {
    $output = '
        <form action="submit_review.php" method="POST">
            <input type="hidden" name="csrf_token" value="' . $_SESSION['csrf_token'] . '">
            <div>
                <label for="review_title">Review Title:</label>
                <input type="text" id="review_title" name="review_title" required>
            </div>
            <div>
                <label for="review_text">Review Text:</label>
                <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea>
            </div>
            <div>
                <label for="rating">Rating:</label>
                <select id="rating" name="rating">
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>
            <input type="submit" value="Submit Review">
        </form>
    ';
    return $output;
}

// Function to handle review submission
function handle_review_submission() {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $review_title = htmlspecialchars($_POST['review_title']);
        $review_text = htmlspecialchars($_POST['review_text']);
        $rating = intval($_POST['rating']);
        
        // Validate inputs
        if (empty($review_title) || empty($review_text)) {
            die("Please fill in all required fields.");
        }
        
        // Database connection
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, review_title, review_text, rating, timestamp)
                VALUES ('".$_SESSION['user_id']."', '".$review_title."', '".$review_text."','".$rating."', NOW())";
                
        if ($conn->query($sql) === TRUE) {
            echo "<p>Thank you for submitting your review!</p>";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
        
        $conn->close();
    }
}

// Function to display reviews
function display_reviews() {
    $output = '<div class="reviews">';
    
    // Database connection
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $output .= '
                <div class="review">
                    <h3>'.$row['review_title'].'</h3>
                    <p>'.$row['review_text'].'</p>
                    <div class="rating">';
                        for ($i=1; $i<=$row['rating']; $i++) {
                            $output .= '<span class="star">★</span>';
                        }
                        for ($i=1; $i<=(5 - $row['rating']); $i++) {
                            $output .= '<span class="star">☆</span>';
                        }
                    $output .= '</div>
                    <p>Submitted by: '.$row['user_id'].' on '.date('F j, Y', strtotime($row['timestamp'])).'</p>
                </div>
            ';
        }
    } else {
        $output .= '<p>No reviews found.</p>';
    }
    
    $output .= '</div>';
    return $output;
}
?>


<?php
DB_HOST = 'localhost';
DB_USER = 'your_username';
DB_PASSWORD = 'your_password';
DB_NAME = 'your_database_name';
?>


<?php
// Database configuration
$host = "localhost";
$username = "root"; // your database username
$password = ""; // your database password
$dbname = "reviews_db"; // your database name

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function addReview($userName, $reviewText, $rating) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection
    $userName = sanitizeInput($userName);
    $reviewText = sanitizeInput($reviewText);
    $rating = intval($rating); // Ensure rating is an integer
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating) 
            VALUES ('$userName', '$reviewText', $rating)";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to get all reviews
function getReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        return $result;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to calculate average rating
function getAverageRating() {
    global $conn;
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    
    if ($result && mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        return round($row['average'], 1); // Round to one decimal place
    } else {
        return 0;
    }
}

// Function to sanitize input data
function sanitizeInput($data) {
    global $conn;
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = mysqli_real_escape_string($conn, $data);
    return $data;
}

// Display review form and reviews
echo '<!DOCTYPE html>';
echo '<html>';
echo '<head>';
echo '<title>User Reviews</title>';
echo '<style>';
echo '/* Add some basic styling */';
echo '.review-form { max-width: 600px; margin: 20px auto; padding: 20px; }';
echo '.review-list { margin-top: 30px; }';
echo '.review-item { border-bottom: 1px solid #ddd; padding: 15px 0; }';
echo 'h2 { color: #333; font-size: 24px; }';
echo '</style>';
echo '</head>';
echo '<body>';

// Display average rating
$averageRating = getAverageRating();
echo "<h2>Product Reviews (Average Rating: $averageRating/5)</h2>";

// Review submission form
echo '<div class="review-form">';
echo '<form method="POST" action="">';
echo 'Name:<br>';
echo '<input type="text" name="userName" required><br><br>';
echo 'Review:<br>';
echo '<textarea name="reviewText" rows="4" cols="50" required></textarea><br><br>';
echo 'Rating (1-5):<br>';
echo '<input type="number" name="rating" min="1" max="5" required><br><br>';
echo '<input type="submit" value="Submit Review">';
echo '</form>';
echo '</div>';

// Process review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userName = $_POST['userName'];
    $reviewText = $_POST['reviewText'];
    $rating = $_POST['rating'];
    
    if (addReview($userName, $reviewText, $rating)) {
        echo '<script>alert("Thank you for submitting your review!");</script>';
    } else {
        echo '<script>alert("Error: Review submission failed. Please try again.");</script>';
    }
}

// Display existing reviews
echo '<div class="review-list">';
$reviews = getReviews();
if ($reviews) {
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo '<div class="review-item">';
        echo '<strong>' . $row['user_name'] . '</strong><br>';
        echo nl2br($row['review_text']) . '<br>';
        echo 'Rating: ' . str_repeat('★', $row['rating']) . str_repeat('☆', 5 - $row['rating']) . '<br>';
        echo 'Submitted on: ' . $row['submission_date'];
        echo '</div>';
    }
}
echo '</div>';

echo '</body>';
echo '</html>';
?>


<?php
function createReview($userId, $productId, $reviewText, $rating, $reviewId) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Connect to database
    $connection = mysqli_connect($host, $username, $password, $database);
    
    if (!$connection) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($connection, $userId);
    $productId = mysqli_real_escape_string($connection, $productId);
    $reviewText = mysqli_real_escape_string($connection, $reviewText);
    $rating = mysqli_real_escape_string($connection, $rating);

    // Create the SQL query
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating, review_id)
            VALUES ('$userId', '$productId', '$reviewText', '$rating', '$reviewId')";

    // Execute the query
    if (mysqli_query($connection, $sql)) {
        // Close the database connection
        mysqli_close($connection);
        return true;
    } else {
        // Close the database connection and return false on error
        mysqli_close($connection);
        return false;
    }
}
?>


<?php
$userId = 123;
$productId = 456;
$reviewText = "This is a great product!";
$rating = 5;
$reviewId = uniqid(); // Generate a unique review ID

if (createReview($userId, $productId, $reviewText, $rating, $reviewId)) {
    echo "Review created successfully!";
} else {
    echo "Error creating review.";
}
?>


<?php
// Database connection configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submit_review($product_id, $rating, $comment, $conn) {
    // Sanitize and validate inputs
    $rating = intval($rating);
    $comment = htmlspecialchars($comment);
    
    // Check if the rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating from 1 to 5.";
    }
    
    // Check if comment is not empty and has less than 200 characters
    if (strlen(trim($comment)) == 0 || strlen($comment) > 200) {
        return "Comment must be between 1 and 200 characters long.";
    }

    // Prepare and bind the statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, rating, comment, submission_date) VALUES (?, ?, ?, NOW())");
    $stmt->bind_param("iis", $product_id, $rating, $comment);

    if ($stmt->execute()) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . $stmt->error;
    }

    // Close the statement
    $stmt->close();
}

function display_reviews($product_id, $conn) {
    // Get all reviews for the specified product
    $query = "SELECT rating, comment, submission_date FROM reviews WHERE product_id = ?";
    
    try {
        $stmt = $conn->prepare($query);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "<div class='reviews'>";
            
            // Calculate average rating
            $avg_query = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = ?";
            $avg_stmt = $conn->prepare($avg_query);
            $avg_stmt->bind_param("i", $product_id);
            $avg_stmt->execute();
            $avg_result = $avg_stmt->get_result();
            $row = $avg_result->fetch_assoc();
            
            echo "<div class='average-rating'>";
                echo "Average Rating: <span>" . number_format($row['avg_rating'], 1) . "</span>";
            echo "</div>";

            // Display each review
            while ($review = $result->fetch_assoc()) {
                echo "<div class='review'>";
                    echo "<div class='rating'>Rating: ";
                    for ($i = 0; $i < $review['rating']; $i++) {
                        echo "★";
                    }
                    echo "</div>";
                    echo "<div class='comment'>" . $review['comment'] . "</div>";
                    echo "<div class='date'>" . date("j M Y", strtotime($review['submission_date'])) . "</div>";
                echo "</div>";
            }

            echo "</div>";
        } else {
            echo "No reviews yet.";
        }
    } catch (mysqli_sql_exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        // Sanitize user inputs
        $product_id = intval($_POST['product_id']);
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        // Call submit_review function
        $result = submit_review($product_id, $rating, $comment, $conn);
        echo $result;
    }
}

// Display reviews for product with ID 1
display_reviews(1, $conn);

// Close the database connection
mysqli_close($conn);
?>


<?php
function submitReview($userId, $rating) {
    // Validate inputs
    if (!is_numeric($userId)) {
        throw new Exception("Invalid user ID");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }

    try {
        // Database connection details
        require_once('db_config.php');

        // Connect to database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Check if user has already submitted a review
        $checkQuery = "SELECT * FROM reviews WHERE user_id = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param('i', $userId);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            throw new Exception("User has already submitted a review");
        }

        // Insert the new review
        $insertQuery = "INSERT INTO reviews (user_id, rating, review_date) 
                       VALUES (?, ?, CURRENT_TIMESTAMP)";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param('ii', $userId, $rating);
        $stmt->execute();

        // Calculate average rating
        $averageRating = calculateAverageRating($conn);

        // Close database connection
        $conn->close();

        return "Review submitted successfully! Current average rating: " . number_format($averageRating, 2);

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function calculateAverageRating($conn) {
    $query = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($query);
    
    if ($result === false) {
        throw new Exception("Error calculating average rating: " . $conn->error);
    }

    $row = $result->fetch_assoc();
    return $row['average'];
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');
?>


try {
    $result = submitReview($_POST['user_id'], $_POST['rating']);
    echo $result;
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a specific product
function get_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$product_id'
            ORDER BY r.review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        $reviews = array();
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        return false;
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming the form has fields: rating, comment
    $user_id = $_SESSION['user_id']; // Ensure user is logged in
    $product_id = 1; // Specific product ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Thank you for your review!";
    } else {
        echo "Error submitting your review. Please try again.";
    }
}

// Display reviews for product ID 1
$reviews = get_reviews(1);
if ($reviews) {
    foreach ($reviews as $review) {
        // Display each review
        echo "<div class='review'>";
        echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted by: " . $review['username'] . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet.";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Escape special characters and sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
}

// Function to calculate average rating
function calculate_average_rating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result()->fetch_assoc();
    
    return number_format($result['average'], 1, '.', '');
}

// Function to count reviews
function count_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as total FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result()->fetch_assoc();
    
    return $result['total'];
}

// Function to display reviews
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    $average_rating = calculate_average_rating($product_id);
    $review_count = count_reviews($product_id);
    
    echo "<div class='review-container'>";
    echo "<h3>" . $review_count . " Reviews</h3>";
    echo "<p>Average Rating: " . $average_rating . "/5</p>";
    
    if (empty($reviews)) {
        echo "<p>No reviews yet!</p>";
    } else {
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<p><strong>Rating:</strong> " . $review['rating'] . "/5</p>";
            echo "<p><strong>Review:</strong> " . $review['comment'] . "</p>";
            echo "<p><em>" . date('M j, Y', strtotime($review['review_date'])) . "</em></p>";
            echo "</div>";
        }
    }
    echo "</div>";
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_id = 1; // Set your product ID here
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review.";
    }
}

// Display reviews for product ID 1
display_reviews(1);

$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function insertReview($conn, $product_id, $user_name, $user_email, $rating, $comment) {
    $submission_date = date('Y-m-d H:i:s');
    
    // Prepare and bind
    $stmt = $conn->prepare("INSERT INTO user_reviews (product_id, user_name, user_email, rating, comment, submission_date)
                            VALUES (?, ?, ?, ?, ?, ?)");
    $stmt->bind_param("isssis", $product_id, $user_name, $user_email, $rating, $comment, $submission_date);
    
    // Execute
    if ($stmt->execute()) {
        return true;
    } else {
        error_log("Error inserting review: " . $stmt->error);
        return false;
    }
}

function getReviews($conn, $product_id) {
    $stmt = $conn->prepare("SELECT * FROM user_reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return $result->fetch_all(MYSQLI_ASSOC);
    } else {
        return array();
    }
}

// Close connection
$conn->close();
?>


<?php
include 'db.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $user_name = trim($_POST['user_name']);
    $user_email = trim($_POST['user_email']);
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']), ENT_QUOTES);
    
    // Basic validation
    if (empty($user_name) || empty($user_email) || !filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        die("Please fill in all fields correctly!");
    }
    
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5!");
    }
    
    // Include db connection
    include 'db.php';
    
    if (insertReview($conn, $product_id, $user_name, $user_email, $rating, $comment)) {
        header('Location: product_page.php?success=1');
        exit();
    } else {
        die("Error submitting review. Please try again.");
    }
}
?>


<?php
include 'db.php';

$product_id = 1; // Set your product ID here

// Get reviews for this product
$reviews = getReviews($conn, $product_id);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 20px;
        }
        .rating-stars {
            display: flex;
            gap: 5px;
            color: gold;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php
    if (isset($_GET['success']) && $_GET['success'] == 1) {
        echo "<p style='color: green;'>Thank you for your review!</p>";
    }

    foreach ($reviews as $review) {
        $rating = $review['rating'];
        $stars = str_repeat("★", $rating);
        $submission_date = date('M j, Y g:i a', strtotime($review['submission_date']));
        
        echo "<div class='review'>";
        echo "<div><strong>$review[user_name]</strong> - $stars ($submission_date)</div>";
        echo "<div><em>$review[comment]</em></div>";
        echo "</div>";
    }

    if (empty($reviews)) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
    ?>

    <h2>Write a Review</h2>
    <?php include 'review_form.php'; ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    // Sanitize input to prevent SQL injection and XSS attacks
    return htmlspecialchars(trim($data));
}

// Function to handle review submission
function submitReview() {
    global $conn;

    // Get form data
    $name = isset($_POST['name']) ? sanitizeInput($_POST['name']) : '';
    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : '';
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = isset($_POST['comment']) ? sanitizeInput($_POST['comment']) : '';

    // Handle image upload
    if (isset($_FILES['image'])) {
        $uploadDir = 'uploads/';
        $fileName = basename($_FILES['image']['name']);
        $filePath = $uploadDir . $fileName;

        if (move_uploaded_file($_FILES['image']['tmp_name'], $filePath)) {
            $imagePath = $filePath;
        } else {
            $imagePath = '';
            // Handle error
            echo "Error uploading file.";
        }
    } else {
        $imagePath = '';
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment, image) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("ssisi", $name, $email, $rating, $comment, $imagePath);

    if ($stmt->execute()) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review: " . $conn->error;
    }

    $stmt->close();
}

// Function to display reviews
function displayReviews() {
    global $conn;

    // Get all reviews from database, ordered by submission date
    $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Comment: " . nl2br(htmlspecialchars($row['comment'])) . "</p>";
            
            if ($row['image'] != '') {
                echo "<img src='" . htmlspecialchars($row['image']) . "' alt='Review Image'>";
            }
            
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }

    $result->close();
}

// Close database connection
$conn->close();

?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display reviews
function display_reviews($product_id, $conn) {
    // Get all reviews for this product
    $stmt = $conn->prepare("SELECT r.*, u.username, u.profile_picture FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = ?");
    $stmt->execute([$product_id]);
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    // Display each review
    foreach ($reviews as $review) {
        echo '<div class="review">';
        
        // User information
        echo '<div class="user-info">';
        echo '<img src="' . $review['profile_picture'] . '" alt="User profile picture">';
        echo '<span class="username">' . $review['username'] . '</span>';
        echo '</div>';
        
        // Review rating stars
        display_rating_stars($review['rating']);
        
        // Review comment
        echo '<p class="comment">' . $review['comment'] . '</p>';
        
        // Voting buttons
        echo '<div class="voting">';
        echo '<button onclick="vote_review(' . $review['id'] . ', 1)">↑ Upvote</button>';
        echo '<button onclick="vote_review(' . $review['id'] . ', -1)">↓ Downvote</button>';
        echo '</div>';
        
        // Review date
        echo '<span class="date">' . $review['created_at'] . '</span>';
        
        echo '</div>';
    }
}

// Helper function to display rating stars
function display_rating_stars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo '<img src="star-full.png" alt="Star">';
        } else {
            echo '<img src="star-empty.png" alt="Star">';
        }
    }
}

// Function to handle voting on reviews
function vote_review($review_id, $vote_type, $conn) {
    session_start();
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        return false;
    }
    
    $user_id = $_SESSION['user_id'];
    
    // Check if the user has already voted on this review
    $stmt = $conn->prepare("SELECT * FROM review_votes WHERE review_id = ? AND user_id = ?");
    $stmt->execute([$review_id, $user_id]);
    
    if ($stmt->rowCount() > 0) {
        return false; // User already voted
    }
    
    // Insert the vote
    $stmt = $conn->prepare("INSERT INTO review_votes (review_id, user_id, vote_type, created_at) VALUES (?, ?, ?, NOW())");
    $stmt->execute([$review_id, $user_id, $vote_type]);
    
    // Update the total votes for the review
    $stmt = $conn->prepare("UPDATE reviews SET votes = votes + 1 WHERE id = ?");
    $stmt->execute([$review_id]);
    
    return true;
}

// Function to submit a new review
function submit_review($product_id, $rating, $comment, $conn) {
    session_start();
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        return false;
    }
    
    $user_id = $_SESSION['user_id'];
    
    // Insert the review
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, created_at) VALUES (?, ?, ?, ?, NOW())");
    $stmt->execute([$user_id, $product_id, $rating, $comment]);
    
    return true;
}

// Example usage:
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        submit_review($_POST['product_id'], $_POST['rating'], $_POST['comment'], $conn);
    }
}

display_reviews(1, $conn);

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Function to add a new review
function add_review($user_id, $rating, $comment, $conn) {
    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    $timestamp = date('Y-m-d H:i:s');

    // SQL query to insert review
    $sql = "INSERT INTO reviews (user_id, rating, comment, timestamp) 
            VALUES ('$user_id', '$rating', '$comment', '$timestamp')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews
function get_reviews($conn) {
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-form { margin-bottom: 20px; }
        .review-stars { font-size: 24px; }
        .review-comment { margin-top: 10px; }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<div class="review-form">
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="user_id" value="<?php echo isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 'guest'; ?>">
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br><br>
        
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4" cols="50"></textarea><br><br>
        
        <input type="submit" value="Submit Review">
    </form>
</div>

<?php
// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_POST['user_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Connect to database again for this operation
    $conn = mysqli_connect($host, $username, $password, $dbname);
    if (add_review($user_id, $rating, $comment, $conn)) {
        echo "<script>alert('Review submitted successfully!');</script>";
    } else {
        echo "<script>alert('Error submitting review. Please try again.');</script>";
    }
    mysqli_close($conn);
}

// Display existing reviews
$conn = mysqli_connect($host, $username, $password, $dbname);
$reviews = get_reviews($conn);
mysqli_close($conn);

if (!empty($reviews)) {
    echo "<h2>Customer Reviews</h2>";
    foreach ($reviews as $review) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;'>";
        echo "<p><strong>User ID:</strong> " . $review['user_id'] . "</p>";
        echo "<div class='review-stars'>";
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "★";
        }
        echo "</div>";
        echo "<p class='review-comment'>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['timestamp'] . "</small>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews available.</p>";
}
?>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($product_id, $rating, $review_text, $user_id) {
    global $conn;
    
    // Check if the user is logged in (you should implement your own authentication system)
    if (!$user_id) {
        return "You must be logged in to post a review.";
    }
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    if (empty($review_text)) {
        return "Review text cannot be empty.";
    }
    
    // Escape special characters to prevent SQL injection
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, rating, review_text, user_id) 
            VALUES ($product_id, $rating, '$review_text', $user_id)";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review added successfully!";
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE product_id = $product_id 
            AND status = 'approved' 
            ORDER BY review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Error: " . mysqli_error($conn));
    }
    
    // Display reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h4>Review by: " . $row['username'] . "</h4>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . $row['review_text'] . "</p>";
        echo "<small>Posted on: " . $row['review_date'] . "</small>";
        echo "</div><br/>";
    }
}

// Function to edit a review
function edit_review($review_id, $rating, $review_text) {
    global $conn;
    
    // Check if the user is logged in (you should implement your own authentication system)
    $user_id = $_SESSION['user_id'];
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    if (empty($review_text)) {
        return "Review text cannot be empty.";
    }
    
    // Escape special characters to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    
    // Update review in database
    $sql = "UPDATE reviews 
            SET rating = $rating, 
                review_text = '$review_text', 
                review_date = NOW() 
            WHERE id = $review_id 
            AND user_id = $user_id";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review updated successfully!";
}

// Function to delete a review
function delete_review($review_id) {
    global $conn;
    
    // Check if the user is logged in (you should implement your own authentication system)
    $user_id = $_SESSION['user_id'];
    
    // Escape special characters to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    
    // Delete review from database
    $sql = "DELETE FROM reviews 
            WHERE id = $review_id 
            AND user_id = $user_id";
            
    if (!mysqli_query($conn, $sql)) {
        return "Error: " . mysqli_error($conn);
    }
    
    return "Review deleted successfully!";
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $result = add_review(1, $_POST['rating'], $_POST['review_text'], 1);
    echo $result;
}

display_reviews(1);

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to validate input data
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to sanitize email input
function sanitizeEmail($email) {
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    return $email;
}

// Function to check if email is valid
function isValidEmail($email) {
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return true;
    } else {
        return false;
    }
}

// Function to handle review submission
function submitReview($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = validateInput($_POST['name']);
        $email = sanitizeEmail($_POST['email']);
        $rating = $_POST['rating'];
        $comment = validateInput($_POST['comment']);

        // Validate input data
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("All fields are required!");
        }

        if (!isValidEmail($email)) {
            die("Invalid email format!");
        }

        // Insert review into the database
        $sql = "INSERT INTO reviews (name, email, rating, comment)
                VALUES ('$name', '$email', '$rating', '$comment')";

        if ($conn->query($sql) === TRUE) {
            echo "Review submitted successfully!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . displayStars($row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<p>Submitted on: " . $row['submit_date'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to display stars based on rating
function displayStars($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "<span class='star'>★</span>";
        } else {
            $stars .= "<span class='star'>☆</span>";
        }
    }
    return $stars;
}

// Close the database connection
mysqli_close($conn);
?>


<?php
function submit_review($username, $product_id, $rating, $comments) {
    // Database connection details
    include 'db_config.php';

    try {
        // Connect to the database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // SQL query to insert review into the reviews table
        $sql = "INSERT INTO reviews (username, product_id, rating, comments, date)
                VALUES ('" . mysqli_real_escape_string($conn, $username) . "',
                        '" . mysqli_real_escape_string($conn, $product_id) . "',
                        '" . mysqli_real_escape_string($conn, $rating) . "',
                        '" . mysqli_real_escape_string($conn, $comments) . "',
                        NOW())";

        // Execute the query
        if ($conn->query($sql) === TRUE) {
            echo "Thank you for submitting your review!";
            
            // Get the newly inserted review to display it back
            $last_id = $conn->insert_id;
            $select_sql = "SELECT * FROM reviews WHERE id = '" . mysqli_real_escape_string($conn, $last_id) . "'";
            $result = $conn->query($select_sql);
            
            if ($result->num_rows > 0) {
                $row = $result->fetch_assoc();
                echo "<h3>Review submitted:</h3>";
                echo "<p><strong>Rating:</strong> " . $row['rating'] . "/5</p>";
                echo "<p><strong>Comments:</strong> " . $row['comments'] . "</p>";
            }
        } else {
            throw new Exception("Error: " . $sql . "<br>" . $conn->error);
        }

        // Close the database connection
        $conn->close();
    } catch (Exception $e) {
        echo "An error occurred while submitting your review: " . $e->getMessage();
    }
}

// Example usage:
// submit_review('john_doe', 123, 4, 'Great product! Highly recommended.');
?>


<?php
// Configuration file for database connection
require_once('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Retrieve and sanitize input values
    $name = htmlspecialchars(trim($_POST['name']));
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comments = htmlspecialchars(trim($_POST['comments']));
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comments)) {
        die("All fields are required.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Connect to database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and bind the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, email, rating, comments, timestamp) VALUES (?, ?, ?, ?, ?, NOW())");
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
    }

    $stmt->bind_param("isiii", $product_id, $name, $email, $rating, $comments);

    // Execute the statement
    if ($stmt->execute()) {
        echo "Thank you for submitting your review!";
    } else {
        die("Error: " . $stmt->error);
    }

    // Close resources
    $stmt->close();
    $conn->close();
}
?>


<?php
// Include database connection (you should create your own db_connection.php)
include('db_connection.php');

// Function to add a new review
function addReview($name, $email, $rating, $comment) {
    global $conn;
    
    // Sanitize input data to prevent SQL injection
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Check if all fields are filled
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields!";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, date)
            VALUES ('$name', '$email', '$rating', '$comment', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . $row['rating'] . " stars</p>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted on: " . $row['date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available yet!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include('review_functions.php');
displayReviews();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "reviews_db";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a user review
function createReview($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!is_numeric($product_id) || !is_numeric($user_id)) {
        throw new Exception("Invalid product or user ID");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }
    
    if (empty($comment) || strlen($comment) > 500) {
        throw new Exception("Comment is empty or too long (max 500 characters)");
    }
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment) 
            VALUES ($product_id, $user_id, $rating, '$comment')";
            
    if (!$conn->query($sql)) {
        throw new Exception("Error creating review: " . $conn->error);
    }
    
    // Update average rating for product
    updateAverageRating($product_id);
}

// Function to update average rating for a product
function updateAverageRating($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as total_reviews, AVG(rating) as avg_rating 
            FROM reviews 
            WHERE product_id = $product_id";
            
    $result = $conn->query($sql);
    
    if ($result && $row = $result->fetch_assoc()) {
        $total_reviews = $row['total_reviews'];
        $avg_rating = number_format($row['avg_rating'], 1, '.', '');
        
        // Update product table with new average rating
        $update_sql = "UPDATE products 
                      SET avg_rating = $avg_rating,
                          total_reviews = $total_reviews
                      WHERE id = $product_id";
                      
        if (!$conn->query($update_sql)) {
            throw new Exception("Error updating average rating: " . $conn->error);
        }
    } else {
        throw new Exception("Error fetching reviews: " . $conn->error);
    }
}

// Example usage:
try {
    // Create a review for product ID 1 by user ID 1
    createReview(1, 1, 5, "Great product! Highly recommend.");
    
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create database connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_review_function($action, $data = array()) {
    global $conn;
    
    // Array to hold response data
    $response = array();
    
    switch ($action) {
        case 'submit':
            // Sanitize and validate input data
            $review_id = isset($data['review_id']) ? mysqli_real_escape_string($conn, $data['review_id']) : '';
            $user_id = isset($data['user_id']) ? mysqli_real_escape_string($conn, $data['user_id']) : '';
            $product_id = isset($data['product_id']) ? mysqli_real_escape_string($conn, $data['product_id']) : '';
            $rating = isset($data['rating']) ? mysqli_real_escape_string($conn, $data['rating']) : '';
            $comment = isset($data['comment']) ? mysqli_real_escape_string($conn, $data['comment']) : '';
            
            // Validate required fields
            if ($user_id == '' || $product_id == '' || $rating == '') {
                $response['status'] = 'error';
                $response['message'] = 'All fields are required.';
                return $response;
            }
            
            // Insert review into database
            $sql = "INSERT INTO reviews (review_id, user_id, product_id, rating, comment)
                    VALUES ('$review_id', '$user_id', '$product_id', '$rating', '$comment')";
                    
            if (mysqli_query($conn, $sql)) {
                $response['status'] = 'success';
                $response['message'] = 'Review submitted successfully.';
            } else {
                $response['status'] = 'error';
                $response['message'] = 'Error submitting review: ' . mysqli_error($conn);
            }
            
            break;
            
        case 'display':
            // Get product ID
            $product_id = isset($data['product_id']) ? mysqli_real_escape_string($conn, $data['product_id']) : '';
            
            if ($product_id == '') {
                $response['status'] = 'error';
                $response['message'] = 'Product ID is required.';
                return $response;
            }
            
            // Get reviews from database
            $sql = "SELECT * FROM reviews WHERE product_id = '$product_id'";
            
            $result = mysqli_query($conn, $sql);
            
            if (mysqli_num_rows($result) > 0) {
                $reviews = array();
                
                while ($row = mysqli_fetch_assoc($result)) {
                    $reviews[] = $row;
                }
                
                $response['status'] = 'success';
                $response['data'] = $reviews;
            } else {
                $response['status'] = 'error';
                $response['message'] = 'No reviews found for this product.';
            }
            
            break;
            
        default:
            $response['status'] = 'error';
            $response['message'] = 'Invalid action.';
            break;
    }
    
    return $response;
}

// Example usage:

// Submitting a review
$review_data = array(
    'review_id' => '1',
    'user_id' => '123',
    'product_id' => '456',
    'rating' => '5',
    'comment' => 'This is a great product!'
);

$result = user_review_function('submit', $review_data);
print_r($result);

// Displaying reviews
$display_result = user_review_function('display', array('product_id' => '456'));
print_r($display_result);

?>


<?php
// Function to create a user review
function createReview($userId, $productId, $rating, $reviewText) {
    // Validate input parameters
    if (!is_numeric($userId) || !is_numeric($productId)) {
        return 'Invalid user or product ID';
    }
    if ($rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5';
    }
    if (strlen($reviewText) < 10 || strlen($reviewText) > 1000) {
        return 'Review text must be between 10 and 1000 characters';
    }

    // Database connection
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    
    try {
        // Prepare the SQL statement to insert a new review
        $stmt = $db->prepare("INSERT INTO reviews (user_id, product_id, rating, review_text, created_at) 
                             VALUES (:userId, :productId, :rating, :reviewText, NOW())");
        
        // Bind parameters
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':reviewText', $reviewText);

        // Execute the statement
        if ($stmt->execute()) {
            // Return success message with review details
            return [
                'status' => 'success',
                'message' => 'Review created successfully',
                'review_id' => $db->lastInsertId(),
                'user_id' => $userId,
                'product_id' => $productId,
                'rating' => $rating,
                'review_text' => $reviewText
            ];
        } else {
            return 'Error creating review';
        }
    } catch (PDOException $e) {
        // Handle any database errors
        return 'Database error: ' . $e->getMessage();
    }
}

// Example usage:
$userId = 123;
$productId = 456;
$rating = 5;
$reviewText = "This is a fantastic product! I would recommend it to everyone.";

$result = createReview($userId, $productId, $rating, $reviewText);
print_r($result);

?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "review_system";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Sanitize inputs
$name = mysqli_real_escape_string($conn, $_POST['username']);
$rating = intval($_POST['rating']);
$review = mysqli_real_escape_string($conn, $_POST['review']);

// Validate rating (1-5)
if ($rating < 1 || $rating > 5) {
    die("Invalid rating");
}

// Insert into database
$sql = "INSERT INTO reviews (user_name, rating, review_text) 
        VALUES ('$name', '$rating', '$review')";

if (mysqli_query($conn, $sql)) {
    header('Location: index.php');
} else {
    echo "Error: " . mysqli_error($conn);
}

mysqli_close($conn);
?>


<?php
function display_reviews() {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "review_system";

    $conn = mysqli_connect($servername, $username, $password, $dbname);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get all reviews ordered by timestamp
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 10px;'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Rating: " . $row['rating'] . " stars</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }

    // Close connection
    mysqli_close($conn);
}
?>


<?php
function get_average_rating() {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "review_system";

    $conn = mysqli_connect($servername, $username, $password, $dbname);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    $average = round($row['average'], 2);
    echo "Average Rating: " . $average;

    // Close connection
    mysqli_close($conn);
}
?>


<?php require 'review-system.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
</head>
<body>
    <h1>Product Review System</h1>
    
    <?php get_average_rating(); ?>
    
    <form action="submit-review.php" method="POST">
        <!-- Form elements as before -->
    </form>

    <div id="reviews-section">
        <?php display_reviews(); ?>
    </div>
</body>
</html>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating)) {
        return "All fields are required";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 123; // Replace with actual user ID
$product_id = 456; // Replace with actual product ID
$rating = 5;
$comment = "Great product! Highly recommended.";

$result = submit_review($user_id, $product_id, $rating, $comment);

if ($result === true) {
    echo "Review submitted successfully!";
} else {
    echo $result;
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$database = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Function to add a new review
function addReview($userId, $productId, $comment, $rating) {
    global $conn;
    
    // Sanitize input
    $comment = htmlspecialchars(strip_tags($comment));
    $rating = intval($rating);
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, comment, rating, created_at) 
              VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $comment, $rating);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;
    
    $query = "SELECT r.*, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = ?
              ORDER BY r.created_at DESC";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    return $result;
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    $query = "SELECT AVG(rating) as average 
              FROM reviews 
              WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average'], 1);
}

// Function to count total reviews
function getTotalReviews($productId) {
    global $conn;
    
    $query = "SELECT COUNT(*) as total 
              FROM reviews 
              WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $product_id);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['total'];
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    $reviews = getReviews($productId);
    
    while ($review = mysqli_fetch_assoc($reviews)) {
        $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
        
        echo "<div class='review'>";
        echo "<div class='user-info'>";
        echo "<img src='user-avatar.png' alt='" . $review['username'] . "'>";
        echo "<span class='username'>" . $review['username'] . "</span>";
        echo "<span class='date'>" . date('F j, Y', strtotime($review['created_at'])) . "</span>";
        echo "</div>";
        echo "<p class='comment'>" . $review['comment'] . "</p>";
        echo "<div class='rating'>";
        echo "<span class='stars'>" . $stars . "</span>";
        echo "<button class='upvote'>↑</button>";
        echo "<button class='downvote'>↓</button>";
        echo "</div>";
        echo "</div>";
    }
}

// Function to handle upvotes
function upvoteReview($reviewId, $userId) {
    global $conn;
    
    // Check if user has already voted
    $query = "SELECT * FROM votes WHERE review_id = ? AND user_id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        // Insert new vote
        $query = "INSERT INTO votes (review_id, user_id, vote_type) VALUES (?, ?, 'up')";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
        
        if (mysqli_stmt_execute($stmt)) {
            // Update review votes
            $query = "UPDATE reviews SET upvotes = upvotes + 1 WHERE id = ?";
            $stmt = mysqli_prepare($conn, $query);
            mysqli_stmt_bind_param($stmt, "i", $reviewId);
            
            return mysqli_stmt_execute($stmt);
        }
    }
    
    return false;
}

// Function to handle downvotes
function downvoteReview($reviewId, $userId) {
    global $conn;
    
    // Check if user has already voted
    $query = "SELECT * FROM votes WHERE review_id = ? AND user_id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
    
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        // Insert new vote
        $query = "INSERT INTO votes (review_id, user_id, vote_type) VALUES (?, ?, 'down')";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
        
        if (mysqli_stmt_execute($stmt)) {
            // Update review votes
            $query = "UPDATE reviews SET downvotes = downvotes + 1 WHERE id = ?";
            $stmt = mysqli_prepare($conn, $query);
            mysqli_stmt_bind_param($stmt, "i", $reviewId);
            
            return mysqli_stmt_execute($stmt);
        }
    }
    
    return false;
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $userId = 1; // Replace with actual user ID
    $productId = 1; // Replace with actual product ID
    $comment = $_POST['review_comment'];
    $rating = intval($_POST['review_rating']);
    
    if (addReview($userId, $productId, $comment, $rating)) {
        echo "Thank you for your review!";
    } else {
        echo "Error adding your review.";
    }
}
?>


<?php
// Database configuration
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get form values
    $productId = $_POST['product_id'];
    $userName = $_POST['user_name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Validate input data
    if (empty($productId) || empty($userName) || empty($rating) || empty($comment)) {
        echo "All fields are required!";
    } else {

        // Check if product_id is numeric
        if (!is_numeric($productId)) {
            die("Product ID must be a number.");
        }

        // Sanitize inputs
        $productId = sanitizeInput($productId);
        $userName = sanitizeInput($userName);
        $rating = sanitizeInput($rating);
        $comment = sanitizeInput($comment);

        // Check if rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5.");
        }

        // Prepare SQL statement to insert review
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, rating, comment) VALUES (?, ?, ?, ?)");
        
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        // Bind parameters
        $stmt->bind_param("isdi", $productId, $userName, $rating, $comment);

        // Execute the statement
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            echo "Error: " . $stmt->error;
        }

        // Close the statement
        $stmt->close();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Review submission function
function submitReview() {
    // Check if form was submitted
    if (isset($_POST['submit'])) {
        // Sanitize inputs
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate input data
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("Please fill in all required fields.");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format.");
        }

        // Database connection parameters
        $host = "localhost";
        $db_username = "root";
        $db_password = "";
        $database = "reviews_db";

        // Connect to database
        $connection = new mysqli($host, $db_username, $db_password, $database);

        // Check connection
        if ($connection->connect_error) {
            die("Connection failed: " . $connection->connect_error);
        }

        // Prepare and bind the statement
        $stmt = $connection->prepare("INSERT INTO reviews (name, email, rating, comment, timestamp) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)");
        
        if ($stmt === false) {
            die("Prepare failed: " . $connection->error);
        }

        $stmt->bind_param("ssii", $name, $email, $rating, $comment);

        // Execute the statement
        if (!$stmt->execute()) {
            die("Execute failed: " . $stmt->error);
        }

        // Close statements and connection
        $stmt->close();
        $connection->close();

        // Redirect after submission
        header("Location: thank_you.php");
        exit;
    }
}
?>


<?php
function submitReview($review_id = null, $user_id, $rating, $comment) {
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please enter a number between 1 and 5.";
    }

    // Connect to the database
    $mysqli = new mysqli("localhost", "username", "password", "database_name");
    
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    try {
        // Check if updating an existing review or creating a new one
        if ($review_id !== null) {
            // Update existing review
            $sql = "UPDATE reviews 
                    SET rating = ?, comment = ?
                    WHERE review_id = ? AND user_id = ?";
            
            $stmt = $mysqli->prepare($sql);
            $stmt->bind_param("dssi", $rating, $comment, $review_id, $user_id);
        } else {
            // Insert new review
            $sql = "INSERT INTO reviews (user_id, rating, comment)
                    VALUES (?, ?, ?)";
            
            $stmt = $mysqli->prepare($sql);
            $stmt->bind_param("dss", $user_id, $rating, $comment);
        }

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . $stmt->error;
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($mysqli !== null) {
            $mysqli->close();
        }
    }
}
?>


// Submitting a new review
$result = submitReview(null, 123, 5, "Great product!");
echo $result;

// Updating an existing review
$result = submitReview(456, 123, 4, "Good product but needs improvement.");
echo $result;


<?php
// Database connection settings
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $email, $rating, $comment, $conn) {
    // Sanitize input data
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment) 
            VALUES ('$name', '$email', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews
function getAllReviews($conn) {
    $sql = "SELECT * FROM reviews";
    $result = mysqli_query($conn, $sql);
    return $result;
}

// Function to calculate average rating
function getAverageRating($conn) {
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    return round($row['average'], 1); // Round to one decimal place
}

// Check if review was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST["name"];
    $email = $_POST["email"];
    $rating = isset($_POST["rating"]) ? intval($_POST["rating"]) : 0;
    $comment = $_POST["comment"];

    // Validate input
    if ($name == "" || $email == "" || $rating < 1 || $rating > 5) {
        echo "Please fill in all fields with valid information!";
    } else {
        addReview($name, $email, $rating, $comment, $conn);
    }
}

// Display review form
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .stars {
            display: inline-block;
            cursor: pointer;
            color: gold;
        }

        .review-list {
            margin-top: 30px;
        }

        .review-item {
            padding: 15px;
            border-bottom: 1px solid #ccc;
        }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Leave a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div style="margin-bottom: 10px;">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name">
        </div>

        <div style="margin-bottom: 10px;">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email">
        </div>

        <div style="margin-bottom: 10px;">
            <label>Rating:</label><br>
            <span class="stars" onclick="setRating(5)">★</span>
            <span class="stars" onclick="setRating(4)">★</span>
            <span class="stars" onclick="setRating(3)">★</span>
            <span class="stars" onclick="setRating(2)">★</span>
            <span class="stars" onclick="setRating(1)">★</span>
            <input type="hidden" id="rating" name="rating" value="0">
        </div>

        <div style="margin-bottom: 10px;">
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4"></textarea>
        </div>

        <input type="submit" value="Submit Review">
    </form>
</div>

<div class="review-list">
    <h2>Reviews</h2>
    <?php
    $average = getAverageRating($conn);
    echo "<p>Average Rating: $average stars</p>";
    
    $reviews = getAllReviews($conn);
    while ($row = mysqli_fetch_assoc($reviews)) {
        $stars = str_repeat("★", $row['rating']);
        $date = date('F j, Y', strtotime($row['timestamp']));
        
        echo "<div class=\"review-item\">";
        echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
        echo "<p>" . htmlspecialchars($row['email']) . " - $stars</p>";
        echo "<small>$date</small><br>";
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "</div>";
    }
    ?>
</div>

<script>
function setRating(rating) {
    document.getElementById('rating').value = rating;
    var stars = document.getElementsByClassName('stars');
    for (var i = 0; i < stars.length; i++) {
        if (i < rating) {
            stars[i].style.color = "gold";
        } else {
            stars[i].style.color = "#ccc";
        }
    }
}
</script>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Function to handle user reviews
function submit_review($review_id, $user_name, $user_email, $comment, $rating) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    // Connect to database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate inputs
    if (empty($user_name) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // SQL query to insert review
    $sql = "INSERT INTO reviews (review_id, user_name, user_email, comment, rating, created_at, is_approved)
            VALUES (?, ?, ?, ?, ?, NOW(), 0)";

    // Prepare statement
    $stmt = $conn->prepare($sql);
    
    if (!$stmt) {
        return "Error preparing statement: " . $conn->error;
    }

    // Bind parameters
    $stmt->bind_param("issss", $review_id, $user_name, $user_email, $comment, $rating);

    // Execute the query
    if ($stmt->execute()) {
        // Review submitted successfully
        return "Review submitted successfully. It will be approved after moderation.";
    } else {
        // Error submitting review
        return "Error submitting review: " . $stmt->error;
    }

    // Close connection
    $conn->close();
}

// Example usage:
$user_name = "John Doe";
$user_email = "john@example.com";
$comment = "Great product!";
$rating = 5;

$result = submit_review(1, $user_name, $user_email, $comment, $rating);

echo $result;
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Review class
class Review {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Get reviews for an item
    public function getReviews($item_id) {
        $sql = "SELECT * FROM reviews WHERE item_id = ? ORDER BY timestamp DESC";
        $stmt = mysqli_prepare($this->conn, $sql);
        mysqli_stmt_bind_param($stmt, 'i', $item_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($row['user_name']) . '</h3>';
            echo '<p>Rating: ' . $row['rating'] . '/5</p>';
            echo '<p>' . htmlspecialchars($row['review_text']) . '</p>';
            echo '<small>Posted on: ' . date('F j, Y', strtotime($row['timestamp'])) . '</small>';
            echo '</div>';
        }
    }

    // Add a new review
    public function addReview($item_id, $user_name, $review_text, $rating) {
        $sql = "INSERT INTO reviews (item_id, user_name, review_text, rating) 
                VALUES (?, ?, ?, ?)";
        
        $stmt = mysqli_prepare($this->conn, $sql);
        mysqli_stmt_bind_param($stmt, 'isii', $item_id, $user_name, $review_text, $rating);
        
        if (mysqli_stmt_execute($stmt)) {
            header("Location: " . $_SERVER['PHP_SELF'] . "?item_id=$item_id");
            exit();
        } else {
            echo "Error adding review: " . mysqli_error($this->conn);
        }
    }
}

// Create Review instance
$review = new Review($conn);

// Get item ID from URL parameter
$item_id = isset($_GET['item_id']) ? intval($_GET['item_id']) : 1;

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = htmlspecialchars(trim($_POST['name']));
    $review_text = htmlspecialchars(trim($_POST['review']));
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    
    if (empty($user_name) || empty($review_text)) {
        echo "<div class='error'>Please fill in all required fields.</div>";
    } else {
        $review->addReview($item_id, $user_name, $review_text, $rating);
    }
}

// HTML and CSS
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        
        h1 {
            color: #333;
        }
        
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 4px;
        }
        
        h3 {
            color: #666;
            margin-top: 0;
        }
        
        .review p {
            color: #555;
        }
        
        small {
            color: #999;
            font-size: 0.8em;
        }
        
        .review-form {
            background-color: #f4f4f4;
            padding: 20px;
            border-radius: 4px;
            margin-top: 20px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
        }
        
        input[type="text"], textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Product Reviews</h1>
        
        <?php
        // Display existing reviews
        $review->getReviews($item_id);
        
        // Review submission form
        echo '<div class="review-form">';
        echo '<form method="POST" action="">';
        echo '<div class="form-group">';
        echo '<label for="name">Name:</label>';
        echo '<input type="text" id="name" name="name" required>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="rating">Rating (1-5):</label>';
        echo '<select id="rating" name="rating" required>';
        for ($i = 1; $i <= 5; $i++) {
            echo "<option value=\"$i\">$i</option>";
        }
        echo '</select>';
        echo '</div>';
        
        echo '<div class="form-group">';
        echo '<label for="review">Review:</label>';
        echo '<textarea id="review" name="review" rows="5" required></textarea>';
        echo '</div>';
        
        echo '<button type="submit">Submit Review</button>';
        echo '</form>';
        echo '</div>';
        ?>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


function createReview($product_id, $user_name, $rating, $comment, $db_connection) {
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($db_connection, $product_id);
    $user_name = mysqli_real_escape_string($db_connection, $user_name);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($db_connection, $comment);

    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5 stars.";
    }
    
    if (strlen($comment) < 3) {
        return "Comment must be at least 3 characters long.";
    }

    // Insert review into database
    $insert_review = "INSERT INTO reviews (product_id, user_name, rating, comment)
                     VALUES ('$product_id', '$user_name', '$rating', '$comment')";
    
    if (!mysqli_query($db_connection, $insert_review)) {
        return "Error: " . mysqli_error($db_connection);
    }

    // Get all reviews for the product
    $get_reviews = "SELECT * FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($db_connection, $get_reviews);

    if (!$result) {
        return "Error fetching reviews: " . mysqli_error($db_connection);
    }

    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'user_name' => $row['user_name'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date_posted' => $row['date_posted']
        );
    }

    // Calculate average rating
    $total_ratings = count($reviews);
    if ($total_ratings > 0) {
        $sum_ratings = array_sum(array_column($reviews, 'rating'));
        $average_rating = $sum_ratings / $total_ratings;
    } else {
        $average_rating = 0;
    }

    // Return the average rating and reviews
    return array(
        'average_rating' => number_format($average_rating, 1),
        'reviews' => $reviews,
        'success' => true
    );
}


$db_connection = mysqli_connect("localhost", "username", "password", "database_name");


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = createReview(
        $_POST['product_id'],
        $_POST['user_name'],
        $_POST['rating'],
        $_POST['comment'],
        $db_connection
    );
    
    if (is_array($result)) {
        // Success, reviews updated
        $average_rating = $result['average_rating'];
        $reviews = $result['reviews'];
    } else {
        // Error message
        echo $result;
    }
}


<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php if (isset($average_rating)): ?>
        <h2>Average Rating: <?php echo $average_rating; ?> stars</h2>
        
        <?php foreach ($reviews as $review): ?>
            <div class="review">
                <p><strong><?php echo $review['user_name']; ?></strong></p>
                <p>Rating: <?php 
                    for ($i = 0; $i < $review['rating']; $i++) {
                        echo "★";
                    }
                ?></p>
                <p><?php echo $review['comment']; ?></p>
                <p><?php echo $review['date_posted']; ?></p>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>

    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        
        <p>Name: <input type="text" name="user_name"></p>
        <p>Rating: 
            <select name="rating">
                <option value="5">5 stars</option>
                <option value="4">4 stars</option>
                <option value="3">3 stars</option>
                <option value="2">2 stars</option>
                <option value="1">1 star</option>
            </select>
        </p>
        <p>Comment: <textarea name="comment"></textarea></p>
        
        <input type="submit" value="Submit Review">
    </form>
</body>
</html>


<?php
// Function to create/submit a review
function submitReview($reviewText, $rating, $userId = null, $productId = null, $reviewId = null) {
    // Configuration file
    include 'config.php';

    try {
        // Validate input
        if (empty($reviewText)) {
            throw new Exception("Review text cannot be empty.");
        }
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be a number between 1 and 5.");
        }

        // Sanitize inputs
        $reviewText = htmlspecialchars(trim($reviewText));
        $rating = intval($rating);
        if ($userId !== null) {
            $userId = intval($userId);
        }
        if ($productId !== null) {
            $productId = intval($productId);
        }

        // Database connection
        $pdo = new PDO("mysql:host=$dbHost;dbname=$dbName", $dbUser, $dbPass);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        if ($reviewId === null) {
            // Insert new review
            $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, created_at) 
                    VALUES (:userId, :productId, :rating, :reviewText, NOW())";
            
            $stmt = $pdo->prepare($sql);
            $stmt->bindParam(':userId', $userId, PDO::PARAM_INT);
            $stmt->bindParam(':productId', $productId, PDO::PARAM_INT);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':reviewText', $reviewText);

            if ($stmt->execute()) {
                return ['status' => 'success', 'message' => 'Review submitted successfully!'];
            } else {
                throw new Exception("Error submitting review.");
            }
        } else {
            // Update existing review
            $sql = "UPDATE reviews 
                    SET rating = :rating, 
                        review_text = :reviewText,
                        updated_at = NOW()
                    WHERE id = :reviewId";

            $stmt = $pdo->prepare($sql);
            $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
            $stmt->bindParam(':reviewText', $reviewText);
            $stmt->bindParam(':reviewId', $reviewId, PDO::PARAM_INT);

            if ($stmt->execute()) {
                return ['status' => 'success', 'message' => 'Review updated successfully!'];
            } else {
                throw new Exception("Error updating review.");
            }
        }
    } catch (Exception $e) {
        // Return error message
        return ['status' => 'error', 'message' => $e->getMessage()];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Get form data
        $reviewText = $_POST['review_text'];
        $rating = $_POST['rating'];
        $userId = isset($_POST['user_id']) ? $_POST['user_id'] : null;
        $productId = isset($_POST['product_id']) ? $_POST['product_id'] : null;
        $reviewId = isset($_POST['review_id']) ? $_POST['review_id'] : null;

        // Submit review
        $result = submitReview($reviewText, $rating, $userId, $productId, $reviewId);

        if ($result['status'] == 'success') {
            header("Location: thank_you.php?message=" . urlencode($result['message']));
            exit();
        } else {
            // Display error message
            echo '<script>alert("' . $result['message'] . '"); window.location.href = "submit_review.php";</script>';
        }
    } catch (Exception $e) {
        // Handle unexpected errors
        echo '<script>alert("An unexpected error occurred. Please try again later."); window.location.href = "submit_review.php";</script>';
    }
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_NAME', 'reviews_db');
define('DB_USER', 'root');
define('DB_PASS', '');

// Connect to database
try {
    $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Get form data
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;
    $user_name = isset($_POST['user_name']) ? htmlspecialchars(trim($_POST['user_name'])) : '';
    $email = isset($_POST['email']) ? htmlspecialchars(trim($_POST['email'])) : '';
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = isset($_POST['comment']) ? htmlspecialchars(trim($_POST['comment'])) : '';

    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    // Sanitize inputs
    $item_id = intval($item_id);
    $rating = intval($rating);

    try {
        // Prepare and execute the query
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            (item_id, user_name, email, rating, comment, submission_date) 
            VALUES (?, ?, ?, ?, ?, NOW())
        ");
        
        $stmt->execute(array($item_id, $user_name, $email, $rating, $comment));
        
        if ($stmt->rowCount() > 0) {
            echo "Thank you for your review!";
        } else {
            die("Error submitting review.");
        }
    } catch (PDOException $e) {
        die('Database error: ' . $e->getMessage());
    }
}

// Function to display reviews
function displayReviews($item_id) {
    global $conn;
    
    try {
        // Fetch reviews for the given item
        $stmt = $conn->prepare("
            SELECT * FROM reviews 
            WHERE item_id = ? 
            ORDER BY submission_date DESC
        ");
        
        $stmt->execute(array(intval($item_id)));
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Display reviews
        if (!empty($reviews)) {
            echo '<div class="reviews">';
            foreach ($reviews as $review) {
                echo '<div class="review">';
                echo '<h3>' . htmlspecialchars($review['user_name']) . '</h3>';
                echo '<p>Rating: ' . str_repeat('★', $review['rating']) . '</p>';
                echo '<p>' . htmlspecialchars($review['comment']) . '</p>';
                echo '<small>Submitted on: ' . date('F j, Y g:i a', strtotime($review['submission_date'])) . '</small>';
                echo '</div>';
            }
            echo '</div>';
        } else {
            echo '<p>No reviews available for this item.</p>';
        }
    } catch (PDOException $e) {
        die('Database error: ' . $e->getMessage());
    }
}
?>


<?php displayReviews([ITEM_ID]); ?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'reviews_db';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to create review form and display reviews
function userReviewSystem() {
    global $conn;
    
    // Get all reviews from the database
    $reviewsQuery = "SELECT * FROM reviews WHERE status = 'approved' ORDER BY date DESC";
    $reviewsResult = mysqli_query($conn, $reviewsQuery);
    
    // Display review form
    echo '<div class="review-form">';
    echo '<h2>Submit a Review</h2>';
    echo '<form action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" method="post">';
    echo 'Name: <input type="text" name="username" required><br>';
    echo 'Rating: ';
    for ($i = 1; $i <= 5; $i++) {
        echo "<input type='radio' name='rating' value='$i'>★ ";
    }
    echo '<br>Comment: <textarea name="comment" rows="4" cols="50" required></textarea><br>';
    echo '<input type="submit" name="submit_review" value="Submit Review">';
    echo '</form>';
    echo '</div>';
    
    // Display existing reviews
    if (mysqli_num_rows($reviewsResult) > 0) {
        echo '<h2>Customer Reviews</h2>';
        while ($row = mysqli_fetch_assoc($reviewsResult)) {
            $username = $row['username'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $date = date('F j, Y', strtotime($row['date']));
            
            echo '<div class="review">';
            echo "<h3>$username</h3>";
            displayStars($rating);
            echo "<p>Rating: $rating/5</p>";
            echo "<p>$comment</p>";
            echo "<small>Posted on: $date</small>";
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet.</p>';
    }
}

// Function to display stars based on rating
function displayStars($rating) {
    $fullStars = floor($rating);
    $hasHalfStar = ($rating - $fullStars) >= 0.5;
    
    for ($i = 1; $i <= $fullStars; $i++) {
        echo '★ ';
    }
    if ($hasHalfStar) {
        echo '⯨ '; // Half star
    }
    for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {
        echo '☆ '; // Empty star
    }
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    global $conn;
    
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $rating = filter_var($_POST['rating'], FILTER_VALIDATE_INT);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);
    
    if ($rating < 1 || $rating > 5) {
        die("Invalid rating value.");
    }
    
    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (username, rating, comment) VALUES (?, ?, ?)");
    $stmt->bind_param("sii", $username, $rating, $comment);
    if ($stmt->execute()) {
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } else {
        die("Error submitting review: " . $stmt->error);
    }
}

// Moderate reviews (approve/delete)
if (isset($_GET['action']) && isset($_GET['review_id'])) {
    global $conn;
    $reviewId = mysqli_real_escape_string($conn, $_GET['review_id']);
    
    if ($_GET['action'] == 'approve') {
        $stmt = $conn->prepare("UPDATE reviews SET status='approved' WHERE id=?");
        $stmt->bind_param("i", $reviewId);
        if ($stmt->execute()) {
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    } elseif ($_GET['action'] == 'delete') {
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id=?");
        $stmt->bind_param("i", $reviewId);
        if ($stmt->execute()) {
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    }
}

// Call the review system function
userReviewSystem();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review {
            margin: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .review-form {
            margin-bottom: 30px;
            padding: 20px;
            background-color: #f5f5f5;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>
    
    <?php userReviewSystem(); ?>

    <!-- Moderation links -->
    <?php if (isset($_SESSION['admin']) && $_SESSION['admin'] == true) { ?>
        <div style="margin-top: 20px;">
            <h3>Moderate Reviews</h3>
            <?php
                $moderationQuery = "SELECT * FROM reviews WHERE status != 'approved'";
                $modResult = mysqli_query($conn, $moderationQuery);
                
                if (mysqli_num_rows($modResult) > 0) {
                    while ($row = mysqli_fetch_assoc($modResult)) {
                        echo "<div class='review'>";
                        echo "<h3>{$row['username']}</h3>";
                        displayStars($row['rating']);
                        echo "<p>{$row['comment']}</p>";
                        echo "<a href='?action=approve&review_id={$row['id']}'>Approve</a> | ";
                        echo "<a href='?action=delete&review_id={$row['id']}'>Delete</a>";
                        echo "</div>";
                    }
                } else {
                    echo "No pending reviews.";
                }
            ?>
        </div>
    <?php } ?>

</body>
</html>


// Add this somewhere before calling userReviewSystem()
if (isset($_SESSION['admin'])) {
    $_SESSION['admin'] = true;
}


<?php
// Initialize session
session_start();

// Create unique token to prevent CSRF attacks
if (!isset($_SESSION['token'])) {
    $_SESSION['token'] = bin2hex(random_bytes(32));
}

// Database connection (replace with your database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process submitted review if form is submitted
if (isset($_POST['submit'])) {
    // Validate and sanitize input data
    $token = $_SESSION['token'];
    
    if ($_POST['token'] !== $token) {
        die("Invalid token. Please refresh the page.");
    }

    $name = htmlspecialchars(trim($_POST['name']));
    $review = htmlspecialchars(trim($_POST['review']));

    // Check if fields are not empty
    if (empty($name) || empty($review)) {
        $error_message = "Please fill in all required fields!";
    } else {
        // Insert review into database
        $sql = "INSERT INTO reviews (name, review, date)
                VALUES (?, ?, ?)";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $name, $review, date('Y-m-d H:i:s'));
        
        if ($stmt->execute()) {
            // Redirect to avoid form resubmission
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            $error_message = "Error submitting review. Please try again!";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-form { max-width: 600px; margin: 0 auto; padding: 20px; }
        .review-list { margin-top: 20px; }
        .review-item { border: 1px solid #ddd; padding: 15px; margin-bottom: 10px; }
    </style>
</head>
<body>
    <h1>User Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <?php if (isset($error_message)) { ?>
            <p style="color: red;"><?php echo $error_message ?></p>
        <?php } ?>

        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="hidden" name="token" value="<?php echo $token; ?>">

            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="4" cols="50" required></textarea><br><br>

            <button type="submit" name="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <?php
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) { ?>
        <div class="review-list">
            <?php while ($row = $result->fetch_assoc()) { ?>
                <div class="review-item">
                    <strong><?php echo htmlspecialchars($row['name']); ?></strong><br>
                    <?php echo htmlspecialchars($row['review']); ?><br>
                    <small>Posted on <?php echo date('F j, Y g:i a', strtotime($row['date'])); ?></small>
                </div>
            <?php } ?>
        </div>
    <?php } else { ?>
        <p>No reviews yet. Be the first to leave a review!</p>
    <?php } ?>

    <!-- Close database connection -->
    <?php $conn->close(); ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Create a connection to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!isset($product_id) || !is_numeric($product_id)) {
        return 'Invalid product ID';
    }
    if (!isset($user_id) || !is_numeric($user_id)) {
        return 'Invalid user ID';
    }
    if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5';
    }
    if (empty($comment)) {
        return 'Comment cannot be empty';
    }
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        return 'Please log in to post a review';
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, date) 
            VALUES ('$product_id', '$user_id', '$rating', '$comment', NOW())";
    
    if ($conn->query($sql)) {
        return 'Review added successfully';
    } else {
        return 'Error adding review: ' . $conn->error;
    }
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    // Validate input
    if (!isset($product_id) || !is_numeric($product_id)) {
        return 'Invalid product ID';
    }
    
    // Get reviews from database
    $sql = "SELECT r.rating, r.comment, r.date, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$product_id' 
            ORDER BY r.date DESC";
    
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $reviews = array();
        
        // Calculate average rating
        $average_rating = 0;
        $total_reviews = $result->num_rows;
        
        while ($row = $result->fetch_assoc()) {
            $average_rating += $row['rating'];
            $reviews[] = $row;
        }
        
        $average_rating /= $total_reviews;
        
        return array(
            'reviews' => $reviews,
            'average_rating' => $average_rating,
            'total_reviews' => $total_reviews
        );
    } else {
        return 'No reviews found for this product';
    }
}

// Example usage:
// Assuming user is logged in and has a session with user_id set

// Add a review
$review_result = add_review(1, $_SESSION['user_id'], 4, "Great product!");
echo $review_result;

// Display reviews for product ID 1
$reviews = display_reviews(1);
if (is_array($reviews)) {
    echo "<h3>Average Rating: " . number_format($reviews['average_rating'], 1) . "/5</h3>";
    echo "<p>Total Reviews: " . $reviews['total_reviews'] . "</p>";
    
    foreach ($reviews['reviews'] as $review) {
        echo "<div class='review'>";
        echo "<p><strong>" . $review['username'] . "</strong> - " . $review['rating'] . "/5</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<p>" . $review['date'] . "</p>";
        echo "</div>";
    }
} else {
    echo $reviews;
}

$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function add_review($product_id, $user_name, $review_text, $rating) {
    global $conn;
    
    // Validate rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, review_text, rating, review_date) 
                               VALUES (:product_id, :user_name, :review_text, :rating, NOW())");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':review_text', $review_text);
        $stmt->bindParam(':rating', $rating);
        
        $stmt->execute();
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = :product_id ORDER BY review_date DESC");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    
    if (!$reviews) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
        return;
    }
    
    $total_rating = 0;
    
    echo "<div class='reviews'>";
    foreach ($reviews as $review) {
        $rating = $review['rating'];
        $user_name = $review['user_name'];
        $review_text = $review['review_text'];
        $date = date('M j, Y g:i a', strtotime($review['review_date']));
        
        echo "<div class='review'>";
        echo "<h4>$user_name</h4>";
        echo "<p>Rating: $rating/5</p>";
        echo "<p>$review_text</p>";
        echo "<small>$date</small>";
        echo "</div>";
        
        $total_rating += $rating;
    }
    
    // Calculate average rating
    $average_rating = $reviews ? round($total_rating / count($reviews), 1) : 0;
    echo "<div class='average-rating'>";
    echo "<h3>Average Rating: $average_rating/5</h3>";
    echo "</div>";
    echo "</div>";
}

// Example usage:
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }
        .average-rating {
            margin-top: 20px;
            padding: 15px;
            background-color: #e6e6e6;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<?php
// Display review form and reviews for product ID 1
$product_id = 1;

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (add_review($product_id, $user_name, $review_text, $rating)) {
        echo "<p>Thank you for submitting your review!</p>";
    } else {
        echo "<p>Error submitting review. Please try again.</p>";
    }
}

// Display review form
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <h2>Write a Review</h2>
    <input type="text" name="user_name" placeholder="Your Name" required><br><br>
    <textarea name="review_text" placeholder="Your Review" required></textarea><br><br>
    <select name="rating" required>
        <option value="">Select Rating</option>
        <option value="5">5 Stars</option>
        <option value="4">4 Stars</option>
        <option value="3">3 Stars</option>
        <option value="2">2 Stars</option>
        <option value="1">1 Star</option>
    </select><br><br>
    <button type="submit" name="submit">Submit Review</button>
</form>

<!-- Display existing reviews -->
<h2>Product Reviews</h2>
<?php display_reviews($product_id); ?>

</body>
</html>


<?php
// Database connection details
$hostname = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create connection
$conn = mysqli_connect($hostname, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize user inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars($_POST['name']));
    $review = mysqli_real_escape_string($conn, htmlspecialchars($_POST['review']));

    if (!empty($name) && !empty($review)) {
        // Insert review into database
        $sql = "INSERT INTO reviews (name, review, timestamp)
                VALUES ('$name', '$review', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "<script>alert('Review submitted successfully!');</script>";
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            echo "Error submitting review: " . mysqli_error($conn);
        }
    } else {
        echo "Please fill in all required fields!";
    }
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .review-list { margin: 20px; }
        .review-item { margin-bottom: 20px; padding: 15px; background-color: #f9f9f9; }
    </style>
</head>
<body>
    <h1>Review System</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea><br><br>
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <div class="review-list">
        <?php
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));
                echo "<div class='review-item'>";
                echo "<h4>" . htmlspecialchars($row['name']) . "</h4>";
                echo "<p>" . htmlspecialchars($row['review']) . "</p>";
                echo "<small>Posted on: $timestamp</small>";
                echo "</div>";
            }
        } else {
            echo "No reviews yet!";
        }
        ?>
    </div>

    <?php
    // Close database connection
    mysqli_close($conn);
    ?>

</body>
</html>


<?php
function displayUserReviews($product_id) {
    // Database connection details
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    // Create database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to get reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Output the review content
        while ($row = $result->fetch_assoc()) {
            $username = $row['user_name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $date = $row['timestamp'];

            echo "<div class='review'>";
            echo "<h3>Reviewed by: " . $username . "</h3>";
            
            // Display stars
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<i class='fas fa-star'></i>";
                } else {
                    echo "<i class='far fa-star'></i>";
                }
            }
            echo "</div>";
            
            // Display comment
            echo "<p>" . $comment . "</p>";
            
            // Display date
            echo "<small>Reviewed on: " . date('F j, Y', strtotime($date)) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found for this product.";
    }

    // Close database connection
    $conn->close();
}
?>


<?php displayUserReviews(1); ?>


<?php
class ReviewManager {
    private $conn;

    public function __construct($host, $db_name, $username, $password) {
        try {
            $this->conn = new mysqli($host, $username, $password, $db_name);
            
            if ($this->conn->connect_error) {
                throw new Exception("Connection failed: " . $this->conn->connect_error);
            }
        } catch (Exception $e) {
            die("Connection Error: " . $e->getMessage());
        }
    }

    // Add a new review
    public function addReview($product_id, $user_id, $rating, $comment) {
        try {
            if ($rating < 1 || $rating > 5) {
                throw new Exception("Rating must be between 1 and 5");
            }
            
            $stmt = $this->conn->prepare("
                INSERT INTO reviews 
                (product_id, user_id, rating, comment, review_date)
                VALUES (?, ?, ?, ?, NOW())
            ");
            
            $stmt->bind_param("iisi", $product_id, $user_id, $rating, $comment);
            
            if ($stmt->execute()) {
                return true;
            } else {
                throw new Exception("Error adding review: " . $this->conn->error);
            }
        } catch (Exception $e) {
            die("Review Error: " . $e->getMessage());
        }
    }

    // Get reviews for a product
    public function getReviews($product_id, $limit = 5) {
        try {
            $stmt = $this->conn->prepare("
                SELECT 
                    r.review_id,
                    r.product_id,
                    r.user_id,
                    r.rating,
                    r.comment,
                    r.review_date,
                    u.username
                FROM reviews r
                LEFT JOIN users u ON r.user_id = u.user_id
                WHERE r.product_id = ?
                ORDER BY review_date DESC
                LIMIT ?
            ");
            
            $stmt->bind_param("ii", $product_id, $limit);
            $stmt->execute();
            
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                return $result->fetch_all(MYSQLI_ASSOC);
            } else {
                return array();
            }
        } catch (Exception $e) {
            die("Review Error: " . $e->getMessage());
        }
    }

    // Display reviews in HTML
    public function displayReviews($reviews) {
        if (empty($reviews)) {
            return "<p>No reviews available yet.</p>";
        }
        
        $html = "<div class='reviews'>";
        
        foreach ($reviews as $review) {
            $stars_html = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
            
            $html .= <<<HTML
                <div class="review-item">
                    <div class="review-header">
                        <span class="username">{$review['username']}</span>
                        <div class="stars">{$stars_html}</div>
                    </div>
                    <p class="comment">{$review['comment']}</p>
                    <small class="date">Posted on {$review['review_date']}</small>
                </div>
HTML;
        }
        
        $html .= "</div>";
        
        return $html;
    }

    // Close database connection
    public function __destruct() {
        if ($this->conn) {
            $this->conn->close();
        }
    }
}

// Example usage:
try {
    // Create ReviewManager instance
    $review_manager = new ReviewManager(
        'localhost',          // Database host
        'mydatabase',         // Database name
        'username',           // Database username
        'password'            // Database password
    );

    // Add a new review (assuming user_id 1 and product_id 1)
    $product_id = 1;
    $user_id = 1;
    $rating = 5;
    $comment = "This is an amazing product!";
    
    if ($review_manager->addReview($product_id, $user_id, $rating, $comment)) {
        echo "Review added successfully!";
    }

    // Get and display reviews
    $reviews = $review_manager->getReviews(1); // Get reviews for product ID 1
    
    // Output the HTML
    echo $review_manager->displayReviews($reviews);

} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .review {
            margin-bottom: 30px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .rating-stars {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>

<?php
// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    try {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (:name, :email, :rating, :comment)");
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        $stmt->execute();

        // Redirect to avoid form resubmission
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Display reviews
try {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    die("Error fetching reviews: " . $e->getMessage());
}
?>

<h1>Product Reviews</h1>

<!-- Review Form -->
<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Select a rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>
</div>

<!-- Display Reviews -->
<?php if (!empty($reviews)): ?>
<h2>Customer Reviews</h2>
<?php foreach ($reviews as $review): ?>
<div class="review">
    <h3><?php echo htmlspecialchars($review['name']); ?></h3>
    <p><?php echo htmlspecialchars($review['email']); ?></p>
    <div class="rating-stars">
        <?php 
            $stars = intval($review['rating']);
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $stars) {
                    echo "★";
                } else {
                    echo "☆";
                }
            }
        ?>
    </div>
    <p><?php echo htmlspecialchars($review['comment']); ?></p>
    <small>Submitted on: <?php echo date('F j, Y', strtotime($review['submission_date'])); ?></small>
</div>
<?php endforeach; ?>
<?php else: ?>
<p>No reviews have been submitted yet.</p>
<?php endif; ?>

</body>
</html>


<?php
// Function to display user reviews
function displayUserReviews($reviews) {
    // Check if there are any reviews to display
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }

    // Loop through each review and display it
    foreach ($reviews as $review) {
        // Create HTML structure for displaying the review
        echo "
            <div class='review-box'>
                <h3>{$review['title']}</h3>
                <p><strong>By {$review['author']}</strong></p>
                <p>Rating: ";
                    // Display stars based on rating
                    $rating = $review['rating'];
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $rating) {
                            echo "<span class='star'>★</span>";
                        } else {
                            echo "<span class='star'>☆</span>";
                        }
                    }
                echo "</p>
                <p>{$review['content']}</p>
                <small>Posted on: " . date('F j, Y', $review['date']) . "</small>
            </div>
        ";
    }
}

// Function to post a new review
function submitReview($name, $email, $title, $content, $rating) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    // Check if connection failed
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs and prepare SQL statement
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $title = mysqli_real_escape_string($conn, $title);
    $content = mysqli_real_escape_string($conn, $content);
    $rating = intval($rating);

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, title, content, rating, date) 
            VALUES ('$name', '$email', '$title', '$content', '$rating', NOW())";

    if (mysqli_query($conn, $sql)) {
        echo "<p>Review submitted successfully!</p>";
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}
?>


<?php
// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $database);

// Query to get all reviews
$sql = "SELECT * FROM reviews ORDER BY date DESC";
$result = mysqli_query($conn, $sql);

$reviews = array();
while ($row = mysqli_fetch_assoc($result)) {
    $reviews[] = $row;
}

mysqli_close($conn);

// Display the reviews
displayUserReviews($reviews);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    user_email VARCHAR(255),
    rating INT,
    comments TEXT,
    submission_date DATETIME
)";

mysqli_query($conn, $sql);

// Handle review submission
if (isset($_POST['submit'])) {
    // Sanitize input
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = intval($_POST['rating']);
    $comments = mysqli_real_escape_string($conn, $_POST['comments']);

    // Validate input
    $errors = [];
    if (empty($name) || empty($email) || empty($rating) || empty($comments)) {
        $errors[] = "All fields are required!";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address!";
    }

    if ($rating < 1 || $rating > 5) {
        $errors[] = "Rating must be between 1 and 5!";
    }

    // Display errors or insert into database
    if (!empty($errors)) {
        $_SESSION['error'] = implode('<br>', $errors);
    } else {
        $submission_date = date('Y-m-d H:i:s');
        
        $sql = "INSERT INTO reviews (user_name, user_email, rating, comments, submission_date)
                VALUES ('$name', '$email', $rating, '$comments', '$submission_date')";
                
        if (!mysqli_query($conn, $sql)) {
            $_SESSION['error'] = "There was an error submitting your review. Please try again!";
        }
    }

    // Redirect to avoid form resubmission
    header('Location: ' . $_SERVER['PHP_SELF']);
    exit();
}

// Get all reviews from database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);
$reviews = $result->fetch_all(MYSQLI_ASSOC);

// Calculate average rating
$sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews";
$result_avg = mysqli_query($conn, $sql_avg);
$avg_rating = $result_avg ? $result_avg->fetch_assoc()['avg_rating'] : 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .review-form { margin-bottom: 30px; }
        .error { color: red; margin-bottom: 10px; }
        .review { border: 1px solid #ddd; padding: 15px; margin-bottom: 15px; }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['error'])) { ?>
        <div class="error"><?php echo $_SESSION['error']; unset($_SESSION['error']); ?></div>
    <?php } ?>

    <!-- Review Form -->
    <h2>Submit Your Review</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" class="review-form">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>
        <textarea name="comments" placeholder="Your Review" required></textarea><br>
        <input type="submit" name="submit" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    <?php if (empty($reviews)) { ?>
        <p>No reviews available yet!</p>
    <?php } else { ?>
        <?php foreach ($reviews as $review) { ?>
            <div class="review">
                <h3><?php echo $review['user_name']; ?></h3>
                <p>Rating: <?php echo str_repeat('★', $review['rating']); ?> (<?php echo $review['rating']; ?>/5)</p>
                <p><?php echo nl2br($review['comments']); ?></p>
                <small>Submitted on: <?php 
                    $date = new DateTime($review['submission_date']);
                    echo $date->format('F j, Y g:i a');
                ?></small>
            </div>
        <?php } ?>
    <?php } ?>

    <!-- Display Average Rating -->
    <h3>Average Rating: <?php echo number_format($avg_rating, 1); ?> / 5</h3>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Function to add user review
function addReview($user_id, $content_id, $rating, $comment) {
    global $conn;
    
    // Check if parameters are set and not empty
    if (empty($user_id) || empty($content_id) || empty($rating) || empty($comment)) {
        return false;
    }
    
    // Prepare SQL query to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, content_id, rating, comment, created_at, updated_at) 
                           VALUES (?, ?, ?, ?, NOW(), NOW())");
                           
    if ($stmt === false) {
        die('SQL error: ' . $conn->error);
    }
    
    // Bind parameters
    $stmt->bind_param("iiis", $user_id, $content_id, $rating, $comment);
    
    // Execute the query
    $result = $stmt->execute();
    
    // Close statement
    $stmt->close();
    
    return $result;
}

// Example usage:
$user_id = 1;       // Replace with actual user ID
$content_id = 5;    // Replace with actual content/product ID
$rating = 4;        // Rating between 1-5
$comment = "This is a great product!"; 

if (addReview($user_id, $content_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

// Function to get reviews for a content/product
function getReviews($content_id) {
    global $conn;
    
    // Prepare SQL query
    $stmt = $conn->prepare("SELECT r.id, u.username, r.rating, r.comment, r.created_at 
                           FROM reviews r 
                           JOIN users u ON r.user_id = u.id 
                           WHERE r.content_id = ? 
                           ORDER BY r.created_at DESC");
                           
    if ($stmt === false) {
        die('SQL error: ' . $conn->error);
    }
    
    // Bind parameters
    $stmt->bind_param("i", $content_id);
    
    // Execute the query
    $stmt->execute();
    
    // Get result
    $result = $stmt->get_result();
    
    // Fetch reviews as an array of objects
    $reviews = $result->fetch_all(MYSQLI_ASSOC);
    
    // Close statement
    $stmt->close();
    
    return $reviews;
}

// Example usage:
$reviews = getReviews($content_id);

foreach ($reviews as $review) {
    echo "User: " . $review['username'] . "<br>";
    echo "Rating: " . $review['rating'] . "/5<br>";
    echo "Comment: " . $review['comment'] . "<br>";
    echo "Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "<hr>";
}

// Close database connection
$conn->close();
?>


<?php
// Sample review data (replace with your database connection)
$reviews = array();

function submitReview($user_id, $comment, $rating) {
    global $reviews;

    // Validate input
    if (empty($user_id) || empty($comment) || !is_numeric($rating)) {
        return false;
    }

    // Add review to the array
    $review = array(
        'user_id' => $user_id,
        'comment' => htmlspecialchars($comment),
        'rating' => (int)$rating,
        'date' => date('Y-m-d H:i:s')
    );

    $reviews[] = $review;

    return true;
}

function displayReviews() {
    global $reviews;

    if (empty($reviews)) {
        echo '<p>No reviews yet.</p>';
        return;
    }

    foreach ($reviews as $review) {
        // Display each review
        echo '<div class="review">';
        echo '<h3>Review by User #' . $review['user_id'] . '</h3>';
        echo '<p>' . $review['comment'] . '</p>';
        displayStars($review['rating']);
        echo '<p class="review-date">' . $review['date'] . '</p>';
        echo '</div>';
    }
}

function averageRating() {
    global $reviews;

    if (empty($reviews)) {
        return 0;
    }

    $total = array_sum(array_column($reviews, 'rating'));
    $average = $total / count($reviews);

    return round($average, 1);
}

function displayStars($rating) {
    // Display stars based on rating (1-5)
    echo '<div class="stars">';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo '<span class="star-filled">★</span>';
        } else {
            echo '<span class="star-empty">☆</span>';
        }
    }
    echo '</div>';
}

// Example usage:

// Submit a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_POST['user_id'];
    $comment = $_POST['review_comment'];
    $rating = $_POST['rating'];

    if (submitReview($user_id, $comment, $rating)) {
        echo '<p>Thank you for your review!</p>';
    } else {
        echo '<p>Error submitting review. Please try again.</p>';
    }
}

// Display average rating and all reviews
echo '<h2>Product Reviews</h2>';
echo '<p>Average Rating: ' . averageRating() . '/5</p>';
displayReviews();
?>

<!-- Add this CSS to style the stars -->
<style>
.star-filled {
    color: gold;
}
.star-empty {
    color: #ddd;
}
.review {
    margin-bottom: 20px;
    padding: 10px;
    border: 1px solid #ccc;
}
</style>

<!-- Add this HTML for review submission form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <h3>Submit a Review</h3>
    <input type="hidden" name="user_id" value="123"> <!-- Replace with actual user ID -->
    
    <div>
        <label for="review_comment">Comment:</label><br>
        <textarea id="review_comment" name="review_comment" required></textarea>
    </div>

    <div>
        <label>Rating:</label><br>
        <select name="rating" required>
            <option value="">Choose a rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
    </div>

    <button type="submit" name="submit_review">Submit Review</button>
</form>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Review submission function
function submitReview($item_id) {
    global $conn;
    
    // Sanitize and validate input
    if (isset($_POST['submit'])) {
        $name = htmlspecialchars(trim($_POST['name']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));
        
        // Basic validation
        if ($name == "" || $rating < 1 || $rating > 5 || $comment == "") {
            echo "Please fill in all required fields and select a valid rating.";
            return;
        }
        
        // Prepare and execute SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (item_id, name, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("isiii", $item_id, $name, $rating, $comment);
        
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            echo "Error submitting review: " . $conn->error;
        }
        
        $stmt->close();
    }
}

// Display reviews function
function displayReviews($item_id) {
    global $conn;
    
    // Get all reviews for the item
    $result = $conn->query("SELECT * FROM reviews WHERE item_id = $item_id ORDER BY review_date DESC");
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . date('j F Y, g:i a', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet. Be the first to review this item!";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Function to handle user reviews
function submitReview() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get review data from POST request
        $review_name = $_POST['review_name'];
        $review_email = $_POST['review_email'];
        $review_rating = $_POST['review_rating'];
        $review_text = $_POST['review_text'];

        // Validate input
        if (empty($review_name) || empty($review_email) || empty($review_rating) || empty($review_text)) {
            return "Please fill in all required fields.";
        }

        // Sanitize inputs to prevent SQL injection or XSS attacks
        $review_name = htmlspecialchars(strip_tags(trim($review_name)));
        $review_email = htmlspecialchars(strip_tags(trim($review_email)));
        $review_rating = intval($review_rating);
        $review_text = htmlspecialchars(trim($review_text));

        // Set up the review array
        $review = [
            'id' => time(), // Use timestamp as unique identifier
            'name' => $review_name,
            'email' => $review_email,
            'rating' => $review_rating,
            'text' => $review_text,
            'date' => date('Y-m-d H:i:s') // Current date and time
        ];

        // Load existing reviews from file or create a new array
        if (file_exists('reviews.txt')) {
            $reviews_data = file_get_contents('reviews.txt');
            $reviews = json_decode($reviews_data, true);
            
            if ($reviews === null) {
                $reviews = [];
            }
        } else {
            // Create the reviews file if it doesn't exist
            fopen('reviews.txt', 'w');
            $reviews = array();
        }

        // Add new review to the array
        $reviews[] = $review;

        // Save updated reviews to the file
        $success = file_put_contents(
            'reviews.txt',
            json_encode($reviews, JSON_PRETTY_PRINT)
        );

        if ($success !== false) {
            // Redirect to thank you page or display success message
            header('Location: thank-you.php');
            exit();
        } else {
            return "Error saving review. Please try again later.";
        }
    }

    // If not POST request, show error
    return "Invalid request method.";
}

// Call the function when form is submitted
if (isset($_POST['submit_review'])) {
    $result = submitReview();
    if ($result !== true) {
        echo '<div class="error">'.$result.'</div>';
    }
}
?>


<?php
header("Refresh: 3; url=index.php");
?>
<!DOCTYPE html>
<html>
<head>
    <title>Thank You for Your Review</title>
</head>
<body>
    <h1>Thank You!</h1>
    <p>Your review has been submitted successfully. We appreciate your feedback!</p>
    <p>You will be redirected back to the main page in 3 seconds...</p>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Replace with your username
$password = '';      // Replace with your password
$dbname = 'reviews_db'; // Replace with your database name

// Create a function to display product reviews
function displayProductReviews($productId) {
    global $host, $username, $password, $dbname;

    // Connect to the database
    $conn = new mysqli($host, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to fetch reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '" . mysqli_real_escape_string($conn, $productId) . "' ORDER BY review_id DESC";
    $result = $conn->query($sql);

    // Check if any reviews exist
    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        // No reviews found
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }

    // Close database connection
    $conn->close();

    // Review submission form
    displayReviewForm();
}

// Function to display the review submission form
function displayReviewForm() {
    if (isset($_POST['submit_review'])) {
        processReviewSubmission();
    }
    
    echo "<div class='review-form'>";
    echo "<h2>Submit Your Review</h2>";
    echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='user_name' required><br>";
    
    echo "<label for='email'>Email:</label>";
    echo "<input type='email' id='email' name='user_email' required><br>";
    
    echo "<label>Rating:</label><br>";
    echo "<select name='rating' required>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value='" . $i . "'>" . str_repeat("★", $i) . "</option>";
    }
    echo "</select><br>";
    
    echo "<label>Comment:</label><br>";
    echo "<textarea name='comment' rows='4' required></textarea><br>";
    
    echo "<input type='hidden' name='product_id' value='" . htmlspecialchars($_GET['id']) . "'>";
    echo "<input type='submit' name='submit_review' value='Submit Review'>";
    echo "</form>";
    echo "</div>";
}

// Function to process review submission
function processReviewSubmission() {
    global $host, $username, $password, $dbname;
    
    // Sanitize inputs
    $productId = mysqli_real_escape_string($conn, $_POST['product_id']);
    $userName = mysqli_real_escape_string($conn, $_POST['user_name']);
    $userEmail = mysqli_real_escape_string($conn, $_POST['user_email']);
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);
    
    // Validate inputs
    if (empty($userName) || empty($userEmail) || $rating < 1 || $rating > 5 || empty($comment)) {
        die("Please fill in all fields correctly.");
    }
    
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $dbname);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Insert into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment)
            VALUES ('$productId', '$userName', '$userEmail', '$rating', '$comment')";
    
    if ($conn->query($sql) === TRUE) {
        echo "<p>Thank you for your review!</p>";
        // Redirect to avoid form resubmission
        header("Refresh: 2; url=".$_SERVER['PHP_SELF']."?".$_SERVER["QUERY_STRING"]);
    } else {
        die("Error submitting review: " . $conn->error);
    }
    
    $conn->close();
}

// Check if product ID is provided and valid
if (isset($_GET['id']) && ctype_digit($_GET['id'])) {
    displayProductReviews($_GET['id']);
} else {
    echo "<p>Please provide a valid product ID.</p>";
}
?>

<style>
.review {
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
}

.review-form {
    background-color: #f5f5f5;
    padding: 20px;
    margin-top: 20px;
}

h3, h2 {
    color: #333;
}
</style>


<?php
// Function to handle user reviews
function userReview($rating, $comment, $email) {
    // Validate input
    if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }
    
    if (!isset($comment) || trim($comment) === '') {
        return "Please enter your review comment.";
    }
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }
    
    // Sanitize input data
    $rating = (int)$rating;
    $comment = htmlspecialchars(trim($comment));
    $email = htmlspecialchars(trim($email));
    
    // Store the review in an array or database
    $review = [
        'rating' => $rating,
        'comment' => $comment,
        'email' => $email,
        'date' => date('Y-m-d H:i:s')
    ];
    
    return $review;
}

// Function to display reviews
function displayReviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<p>Posted by: " . $review['email'] . "</p>";
        echo "<p>Date: " . $review['date'] . "</p>";
        echo "</div><br/>";
    }
}

// Function to calculate average rating
function calculateAverageRating($reviews) {
    if (empty($reviews)) {
        return 0;
    }
    
    $total = array_sum(array_column($reviews, 'rating'));
    $average = $total / count($reviews);
    return round($average, 1); // Round to one decimal place
}

// Example usage:
// Include the form HTML
include('review-form.html');

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        $email = $_POST['email'];
        
        // Handle the review submission
        $reviewResult = userReview($rating, $comment, $email);
        
        if (!is_array($reviewResult)) {
            echo "<div class='error'>" . $reviewResult . "</div>";
        } else {
            // Store the review in a file or database
            $reviews = array();
            
            // Load existing reviews from file
            if (file_exists('reviews.txt')) {
                $reviewsData = file_get_contents('reviews.txt');
                $reviews = json_decode($reviewsData, true);
            }
            
            // Add new review
            $reviews[] = $reviewResult;
            
            // Save to file
            $reviewsJson = json_encode($reviews);
            file_put_contents('reviews.txt', $reviewsJson);
            
            echo "<div class='success'>Thank you for submitting your review!</div>";
        }
    }
}

// Display existing reviews
if (file_exists('reviews.txt')) {
    $reviewsData = file_get_contents('reviews.txt');
    $reviews = json_decode($reviewsData, true);
    
    if ($reviews) {
        echo "<h2>Customer Reviews</h2>";
        displayReviews($reviews);
        
        // Display average rating
        $averageRating = calculateAverageRating($reviews);
        echo "<div class='average-rating'>";
        echo "<p>Average Rating: " . $averageRating . "/5</p>";
        echo "</div>";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get reviews from database if any exist
$reviewsQuery = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $reviewsQuery);

// Check if form was submitted
if (isset($_POST['submit_review'])) {
    // Sanitize and validate input data
    $user_name = htmlspecialchars(trim($_POST['name']));
    $comment = htmlspecialchars(trim($_POST['comment']));
    $rating = intval($_POST['rating']);

    if ($user_name && $comment && $rating >= 1 && $rating <= 5) {
        // Insert new review into database
        $current_date = date('Y-m-d H:i:s');
        $insertQuery = "INSERT INTO reviews (name, comment, rating, review_date) 
                        VALUES ('$user_name', '$comment', '$rating', '$current_date')";
        
        if (!mysqli_query($conn, $insertQuery)) {
            die("Error inserting review: " . mysqli_error($conn));
        }
    } else {
        echo "<p class='error'>Please fill in all fields and select a rating between 1-5 stars.</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
        .stars {
            font-size: 24px;
        }
        .star-checked {
            color: #ffd700;
        }
    </style>
</head>
<body>

<h1>Product Reviews</h1>

<!-- Review Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <div class="review-box">
        <input type="text" name="name" placeholder="Your Name" required><br>
        
        <!-- Star Rating -->
        <div class="stars">
            <input type="radio" name="rating" value="5" id="star5"><label for="star5">★</label>
            <input type="radio" name="rating" value="4" id="star4"><label for="star4">★</label>
            <input type="radio" name="rating" value="3" id="star3"><label for="star3">★</label>
            <input type="radio" name="rating" value="2" id="star2"><label for="star2">★</label>
            <input type="radio" name="rating" value="1" id="star1" checked><label for="star1">★</label>
        </div><br>

        <textarea name="comment" placeholder="Write your review..." rows="4" required></textarea><br>
        
        <button type="submit" name="submit_review">Submit Review</button>
    </div>
</form>

<!-- Display Existing Reviews -->
<?php while ($row = mysqli_fetch_assoc($result)) { ?>
    <div class="review-box">
        <h3><?php echo $row['name']; ?></h3>
        
        <!-- Display Star Rating -->
        <div class="stars <?php if ($row['rating']) {echo 'star-checked';} ?>">
            <?php for ($i = 1; $i <= $row['rating']; $i++) {
                echo "★";
            } ?>
        </div><br>
        
        <p><?php echo $row['comment']; ?></p>
        <small>Posted on: <?php echo date('j F Y, g:i a', strtotime($row['review_date'])); ?></small>
    </div>
<?php } ?>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create tables if they don't exist
$sql = "CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50),
    email VARCHAR(100)
)";

mysqli_query($conn, $sql);

$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    rating INT,
    comment TEXT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('approved', 'pending') DEFAULT 'pending'
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submitReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars!";
    }
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to get reviews for a product
function getReviews($product_id) {
    global $conn;
    
    // Get all approved reviews for the product
    $sql = "SELECT r.id, r.user_id, r.rating, r.comment, r.review_date, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$product_id' AND r.status = 'approved'
            ORDER BY r.review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating_sql = "SELECT AVG(rating) as average 
                              FROM reviews 
                              WHERE product_id = '$product_id' AND status = 'approved'";
                              
        $average_result = mysqli_query($conn, $average_rating_sql);
        $row = mysqli_fetch_assoc($average_result);
        $average_rating = number_format($row['average'], 1);
        
        // Display average rating
        $output = "<h3>Average Rating: " . $average_rating . " stars</h3>";
        
        // Display reviews
        while ($review_row = mysqli_fetch_assoc($result)) {
            $output .= "<div class='review'>";
            $output .= "<p><strong>" . $review_row['username'] . "</strong> - ";
            $output .= str_repeat("★", $review_row['rating']) . " (" . date('F j, Y', strtotime($review_row['review_date'])) . ")<br>";
            $output .= $review_row['comment'];
            $output .= "</p></div>";
        }
        
        return $output;
    } else {
        return "No reviews available for this product.";
    }
}

// Example usage:

// Submit a new review
$user_id = 1; // Replace with actual user ID
$product_id = 1; // Replace with actual product ID
$rating = 5;
$comment = "This is an amazing product!";
echo submitReview($user_id, $product_id, $rating, $comment);

// Get and display reviews for a product
$product_id = 1;
echo getReviews($product_id);

mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Calculate average rating
    $average_rating = 0;
    $total_ratings = 0;
    
    while ($row = mysqli_fetch_assoc($result)) {
        $average_rating += $row['rating'];
        $total_ratings++;
    }
    
    if ($total_ratings > 0) {
        $average_rating /= $total_ratings;
    }

    // Display average rating
    echo "<div class='average-rating'>";
    echo "Average Rating: " . number_format($average_rating, 1) . "/5";
    echo "</div>";

    // Display all reviews
    while ($row = mysqli_fetch_assoc($result)) {
        $user_name = htmlspecialchars($row['user_name']);
        $rating = $row['rating'];
        $comment = htmlspecialchars($row['comment']);
        $review_date = date('F j, Y g:i a', strtotime($row['review_date']));

        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='user-name'>$user_name</span>";
        echo "<span class='rating'>";
        
        for ($i = 1; $i <= $rating; $i++) {
            echo "<span class='star'>★</span>";
        }
        
        for ($i = $rating + 1; $i <= 5; $i++) {
            echo "<span class='star'>☆</span>";
        }
        
        echo "</span>";
        echo "<span class='date'>$review_date</span>";
        echo "</div>";
        echo "<div class='comment'>$comment</div>";
        echo "</div>";
    }
}

// Function to handle review submission
function submit_review($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5.";
    }
    
    // Sanitize input
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, email, rating, comment) 
            VALUES (?, ?, ?, ?, ?)";
    
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "isiii", $product_id, $user_name, $email, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Submit review
    $product_id = 1; // Set your product ID
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = submit_review($product_id, $user_name, $email, $rating, $comment);
    
    if ($result === true) {
        echo "Review submitted successfully!";
    } else {
        echo $result;
    }
}

// Display all reviews for product ID 1
display_reviews(1);

mysqli_close($conn);
?>


<?php
function submit_review($user_id, $product_id, $rating = 5, $comment = "") {
    // Database connection parameters
    $db_host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $db_name = "reviews_db";

    // Create database connection
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

    // Check for connection errors
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating); // Ensure rating is an integer
    if ($rating < 1 || $rating > 5) {
        $rating = 5; // Default to 5 stars if invalid value
    }
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if the user has already reviewed this product
    $check_query = "SELECT review_id FROM reviews WHERE user_id = '$user_id' AND product_id = '$product_id'";
    $result = mysqli_query($conn, $check_query);
    
    if (mysqli_num_rows($result) > 0) {
        // User already has a review - update it
        $update_query = "UPDATE reviews SET rating = $rating, comment = '$comment' WHERE user_id = '$user_id' AND product_id = '$product_id'";
        if (!mysqli_query($conn, $update_query)) {
            echo "Error updating review: " . mysqli_error($conn);
            return false;
        }
    } else {
        // Insert new review
        $insert_query = "INSERT INTO reviews (user_id, product_id, rating, comment) VALUES ('$user_id', '$product_id', $rating, '$comment')";
        if (!mysqli_query($conn, $insert_query)) {
            echo "Error inserting review: " . mysqli_error($conn);
            return false;
        }
    }

    // Close the database connection
    mysqli_close($conn);

    return true;
}

// Example usage:
// submit_review(123, 456, 4, "Great product!");
?>


// Insert a new review
if (submit_review(123, 456, 5, "This is an amazing product!")) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

// Update an existing review
if (submit_review(123, 456, 4, "Updated: This is a good product.")) {
    echo "Review updated successfully!";
} else {
    echo "Error updating review.";
}


<?php
// Sample reviews array (you would typically store this in a database)
$reviews = [
    ['id' => 1, 'name' => 'John Doe', 'email' => 'john@example.com', 'rating' => 5, 'review' => 'Great product!', 'timestamp' => date('Y-m-d H:i:s')],
    // Add more reviews here
];

// Function to submit a new review
function submitReview($name, $email, $rating, $review) {
    global $reviews;
    
    // Validate input
    if (empty($name) || empty($email) || empty($review)) {
        return 'Please fill in all required fields.';
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return 'Please enter a valid email address.';
    }
    
    if ($rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5 stars.';
    }
    
    // Sanitize input
    $name = htmlspecialchars(trim($name));
    $email = htmlspecialchars(trim($email));
    $review = htmlspecialchars(trim($review));
    
    // Generate a unique ID for the review (you might want to use UUID or database auto-increment)
    $newReviewId = count($reviews) + 1;
    
    // Add new review
    $newReview = [
        'id' => $newReviewId,
        'name' => $name,
        'email' => $email,
        'rating' => $rating,
        'review' => $review,
        'timestamp' => date('Y-m-d H:i:s')
    ];
    
    // Add to reviews array
    $reviews[] = $newReview;
    
    // Save reviews to file (alternative to database)
    saveReviewsToFile($reviews);
    
    return true;
}

// Function to display reviews
function displayReviews() {
    global $reviews;
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['name'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Email: " . $review['email'] . "</p>";
        echo "<p>Review: " . $review['review'] . "</p>";
        echo "<small>" . date('j M Y g:i a', strtotime($review['timestamp'])) . "</small>";
        echo "</div>";
    }
}

// Function to save reviews to file (alternative storage method)
function saveReviewsToFile($reviews) {
    $filename = 'reviews.txt';
    $data = serialize($reviews);
    
    if (file_put_contents($filename, $data)) {
        return true;
    } else {
        return false;
    }
}

// Function to load reviews from file
function loadReviewsFromFile() {
    global $reviews;
    $filename = 'reviews.txt';
    
    if (file_exists($filename)) {
        $data = file_get_contents($filename);
        $reviews = unserialize($data);
    } else {
        // Create empty file if it doesn't exist
        fopen($filename, 'w');
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = intval($_POST['rating']);
    $review = $_POST['review'];
    
    // Submit review
    $result = submitReview($name, $email, $rating, $review);
    
    if ($result === true) {
        echo "Thank you for your review!";
        // Redirect to prevent form resubmission
        header("Location: ".$_SERVER['PHP_SELF']);
        exit();
    } else {
        echo $result;
    }
}

// Load reviews from file
loadReviewsFromFile();

// Display reviews
displayReviews();
?>


<?php
// Function to handle review submission
function submit_review($product_id, $user_name, $email, $rating, $review) {
    // Validate input data
    if (empty($user_name) || empty($email) || empty($rating) || empty($review)) {
        return "Please fill in all required fields.";
    }

    if (!ctype_digit((string)$rating) || intval($rating) < 1 || intval($rating) > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Sanitize input data
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $email = htmlspecialchars(trim($email));
    $rating = intval($rating);
    $review = htmlspecialchars(trim($review));

    // Store review in a file or database (this example uses a text file)
    $filename = "reviews_{$product_id}.txt";
    
    // Create review data array
    $review_data = array(
        'user_name' => $user_name,
        'email' => $email,
        'rating' => $rating,
        'review_text' => $review,
        'date_posted' => date('Y-m-d H:i:s')
    );

    // Append review to file
    if ($file_handle = fopen($filename, "a")) {
        fwrite($file_handle, serialize($review_data) . "
");
        fclose($file_handle);
        return "Thank you for submitting your review!";
    } else {
        return "Error saving your review. Please try again later.";
    }
}

// Function to fetch reviews for a product
function fetch_reviews($product_id) {
    $filename = "reviews_{$product_id}.txt";
    
    if (file_exists($filename)) {
        $reviews = array();
        $lines = file($filename);
        
        foreach ($lines as $line) {
            $review_data = unserialize(trim($line));
            if ($review_data !== false && $review_data != 'b:0;') { // Check for valid unserialization
                $reviews[] = (object)$review_data;
            }
        }
        
        return $reviews;
    } else {
        return null;
    }
}

// Example HTML form to submit reviews
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
</head>
<body>
    <h1>Submit Your Review</h1>
    
    <?php
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $result = submit_review(
            $_POST['product_id'],
            $_POST['user_name'],
            $_POST['email'],
            $_POST['rating'],
            $_POST['review']
        );
        
        echo "<p style='color: green;'>$result</p>";
    }
    ?>
    
    <form method="post" action="">
        <input type="hidden" name="product_id" value="1">
        
        <div>
            <label for="user_name">Name:</label><br>
            <input type="text" id="user_name" name="user_name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Choose a rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>

        <div>
            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="5" cols="30" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>

    <h2>Product Reviews</h2>
    <?php
    $reviews = fetch_reviews(1);
    
    if ($reviews) {
        foreach ($reviews as $review) {
            echo "<div style='border: 1px solid #ccc; padding: 10px; margin-bottom: 10px;'>";
            echo "<p><strong>{$review->user_name}</strong> - {$review->rating} Stars</p>";
            echo "<p>{$review->review_text}</p>";
            echo "<small>Posted on: {$review->date_posted}</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
    ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = htmlspecialchars($comment);
    
    try {
        // Check if the user has already reviewed this product
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$userId, $productId]);
        
        if ($stmt->rowCount() > 0) {
            return "You have already reviewed this product!";
        }
        
        // Insert the new review
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date) 
                              VALUES (?, ?, ?, ?, NOW())");
        $stmt->execute([$userId, $productId, $rating, $comment]);
        
        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to get product reviews
function getProductReviews($productId) {
    global $conn;
    
    try {
        // Get all reviews for the product
        $stmt = $conn->prepare("SELECT r.*, u.username 
                              FROM reviews r 
                              JOIN users u ON r.user_id = u.id 
                              WHERE r.product_id = ? 
                              ORDER BY r.review_date DESC");
        $stmt->execute([$productId]);
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        return $reviews;
    } catch(PDOException $e) {
        return "Error fetching reviews: " . $e->getMessage();
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        // Calculate average rating
        $stmt = $conn->prepare("SELECT AVG(rating) as average 
                              FROM reviews 
                              WHERE product_id = ?");
        $stmt->execute([$productId]);
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        return "Error calculating average rating: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userId = 1; // Replace with actual user ID from session
    $productId = 1; // Replace with actual product ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = submitReview($userId, $productId, $rating, $comment);
    echo $result;
}

// Display reviews for a product
$productId = 1; // Replace with actual product ID
$reviews = getProductReviews($productId);

if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Rating: " . $review['rating'] . "/5</h3>";
        echo "<p><strong>" . $review['username'] . "</strong></p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Reviewed on: " . $review['review_date'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
$averageRating = getAverageRating($productId);
echo "<h2>Average Rating: " . $averageRating . "/5</h2>";
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include_once('db.php');

// Sanitize input data
$comment = mysqli_real_escape_string($conn, $_POST['comment']);
$rating = intval($_POST['rating']);

// Validate inputs
if ($comment == "" || $rating < 1 || $rating > 5) {
    // Handle error: invalid inputs
    die("Error: Please fill in all required fields and select a valid rating.");
}

// Get product ID from somewhere (e.g., session or URL parameter)
$product_id = intval($_GET['product_id']);
$user_id = intval($_SESSION['user_id']); // Assuming user is logged in

// Insert into database
$sql = "INSERT INTO reviews (user_id, product_id, comment, rating, review_date) 
        VALUES ('$user_id', '$product_id', '$comment', '$rating', NOW())";

if ($conn->query($sql) === TRUE) {
    // Redirect back to product page or show success message
    header("Location: product.php?product_id=$product_id&review_success=1");
} else {
    // Handle database error
    die("Error: " . $sql . "<br>" . $conn->error);
}

$conn->close();
?>


<?php
include_once('db.php');

// Get product ID from URL parameter
$product_id = intval($_GET['product_id']);

// Calculate average rating and get all reviews for this product
$sql = "SELECT user_id, comment, rating, review_date 
        FROM reviews 
        WHERE product_id = $product_id 
        ORDER BY review_date DESC";

$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Display average rating
    $avg_rating_sql = "SELECT AVG(rating) as avg_rating 
                       FROM reviews 
                       WHERE product_id = $product_id";
    $avg_result = $conn->query($avg_rating_sql);
    $row = $avg_result->fetch_assoc();
    $avg_rating = number_format($row['avg_rating'], 1);

    echo "<h3>Product Reviews ($avg_rating/5)</h3>";
    
    // Display each review
    while($review_row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<p><strong>Rating:</strong> " . str_repeat("★", $review_row['rating']) . "</p>";
        echo "<p><strong>Comment:</strong> " . $review_row['comment'] . "</p>";
        echo "<p><em>Posted on: " . $review_row['review_date'] . "</em></p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews available.</p>";
}

$conn->close();
?>


<?php
// Function to add new review
function add_review($conn, $product_id, $user_name, $comment, $rating) {
    // Insert review into database
    $sql = "INSERT INTO product_reviews (product_id, user_name, comment, rating, post_date)
            VALUES (?, ?, ?, ?, NOW())";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id, $user_name, $comment, $rating]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to get average rating
function get_average_rating($conn, $product_id) {
    $sql = "SELECT AVG(rating) as average FROM product_reviews WHERE product_id = ?";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id]);
        $result = $stmt->fetch();
        
        return round($result['average'], 1);
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return 0;
    }
}

// Function to display reviews
function display_reviews($conn, $product_id) {
    $sql = "SELECT * FROM product_reviews WHERE product_id = ? ORDER BY post_date DESC";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id]);
        $reviews = $stmt->fetchAll();
        
        // Calculate average rating
        $average_rating = get_average_rating($conn, $product_id);
        
        echo '<div class="review-container">';
        echo "<h3>Average Rating: $average_rating/5</h3>";
        
        if (count($reviews) > 0) {
            foreach ($reviews as $review) {
                $user_name = $review['user_name'];
                $comment = $review['comment'];
                $rating = $review['rating'];
                $post_date = date('d/m/Y', strtotime($review['post_date']));
                
                // Display star rating
                echo '<div class="review">';
                echo "<h4>$user_name</h4>";
                echo "<p>Rating: ";
                for ($i = 1; $i <= 5; $i++) {
                    if ($i <= $rating) {
                        echo "★";
                    } else {
                        echo "☆";
                    }
                }
                echo "</p>";
                echo "<p>$comment</p>";
                echo "<small>Posted on: $post_date</small>";
                echo '</div>';
            }
        } else {
            echo '<p>No reviews yet. Be the first to review this product!</p>';
        }
        
        echo '</div>';
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
// Connect to database
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database", "username", "password");
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Display reviews for product ID 1
display_reviews($conn, 1);

// Add a new review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = 1;
    $user_name = $_POST['username'];
    $comment = $_POST['comment'];
    $rating = $_POST['rating'];
    
    add_review($conn, $product_id, $user_name, comment, rating);
}

// Close connection
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection Failed: ' . $e->getMessage());
}

// Function to add a new review
function addReview($user_id, $product_id, $rating, $review_text, $connection) {
    try {
        // Prepare the SQL statement
        $stmt = $connection->prepare("INSERT INTO reviews (user_id, product_id, rating, review_text) VALUES (:user_id, :product_id, :rating, :review_text)");
        
        // Bind parameters
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':review_text', $review_text);
        
        // Execute the statement
        $stmt->execute();
    } catch(PDOException $e) {
        die('Error adding review: ' . $e->getMessage());
    }
}

// Function to get all reviews for a product
function getReviews($product_id, $connection) {
    try {
        $stmt = $connection->prepare("SELECT * FROM reviews WHERE product_id = :product_id");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die('Error fetching reviews: ' . $e->getMessage());
    }
}

// Function to calculate average rating
function getAverageRating($product_id, $connection) {
    try {
        $stmt = $connection->prepare("SELECT AVG(rating) AS average FROM reviews WHERE product_id = :product_id");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        die('Error calculating average rating: ' . $e->getMessage());
    }
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        $user_id = $_POST['user_id'];
        $product_id = $_POST['product_id'];
        $rating = $_POST['rating'];
        $review_text = $_POST['review_text'];

        // Sanitize input
        $rating = intval($rating);
        $review_text = htmlspecialchars(trim($review_text));

        if ($rating < 1 || $rating > 5) {
            echo "Invalid rating. Please select a rating between 1 and 5.";
        } else if (empty($review_text)) {
            echo "Please enter your review.";
        } else {
            addReview($user_id, $product_id, $rating, $review_text, $conn);
            header("Location: $_SERVER[PHP_SELF]");
            exit();
        }
    }
}

// Get reviews for product ID 1 (example)
$reviews = getReviews(1, $conn);
$average_rating = getAverageRating(1, $conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .star-rating {
            display: inline-block;
            width: 200px;
            height: 40px;
            background: url('stars.png') repeat-x;
            margin-bottom: -3px;
        }
        .rating {
            display: inline-block;
            width: 100%;
            height: 40px;
            text-indent: -9999px;
            background-image: none;
        }
    </style>
</head>
<body>

<h2>Product Reviews</h2>
<p>Average Rating: <?php echo $average_rating ?> stars</p>

<!-- Review Form -->
<form method="post" action="">
    <input type="hidden" name="user_id" value="1">
    <input type="hidden" name="product_id" value="1">
    
    <div class="rating-container">
        <h3>Rate this product:</h3>
        <div class="star-rating">
            <span class="rating" style="width: <?php echo ($average_rating * 20) ?>%"></span>
        </div>
        
        <!-- Rating Input -->
        <input type="radio" name="rating" value="5"> 5 stars<br>
        <input type="radio" name="rating" value="4"> 4 stars<br>
        <input type="radio" name="rating" value="3"> 3 stars<br>
        <input type="radio" name="rating" value="2"> 2 stars<br>
        <input type="radio" name="rating" value="1"> 1 star<br>
    </div>

    <textarea name="review_text" placeholder="Write your review..." rows="4"></textarea><br>
    
    <button type="submit" name="submit_review">Submit Review</button>
</form>

<!-- Display Reviews -->
<?php foreach ($reviews as $review): ?>
<div class="review">
    <h3>Rating: <?php echo $review['rating'] ?> stars</h3>
    <p><?php echo htmlspecialchars($review['review_text']) ?></p>
</div>
<?php endforeach; ?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'username';
$password = 'password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to add a review
    function addReview($name, $review, $conn) {
        // Sanitize input
        $name = htmlspecialchars(strip_tags(trim($name)));
        $review = htmlspecialchars(strip_tags(trim($review)));

        if (empty($name) || empty($review)) {
            return "Please fill in all fields.";
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, review, timestamp) VALUES (:name, :review, NOW())";
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':review', $review);

        if ($stmt->execute()) {
            return "Review added successfully!";
        } else {
            return "Error adding review. Please try again.";
        }
    }

    // Function to display reviews
    function displayReviews($conn) {
        $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
        $stmt = $conn->prepare($sql);
        $stmt->execute();

        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($reviews)) {
            echo "<p>No reviews yet.</p>";
            return;
        }

        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
            echo "<p>" . htmlspecialchars($review['review']) . "</p>";
            echo "<small>Posted on: " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Function to submit user reviews
function submit_review($rating, $comments) {
    // Validate input
    if (!is_int($rating)) {
        throw new InvalidArgumentException('Rating must be an integer.');
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new InvalidArgumentException('Rating must be between 1 and 5.');
    }

    if (isset($comments) && !is_string($comments)) {
        throw new InvalidArgumentException('Comments must be a string.');
    }

    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    try {
        // Connect to database
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            throw new Exception('Database connection failed: ' . $conn->connect_error);
        }

        // Check if the review exists for this user and item
        $checkQuery = "SELECT * FROM reviews WHERE user_id = ? AND item_id = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $_SESSION['user_id'], $_GET['item_id']);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Update existing review
            $updateQuery = "UPDATE reviews SET rating = ?, comments = ? WHERE user_id = ? AND item_id = ?";
            $stmt = $conn->prepare($updateQuery);
            $stmt->bind_param("isss", $rating, $comments, $_SESSION['user_id'], $_GET['item_id']);
        } else {
            // Insert new review
            $insertQuery = "INSERT INTO reviews (user_id, item_id, rating, comments) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("ssis", $_SESSION['user_id'], $_GET['item_id'], $rating, $comments);
        }

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            throw new Exception('Error submitting review: ' . $stmt->error);
        }
    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
try {
    // Make sure to set user_id in session and item_id from GET request or another source
    $_SESSION['user_id'] = '1';
    $_GET['item_id'] = '1';

    $rating = 5;
    $comments = "This product is amazing!";

    echo submit_review($rating, $comments);
} catch (Exception $e) {
    die('Error: ' . $e->getMessage());
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $review_title, $review_comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'username';
    $password = 'password';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check for connection errors
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Validate input values
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please enter a value between 1 and 5.";
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $review_title = mysqli_real_escape_string($conn, $review_title);
    $review_comment = mysqli_real_escape_string($conn, $review_comment);

    // Prepare SQL statement
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_title, review_comment) 
            VALUES (?, ?, ?, ?, ?)";

    // Prepare and execute the query using prepared statements
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sssss", $user_id, $product_id, $rating, $review_title, $review_comment);

    if (mysqli_stmt_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$review_title = "Great Product!";
$review_comment = "This is a fantastic product, very satisfied with my purchase.";

$result = submit_review($user_id, $product_id, $rating, $review_title, $review_comment);
echo $result;

?>


<?php
function submitUserReview($userId, $comment, $rating) {
    // Validate input
    if (!isset($userId) || !isset($comment) || !isset($rating)) {
        return "Error: All fields are required.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }

    // Database configuration
    include 'config.php'; // Include your database configuration file

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        return "Error: Could not connect to the database.";
    }

    // Sanitize inputs
    $userId = $conn->real_escape_string($userId);
    $comment = $conn->real_escape_string($comment);
    $rating = (int)$rating;

    // Get current date and time
    $submissionDate = date('Y-m-d H:i:s');

    // Insert review into the database
    $sql = "INSERT INTO reviews (user_id, comment, rating, submission_date)
            VALUES ('$userId', '$comment', '$rating', '$submissionDate')";

    if ($conn->query($sql) === TRUE) {
        return true; // Review submitted successfully
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close database connection
    $conn->close();
}
?>


<?php
$db_host = 'localhost';
$db_user = 'your_username';
$db_pass = 'your_password';
$db_name = 'your_database';
?>


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userId = $_POST['user_id'];
    $comment = $_POST['comment'];
    $rating = $_POST['rating'];

    $result = submitUserReview($userId, $comment, $rating);

    if ($result === true) {
        echo "Thank you for submitting your review!";
    } else {
        echo $result;
    }
}


<?php
// Configuration
$reviewsFile = 'reviews.json'; // File to store reviews
$maxReviews = 50; // Maximum number of reviews to display

// Get existing reviews from file
function getReviews() {
    global $reviewsFile;
    
    if (file_exists($reviewsFile)) {
        $content = file_get_contents($reviewsFile);
        return json_decode($content, true) ?: [];
    }
    return [];
}

// Save review to file
function saveReview($reviewData) {
    global $reviewsFile;
    
    $existingReviews = getReviews();
    array_unshift($existingReviews, $reviewData); // Add new review to the top
    
    if (count($existingReviews) > $maxReviews) {
        array_pop($existingReviews); // Remove oldest review
    }
    
    file_put_contents($reviewsFile, json_encode($existingReviews));
}

// Display reviews
function displayReviews() {
    global $reviewsFile;
    
    echo '<div class="reviews-container">';
    
    if (file_exists($reviewsFile)) {
        $content = file_get_contents($reviewsFile);
        $reviews = json_decode($content, true) ?: [];
        
        foreach ($reviews as $review) {
            echo '<div class="review-box">';
            echo '<h3>' . htmlspecialchars($review['name'], ENT_QUOTES) . '</h3>';
            echo '<div class="rating">';
            
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $review['rating']) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            
            echo '</div>';
            echo '<p>' . htmlspecialchars($review['comment'], ENT_QUOTES) . '</p>';
            echo '<small>Posted on: ' . date('j F Y, g:i a', $review['timestamp']) . '</small>';
            
            // Delete button for admin
            if (isset($_COOKIE['isAdmin'])) {
                echo '<form action="#" method="post" style="display:inline">';
                echo '<input type="hidden" name="delete_review" value="' . $review['id'] . '">';
                echo '<button type="submit">Delete</button>';
                echo '</form>';
            }
            
            echo '</div>';
        }
    } else {
        echo '<p>No reviews yet. Be the first to review!</p>';
    }
    
    echo '</div>';
}

// Main function
function userReview() {
    // Check if we need to handle form submission or display form/reviews
    if (isset($_POST['submit_review'])) {
        // Validate and process form data
        $name = trim($_POST['review_name']);
        $email = trim($_POST['review_email']);
        $comment = trim($_POST['review_comment']);
        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
        
        if (empty($name) || empty($email) || empty($comment)) {
            die('Please fill in all required fields.');
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die('Please enter a valid email address.');
        }
        
        if ($rating < 1 || $rating > 5) {
            die('Rating must be between 1 and 5 stars.');
        }
        
        // Prepare review data
        $reviewData = [
            'id' => uniqid(),
            'name' => $name,
            'email' => $email,
            'comment' => $comment,
            'rating' => $rating,
            'timestamp' => time()
        ];
        
        saveReview($reviewData);
        
        // Redirect back to reviews page
        header('Location: ' . $_SERVER['PHP_SELF']);
        exit();
    } else {
        // Display existing reviews and review form
        echo '<h2>Product Reviews</h2>';
        
        displayReviews();
        
        // Review form
        echo '<div class="review-form">';
        echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post" id="reviewForm">';
        echo '<input type="hidden" name="submitted" value="1">';
        
        echo '<p>';
        echo '<label for="review_name">Name:</label>';
        echo '<input type="text" id="review_name" name="review_name" required>';
        echo '</p>';
        
        echo '<p>';
        echo '<label for="review_email">Email:</label>';
        echo '<input type="email" id="review_email" name="review_email" required>';
        echo '</p>';
        
        echo '<p>';
        echo '<label>Rating:</label><br>';
        echo '<input type="radio" name="rating" value="5" id="rate5">';
        echo '<label for="rate5">★</label>';
        echo '<input type="radio" name="rating" value="4" id="rate4">';
        echo '<label for="rate4">☆</label>';
        echo '<input type="radio" name="rating" value="3" id="rate3">';
        echo '<label for="rate3">★</label>';
        echo '<input type="radio" name="rating" value="2" id="rate2">';
        echo '<label for="rate2">☆</label>';
        echo '<input type="radio" name="rating" value="1" id="rate1">';
        echo '<label for="rate1">★</label>';
        echo '</p>';
        
        echo '<p>';
        echo '<label for="review_comment">Review:</label>';
        echo '<textarea id="review_comment" name="review_comment" rows="4" required></textarea>';
        echo '</p>';
        
        echo '<input type="submit" name="submit_review" value="Submit Review">';
        echo '</form>';
        echo '</div>';
    }
}

// Call the main function
userReview();

// CSS Styling (Add to your HTML head)
echo <<<CSS
<style>
.review-box {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 20px;
}

.rating {
    display: inline-block;
    margin: 10px 0;
}

.star {
    font-size: 24px;
    margin-right: 2px;
}

.review-form {
    background-color: #f5f5f5;
    padding: 20px;
    border-radius: 5px;
}
</style>
CSS;

// Add this to your HTML body
echo '<div id="review-section">';
userReview();
echo '</div>';
?>


<?php
// Function to submit a new review
function submit_review($name, $review_text, $rating) {
    // Sanitize input to prevent XSS attacks
    $name = htmlspecialchars($name);
    $review_text = htmlspecialchars($review_text);

    // Create an array for the new review
    $new_review = [
        'id' => uniqid(),
        'name' => $name,
        'text' => $review_text,
        'rating' => $rating,
        'timestamp' => date('Y-m-d H:i:s')
    ];

    // Read existing reviews from file
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);
    } else {
        $reviews = [];
    }

    // Add new review to the array
    array_unshift($reviews, $new_review);

    // Write reviews back to file
    $success = file_put_contents('reviews.json', json_encode($reviews, JSON_PRETTY_PRINT));

    if ($success === false) {
        die("Error saving review to file.");
    }

    return true;
}

// Function to display all reviews
function display_reviews() {
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);

        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>{$review['name']}</h3>";
            echo "<p>Rating: {$review['rating']} stars</p>";
            echo "<p>{$review['text']}</p>";
            echo "<small>Posted on {$review['timestamp']}</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Function to delete a review by ID
function delete_review($id) {
    if (file_exists('reviews.json')) {
        $json_data = file_get_contents('reviews.json');
        $reviews = json_decode($json_data, true);

        // Search for the review with matching ID and remove it
        foreach ($reviews as $key => $review) {
            if ($review['id'] == $id) {
                unset($reviews[$key]);
            }
        }

        // Re-index array keys
        $reviews = array_values($reviews);

        // Write updated reviews back to file
        $success = file_put_contents('reviews.json', json_encode($reviews, JSON_PRETTY_PRINT));

        if ($success === false) {
            die("Error updating review list.");
        }
    } else {
        return "No reviews available.";
    }

    return true;
}
?>


<?php
require_once 'review_functions.php';

if (isset($_GET['id'])) {
    if (delete_review($_GET['id'])) {
        header("Location: reviews.php");
    } else {
        die("Error deleting review.");
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display the review form
function displayReviewForm() {
    ?>
    <form action="<?php $_SERVER['PHP_SELF'] ?>" method="POST">
        <h3>Submit a Review</h3>
        <input type="text" name="title" placeholder="Review Title" required><br>
        <textarea name="review" placeholder="Write your review here..." rows="5" cols="40" required></textarea><br>
        Rating: 
        <select name="rating" required>
            <option value="">Select a rating</option>
            <option value="1">1 star</option>
            <option value="2">2 stars</option>
            <option value="3">3 stars</option>
            <option value="4">4 stars</option>
            <option value="5">5 stars</option>
        </select><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>
    <?php
}

// Function to handle review submission
function submitReview($conn) {
    if (isset($_POST['submit_review'])) {
        $title = htmlspecialchars(trim($_POST['title']));
        $review = htmlspecialchars(trim($_POST['review']));
        $rating = intval($_POST['rating']);

        // Validate input
        if ($title == "" || $review == "" || $rating == 0) {
            echo "Please fill in all fields!";
            return;
        }

        try {
            // Insert review into database
            $stmt = $conn->prepare("INSERT INTO reviews (title, review_text, rating, author, review_date) 
                                  VALUES (:title, :review, :rating, :author, NOW())");
            
            // Bind parameters
            $stmt->bindParam(':title', $title);
            $stmt->bindParam(':review', $review);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':author', $_SERVER['REMOTE_ADDR']); // Using IP address as author identifier

            $stmt->execute();
            echo "Review submitted successfully!";
        } catch(PDOException $e) {
            echo "Error submitting review: " . $e->getMessage();
        }
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        // Get all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (count($reviews) > 0) {
            echo "<h3>Customer Reviews</h3>";
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h4>" . htmlspecialchars($review['title']) . "</h4>";
                echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
                echo "<div class='rating'>Rating: " . $review['rating'] . " stars</div>";
                echo "<div class='author'>By Anonymous on " . date('F j, Y', strtotime($review['review_date'])) . "</div>";
                echo "</div><br>";
            }
        } else {
            echo "No reviews available. Be the first to review!";
        }
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Function to calculate average rating
function getAverageRating($conn) {
    try {
        $stmt = $conn->query("SELECT AVG(rating) as average FROM reviews");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['average'] != null) {
            echo "Average Rating: " . number_format($result['average'], 1, '.', '') . "/5";
        } else {
            echo "No ratings available.";
        }
    } catch(PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
    }
}
?>


<?php require_once('review-functions.php'); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php displayReviewForm(); ?>
    
    <?php submitReview($conn); ?>

    <h2>Current Average Rating:</h2>
    <?php getAverageRating($conn); ?>

    <h2>All Reviews:</h2>
    <?php displayReviews($conn); ?>
</body>
</html>


<?php
// Turn off error reporting for production code
error_reporting(0);

// Function to save reviews
function saveReview($name, $email, $rating, $comment) {
    // Validate input
    if (empty($name) || empty($email) || empty($comment)) {
        return "Please fill in all required fields";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Set default values for ratings
    $rating = isset($rating) ? intval($rating) : 0;

    // Review data array
    $reviewData = [
        'name' => htmlspecialchars($name),
        'email' => htmlspecialchars($email),
        'rating' => $rating,
        'comment' => htmlspecialchars($comment),
        'date' => date('Y-m-d H:i:s')
    ];

    // Load existing reviews from file
    if (file_exists('reviews.txt')) {
        $reviews = unserialize(file_get_contents('reviews.txt'));
    } else {
        $reviews = array();
    }

    // Add new review
    array_unshift($reviews, $reviewData);

    // Save reviews back to file
    $result = file_put_contents('reviews.txt', serialize($reviews));

    if ($result === false) {
        return "Error saving review";
    } else {
        return true;
    }
}

// Function to get reviews
function getReviews() {
    if (file_exists('reviews.txt')) {
        $reviews = unserialize(file_get_contents('reviews.txt'));
        if ($reviews !== false && is_array($reviews)) {
            return $reviews;
        }
    }

    // Return empty array if no reviews found
    return array();
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = saveReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    if ($result === true) {
        // Review saved successfully, you can redirect or show success message here
        echo "<script>alert('Thank you for your review!');</script>";
    } else {
        // Show error message
        echo "<div class='error'>$result</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }

        .star {
            font-size: 24px;
        }

        input[type="radio"] {
            display: none;
        }

        label.star:before {
            content: "★";
            color: #ccc;
        }

        label.star:checked ~ label.star:before,
        label.star:hover ~ label.star:before {
            color: #ff0;
        }

        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<?php
$reviews = getReviews();
if (!empty($reviews)) {
    echo "<h2>Previous Reviews:</h2>";
    foreach ($reviews as $review) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;'>";
        echo "<strong>" . htmlspecialchars_decode($review['name']) . "</strong><br />";
        echo "Email: " . htmlspecialchars_decode($review['email']) . "<br />";
        echo "Rating: " . str_repeat("★", $review['rating']) . "<br />";
        echo "Comment: " . htmlspecialchars_decode($review['comment']) . "<br />";
        echo "Posted on: " . $review['date'] . "<br />";
        echo "</div>";
    }
}
?>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="">
        <div class="error"><?php if (isset($result)) { echo $result; } ?></div>

        <input type="text" name="name" placeholder="Your Name" required><br /><br />

        <input type="email" name="email" placeholder="Your Email" required><br /><br />

        <div class="rating-stars">
            <span class="star">
                <input type="radio" id="5" name="rating" value="5">
                <label for="5"></label>
            </span>
            <span class="star">
                <input type="radio" id="4" name="rating" value="4">
                <label for="4"></label>
            </span>
            <span class="star">
                <input type="radio" id="3" name="rating" value="3">
                <label for="3"></label>
            </span>
            <span class="star">
                <input type="radio" id="2" name="rating" value="2">
                <label for="2"></label>
            </span>
            <span class="star">
                <input type="radio" id="1" name="rating" value="1">
                <label for="1"></label>
            </span>
        </div>

        <textarea name="comment" placeholder="Your Review" required></textarea><br /><br />

        <button type="submit">Submit Review</button>
    </form>
</div>

</body>
</html>


<?php
function submit_review() {
    // Database connection details
    $host = "localhost";
    $username = "root"; // Replace with your database username
    $password = "";     // Replace with your database password
    $database_name = "reviews_db"; // Replace with your database name

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database_name);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get form data
    $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
    $rating = mysqli_real_escape_string($conn, $_POST['rating']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

    // SQL query to insert review into the database
    $sql = "INSERT INTO reviews (user_name, rating, review_text)
            VALUES ('$user_name', '$rating', '$review_text')";

    if ($conn->query($sql) === TRUE) {
        echo "Review submitted successfully!";
        header("Location: reviews.php?refresh=1");
        exit();
    } else {
        echo "Error submitting review: " . $conn->error;
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function user_review($action, $product_id = 0, $user_id = 0, $rating = 0, $comment = '') {
    global $conn;

    try {
        switch ($action) {
            // Submit a new review
            case 'submit':
                if (empty($product_id) || empty($user_id) || empty($rating)) {
                    throw new Exception("Missing required parameters");
                }

                // Validate rating between 1 and 5 stars
                if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
                    throw new Exception("Rating must be between 1 and 5");
                }

                // Sanitize input
                $product_id = (int)$conn->real_escape_string($product_id);
                $user_id = (int)$conn->real_escape_string($user_id);
                $rating = (int)$conn->real_escape_string($rating);
                $comment = $conn->real_escape_string($comment);

                // Insert review into database
                $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at) 
                        VALUES ($product_id, $user_id, $rating, '$comment', NOW())";
                
                if (!$conn->query($sql)) {
                    throw new Exception("Error submitting review: " . $conn->error);
                }

                return "Review submitted successfully!";
                break;

            // Get all reviews for a product
            case 'get_reviews':
                if (empty($product_id)) {
                    throw new Exception("Product ID is required");
                }

                $sql = "SELECT * FROM reviews 
                        WHERE product_id = $product_id 
                        ORDER BY created_at DESC";
                
                $result = $conn->query($sql);

                if (!$result) {
                    throw new Exception("Error fetching reviews: " . $conn->error);
                }

                // Return reviews as an array
                $reviews = array();
                while ($row = $result->fetch_assoc()) {
                    $reviews[] = $row;
                }

                return $reviews;
                break;

            // Get average rating for a product
            case 'get_average_rating':
                if (empty($product_id)) {
                    throw new Exception("Product ID is required");
                }

                $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = $product_id";
                
                $result = $conn->query($sql);

                if (!$result) {
                    throw new Exception("Error calculating average rating: " . $conn->error);
                }

                $row = $result->fetch_assoc();
                return round($row['average'], 1); // Round to one decimal place
                break;

            // Submit a vote for a review
            case 'vote':
                if (empty($review_id) || empty($user_id) || empty($vote)) {
                    throw new Exception("Missing required parameters");
                }

                $vote = intval($vote);

                // Check if user has already voted on this review
                $sql = "SELECT * FROM votes WHERE review_id = $review_id AND user_id = $user_id";
                
                $result = $conn->query($sql);
                
                if ($result->num_rows > 0) {
                    throw new Exception("You have already voted for this review");
                }

                // Insert vote into database
                $sql = "INSERT INTO votes (review_id, user_id, vote) 
                        VALUES ($review_id, $user_id, $vote)";
                
                if (!$conn->query($sql)) {
                    throw new Exception("Error submitting vote: " . $conn->error);
                }

                // Update review vote count
                $vote_change = ($vote == 1) ? 'votes_up' : 'votes_down';
                $sql = "UPDATE reviews SET $vote_change = $vote_change + 1 WHERE id = $review_id";
                
                if (!$conn->query($sql)) {
                    throw new Exception("Error updating vote count: " . $conn->error);
                }

                return "Vote submitted successfully!";
                break;

            default:
                throw new Exception("Invalid action");
        }
    } catch (Exception $e) {
        return array('error' => $e->getMessage());
    }
}

// Example usage:

// Submit a review
$submit_review = user_review(
    'submit',
    product_id: 1,
    user_id: 1,
    rating: 4,
    comment: "Great product, highly recommend!"
);

// Get all reviews for product ID 1
$get_reviews = user_review('get_reviews', product_id: 1);

// Get average rating for product ID 1
$average_rating = user_review('get_average_rating', product_id: 1);

// Submit a vote (1 = upvote, -1 = downvote)
submit_vote = user_review(
    'vote',
    review_id: 1,
    user_id: 1,
    vote: 1
);

?>


<?php
function add_review($product_id, $user_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $db_name = 'your_database_name';
    $username = 'root';
    $password = 'password';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        
        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("iiis", $product_id, $user_id, $rating, $comment);

        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $stmt->error);
        }

        // Update product average rating
        $sql_avg = "UPDATE products SET 
                        total_ratings = (total_ratings + ?),
                        average_rating = (average_rating * total_reviews + ?) / (total_reviews + 1),
                        total_reviews = total_reviews + 1
                    WHERE id = ?";
        
        $stmt_avg = $conn->prepare($sql_avg);
        if (!$stmt_avg) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters for average update
        $stmt_avg->bind_param("iii", $rating, $rating, $product_id);

        if (!$stmt_avg->execute()) {
            throw new Exception("Execute failed: " . $stmt_avg->error);
        }

        // Close statements and connection
        $stmt->close();
        $stmt_avg->close();
        $conn->close();

        return true;

    } catch (Exception $e) {
        // Handle errors
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}
?>


// Example usage
$product_id = 123;
$user_id = 456;
$rating = 5;
$comment = "Great product!";

if (add_review($product_id, $user_id, $rating, $comment)) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}


<?php
// Function to add a new review
function add_review($user_id, $rating, $comment) {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, rating, comment) VALUES ('$user_id', '$rating', '$comment')";
    if (mysqli_query($conn, $sql)) {
        echo "Review added successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Function to display reviews
function display_reviews() {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Function to calculate average rating
function get_average_rating() {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    echo "Average Rating: " . number_format($row['average'], 1) . "/5";
    
    // Close database connection
    mysqli_close($conn);
}

// Function to delete a review (optional)
function delete_review($review_id) {
    // Connect to database (replace with your actual database connection)
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Sanitize input
    $review_id = intval($review_id);
    
    // Delete review from database
    $sql = "DELETE FROM reviews WHERE id='$review_id'";
    if (mysqli_query($conn, $sql)) {
        echo "Review deleted successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    add_review($_POST['user_id'], $_POST['rating'], $_POST['comment']);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        .star-rating {
            font-size: 24px;
        }
        .star {
            color: gold;
        }
        .empty-star {
            color: #ccc;
        }
    </style>
</head>
<body>

<!-- Review Form -->
<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    <input type="text" name="user_id" placeholder="Enter your user ID" required><br>
    <select name="rating" required>
        <option value="">Choose a rating</option>
        <option value="1">1 Star</option>
        <option value="2">2 Stars</option>
        <option value="3">3 Stars</option>
        <option value="4">4 Stars</option>
        <option value="5">5 Stars</option>
    </select><br>
    <textarea name="comment" placeholder="Write your review here..." required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<!-- Display Reviews -->
<h2>Reviews:</h2>
<?php 
display_reviews();
echo "<br>";
get_average_rating();
?>

</body>
</html>



<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $review_text, $rating) {
    global $conn;
    
    // Validate input
    if (empty($review_text) || $rating < 1 || $rating > 5) {
        return false;
    }
    
    // Sanitize input
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating, review_date) 
            VALUES ('$user_id', '$product_id', '$review_text', '$rating', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $reviews = array();
    
    // Get all reviews for the product
    $sql = "SELECT r.review_id, u.username, r.review_text, r.rating, r.review_date 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = '$product_id' 
            ORDER BY r.review_date DESC";
    
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = array(
                'review_id' => $row['review_id'],
                'username' => $row['username'],
                'review_text' => htmlspecialchars_decode($row['review_text']),
                'rating' => $row['rating'],
                'review_date' => date('F j, Y', strtotime($row['review_date']))
            );
        }
    }
    
    return $reviews;
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    // Get total ratings and count of reviews
    $sql = "SELECT AVG(rating) as average, COUNT(review_id) as review_count 
            FROM reviews 
            WHERE product_id = '$product_id'";
    
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['review_count'] > 0) {
        return number_format($row['average'], 1, '.', '');
    } else {
        return 'No ratings yet';
    }
}

// Example usage:

// Add a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_id = $_GET['product_id'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (add_review($user_id, $product_id, $review_text, $rating)) {
        echo 'Review submitted successfully!';
    } else {
        echo 'Error submitting review. Please try again.';
    }
}

// Display reviews
$product_id = 1; // Example product ID
$reviews = get_reviews($product_id);

echo '<h3>Product Reviews</h3>';
if (!empty($reviews)) {
    foreach ($reviews as $review) {
        echo '<div class="review">';
        echo '<p><strong>' . $review['username'] . '</strong> - ' . $review['rating'] . '/5 stars</p>';
        echo '<p>' . $review['review_text'] . '</p>';
        echo '<p class="review-date">' . $review['review_date'] . '</p>';
        echo '</div>';
    }
} else {
    echo 'No reviews yet.';
}

// Display average rating
$average_rating = get_average_rating($product_id);
echo '<h4>Average Rating: ' . $average_rating . '/5 stars</h4>';

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to add or display user reviews
function userReview($name, $email = "", $rating = 5) {
    // Validate inputs
    if (empty($name)) {
        return "Error: Name is required.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Error: Invalid email format.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }
    
    // Sanitize inputs
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $rating = intval($rating);
    
    // Get reviews from file or initialize as empty array
    $reviewsFile = 'reviews.txt';
    if (file_exists($reviewsFile)) {
        $reviews = file_get_contents($reviewsFile);
    } else {
        $reviews = "";
    }
    
    // Prepare new review entry with timestamp
    $timestamp = date('Y-m-d H:i:s');
    $newReview = "$name|$email|$rating|$timestamp
";
    
    // Write to file
    if (!file_put_contents($reviewsFile, $newReview, FILE_APPEND)) {
        return "Error: Could not write review to file.";
    }
    
    // Return success message
    return "Thank you for your review!";
}

// Example usage:
$name = $_POST['name'] ?? '';
$email = $_POST['email'] ?? '';
$rating = $_POST['rating'] ?? 5;

$result = userReview($name, $email, $rating);
echo $result;
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $rating = intval($_POST['rating']);
    $review = htmlspecialchars($_POST['review']);

    // Validate required fields
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        header("Location: review_form.php?error=true");
        exit();
    }

    // SQL query to insert review
    $sql = "INSERT INTO reviews (name, email, rating, review)
            VALUES ('$name', '$email', $rating, '$review')";

    if (mysqli_query($conn, $sql)) {
        header("Location: thank_you.php");
        exit();
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

mysqli_close($conn);
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . nl2br(htmlspecialchars($row['review'])) . "</p>";
        echo "<small>Posted on: " . $row['timestamp'] . "</small>";
        echo "</div><hr>";
    }
} else {
    echo "No reviews yet!";
}

mysqli_close($conn);
?>


<?php
// Function to fetch and display user reviews for a specific product
function displayUserReviews($product_id) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // SQL query to fetch reviews for a specific product
    $sql = "SELECT user_id, rating, comment, timestamp FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating = mysqli_fetch_assoc(mysqli_query($conn, "SELECT AVG(rating) as avg FROM reviews WHERE product_id = '$product_id'"));
        
        echo "<div class='reviews'>";
        echo "<h3>Product Reviews</h3>";
        echo "<p>Average Rating: " . number_format($average_rating['avg'], 1) . " stars</p>";
        
        // Display each review
        while ($row = mysqli_fetch_assoc($result)) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $timestamp = $row['timestamp'];
            
            echo "<div class='review'>";
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            echo "<p>" . htmlspecialchars($comment) . "</p>";
            echo "<small>Posted on: " . date('M j, Y', strtotime($timestamp)) . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews found for this product.</p>";
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
displayUserReviews(1);

?>


<?php
// Array to store reviews (you might want to use a database in a real application)
$reviews = array();

/**
 * Function to add a new review
 * @param string $username The username leaving the review
 * @param int $rating The rating (1-5 stars)
 * @param string $comment The review comment
 */
function add_review(&$reviews, $username, $rating, $comment) {
    // Generate a unique ID for the review
    $review_id = uniqid();
    
    // Create an array with review details
    $new_review = array(
        'id' => $review_id,
        'username' => $username,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    );
    
    // Add the new review to the beginning of the reviews array
    array_unshift($reviews, $new_review);
}

/**
 * Function to display all reviews
 */
function display_reviews($reviews) {
    if (empty($reviews)) {
        echo "No reviews yet!";
        return;
    }
    
    foreach ($reviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<h3>Reviewer: " . htmlspecialchars($review['username']) . "</h3>";
        echo "<p>Posted on: " . date('jS M Y', strtotime($review['timestamp'])) . "</p>";
        echo "<div class='stars'>";
        
        // Display stars
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        for ($i = 1; $i <= (5 - $review['rating']); $i++) {
            echo "<span class='star'>☆</span>";
        }
        
        echo "</div>";
        echo "<p>Comment: " . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

/**
 * Function to calculate average rating
 */
function calculate_average_rating($reviews) {
    if (empty($reviews)) {
        return 0;
    }
    
    $total_ratings = 0;
    foreach ($reviews as $review) {
        $total_ratings += $review['rating'];
    }
    
    $average = $total_ratings / count($reviews);
    return round($average, 1); // Rounded to one decimal place
}

// Example usage:

// Add some sample reviews
add_review($reviews, "JohnDoe", 5, "Excellent product! Highly recommended.");
add_review($reviews, "JaneSmith", 4, "Good quality, but could be better.");
add_review($reviews, "MikeJohnson", 3, "Decent product, meets expectations.");

// Display average rating
echo "<h2>Average Rating: " . calculate_average_rating($reviews) . "/5</h2>";

// Display all reviews
display_reviews($reviews);
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to create review
function createReview($user_name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $comment = htmlspecialchars(strip_tags(trim($comment)));

    try {
        // Prepare and execute the SQL statement with prepared statements
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, email, rating, comment) VALUES (:user_name, :email, :rating, :comment)");
        
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        $result = $stmt->execute();

        if ($result) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        // Fetch all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if ($reviews) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p>Rating: " . $review['rating'] . " stars</p>";
                echo "<p>Email: " . htmlspecialchars($review['email']) . "</p>";
                echo "<p>Comment: " . htmlspecialchars($review['comment']) . "</p>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews found.</p>";
        }
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate input fields
    if (!empty($_POST['user_name']) && !empty($_POST['email']) && !empty($_POST['rating']) && !empty($_POST['comment'])) {
        $user_name = $_POST['user_name'];
        $email = $_POST['email'];
        $rating = (int)$_POST['rating'];
        $comment = $_POST['comment'];

        // Basic validation
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address.");
        }
        
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars.");
        }

        // Create review
        if (createReview($user_name, $email, $rating, $comment, $conn)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error submitting review. Please try again.";
        }
    } else {
        die("All fields are required.");
    }
}

// Close database connection
$conn = null;
?>


<?php
// Function to handle adding reviews
function addReview($name, $comment) {
    // Sanitize inputs to prevent XSS attacks
    $name = htmlspecialchars($name);
    $comment = htmlspecialchars($comment);

    // Get current date and time
    $date = date('Y-m-d H:i:s');

    // Review data
    $review = array(
        'name' => $name,
        'comment' => $comment,
        'date' => $date
    );

    // File to store reviews
    $file = 'reviews.json';

    // Read existing reviews from file
    if (file_exists($file)) {
        $data = file_get_contents($file);
        $reviews = json_decode($data, true);
    } else {
        $reviews = array();
    }

    // Add new review
    $reviews[] = $review;

    // Write back to the file
    $success = file_put_contents($file, json_encode($reviews, JSON_PRETTY_PRINT));

    return $success ? true : false;
}

// Function to display reviews
function displayReviews() {
    $file = 'reviews.json';

    if (file_exists($file)) {
        $data = file_get_contents($file);
        $reviews = json_decode($data, true);

        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                // Display each review
                echo '<div class="review">';
                echo '<h3>' . $review['name'] . '</h3>';
                echo '<p>' . $review['comment'] . '</p>';
                echo '<small>Posted on ' . date('F j, Y g:i a', strtotime($review['date'])) . '</small>';
                echo '</div>';
            }
        } else {
            echo '<p>No reviews yet!</p>';
        }
    } else {
        echo '<p>No reviews file found!</p>';
    }
}
?>


<?php
// Include the review functions

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add new review when form is submitted
    $name = $_POST['name'];
    $comment = $_POST['comment'];
    
    if (addReview($name, $comment)) {
        echo '<p>Thank you for your review!</p>';
    } else {
        echo '<p>Error adding review. Please try again.</p>';
    }
}

// Display all reviews
displayReviews();
?>


<?php
function display_user_reviews($product_id, $max_reviews = 5) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return;
    }

    // SQL query to fetch reviews for the product
    $sql = "SELECT user_name, rating, review_text, review_date 
            FROM reviews 
            WHERE product_id = ? 
            ORDER BY review_date DESC 
            LIMIT ?";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        // Bind parameters
        mysqli_stmt_bind_param($stmt, "ii", $product_id, $max_reviews);

        // Execute the statement
        mysqli_stmt_execute($stmt);

        // Get the result set
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            echo "<div class='reviews'>";
            
            while ($row = mysqli_fetch_assoc($result)) {
                $user_name = htmlspecialchars($row['user_name']);
                $rating = $row['rating'];
                $review_text = htmlspecialchars($row['review_text']);
                $review_date = $row['review_date'];

                // Display each review
                echo "<div class='review'>";
                echo "<h3>Reviewed by: $user_name</h3>";
                echo generate_stars($rating);
                echo "<p>$review_text</p>";
                echo "<small>Posted on: $review_date</small>";
                echo "</div>";
            }
            
            echo "</div>";
        } else {
            echo "<p>No reviews available for this product.</p>";
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    } else {
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Helper function to generate star ratings
function generate_stars($rating) {
    $full_stars = min(5, (int)$rating);
    $half_star = ($rating - $full_stars >= 0.5) ? 1 : 0;
    
    echo "<div class='stars'>";
    for ($i = 0; $i < $full_stars; $i++) {
        echo "<img src='star.png' alt='*'>";
    }
    if ($half_star) {
        echo "<img src='star_half.png' alt='*'>";
    }
    for ($i = $full_stars + $half_star; $i < 5; $i++) {
        echo "<img src='star_empty.png' alt=''>";
    }
    echo "</div>";
}

// Example usage:
display_user_reviews(1, 3);
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Function to create a user review
function createReview($userId, $productId, $rating, $reviewText) {
    global $host, $user, $password, $db_name;
    
    // Connect to the database
    $conn = new mysqli($host, $user, $password, $db_name);
    
    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }
    
    // SQL query to insert review data
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, timestamp)
            VALUES (?, ?, ?, ?, NOW())";
            
    // Prepare and bind the statement
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
        return false;
    }
    
    $stmt->bind_param("iisi", $userId, $productId, $rating, $reviewText);
    
    // Execute the statement
    if ($stmt->execute()) {
        // Review created successfully
        $stmt->close();
        $conn->close();
        return true;
    } else {
        // Error creating review
        die("Error: " . $sql . "<br>" . $conn->error);
        $stmt->close();
        $conn->close();
        return false;
    }
}

// Example usage:
$userId = 1;          // Replace with actual user ID
$productId = 1;       // Replace with actual product ID
$rating = 5;          // Rating between 1-5
$reviewText = "This is a great product!"; 

if (createReview($userId, $productId, $rating, $reviewText)) {
    echo "Thank you for your review!";
} else {
    echo "Error submitting your review. Please try again.";
}
?>


<?php
// Include your createReview() function here

$userId = $_POST['user_id'];
$productId = $_POST['product_id'];
$rating = (int)$_POST['rating'];
$reviewText = htmlspecialchars($_POST['review_text'], ENT_QUOTES, 'UTF-8');

if ($rating < 1 || $rating > 5) {
    die("Invalid rating. Please choose a rating between 1 and 5.");
}

if (empty($reviewText)) {
    die("Please write your review.");
}

if (createReview($userId, $productId, $rating, $reviewText)) {
    echo "Thank you for your review!";
} else {
    echo "Error submitting your review. Please try again.";
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(50),
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

if (mysqli_query($conn, $sql)) {
    // Table created successfully
} else {
    echo "Error creating table: " . mysqli_error($conn);
}

function handleReviews($action = 'display', $user_name = '', $rating = 0, $comment = '') {
    global $conn;

    switch ($action) {
        case 'submit':
            // Validate input
            if (empty($user_name)) {
                die("Please enter your name.");
            }
            if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
                die("Rating must be between 1 and 5.");
            }
            if (strlen($comment) > 500) {
                die("Comment is too long. Maximum length is 500 characters.");
            }

            // Sanitize input
            $user_name = mysqli_real_escape_string($conn, $user_name);
            $rating = intval($rating);
            $comment = mysqli_real_escape_string($conn, $comment);

            // Insert review into database
            $sql = "INSERT INTO reviews (user_name, rating, comment, timestamp) 
                    VALUES ('$user_name', '$rating', '$comment', NOW())";

            if (mysqli_query($conn, $sql)) {
                echo "<script>alert('Review submitted successfully!');</script>";
            } else {
                echo "Error submitting review: " . mysqli_error($conn);
            }
            break;

        case 'display':
            // Get all reviews from database
            $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
            $result = mysqli_query($conn, $sql);

            if (mysqli_num_rows($result) > 0) {
                // Calculate average rating
                $average_rating = 0;
                $total_ratings = 0;

                while ($row = mysqli_fetch_assoc($result)) {
                    $average_rating += $row['rating'];
                    $total_ratings++;
                }

                if ($total_ratings > 0) {
                    $average_rating /= $total_ratings;
                }

                // Reset result pointer
                mysqli_data_seek($result, 0);

                // Display reviews
                echo "<div class='reviews'>";
                echo "<h2>Reviews (" . $total_ratings . ")</h2>";
                echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
                
                while ($row = mysqli_fetch_assoc($result)) {
                    $date = date('F j, Y g:i a', strtotime($row['timestamp']));
                    echo "<div class='review'>";
                    echo "<strong>" . htmlspecialchars($row['user_name']) . "</strong> - " . $date . "<br>";
                    echo "<span class='rating'>★ " . $row['rating'] . "/5</span><br>";
                    echo "<p>" . nl2br(htmlspecialchars($row['comment'])) . "</p>";
                    echo "</div>";
                }
                echo "</div>";
            } else {
                echo "<p>No reviews yet. Be the first to review!</p>";
            }
            break;

        default:
            die("Invalid action specified.");
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php handleReviews('display'); ?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

function createReview($productId, $userId, $rating, $comment) {
    // Connect to the database
    $connection = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    if (!$connection) {
        die("Connection failed: " . mysqli_error($connection));
    }
    
    try {
        // Sanitize inputs
        $productId = mysqli_real_escape_string($connection, $productId);
        $userId = mysqli_real_escape_string($connection, $userId);
        $rating = mysqli_real_escape_string($connection, $rating);
        $comment = mysqli_real_escape_string($connection, $comment);
        
        // SQL query to insert review
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment)
                VALUES ('$productId', '$userId', '$rating', '$comment')";
        
        if (!$result = mysqli_query($connection, $sql)) {
            throw new Exception("Error inserting review: " . mysqli_error($connection));
        }
        
        // Get the last inserted id
        $reviewId = mysqli_insert_id($connection);
        
        // Close database connection
        mysqli_close($connection);
        
        return array(
            'status' => 'success',
            'message' => 'Review created successfully',
            'review_id' => $reviewId,
            'product_id' => $productId,
            'user_id' => $userId,
            'rating' => $rating,
            'comment' => $comment
        );
        
    } catch (Exception $e) {
        // Close database connection in case of error
        mysqli_close($connection);
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Example usage:
$product_id = 1;
$user_id = 1;
$rating = 5;
$comment = "Great product!";
$result = createReview($product_id, $user_id, $rating, $comment);

print_r($result);
?>


<?php
function show_reviews($product_id) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to fetch reviews for a specific product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";

    // Execute the query
    $result = mysqli_query($conn, $sql);

    // Check if there are any reviews
    if (mysqli_num_rows($result) > 0) {
        // Output the reviews
        echo "<div class='reviews-container'>";
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review-item'>";
                // Review author name
                echo "<h4>" . $row['user_name'] . "</h4>";
                
                // Rating stars
                $rating = $row['rating'];
                echo "<div class='stars'>";
                    for ($i = 1; $i <= 5; $i++) {
                        if ($i <= $rating) {
                            echo "<span class='star'>★</span>";
                        } else {
                            echo "<span class='star'>☆</span>";
                        }
                    }
                echo "</div>";
                
                // Review comment
                echo "<p>" . $row['comment'] . "</p>";
                
                // Review date
                echo "<small>Reviewed on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        // If there are no reviews
        echo "<p>No reviews available for this product.</p>";
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


show_reviews(1); // Replace 1 with your actual product ID


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function displayUserReviews() {
    global $conn;
    
    // SQL query to fetch reviews from the database
    $sql = "SELECT review_id, user_name, review_text, rating, review_date 
            FROM reviews 
            WHERE status = 'active' 
            ORDER BY review_id DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review in HTML format
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
                    echo "<p>" . date('F j, Y', strtotime($row['review_date'])) . "</p>";
                    displayStars($row['rating']);
                echo "</div>";
                
                echo "<div class='review-text'>";
                    echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
                echo "</div>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }
}

function displayStars($rating) {
    $stars = '';
    
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= '<span class="star-filled">★</span>';
        } else {
            $stars .= '<span class="star-empty">☆</span>';
        }
    }
    
    echo "<div class='rating'>" . $stars . "</div>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .rating {
            display: inline-block;
        }
        
        .star-filled {
            color: #ff4d4d;
            font-size: 24px;
        }
        
        .star-empty {
            color: #ddd;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>
    
    <?php displayUserReviews(); ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Insert review if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review']);
    $rating = intval($_POST['rating']);

    // Insert into database
    $sql = "INSERT INTO reviews (name, review, rating) VALUES ('$name', '$review_text', $rating)";
    
    if ($conn->query($sql) === TRUE) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Get reviews from database
$sql = "SELECT * FROM reviews ORDER BY id DESC";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .star-rating {
            display: inline-block;
            font-size: 24px;
            color: gold;
        }
        .review-box {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <!-- Review Form -->
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="name" placeholder="Your Name" required><br><br>
        <textarea name="review" placeholder="Write your review here..." rows="5" cols="40" required></textarea><br><br>
        <h3>Rating:</h3>
        <select name="rating">
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5" selected>5 Stars</option>
        </select><br><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Reviews</h2>
    <?php
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review-box'>";
            echo "<strong>" . htmlspecialchars($row['name']) . "</strong><br>";
            
            // Display rating stars
            $rating = $row['rating'];
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star-rating'>★</span>";
                } else {
                    echo "<span class='star-rating'>☆</span>";
                }
            }
            
            echo "<br>";
            echo htmlspecialchars($row['review']) . "<br><br>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
    ?>

    <?php
    // Close database connection
    $conn->close();
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'review_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function addReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    try {
        // Sanitize inputs
        $user_id = htmlspecialchars(strip_tags(trim($user_id)));
        $product_id = htmlspecialchars(strip_tags(trim($product_id)));
        $rating = (int)$rating;
        $comment = htmlspecialchars(strip_tags(trim($comment)));
        
        // Check if rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("
            INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (:user_id, :product_id, :rating, :comment, NOW())
        ");
        
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Review submission failed");
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($product_id) {
    global $conn;
    
    try {
        // Sanitize input
        $product_id = htmlspecialchars(strip_tags(trim($product_id)));
        
        // Prepare SQL statement
        $stmt = $conn->prepare("
            SELECT r.*, u.username 
            FROM reviews r
            LEFT JOIN users u ON r.user_id = u.id
            WHERE r.product_id = :product_id
            ORDER BY r.review_date DESC
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    try {
        // Sanitize input
        $product_id = htmlspecialchars(strip_tags(trim($product_id)));
        
        // Prepare SQL statement
        $stmt = $conn->prepare("
            SELECT AVG(rating) as average 
            FROM reviews 
            WHERE product_id = :product_id
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:

// Check if user is logged in (replace with your authentication system)
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];
$product_id = 1; // Replace with actual product ID

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['submit_review'])) {
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($user_id, $product_id, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Get reviews
$reviews = getReviews($product_id);

// Display average rating
$average_rating = getAverageRating($product_id);
echo "<h3>Product Rating: $average_rating/5</h3>";

// Display reviews
if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>Rating: " . str_repeat("★", $review['rating']) . "</h4>";
        if (isset($review['username'])) {
            echo "<p>By: " . $review['username'] . "</p>";
        }
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . date('M j, Y', strtotime($review['review_date'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet!";
}
?>


<?php
// Array to store reviews (simulating a database)
$reviews = array();

/**
 * Add a new review
 *
 * @param string $item_id The ID of the item being reviewed
 * @param string $user_id The ID of the user submitting the review
 * @param int $rating The rating (1-5 stars)
 * @param string $comment The review comment
 * @return bool Returns true if review was added successfully, false otherwise
 */
function addReview($item_id, $user_id, $rating, $comment) {
    global $reviews;
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }
    
    // Review data
    $review = array(
        'user_id' => $user_id,
        'rating' => (int)$rating,
        'comment' => htmlspecialchars($comment),
        'timestamp' => date('Y-m-d H:i:s')
    );
    
    // Add review to the item's review list
    if (!isset($reviews[$item_id])) {
        $reviews[$item_id] = array();
    }
    
    array_push($reviews[$item_id], $review);
    return true;
}

/**
 * Get all reviews for an item
 *
 * @param string $item_id The ID of the item to get reviews for
 * @return array Array of reviews for the item
 */
function getReviews($item_id) {
    global $reviews;
    
    if (isset($reviews[$item_id])) {
        return $reviews[$item_id];
    }
    return array();
}

/**
 * Calculate average rating for an item
 *
 * @param string $item_id The ID of the item to calculate the average rating for
 * @return float Average rating (rounded to 2 decimal places)
 */
function getAverageRating($item_id) {
    global $reviews;
    
    if (!isset($reviews[$item_id]) || count($reviews[$item_id]) == 0) {
        return 0; // No reviews yet
    }
    
    $total_ratings = 0;
    foreach ($reviews[$item_id] as $review) {
        $total_ratings += $review['rating'];
    }
    
    $average_rating = $total_ratings / count($reviews[$item_id]);
    return round($average_rating, 2);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {
    // Sanitize input
    $item_id = htmlspecialchars($_POST['item_id']);
    $user_id = htmlspecialchars($_POST['user_id']);
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($item_id, $user_id, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Please enter a valid rating between 1 and 5.";
    }
}

// Display reviews and average rating
$item_id = '123'; // Example item ID
$all_reviews = getReviews($item_id);
$average_rating = getAverageRating($item_id);

echo "<h3>Item Reviews:</h3>";
if (count($all_reviews) == 0) {
    echo "No reviews yet.";
} else {
    foreach ($all_reviews as $review) {
        echo "<div class='review'>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<p>Posted by User: " . $review['user_id'] . "</p>";
        echo "<p>Timestamp: " . $review['timestamp'] . "</p>";
        echo "</div>";
    }
}

echo "<h3>Average Rating: " . $average_rating . "/5</h3>";
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';     // Replace with your database password
$database = 'reviews_db'; // Replace with your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($name, $review, $conn) {
    // Validate input data
    if (empty($name) || empty($review)) {
        return false; // Return false if either field is empty
    }

    // Prepare and bind the statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (name, review) VALUES (?, ?)");
    $stmt->bind_param("ss", $name, $review);

    // Execute the query
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }

    // Close the statement
    $stmt->close();
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT id, name, review, timestamp FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row['name']) . "</h4>";
            echo "<p>" . htmlspecialchars($row['review']) . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }
}
?>


<?php
// Include necessary files
include 'db.php';

// Function to get product reviews
function get_reviews($product_id) {
    $reviews = array();
    
    // Query the database for reviews
    $query = "SELECT r.review_id, r.user_id, r.product_id, r.rating, r.review_text, 
                 u.username, r.created_at
              FROM reviews r
              JOIN users u ON r.user_id = u.user_id
              WHERE r.product_id = ?
              ORDER BY r.created_at DESC";
    
    $stmt = mysqli_prepare($GLOBALS['connection'], $query);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'review_id' => $row['review_id'],
            'user_id' => $row['user_id'],
            'product_id' => $row['product_id'],
            'rating' => $row['rating'],
            'review_text' => htmlspecialchars($row['review_text']),
            'username' => htmlspecialchars($row['username']),
            'created_at' => $row['created_at']
        );
    }
    
    return $reviews;
}

// Function to calculate average rating
function get_average_rating($product_id) {
    $average = 0.0;
    
    // Query the database for average rating
    $query = "SELECT AVG(rating) as average
              FROM reviews
              WHERE product_id = ?";
    
    $stmt = mysqli_prepare($GLOBALS['connection'], $query);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        $average = number_format((float)$row['average'], 1, '.', '');
    }
    
    return $average;
}

// Function to submit a new review
function submit_review($product_id, $user_id) {
    // Sanitize and validate input
    if (isset($_POST['submit'])) {
        $rating = intval($_POST['rating']);
        $review_text = mysqli_real_escape_string($GLOBALS['connection'], $_POST['review_text']);
        
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5.");
        }
        
        if (empty($review_text)) {
            throw new Exception("Review text cannot be empty.");
        }
        
        // Insert review into database
        $query = "INSERT INTO reviews (product_id, user_id, rating, review_text)
                  VALUES (?, ?, ?, ?)";
        
        $stmt = mysqli_prepare($GLOBALS['connection'], $query);
        mysqli_stmt_bind_param($stmt, 'iisi', $product_id, $user_id, $rating, $review_text);
        
        if (!mysqli_stmt_execute($stmt)) {
            throw new Exception("Error submitting review: " . mysqli_error($GLOBALS['connection']));
        }
    }
}

// Example usage:
$product_id = 1; // Replace with your product ID
$user_id = 2;    // Replace with current user's ID

try {
    submit_review($product_id, $user_id);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Get and display reviews
$reviews = get_reviews($product_id);
$average_rating = get_average_rating($product_id);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .rating-stars {
            color: gold;
            font-size: 24px;
        }
        .average-rating {
            font-weight: bold;
            font-size: 18px;
        }
    </style>
</head>
<body>
    <h2>Product Reviews</h2>
    <p>Average Rating: <?php echo $average_rating; ?> stars</p>

    <!-- Display existing reviews -->
    <?php foreach ($reviews as $review): ?>
    <div class="review-box">
        <div class="rating-stars">
            <?php 
                $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
                echo $stars;
            ?>
        </div>
        <p><?php echo $review['review_text']; ?></p>
        <small>by <?php echo $review['username']; ?> on <?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
    </div>
    <?php endforeach; ?>

    <!-- Review submission form -->
    <h3>Submit a Review</h3>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="rating">Rating:</label><br>
        <select name="rating" id="rating">
            <option value="">Select Rating</option>
            <?php for ($i = 1; $i <= 5; $i++): ?>
                <option value="<?php echo $i; ?>">★<?php echo $i; ?></option>
            <?php endfor; ?>
        </select><br>

        <label for="review_text">Review:</label><br>
        <textarea name="review_text" id="review_text" required></textarea><br>

        <input type="submit" name="submit" value="Submit Review">
    </form>
</body>
</html>


<?php
// Array to store reviews
$reviews = array();

// Load existing reviews from file
function load_reviews() {
    global $reviews;
    
    if (file_exists('reviews.txt')) {
        $reviews_data = file_get_contents('reviews.txt');
        $reviews = unserialize($reviews_data);
    }
}

// Save reviews to file
function save_reviews() {
    global $reviews;
    
    $reviews_data = serialize($reviews);
    file_put_contents('reviews.txt', $reviews_data);
}

// Add a new review
function add_review($name, $rating, $comment) {
    global $reviews;
    
    // Sanitize input
    $name = htmlspecialchars(strip_tags(trim($name)));
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));
    
    if ($name == '' || $comment == '') {
        return false; // Missing required fields
    }
    
    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }
    
    // Create review array
    $review = array(
        'name' => $name,
        'rating' => $rating,
        'comment' => $comment,
        'date' => date('Y-m-d H:i:s')
    );
    
    global $reviews;
    $reviews[] = $review;
    save_reviews();
    return true;
}

// Display reviews
function display_reviews() {
    global $reviews;
    
    load_reviews();
    
    if (empty($reviews)) {
        echo "<p>No reviews yet.</p>";
        return;
    }
    
    // Calculate average rating
    $total_rating = 0;
    foreach ($reviews as $review) {
        $total_rating += $review['rating'];
    }
    $average_rating = number_format($total_rating / count($reviews), 1);
    
    echo "<div class='reviews'>";
    echo "<h3>Reviews (" . count($reviews) . ")</h3>";
    echo "<p>Average Rating: " . $average_rating . "/5</p>";
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . $review['name'] . "</h4>";
        echo "<div class='rating'>";
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        echo "</div>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>" . $review['date'] . "</small>";
        echo "</div>";
    }
    
    echo "</div>";
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $name = $_POST['name'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (add_review($name, $rating, $comment)) {
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Please fill in all required fields and check the rating.</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .reviews {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
        }
        
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
        
        .star {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            
            <select name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">★ ★ ★ ★ ★</option>
                <option value="4">★ ★ ★ ★</option>
                <option value="3">★ ★ ★</option>
                <option value="2">★ ★</option>
                <option value="1">★</option>
            </select><br><br>
            
            <textarea name="comment" placeholder="Write your review..." required></textarea><br><br>
            
            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    </div>

    <?php display_reviews(); ?>
</body>
</html>


<?php
// Function to create and display reviews
function user_reviews() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = $_POST['rating'];
        $comment = htmlspecialchars($_POST['comment']);

        // Validate input
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            echo "All fields must be filled out!";
            exit();
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            exit();
        }

        // Store review in a file
        $review = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );

        $reviews_file = 'reviews.txt';
        $reviews_content = serialize($review) . PHP_EOL;

        if (file_put_contents($reviews_file, $reviews_content, FILE_APPEND | LOCK_EX)) {
            echo "Thank you for your review!";
        } else {
            echo "Error storing review. Please try again later.";
        }
    }

    // Display existing reviews
    $reviews_file = 'reviews.txt';
    if (file_exists($reviews_file) && filesize($reviews_file) > 0) {
        $reviews_data = file_get_contents($reviews_file);
        $reviews = explode(PHP_EOL, $reviews_data);

        echo "<h2>Previous Reviews:</h2>";
        echo "<div class='reviews'>";

        $total_rating = 0;
        $review_count = 0;

        foreach ($reviews as $review_line) {
            if (trim($review_line) != '') {
                $review = unserialize($review_line);
                $total_rating += $review['rating'];
                $review_count++;

                echo "<div class='review'>";
                echo "<h3>" . $review['name'] . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>" . nl2br($review['comment']) . "</p>";
                echo "<small>Posted on: " . $review['date'] . "</small>";
                echo "</div>";
            }
        }

        // Calculate and display average rating
        if ($review_count > 0) {
            $average_rating = $total_rating / $review_count;
            echo "<h3>Average Rating: " . round($average_rating, 1) . "/5</h3>";
        } else {
            echo "<p>No reviews available yet.</p>";
        }

        echo "</div>";
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Display the review form
function display_review_form() {
    echo <<<HTML
    <form method="post" action="">
        <h2>Submit a Review</h2>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>
HTML;
}
?>


<?php
function submitReview($rating, $comments, $connection) {
    // Validate input data
    if (!is_numeric($rating) || !isset($rating)) {
        return "Rating must be a number between 1 and 5.";
    }
    
    if (strlen($comments) > 500) {
        return "Comments are too long. Please keep it under 500 characters.";
    }

    // Clean the input data to prevent SQL injection
    $rating = intval($rating);
    $comments = mysqli_real_escape_string($connection, htmlspecialchars(trim($comments)));

    // Get user ID from session (assuming user is logged in)
    if (!isset($_SESSION['user_id'])) {
        return "You must be logged in to submit a review.";
    }
    
    $user_id = intval($_SESSION['user_id']);

    // Check that rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5.";
    }

    // SQL statement to insert review into database
    $sql = "INSERT INTO reviews (user_id, rating, comments) 
            VALUES (?, ?, ?)";

    try {
        // Prepare the statement
        $stmt = mysqli_prepare($connection, $sql);
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . mysqli_error($connection));
        }

        // Bind parameters to the statement
        mysqli_stmt_bind_param($stmt, "iss", $user_id, $rating, $comments);

        // Execute the statement
        $result = mysqli_stmt_execute($stmt);
        
        if ($result) {
            return true; // Review submitted successfully
        } else {
            throw new Exception("Error submitting review: " . mysqli_stmt_error($stmt));
        }

    } catch (Exception $e) {
        // Handle errors appropriately, perhaps log them
        error_log("Review submission failed: " . $e->getMessage());
        return false; // Review submission failed
    } finally {
        if ($stmt) {
            mysqli_stmt_close($stmt);
        }
    }
}
?>


$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}


session_start(); // Start the session

// Get form data
$rating = $_POST['rating'];
$comments = $_POST['comments'];

// Submit the review
$result = submitReview($rating, $comments, $connection);

if ($result === true) {
    echo "Thank you for submitting your review!";
} else {
    echo "Error: " . $result;
}


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'review_system';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a user review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Validate rating (assuming ratings are between 1 and 5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Get current date
    $date = date('Y-m-d H:i:s');
    
    // Insert review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$date')";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a specific product
function display_reviews($product_id) {
    global $conn;
    
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get reviews from the database
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>Review by: " . $row['user_id'] . "</h4>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Reviewed on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage:

// Add a review
if (isset($_POST['submit_review'])) {
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review.";
    }
}

// Display reviews
display_reviews(1); // Replace 1 with the product ID you want to display reviews for

?>


<?php
// Connect to the database
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "reviews";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Sanitize and validate input (you should add more validation as needed)
    if (!empty($username) && !empty($rating) && !empty($comment)) {
        // Use prepared statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "INSERT INTO reviews (username, rating, comment, timestamp) VALUES (?, ?, ?, NOW())");
        mysqli_stmt_bind_param($stmt, "sii", $username, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "<p class='success'>Thank you for submitting your review!</p>";
        } else {
            echo "<p class='error'>Error submitting review. Please try again later.</p>";
        }
        
        mysqli_stmt_close($stmt);
    } else {
        echo "<p class='error'>Please fill in all fields before submitting your review.</p>";
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from the database
    $result = mysqli_query($conn, "SELECT * FROM reviews ORDER BY timestamp DESC");
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $username = $row['username'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));
            
            // Display each review
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<span class='username'>$username</span>";
                    displayRatingStars($rating);
                    echo "<span class='timestamp'>$timestamp</span>";
                echo "</div>";
                echo "<p class='comment'>$comment</p>";
            echo "</div>";
        }
    } else {
        echo "<p class='no-reviews'>No reviews submitted yet.</p>";
    }
}

// Function to display rating stars
function displayRatingStars($rating) {
    $fullStars = min((int)$rating, 5);
    $halfStar = ($rating - $fullStars) >= 0.5 ? 1 : 0;
    $emptyStars = 5 - $fullStars - $halfStar;
    
    for ($i = 0; $i < $fullStars; $i++) {
        echo "<span class='star'>★</span>";
    }
    
    if ($halfStar) {
        echo "<span class='star'>⯨</span>";
    }
    
    for ($i = 0; $i < $emptyStars; $i++) {
        echo "<span class='star'>☆</span>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to save a review
function save_review($name, $email, $review, $rating, $conn) {
    // Sanitize input
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $review = mysqli_real_escape_string($conn, $review);
    $rating = intval($rating);

    // Insert into database
    $sql = "INSERT INTO reviews (name, email, review, rating, timestamp) 
            VALUES ('$name', '$email', '$review', '$rating', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to get all reviews
function get_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if ($result && mysqli_num_rows($result) > 0) {
        return mysqli_fetch_all($result, MYSQLI_ASSOC);
    } else {
        return array();
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $review = $_POST['review'];
    $rating = $_POST['rating'];

    if (save_review($name, $email, $review, $rating, $conn)) {
        echo "<script>alert('Review submitted successfully!');</script>";
    }
}

// Get all reviews
$reviews = get_reviews($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .review-container {
            background-color: #f9f9f9;
            padding: 20px;
            margin: 10px 0;
            border-radius: 5px;
        }

        .stars {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <input type="email" name="email" placeholder="Your Email" required><br><br>
            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea><br><br>
            <label>Rating:</label>
            <select name="rating">
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5" selected>5 Stars</option>
            </select><br><br>
            <input type="submit" value="Submit Review">
        </form>
    </div>

    <?php if (!empty($reviews)) : ?>
    <h2>Latest Reviews</h2>
    <?php foreach ($reviews as $review) : ?>
    <div class="review-container">
        <h3><?php echo htmlspecialchars($review['name']); ?></h3>
        <p><?php echo htmlspecialchars($review['review']); ?></p>
        <div class="stars">
            <?php
            for ($i = 1; $i <= $review['rating']; $i++) {
                echo "★ ";
            }
            for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                echo "☆ ";
            }
            ?>
        </div>
        <small><?php echo date('F j, Y g:i a', strtotime($review['timestamp'])); ?></small>
    </div>
    <?php endforeach; ?>
    <?php else : ?>
    <p>No reviews yet. Be the first to leave a review!</p>
    <?php endif; ?>

</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
function reviewSystem() {
    // Database connection settings
    $host = "localhost";
    $user = "username";
    $password = "password";
    $database = "reviews_db";

    // Connect to database
    $conn = mysqli_connect($host, $user, $password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Handle new review submission
    if (isset($_POST['submit'])) {
        // Sanitize input
        $name = htmlspecialchars($_POST['name']);
        $review = htmlspecialchars($_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate inputs
        if ($name == "" || $review == "" || $rating < 1 || $rating > 5) {
            echo "Please fill in all fields correctly!";
        } else {
            // Insert review into database
            $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, review, rating, date) VALUES (?, ?, ?, NOW())");
            mysqli_stmt_bind_param($stmt, "sss", $name, $review, $rating);

            if ($stmt->execute()) {
                echo "<div class='alert'>Review submitted successfully!</div>";
                // Redirect back to the same page
                header("Refresh: 2; url=".$_SERVER['PHP_SELF']);
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Fetch all reviews from database
    $result = mysqli_query($conn, "SELECT * FROM reviews ORDER BY date DESC");

    if (mysqli_num_rows($result) > 0) {
        // Display average rating
        $averageRatingQuery = mysqli_query($conn, "SELECT AVG(rating) AS avg_rating FROM reviews");
        $avgRating = mysqli_fetch_assoc($averageRatingQuery);
        echo "<h3>Average Rating: " . number_format($avgRating['avg_rating'], 1) . "/5</h3>";

        // Display each review
        while ($row = mysqli_fetch_assoc($result)) {
            $name = $row['name'];
            $reviewText = $row['review'];
            $rating = $row['rating'];
            $date = date('F j, Y', strtotime($row['date']));

            echo "<div class='review'>";
            echo "<h4>Review by $name</h4>";
            echo "<p>$reviewText</p>";
            echo "<div class='stars'>";
            displayStars($rating);
            echo "</div>";
            echo "<small>$date</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found. Be the first to review!";
    }

    // Close database connection
    mysqli_close($conn);

    // Review submission form
    echo '<form id="reviewForm" method="post">
              <h3>Submit a Review</h3>
              <input type="text" name="name" placeholder="Your Name" required><br>
              <textarea name="review" placeholder="Write your review here..." required></textarea><br>
              <select name="rating" required>
                  <option value="">Select Rating (1-5)</option>
                  <option value="5">5 Stars</option>
                  <option value="4">4 Stars</option>
                  <option value="3">3 Stars</option>
                  <option value="2">2 Stars</option>
                  <option value="1">1 Star</option>
              </select><br>
              <input type="submit" name="submit" value="Submit Review">
          </form>';
}

// Helper function to display stars
function displayStars($rating) {
    $fullStars = floor($rating);
    $hasHalfStar = ($rating - $fullStars) >= 0.5;

    for ($i = 1; $i <= $fullStars; $i++) {
        echo "★ ";
    }

    if ($hasHalfStar) {
        echo "⯨ "; // Half star emoji
    }
}

// Usage example:
?>


<?php
// Connect to database
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Submit review function
function submitReview() {
    global $conn;
    
    // Get form data
    $username = $_POST['username'];
    $rating = $_POST['rating'];
    $review_title = $_POST['review_title'];
    $comment = $_POST['comment'];
    
    // Validate input
    if (empty($username) || empty($rating) || empty($review_title) || empty($comment)) {
        echo "Please fill in all required fields!";
        return;
    }
    
    // Sanitize input
    $username = htmlspecialchars(stripslashes(trim($username)));
    $review_title = htmlspecialchars(stripslashes(trim($review_title)));
    $comment = htmlspecialchars(stripslashes(trim($comment)));
    
    // Insert into database
    $sql = "INSERT INTO reviews (username, rating, review_title, comment) 
            VALUES ('$username', '$rating', '$review_title', '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        echo "Thank you for submitting your review!";
        header("Location: thank_you.php");
        exit();
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Display reviews function
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<h4>" . $row['review_title'] . "</h4>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Submit new review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    submitReview();
}

// Display existing reviews
displayReviews();
?>


<?php
// Function to submit a new review
function submitReview($userId, $productId, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'your_database_name';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the SQL statement
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, submission_date) 
                VALUES (:userId, :productId, :rating, :comment, NOW())";
        
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        // Execute the query
        $stmt->execute();

        // Redirect back to product page after submission
        header("Location: product.php?id=$productId");
        exit();

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Function to display reviews for a specific product
function displayReviews($productId) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'your_database_name';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the SQL statement
        $sql = "SELECT r.*, u.username FROM reviews r 
                JOIN users u ON r.user_id = u.id 
                WHERE product_id = :productId 
                ORDER BY submission_date DESC";
        
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();

        // Fetch all reviews
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        // Display each review
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>Review by " . $review['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
            echo "<p>" . nl2br($review['comment']) . "</p>";
            echo "<small>Submitted on: " . date('j F Y, g:i a', strtotime($review['submission_date'])) . "</small>";
            echo "</div><br>";
        }

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
session_start();
require_once('review_functions.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = htmlspecialchars($_POST['comment'], ENT_QUOTES);

    submitReview($userId, $ productId, $rating, $comment);
}
?>


<?php
require_once('review_functions.php');
displayReviews($productId);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($user_name, $user_email, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if all fields are filled
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {
        throw new Exception("Please fill in all required fields");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, created_at)
            VALUES ('$user_name', '$user_email', $rating, '$comment', NOW())";
            
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        throw new Exception("Error submitting review: " . $conn->error);
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<strong>" . htmlspecialchars($row['user_name']) . "</strong>";
                    echo "<span>Rating: " . $row['rating'] . " stars</span>";
                    echo "<small>" . date('F j, Y', strtotime($row['created_at'])) . "</small>";
                echo "</div>";
                echo "<p class='review-comment'>" . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to delete a review
function delete_review($review_id, $user_email) {
    global $conn;
    
    // Sanitize inputs
    $review_id = intval($review_id);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    
    // Verify that the review exists and belongs to the user
    $sql = "SELECT * FROM reviews WHERE review_id = $review_id AND user_email = '$user_email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Delete the review
        $sql = "DELETE FROM reviews WHERE review_id = $review_id";
        if ($conn->query($sql) === TRUE) {
            return true;
        } else {
            throw new Exception("Error deleting review: " . $conn->error);
        }
    } else {
        throw new Exception("Invalid review or insufficient permissions");
    }
}

// Close database connection
$conn->close();
?>


<?php
include('review_functions.php');

try {
    submit_review($_POST['user_name'], $_POST['user_email'], $_POST['rating'], $_POST['comment']);
    echo "Thank you for submitting your review!";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php include('review_functions.php'); ?>
<div id="reviews">
    <?php display_reviews(); ?>
</div>


<?php
include('review_functions.php');

try {
    delete_review($_POST['review_id'], $_POST['user_email']);
    echo "Review deleted successfully!";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


function displayProductReviews($product_id, $current_user = null) {
    // Database connection details
    $db_host = "localhost";
    $db_username = "root";
    $db_password = "";
    $db_name = "reviews_db";

    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query with pagination support
    $limit = 5; // Default limit per page
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC LIMIT ?";
    
    // Prepare and bind parameters to prevent SQL injection
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "ii", $product_id, $limit);
        
        // Execute the statement
        mysqli_stmt_execute($stmt);
        
        // Get result set
        $result = mysqli_stmt_get_result($stmt);
        
        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo "<div class='review'>";
                echo "<div class='user-info'>";
                echo "By " . htmlspecialchars($row['username']) . "<br>";
                echo "</div>";
                
                // Display stars
                echo "<div class='rating'>";
                for ($i = 1; $i <= 5; $i++) {
                    if ($i <= $row['rating']) {
                        echo "<span class='star active'>★</span>";
                    } else {
                        echo "<span class='star'>★</span>";
                    }
                }
                echo "</div>";
                
                // Review text
                echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
                
                // Date and time
                $date = date('F j, Y g:i a', strtotime($row['review_date']));
                echo "<div class='date'>" . $date . "</div>";
                
                // Edit/delete buttons if current user is the reviewer
                if ($current_user && $current_user == $row['reviewer_id']) {
                    echo "<div class='review-actions'>";
                    echo "<a href='edit_review.php?review_id=" . $row['id'] . "'>Edit</a> | ";
                    echo "<a href='delete_review.php?review_id=" . $row['id'] . "'>Delete</a>";
                    echo "</div>";
                }
                
                echo "</div>";
            }
        } else {
            echo "<div class='no-reviews'>";
            echo "No reviews yet for this product.";
            echo "</div>";
        }

        // Free result set
        mysqli_free_result($result);
    }

    // Close statement and connection
    if ($stmt) {
        mysqli_stmt_close($stmt);
    }
    mysqli_close($conn);
}


displayProductReviews(123); // Display reviews for product ID 123
// Or with current user:
displayProductReviews(123, 456); // Where 456 is the current user's ID


<?php
function create_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Connect to database
    $mysqli = new mysqli($host, $username, $password, $database);

    // Check if there is an existing review from this user for the product
    $check_review_query = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    
    $stmt = $mysqli->prepare($check_review_query);
    $stmt->bind_param("ii", $user_id, $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update existing review
        $update_query = "UPDATE reviews SET rating = ?, comment = ? WHERE user_id = ? AND product_id = ?";
        
        $stmt = $mysqli->prepare($update_query);
        $stmt->bind_param("dssi", $rating, $comment, $user_id, $product_id);
    } else {
        // Insert new review
        $insert_query = "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)";
        
        $stmt = $mysqli->prepare($insert_query);
        $stmt->bind_param("iidi", $product_id, $user_id, $rating, $comment);
    }

    // Execute the statement
    if ($stmt->execute()) {
        return true;
    } else {
        echo "Error: " . $stmt->error;
        return false;
    }
}
?>


// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "Great product! Highly recommended.";

if (create_user_review($user_id, $product_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function insertReview($userId, $productId, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $reviewText = mysqli_real_escape_string($conn, htmlspecialchars($reviewText));
    
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating)
            VALUES ('$userId', '$productId', '$reviewText', '$rating')";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

function getReviews($productId, $page = 1, $itemsPerPage = 5, $conn) {
    // Calculate offset
    $offset = ($page - 1) * $itemsPerPage;
    
    $sql = "SELECT r.review_id, r.user_id, r.product_id, 
            r.review_text, r.rating, u.username,
            DATE_FORMAT(r.created_at, '%Y-%m-%d %H:%i') as created_at
            FROM reviews r
            JOIN users u ON r.user_id = u.user_id
            WHERE r.product_id = '$productId'
            ORDER BY r.created_at DESC
            LIMIT $itemsPerPage OFFSET $offset";
    
    $result = $conn->query($sql);
    $reviews = array();
    
    if ($result) {
        while ($row = $result->fetch_assoc()) {
            // Sanitize output
            $row['review_text'] = htmlspecialchars($row['review_text']);
            $row['username'] = htmlspecialchars($row['username']);
            
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        return false;
    }
}

function countReviews($productId, $conn) {
    $sql = "SELECT COUNT(*) as total_reviews FROM reviews WHERE product_id = '$productId'";
    
    $result = $conn->query($sql);
    
    if ($result) {
        $row = $result->fetch_assoc();
        return $row['total_reviews'];
    } else {
        return 0;
    }
}

// Example usage:

// Insert a new review
$userId = 1;
$productId = 1;
$reviewText = "This is an excellent product!";
$rating = 5;

if (insertReview($userId, $productId, $reviewText, $rating, $conn)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review: " . $conn->error;
}

// Get reviews for product
$page = 1;
$itemsPerPage = 5;
$reviews = getReviews($productId, $page, $itemsPerPage, $conn);

if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<strong>Rating:</strong> " . $review['rating'] . "/5<br>";
        echo "<strong>Author:</strong> " . $review['username'] . "<br>";
        echo "<strong>Review:</strong> " . $review['review_text'] . "<br>";
        echo "<strong>Date:</strong> " . $review['created_at'] . "<br>";
        echo "</div>";
    }
} else {
    echo "No reviews found.";
}

// Close database connection
$conn->close();
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "review_system";

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create review form
function create_review_form() {
    // Display the review form
    echo '<form action="submit_review.php" method="POST">';
    echo '<div>';
    echo '  <label for="name">Name:</label><br>';
    echo '  <input type="text" id="name" name="name" required><br>';
    echo '</div>';
    
    echo '<div>';
    echo '  <label for="email">Email:</label><br>';
    echo '  <input type="email" id="email" name="email" required><br>';
    echo '</div>';
    
    echo '<div>';
    echo '  <label for="review_text">Review:</label><br>';
    echo '  <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea><br>';
    echo '</div>';
    
    echo '<div>';
    echo '  <label for="rating">Rating:</label><br>';
    echo '  <select id="rating" name="rating">';
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value=\"$i\">$i stars</option>";
    }
    echo '</select><br>';
    echo '</div>';
    
    echo '<input type="submit" value="Submit Review">';
    echo '</form>';
}

// Function to submit review
function submit_review() {
    global $conn;
    
    // Sanitize inputs
    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $review_text = htmlspecialchars($_POST['review_text']);
    $rating = intval($_POST['rating']);
    
    // Check if all required fields are filled
    if (empty($name) || empty($email) || empty($review_text)) {
        die("Please fill in all required fields.");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, review_text, rating, timestamp, approved)"
           . "VALUES ('$name', '$email', '$review_text', $rating, NOW(), 0)";
    
    if ($conn->query($sql) === TRUE) {
        echo "Thank you for submitting your review!";
    } else {
        die("Error: " . $conn->error);
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Fetch all approved reviews from database
    $sql = "SELECT * FROM reviews WHERE approved=1 ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo '<div class="review">';
            echo '  <h3>' . $row['user_name'] . '</h3>';
            echo '  <p>Rating: ' . str_repeat('★', $row['rating']) . '</p>';
            echo '  <p>' . $row['review_text'] . '</p>';
            echo '  <small>Posted on: ' . $row['timestamp'] . '</small>';
            echo '</div>';
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
$conn->close();
?>


<?php
function display_reviews($product_id, $product_name, $show_form = true) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    // Display product name and description
    echo "<h2>Product Reviews: $product_name</h2>";

    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    } else {
        while ($row = mysqli_fetch_assoc($result)) {
            $user_id = $row['user_id'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $review_date = $row['review_date'];

            // Display user information
            echo "<div class='review'>";
            echo "<h3>User " . $user_id . "</h3>";
            
            // Display star rating
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";

            // Display review comment
            echo "<p>" . htmlspecialchars($comment) . "</p>";
            
            // Display date
            echo "<small>Reviewed on: " . $review_date . "</small>";
            echo "</div>";
        }
    }

    if ($show_form) {
        // Display review submission form
        echo "<h3>Write a Review</h3>";
        echo "<form action='" . $_SERVER['PHP_SELF'] . "' method='post'>";
        echo "<input type='hidden' name='product_id' value='$product_id'>";
        echo "<p>Your Name: <br><input type='text' name='user_name'></p>";
        echo "<p>Rating: <br>
                <select name='rating'>
                    <option value='5'>5 stars</option>
                    <option value='4'>4 stars</option>
                    <option value='3'>3 stars</option>
                    <option value='2'>2 stars</option>
                    <option value='1'>1 star</option>
                </select></p>";
        echo "<p>Review: <br><textarea name='comment' rows='5' cols='40'></textarea></p>";
        echo "<input type='submit' name='submit_review' value='Submit Review'>";
        echo "</form>";

        // Process submitted review
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $user_name = htmlspecialchars($_POST['user_name']);
            $rating = $_POST['rating'];
            $comment = htmlspecialchars($_POST['comment']);

            $sql = "INSERT INTO reviews (product_id, user_name, rating, comment, review_date) 
                    VALUES ('$product_id', '$user_name', '$rating', '$comment', NOW())";

            if (!mysqli_query($conn, $sql)) {
                echo "Error: " . mysqli_error($conn);
            } else {
                echo "<div class='success'>Thank you for your review!</div>";
                // Refresh the page to show the new review
                header("Location: $_SERVER[PHP_SELF]");
                exit();
            }
        }
    }

    // Close database connection
    mysqli_close($conn);
}
?>


display_reviews(1, "Product Name", true); // Replace 1 with your product ID


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function addReview($userId, $reviewText, $rating, $conn) {
    // Validate input
    if (empty($reviewText)) {
        return "Review text cannot be empty!";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // SQL statement to insert review
    $sql = "INSERT INTO reviews (user_id, review_text, rating)
            VALUES (?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    
    if ($stmt === false) {
        return "Database error: " . mysqli_error($conn);
    }
    
    // Bind parameters
    mysqli_stmt_bind_param($stmt, "iss", $userId, $reviewText, $rating);
    
    // Execute query
    if (!mysqli_stmt_execute($stmt)) {
        return "Error adding review: " . mysqli_stmt_error($stmt);
    }
    
    // Get all reviews for user
    $reviewsSql = "SELECT * FROM reviews WHERE user_id = ?";
    $reviewsStmt = mysqli_prepare($conn, $reviewsSql);
    if ($reviewsStmt === false) {
        return "Database error: " . mysqli_error($conn);
    }
    
    mysqli_stmt_bind_param($reviewsStmt, "i", $userId);
    mysqli_stmt_execute($reviewsStmt);
    $result = mysqli_stmt_get_result($reviewsStmt);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'id' => $row['id'],
            'user_id' => $row['user_id'],
            'review_text' => $row['review_text'],
            'rating' => $row['rating'],
            'created_at' => $row['created_at']
        );
    }
    
    return $reviews;
}

// Example usage:
$userId = 1;
$reviewText = "This is a great product!";
$rating = 5;

$reviews = addReview($userId, $reviewText, $rating, $conn);

if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "Review ID: " . $review['id'] . "<br>";
        echo "User ID: " . $review['user_id'] . "<br>";
        echo "Review Text: " . $review['review_text'] . "<br>";
        echo "Rating: " . $review['rating'] . "/5 <br><br>";
    }
} else {
    echo $reviews;
}

// Close database connection
mysqli_close($conn);
?>


<?php
function submit_review($review_id, $user_id, $rating, $comment, $timestamp = null) {
    // Validate inputs
    if (empty(trim($review_id)) || empty(trim($user_id))) {
        return "Error: Review ID and User ID are required.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }

    // Sanitize inputs
    $review_id = htmlspecialchars(trim($review_id));
    $user_id = htmlspecialchars(trim($user_id));
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));

    if (!$timestamp) {
        $timestamp = time();
    }

    // Database connection (assuming you have a database connection)
    try {
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if review ID exists
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE id = ?");
        $stmt->execute([$review_id]);
        
        if ($stmt->rowCount() == 0) {
            return "Error: Review not found.";
        }

        // Update the review
        $sql = "UPDATE reviews SET 
                    user_id = :user_id,
                    rating = :rating,
                    comment = :comment,
                    timestamp = :timestamp
                WHERE id = :review_id";

        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':review_id', $review_id);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        $stmt->bindParam(':timestamp', $timestamp);

        if ($stmt->execute()) {
            return "Review updated successfully.";
        } else {
            return "Error: Unable to update review.";
        }

    } catch(PDOException $e) {
        return "Database error: " . $e->getMessage();
    }
}

// Example usage:
$review_id = 123;
$user_id = 456;
$rating = 4;
$comment = "This is a great product!";
$result = submit_review($review_id, $user_id, $rating, $comment);
echo $result;

?>


<?php
class ReviewSystem {
    private $reviews = array();

    public function __construct($existingReviews = array()) {
        if (!empty($existingReviews)) {
            $this->reviews = $existingReviews;
        }
    }

    // Add a new review
    public function addReview($userId, $rating, $comment) {
        if ($this->isValidRating($rating) && $this->isValidComment($comment)) {
            $review = array(
                'user_id' => $userId,
                'rating' => $rating,
                'comment' => $comment,
                'timestamp' => time()
            );
            array_push($this->reviews, $review);
            return true;
        }
        return false;
    }

    // Validate rating (1-5 stars)
    private function isValidRating($rating) {
        return is_numeric($rating) && $rating >= 1 && $rating <= 5;
    }

    // Validate comment
    private function isValidComment($comment) {
        if (!is_string($comment)) {
            return false;
        }
        if (strlen(trim($comment)) < 5 || strlen(trim($comment)) > 500) { 
            return false; 
        }
        return true;
    }

    // Get average rating
    public function getAverageRating() {
        $total = array_sum(array_column($this->reviews, 'rating'));
        $count = count($this->reviews);
        if ($count == 0) {
            return 0;
        }
        return round($total / $count, 1); 
    }

    // Get all reviews
    public function getAllReviews() {
        return $this->reviews;
    }

    // Display reviews on webpage
    public static function displayReviews($reviewSystem) {
        $average = $reviewSystem->getAverageRating();
        $all_reviews = $reviewSystem->getAllReviews();

        echo "<div class='reviews-container'>";
            echo "<h3>Reviews (Average: {$average}/5)</h3>";
            
            foreach ($all_reviews as $review) {
                echo "<div class='review'>";
                    echo "<div class='user-info'>";
                        echo "User #{$review['user_id']}<br />";
                        echo self::renderStars($review['rating']);
                    echo "</div>";
                    echo "<p class='comment'>{$review['comment']}</p>";
                    echo "<small class='timestamp'>" . date('F j, Y g:i a', $review['timestamp']) . "</small>";
                echo "</div>";
            }
        echo "</div>";
    }

    // Render stars based on rating
    private static function renderStars($rating) {
        $stars = floor($rating);
        $output = '<span class="star">';
        
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $stars) {
                $output .= '★'; 
            } else {
                $output .= '☆';
            }
        }
        
        return $output . '</span>';
    }
}

// Example usage:
$reviews = array(
    array(
        'user_id' => 1,
        'rating' => 4,
        'comment' => "Great product, very satisfied!",
        'timestamp' => time() - 3600
    ),
    array(
        'user_id' => 2,
        'rating' => 5,
        'comment' => "Excellent service and quality!",
        'timestamp' => time() - 7200
    )
);

$reviewSystem = new ReviewSystem($reviews);
ReviewSystem::displayReviews($reviewSystem);
?>


<?php
// Database connection
$host = "localhost";
$user = "username";
$password = "password";
$dbname = "reviews_db";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $username = $row['username'];
            $date = date('d/m/Y', strtotime($row['timestamp']));

            // Display review
            echo "<div class='review'>";
            echo "<h4>$username</h4>";
            echo "<p>Rating: ";
            for ($i = 1; $i <= $rating; $i++) {
                echo "★";
            }
            echo "</p>";
            echo "<p>Comment: $comment</p>";
            echo "<small class='date'>$date</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Function to handle review submission
function submitReview($username, $comment, $rating) {
    global $conn;
    
    // Validate input
    if (empty($comment)) {
        return "Please write a comment!";
    }

    // SQL query to insert new review
    $sql = "INSERT INTO reviews (username, comment, rating, timestamp)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
            
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $comment, $rating);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error: " . $stmt->error;
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $comment = htmlspecialchars($_POST['comment']);
    $rating = $_POST['rating'];

    // Submit review and get result
    $result = submitReview($username, $comment, $rating);

    if ($result === true) {
        echo "<div class='success'>Thank you for your review!</div>";
        header("refresh: 2; url=".$_SERVER["PHP_SELF"]."");
    } else {
        echo "<div class='error'>".$result."</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review-form {
            margin-bottom: 30px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .stars {
            display: flex;
            gap: 5px;
        }

        .star {
            color: gold;
            font-size: 24px;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .date {
            color: #666;
            font-size: 0.8em;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <input type="text" name="username" placeholder="Your Name" required><br><br>
            <textarea name="comment" placeholder="Write your review..." rows="5" cols="50" required></textarea><br><br>
            <div class="stars">
                <input type="radio" id="5" name="rating" value="5">
                <label for="5" class="star">★</label>
                
                <input type="radio" id="4" name="rating" value="4">
                <label for="4" class="star">★</label>
                
                <input type="radio" id="3" name="rating" value="3">
                <label for="3" class="star">★</label>
                
                <input type="radio" id="2" name="rating" value="2">
                <label for="2" class="star">★</label>
                
                <input type="radio" id="1" name="rating" value="1" checked>
                <label for="1" class="star">★</label>
            </div><br><br>
            <input type="submit" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <?php displayReviews(); ?>

    <!-- Close database connection -->
    <?php $conn->close(); ?>
</body>
</html>


<?php
// Function to create or display reviews for a product/service
function user_review($product_id) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Get all reviews for the product
    $reviews_query = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $reviews_query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    // Check if there are any reviews
    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        
        // Calculate average rating
        $average_rating_query = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
        $avg_stmt = mysqli_prepare($conn, $average_rating_query);
        mysqli_stmt_bind_param($avg_stmt, "i", $product_id);
        mysqli_stmt_execute($avg_stmt);
        $avg_result = mysqli_stmt_get_result($avg_stmt);
        $row = mysqli_fetch_assoc($avg_result);
        $average = number_format((float)$row['average'], 1, '.', '');
        
        echo "<div class='average-rating'>";
        echo "Average Rating: $average/5";
        echo "</div>";
        
        // Display each review
        while ($review = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Reviewer: " . htmlspecialchars($review['username']) . "</h3>";
            echo "<p>Rating: ";
            for ($i = 0; $i < $review['rating']; $i++) {
                echo "<span class='star'>★</span>";
            }
            echo "</p>";
            echo "<p>Review: " . htmlspecialchars($review['comment']) . "</p>";
            echo "<p>Date: " . date("F j, Y", strtotime($review['review_date'])) . "</p>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "No reviews yet. Be the first to review this product!";
    }
    
    // Close database connection
    mysqli_close($conn);
}
?>


<?php
$product_id = 1; // Replace with actual product ID
user_review($product_id);
?>


// Function to submit a new review
function submit_review($product_id, $username, $rating, $comment) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Insert new review into database
    $insert_query = "INSERT INTO reviews (product_id, username, rating, comment, review_date) 
                    VALUES (?, ?, ?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $insert_query);
    mysqli_stmt_bind_param($stmt, "isii", $product_id, $username, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
    
    // Close database connection
    mysqli_close($conn);
}
?>


// Function to delete a review
function delete_review($review_id) {
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    $delete_query = "DELETE FROM reviews WHERE review_id = ?";
    $stmt = mysqli_prepare($conn, $delete_query);
    mysqli_stmt_bind_param($stmt, "i", $review_id);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Review deleted successfully!";
    } else {
        echo "Error deleting review: " . mysqli_error($conn);
    }
    
    mysqli_close($conn);
}
?>


<?php
// This script handles both displaying and submitting reviews.

// Initialize variables to hold messages and reviews
$messages = array();
$reviews = array();

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        array_push($messages, "Please fill in all required fields.");
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        array_push($messages, "Please enter a valid email address.");
    } elseif ($rating < 1 || $rating > 5) {
        array_push($messages, "Rating must be between 1 and 5 stars.");
    } else {
        // Store the review
        $review = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );

        // Save review to a file (you can use a database in production)
        $filename = 'reviews.txt';
        if (file_exists($filename)) {
            $content = file_get_contents($filename);
            $reviewsData = json_decode($content, true);
        } else {
            $reviewsData = array();
        }

        // Add new review
        array_unshift($reviewsData, $review);

        // Write back to the file
        if (file_put_contents($filename, json_encode($reviewsData))) {
            array_push($messages, "Thank you for your review!");
        } else {
            array_push($messages, "An error occurred while saving your review.");
        }
    }
}

// Read reviews from file
if (file_exists('reviews.txt')) {
    $content = file_get_contents('reviews.txt');
    $reviewsData = json_decode($content, true);
    
    if (!empty($reviewsData)) {
        $reviews = $reviewsData;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .review-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .message {
            margin-bottom: 20px;
            padding: 10px;
            border-radius: 5px;
        }

        .success {
            background-color: #dff0d8;
            color: #3c763d;
        }

        .error {
            background-color: #f2dede;
            color: #a94442;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }

        .star {
            color: gold;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <?php
    foreach ($messages as $message) {
        if (strpos($message, 'Thank you') === 0) {
            echo "<div class='message success'>$message</div>";
        } else {
            echo "<div class='message error'>$message</div>";
        }
    }
    ?>

    <h1>Product Review System</h1>

    <!-- Review Form -->
    <form class="review-form" method="POST">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="rating-stars">
            <label>Rating:</label><br>
            <?php
            for ($i = 1; $i <= 5; $i++) {
                echo "<input type='radio' name='rating' value='$i'> <span class='star'>★</span>";
            }
            ?>
        </div>

        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows='4' required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    <?php
    foreach ($reviews as $review) {
        echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 10px;'>";
        echo "<p><strong>" . $review['name'] . "</strong> - " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p><em>" . $review['comment'] . "</em></p>";
        echo "<small>Posted on: " . $review['date'] . "</small>";
        echo "</div>";
    }
    ?>
</body>
</html>


<?php
function create_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Validate inputs
        if (!is_numeric($user_id) || $user_id <= 0) {
            throw new Exception("Invalid user ID");
        }

        if (!is_numeric($product_id) || $product_id <= 0) {
            throw new Exception("Invalid product ID");
        }

        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Optional comment
        if ($comment !== null && strlen($comment) > 500) {
            throw new Exception("Comment is too long. Maximum length is 500 characters.");
        }

        // Prepare the SQL statement with placeholders for parameters
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = $conn->prepare($sql);

        if (!$stmt) {
            throw new Exception("Error preparing statement: " . $conn->error);
        }

        // Bind parameters to the prepared statement
        $stmt->bind_param('iids', $user_id, $product_id, $rating, $comment);

        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Error executing statement: " . $stmt->error);
        }

        echo "Review created successfully!";
        return true;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close the connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "This product is excellent!";

create_user_review($user_id, $product_id, $rating, $comment);
?>


<?php
// Connect to the database
$host = "localhost";
$username = "username";
$password = "password";
$database = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user reviews
function user_review() {
    global $conn;

    // Check if the form has been submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize and validate input data
        $user_id = sanitize_string($_POST['user_id']);
        $product_id = sanitize_string($_POST['product_id']);
        $rating = sanitize_string($_POST['rating']);
        $review_title = sanitize_string($_POST['review_title']);
        $review_description = sanitize_string($_POST['review_description']);

        // Check if all required fields are filled
        if ($user_id == "" || $product_id == "" || $rating == "") {
            echo "Please fill in all required fields.";
            return;
        }

        // Store the review in the database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, review_title, review_description, review_date) 
                VALUES ('$user_id', '$product_id', '$rating', '$review_title', '$review_description', NOW())";

        if (!mysqli_query($conn, $sql)) {
            die("Error: " . mysqli_error($conn));
        }

        echo "Thank you for submitting your review!";
    }

    // Display existing reviews
    $product_id = isset($_GET['product_id']) ? sanitize_string($_GET['product_id']) : '';
    
    if ($product_id != '') {
        $sql = "SELECT * FROM reviews WHERE product_id = '$product_id'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            // Display average rating
            $avg_rating_sql = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = '$product_id'";
            $avg_rating_result = mysqli_query($conn, $avg_rating_sql);
            $row = mysqli_fetch_assoc($avg_rating_result);
            $average_rating = number_format($row['avg_rating'], 1);

            echo "<h3>Reviews for Product ID: $product_id</h3>";
            echo "<p>Average Rating: $average_rating/5</p>";

            while ($review_row = mysqli_fetch_assoc($result)) {
                display_review($review_row);
            }
        } else {
            echo "No reviews found for this product.";
        }
    }

    // Display review submission form
    display_review_form();
}

// Helper function to display a single review
function display_review($review) {
    global $conn;
    $user_id = $review['user_id'];
    
    // Get user information (assuming you have a users table)
    $user_sql = "SELECT username FROM users WHERE id = '$user_id'";
    $user_result = mysqli_query($conn, $user_sql);
    $user_row = mysqli_fetch_assoc($user_result);

    echo "<div class='review'>";
    echo "<h4>Review by: " . $user_row['username'] . "</h4>";
    echo "<p><strong>Rating:</strong> " . get_star_rating($review['rating']) . "</p>";
    echo "<p><strong>Title:</strong> " . $review['review_title'] . "</p>";
    echo "<p><strong>Description:</strong> " . $review['review_description'] . "</p>";
    echo "<p><em>Posted on: " . $review['review_date'] . "</em></p>";
    echo "</div>";
}

// Helper function to display review submission form
function display_review_form() {
    global $product_id;
    $product_id = isset($_GET['product_id']) ? sanitize_string($_GET['product_id']) : '';
    
    if ($product_id != '') {
        echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<input type='hidden' name='product_id' value='$product_id'>";
        echo "<div>";
            echo "<label for='user_id'>User ID:</label>";
            echo "<input type='text' id='user_id' name='user_id'>";
        echo "</div>";
        echo "<div>";
            echo "<label for='rating'>Rating (1-5):</label>";
            echo "<input type='number' id='rating' name='rating' min='1' max='5'>";
        echo "</div>";
        echo "<div>";
            echo "<label for='review_title'>Review Title:</label>";
            echo "<input type='text' id='review_title' name='review_title'>";
        echo "</div>";
        echo "<div>";
            echo "<label for='review_description'>Review Description:</label>";
            echo "<textarea id='review_description' name='review_description'></textarea>";
        echo "</div>";
        echo "<button type='submit' name='submit_review'>Submit Review</button>";
        echo "</form>";
    }
}

// Helper function to get star rating
function get_star_rating($rating) {
    $stars = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★ ";
        } else {
            $stars .= "☆ ";
        }
    }
    return $stars;
}

// Helper function to sanitize input strings
function sanitize_string($string) {
    global $conn;
    $string = trim($string);
    $string = mysqli_real_escape_string($conn, $string);
    return $string;
}

// Helper function to sanitize integer inputs
function sanitize_integer($integer) {
    global $conn;
    $integer = intval($integer);
    $integer = mysqli_real_escape_string($conn, $integer);
    return $integer;
}

// Call the user_review function
user_review();

// Close database connection
mysqli_close($conn);
?>


<?php
function submitUserReview($review, $rating) {
    // Validate inputs
    if (!is_string($review) || !ctype_digit((string)$rating)) {
        return false;
    }
    $rating = (int)$rating;
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Database connection details
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'your_database';

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
    if (!$conn) {
        return false;
    }

    // Prepare SQL statement
    $username = $_SESSION['username']; // Ensure user is logged in and session exists
    $date = date('Y-m-d H:i:s');

    $stmt = mysqli_prepare($conn, "INSERT INTO user_reviews (username, review_text, rating, review_date) VALUES (?, ?, ?, ?)");
    if (!$stmt) {
        mysqli_close($conn);
        return false;
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, 'ssii', $username, $review, $rating, $date);

    // Execute statement
    if (!mysqli_stmt_execute($stmt)) {
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return false;
    }

    // Close connections
    mysqli_stmt_close($stmt);
    mysqli_close($conn);

    return true;
}
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'your_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Sanitize the input
    $productId = mysqli_real_escape_string($conn, $productId);
    $userId = mysqli_real_escape_string($conn, $userId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    if ($rating < 1 || $rating > 5) {
        die("Invalid rating. Please choose a rating between 1 and 5.");
    }

    // Insert the review into the database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment)
            VALUES ('$productId', '$userId', '$rating', '$comment')";

    if (!mysqli_query($conn, $sql)) {
        die("Error submitting review: " . mysqli_error($conn));
    }

    echo "Review submitted successfully!";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $userId = $_SESSION['user_id']; // Assuming you have a session for the user
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    submitReview($productId, $userId, $rating, $comment, $conn);
}

// Close the database connection
mysqli_close($conn);
?>


<?php
function displayReviews($productId, $conn) {
    // Retrieve reviews for a specific product
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
                echo "<h4>Rating: " . str_repeat("★", $row['rating']) . "</h4>";
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Submitted by User ID: " . $row['user_id'] . " on " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage:
displayReviews($productId, $conn);

// Close the database connection
mysqli_close($conn);
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_NAME', 'review_system');
define('DB_USER', 'root');
define('DB_PASS', '');

class ReviewSystem {
    private $pdo;

    public function __construct() {
        try {
            $this->pdo = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
            $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }

    // Add a new review
    public function addReview($user_id, $product_id, $rating, $comment) {
        try {
            // Check if the user has already reviewed this product
            $stmt = $this->pdo->prepare("SELECT id FROM reviews WHERE user_id = ? AND product_id = ?");
            $stmt->execute([$user_id, $product_id]);
            
            if ($stmt->rowCount() > 0) {
                return false; // User already reviewed this product
            }

            // Insert the new review
            $stmt = $this->pdo->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
            $stmt->execute([$user_id, $product_id, $rating, $comment]);

            return true;
        } catch (PDOException $e) {
            die("Error adding review: " . $e->getMessage());
        }
    }

    // Display reviews for a product
    public function displayReviews($product_id) {
        try {
            $stmt = $this->pdo->prepare("SELECT r.id, u.username, r.rating, r.comment, r.review_date FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = ? ORDER BY r.review_date DESC");
            $stmt->execute([$product_id]);

            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

            if (empty($reviews)) {
                echo "No reviews yet.";
                return;
            }

            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>By " . htmlspecialchars($review['username']) . "</h3>";
                echo "<p>Rating: " . $this->getStars($review['rating']) . "</p>";
                echo "<p>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
                echo "<small>Posted on: " . date('jS M Y', strtotime($review['review_date'])) . "</small>";
                echo "</div><hr>";
            }
        } catch (PDOException $e) {
            die("Error displaying reviews: " . $e->getMessage());
        }
    }

    // Display average rating for a product
    public function displayAverageRating($product_id) {
        try {
            $stmt = $this->pdo->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = ?");
            $stmt->execute([$product_id]);

            $result = $stmt->fetch(PDO::FETCH_ASSOC);
            $average = round((float)$result['average'], 1);

            if ($average === 0 && $this->getReviewCount($product_id) == 0) {
                echo "No ratings yet.";
                return;
            }

            echo "Average Rating: " . $average . "/5 (" . $this->getStars($average, true) . ")";
        } catch (PDOException $e) {
            die("Error displaying average rating: " . $e->getMessage());
        }
    }

    // Helper function to display stars
    private function getStars($rating, $partial = false) {
        if ($partial) {
            return str_repeat('★', (int)$rating) . (($rating - (int)$rating > 0.5) ? '½' : '');
        } else {
            return str_repeat('★', $rating);
        }
    }

    // Helper function to get review count
    private function getReviewCount($product_id) {
        try {
            $stmt = $this->pdo->prepare("SELECT COUNT(*) as total FROM reviews WHERE product_id = ?");
            $stmt->execute([$product_id]);
            return (int)$stmt->fetch(PDO::FETCH_ASSOC)['total'];
        } catch (PDOException $e) {
            die("Error getting review count: " . $e->getMessage());
        }
    }
}

// Usage example:
$reviewSystem = new ReviewSystem();

// Add a new review
$user_id = 1; // Replace with actual user ID
$product_id = 1; // Replace with actual product ID
$rating = 4;
$comment = "Great product!";

if ($reviewSystem->addReview($user_id, $product_id, $rating, $comment)) {
    echo "Review added successfully!";
} else {
    echo "You have already reviewed this product.";
}

// Display reviews for product ID 1
echo "<h2>Product Reviews:</h2>";
$reviewSystem->displayReviews(1);

// Display average rating for product ID 1
echo "<h3>Average Rating:</h3>";
$reviewSystem->displayAverageRating(1);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    /**
     * Add a new review
     *
     * @param int $user_id The ID of the user writing the review
     * @param int $product_id The ID of the product being reviewed
     * @param int $rating The rating (1-5 stars)
     * @param string $comment The review comment
     * @return array|string Success message or error message
     */
    function add_review($user_id, $product_id, $rating, $comment) {
        global $conn;
        
        // Validate input
        if (!isset($user_id, $product_id, $rating, $comment)) {
            return "Missing parameters";
        }
        
        if (!is_numeric($user_id) || !is_numeric($product_id) || !is_numeric($rating)) {
            return "Invalid numeric value";
        }
        
        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5";
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment)
                               VALUES (:user_id, :product_id, :rating, :comment)");
                               
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        // Execute the query
        if ($stmt->execute()) {
            return "Review added successfully";
        } else {
            return "Error adding review";
        }
    }

    /**
     * Get reviews for a product
     *
     * @param int $product_id The ID of the product to get reviews for
     * @return array|bool An array of reviews or false on failure
     */
    function get_reviews($product_id) {
        global $conn;
        
        // Prepare SQL statement
        $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r 
                               LEFT JOIN users u ON r.user_id = u.id 
                               WHERE product_id = :product_id");
                               
        $stmt->bindParam(':product_id', $product_id);
        
        // Execute the query and fetch results
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * Update a review
     *
     * @param int $review_id The ID of the review to update
     * @param int $rating The new rating (1-5 stars)
     * @param string $comment The new comment
     * @return array|string Success message or error message
     */
    function update_review($review_id, $rating, $comment) {
        global $conn;
        
        // Validate input
        if (!isset($review_id, $rating, $comment)) {
            return "Missing parameters";
        }
        
        if (!is_numeric($review_id) || !is_numeric($rating)) {
            return "Invalid numeric value";
        }
        
        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5";
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("UPDATE reviews 
                               SET rating = :rating, comment = :comment 
                               WHERE id = :review_id");
                               
        $stmt->bindParam(':review_id', $review_id);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        // Execute the query
        if ($stmt->execute()) {
            return "Review updated successfully";
        } else {
            return "Error updating review";
        }
    }

    /**
     * Delete a review
     *
     * @param int $review_id The ID of the review to delete
     * @return array|string Success message or error message
     */
    function delete_review($review_id) {
        global $conn;
        
        // Validate input
        if (!isset($review_id)) {
            return "Missing parameters";
        }
        
        if (!is_numeric($review_id)) {
            return "Invalid numeric value";
        }
        
        // Prepare SQL statement
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id = :review_id");
        $stmt->bindParam(':review_id', $review_id);
        
        // Execute the query
        if ($stmt->execute()) {
            return "Review deleted successfully";
        } else {
            return "Error deleting review";
        }
    }

} catch(PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = add_review(1, 2, 4, "Great product!");
    echo $result;
}

// Get all reviews for product ID 2
$reviews = get_reviews(2);
print_r($reviews);

// Update a review with ID 5
$result = update_review(5, 5, "Excellent quality!");
echo $result;

// Delete review with ID 3
$result = delete_review(3);
echo $result;
?>


<?php
// Function to handle user reviews (add or edit)
function handleUserReview($username, $rating, $comment, $review_id = null) {
    // Check if the user is authenticated
    if (!is_user_authenticated()) {
        return array('error' => 'You must be logged in to post a review.');
    }

    // Validate inputs
    if (empty($username) || !is_string($username)) {
        return array('error' => 'Username is required and must be a string.');
    }

    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return array('error' => 'Rating must be between 1 and 5.');
    }
    $rating = (int)$rating;

    if (!is_string($comment)) {
        return array('error' => 'Comment must be a string.');
    }

    // Connect to the database
    try {
        $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        if ($review_id === null) {
            // Insert a new review
            $sql = "INSERT INTO reviews (username, rating, comment, created_at) VALUES (?, ?, ?, NOW())";
            $stmt = $pdo->prepare($sql);
            $stmt->execute(array($username, $rating, $comment));
        } else {
            // Update an existing review
            $sql = "UPDATE reviews SET username=?, rating=?, comment=? WHERE review_id=?";
            $stmt = $pdo->prepare($sql);
            $stmt->execute(array($username, $rating, $comment, $review_id));
        }

        return array('success' => true);

    } catch(PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return array('error' => 'An error occurred while saving your review.');
    }
}

// Example usage:
// Adding a new review
$result = handleUserReview('john_doe', 4, 'Great product!');
if ($result['success']) {
    echo 'Review added successfully!';
} else {
    echo $result['error'];
}

// Editing an existing review with ID 123
$result = handleUserReview('john_doe', 5, 'Best product ever!', 123);
if ($result['success']) {
    echo 'Review updated successfully!';
} else {
    echo $result['error'];
}
?>


<?php
function submit_review($user_id, $review_text, $rating, $product_service_id, $conn) {
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $rating = (int)$rating;
    $product_service_id = (int)$product_service_id;

    // Validate inputs
    if ($rating < 1 || $rating > 5) {
        return ['error' => 'Rating must be between 1 and 5'];
    }

    if (empty($review_text)) {
        return ['error' => 'Review text cannot be empty'];
    }

    if (empty($user_id)) {
        return ['error' => 'User ID is required'];
    }

    // Prepare SQL query
    $sql = "INSERT INTO reviews (
        user_id, 
        review_text, 
        rating, 
        product_service_id,
        created_at
    ) VALUES (
        '$user_id',
        '$review_text',
        '$rating',
        '$product_service_id',
        NOW()
    )";

    // Check connection and execute query
    if (!$conn || !is_object($conn)) {
        return ['error' => 'Database connection not established'];
    }

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        return ['error' => 'Error submitting review: ' . mysqli_error($conn)];
    }

    // Return success with review ID
    $review_id = mysqli_insert_id($conn);
    return [
        'success' => true,
        'message' => 'Review submitted successfully',
        'review_id' => $review_id
    ];
}

// Example usage:
// Assuming you have a database connection established

$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (mysqli_connect_errno()) {
    die("Connection failed: " . mysqli_connect_error());
}

$user_id = 123;
$review_text = "This product is excellent!";
$rating = 5;
$product_service_id = 456;

$result = submit_review($user_id, $review_text, $rating, $product_service_id, $conn);

if ($result['success']) {
    echo "Review submitted successfully. Review ID: " . $result['review_id'];
} else {
    echo "Error: " . $result['error'];
}

mysqli_close($conn);
?>


define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'review_system');


function handle_review($product_id, $user_id, $rating, $comment, $update = false) {
    try {
        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        if (!$conn) {
            throw new Exception('Connection failed: ' . mysqli_error($conn));
        }

        if ($update) {
            // Update existing review
            $stmt = $conn->prepare("UPDATE reviews SET rating=?, comment=? WHERE user_id=? AND product_id=?");
            $stmt->bind_param('iisi', $rating, $comment, $user_id, $product_id);
        } else {
            // Insert new review
            $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, submission_date) VALUES (?, ?, ?, ?, NOW())");
            $stmt->bind_param('iiis', $user_id, $product_id, $rating, $comment);
        }

        if (!$stmt) {
            throw new Exception('Prepare failed: ' . $conn->error);
        }

        // Execute the statement
        $result = $stmt->execute();
        if ($result === false) {
            throw new Exception('Execute failed: ' . $stmt->error);
        }

        // Close connections
        $stmt->close();
        mysqli_close($conn);

        return true;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}


// Assuming these variables are set from your form or session
$product_id = 123;
$user_id = 456;
$rating = 5;
$comment = "Great product!";

// Check for existing review (example query)
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
$query = "SELECT * FROM reviews WHERE user_id=$user_id AND product_id=$product_id";
$result = mysqli_query($conn, $query);

if ($result && mysqli_num_rows($result) > 0) {
    // Update existing review
    handle_review($product_id, $user_id, $rating, $comment, true);
} else {
    // Insert new review
    handle_review($product_id, $user_id, $rating, $comment);
}
mysqli_close($conn);


<?php
// File: review.php

// Function to handle adding and displaying reviews
function user_reviews() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars($_POST['review_name']);
        $comment = htmlspecialchars($_POST['review_comment']);

        // Validate input
        if (empty($name) || empty($comment)) {
            echo "<p class='error'>Please fill in both name and comment!</p>";
        } else {
            // Load existing reviews from file
            $reviews_file = "reviews.json";
            $reviews_data = array();

            if (file_exists($reviews_file)) {
                $json_data = file_get_contents($reviews_file);
                $reviews_data = json_decode($json_data, true);
            }

            // Add new review with timestamp
            $new_review = array(
                'name' => $name,
                'comment' => $comment,
                'date' => date('Y-m-d H:i:s')
            );

            // Append to reviews data
            $reviews_data[] = $new_review;

            // Save back to file
            $json_output = json_encode($reviews_data, JSON_PRETTY_PRINT);
            file_put_contents($reviews_file, $json_output);

            // Redirect back to the same page to avoid resubmission
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        }
    }

    // Function to display reviews
    function display_reviews() {
        $reviews_file = "reviews.json";
        $output = '';

        if (file_exists($reviews_file)) {
            $json_data = file_get_contents($reviews_file);
            $reviews = json_decode($json_data, true);

            if (!empty($reviews)) {
                foreach ($reviews as $review) {
                    $output .= "<div class='review'>";
                    $output .= "<h3>" . $review['name'] . "</h3>";
                    $output .= "<p>" . $review['comment'] . "</p>";
                    $output .= "<small>Posted on: " . $review['date'] . "</small>";
                    $output .= "</div>";
                }
            } else {
                $output .= "<p>No reviews submitted yet!</p>";
            }
        } else {
            $output .= "<p>No reviews submitted yet!</p>";
        }

        return $output;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: white;
            border-radius: 5px;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="review-container">
        <!-- Review Form -->
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <div class="review-form">
                <h2>Submit Your Review:</h2>
                <input type="text" name="review_name" placeholder="Your Name" required><br><br>
                <textarea name="review_comment" placeholder="Write your review here..." rows="5" required></textarea><br><br>
                <button type="submit">Submit Review</button>
            </div>
        </form>

        <!-- Display Reviews -->
        <?php
        user_reviews();
        echo display_reviews();
        ?>
    </div>
</body>
</html>


<?php
// Function to create a user review
function submit_review($user_id, $product_id, $rating, $comment) {
    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Connect to database
    include 'config.php'; // Include your database configuration

    // Insert review into database
    $stmt = mysqli_prepare($conn, "
        INSERT INTO reviews (user_id, product_id, rating, comment)
        VALUES (?, ?, ?, ?)
    ");
    
    if ($stmt === false) {
        return "Database error: " . mysqli_error($conn);
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);

    // Execute statement
    if (mysqli_stmt_execute($stmt)) {
        // Update product average rating
        $result = mysqli_query($conn, "
            SELECT 
                COUNT(rating) AS total_ratings,
                AVG(rating) AS avg_rating
            FROM reviews
            WHERE product_id = $product_id
        ");
        
        $row = mysqli_fetch_assoc($result);
        $avg_rating = round($row['avg_rating'], 2);

        // Update product table with new average rating
        mysqli_query($conn, "
            UPDATE products 
            SET average_rating = $avg_rating 
            WHERE id = $product_id
        ");

        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_stmt_error($stmt);
    }

    // Close statement and connection
    mysqli_stmt_close($stmt);
    mysqli_close($conn);
}

// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "This is a great product!";

$result = submit_review($user_id, $product_id, $rating, $comment);

echo $result;

?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "reviews_db";

    // Create connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Validate input data
    if (!isset($user_id, $product_id, $rating, $comment)) {
        return false;
    }

    // Sanitize and validate inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }

    // Check if the user has already reviewed this product
    $check_query = "SELECT id FROM reviews WHERE user_id = '$user_id' AND product_id = '$product_id'";
    $result = $conn->query($check_query);

    if ($result->num_rows > 0) {
        return false; // User already reviewed this product
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
    VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        return true; // Review submitted successfully
    } else {
        return false; // Error submitting review
    }

    $conn->close();
}

// Example usage:
$user_id = 1;
$product_id = 123;
$rating = 5;
$comment = "Great product! Highly recommended.";

if (submit_review($user_id, $product_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start for CSRF token
session_start();

// Generate CSRF token if not exists
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
        }
        .review-card {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<?php
// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate CSRF token
    if (empty($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        die("Invalid request");
    }

    $errors = [];
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = trim($_POST['comment']);

    // Validate input
    if (empty($name)) {
        $errors[] = "Name is required";
    } elseif (!preg_match("/^[a-zA-Z ]+$/", $name)) {
        $errors[] = "Invalid name format. Only letters and spaces are allowed.";
    }

    if (empty($email)) {
        $errors[] = "Email is required";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format";
    }

    if ($rating < 1 || $rating > 5) {
        $errors[] = "Rating must be between 1 and 5";
    }

    if (isset($comment) && strlen($comment) > 1000) {
        $errors[] = "Comment exceeds maximum length of 1000 characters";
    }

    // If no errors
    if (empty($errors)) {
        // Sanitize inputs
        $name = htmlspecialchars($name, ENT_QUOTES);
        $email = htmlspecialchars($email, ENT_QUOTES);
        $comment = htmlspecialchars($comment, ENT_QUOTES);

        // Escape special characters for database insertion
        $name_db = mysqli_real_escape_string($conn, $name);
        $email_db = mysqli_real_escape_string($conn, $email);
        $rating_db = mysqli_real_escape_string($conn, $rating);
        $comment_db = mysqli_real_escape_string($conn, $comment);

        // Get current date and time
        $submission_date = date('Y-m-d H:i:s');

        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, rating, comment, submission_date) 
                VALUES ('$name_db', '$email_db', '$rating_db', '$comment_db', '$submission_date')";

        if (mysqli_query($conn, $sql)) {
            echo "<div style='color: green; margin-bottom: 20px;'>Thank you for submitting your review!</div>";
            // Redirect after 3 seconds
            header("Refresh: 3; url=$_SERVER[PHP_SELF]");
            exit();
        } else {
            die("Error: " . mysqli_error($conn));
        }
    } else {
        foreach ($errors as $error) {
            echo "<div style='color: red;'>$error</div>";
        }
    }
}

// Display existing reviews
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review-card'>";
        echo "<h3>" . htmlspecialchars_decode($row['name']) . "</h3>";
        echo "<p><strong>Email:</strong> " . htmlspecialchars_decode($row['email']) . "</p>";
        
        // Display stars
        $rating = intval($row['rating']);
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                echo "<span class='rating-stars'>★</span>";
            } else {
                echo "<span class='rating-stars'>☆</span>";
            }
        }

        echo "<p><strong>Submitted on:</strong> " . $row['submission_date'] . "</p>";
        
        if (!empty($row['comment'])) {
            echo "<p><strong>Comments:</strong></p>";
            echo "<p>" . htmlspecialchars_decode($row['comment']) . "</p>";
        }
        
        echo "</div>";
    }
} else {
    echo "<div style='color: gray;'>No reviews found.</div>";
}

// Close database connection
mysqli_close($conn);
?>

<!-- Review submission form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">

    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required><br>

    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required><br>

    <label for="rating">Rating:</label>
    <select id="rating" name="rating">
        <option value="5">5 Stars</option>
        <option value="4">4 Stars</option>
        <option value="3">3 Stars</option>
        <option value="2">2 Stars</option>
        <option value="1">1 Star</option>
    </select><br>

    <label for="comment">Comments:</label>
    <textarea id="comment" name="comment" rows="4" cols="50"></textarea><br>

    <input type="submit" value="Submit Review">
</form>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Retrieve reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name'], ENT_QUOTES) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['comment'], ENT_QUOTES) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Function to handle review submission
function submit_review() {
    global $conn;
    
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = mysqli_real_escape_string($conn, htmlspecialchars($_POST['name'], ENT_QUOTES));
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, htmlspecialchars($_POST['comment'], ENT_QUOTES));
        
        // Validate input
        if (empty($name) || empty($comment)) {
            echo "<p class='error'>Please fill in all required fields.</p>";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "<p class='error'>Please select a valid rating between 1 and 5 stars.</p>";
            return;
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (name, rating, comment, submission_date)
                VALUES ('$name', '$rating', '$comment', NOW())";
                
        if (!mysqli_query($conn, $sql)) {
            echo "<p class='error'>Error submitting review: " . mysqli_error($conn) . "</p>";
        } else {
            echo "<p class='success'>Thank you for your review!</p>";
            // Redirect to avoid form resubmission
            header("Location: ?submitted=1");
            exit();
        }
    }
}

// Main function to handle reviews
function main() {
    // Check if review was submitted
    if (isset($_GET['submitted'])) {
        echo "<div class='success-message'>Your review has been submitted successfully!</div>";
    }
    
    // Display review form
    echo "<form method='post' action='" . htmlspecialchars($_SERVER['PHP_SELF'], ENT_QUOTES) . "'>";
    echo "<h2>Submit a Review</h2>";
    echo "<div class='form-group'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='name' required>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='rating'>Rating:</label>";
    echo "<select id='rating' name='rating' required>";
    echo "<option value='5'>★ ★ ★ ★ ★</option>";
    echo "<option value='4'>★ ★ ★ ★</option>";
    echo "<option value='3'>★ ★ ★</option>";
    echo "<option value='2'>★ ★</option>";
    echo "<option value='1'>★</option>";
    echo "</select>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='comment'>Comment:</label>";
    echo "<textarea id='comment' name='comment' rows='5' required></textarea>";
    echo "</div>";
    
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
    
    // Display existing reviews
    echo "<h2>Reviews</h2>";
    display_reviews();
}

// Create the reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        rating INT NOT NULL,
        comment TEXT NOT NULL,
        submission_date DATETIME DEFAULT CURRENT_TIMESTAMP
    )";

mysqli_query($conn, $sql);

// Run the main function
main();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Get current timestamp
    $timestamp = time();
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$timestamp')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a specific product
function get_reviews($product_id) {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Example usage:

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_id = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (submit_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Display reviews for a product
$product_id = 1; // Set your product ID here
$reviews = get_reviews($product_id);

if (!empty($reviews)) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<div class='rating'>";
        for ($i = 0; $i < $review['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        echo "</div>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . date('F j, Y', $review['timestamp']) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews available.";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Function to create user review
function create_review($product_id = 0, $user_id = 0, $rating = 0, $comment = '') {
    // Database connection
    try {
        // Get database connection
        $db = get_db_connection();
        
        // Validate inputs
        if (empty($product_id) || empty($user_id)) {
            throw new Exception("Product ID and User ID are required.");
        }
        
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5.");
        }
        
        // Sanitize inputs
        $product_id = intval($product_id);
        $user_id = intval($user_id);
        $rating = intval($rating);
        $comment = htmlspecialchars(trim($comment), ENT_QUOTES, 'UTF-8');
        
        // Prepare SQL statement
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, created_at) 
                VALUES (:product_id, :user_id, :rating, :comment, NOW())";
                
        $stmt = $db->prepare($sql);
        
        // Bind parameters
        $stmt->bindParam(':product_id', $product_id, PDO::PARAM_INT);
        $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
        $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
        $stmt->bindParam(':comment', $comment, PDO::PARAM_STR);
        
        // Execute query
        if ($stmt->execute()) {
            return true;
        } else {
            throw new Exception("Error submitting review.");
        }
    } catch (Exception $e) {
        // Handle error
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Helper function to get database connection
function get_db_connection() {
    try {
        $host = DB_HOST;
        $username = DB_USERNAME;
        $password = DB_PASSWORD;
        $dbname = DB_NAME;
        
        $db = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $db;
    } catch (PDOException $e) {
        throw new Exception("Connection failed: " . $e->getMessage());
    }
}
?>


// Example usage:
$review_result = create_review(
    $product_id = 5,
    $user_id = 10,
    $rating = 4,
    $comment = "This is a great product!"
);

if ($review_result) {
    echo "Review submitted successfully!";
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Connect to database
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

function display_reviews($product_id) {
    global $conn;
    
    // Fetch reviews from database
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC");
    $stmt->execute([$product_id]);
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (empty($reviews)) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        // Display each review
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
        echo "<p><em>Posted on " . date('F j, Y', strtotime($review['review_date'])) . "</em></p>";
        echo "<div class='stars'>";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

function submit_review($product_id) {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate input data
        $name = trim($_POST['name']);
        $email = trim($_POST['email']);
        $rating = $_POST['rating'];
        $comment = trim($_POST['comment']);
        
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("All fields are required!");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format!");
        }
        
        // Insert review into database
        $stmt = $conn->prepare("
            INSERT INTO reviews (product_id, name, email, rating, comment)
            VALUES (:product_id, :name, :email, :rating, :comment)
        ");
        try {
            $stmt->execute([
                'product_id' => $product_id,
                'name' => $name,
                'email' => $email,
                'rating' => $rating,
                'comment' => $comment
            ]);
            
            // Show success message
            echo "Thank you for your review!";
        } catch(PDOException $e) {
            die("Error submitting review: " . $e->getMessage());
        }
    }
}

// Example usage:
$product_id = 1; // Replace with actual product ID

if (isset($_POST['submit_review'])) {
    submit_review($product_id);
} else {
    display_reviews($product_id);
}
?>


<?php
// Function to handle review submissions
function submit_review($name, $review) {
    // Connect to database (replace with your database credentials)
    $db_host = "localhost";
    $db_user = "username";
    $db_pass = "password";
    $db_name = "reviews";

    // Create connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize inputs to prevent SQL injection
    $name = $conn->real_escape_string($name);
    $review = $conn->real_escape_string($review);

    // Get current timestamp
    $timestamp = time();

    // Insert review into database
    $sql = "INSERT INTO reviews (name, review, timestamp) 
            VALUES ('$name', '$review', '$timestamp')";

    if ($conn->query($sql) === TRUE) {
        echo "Review submitted successfully!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close connection
    $conn->close();
}

// Function to display reviews
function display_reviews() {
    // Connect to database (replace with your database credentials)
    $db_host = "localhost";
    $db_user = "username";
    $db_pass = "password";
    $db_name = "reviews";

    // Create connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Query to retrieve reviews in descending order of submission
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . $row["name"] . "</h3>";
            echo "<p>" . $row["review"] . "</p>";
            echo "<small>Posted on: " . date('F j, Y g:i a', $row["timestamp"]) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }

    // Close connection
    $conn->close();
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT users.username, reviews.review_text, reviews.rating, reviews.review_date 
            FROM reviews 
            JOIN users ON reviews.user_id = users.user_id 
            ORDER BY review_date DESC";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Display average rating
        $average_rating = calculate_average_rating();
        echo "<h3>Overall Rating: " . number_format($average_rating, 1) . "/5</h3>";
        
        // Display each review
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>Written by: " . $row["username"] . "</h4>";
            echo "<p>" . $row["review_text"] . "</p>";
            display_stars($row["rating"]);
            echo "<small>Posted on: " . date('F j, Y', strtotime($row["review_date"])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available yet.";
    }
}

// Function to calculate average rating
function calculate_average_rating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    return $row["average"];
}

// Function to display stars based on rating
function display_stars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo "<span class='star'>★</span>";
        } else {
            echo "<span class='star'>☆</span>";
        }
    }
}

// Function to handle review submission
function submit_review($user_id, $review_text, $rating) {
    global $conn;
    
    // Validate input
    if (empty($review_text) || !isset($rating)) {
        return "Please fill in all required fields.";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, review_text, rating, review_date)
            VALUES (?, ?, ?, NOW())";
            
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iss", $user_id, $review_text, $rating);
    
    if ($stmt->execute()) {
        return "Thank you for submitting your review!";
    } else {
        return "Error: " . $stmt->error;
    }
}

// Close database connection
$conn->close();
?>


<?php
// On your product/service page:
display_reviews();

// After form submission:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submit_review($_SESSION['user_id'], $_POST['review_text'], $_POST['rating']);
    echo $result;
}
?>


<?php
function submitReview($userId, $productId, $rating, $comment) {
    // Validate input
    if (empty($userId) || empty($productId) || empty($rating)) {
        return array('status' => 'error', 'message' => 'All fields are required');
    }

    try {
        // Database connection parameters
        $host = 'localhost';
        $dbUsername = 'root';
        $dbPassword = '';
        $dbName = 'reviews_db';

        // Create database connection
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception('Database connection failed: ' . $conn->connect_error);
        }

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception('Error preparing statement: ' . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return array(
                'status' => 'success',
                'message' => 'Review submitted successfully',
                'review' => array(
                    'user_id' => $userId,
                    'product_id' => $productId,
                    'rating' => $rating,
                    'comment' => $comment,
                    'review_date' => date('Y-m-d H:i:s')
                )
            );
        } else {
            return array('status' => 'error', 'message' => 'Error submitting review: ' . $stmt->error);
        }

        // Close database connection
        $conn->close();
    } catch (Exception $e) {
        return array('status' => 'error', 'message' => $e->getMessage());
    }
}

// Example usage:
$reviewData = submitReview(1, 5, 4, "Great product! It works perfectly.");
print_r($reviewData);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a new review
function addReview($userId, $productId, $comment, $rating) {
    global $conn;
    
    try {
        // Check if the user has already reviewed this product
        $checkStmt = $conn->prepare("SELECT id FROM reviews WHERE user_id = ? AND product_id = ?");
        $checkStmt->execute([$userId, $productId]);
        
        if ($checkStmt->rowCount() > 0) {
            return false; // User already reviewed this product
        }
        
        // Insert new review into the database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, comment, rating, created_at) 
                              VALUES (?, ?, ?, ?, NOW())");
        $result = $stmt->execute([$userId, $productId, $comment, $rating]);
        
        return $result;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        // Get reviews and user details
        $stmt = $conn->prepare("SELECT r.id, u.username, r.comment, r.rating, 
                                DATE_FORMAT(r.created_at, '%M %d, %Y') AS created_date
                              FROM reviews r
                              JOIN users u ON r.user_id = u.id
                              WHERE r.product_id = ?
                              ORDER BY r.created_at DESC");
        $stmt->execute([$productId]);
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) AS average_rating FROM reviews WHERE product_id = ?");
        $stmt->execute([$productId]);
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return $result['average_rating'] ? number_format($result['average_rating'], 1, '.', '') : 0;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Assuming user is logged in and we have their ID
    $userId = 1; // Replace with actual user ID
    $productId = 1; // Replace with actual product ID
    $comment = $_POST['comment'];
    $rating = intval($_POST['rating']);
    
    if ($rating < 1 || $rating > 5) {
        die("Invalid rating value");
    }
    
    addReview($userId, $productId, $comment, $rating);
}

// Display reviews
$productId = 1; // Replace with actual product ID
$reviews = getReviews($productId);

if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>By " . $review['username'] . "</h3>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<div class='rating'>Rating: " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "</div>";
        echo "<small>Posted on " . $review['created_date'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
$averageRating = getAverageRating($productId);
echo "<div class='average-rating'>Average Rating: " . str_repeat("★", intval($averageRating)) . str_repeat("☆", 5 - intval($averageRating)) . " ($averageRating)</div>";
?>


<?php
function handleUserReview($userId, $productId, $rating, $comment, $db) {
    // Check if the user has already reviewed this product
    $checkQuery = "SELECT review_id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = $db->prepare($checkQuery);
    $stmt->execute([$userId, $productId]);
    
    if ($stmt->rowCount() > 0) {
        return ["status" => "error", "message" => "You have already reviewed this product."];
    }

    // Insert the new review
    $insertQuery = "
        INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
        VALUES (?, ?, ?, ?, NOW())
    ";
    
    $stmt = $db->prepare($insertQuery);
    try {
        $stmt->execute([$userId, $productId, $rating, $comment]);
        return ["status" => "success", "message" => "Review added successfully."];
    } catch (PDOException $e) {
        return ["status" => "error", "message" => "Error adding review: " . $e->getMessage()];
    }
}

function fetchProductReviews($productId, $db) {
    // Fetch all reviews for a product
    $reviewsQuery = "
        SELECT 
            r.review_id,
            u.user_name,
            r.rating,
            r.comment,
            r.created_at
        FROM reviews r
        JOIN users u ON r.user_id = u.user_id
        WHERE r.product_id = ? AND r.status = 'active'
        ORDER BY r.created_at DESC
    ";
    
    $stmt = $db->prepare($reviewsQuery);
    $stmt->execute([$productId]);
    
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

function calculateAverageRating($productId, $db) {
    // Calculate average rating for a product
    $avgQuery = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = ? AND status = 'active'";
    $stmt = $db->prepare($avgQuery);
    $stmt->execute([$productId]);
    
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    return $result['average_rating'] ?: 0;
}

// Example usage:
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');

// Add a review
$reviewResult = handleUserReview(1, 5, 4, "Great product!", $db);
echo "<pre>";
print_r($reviewResult);
echo "</pre>";

// Fetch reviews for product ID 5
$reviews = fetchProductReviews(5, $db);
echo "<pre>";
print_r($reviews);
echo "</pre>";

// Get average rating for product ID 5
$averageRating = calculateAverageRating(5, $db);
echo "Average Rating: $averageRating";
?>


Array
(
    [status] => success
    [message] => Review added successfully.
)


Array
(
    [0] => Array
        (
            [review_id] => 1
            [user_name] => JohnDoe
            [rating] => 4
            [comment] => Great product!
            [created_at] => 2023-07-05 12:34:56
        )
    // ... more reviews ...
)


Average Rating: 4.2


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to add a new review
function addReview($name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags($name));
    $email = htmlspecialchars(strip_tags($email));
    $comment = htmlspecialchars(strip_tags($comment));

    // Check for empty fields
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return 'Please fill in all required fields';
    }

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment, submission_date) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("ssis", $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        return 'Review submitted successfully!';
    } else {
        return 'Error submitting review: ' . $conn->error;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    // Query all reviews from database
    $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review with user details and formatted rating stars
            echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($row['name']) . '</h3>';
            echo '<p>Submitted on: ' . $row['submission_date'] . '</p>';
            echo '<p>Email: ' . substr(htmlspecialchars($row['email']), 0, 3) . '***' . substr(htmlspecialchars($row['email']), strpos(htmlspecialchars($row['email']), '@')) . '</p>';
            echo '<div class="rating">';
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            echo '</div>';
            echo '<p>' . htmlspecialchars($row['comment']) . '</p>';
            echo '</div>';
        }
    } else {
        echo 'No reviews found.';
    }
}

// Handle form submission
if (isset($_POST['submit'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Add review to database and display message
    $message = addReview($name, $email, $rating, $comment, $conn);
    echo '<div class="message">' . $message . '</div>';
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
        }
        .rating {
            display: inline-block;
            font-size: 24px;
            color: gold;
        }
        .message {
            color: green;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>Submit a Review</h1>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="name" placeholder="Your Name" required><br><br>
        <input type="email" name="email" placeholder="Your Email" required><br><br>
        <label>Rating:</label><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br><br>
        <textarea name="comment" placeholder="Your Review" required></textarea><br><br>
        <input type="submit" name="submit" value="Submit Review">
    </form>

    <h2>Reviews</h2>
    <?php
    // Reopen database connection for display function
    $conn = mysqli_connect($host, $username, $password, $dbname);
    if (!$conn) {
        die('Connection failed: ' . mysqli_connect_error());
    }
    displayReviews($conn);
    $conn->close();
    ?>
</body>
</html>


<?php
// Database connection settings
$host = "localhost";
$username = "root";
$password = "";
$database = "reviews";

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle and display reviews
function user_review_system() {
    global $conn;

    // Insert new review if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review = mysqli_real_escape_string($conn, $_POST['review']);
        $rating = intval($_POST['rating']);

        // Validate input
        if ($rating < 1 || $rating > 5) {
            echo "Invalid rating. Please select a rating between 1 and 5.";
        } elseif (empty($name) || empty($review)) {
            echo "Please fill in all fields.";
        } else {
            // Insert review into database
            $sql = "INSERT INTO reviews (name, review, rating, date)
                    VALUES ('$name', '$review', '$rating', NOW())";
            
            if (!mysqli_query($conn, $sql)) {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Fetch all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);

    // Display review form and existing reviews
    ?>
    
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <h3>Leave a Review:</h3>
        <p>Name:<br>
            <input type="text" name="name" required>
        </p>
        <p>Rating (1-5):<br>
            <select name="rating" required>
                <option value="">Select Rating</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
            </select>
        </p>
        <p>Review:<br>
            <textarea name="review" rows="5" cols="40" required></textarea>
        </p>
        <input type="submit" value="Submit Review">
    </form>

    <?php if (mysqli_num_rows($result) > 0): ?>
        <h3>Existing Reviews:</h3>
        <div class="reviews">
            <?php while ($row = mysqli_fetch_assoc($result)): ?>
                <div class="review">
                    <p><strong><?php echo $row['name']; ?></strong></p>
                    <p>Rating: <?php 
                        // Display stars for rating
                        $stars = min(5, max(0, (int)$row['rating']));
                        for ($i = 1; $i <= $stars; $i++) {
                            echo "★";
                        }
                        for ($i = $stars + 1; $i <= 5; $i++) {
                            echo "☆";
                        }
                    ?></p>
                    <p><?php echo $row['review']; ?></p>
                    <p><em>Posted on <?php echo date('F j, Y', strtotime($row['date'])); ?></em></p>
                </div>
            <?php endwhile; ?>
        </div>

        // Display average rating
        $average_rating = mysqli_fetch_assoc(mysqli_query($conn, "SELECT AVG(rating) as average FROM reviews"));
        $average_rating = round($average_rating['average'], 1);
        echo "<h4>Average Rating: $average_rating/5</h4>";
    <?php endif; ?>
    
<?php
}

// Call the function
user_review_system();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection parameters
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Validate input
    if (!isset($rating) || !isset($comment)) {
        throw new Exception("Rating and comment are required.");
    }
    
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5.");
    }

    // Sanitize input
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment), ENT_QUOTES, 'UTF-8');

    // Insert review into database
    $stmt = $conn->prepare("
        INSERT INTO reviews (product_id, user_id, rating, comment, created_at)
        VALUES (:productId, :userId, :rating, :comment, NOW())
    ");
    
    $stmt->bindParam(':productId', $productId);
    $stmt->bindParam(':userId', $userId);
    $stmt->bindParam(':rating', $rating);
    $stmt->bindParam(':comment', $comment);

    try {
        $stmt->execute();
        return true;
    } catch(PDOException $e) {
        error_log("Error submitting review: " . $e->getMessage());
        throw new Exception("Failed to submit review.");
    }
}

// Function to display reviews for a product
function displayReviews($productId, $conn) {
    // Fetch reviews from database
    $stmt = $conn->prepare("
        SELECT 
            r.id AS review_id,
            u.username,
            r.rating,
            r.comment,
            DATE_FORMAT(r.created_at, '%M %d, %Y') AS created_date
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        WHERE r.product_id = :productId
        ORDER BY r.created_at DESC
    ");
    
    $stmt->bindParam(':productId', $productId);
    $stmt->execute();
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Display reviews
    if (empty($reviews)) {
        echo "<div class='no-reviews'>No reviews yet.</div>";
        return;
    }

    foreach ($reviews as $review) {
        $username = $review['username'] ?? 'Anonymous';
        $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
        
        echo <<<HTML
        <div class="review">
            <div class="review-header">
                <span class="username">$username</span>
                <div class="stars">$stars</div>
            </div>
            <p class="comment">{$review['comment']}</p>
            <small class="date">{$review['created_date']}</small>
        </div>
HTML;
    }
}

// Example usage:
// Assuming a product ID and user ID are available
$product_id = 1; // Replace with actual product ID
$user_id = 1;    // Replace with actual user ID

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        submitReview($product_id, $user_id, $_POST['rating'], $_POST['comment'], $conn);
        header("Location: product.php?id=$product_id");
        exit;
    } catch(Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Display existing reviews
displayReviews($product_id, $conn);

// Close database connection
$conn = null;
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["user_name"]) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row["rating"]) . "</p>";
            echo "<p>" . htmlspecialchars($row["comment"]) . "</p>";
            echo "<small>Posted on: " . $row["timestamp"] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }
}

// Function to add a new review
function add_review($user_name, $comment, $rating) {
    global $conn;
    
    // Sanitize inputs
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    $rating = intval($rating);

    // Check if fields are not empty
    if ($user_name == "" || $comment == "" || $rating == 0) {
        return "Please fill in all required fields.";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, comment, rating)
    VALUES (?, ?, ?)";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssi", $user_name, $comment, $rating);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Function to calculate average rating
function get_average_rating() {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return number_format((float)$row["average"], 1, '.', '');
    } else {
        return "No ratings yet.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle review submission
function submitReview($user_name, $user_email, $review_text, $rating, $conn) {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $user_email = mysqli_real_escape_string($conn, htmlspecialchars($user_email));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, review_text, rating, review_date)
            VALUES ('$user_name', '$user_email', '$review_text', '$rating', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["user_name"]) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row["user_email"]) . "</p>";
            echo "<p>Rating: " . $row["rating"] . "/5</p>";
            echo "<p>Review: " . htmlspecialchars($row["review_text"]) . "</p>";
            echo "<p>Date: " . $row["review_date"] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include 'review_functions.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $user_email = $_POST['user_email'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];

    if (submitReview($user_name, $user_email, $review_text, $rating, $conn)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Redirect back to the reviews page after submission
header("Location: reviews.php");
exit();
?>


<?php
include 'review_functions.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php displayReviews($conn); ?>
</body>
</html>


<?php
// Review handling and display functions

function submitReview() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = $_POST['rating'];
        $comment = htmlspecialchars($_POST['comment']);
        
        // Validate input
        $errors = array();
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            $errors[] = "All fields must be filled out!";
        }
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Invalid email format!";
        }
        if ($rating < 1 || $rating > 5) {
            $errors[] = "Rating must be between 1 and 5!";
        }
        
        if (empty($errors)) {
            // Store review in a file
            $review = array(
                'name' => $name,
                'email' => $email,
                'rating' => $rating,
                'comment' => $comment,
                'date' => date('Y-m-d H:i:s')
            );
            
            $reviews = array();
            if (file_exists('reviews.txt')) {
                $reviews = unserialize(file_get_contents('reviews.txt'));
            }
            $reviews[] = $review;
            file_put_contents('reviews.txt', serialize($reviews));
            
            // Redirect to thank you page
            header("Location: thanks.php");
            exit();
        } else {
            foreach ($errors as $error) {
                echo "<p class='error'>$error</p>";
            }
        }
    }
    
    // Display review form
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name">
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email">
        </div>
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Select a rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment"></textarea>
        </div>
        <button type="submit">Submit Review</button>
    </form>
<?php
}

function displayReviews() {
    $averageRating = 0;
    $totalRatings = 0;
    
    if (file_exists('reviews.txt')) {
        $reviews = unserialize(file_get_contents('reviews.txt'));
        
        // Calculate average rating
        foreach ($reviews as $review) {
            $totalRatings += $review['rating'];
        }
        $averageRating = $totalRatings / count($reviews);
        
        // Display reviews
        echo "<h2>Customer Reviews</h2>";
        echo "<p>Average Rating: " . number_format($averageRating, 1) . " out of 5</p>";
        
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>" . $review['name'] . "</h3>";
            echo "<p>Rating: " . $review['rating'] . "/5</p>";
            displayStars($review['rating']);
            echo "<p>" . $review['comment'] . "</p>";
            echo "<small>Posted on " . $review['date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

function displayStars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo "<img src='star-filled.png' alt='*'>";
        } else {
            echo "<img src='star-empty.png' alt='*'>";
        }
    }
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create review table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT(6),
    product_id INT(6),
    rating INT(2),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Create votes table if not exists
$sql = "CREATE TABLE IF NOT EXISTS review_votes (
    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT(6),
    review_id INT(6),
    vote_type ENUM('up', 'down'),
    voted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submitReview($conn, $userId, $productId, $rating, $comment) {
    // Check if user has already reviewed this product
    $checkQuery = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ii", $userId, $productId);
    mysqli_stmt_execute($stmt);
    
    if (mysqli_stmt_fetch($stmt)) {
        return false; // User already reviewed
    }
    
    $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                    VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to vote on a review
function voteOnReview($conn, $userId, $reviewId, $voteType) {
    // Check if user has already voted on this review
    $checkQuery = "SELECT id FROM review_votes WHERE user_id = ? AND review_id = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, "ii", $userId, $reviewId);
    mysqli_stmt_execute($stmt);
    
    if (mysqli_stmt_fetch($stmt)) {
        return false; // User already voted
    }
    
    $insertQuery = "INSERT INTO review_votes (user_id, review_id, vote_type) 
                    VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "iis", $userId, $reviewId, $voteType);
    
    if (mysqli_stmt_execute($stmt)) {
        // Update review votes
        $updateQuery = "UPDATE reviews SET upvotes = upvotes + 
            CASE WHEN vote_type = 'up' THEN 1 ELSE -1 END 
            WHERE id = ?";
        $stmtUpdate = mysqli_prepare($conn, $updateQuery);
        mysqli_stmt_bind_param($stmtUpdate, "i", $reviewId);
        mysqli_stmt_execute($stmtUpdate);
        
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($conn, $productId) {
    $sql = "SELECT r.*, 
           (SELECT COUNT(*) FROM review_votes WHERE review_id = r.id AND vote_type = 'up') AS upvotes,
           (SELECT COUNT(*) FROM review_votes WHERE review_id = r.id AND vote_type = 'down') AS downvotes
           FROM reviews r 
           WHERE r.product_id = ?
           ORDER BY r.rating DESC";
    
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>Review by: " . $row['user_id'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>Comment: " . $row['comment'] . "</p>";
        echo "<div class='votes'>";
        echo "<button onclick='voteReview(" . $row['id'] . ", \"up\")'>↑ Upvote</button>";
        echo "<span>" . $row['upvotes'] . "</span>";
        echo "<button onclick='voteReview(" . $row['id'] . ", \"down\")'>↓ Downvote</button>";
        echo "</div>";
        echo "<p>Posted on: " . $row['created_at'] . "</p>";
        echo "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Retrieve reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $author = htmlspecialchars($row['author']);
            $rating = intval($row['rating']);
            $review_text = htmlspecialchars($row['review_text']);
            $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));

            // Display review
            echo "<div class='review'>";
            echo "<h3>Review by $author</h3>";
            echo "<p class='rating'>Rating: ";
            for ($i = 0; $i < $rating; $i++) {
                echo "★";
            }
            for ($i = $rating; $i < 5; $i++) {
                echo "☆";
            }
            echo "</p>";
            echo "<p>$review_text</p>";
            echo "<p class='timestamp'>Posted on: $timestamp</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Function to handle review submission
function submit_review() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get and sanitize input data
        $author = mysqli_real_escape_string($conn, htmlspecialchars($_POST['author']));
        $rating = intval($_POST['rating']);
        $review_text = mysqli_real_escape_string($conn, htmlspecialchars($_POST['review_text']));

        // Validate inputs
        if (empty($author) || empty($review_text)) {
            echo "<p class='error'>Please fill in all required fields!</p>";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "<p class='error'>Invalid rating. Please select a rating between 1 and 5 stars.</p>";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (author, rating, review_text) VALUES ('$author', '$rating', '$review_text')";
        
        if (mysqli_query($conn, $sql)) {
            echo "<p class='success'>Thank you for submitting your review!</p>";
        } else {
            echo "<p class='error'>Error: " . mysqli_error($conn) . "</p>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection (replace with your actual connection details)
$host = 'localhost';
$user = 'username';
$pass = 'password';
$dbname = 'reviews';

$conn = new mysqli($host, $user, $pass, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Function to handle review submission
function submitReview($name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = sanitizeInput($name);
    $email = sanitizeInput($email);
    $rating = intval($rating);
    $comment = sanitizeInput($comment);

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Insert into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, review_date)
            VALUES (?, ?, ?, ?, NOW())";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ssis", $name, $email, $rating, $comment);
        $stmt->execute();
        $stmt->close();
        return "Review submitted successfully!";
    } else {
        return "Error: " . $conn->error;
    }
}

// Function to get reviews
function getReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to calculate average rating
function getAverageRating($conn) {
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    if ($row['average'] > 0) {
        return round($row['average'], 1);
    } else {
        return 0;
    }
}

// Function to display stars
function displayStars($rating) {
    $stars = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= '<span class="star filled">★</span>';
        } else {
            $stars .= '<span class="star empty">☆</span>';
        }
    }
    return $stars;
}

// Function to display reviews
function displayReview($review) {
    echo "<div class='review'>";
    echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
    echo "<p class='date'>" . $review['review_date'] . "</p>";
    echo displayStars($review['rating']);
    echo "<p class='comment'>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
    echo "</div>";
}
?>


<!DOCTYPE html>
<html>
<head>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .star {
            font-size: 24px;
            margin-right: 5px;
        }
        .filled { color: gold; }
        .empty { color: #ccc; }
    </style>
</head>
<body>

<?php
// Show review form if user is submitting
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $message = submitReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment'], $conn);
    echo "<p>$message</p>";
}

// Display average rating
$averageRating = getAverageRating($conn);
echo "<h2>Reviews (Average: $averageRating)</h2>";

// Display all reviews
$result = getReviews($conn);
if ($result) {
    while ($row = $result->fetch_assoc()) {
        displayReview($row);
    }
}
?>

<!-- Review submission form -->
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required>
    </div>
    
    <div>
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required>
    </div>
    
    <div>
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Choose rating</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </select>
    </div>
    
    <div>
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" required></textarea>
    </div>
    
    <input type="submit" value="Submit Review">
</form>

<?php
$conn->close();
?>

</body>
</html>


<?php
// Include configuration file
require_once 'config.php';

function add_user_review($user_id, $product_id, $rating, $comment) {
    try {
        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if (!$conn) {
            throw new Exception("Could not connect to the database");
        }
        
        // Sanitize inputs
        $user_id = mysqli_real_escape_string($conn, $user_id);
        $product_id = mysqli_real_escape_string($conn, $product_id);
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, $comment);
        
        // Validate rating (assuming ratings are between 1 and 5)
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating value. Please choose a rating between 1 and 5.");
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews 
                (user_id, product_id, rating, comment) 
                VALUES ('$user_id', '$product_id', '$rating', '$comment')";
                
        if (!mysqli_query($conn, $sql)) {
            throw new Exception("Error adding review: " . mysqli_error($conn));
        }
        
        // Get the inserted review ID
        $review_id = mysqli_insert_id($conn);
        
        // Close database connection
        mysqli_close($conn);
        
        return array(
            'status' => 'success',
            'message' => 'Review added successfully!',
            'review_id' => $review_id
        );
        
    } catch (Exception $e) {
        // Handle exceptions and errors
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = add_user_review($user_id, $product_id, $rating, $comment);
    
    if ($result['status'] == 'success') {
        echo "Review added successfully! Review ID: " . $result['review_id'];
    } else {
        echo "Error adding review: " . $result['message'];
    }
}

// Helper function to update product rating based on new review
function update_product_rating($product_id) {
    try {
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if (!$conn) {
            throw new Exception("Could not connect to the database");
        }
        
        // Calculate average rating for the product
        $sql = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = '$product_id'";
        $result = mysqli_query($conn, $sql);
        
        if (!$result) {
            throw new Exception("Error calculating average rating: " . mysqli_error($conn));
        }
        
        $row = mysqli_fetch_assoc($result);
        $avg_rating = number_format($row['avg_rating'], 1, '.', '');
        
        // Update product's average rating
        $update_sql = "UPDATE products SET avg_rating = '$avg_rating' WHERE product_id = '$product_id'";
        if (!mysqli_query($conn, $update_sql)) {
            throw new Exception("Error updating product rating: " . mysqli_error($conn));
        }
        
        // Close connection
        mysqli_close($conn);
        
    } catch (Exception $e) {
        // Handle exceptions and errors
        echo "Error updating product rating: " . $e->getMessage();
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$dbname = 'reviews_db'; // Change to your database name

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    // Validate required fields
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("All fields are required.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Validate rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5.");
    }

    // Insert review into the database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, submission_date)
            VALUES ('$name', '$email', $rating, '$comment', NOW())";

    if ($conn->query($sql) === TRUE) {
        echo "<p style='color: green;'>Thank you for your review!</p>";
    } else {
        die("Error: " . $sql . "<br>" . $conn->error);
    }
}

// Retrieve all reviews from the database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = $conn->query($sql);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .rating-stars {
            display: flex;
            gap: 5px;
            margin: 10px 0;
        }
        .review-item {
            background-color: #f9f9f9;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        h3, h4 {
            color: #333;
            margin-top: 0;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select><br><br>

            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5" required></textarea><br><br>

            <input type="submit" value="Submit Review">
        </form>
    </div>

    <!-- Display Existing Reviews -->
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class=\"review-item\">";
            echo "<h3>By " . htmlspecialchars($row["user_name"]) . "</h3>";
            echo "<p>Submitted on: " . $row["submission_date"] . "</p>";

            // Display rating stars
            echo "<div class=\"rating-stars\">";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span style='color: gold;'>★</span>";
                } else {
                    echo "<span>☆</span>";
                }
            }
            echo "</div>";

            echo "<p>" . htmlspecialchars($row["comment"]) . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
    $conn->close();
    ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255),
    product_id INT,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    approved BOOLEAN DEFAULT FALSE
)";

mysqli_query($conn, $sql);

// Function to add a new review
function addReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose between 1 and 5 stars.";
    }
    
    if (strlen($comment) == 0 || strlen($comment) > 1000) {
        return "Comment must be between 1 and 1000 characters.";
    }
    
    // Escape special characters
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        return "Review added successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to get reviews for a product
function getProductReviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    
    $result = mysqli_query($conn, $sql);
    $reviews = array();
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as total, AVG(rating) as average 
            FROM reviews WHERE product_id = $product_id";
    
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['total'] == 0) {
        return 0;
    } else {
        return number_format((float)$row['average'], 1, '.', '');
    }
}

// Function to delete a review
function deleteReview($review_id) {
    global $conn;
    
    $sql = "DELETE FROM reviews WHERE id = $review_id";
    
    if (mysqli_query($conn, $sql)) {
        return "Review deleted successfully!";
    } else {
        return "Error deleting review: " . mysqli_error($conn);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $result = addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);
    echo $result;
}

// Get and display reviews for product ID 1
$reviews = getProductReviews(1);
foreach ($reviews as $review) {
    echo "<div>";
    echo "<p>Rating: " . $review['rating'] . "/5</p>";
    echo "<p>Comment: " . $review['comment'] . "</p>";
    echo "<small>Posted on: " . $review['review_date'] . "</small>";
    echo "</div>";
}

// Display average rating
$average_rating = getAverageRating(1);
echo "<h3>Average Rating: $average_rating/5</h3>";
?>


<?php
function userReview($action = 'display', $reviewData = array()) {
    // File path to store reviews (make sure this directory is writable)
    $reviewsFile = 'user_reviews.txt';

    switch ($action) {
        case 'submit':
            if (!empty($reviewData)) {
                // Validate and sanitize input
                $username = htmlspecialchars(trim($reviewData['username']));
                $review = htmlspecialchars(trim($reviewData['review']));
                $rating = intval($reviewData['rating']);

                // Check if rating is valid (1-5 stars)
                if ($rating < 1 || $rating > 5) {
                    return 'Invalid rating. Please choose a rating between 1 and 5.';
                }

                // Create a review entry
                $reviewEntry = serialize(array(
                    'username' => $username,
                    'review'   => $review,
                    'rating'   => $rating,
                    'date'     => date('Y-m-d H:i:s')
                ));

                // Append review to file
                $fileHandle = fopen($reviewsFile, 'a');
                if ($fileHandle) {
                    fwrite($fileHandle, $reviewEntry . "
");
                    fclose($fileHandle);
                    return 'Thank you for your review!';
                } else {
                    return 'Error saving review. Please try again later.';
                }
            }
            break;

        case 'display':
            // Read reviews from file
            if (file_exists($reviewsFile)) {
                $reviews = array();
                $fileHandle = fopen($reviewsFile, 'r');
                while (($line = fgets($fileHandle)) !== false) {
                    $reviewEntry = unserialize($line);
                    if ($reviewEntry !== false && is_array($reviewEntry)) {
                        $reviews[] = $reviewEntry;
                    }
                }
                fclose($fileHandle);

                // Calculate average rating
                $totalRating = 0;
                foreach ($reviews as $review) {
                    $totalRating += $review['rating'];
                }
                $averageRating = count($reviews) > 0 ? round($totalRating / count($reviews), 2) : 0;

                // Display reviews and average rating
                echo "<div class='reviews'>";
                echo "<h3>Reviews ($averageRating/5)</h3>";
                foreach ($reviews as $review) {
                    echo "<div class='review'>";
                    echo "<strong>" . $review['username'] . "</strong><br>";
                    echo "<p>" . $review['review'] . "</p>";
                    echo "<span class='rating'>★ " . $review['rating'] . "</span><br>";
                    echo "<small>Posted on " . $review['date'] . "</small>";
                    echo "</div>";
                }
                echo "</div>";
            } else {
                // No reviews yet
                echo "<p>No reviews available. Be the first to review!</p>";
            }
            break;

        default:
            return 'Invalid action parameter.';
    }
}

// Example usage:

// Display reviews
userReview('display');

// Submit a review (example form submission)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $reviewResult = userReview('submit', array(
        'username' => $_POST['username'],
        'review'   => $_POST['review'],
        'rating'   => $_POST['rating']
    ));
    echo $reviewResult;
}
?>


<?php
// Function to save the review to a file
function saveReview($reviewData) {
    $filePath = 'reviews.txt';
    
    // Append the new review to the file
    $fh = fopen($filePath, 'a');
    fwrite($fh, serialize($reviewData) . "
");
    fclose($fh);
}

// Function to load and display reviews
function loadReviews() {
    $filePath = 'reviews.txt';
    $reviews = array();
    
    if (file_exists($filePath)) {
        $fh = fopen($filePath, 'r');
        while (($line = fgets($fh)) !== false) {
            $review = unserialize($line);
            if ($review !== false && $review !== '') {
                $reviews[] = $review;
            }
        }
        fclose($fh);
    }
    
    return $reviews;
}

// Process the review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = trim($_POST['comment']);
    
    // Validate input
    if ($name == '' || $email == '' || $rating < 1 || $rating > 5 || $comment == '') {
        echo "<div class='error'>Please fill in all required fields and select a rating between 1-5 stars.</div>";
    } else {
        // Sanitize input
        $name = htmlspecialchars($name, ENT_QUOTES);
        $email = htmlspecialchars($email, ENT_QUOTES);
        $comment = htmlspecialchars($comment, ENT_QUOTES);
        
        // Create review data array
        $reviewData = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );
        
        // Save the review
        saveReview($reviewData);
        echo "<div class='success'>Thank you for submitting your review!</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }
        .rating-stars {
            display: flex;
            gap: 10px;
        }
        .star-input {
            display: none;
        }
        .star-label {
            cursor: pointer;
        }
        .success, .error {
            padding: 10px;
            margin-top: 20px;
            border-radius: 5px;
        }
        .success {
            background-color: #dff0d8;
            color: #3c763d;
        }
        .error {
            background-color: #f2dede;
            color: #a94442;
        }
    </style>
</head>
<body>

<h1>Product Review System</h1>

<!-- Review Form -->
<div class="review-form">
    <h2>Submit Your Review</h2>
    
    <?php
    // Display any success or error messages here
    if (isset($_GET['success'])) {
        echo "<div class='success'>Thank you for submitting your review!</div>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="rating-stars">
            <label class="star-label">Rate this product:</label><br>
            <input type="radio" class="star-input" id="5-star" name="rating" value="5">
            <label for="5-star">★</label>

            <input type="radio" class="star-input" id="4-star" name="rating" value="4">
            <label for="4-star">★</label>

            <input type="radio" class="star-input" id="3-star" name="rating" value="3">
            <label for="3-star">★</label>

            <input type="radio" class="star-input" id="2-star" name="rating" value="2">
            <label for="2-star">★</label>

            <input type="radio" class="star-input" id="1-star" name="rating" value="1">
            <label for="1-star">★</label>
        </div>

        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>
</div>

<!-- Display Reviews -->
<h2>Customer Reviews</h2>
<?php
$reviews = loadReviews();
if (empty($reviews)) {
    echo "<p>No reviews submitted yet.</p>";
} else {
    foreach ($reviews as $review) {
        echo "<div style='border-bottom: 1px solid #ddd; padding-bottom: 15px; margin-bottom: 15px;'>";
        echo "<h3>{$review['name']}</h3>";
        echo "<p>Rating: ";
        for ($i = 1; $i <= $review['rating']; $i++) {
            echo "★";
        }
        echo "</p>";
        echo "<p>{$review['comment']}</p>";
        echo "<small>Posted on {$review['date']}</small>";
        echo "</div>";
    }
    
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    if (!empty($reviews)) {
        $averageRating = $totalRating / count($reviews);
        echo "<h3>Average Rating: " . round($averageRating, 1) . " stars</h3>";
    }
}
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'review_system';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $database);

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = sanitizeInput($_POST['comment']);

    // Validate input data
    if ($name == '' || $email == '' || $rating < 1 || $rating > 5 || $comment == '') {
        echo "Please fill in all required fields!";
    } else {
        // Check email format
        if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            echo "Please enter a valid email address!";
        } else {
            // Insert review into database
            $sql = "INSERT INTO reviews (user_name, user_email, rating, comment) 
                    VALUES ('$name', '$email', '$rating', '$comment')";
            
            if (mysqli_query($conn, $sql)) {
                echo "Thank you for submitting your review!";
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . $row['user_email'] . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>Submitted on: " . date('jS M Y', strtotime($row['submission_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

function userReview($action) {
    global $conn;

    switch ($action) {
        case 'display':
            displayReviews();
            break;
        case 'submit':
            submitReview();
            break;
        default:
            displayReviews();
            break;
    }
}

// Display existing reviews
function displayReviews() {
    global $conn;

    try {
        // Fetch all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Display each review
        echo "<div class='review-container'>";
        foreach ($reviews as $review) {
            echo "<div class='review'>";
                echo "<h3>Reviewer: " . htmlspecialchars($review['reviewer_name']) . "</h3>";
                echo "<p><strong>Rating:</strong> " . $review['rating'] . "/5</p>";
                echo "<p><strong>Comment:</strong> " . nl2br(htmlspecialchars($review['comment'])) . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($review['review_date'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }

    // Display review submission form
    displayReviewForm();
}

// Submit a new review
function submitReview() {
    global $conn;

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        try {
            // Sanitize and validate inputs
            $reviewerName = htmlspecialchars(trim($_POST['reviewer_name']));
            $rating = intval($_POST['rating']);
            $comment = htmlspecialchars(trim($_POST['comment']));

            if (empty($reviewerName) || empty($comment)) {
                throw new Exception("Please fill in all required fields.");
            }
            
            if ($rating < 1 || $rating > 5) {
                throw new Exception("Rating must be between 1 and 5.");
            }

            // Insert into database
            $stmt = $conn->prepare("
                INSERT INTO reviews 
                    (reviewer_name, rating, comment, review_date)
                VALUES (:name, :rating, :comment, NOW())
            ");
            $stmt->bindParam(':name', $reviewerName);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comment', $comment);

            if ($stmt->execute()) {
                header("Location: review.php?action=display");
                exit();
            } else {
                throw new Exception("Error submitting your review.");
            }
        } catch(PDOException $e) {
            echo "Database error: " . $e->getMessage();
        } catch(Exception $e) {
            echo $e->getMessage();
        }
    }
}

// Display the review submission form
function displayReviewForm() {
    // Check if user is logged in or authenticated before showing form
    if (isset($_SESSION['logged_in'])) {
        echo "<div class='review-form'>";
            echo "<h2>Submit Your Review</h2>";
            echo "<form action='?action=submit' method='post'>";
                echo "<p><strong>Name:</strong></p>";
                echo "<input type='text' name='reviewer_name' required />";
                
                echo "<p><strong>Rating (1-5):</strong></p>";
                for ($i = 1; $i <= 5; $i++) {
                    echo "<label>";
                        echo "<input type='radio' name='rating' value='$i'";
                        if (!isset($_POST['rating'])) {
                            if ($i == 3) echo " checked";
                        } else if ($_POST['rating'] == $i) {
                            echo " checked";
                        }
                        echo "> $i</label> ";
                    }
                echo "<br/>";
                
                echo "<p><strong>Your Review:</strong></p>";
                echo "<textarea name='comment' rows='5' cols='40' required></textarea>";
                
                echo "<input type='submit' value='Submit Review'>";
            echo "</form>";
        echo "</div>";
    } else {
        echo "<p>Please <a href='login.php'>log in</a> to submit a review.</p>";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    userReview($_GET['action']);
} else {
    userReview('display');
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Connect to the database
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // Function to display all reviews
    function displayReviews($pdo) {
        echo '<div class="reviews-container">';
        
        // Get all reviews from database
        $stmt = $pdo->query('SELECT * FROM reviews ORDER BY review_date DESC');
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='review'>";
            echo "<h3>{$row['review_author']}</h3>";
            echo "<p>{$row['review_text']}</p>";
            echo "<small>Posted on: {$row['review_date']}</small>";
            echo "</div>";
        }
        
        echo '</div>';
    }

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input
        $author = htmlspecialchars(trim($_POST['author']));
        $text = htmlspecialchars(trim($_POST['review_text']));

        if (empty($author) || empty($text)) {
            die('Please fill in all fields!');
        }

        // Insert new review into database
        try {
            $stmt = $pdo->prepare('INSERT INTO reviews SET 
                review_author = :author,
                review_text = :text,
                review_date = NOW()');
            
            $stmt->execute([
                ':author' => $author,
                ':text' => $text
            ]);
            
            // Redirect after submission to prevent duplicate entries
            header('Location: ' . $_SERVER['PHP_SELF']);
            exit();
        } catch (PDOException $e) {
            die('Error adding review: ' . $e->getMessage());
        }
    }

} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .reviews-container {
            margin-top: 20px;
        }

        .review {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        input, textarea {
            width: 100%;
            margin: 5px 0;
            padding: 8px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <input type="text" name="author" placeholder="Your Name" required>
            <textarea name="review_text" placeholder="Write your review here..." rows="5" required></textarea>
            <button type="submit">Submit Review</button>
            <button type="reset">Cancel</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <?php displayReviews($pdo); ?>

    <!-- Error Handling -->
    <?php
    if (isset($_GET['error'])) {
        echo '<div class="error">';
        switch ($_GET['error']) {
            case 'empty_fields':
                echo "Please fill in all required fields!";
                break;
            default:
                echo "An unknown error occurred!";
        }
        echo '</div>';
    }
    ?>
</body>
</html>


<?php
// Function to handle user reviews
function submit_review($name, $email, $review, $rating) {
    // Validate input
    if (empty($name) || empty($email) || empty($review)) {
        return "Please fill in all required fields.";
    }

    // Sanitize input
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $review = htmlspecialchars($review);

    // Validate rating
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Please select a valid rating (1-5 stars).";
    }

    // Store review in a file or database
    // For this example, we'll store it in a text file
    $filename = 'reviews.txt';
    
    // Create an array with the review data
    $review_data = [
        'name' => $name,
        'email' => $email,
        'review' => $review,
        'rating' => $rating,
        'date' => date('Y-m-d H:i:s')
    ];

    // Convert to JSON and append to file
    $json_review = json_encode($review_data);
    
    try {
        // Append the review to the file
        file_put_contents($filename, $json_review . PHP_EOL, FILE_APPEND);

        return "Thank you for your review!";
    } catch (Exception $e) {
        return "Error submitting review. Please try again later.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $review = $_POST['review'];
    $rating = $_POST['rating'];

    // Submit the review
    $result = submit_review($name, $email, $review, $rating);
    echo $result;
}
?>


<?php
// Function to get all reviews
function get_reviews() {
    $filename = 'reviews.txt';
    $reviews = [];

    if (file_exists($filename)) {
        // Read all lines from file
        $lines = file($filename, FILE_IGNORE_NEW_LINES);

        foreach ($lines as $line) {
            $review = json_decode($line, true);
            if ($review !== false && $review !== null) {
                $reviews[] = $review;
            }
        }
    }

    return $reviews;
}

// Display reviews
$reviews = get_reviews();

if (!empty($reviews)) {
    echo "<h2>Customer Reviews</h2>";
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<p><strong>" . htmlspecialchars($review['name']) . "</strong></p>";
        echo "<p>Rating: " . $review['rating'] . " stars</p>";
        echo "<p>" . htmlspecialchars($review['review']) . "</p>";
        echo "<p>Posted on: " . $review['date'] . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews available.</p>";
}
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255),
    rating INT,
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

if ($conn->query($sql) === FALSE) {
    die("Error creating table: " . $conn->error);
}

// Process form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    function sanitize_input($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    $name = sanitize_input($_POST['name']);
    $email = sanitize_input($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = sanitize_input($_POST['comment']);

    // Validate input data
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("ssis", $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        echo "Thank you for your review!";
    } else {
        die("Error submitting review: " . $conn->error);
    }

    $stmt->close();
}

// Display all reviews
function display_reviews() {
    global $conn;

    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Rating must be between 1 and 5.";
    }
    
    // Sanitize comment
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    
    // Check for empty comment
    if (empty($comment)) {
        return "Comment cannot be empty.";
    }
    
    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return "Review added successfully!";
    } else {
        return "Error adding review: " . $stmt->error;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $reviews = array();
    
    // Get all reviews for the product
    $result = $conn->query("SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC");
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $reviews[] = array(
                'review_id' => $row['review_id'],
                'user_id' => $row['user_id'],
                'rating' => $row['rating'],
                'comment' => htmlspecialchars_decode($row['comment']),
                'date' => $row['review_date']
            );
        }
    }
    
    return $reviews;
}

// Function to calculate average rating for a product
function get_average_rating($product_id) {
    global $conn;
    
    $result = $conn->query("SELECT AVG(rating) as average FROM reviews WHERE product_id = $product_id");
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average'], 1); // Round to one decimal place
    }
    
    return 0;
}

// Function to display reviews in HTML format
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    $average_rating = get_average_rating($product_id);
    
    if (empty($reviews)) {
        echo "<p>No reviews yet.</p>";
        return;
    }
    
    // Display average rating
    echo "<div class='average-rating'>";
    echo "<h3>Average Rating: " . $average_rating . " / 5</h3>";
    echo "</div>";
    
    // Display each review
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<div class='rating'>";
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "<p><strong>Review by:</strong> User ID: " . $review['user_id'] . "</p>";
        echo "<p>" . nl2br($review['comment']) . "</p>";
        echo "<p class='date'><small>Posted on: " . date('M j, Y g:i a', strtotime($review['date'])) . "</small></p>";
        echo "</div>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include the review functions
include('review_functions.php');

// Get form data
$product_id = $_POST['product_id'];
$rating = $_POST['rating'];
$comment = $_POST['comment'];

// Add the review and show feedback
echo add_review($_SESSION['user_id'], $product_id, $rating, $comment);

// Redirect back to product page after short delay
header("Refresh: 2; url=product.php?id=$product_id");
?>


<?php include('review_functions.php'); ?>
<div class="reviews-container">
    <?php display_reviews($product_id); ?>
</div>


<?php
// Function to create a user review
function createReview($userId, $productId, $rating, $comment = "") {
    // Database connection parameters
    $servername = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbname = "mydatabase";

    try {
        // Create database connection
        $conn = new mysqli($servername, $dbUsername, $dbPassword, $dbname);
        
        // Check if the user exists
        $checkUserQuery = "SELECT id FROM users WHERE id = ?";
        $stmt = $conn->prepare($checkUserQuery);
        $stmt->bind_param("i", $userId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            throw new Exception("Invalid user ID");
        }
        
        // Check if the product exists
        $checkProductQuery = "SELECT id FROM products WHERE id = ?";
        $stmt = $conn->prepare($checkProductQuery);
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            throw new Exception("Invalid product ID");
        }
        
        // Validate rating
        if (!is_int($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }
        
        // Prepare the insert statement
        $insertReviewQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                             VALUES (?, ?, ?, ?)";
                             
        $stmt = $conn->prepare($insertReviewQuery);
        $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);
        
        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Error inserting review: " . $stmt->error);
        }
        
        // Return the review ID of the newly inserted review
        return $conn->insert_id;
        
    } catch (Exception $e) {
        // Log the error or handle it as needed
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
try {
    $reviewId = createReview(1, 5, 4, "Great product!");
    echo "Review created with ID: " . $reviewId;
} catch (Exception $e) {
    echo "Error creating review: " . $e->getMessage();
}
?>


<?php
// Function to submit a review
function submitReview($userId, $productId, $rating, $comment, $connection) {
    // Validate input
    if (empty($userId) || empty($productId) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    // Escape special characters to prevent SQL injection
    $comment = mysqli_real_escape_string($connection, $comment);
    
    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
              VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";
    
    if (mysqli_query($connection, $query)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($connection);
    }
}

// Function to get reviews for a product
function getReviews($productId, $connection) {
    // Get all reviews for the specified product
    $query = "SELECT r.id AS review_id,
                    u.username,
                    r.rating,
                    r.comment,
                    r.created_at
              FROM reviews r
              JOIN users u ON r.user_id = u.id
              WHERE r.product_id = '$productId'
              ORDER BY r.created_at DESC";

    $result = mysqli_query($connection, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Convert result to associative array
        $reviews = [];
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }
        return $reviews;
    } else {
        return "No reviews found for this product.";
    }
}
?>


// Example usage of submitReview()
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $productId = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    $result = submitReview($userId, $productId, $rating, $comment, $connection);
    echo $result;
}

// Example usage of getReviews()
$productId = 1; // Replace with your product ID
$reviews = getReviews($productId, $connection);

if (is_array($reviews)) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Reviewer: " . $review['username'] . "</h3>";
        echo "<p>Rating: " . $review['rating'] . "/5</p>";
        echo "<p>Comment: " . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['created_at'] . "</small>";
        echo "</div>";
    }
}


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Create database connection
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // SQL query to insert review into the database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
                VALUES ('$user_id', '$product_id', '$rating', '$comment')";

        // Execute the query
        if (mysqli_query($conn, $sql)) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . mysqli_error($conn);
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close the database connection
        mysqli_close($conn);
    }
}
?>


// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "This product is great!";
$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result; // Outputs: Review submitted successfully!


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    // Create database connection
    $conn = mysqli_connect($host, $username, $password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . $stmt->error;
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    } finally {
        // Close the statement and connection
        if ($stmt) {
            $stmt->close();
        }
        mysqli_close($conn);
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<div class='stars'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            echo "<p class='date'>" . $row['date'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

// Function to submit a new review
function submit_review($user_name, $comment, $rating) {
    global $conn;
    
    // Validate input
    if (empty($user_name) || empty($comment) || empty($rating)) {
        return "Please fill in all fields.";
    }
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $comment = mysqli_real_escape_string($conn, $comment);
    $rating = intval($rating);
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, comment, rating, date) VALUES ('$user_name', '$comment', '$rating', NOW())";
    if (mysqli_query($conn, $sql)) {
        return "Thank you for your review!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submit_review($_POST['user_name'], $_POST['comment'], $_POST['rating']);
    echo "<p class='message'>$result</p>";
}

// Review submission form
echo "<form method='post'>";
echo "<input type='text' name='user_name' placeholder='Your Name'>";
echo "<textarea name='comment' placeholder='Write your review...'></textarea>";
echo "<label>Rating:</label>";
echo "<select name='rating'>";
for ($i = 1; $i <= 5; $i++) {
    echo "<option value='$i'>$i stars</option>";
}
echo "</select>";
echo "<button type='submit'>Submit Review</button>";
echo "</form>";

// Display existing reviews
display_reviews();

// Close database connection
mysqli_close($conn);
?>

<style>
body {
    font-family: Arial, sans-serif;
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
}

.review {
    border: 1px solid #ddd;
    padding: 20px;
    margin-bottom: 20px;
    background-color: #f9f9f9;
    border-radius: 5px;
}

.stars .star {
    color: #FFD700;
    font-size: 24px;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);
}

h3 {
    margin-top: 0;
    color: #333;
}

.date {
    font-style: italic;
    color: #666;
}

form input,
form textarea {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    box-sizing: border-box;
}

select {
    padding: 10px;
    width: 200px;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}

.message {
    color: #333;
    margin-top: 20px;
}
</style>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function display_reviews() {
    global $conn;
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $user_name = $row['user_name'];
            $date = date('F j, Y', strtotime($row['timestamp']));
            
            // Display review
            echo "<div class='review'>";
            echo "<h3>$user_name</h3>";
            echo "<p>Rating: " . str_repeat("★", $rating) . "</p>";
            echo "<p>Comment: $comment</p>";
            echo "<small>Posted on $date</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }
}

function submit_review($user_name, $email, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format.";
    }
    
    // Sanitize input
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, email, rating, comment) 
            VALUES ('$user_name', '$email', '$rating', '$comment')";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

function get_average_rating() {
    global $conn;
    
    // Get average rating
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    return number_format((float)$row['average'], 1, '.', '');
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Submit review
    $result = submit_review($user_name, $email, $rating, $comment);
    if ($result === true) {
        echo "<p>Thank you for submitting your review!</p>";
    } else {
        echo "<p>Error: $result</p>";
    }
}

// Display average rating
echo "<h2>Rating: " . str_repeat("★", (int)get_average_rating()) . "</h2>";

// Display all reviews
display_reviews();
?>

<!-- HTML Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="user_name" placeholder="Your Name" required><br>
    <input type="email" name="email" placeholder="Your Email" required><br>
    <select name="rating" required>
        <option value="">Select Rating</option>
        <option value="1">1 Star</option>
        <option value="2">2 Stars</option>
        <option value="3">3 Stars</option>
        <option value="4">4 Stars</option>
        <option value="5">5 Stars</option>
    </select><br>
    <textarea name="comment" placeholder="Your Review" required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<!-- CSS Styling -->
<style>
.review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
}
.rating-stars {
    color: gold;
}
</style>


<?php
function submitUserReview($reviewText, $rating, $productId) {
    // Input validation
    if (empty($reviewText) || !is_numeric($rating) || $rating < 1 || $rating > 5 || !isset($productId)) {
        throw new InvalidArgumentException("Invalid review data");
    }

    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        throw new RuntimeException("Database connection failed: " . mysqli_error($conn));
    }

    try {
        // Sanitize inputs
        $reviewText = mysqli_real_escape_string($conn, $reviewText);
        $rating = intval($rating);
        $productId = intval($productId);

        // Insert into database
        $sql = "INSERT INTO reviews (product_id, review_text, rating, date_created) 
                VALUES ($productId, '$reviewText', $rating, NOW())";

        if (mysqli_query($conn, $sql)) {
            return true;
        } else {
            throw new RuntimeException("Error inserting review: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        // Log the error or handle as needed
        return false;
    } finally {
        mysqli_close($conn);
    }
}

// Example usage and testing
try {
    if (isset($_POST['submit'])) {
        $reviewText = $_POST['review_text'];
        $rating = $_POST['rating'];
        $productId = 1; // Replace with actual product ID

        if (submitUserReview($reviewText, $rating, $productId)) {
            echo "Thank you for your review!";
        } else {
            echo "Error submitting review. Please try again.";
        }
    }
} catch (Exception $e) {
    echo "An error occurred: " . $e->getMessage();
}
?>


<?php
// Function to handle review submissions and display reviews
function userReviewSystem() {
    // Configuration
    $reviewsFile = 'reviews.txt'; // File to store reviews
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $review = htmlspecialchars(trim($_POST['review']));
        $rating = intval($_POST['rating']);
        
        // Validate input
        if (empty($name) || empty($review)) {
            echo "<div class='error'>Please fill in all required fields!</div>";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "<div class='error'>Please select a valid rating (1-5 stars)!</div>";
            return;
        }
        
        // Get existing reviews
        if (file_exists($reviewsFile)) {
            $reviews = unserialize(file_get_contents($reviewsFile));
        } else {
            $reviews = array();
        }
        
        // Add new review
        $newReview = array(
            'name' => $name,
            'review' => $review,
            'rating' => $rating,
            'date' => date('F j, Y'),
        );
        array_unshift($reviews, $newReview); // Add to beginning of array
        
        // Save reviews back to file
        if (file_put_contents($reviewsFile, serialize($reviews)) === false) {
            echo "<div class='error'>Error saving review. Please try again later!</div>";
            return;
        }
        
        // Show success message
        echo "<div class='success'>Thank you for submitting your review!</div>";
    }
    
    // Display existing reviews
    if (file_exists($reviewsFile)) {
        $reviews = unserialize(file_get_contents($reviewsFile));
        
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>{$review['name']}</h3>";
                echo "<div class='rating'>{$review['rating']} stars</div>";
                // Display rating as stars
                echo "<div class='stars'>";
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo "<span style='color: gold;'>★</span>";
                }
                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                    echo "<span>☆</span>";
                }
                echo "</div>";
                echo "<p>{$review['review']}</p>";
                echo "<div class='date'>{$review['date']}</div>";
                echo "</div>";
            }
        } else {
            echo "<div>No reviews yet!</div>";
        }
    } else {
        // Create empty file if it doesn't exist
        touch($reviewsFile);
        echo "<div>No reviews yet!</div>";
    }
}

// Call the function
userReviewSystem();
?>


<?php
// Database connection details
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $rating = mysqli_real_escape_string($conn, $_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Validate input
        if ($username == "" || $rating == "" || $comment == "") {
            echo "Please fill in all fields!";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comment, review_date) 
                VALUES ('$username', '$rating', '$comment', NOW())";

        if ($conn->query($sql) === TRUE) {
            echo "Thank you for submitting your review!";
            header("Location: thank_you.php");
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['username'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "No reviews found!";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection setup
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display reviews
function displayReviews($productId = 1) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
        $stmt->execute([$productId]);
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>Reviewer: " . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p>Rating: " . $review['rating'] . "/5</p>";
                echo "<p>" . htmlspecialchars($review['content']) . "</p>";
                echo "<p>Date Posted: " . date('F j, Y', strtotime($review['created_at'])) . "</p>";
                echo "<div class='voting'>";
                echo "<button onclick='upvoteReview(" . $review['id'] . ")'>Upvote</button>";
                echo "<span id='upvote_count_" . $review['id'] . "'>" . $review['upvotes'] . "</span>";
                echo "<button onclick='downvoteReview(" . $review['id'] . ")'>Downvote</button>";
                echo "<span id='downvote_count_" . $review['id'] . "'>" . $review['downvotes'] . "</span>";
                echo "</div>";
                echo "</div>";
            }
        } else {
            echo "No reviews found for this product.";
        }
    } catch(PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Function to add a new review
function addReview($productId, $userId, $content, $rating = 5) {
    global $conn;
    
    if (empty($productId) || empty($userId) || empty($content)) {
        return false;
    }
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, content, rating) VALUES (?, ?, ?, ?)");
        $stmt->execute([$productId, $userId, $content, $rating]);
        
        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to delete a review
function deleteReview($reviewId, $userId, $isAdmin = false) {
    global $conn;
    
    try {
        if ($isAdmin || is_review_owner($reviewId, $userId)) {
            $stmt = $conn->prepare("DELETE FROM reviews WHERE id = ?");
            $stmt->execute([$reviewId]);
            
            if ($stmt->rowCount() > 0) {
                return true;
            } else {
                return false;
            }
        } else {
            return "You are not authorized to delete this review.";
        }
    } catch(PDOException $e) {
        echo "Error deleting review: " . $e->getMessage();
        return false;
    }
}

// Helper function to check if user is the owner of a review
function is_review_owner($reviewId, $userId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE id = ? AND user_id = ?");
        $stmt->execute([$reviewId, $userId]);
        
        return $stmt->rowCount() > 0;
    } catch(PDOException $e) {
        echo "Error checking review ownership: " . $e->getMessage();
        return false;
    }
}

// Function to upvote a review
function upvoteReview($reviewId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE reviews SET upvotes = upvotes + 1 WHERE id = ?");
        $stmt->execute([$reviewId]);
        
        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error upvoting review: " . $e->getMessage();
        return false;
    }
}

// Function to downvote a review
function downvoteReview($reviewId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE reviews SET downvotes = downvotes + 1 WHERE id = ?");
        $stmt->execute([$reviewId]);
        
        if ($stmt->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error downvoting review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if (isset($_POST['add_review'])) {
    $productId = 1; // Replace with actual product ID
    $userId = 1; // Replace with current user ID
    $content = $_POST['review_content'];
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 5;
    
    if (addReview($productId, $userId, $content, $rating)) {
        echo "Review added successfully!";
    } else {
        echo "Error adding review.";
    }
}
?>


<?php
// Function to handle review submission
function submit_review() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize and validate input data
        $name = trim($_POST['name']);
        $email = trim($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate inputs
        if ($name == "" || $email == "" || $rating < 1 || $rating > 5) {
            echo "Please fill in all required fields and select a rating between 1-5.";
            return;
        }

        // Database connection (replace with your database credentials)
        $host = 'localhost';
        $db_username = 'username';
        $db_password = 'password';
        $dbname = 'database_name';

        try {
            $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_username, $db_password);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            // Insert review into database
            $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (:name, :email, :rating, :comment)");
            $stmt->execute(array(
                ':name' => $name,
                ':email' => $email,
                ':rating' => $rating,
                ':comment' => $comment
            ));

            // Success message
            echo "Thank you for submitting your review!";
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }

        // Close database connection
        $conn = null;
    }
}

// Function to display reviews
function display_reviews() {
    // Database connection (replace with your database credentials)
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $dbname = 'database_name';

    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Retrieve reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
        while($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }

    // Close database connection
    $conn = null;
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display review form
function show_review_form() {
    echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
    echo '<input type="text" name="name" placeholder="Your Name" required><br>';
    echo '<textarea name="review_text" placeholder="Write your review here..." rows="4" cols="50" required></textarea><br>';
    echo 'Rating: <select name="rating" required>';
    for ($i = 1; $i <= 5; $i++) {
        echo '<option value="' . $i . '">' . $i . ' Star' . ($i != 1 ? 's' : '') . '</option>';
    }
    echo '</select><br>';
    echo '<input type="submit" name="submit_review" value="Submit Review">';
    echo '</form>';
}

// Function to handle review submission
function submit_review($conn) {
    if (isset($_POST['submit_review'])) {
        // Sanitize input data
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);
        $rating = intval($_POST['rating']);

        // Validate rating
        if ($rating < 1 || $rating > 5) {
            die("Invalid rating. Please select a rating between 1 and 5.");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, review_text, rating, timestamp)
                VALUES ('$name', '$review_text', $rating, NOW())";

        if ($conn->query($sql) === TRUE) {
            echo "<p style='color: green; margin-bottom: 20px;'>Thank you for submitting your review!</p>";
            header("Refresh: 1; url=".$_SERVER['PHP_SELF']);
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function display_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($row['name']) . '</h3>';
            echo '<p>' . htmlspecialchars($row['review_text']) . '</p>';
            display_rating($row['rating']);
            echo '<small>Posted on: ' . $row['timestamp'] . '</small>';
            echo '</div>';
        }
    } else {
        echo "<p>No reviews found. Be the first to review!</p>";
    }
}

// Function to display rating stars
function display_rating($rating) {
    echo '<div class="stars">';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo '<span class="star">★</span>';
        } else {
            echo '<span class="star">☆</span>';
        }
    }
    echo '</div>';
}

// Main script
try {
    // Check if review was submitted
    submit_review($conn);

    // Display review form and reviews
    show_review_form();
    display_reviews($conn);
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function addReview($name, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags($name));
    $reviewText = htmlspecialchars(strip_tags($reviewText));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, review_text, rating) VALUES (:name, :review, :rating)");
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':review', $reviewText);
        $stmt->bindParam(':rating', $rating);
        
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    try {
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY timestamp DESC");
        $stmt->execute();
        
        $averageRating = 0;
        $reviewCount = 0;
        $totalRating = 0;
        
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>" . $row['review_text'] . "</p>";
            echo "<div class='stars'>";
            
            for ($i = 1; $i <= $row['rating']; $i++) {
                echo "<span class='star'>★</span>";
            }
            
            if ($row['rating'] < 5) {
                for ($i = $row['rating'] + 1; $i <= 5; $i++) {
                    echo "<span class='star'>☆</span>";
                }
            }
            
            echo "</div>";
            echo "</div>";
            
            // Calculate average rating
            $totalRating += $row['rating'];
            $reviewCount++;
        }
        
        if ($reviewCount > 0) {
            $averageRating = $totalRating / $reviewCount;
            echo "<div class='stats'>";
            echo "Average Rating: " . number_format($averageRating, 1) . "/5";
            echo " | Total Reviews: " . $reviewCount;
            echo "</div>";
        }
        
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        
        .stars {
            display: inline-block;
            color: gold;
            font-size: 24px;
            margin-top: 5px;
        }
        
        .star {
            display: inline-block;
            width: 30px;
            text-align: center;
        }
        
        #reviewForm {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .stats {
            margin-top: 20px;
            font-weight: bold;
            color: #333;
        }
    </style>
</head>
<body>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $reviewText = $_POST['review'];
    $rating = $_POST['rating'];
    
    if (empty($name) || empty($reviewText)) {
        echo "<p style='color: red;'>Please fill in all required fields.</p>";
    } elseif (!ctype_digit($rating) || $rating < 1 || $rating > 5) {
        echo "<p style='color: red;'>Please select a valid rating (1-5 stars).</p>";
    } else {
        if (addReview($name, $reviewText, $rating, $conn)) {
            header("Location: index.php");
            exit();
        } else {
            echo "<p style='color: red;'>Error adding review. Please try again.</p>";
        }
    }
}
?>

<form id="reviewForm" method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <h2>Submit Your Review</h2>
    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br><br>
        
        <label for="review">Review:</label><br>
        <textarea id="review" name="review" rows="5" cols="50" required></textarea><br><br>
        
        <label for="rating">Rating (1-5 stars):</label><br>
        <select id="rating" name="rating">
            <?php for ($i = 1; $i <= 5; $i++) { ?>
                <option value="<?php echo $i; ?>"><?php echo $i; ?> Star<?php echo $i == 1 ? '' : 's'; ?></option>
            <?php } ?>
        </select><br><br>
        
        <input type="submit" value="Submit Review">
    </div>
</form>

<h2>Customer Reviews</h2>
<?php displayReviews($conn); ?>

</body>
</html>


function display_reviews($reviews, $item_name) {
    if (empty($reviews)) {
        return "No reviews available for this item.";
    }

    // Calculate average rating
    $total_rating = 0;
    foreach ($reviews as $review) {
        $total_rating += $review['rating'];
    }
    $average_rating = count($reviews) > 0 ? ($total_rating / count($reviews)) : 0;

    // Format the output
    $output = "<div class='review-container'>";
    $output .= "<h2>Reviews for " . htmlspecialchars($item_name) . "</h2>";
    $output .= "<p>Average Rating: " . number_format($average_rating, 2) . "/5</p>";
    $output .= "<hr>";

    foreach ($reviews as $review) {
        $stars = str_repeat('★', $review['rating']) . str_repeat('☆', 5 - $review['rating']);
        $output .= "<div class='review-item'>";
        $output .= "<h3>Review by " . htmlspecialchars($review['user']) . "</h3>";
        $output .= "<p>Rating: " . $stars . "</p>";
        $output .= "<p>" . htmlspecialchars($review['comment']) . "</p>";
        $output .= "<small>Posted on " . date('jS F Y', strtotime($review['date'])) . "</small>";
        $output .= "</div><hr>";
    }

    $output .= "</div>";
    
    return $output;
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($author, $review_text, $rating) {
    global $conn;

    // Sanitize inputs
    $author = mysqli_real_escape_string($conn, htmlspecialchars($author));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);

    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (author, review_text, rating, timestamp)
            VALUES ('$author', '$review_text', '$rating', NOW())";

    if ($conn->query($sql) === TRUE) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;

    // Fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $author = htmlspecialchars_decode($row['author']);
            $review_text = htmlspecialchars_decode($row['review_text']);
            $rating = $row['rating'];
            $timestamp = strtotime($row['timestamp']);

            // Display review
            echo "<div class='review'>";
            echo "<h3>Review by " . $author . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $rating) . str_repeat("☆", 5 - $rating) . "</p>";
            echo "<p>" . $review_text . "</p>";
            echo "<p class='date'>" . date('F j, Y g:i a', $timestamp) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews have been submitted yet.";
    }
}

// Example usage:

// Check if review submission form was submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = $_POST['name'];
    $review_text = $_POST['review'];
    $rating = $_POST['rating'];

    // Call submit_review function and display result
    echo submit_review($name, $review_text, $rating);
}

// Display review form
echo "<form method='post' action='" . htmlspecialchars($_SERVER['PHP_SELF']) . "'>";
echo "<input type='text' name='name' placeholder='Your Name' required><br>";
echo "<textarea name='review' placeholder='Write your review...' required></textarea><br>";
echo "Rating:<br>";
echo "<select name='rating'>";
for ($i = 1; $i <= 5; $i++) {
    echo "<option value='$i'>$i stars</option>";
}
echo "</select><br>";
echo "<input type='submit' value='Submit Review'>";
echo "</form>";

// Display existing reviews
display_reviews();

// Close database connection
$conn->close();
?>


<?php
// Database connection
$host = "localhost";
$user = "root";
$password = "";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn) {
    // Validate inputs
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {
        return false;
    }

    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        return false;
    }

    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment, timestamp) 
            VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)";

    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "issss", $product_id, $user_name, $user_email, $rating, $comment);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

function display_reviews($product_id, $conn) {
    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row['user_name']) . "</h4>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>" . date('jS M Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        return false;
    }

    // Calculate average rating
    $sql_avg = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = ?";
    
    $stmt_avg = mysqli_prepare($conn, $sql_avg);
    mysqli_stmt_bind_param($stmt_avg, "i", $product_id);

    if (mysqli_stmt_execute($stmt_avg)) {
        $result_avg = mysqli_stmt_get_result($stmt_avg);
        $row_avg = mysqli_fetch_assoc($result_avg);
        
        echo "<div class='average-rating'>";
        echo "Average Rating: " . round($row_avg['avg_rating'], 1) . "/5";
        echo "</div>";
    }
}

// Example usage:

if (isset($_POST['submit_review'])) {
    $product_id = 1; // Set your product ID
    $user_name = $_POST['name'];
    $user_email = $_POST['email'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    if (submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn)) {
        echo "Thank you for submitting your review!";
        // Refresh the page to show new review
        header("Refresh:1");
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Display review form
echo "<form method='post' action=''>
      <input type='text' name='name' placeholder='Your Name' required><br>
      <input type='email' name='email' placeholder='Your Email' required><br>
      <select name='rating' required>
          <option value='' selected>Rating</option>
          <option value='5'>★ ★ ★ ★ ★</option>
          <option value='4'>★ ★ ★ ★</option>
          <option value='3'>★ ★ ★</option>
          <option value='2'>★ ★</option>
          <option value='1'>★</option>
      </select><br>
      <textarea name='comment' placeholder='Your Review' required></textarea><br>
      <input type='submit' name='submit_review' value='Submit Review'>
      </form>";

// Display existing reviews for product ID 1
display_reviews(1, $conn);

mysqli_close($conn);
?>


<?php
// Function to create and display a user review form and process submitted reviews
function user_review() {
    // Check if the form has been submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Retrieve form data
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = intval($_POST['rating']);
        $comment = $_POST['comment'];

        // Validate input data
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            die("All fields are required!");
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format!");
        }

        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars!");
        }

        // Database connection
        $host = 'localhost';
        $username = 'root';
        $password = '';
        $database = 'reviews_db';

        $conn = mysqli_connect($host, $username, $password, $database);

        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Insert review into the database
        $sql = "INSERT INTO reviews (name, email, rating, comment, submission_date)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = mysqli_prepare($conn, $sql);
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        mysqli_stmt_bind_param($stmt, "ssis", $name, $email, $rating, $comment);

        if (!mysqli_stmt_execute($stmt)) {
            die("Execute failed: " . mysqli_stmt_error($stmt));
        }

        // Close statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);

        // Display success message
        echo "<h3>Thank you for submitting your review!</h3>";
    } else {
        // Display the review form
        ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required><br>
                
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required><br>
                
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select Rating</option>
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select><br>

                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="4" cols="50" required></textarea><br>
                
                <input type="submit" value="Submit Review">
            </div>
        </form>
        <?php
    }

    // Display existing reviews from the database
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    $conn = mysqli_connect($host, $username, $password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        echo "<h3>Previous Reviews:</h3>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<strong>" . htmlspecialchars($row['name']) . "</strong><br>";
            echo "Email: " . htmlspecialchars($row['email']) . "<br>";
            echo "Rating: " . str_repeat("★", $row['rating']) . "<br>";
            echo "Comment: " . htmlspecialchars($row['comment']) . "<br>";
            echo "Submitted on: " . htmlspecialchars($row['submission_date']) . "<br><br>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

// Check for connection errors
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display the review form
function displayReviewForm() {
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="rating">Rating:</label>
            <select id="rating" name="rating" required>
                <option value="">Select a rating</option>
                <option value="5">5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        <div>
            <label for="comment">Comment:</label>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>
    <?php
}

// Function to save a review to the database
function saveReview($conn) {
    if (isset($_POST['submit_review'])) {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Check if this is an edit or a new review
        if (isset($_GET['review_id'])) {
            $review_id = intval($_GET['review_id']);
            $sql = "UPDATE reviews SET name='$name', email='$email', rating='$rating', comment='$comment' WHERE id='$review_id'";
        } else {
            $sql = "INSERT INTO reviews (name, email, rating, comment) VALUES ('$name', '$email', '$rating', '$comment')";
        }

        if (mysqli_query($conn, $sql)) {
            echo "Review saved successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Function to display all reviews
function displayReviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            ?>
            <div class="review">
                <h3><?php echo $row['name']; ?></h3>
                <p>Email: <?php echo $row['email']; ?></p>
                <p>Rating: <?php echo str_repeat("★", $row['rating']); ?></p>
                <p>Comment: <?php echo $row['comment']; ?></p>
                <small><?php echo date('j F Y, g:i a', strtotime($row['date'])); ?></small>
            </div>
            <?php
        }
    } else {
        echo "No reviews found.";
    }
}

// Main function to handle the review process
function handleReviews() {
    global $conn;
    
    // Check if we're editing an existing review
    if (isset($_GET['review_id'])) {
        $review_id = intval($_GET['review_id']);
        
        // Display edit form with existing data
        $sql = "SELECT * FROM reviews WHERE id='$review_id'";
        $result = mysqli_query($conn, $sql);
        
        if ($row = mysqli_fetch_assoc($result)) {
            ?>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>?review_id=<?php echo $review_id; ?>">
                <div>
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" value="<?php echo $row['name']; ?>" required>
                </div>
                <div>
                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" value="<?php echo $row['email']; ?>" required>
                </div>
                <div>
                    <label for="rating">Rating:</label>
                    <select id="rating" name="rating" required>
                        <?php
                        $ratings = array(5, 4, 3, 2, 1);
                        foreach ($ratings as $rating) {
                            $selected = ($rating == $row['rating']) ? "selected='selected'" : "";
                            echo "<option value='$rating' $selected>$rating Stars</option>";
                        }
                        ?>
                    </select>
                </div>
                <div>
                    <label for="comment">Comment:</label>
                    <textarea id="comment" name="comment" rows="4"><?php echo $row['comment']; ?></textarea>
                </div>
                <button type="submit" name="submit_review">Update Review</button>
            </form>
            <?php
        } else {
            echo "Review not found.";
        }
    } else {
        // Display the review form or all reviews
        displayReviewForm();
        displayReviews($conn);
    }
}

// Call the main function
handleReviews();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_name VARCHAR(255),
    email VARCHAR(255),
    rating INT,
    review_text TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to add a new review
function addReview($product_id, $user_name, $email, $rating, $review_text) {
    global $conn;

    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $email = mysqli_real_escape_string($conn, $email);
    $rating = (int)$rating;
    $review_text = mysqli_real_escape_string($conn, $review_text);

    // Check if rating is valid
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, email, rating, review_text) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $user_name, $email, $rating, $review_text);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a product
function getReviews($product_id) {
    global $conn;

    $reviews = array();
    
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $reviews[] = $row;
    }

    return $reviews;
}

// Function to display reviews
function displayReviews($product_id) {
    $reviews = getReviews($product_id);
    
    if (!empty($reviews)) {
        echo "<div class='reviews'>";
        foreach ($reviews as $review) {
            echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>" . htmlspecialchars($review['review_text']) . "</p>";
                echo "<small>Posted on: " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
}
?>


<?php
include 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $review_text = $_POST['review_text'];

    if (addReview($product_id, $user_name, $email, $rating, $review_text)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Review could not be submitted.";
    }
}
?>


<?php
include 'review_functions.php';

// Replace with actual product ID
$product_id = 1;
displayReviews($product_id);
?>


<?php
// Database connection configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die('Could not connect: ' . mysqli_error($conn));
}

// Function to add a new review
function addReview($user_id, $product_id, $rating, $comment, $conn) {
    // Sanitize input
    $rating = htmlspecialchars($rating);
    $comment = htmlspecialchars($comment);

    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES (?, ?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);
        
        if (!mysqli_stmt_execute($stmt)) {
            return "Error saving review: " . mysqli_error($conn);
        }
        // Close statement
        mysqli_stmt_close($stmt);
        return true;
    } else {
        return "Prepare failed: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($product_id, $conn) {
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        
        if (mysqli_stmt_execute($stmt)) {
            $result = mysqli_stmt_get_result($stmt);

            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review'>";
                echo "<div class='rating'>";
                for ($i = 1; $i <= $row['rating']; $i++) {
                    echo "<span class='star'>★</span>";
                }
                echo "</div>";
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
                echo "</div>";
            }

            // Close statement
            mysqli_stmt_close($stmt);
        } else {
            return "Error displaying reviews: " . mysqli_error($conn);
        }
    } else {
        return "Prepare failed: " . mysqli_error($conn);
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_SESSION['user_id']; // Assuming user is authenticated and session exists
    $product_id = 1; // Replace with your product ID logic
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    $result = addReview($user_id, $product_id, $rating, $comment, $conn);
    
    if ($result === true) {
        header("Location: review.php"); // Redirect back to the review page
        exit();
    } else {
        echo "<p class='error'>" . $result . "</p>";
    }
}

// Display the review form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .rating {
            color: #ffd700;
            font-size: 24px;
            margin-bottom: 10px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        .star {
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="review-container">
        <!-- Review Form -->
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <h2>Write a Review</h2>
            <div class="rating-select">
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select Rating</option>
                    <option value="1">★</option>
                    <option value="2">★★</option>
                    <option value="3">★★★</option>
                    <option value="4">★★★★</option>
                    <option value="5">★★★★★</option>
                </select><br><br>
            </div>
            <textarea id="comment" name="comment" rows="5" cols="60" placeholder="Write your review here..." required></textarea><br><br>
            <input type="submit" value="Submit Review">
        </form>

        <!-- Display Reviews -->
        <?php
        // Replace 1 with your actual product ID
        displayReviews(1, $conn);
        ?>

    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Function to add user review
function add_review($review_text, $rating, $user_id, $product_id) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Create database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Prepare SQL query to insert review
    $sql = "INSERT INTO reviews (review_text, rating, user_id, product_id, review_date)
            VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

    // Prepare statement
    $stmt = $conn->prepare($sql);

    // Check if statement was prepared successfully
    if ($stmt === false) {
        echo "Error preparing SQL statement: " . $conn->error;
        return false;
    }

    // Bind parameters to the statement
    $stmt->bind_param("sisii", $review_text, $rating, $user_id, $product_id);

    // Execute the query
    if ($stmt->execute()) {
        echo "Review added successfully!";
        return true;
    } else {
        echo "Error adding review: " . $stmt->error;
        return false;
    }

    // Close database connection
    $conn->close();
}

// Example usage:
$review_text = "Great product, highly recommended!";
$rating = 5;
$user_id = 1;
$product_id = 1;

add_review($review_text, $rating, $user_id, $product_id);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>{$row['reviewer_name']}</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: {$row['reviewer_email']}</p>";
            echo "<p>Comment: {$row['comment']}</p>";
            echo "<small>Posted on: {$row['review_date']}</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

function submit_review() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $name = trim(htmlspecialchars($_POST['reviewer_name']));
        $email = trim(htmlspecialchars($_POST['reviewer_email']));
        $rating = (int)trim(htmlspecialchars($_POST['rating']));
        $comment = trim(htmlspecialchars($_POST['comment']));

        // Validate input data
        $errors = [];
        
        if (empty($name)) {
            $errors[] = "Name is required!";
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Valid email is required!";
        }
        
        if ($rating < 1 || $rating > 5) {
            $errors[] = "Rating must be between 1 and 5 stars!";
        }
        
        if (strlen($comment) < 5 || strlen($comment) > 1000) {
            $errors[] = "Comment must be between 5 and 1000 characters!";
        }

        // Display errors if any
        if (!empty($errors)) {
            foreach ($errors as $error) {
                echo "<div class='error'>$error</div>";
            }
        } else {
            // Insert into database
            $sql = "INSERT INTO reviews (reviewer_name, reviewer_email, rating, comment, review_date)
                    VALUES ('$name', '$email', '$rating', '$comment', NOW())";
            
            if ($conn->query($sql) === TRUE) {
                echo "<div class='success'>Review submitted successfully!</div>";
            } else {
                echo "<div class='error'>Error: " . $conn->error . "</div>";
            }
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment, $conn) {
    // Check if the user has already reviewed this product
    $checkQuery = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = mysqli_prepare($conn, $checkQuery);
    mysqli_stmt_bind_param($stmt, 'ii', $userId, $productId);
    mysqli_execute($stmt);
    
    if (mysqli_stmt_affected_rows($stmt) > 0) {
        return "You have already reviewed this product!";
    }

    // Insert the new review
    $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                    VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, 'iiis', $userId, $productId, $rating, $comment);

    if (mysqli_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews for a product
function displayReviews($productId, $conn) {
    $reviewsQuery = "SELECT r.id, r.rating, r.comment, u.username, r.created_at 
                    FROM reviews r 
                    JOIN users u ON r.user_id = u.id 
                    WHERE r.product_id = ? 
                    ORDER BY r.created_at DESC";
    
    $stmt = mysqli_prepare($conn, $reviewsQuery);
    mysqli_stmt_bind_param($stmt, 'i', $productId);
    mysqli_execute($stmt);

    $result = mysqli_stmt_get_result($stmt);
    $averageRating = calculateAverageRating($productId, $conn);
    
    echo "<h3>Product Reviews</h3>";
    echo "<p>Average Rating: " . number_format($averageRating, 1) . "/5</p>";
    
    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet!</p>";
        return;
    }

    while ($row = mysqli_fetch_assoc($result)) {
        $username = $row['username'];
        $rating = $row['rating'];
        $comment = $row['comment'];
        $created_at = date('M j, Y g:i a', strtotime($row['created_at']));

        // Display star rating
        echo "<div class='review'>";
        echo "<h4>Reviewed by: " . $username . "</h4>";
        echo "<p>Rating: ";
        for ($i = 1; $i <= $rating; $i++) {
            echo "★";
        }
        for ($i = $rating + 1; $i <=5; $i++) {
            echo "☆";
        }
        echo "</p>";
        echo "<p>" . $comment . "</p>";
        echo "<small>Posted on: " . $created_at . "</small>";
        echo "</div><br>";
    }
}

// Function to calculate average rating
function calculateAverageRating($productId, $conn) {
    $averageQuery = "SELECT AVG(rating) as average 
                    FROM reviews 
                    WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $averageQuery);
    mysqli_stmt_bind_param($stmt, 'i', $productId);
    mysqli_execute($stmt);

    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['average'];
}

// Example usage
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $productId = 1; // Specific product ID
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    $message = submitReview($userId, $productId, $rating, $comment, $conn);
    echo "<script>alert('" . $message . "');</script>";
}

displayReviews(1, $conn); // Display reviews for product ID 1

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'review_system';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    user_email VARCHAR(255),
    rating INT,
    review_text TEXT,
    review_date DATETIME
)";

if (mysqli_query($conn, $sql)) {
    // Table created successfully
} else {
    echo "Error creating table: " . mysqli_error($conn);
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $user_name = mysqli_real_escape_string($conn, $_POST['name']);
    $user_email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = intval($_POST['rating']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review']);

    // Validate email
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, review_text, review_date) 
            VALUES ('$user_name', '$user_email', '$rating', '$review_text', NOW())";

    if (mysqli_query($conn, $sql)) {
        echo "<script>alert('Thank you for your review!');</script>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Display all reviews
$sql = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    // Calculate average rating
    $total_ratings = 0;
    $average_rating = 0;

    while ($row = mysqli_fetch_assoc($result)) {
        $total_ratings += $row['rating'];
    }

    $num_reviews = mysqli_num_rows(mysqli_query($conn, "SELECT * FROM reviews"));
    if ($num_reviews > 0) {
        $average_rating = $total_ratings / $num_reviews;
    } else {
        $average_rating = 0;
    }

    // Display average rating
    echo "<h3>Average Rating: " . round($average_rating, 1) . "/5</h3>";
    
    // Display reviews
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 10px 0;'>";
        echo "<h4>" . $row['user_name'] . "</h4>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . nl2br($row['review_text']) . "</p>";
        echo "<small>Reviewed on: " . date('F j, Y', strtotime($row['review_date'])) . "</small>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet!</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
            color: #ddd;
        }
        
        .star-checked {
            color: orange !important;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <div style="margin-bottom: 30px;">
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <p>Name:<br>
            <input type="text" name="name" required></p>
            
            <p>Email:<br>
            <input type="email" name="email" required></p>
            
            <p>Rating:
                <span class="rating-stars">
                    <input type="radio" name="rating" value="5">★
                    <input type="radio" name="rating" value="4">★
                    <input type="radio" name="rating" value="3">★
                    <input type="radio" name="rating" value="2">★
                    <input type="radio" name="rating" value="1">★
                </span>
            </p>
            
            <p>Review:<br>
            <textarea name="review" rows="5" cols="40" required></textarea></p>
            
            <input type="submit" value="Submit Review">
        </form>
    </div>
</body>
</html>


<?php
// Function to handle user reviews
function userReview() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        $username = isset($_SESSION['username']) ? $_SESSION['username'] : 'Anonymous';

        // Validate input
        if (!isset($rating) || !isset($comment)) {
            echo "<script>alert('Please fill in all fields.');</script>";
            return;
        }

        // Sanitize input data
        $rating = intval($rating);
        $comment = htmlspecialchars(trim($comment));
        $username = htmlspecialchars(trim($username));

        // Create review array
        $review = [
            'id' => uniqid(),
            'user' => $username,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => date('Y-m-d H:i:s'),
            'approved' => 0, // 0 = pending approval, 1 = approved
        ];

        // Store review in file (you can modify to store in database)
        $reviewsFile = "reviews.json";
        
        if (file_exists($reviewsFile)) {
            $data = json_decode(file_get_contents($reviewsFile), true);
            array_push($data['reviews'], $review);
        } else {
            $data = ['reviews' => [$review]];
        }

        // Save the updated data
        file_put_contents($reviewsFile, json_encode($data, JSON_PRETTY_PRINT));

        // Show success message
        echo "<script>alert('Thank you for your review!');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .rating-stars {
            font-size: 24px;
            color: gold;
        }
        .rating-stars input[type="radio"] {
            display: none;
        }
        .rating-stars label {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Review</h2>
        <?php
        // Display review form
        if (!isset($_POST['submit'])) {
            echo '
                <form method="post" action="">
                    <p>Please rate this product:</p>
                    <div class="rating-stars">
                        <input type="radio" id="5-star" name="rating" value="5">
                        <label for="5-star">★</label>
                        <input type="radio" id="4-star" name="rating" value="4">
                        <label for="4-star">★</label>
                        <input type="radio" id="3-star" name="rating" value="3">
                        <label for="3-star">★</label>
                        <input type="radio" id="2-star" name="rating" value="2">
                        <label for="2-star">★</label>
                        <input type="radio" id="1-star" name="rating" value="1">
                        <label for="1-star">★</label>
                    </div>

                    <p>Write your review:</p>
                    <textarea name="comment" rows="5" cols="40" required></textarea><br>

                    <input type="submit" name="submit" value="Submit Review">
                </form>';
        }
        ?>

        <!-- Display saved reviews -->
        <?php
        $reviewsFile = "reviews.json";
        
        if (file_exists($reviewsFile)) {
            $data = json_decode(file_get_contents($reviewsFile), true);
            
            foreach ($data['reviews'] as $review) {
                echo '<div style="margin: 20px 0; padding: 10px; border: 1px solid #ddd; border-radius: 3px;">';
                echo "<strong>{$review['user']}</strong> - {$review['rating']} stars<br>";
                echo "<em>" . date('F j, Y g:i a', strtotime($review['timestamp'])) . "</em><br>";
                echo $review['comment'];
                echo '</div>';
            }
        }
        ?>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews_db';

try {
    $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($product_id, $user_name, $email, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, email, rating, comment, review_date) 
                              VALUES (:product_id, :user_name, :email, :rating, :comment, NOW())");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':user_name', $user_name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        return true;
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to get reviews for a product
function getReviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = :product_id ORDER BY review_date DESC");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die("Error fetching reviews: " . $e->getMessage());
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = :product_id");
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return number_format($result['average'], 1, '.', '');
    } catch(PDOException $e) {
        die("Error calculating average rating: " . $e->getMessage());
    }
}

// Function to display reviews
function displayReviews($product_id) {
    $reviews = getReviews($product_id);
    
    if(empty($reviews)) {
        echo "<p>No reviews available for this product.</p>";
        return;
    }
    
    // Display average rating
    $average_rating = getAverageRating($product_id);
    echo "<h3>Product Rating: $average_rating/5</h3>";
    
    // Display individual reviews
    foreach ($reviews as $review) {
        echo "<div class='review'>";
            echo "<div class='review-header'>";
                echo "<span class='user-name'>{$review['user_name']}</span>";
                echo "<span class='rating'>";
                    for($i = 1; $i <= $review['rating']; $i++) {
                        echo "<span class='star'>★</span>";
                    }
                echo "</span>";
                echo "<span class='date'>{$review['review_date']}</span>";
            echo "</div>";
            
            echo "<div class='review-body'>";
                echo "<p>{$review['comment']}</p>";
            echo "</div>";
        echo "</div>";
    }
}
?>


<?php displayReviews($product_id); ?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to add a new review
function addReview($productId, $userName, $rating, $comment) {
    global $conn;
    
    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            (product_id, user_name, rating, comment, submission_date)
            VALUES (:product_id, :user_name, :rating, :comment, NOW())
        ");
        
        $stmt->bindParam(':product_id', $productId);
        $stmt->bindParam(':user_name', $userName);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to fetch all reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("
            SELECT * 
            FROM reviews 
            WHERE product_id = :product_id 
            ORDER BY submission_date DESC
        ");
        
        $stmt->bindParam(':product_id', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to calculate and display average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("
            SELECT 
                COUNT(rating) AS total_reviews,
                AVG(rating) AS average_rating 
            FROM reviews 
            WHERE product_id = :product_id
        ");
        
        $stmt->bindParam(':product_id', $productId);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['total_reviews'] > 0) {
            return number_format($result['average_rating'], 1, '.', '');
        } else {
            return 'No ratings yet';
        }
    } catch (PDOException $e) {
        echo "Error calculating average rating: " . $e->getMessage();
        return false;
    }
}

// Function to moderate reviews (delete a review)
function deleteReview($reviewId, $isAdmin = false) {
    global $conn;
    
    // Only admins can delete reviews
    if (!$isAdmin) {
        return false;
    }
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("
            DELETE FROM reviews 
            WHERE review_id = :review_id
        ");
        
        $stmt->bindParam(':review_id', $reviewId);
        $stmt->execute();
        
        return true;
    } catch (PDOException $e) {
        echo "Error deleting review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add a new review
    if (isset($_POST['submit_review'])) {
        $productId = $_POST['product_id'];
        $userName = htmlspecialchars($_POST['user_name']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);
        
        // Validate input
        if ($rating < 1 || $rating > 5) {
            die("Invalid rating. Please select a rating between 1 and 5.");
        }
        
        addReview($productId, $userName, $rating, $comment);
    }
}

// Display reviews for product ID 1
$reviews = getReviews(1);

if ($reviews) {
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
        echo "<p><strong>" . htmlspecialchars($review['user_name']) . "</strong></p>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "<small>Submitted on: " . $review['submission_date'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
echo "<h4>Average Rating: " . getAverageRating(1) . "/5</h4>";

?>


<?php
function createReview($reviewText, $rating, $userId, $productId) {
    // Database connection parameters
    $host = 'localhost';  // Replace with your database host
    $username = 'username';  // Replace with your database username
    $password = 'password';  // Replace with your database password
    $database = ' dbname';   // Replace with your database name

    // Create connection
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check connection
    if (!$conn) {
        throw new Exception("Connection failed: " . mysqli_connect_error());
    }

    try {
        // SQL statement to insert review
        $sql = "INSERT INTO reviews (review_text, rating, user_id, product_id)
                VALUES (?, ?, ?, ?)";

        $stmt = mysqli_prepare($conn, $sql);

        if ($stmt === false) {
            throw new Exception("Prepare failed: " . mysqli_error($conn));
        }

        // Bind parameters
        mysqli_stmt_bind_param($stmt, "ssii", $reviewText, $rating, $userId, $productId);

        // Validate input data
        if (empty($reviewText) || empty($rating) || empty($userId) || empty($productId)) {
            throw new Exception("All fields are required");
        }

        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Execute the statement
        $result = mysqli_stmt_execute($stmt);

        if (!$result) {
            throw new Exception("Execute failed: " . mysqli_stmt_error($stmt));
        }

        // Close statements and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);

        return true;

    } catch (Exception $e) {
        // Log the error or display it to the user
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


// Example usage:
$reviewText = "Great product!";
$rating = 5;
$userId = 123;
$productId = 456;

if (createReview($reviewText, $rating, $userId, $productId)) {
    echo "Review added successfully!";
}


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Validate input
    if (empty($user_id) || empty($product_id) || empty($rating)) {
        return "All fields must be filled out";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    // Connect to database
    $db_host = 'localhost';
    $db_name = 'your_database';
    $db_user = 'your_username';
    $db_pass = 'your_password';

    $conn = mysqli_connect($db_host, $db_user, $db_pass, $db_name);
    
    if (!$conn) {
        return "Database connection failed: " . mysqli_connect_error();
    }

    // Prepare and execute SQL statement
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (?, ?, ?, ?, NOW())";
            
    $stmt = mysqli_prepare($conn, $sql);
    
    if (!$stmt) {
        return "SQL error: " . mysqli_error($conn);
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        $affected_rows = mysqli_stmt_affected_rows($stmt);
        
        if ($affected_rows == 1) {
            return "Thank you for your review!";
        } else {
            return "Review submission failed";
        }
    } else {
        return "Error: " . mysqli_error($conn);
    }

    // Close statement and connection
    mysqli_stmt_close($stmt);
    mysqli_close($conn);
}

// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "Great product! Highly recommended.";

$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result;
?>


<?php
// Review submission and display function
function handleReviews($product_id) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Submit review
    if (isset($_POST['submit_review'])) {
        // Sanitize inputs
        $name = mysqli_real_escape_string($conn, $_POST['reviewer_name']);
        $email = mysqli_real_escape_string($conn, $_POST['reviewer_email']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Validate inputs
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            echo "Please fill in all fields.";
        } else {
            // Insert review into database
            $stmt = mysqli_prepare($conn, "INSERT INTO reviews (product_id, user_name, user_email, rating, comment, timestamp) VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)");
            mysqli_stmt_bind_param($stmt, "issssi", $product_id, $name, $email, $rating, $comment);
            
            if (mysqli_stmt_execute($stmt)) {
                echo "<div class='success'>Thank you for submitting your review!</div>";
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    }

    // Display reviews
    $query = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $avg_query = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = ?";
        $avg_stmt = mysqli_prepare($conn, $avg_query);
        mysqli_stmt_bind_param($avg_stmt, "i", $product_id);
        mysqli_stmt_execute($avg_stmt);
        $avg_result = mysqli_stmt_get_result($avg_stmt);
        $row = mysqli_fetch_assoc($avg_result);
        $average_rating = number_format((float)$row['avg_rating'], 1, '.', '');

        echo "<h3>Customer Reviews</h3>";
        echo "<p class='rating'>Average Rating: " . $average_rating . "/5 (" . mysqli_num_rows($result) . " reviews)</p>";

        // Display each review
        while ($review = mysqli_fetch_assoc($result)) {
            $stars_html = str_repeat("<span class='star'>★</span>", $review['rating']);
            $date = date("d/m/Y H:i", strtotime($review['timestamp']));
            
            echo "<div class='review'>";
            echo "<div class='review-header'>";
            echo "<strong>" . $review['user_name'] . "</strong>";
            echo "<span class='stars'>" . $stars_html . "</span>";
            echo "<small>(" . $date . ")</small>";
            echo "</div>";
            echo "<p class='comment'>" . $review['comment'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }

    // Close database connection
    mysqli_close($conn);
}

// Display review form
function displayReviewForm() {
    ?>
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <div class="form-group">
            <label for="reviewer_name">Name:</label>
            <input type="text" id="reviewer_name" name="reviewer_name" required>
        </div>

        <div class="form-group">
            <label for="reviewer_email">Email:</label>
            <input type="email" id="reviewer_email" name="reviewer_email" required>
        </div>

        <div class="form-group">
            <label>Rating:</label><br>
            <?php
            // Display rating stars
            for ($i = 1; $i <= 5; $i++) {
                echo "<input type='radio' name='rating' value='$i'>★ ";
            }
            ?>
        </div>

        <div class="form-group">
            <label for="comment">Review:</label>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>

        <button type="submit" name="submit_review">Submit Review</button>
    </form>
    <?php
}

// Usage example:
if (isset($_GET['product_id'])) {
    displayReviewForm();
    handleReviews($_GET['product_id']);
}
?>


<?php
// Connect to database
$connection = mysqli_connect("localhost", "username", "password", "database");

function submitReview($review_id, $user_id, $rating, $comment = "", $timestamp) {
    global $connection;

    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please enter a number between 1 and 5.";
    }

    // Prepare SQL statement with placeholders for parameters
    $sql = "INSERT INTO reviews (review_id, user_id, rating, comment, timestamp) 
            VALUES (?, ?, ?, ?, ?)";

    try {
        // Create a prepared statement
        $stmt = mysqli_prepare($connection, $sql);

        // Bind the parameters to the statement
        mysqli_stmt_bind_param($stmt, "issis", $review_id, $user_id, $rating, $comment, $timestamp);

        // Execute the query
        mysqli_stmt_execute($stmt);

        // Check if the query was successful
        if (mysqli_stmt_affected_rows($stmt) == 1) {
            // Return success message
            return "Review submitted successfully!";
        } else {
            // Return error message
            return "Error submitting review.";
        }
    } catch (Exception $e) {
        // Return error message if something goes wrong
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
$review_id = 1;
$user_id = 5;
$rating = 4;
$comment = "Great product!";
$current_timestamp = date("Y-m-d H:i:s");

$result = submitReview($review_id, $user_id, $rating, $comment, $current_timestamp);
echo $result;

// Close database connection
mysqli_close($connection);
?>


<?php
// Include database configuration
require_once('config.php');

function addReview($reviewText, $rating, $userId, $productId) {
    // Connect to the database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Validate input
    if (empty($reviewText) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        echo "Invalid review data!";
        return false;
    }

    try {
        // Escape special characters to prevent SQL injection
        $reviewText = mysqli_real_escape_string($conn, $reviewText);
        
        // Insert the review into the reviews table
        $sql = "INSERT INTO reviews (review_text, rating, user_id, product_id, review_date) 
                VALUES (?, ?, ?, ?, NOW())";
                
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssii", $reviewText, $rating, $userId, $productId);

        if ($stmt->execute()) {
            // Update the average rating for the product
            $sqlAvg = "UPDATE products SET 
                        average_rating = (SELECT AVG(rating) FROM reviews WHERE product_id = ?),
                        review_count = (SELECT COUNT(*) FROM reviews WHERE product_id = ?)
                      WHERE id = ?";
            
            $stmtAvg = $conn->prepare($sqlAvg);
            $stmtAvg->bind_param("iii", $productId, $productId, $productId);
            
            if ($stmtAvg->execute()) {
                return true;
            } else {
                echo "Error updating average rating: " . $stmtAvg->error;
                return false;
            }
        } else {
            echo "Error adding review: " . $stmt->error;
            return false;
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        $conn->close();
    }
}

// Example usage:
// require_once('config.php');
// $reviewText = $_POST['review'];
// $rating = $_POST['rating'];
// $userId = 1; // Get from session or authentication
// $productId = 1; // Get from URL parameter

// if (addReview($reviewText, $rating, $userId, $productId)) {
//     echo "Review added successfully!";
// } else {
//     echo "Failed to add review.";
// }
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($productId, $author, $email, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $author = mysqli_real_escape_string($conn, $author);
    $email = mysqli_real_escape_string($conn, $email);
    $reviewText = mysqli_real_escape_string($conn, $reviewText);
    
    // Check if rating is valid
    if (!ctype_digit((string)$rating) || $rating < 1 || $rating > 5) {
        die("Invalid rating");
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, author, email, review_text, rating, timestamp)
            VALUES ('$productId', '$author', '$email', '$reviewText', '$rating', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        header("Location: product.php?id=$productId");
        exit();
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($productId, $conn) {
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $averageRatingSql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$productId'";
        $averageRatingResult = mysqli_query($conn, $averageRatingSql);
        $averageRatingRow = mysqli_fetch_assoc($averageRatingResult);
        $averageRating = number_format((float)$averageRatingRow['average_rating'], 1, '.', '');
        
        echo "<div class='reviews'>";
        echo "<h2>Customer Reviews</h2>";
        echo "<p>Average Rating: $averageRating/5</p>";
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<div class='review-author'>" . $row['author'] . "</div>";
            echo "<div class='review-rating'>";
            displayStars($row['rating']);
            echo "</div>";
            echo "<div class='review-text'>" . nl2br($row['review_text']) . "</div>";
            echo "<div class='review-date'>" . date('F j, Y g:i a', strtotime($row['timestamp'])) . "</div>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "No reviews yet. Be the first to review this product!";
    }
}

// Function to display rating stars
function displayStars($rating) {
    $fullStars = floor($rating);
    $halfStar = ($rating - $fullStars) >= 0.5 ? 1 : 0;
    
    for ($i = 0; $i < $fullStars; $i++) {
        echo "<span class='star'>★</span>";
    }
    
    if ($halfStar) {
        echo "<span class='star half'>⯨</span>";
    }
    
    for ($i = $fullStars + $halfStar; $i < 5; $i++) {
        echo "<span class='star empty'>☆</span>";
    }
}

// Example usage:
// submitReview(1, "John Doe", "john@example.com", "Great product!", 5, $conn);
// displayReviews(1, $conn);

mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_name VARCHAR(255),
    user_email VARCHAR(255),
    review_text TEXT,
    rating INT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";
mysqli_query($conn, $sql);

// Function to display all reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $total_ratings = 0;
        $num_reviews = 0;

        while ($row = mysqli_fetch_assoc($result)) {
            $total_ratings += $row['rating'];
            $num_reviews++;
        }

        $average_rating = $num_reviews > 0 ? number_format(($total_ratings / $num_reviews), 1) : 0;
        
        // Reset result pointer
        mysqli_data_seek($result, 0);

        echo '<div class="review-container">';
        echo "<h3>Rating: $average_rating/5 ($num_reviews reviews)</h3>";

        while ($row = mysqli_fetch_assoc($result)) {
            echo '<div class="review-item">';
            echo "<h4>{$row['user_name']}</h4>";
            echo "<p>{$row['review_text']}</p>";
            
            // Display stars
            $stars = str_repeat('<i class="fas fa-star"></i>', $row['rating']);
            $empty_stars = str_repeat('<i class="far fa-star"></i>', 5 - $row['rating']);
            echo "<div class=\"stars\">{$stars}{$empty_stars}</div>";
            
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            echo '</div>';
        }
        echo '</div>';
    } else {
        echo '<p>No reviews yet. Be the first to review this product!</p>';
    }
}

// Function to submit a new review
function submit_review() {
    global $conn;

    if (isset($_POST['submit-review'])) {
        // Validate and sanitize input
        $product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;
        $user_name = mysqli_real_escape_string($conn, trim($_POST['review-name']));
        $user_email = mysqli_real_escape_string($conn, trim($_POST['review-email']));
        $review_text = mysqli_real_escape_string($conn, trim($_POST['review-text']));
        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;

        if (empty($user_name) || empty($user_email) || empty($review_text) || $rating < 1 || $rating > 5) {
            echo '<div class="error">Please fill in all required fields and select a valid rating.</div>';
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_name, user_email, review_text, rating) 
                VALUES (?, ?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 'isssi', $product_id, $user_name, $user_email, $review_text, $rating);

        if (mysqli_stmt_execute($stmt)) {
            echo '<div class="success">Thank you for your review!</div>';
            // Refresh reviews section
            display_reviews($product_id);
        } else {
            echo '<div class="error">Error submitting review. Please try again later.</div>';
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php display_reviews(1); ?>


<?php
class ReviewSystem {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Add a new review
    public function addReview($user_id, $product_id, $rating, $comment) {
        try {
            // Validate input
            if (!is_numeric($user_id) || !is_numeric($product_id) || 
                $rating < 1 || $rating > 5 || empty($comment)) {
                throw new Exception("Invalid input data");
            }

            // Check if user and product exist
            $this->checkUserExists($user_id);
            $this->checkProductExists($product_id);

            // Insert review into database
            $stmt = $this->conn->prepare("
                INSERT INTO reviews (user_id, product_id, rating, comment)
                VALUES (?, ?, ?, ?)
            ");
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
            $stmt->execute();

            // Update average rating for the product
            $this->updateProductRating($product_id);

            return "Review added successfully";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Get all reviews for a product
    public function getReviewsByProductId($product_id) {
        try {
            $this->checkProductExists($product_id);

            $stmt = $this->conn->prepare("
                SELECT r.*, u.username 
                FROM reviews r 
                JOIN users u ON r.user_id = u.id 
                WHERE product_id = ?
                ORDER BY review_date DESC
            ");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            return $result->fetch_all(MYSQLI_ASSOC);
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Update product average rating
    private function updateProductRating($product_id) {
        try {
            $stmt = $this->conn->prepare("
                UPDATE products 
                SET total_ratings = (
                    SELECT COUNT(*) FROM reviews WHERE product_id = ?
                ),
                avg_rating = (
                    SELECT AVG(rating) FROM reviews WHERE product_id = ?
                )
                WHERE id = ?
            ");
            $stmt->bind_param("iii", $product_id, $product_id, $product_id);
            $stmt->execute();
        } catch (Exception $e) {
            throw new Exception("Error updating product rating: " . $e->getMessage());
        }
    }

    // Check if user exists
    private function checkUserExists($user_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT id FROM users WHERE id = ?
            ");
            $stmt->bind_param("i", $user_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                throw new Exception("User does not exist");
            }
        } catch (Exception $e) {
            throw new Exception("Error checking user: " . $e->getMessage());
        }
    }

    // Check if product exists
    private function checkProductExists($product_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT id FROM products WHERE id = ?
            ");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                throw new Exception("Product does not exist");
            }
        } catch (Exception $e) {
            throw new Exception("Error checking product: " . $e->getMessage());
        }
    }

    // Update a review
    public function updateReview($review_id, $new_rating, $new_comment) {
        try {
            if (!is_numeric($review_id) || $new_rating < 1 || $new_rating > 5 || empty($new_comment)) {
                throw new Exception("Invalid input data");
            }

            // Check if review exists
            $this->checkReviewExists($review_id);

            $stmt = $this->conn->prepare("
                UPDATE reviews 
                SET rating = ?, comment = ? 
                WHERE id = ?
            ");
            $stmt->bind_param("isi", $new_rating, $new_comment, $review_id);
            $stmt->execute();

            // Update product average rating
            $product_id = $this->getProductIdFromReview($review_id);
            $this->updateProductRating($product_id);

            return "Review updated successfully";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Check if review exists
    private function checkReviewExists($review_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT id FROM reviews WHERE id = ?
            ");
            $stmt->bind_param("i", $review_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                throw new Exception("Review does not exist");
            }
        } catch (Exception $e) {
            throw new Exception("Error checking review: " . $e->getMessage());
        }
    }

    // Get product ID from review
    private function getProductIdFromReview($review_id) {
        try {
            $stmt = $this->conn->prepare("
                SELECT product_id FROM reviews WHERE id = ?
            ");
            $stmt->bind_param("i", $review_id);
            $stmt->execute();
            $result = $stmt->get_result();

            return $result->fetch_assoc()['product_id'];
        } catch (Exception $e) {
            throw new Exception("Error getting product ID: " . $e->getMessage());
        }
    }

    // Delete a review
    public function deleteReview($review_id) {
        try {
            if (!is_numeric($review_id)) {
                throw new Exception("Invalid input data");
            }

            // Check if review exists
            $this->checkReviewExists($review_id);

            $stmt = $this->conn->prepare("
                DELETE FROM reviews WHERE id = ?
            ");
            $stmt->bind_param("i", $review_id);
            $stmt->execute();

            // Update product average rating
            $product_id = $this->getProductIdFromReview($review_id);
            $this->updateProductRating($product_id);

            return "Review deleted successfully";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Display reviews with pagination
    public function displayReviews($product_id, $page = 1, $per_page = 5) {
        try {
            $this->checkProductExists($product_id);

            $offset = ($page - 1) * $per_page;

            $stmt = $this->conn->prepare("
                SELECT r.*, u.username 
                FROM reviews r 
                JOIN users u ON r.user_id = u.id 
                WHERE product_id = ?
                ORDER BY review_date DESC
                LIMIT ?, ?
            ");
            $stmt->bind_param("iii", $product_id, $offset, $per_page);
            $stmt->execute();
            $result = $stmt->get_result();

            return $result->fetch_all(MYSQLI_ASSOC);
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }
}
?>


$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}


$reviewSystem = new ReviewSystem($conn);


$result = $reviewSystem->addReview(1, 101, 5, "Great product!");
echo $result;


$reviews = $reviewSystem->getReviewsByProductId(101);
foreach ($reviews as $review) {
    echo "Rating: " . $review['rating'] . "<br>";
    echo "Comment: " . $review['comment'] . "<br>";
}


$result = $reviewSystem->deleteReview(201);
echo $result;


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize inputs
    $name = htmlspecialchars($_POST['name']);
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    $rating = intval($_POST['rating']);
    $review_text = htmlspecialchars($_POST['review']);

    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($review_text)) {
        die("All fields are required!");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5 stars!");
    }

    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, review_text, created_at) 
                              VALUES (:name, :email, :rating, :review_text, NOW())");
        
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':review_text', $review_text);

        $stmt->execute();
    } catch (PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Get all reviews
try {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY created_at DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    die("Error fetching reviews: " . $e->getMessage());
}

// Calculate average rating
$averageRating = 0;
$totalReviews = count($reviews);

if ($totalReviews > 0) {
    $sumRatings = array_sum(array_column($reviews, 'rating'));
    $averageRating = $sumRatings / $totalReviews;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Review System</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
        }
        .star {
            color: #ddd;
            text-decoration: none;
        }
        .star.active {
            color: gold;
        }
        .review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .review-list {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <input type="email" name="email" placeholder="Your Email" required><br><br>
            
            <div class="rating-stars">
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
                <a href="#" class="star">★</a>
            </div>
            
            <select name="rating" required>
                <option value="">Choose Rating</option>
                <option value="5">Excellent</option>
                <option value="4">Very Good</option>
                <option value="3">Good</option>
                <option value="2">Fair</option>
                <option value="1">Poor</option>
            </select><br><br>

            <textarea name="review" placeholder="Write your review here..." rows="5" required></textarea><br><br>
            
            <input type="submit" value="Submit Review">
        </form>
    </div>

    <div class="review-list">
        <h2>Reviews</h2>
        <?php if ($totalReviews > 0): ?>
            <p>Average Rating: <?php echo number_format($averageRating, 1); ?> stars out of 5 (<?php echo $totalReviews; ?> reviews)</p>
            
            <?php foreach ($reviews as $review): 
                $rating = $review['rating'];
                $stars = str_repeat("★", $rating) . str_repeat("☆", 5 - $rating);
            ?>
                <div style="border-bottom: 1px solid #ccc; padding-bottom: 10px; margin-bottom: 10px;">
                    <h3><?php echo $review['name']; ?></h3>
                    <p class="stars"><?php echo $stars; ?></p>
                    <p><?php echo $review['review_text']; ?></p>
                    <small>Posted on <?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
                </div>
            <?php endforeach; ?>
        <?php else: ?>
            <p>No reviews yet. Be the first to review!</p>
        <?php endif; ?>
    </div>
</body>
</html>


<?php
session_start();

// Initialize reviews if not set
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

$reviewSubmitted = false;
$error = "";

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Check if it's a delete action
    if (isset($_POST['delete_id'])) {
        $id = intval($_POST['delete_id']);
        if (array_key_exists($id, $_SESSION['reviews'])) {
            unset($_SESSION['reviews'][$id]);
            // Re-index the array to maintain sequential keys
            $_SESSION['reviews'] = array_values($_SESSION['reviews']);
        }
    } else {
        $name = trim(htmlspecialchars($_POST['name']));
        $comment = trim(htmlspecialchars($_POST['comment']));

        if ($name == "" || $comment == "") {
            $error = "Please fill in both name and comment!";
        } elseif (strlen($name) > 50 || strlen($comment) > 1000) {
            $error = "Name must be less than 50 characters and comment less than 1000 characters!";
        } else {
            // Add the new review with an ID
            $id = count($_SESSION['reviews']);
            $_SESSION['reviews'][$id] = array(
                'name' => $name,
                'comment' => $comment
            );
            $reviewSubmitted = true;
        }
    }
}

// Function to display all reviews and the form
function display_reviews() {
    global $error, $reviewSubmitted;

    // Display error message if any
    if ($error != "") {
        echo "<div class='error'>$error</div>";
        $error = ""; // Clear the error after displaying
    }

    // If a review was submitted successfully
    if ($reviewSubmitted) {
        echo "<div class='success'>Thank you for your review!</div>";
    }

    // Display existing reviews
    if (!empty($_SESSION['reviews'])) {
        echo "<h3>Existing Reviews:</h3><ul>";
        foreach ($_SESSION['reviews'] as $id => $review) {
            echo "<li>";
            echo "Name: <strong>" . $review['name'] . "</strong><br />";
            echo "Comment: " . $review['comment'];
            // Add delete button
            echo "<form style='display:inline;' method='post'>";
            echo "<input type='hidden' name='delete_id' value='$id'/>";
            echo "<button type='submit'>Delete</button>";
            echo "</form>";
            echo "</li><br />";
        }
        echo "</ul>";
    } else {
        echo "No reviews yet!";
    }

    // Display the review form
    echo "<h3>Add a Review:</h3>";
    echo "<form method='post' action='".$_SERVER['PHP_SELF']."'>";
    echo "Name: <input type='text' name='name'/><br />";
    echo "Comment: <textarea name='comment' rows='4' cols='50'></textarea><br />";
    echo "<input type='submit' value='Submit Review'/>";
    echo "</form>";
}

// Call the function to display everything
display_reviews();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "review_system";

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($productId, $userName, $userEmail, $rating, $comment) {
    global $conn;

    // Sanitize inputs
    $userName = htmlspecialchars(strip_tags($userName));
    $userEmail = filter_var($userEmail, FILTER_VALIDATE_EMAIL);
    $rating = (int)$rating;
    $comment = htmlspecialchars(strip_tags($comment));

    if (!$userEmail || $rating < 1 || $rating > 5) {
        return false;
    }

    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, comment) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("issss", $productId, $userName, $userEmail, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;

    $reviews = array();
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $review = array(
            'id' => $row['review_id'],
            'user_name' => $row['user_name'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date_posted' => $row['date_posted']
        );
        array_push($reviews, $review);
    }

    return $reviews;
}

// Close database connection
$conn->close();
?>


<?php
function submitReview($reviewText, $productId, $userId = null) {
    // Validate input
    if (empty($reviewText) || empty($productId)) {
        return false;
    }

    // Sanitize input
    $reviewText = htmlspecialchars(trim($reviewText));
    $productId = intval($productId);
    
    if ($userId !== null) {
        $userId = intval($userId);
    }

    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prepare and execute SQL statement with prepared statements
    $sql = "INSERT INTO reviews (product_id, user_id, review_text, rating, timestamp) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
    
    if ($userId !== null) {
        $stmt = mysqli_prepare($conn, $sql);
        $rating = 5; // You can modify this to accept a rating parameter
        mysqli_stmt_bind_param($stmt, "iisi", $productId, $userId, $reviewText, $rating);
    } else {
        $sql = "INSERT INTO reviews (product_id, review_text, rating, timestamp) VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
        $stmt = mysqli_prepare($conn, $sql);
        $rating = 5; // You can modify this to accept a rating parameter
        mysqli_stmt_bind_param($stmt, "isi", $productId, $reviewText, $rating);
    }

    if (mysqli_stmt_execute($stmt)) {
        // Get the inserted review ID
        $reviewId = mysqli_insert_id($conn);
        return $reviewId;
    } else {
        // Return false if insertion failed
        return false;
    }

    // Close database connection
    mysqli_close($conn);
}
?>


$reviewText = "This is an excellent product!";
$productId = 123;
$userId = 456;

submitReview($reviewText, $productId, $userId);


$reviewText = "Great product!";
$productId = 123;

submitReview($reviewText, $productId);


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$database = "review_db";

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
            VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display all reviews for a product
function displayReviews($productId) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId'
            ORDER BY timestamp DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . str_repeat("★", $row['rating']) . "</h3>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available for this product.</p>";
    }
}

// Example usage:
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <?php
    // Display all reviews for product ID 1
    displayReviews(1);
    
    // Add a new review (example)
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $userId = 1; // Assume user is logged in
        $productId = $_POST['product_id'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (!empty($rating) && !empty($comment)) {
            addReview($userId, $productId, $rating, $comment);
            echo "<script>window.location.href='?success=1'</script>";
        }
    }
    
    // Show success message
    if (isset($_GET['success'])) {
        echo "<p>Thank you for submitting your review!</p>";
    }
    ?>
    
    <!-- Review Form -->
    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        <input type="hidden" name="product_id" value="1">
        
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Choose a rating</option>
                <option value="5">★ ★ ★ ★ ★</option>
                <option value="4">★ ★ ★ ★</option>
                <option value="3">★ ★ ★</option>
                <option value="2">★ ★</option>
                <option value="1">★</option>
            </select>
        </div><br>

        <div>
            <label for="comment">Review:</label><br>
            <textarea id="comment" name="comment"></textarea>
        </div><br>

        <button type="submit">Submit Review</button>
    </form>
</body>
</html>


<?php
function submitReview($user_id, $product_id, $rating, $comments = null) {
    // Database connection parameters
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    try {
        // Create database connection
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check if user already reviewed this product
        $checkReviewQuery = "
            SELECT review_id 
            FROM reviews 
            WHERE user_id = ? AND product_id = ?
        ";
        
        $stmt = $conn->prepare($checkReviewQuery);
        $stmt->bind_param("ii", $user_id, $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            // Insert new review
            $insertReviewQuery = "
                INSERT INTO reviews (user_id, product_id, rating, comments)
                VALUES (?, ?, ?, ?)
            ";
            
            $stmt = $conn->prepare($insertReviewQuery);
            $comments = ($comments === null) ? "" : mysqli_real_escape_string($conn, $comments);
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comments);
            $stmt->execute();

            // Update average rating for the product
            $updateAvgQuery = "
                UPDATE products 
                SET average_rating = (
                    SELECT AVG(rating) 
                    FROM reviews 
                    WHERE product_id = ?
                ) 
                WHERE product_id = ?
            ";
            
            $stmt = $conn->prepare($updateAvgQuery);
            $stmt->bind_param("ii", $product_id, $product_id);
            $stmt->execute();

            return "Review submitted successfully!";
        } else {
            // User already reviewed this product
            return "You have already reviewed this product.";
        }
    } catch (Exception $e) {
        // Handle any errors that occur
        return "Error submitting review: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($conn != null) {
            $conn->close();
        }
    }
}

// Example usage:
$user_id = 1;
$product_id = 101;
$rating = 5;
$comments = "Great product! Highly recommend.";

$result = submitReview($user_id, $product_id, $rating, $comments);
echo $result;

?>


<?php
function submit_review($user_id, $review_text, $rating) {
    // Validate inputs
    if (!isset($user_id) || !is_int($user_id)) {
        return false;
    }
    if (empty($review_text)) {
        return false;
    }
    if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false;
    }

    // Database connection
    $db = mysqli_connect('localhost', 'username', 'password', 'database_name');
    if (!$db) {
        trigger_error("Database connection failed: " . mysqli_error($db), E_USER_ERROR);
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($db, $user_id);
    $review_text = mysqli_real_escape_string($db, $review_text);
    $rating = mysqli_real_escape_string($db, $rating);

    // Insert review into database
    $query = "INSERT INTO reviews (user_id, review_text, rating) VALUES ('$user_id', '$review_text', '$rating')";
    
    if (!mysqli_query($db, $query)) {
        trigger_error("Database query failed: " . mysqli_error($db), E_USER_ERROR);
        return false;
    }

    // Close database connection
    mysqli_close($db);

    // Return true if review was submitted successfully
    return true;
}

// Example usage:
$user_id = 123;
$review_text = "This is a great product!";
$rating = 5;

if (submit_review($user_id, $review_text, $rating)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}
?>


<?php
function submit_review($productId, $rating, $username, $comment) {
    // Database connection details
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'reviews_db';

    try {
        // Connect to database
        $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
        
        if (!$conn) {
            throw new Exception("Could not connect to the database");
        }

        // Check if user has already reviewed this product
        $checkQuery = "SELECT * FROM reviews WHERE product_id = ? AND username = ?";
        $stmtCheck = mysqli_prepare($conn, $checkQuery);
        mysqli_stmt_bind_param($stmtCheck, "is", $productId, $username);
        mysqli_stmt_execute($stmtCheck);
        $resultCheck = mysqli_stmt_get_result($stmtCheck);

        if (mysqli_num_rows($resultCheck) > 0) {
            // User already reviewed this product
            return false;
        }

        // Insert new review into the database
        $insertQuery = "INSERT INTO reviews (product_id, rating, username, comment, review_date) 
                       VALUES (?, ?, ?, ?, NOW())";
        
        $stmtInsert = mysqli_prepare($conn, $insertQuery);
        mysqli_stmt_bind_param($stmtInsert, "isss", $productId, $rating, $username, $comment);

        if (mysqli_stmt_execute($stmtInsert)) {
            // Review submitted successfully
            return true;
        } else {
            // Error submitting review
            throw new Exception("Error submitting review: " . mysqli_error($conn));
        }

    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        if ($conn) {
            mysqli_close($conn);
        }
    }
}

// Example usage:
$product_id = 123; // Replace with actual product ID
$rating = 5; // Rating between 1-5
$username = "john_doe";
$comment = "This is a great product!";

try {
    if (submit_review($product_id, $rating, $username, $comment)) {
        echo "Review submitted successfully!";
    } else {
        echo "You have already reviewed this product.";
    }
} catch (Exception $e) {
    echo 'Error: ' . $e->getMessage();
}
?>


<?php
// Function to handle review submission
function submit_review() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Sanitize inputs
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate required fields
        if (empty($name) || empty($email)) {
            die("Please fill in all required fields.");
        }

        // Set date of review
        $date = date('Y-m-d H:i:s');

        // Generate unique review ID
        $review_id = uniqid();

        // Review data array
        $review_data = [
            'id' => $review_id,
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => $date
        ];

        // Save review to file
        $file_path = 'reviews.txt';
        
        // Open file for appending
        $file_handle = fopen($file_path, 'a');
        
        if ($file_handle) {
            // Write serialized data to file
            fwrite($file_handle, serialize($review_data) . "
");
            fclose($file_handle);
            
            echo "Thank you for submitting your review!";
            header("Refresh: 2; url=reviews.php");
            exit();
        } else {
            die("Error saving review. Please try again.");
        }
    }
}

// Function to display stored reviews
function display_reviews() {
    $file_path = 'reviews.txt';
    
    if (file_exists($file_path)) {
        $reviews_file = fopen($file_path, 'r');
        
        while (($line = fgets($reviews_file)) !== false) {
            // Unserialize review data
            $review_data = unserialize($line);
            
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($review_data['name']) . "</h3>";
            echo "<p><strong>Email:</strong> " . htmlspecialchars($review_data['email']) . "</p>";
            echo "<p><strong>Rating:</strong> ";
            
            // Display stars based on rating
            for ($i = 1; $i <= $review_data['rating']; $i++) {
                echo "★";
            }
            
            echo "</p>";
            echo "<p>" . htmlspecialchars($review_data['comment']) . "</p>";
            echo "<p><em>Posted on: " . $review_data['date'] . "</em></p>";
            echo "</div>";
        }
        
        fclose($reviews_file);
    } else {
        echo "No reviews found.";
    }
}

// Function to delete a review
function delete_review($id) {
    $file_path = 'reviews.txt';
    
    if (file_exists($file_path)) {
        $temp_array = array();
        $file_handle = fopen($file_path, 'r');
        
        while (($line = fgets($file_handle)) !== false) {
            $review_data = unserialize($line);
            
            if ($review_data['id'] != $id) {
                array_push($temp_array, $line);
            }
        }
        
        fclose($file_handle);
        
        // Rewrite file without the deleted review
        $file_handle = fopen($file_path, 'w');
        foreach ($temp_array as $line) {
            fwrite($file_handle, $line);
        }
        fclose($file_handle);
    }
}

// Example form HTML
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Submit Review</title>
</head>
<body>
    <h1>Submit Your Review</h1>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>
        
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars (Best)</option>
        </select><br>
        
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment"></textarea><br>
        
        <input type="submit" value="Submit Review">
    </form>
    
    <?php
    // Submit review when form is submitted
    if (isset($_POST['name']) && isset($_POST['email'])) {
        submit_review();
    }
    ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($product_id, $user_name, $user_email, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $rating = (int)mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews 
            (product_id, user_name, user_email, rating, comment, submission_date)
            VALUES 
            ('$product_id', '$user_name', '$user_email', '$rating', '$comment', NOW())";
            
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    // Get reviews for product
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    // Calculate average rating
    $total_ratings = 0;
    $num_reviews = 0;
    while ($row = $result->fetch_assoc()) {
        $total_ratings += $row['rating'];
        $num_reviews++;
    }
    if ($num_reviews > 0) {
        $average_rating = $total_ratings / $num_reviews;
    } else {
        $average_rating = 0;
    }
    
    // Reset and fetch reviews again for display
    $result->rewind();
    
    echo "<div class='reviews'>";
    echo "<h3>Product Reviews</h3>";
    echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";
    
    while ($row = $result->fetch_assoc()) {
        $date = date("F j, Y", strtotime($row['submission_date']));
        
        echo "<div class='review'>";
        echo "<h4>" . $row['user_name'] . "</h4>";
        echo "<p>Submitted on: " . $date . "</p>";
        display_stars($row['rating']);
        echo "<p>" . $row['comment'] . "</p>";
        echo "</div>";
    }
    
    echo "</div>";
}

// Helper function to display stars
function display_stars($rating) {
    $full Stars = (int)$rating;
    $half_star = ($rating - $full_stars) >= 0.5 ? 1 : 0;
    
    for ($i = 0; $i < $full_stars; $i++) {
        echo "<span class='star'>★</span>";
    }
    
    if ($half_star) {
        echo "<span class='star'>⯨</span>";
    }
    
    for ($i = $full_stars + $half_star; $i < 5; $i++) {
        echo "<span class='star'>☆</span>";
    }
}

// Example usage:
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .star { color: #ffd700; }
    </style>
</head>
<body>
    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="123">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select rating</option>
                <option value="5">5 Stars</option>
                <option value="4.5">4.5 Stars</option>
                <option value="4">4 Stars</option>
                <option value="3.5">3.5 Stars</option>
                <option value="3">3 Stars</option>
                <option value="2.5">2.5 Stars</option>
                <option value="2">2 Stars</option>
                <option value="1.5">1.5 Stars</option>
                <option value="1">1 Star</option>
            </select>
        </div>
        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>
        <button type="submit">Submit Review</button>
    </form>

    <?php
    // Handle form submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (submit_review($product_id, $name, $email, $rating, $comment)) {
            echo "<script>alert('Thank you for your review!');</script>";
        } else {
            echo "<script>alert('Error submitting review. Please try again.');";
        }
    }

    // Display existing reviews
    display_reviews(123);
    ?>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
// Function to add new user review
function addReview($username, $rating, $comment) {
    // Validate input
    if (empty($comment)) {
        throw new Exception("Comment cannot be empty");
    }
    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5 stars");
    }

    // Get existing reviews or create an empty array
    $reviews = getStoredReviews();

    // Create a new review entry
    $review = [
        'username' => htmlspecialchars($username),
        'rating' => $rating,
        'comment' => htmlspecialchars($comment),
        'date' => date('Y-m-d H:i:s')
    ];

    // Add new review to the array
    $reviews[] = $review;

    // Save reviews back to storage
    saveReviews($reviews);

    return true;
}

// Function to display all user reviews
function displayReviews() {
    $reviews = getStoredReviews();
    
    if (empty($reviews)) {
        echo "No reviews yet. Be the first to review!";
        return;
    }

    foreach ($reviews as $review) {
        $stars = str_repeat('★', $review['rating']) . str_repeat('☆', 5 - $review['rating']);
        
        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='username'>$review[username]</span>";
        echo "<span class='rating'>$stars</span>";
        echo "<span class='date'>$review[date]</span>";
        echo "</div>";
        echo "<div class='comment'>$review[comment]</div>";
        echo "</div>";
    }
}

// Helper function to get stored reviews
function getStoredReviews() {
    $reviewsFile = 'reviews.json';
    
    if (file_exists($reviewsFile)) {
        $contents = file_get_contents($reviewsFile);
        return json_decode($contents, true) ?: [];
    } else {
        return [];
    }
}

// Helper function to save reviews
function saveReviews($reviews) {
    $reviewsFile = 'reviews.json';
    
    try {
        $jsonContent = json_encode($reviews, JSON_PRETTY_PRINT);
        file_put_contents($reviewsFile, $jsonContent);
        return true;
    } catch (Exception $e) {
        throw new Exception("Error saving reviews: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        addReview($_POST['username'], $_POST['rating'], $_POST['comment']);
        echo "Thank you for your review!";
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

displayReviews();
?>


<?php
function displayUserReviews($connection) {
    try {
        // Query the database for all reviews
        $sql = "SELECT r.review_id, u.user_name, r.rating, r.comment, r.review_date 
                FROM reviews r 
                INNER JOIN users u ON r.user_id = u.user_id 
                ORDER BY r.review_date DESC";
                
        $result = mysqli_query($connection, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            echo "<div class='no-reviews'>No reviews yet.</div>";
            return;
        }
        
        $html = '<div class="reviews-container">';
        while ($row = mysqli_fetch_assoc($result)) {
            $html .= '
                <div class="review-item">
                    <div class="review-header">
                        <span class="user-name"><strong>' . htmlspecialchars($row['user_name']) . '</strong></span>
                        <span class="rating">' . str_repeat("★", $row['rating']) . '</span>
                    </div>
                    <div class="comment">
                        ' . nl2br(htmlspecialchars($row['comment'])) . '
                    </div>
                </div>';
        }
        $html .= '</div>';
        
        echo $html;
        
    } catch (Exception $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
// Establish database connection
$connection = new mysqli("localhost", "username", "password", "database");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// Display reviews
displayUserReviews($connection);

// Close connection
$connection->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function display_reviews() {
    global $conn;
    
    // Get all reviews from the database
    $query = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $review_id = $row['id'];
            $name = $row['name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $created_at = $row['created_at'];
            $votes = $row['votes'];
            
            // Display the review
            echo "<div class='review'>";
            echo "<h3>Review by: $name</h3>";
            echo "<p>Rating: " . str_repeat("★", $rating) . "</p>";
            echo "<p>$comment</p>";
            echo "<p>Posted on: $created_at</p>";
            echo "<div class='votes'>";
            echo "<span>Votes: $votes</span>";
            echo "<form method='post' action='upvote.php'>";
            echo "<input type='hidden' name='review_id' value='$review_id'>";
            echo "<button type='submit'>↑ Upvote</button>";
            echo "</form>";
            echo "</div>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found.";
    }
}

function add_review($name, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $name);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $query = "INSERT INTO reviews (name, rating, comment) VALUES ('$name', '$rating', '$comment')";
    if (mysqli_query($conn, $query)) {
        return true;
    } else {
        return false;
    }
}

function upvote_review($review_id) {
    global $conn;
    
    // Increment vote count for the review
    $query = "UPDATE reviews SET votes = votes + 1 WHERE id = '$review_id'";
    if (mysqli_query($conn, $query)) {
        return true;
    } else {
        return false;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include 'review_functions.php';
display_reviews();
?>


<?php
include 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($name, $rating, $comment)) {
        echo "Review added successfully!";
    } else {
        echo "Error adding review.";
    }
}
?>


<?php
include 'review_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $review_id = $_POST['review_id'];
    
    if (upvote_review($review_id)) {
        echo "Thank you for voting!";
    } else {
        echo "Error voting.";
    }
}
?>


<?php
// Function to handle user reviews
function processReview($item_id, $rating, $comment, $username) {
    // Set the reviews file path
    $reviews_file = "reviews.json";

    // Get existing reviews from file
    if (file_exists($reviews_file)) {
        $json_data = file_get_contents($reviews_file);
        $reviews = json_decode($json_data, true);
    } else {
        $reviews = array();
    }

    // Validate input
    if (!isset($rating) || !isset($comment) || !isset($username)) {
        return "Please fill in all required fields.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Add new review
    $new_review = array(
        'item_id' => $item_id,
        'username' => $username,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s')
    );

    array_push($reviews, $new_review);

    // Save the updated reviews to file
    $json_data = json_encode($reviews);
    file_put_contents($reviews_file, $json_data);

    return "Thank you for submitting your review!";
}

// Function to get all reviews for an item
function getReviewsByItem($item_id) {
    $reviews_file = "reviews.json";

    if (!file_exists($reviews_file)) {
        return array();
    }

    $json_data = file_get_contents($reviews_file);
    $reviews = json_decode($json_data, true);

    // Filter reviews for the specified item
    $item_reviews = array();
    foreach ($reviews as $review) {
        if ($review['item_id'] == $item_id) {
            array_push($item_reviews, $review);
        }
    }

    return $item_reviews;
}

// Example usage:

// To submit a new review:
$result = processReview(123, 4, "Great product!", "john_doe");
echo $result;

// To get reviews for an item:
$item_reviews = getReviewsByItem(123);
print_r($item_reviews);

?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to add a review
function addReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Escape special characters
    $rating = htmlspecialchars(strip_tags($rating));
    $comment = htmlspecialchars(strip_tags($comment));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, review_date, approved) 
                              VALUES (:userId, :productId, :rating, :comment, NOW(), 0)");
        
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        return true;
    } catch (PDOException $e) {
        echo "Error adding review: " . $e->getMessage();
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r 
                              JOIN users u ON r.user_id = u.id 
                              WHERE r.product_id = :productId AND r.approved = 1 
                              ORDER BY r.review_date DESC");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to get average rating for a product
function getProductRating($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) as average_rating FROM reviews 
                              WHERE product_id = :productId AND approved = 1");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return number_format($result['average_rating'], 1, '.', '');
    } catch (PDOException $e) {
        echo "Error fetching rating: " . $e->getMessage();
        return false;
    }
}

// Function to approve/reject reviews
function moderateReview($reviewId, $approve = true) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE reviews SET approved = :approved WHERE id = :reviewId");
        
        $stmt->bindParam(':reviewId', $reviewId);
        $stmt->bindParam(':approved', $approve ? 1 : 0);
        
        return $stmt->execute();
    } catch (PDOException $e) {
        echo "Error moderating review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add a new review
    $userId = 1; // Get from session or authentication
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($userId, $productId, $rating, $comment)) {
        echo "Review added successfully!";
    }
}

// Display reviews for product ID 1
$reviews = getReviews(1);
if ($reviews) {
    foreach ($reviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<h3>By: " . $review['username'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['review_date'] . "</small>";
        echo "</div>";
    }
}

// Get and display average rating
$averageRating = getProductRating(1);
echo "<h2>Average Rating: $averageRating</h2>";
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

class ReviewSystem {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Submit a new review
    public function submitReview($productId, $name, $email, $rating, $comment) {
        // Sanitize inputs
        $name = htmlspecialchars($name);
        $email = htmlspecialchars($email);
        $comment = htmlspecialchars($comment);

        // Check if all fields are filled
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            return "Please fill in all required fields.";
        }

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return "Invalid email format.";
        }

        // Validate rating (1-5)
        if ($rating < 1 || $rating > 5) {
            return "Rating must be between 1 and 5 stars.";
        }

        // Insert review into database
        $stmt = $this->conn->prepare("INSERT INTO reviews 
                                    (product_id, name, email, rating, comment, submission_date)
                                    VALUES (?, ?, ?, ?, ?, NOW())");
        
        if (!$stmt) {
            return "Database error occurred while submitting review.";
        }

        $stmt->bind_param("isids", $productId, $name, $email, $rating, $comment);

        if ($stmt->execute()) {
            return true;
        } else {
            return "Error submitting review: " . $stmt->error;
        }
    }

    // Display reviews for a product
    public function displayReviews($productId) {
        $reviews = array();
        
        $stmt = $this->conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
        $stmt->bind_param("i", $productId);
        $stmt->execute();

        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            $reviews[] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'submission_date' => $row['submission_date']
            );
        }

        return $this->displayReviewsHTML($reviews);
    }

    // Display reviews HTML
    private function displayReviewsHTML($reviews) {
        if (empty($reviews)) {
            return "<p>No reviews available.</p>";
        }

        $output = '<div class="reviews">';
        
        foreach ($reviews as $review) {
            $output .= '<div class="review-item">';
            $output .= '<h3>' . $review['name'] . '</h3>';
            $output .= '<div class="rating">Rating: ' . str_repeat('★', $review['rating']) . '</div>';
            $output .= '<p>' . $review['comment'] . '</p>';
            $output .= '<small>Posted on: ' . $review['submission_date'] . '</small>';
            $output .= '</div>';
        }

        $averageRating = $this->calculateAverageRating($reviews);
        $output .= '<div class="average-rating">';
        $output .= '<h4>Average Rating:</h4>';
        $output .= '<div>' . str_repeat('★', $averageRating) . '</div>';
        $output .= '</div>';

        $output .= '</div>';

        return $output;
    }

    // Calculate average rating
    private function calculateAverageRating($reviews) {
        if (empty($reviews)) {
            return 0;
        }

        $total = array_sum(array_column($reviews, 'rating'));
        $average = $total / count($reviews);
        return round($average);
    }

    // Upvote a review
    public function upvoteReview($reviewId) {
        $stmt = $this->conn->prepare("UPDATE reviews SET votes = votes + 1 WHERE id = ?");
        $stmt->bind_param("i", $reviewId);

        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }

    // Downvote a review
    public function downvoteReview($reviewId) {
        $stmt = $this->conn->prepare("UPDATE reviews SET votes = votes - 1 WHERE id = ?");
        $stmt->bind_param("i", $reviewId);

        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }
}

// Example usage:
$reviewSystem = new ReviewSystem($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = $reviewSystem->submitReview($_POST['product_id'], $_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    
    if ($result === true) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>$result</div>";
    }
}

echo $reviewSystem->displayReviews(1); // Display reviews for product ID 1

$conn->close();
?>


<?php
function submit_review($review_text, $rating, $id = null) {
    try {
        // Validate input
        if (strlen(trim($review_text)) < 1) {
            throw new Exception("Review cannot be empty");
        }
        
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Database connection
        $mysqli = mysqli_connect("hostname", "username", "password", "database");

        if (mysqli_connect_errno()) {
            return false;
        }

        // Check if updating an existing review or adding a new one
        if ($id !== null) {
            // Verify the review ID exists before updating
            $check_review = mysqli_prepare($mysqli, "SELECT id FROM reviews WHERE id = ?");
            mysqli_stmt_bind_param($check_review, "i", $id);
            mysqli_stmt_execute($check_review);
            mysqli_stmt_store_result($check_review);

            if (mysqli_stmt_num_rows($check_review) === 0) {
                throw new Exception("Review ID does not exist");
            }
        }

        // Prepare SQL statement
        if ($id === null) {
            $stmt = mysqli_prepare($mysqli, "INSERT INTO reviews (review_text, rating) VALUES (?, ?)");
        } else {
            $stmt = mysqli_prepare($mysqli, "UPDATE reviews SET review_text = ?, rating = ? WHERE id = ?");
            mysqli_stmt_bind_param($stmt, "sii", $review_text, $rating, $id);
        }

        if ($id === null) {
            mysqli_stmt_bind_param($stmt, "si", $review_text, $rating);
        }

        // Execute the statement
        if (!mysqli_stmt_execute($stmt)) {
            throw new Exception("Database error occurred");
        }

        // Close statements and connection
        mysqli_stmt_close($stmt);
        mysqli_close($mysqli);

        return ($id === null) ? mysqli_insert_id($mysqli) : true;

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


// Adding a new review
$review_text = "Great product!";
$rating = 5;
$new_review_id = submit_review($review_text, $rating);

if ($new_review_id) {
    echo "Review added successfully with ID: " . $new_review_id;
}

// Updating an existing review
$review_id_to_update = 123;
$updated_review_text = "Product is okay.";
$updated_rating = 3;
$update_success = submit_review($updated_review_text, $updated_rating, $review_id_to_update);

if ($update_success) {
    echo "Review updated successfully";
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user reviews
function handle_reviews() {
    global $conn;
    
    // Check if review form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize and validate input data
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));
        
        // Validate inputs
        if (empty($name)) {
            die("Name is required");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Please enter a valid email address");
        }
        
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5");
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, rating, comment) 
                VALUES (?, ?, ?, ?)";
                
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssis", $name, $email, $rating, $comment);
        
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            die("Error submitting review: " . $conn->error);
        }
    }
    
    // Display reviews
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>Posted on: " . $row['created_at'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) AS average_rating FROM reviews";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        $average_rating = number_format($row['average_rating'], 1);
        echo "<div class='rating'>";
        echo "<h4>Average Rating: " . $average_rating . "/5</h4>";
        echo "</div>";
    }
}

// Call the function
handle_reviews();

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = "localhost";
$user = "root";
$password = "";
$dbname = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Validate input
    if (!is_numeric($user_id) || !is_numeric($product_id)) {
        return "Invalid user or product ID";
    }
    
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Get current date and time
    $date = date("Y-m-d H:i:s");

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', '$date')";

    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Example usage:
$user_id = 1;
$product_id = 101;
$rating = 4;
$comment = "Great product! Highly recommend.";

$result = submit_review($user_id, $product_id, $rating, $comment);
echo $result;

// Close database connection
mysqli_close($conn);
?>


function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Prepare SQL statement
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                                   VALUES (?, ?, ?, ?, ?)");

    if ($stmt === false) {
        return "Error preparing statement: " . mysqli_error($conn);
    }

    // Bind parameters
    $date = date("Y-m-d H:i:s");
    mysqli_stmt_bind_param($stmt, "iisss", $user_id, $product_id, $rating, $comment, $date);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_stmt_error($stmt);
    }

    // Close the statement
    mysqli_stmt_close($stmt);
}


<?php
function submit_review($user_id, $product_id, $rating, $review_title, $review_text) {
    // Validate input
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($review_title) || empty($review_text)) {
        return "All fields are required!";
    }

    // Database connection
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // Escape special characters to prevent SQL injection
        $user_id = $conn->real_escape_string($user_id);
        $product_id = $conn->real_escape_string($product_id);
        $rating = $conn->real_escape_string($rating);
        $review_title = $conn->real_escape_string($review_title);
        $review_text = $conn->real_escape_string($review_text);

        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, review_title, review_text, review_date) 
                VALUES ('$user_id', '$product_id', '$rating', '$review_title', '$review_text', NOW())";

        if ($conn->query($sql) === TRUE) {
            return "Review submitted successfully!";
        } else {
            return "Error: " . $sql . "<br>" . $conn->error;
        }

    } catch (Exception $e) {
        return "Error occurred: " . $e->getMessage();
    }

    // Close database connection
    $conn->close();
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 4;
$review_title = "Great Product!";
$review_text = "This is a fantastic product. Highly recommended!";

$result = submit_review($user_id, $product_id, $rating, $review_title, $review_text);
echo $result;

?>


<?php
// Initialize reviews if not set
if (!isset($_SESSION)) {
    session_start();
}
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $review = array(
        'id' => count($_SESSION['reviews']) + 1,
        'username' => htmlspecialchars(trim($_POST['username'])),
        'rating' => intval($_POST['rating']),
        'comment' => htmlspecialchars(trim($_POST['comment'])),
        'timestamp' => time()
    );

    // Validate input
    if ($review['username'] != "" && $review['rating'] >= 1 && $review['rating'] <= 5 && $review['comment'] != "") {
        array_push($_SESSION['reviews'], $review);
        $_SESSION['message'] = "Review submitted successfully!";
    } else {
        $_SESSION['message'] = "Please fill in all fields with valid information.";
    }
}

// Calculate average rating
$averageRating = 0;
if (count($_SESSION['reviews']) > 0) {
    $sumRatings = array_sum(array_column($_SESSION['reviews'], 'rating'));
    $averageRating = $sumRatings / count($_SESSION['reviews']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
        }
        .stars span {
            color: gold;
        }
        .rating-text {
            display: inline-block;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <?php if (isset($_SESSION['message'])) { ?>
            <div style="color: red; margin-bottom: 10px;"><?php echo $_SESSION['message']; ?></div>
        <?php unset($_SESSION['message']); } ?>

        <p><input type="text" name="username" placeholder="Your Name" required></p>
        <p>Rating:</p>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">⭐⭐⭐⭐⭐ (5)</option>
            <option value="4">⭐⭐⭐⭐ (4)</option>
            <option value="3">⭐⭐⭐ (3)</option>
            <option value="2">⭐⭐ (2)</option>
            <option value="1">⭐ (1)</option>
        </select><br><br>
        <p><textarea name="comment" placeholder="Write your review..." required></textarea></p>
        <button type="submit">Submit Review</button>
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    
    <?php if (count($_SESSION['reviews']) > 0) { ?>
        <div class="average-rating">
            Average Rating: <?php echo number_format($averageRating, 1); ?>/5
        </div>

        <?php foreach ($_SESSION['reviews'] as $review) { ?>
            <div class="review-container">
                <h3><?php echo $review['username']; ?></h3>
                <p><?php echo date('F j, Y g:i a', $review['timestamp']); ?></p>
                <div class="stars">
                    <span>⭐</span>
                    <?php for ($i = 1; $i <= $review['rating'] - 1; $i++) { ?>
                        <span>⭐</span>
                    <?php } ?>
                </div>
                <p class="comment"><?php echo $review['comment']; ?></p>
            </div>
        <?php } ?>
    <?php } else { ?>
        <p>No reviews yet. Be the first to review this product!</p>
    <?php } ?>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        die("Please fill in all required fields.");
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        // Bind parameters
        mysqli_stmt_bind_param($stmt, "ssis", $name, $email, $rating, $comment);
        
        // Execute statement
        if (!mysqli_stmt_execute($stmt)) {
            die("Error submitting review: " . mysqli_error($conn));
        }
        
        // Close statement
        mysqli_stmt_close($stmt);
    }

    // Redirect back to the same page after submission
    header("Location: " . $_SERVER["PHP_SELF"]);
    exit();
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY id DESC";
$result = mysqli_query($conn, $sql);

if (!$result) {
    die("Error fetching reviews: " . mysqli_error($conn));
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .review-item {
            background-color: #f9f9f9;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 5px;
        }
        .stars {
            color: gold;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>
            
            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Select Rating</option>
                    <option value="5">⭐⭐⭐⭐⭐</option>
                    <option value="4">⭐⭐⭐⭐</option>
                    <option value="3">⭐⭐⭐</option>
                    <option value="2">⭐⭐</option>
                    <option value="1">⭐</option>
                </select>
            </div>

            <div>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="4" required></textarea>
            </div>
            
            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <?php if (mysqli_num_rows($result) > 0): ?>
        <h2>Customer Reviews</h2>
        <?php while ($row = mysqli_fetch_assoc($result)): ?>
            <div class="review-item">
                <strong><?php echo $row['name']; ?></strong><br>
                <span class="stars"><?php echo str_repeat("⭐", $row['rating']); ?></span><br>
                <em><?php echo $row['email']; ?></em><br><br>
                <?php echo $row['comment']; ?>
            </div>
        <?php endwhile; ?>
    <?php else: ?>
        <p>No reviews available yet.</p>
    <?php endif; ?>

    <!-- Close database connection -->
    <?php mysqli_close($conn); ?>
</body>
</html>


<?php
function submitReview($userId, $productId, $rating, $comment) {
    // Database connection details
    $host = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbName = "database_name";

    try {
        // Connect to database
        $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
        
        if (!$conn) {
            throw new Exception("Connection failed: " . mysqli_connect_error());
        }

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date) 
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

        $stmt = mysqli_prepare($conn, $sql);
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . mysqli_error($conn));
        }

        // Bind parameters
        mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);

        // Execute the statement
        $result = mysqli_stmt_execute($stmt);
        
        if ($result) {
            // Get the last inserted review ID
            $lastId = mysqli_insert_id($conn);

            // Close the statement and connection
            mysqli_stmt_close($stmt);
            mysqli_close($conn);

            return array(
                "status" => "success",
                "message" => "Review submitted successfully!",
                "review_id" => $lastId
            );
        } else {
            throw new Exception("Execute failed: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        // Close the statement and connection if any
        if (isset($stmt)) {
            mysqli_stmt_close($stmt);
        }
        if (isset($conn)) {
            mysqli_close($conn);
        }

        return array(
            "status" => "error",
            "message" => $e->getMessage()
        );
    }
}
?>


// Example usage:
$reviewResult = submitReview(1, 5, 4, "Great product!");
print_r($reviewResult);


<?php
// Review class
class Review {
    private $review_id;
    private $user_id;
    private $product_id;
    private $rating;
    private $comment;
    private $timestamp;

    // Getters
    public function getReviewId() {
        return $this->review_id;
    }

    public function getUserId() {
        return $this->user_id;
    }

    public function getProductId() {
        return $this->product_id;
    }

    public function getRating() {
        return $this->rating;
    }

    public function getComment() {
        return $this->comment;
    }

    public function getTimestamp() {
        return $this->timestamp;
    }

    // Setters
    public function setReviewId($id) {
        $this->review_id = $id;
    }

    public function setUserId($id) {
        $this->user_id = $id;
    }

    public function setProductId($id) {
        $this->product_id = $id;
    }

    public function setRating($rating) {
        if ($rating >= 1 && $rating <= 5) {
            $this->rating = $rating;
        } else {
            throw new Exception("Invalid rating. Rating must be between 1 and 5.");
        }
    }

    public function setComment($comment) {
        $this->comment = htmlspecialchars(trim($comment));
    }

    public function setTimestamp($timestamp) {
        $this->timestamp = $timestamp;
    }

    // Method to create a new review in the database
    public static function addReview($user_id, $product_id, $rating, $comment) {
        global $connection;

        try {
            $stmt = $connection->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) VALUES (?, ?, ?, ?, NOW())");
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);

            if ($stmt->execute()) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to get all reviews for a specific product
    public static function getAllReviews($product_id) {
        global $connection;

        try {
            $stmt = $connection->prepare("SELECT * FROM reviews WHERE product_id = ?");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            $reviews = array();
            while ($row = $result->fetch_assoc()) {
                $review = new Review();
                $review->setReviewId($row['review_id']);
                $review->setUserId($row['user_id']);
                $review->setProductId($row['product_id']);
                $review->setRating($row['rating']);
                $review->setComment($row['comment']);
                $review->setTimestamp($row['timestamp']);
                $reviews[] = $review;
            }

            return $reviews;
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to delete a review
    public static function deleteReview($review_id) {
        global $connection;

        try {
            $stmt = $connection->prepare("DELETE FROM reviews WHERE review_id = ?");
            $stmt->bind_param("i", $review_id);

            if ($stmt->execute()) {
                return true;
            } else {
                return false;
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to display reviews in HTML format
    public static function displayReviews($reviews) {
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>Review by User ID: " . $review->getUserId() . "</h3>";
                echo "<p>Rating: " . self::getStars($review->getRating()) . "</p>";
                echo "<p>Comment: " . $review->getComment() . "</p>";
                echo "<p>Date: " . $review->getTimestamp() . "</p>";
                echo "</div><br />";
            }
        } else {
            echo "<p>No reviews available.</p>";
        }
    }

    // Helper method to display stars
    private static function getStars($rating) {
        $stars = "";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                $stars .= "★";
            } else {
                $stars .= "☆";
            }
        }
        return $stars;
    }
}

// Example usage:
// Add a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id'];
    $product_id = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    if ($review->addReview($user_id, $product_id, $rating, $comment)) {
        echo "Thank you for your review!";
    } else {
        echo "Error adding review.";
    }
}

// Display all reviews for product with ID 1
$reviews = Review::getAllReviews(1);
Review::displayReviews($reviews);
?>


<?php
function submitReview($username, $reviewText) {
    // Validate input
    if (empty($username) || empty($reviewText)) {
        return "Error: All fields are required.";
    }

    // Database connection details
    $host = 'localhost';
    $db_user = 'your_username';
    $db_password = 'your_password';
    $dbname = 'your_database';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $db_user, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute SQL statement to insert review
        $stmt = $conn->prepare("INSERT INTO reviews (username, review_text) VALUES (:username, :reviewText)");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':reviewText', $reviewText);
        
        $stmt->execute();

        return "Thank you for your review!";
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
$username = "JohnDoe";
$reviewText = "This is a great product!";
$result = submitReview($username, $reviewText);
echo $result;

?>


<?php
// Get user input from form
$username = $_POST['username'];
$reviewText = $_POST['review'];

// Call the submitReview function
$result = submitReview($username, $reviewText);

// Display result
echo $result;
?>


<?php
// Review handling function
function handleReview($book_id, $user_name, $rating, $review_text) {
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false; // Invalid rating
    }

    // Sanitize user inputs
    $user_name = htmlspecialchars(trim($user_name));
    $review_text = htmlspecialchars(trim($review_text));

    // Create review data array
    $review = [
        'book_id' => $book_id,
        'user_name' => $user_name,
        'rating' => (int)$rating,
        'review_text' => $review_text,
        'timestamp' => time()
    ];

    // Save the review to a file or database
    if (saveReview($review)) {
        return true; // Review saved successfully
    } else {
        return false; // Error saving review
    }
}

// Function to save the review data
function saveReview($review) {
    $file = 'reviews.json';

    // Load existing reviews
    if (file_exists($file)) {
        $data = file_get_contents($file);
        $reviews = json_decode($data, true);
        if ($reviews === null) {
            $reviews = [];
        }
    } else {
        $reviews = [];
    }

    // Add new review
    array_push($reviews, $review);

    // Save updated reviews to file
    $success = file_put_contents($file, json_encode($reviews, JSON_PRETTY_PRINT));

    return $success !== false;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $book_id = $_POST['book_id'];
    $user_name = $_POST['user_name'];
    $rating = $_POST['rating'];
    $review_text = $_POST['review_text'];

    if (handleReview($book_id, $user_name, $rating, $review_text)) {
        echo "Thank you for your review!";
    } else {
        echo "Error submitting your review. Please try again.";
    }
}
?>

<!-- Example HTML form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="book_id" value="1">
    
    <div>
        <label for="user_name">Name:</label>
        <input type="text" id="user_name" name="user_name" required>
    </div>

    <div>
        <label for="rating">Rating (1-5):</label>
        <select id="rating" name="rating">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </select>
    </div>

    <div>
        <label for="review_text">Review:</label>
        <textarea id="review_text" name="review_text" required></textarea>
    </div>

    <button type="submit">Submit Review</button>
</form>


<?php
class ReviewManager {
    private $pdo;

    public function __construct(PDO $pdo) {
        $this->pdo = $pdo;
    }

    // Adds a new review
    public function addReview($user_id, $product_id, $rating, $title, $content) {
        try {
            // Validate inputs
            if (!$this->isValidUser($user_id)) return ['success' => false, 'error' => 'Invalid user ID'];
            if (!$this->isProductExists($product_id)) return ['success' => false, 'error' => 'Product not found'];
            if ($rating < 1 || $rating > 5) return ['success' => false, 'error' => 'Rating must be between 1 and 5'];
            if (empty(trim($title)) || empty(trim($content))) return ['success' => false, 'error' => 'Title and content cannot be empty'];

            // Sanitize inputs
            $title = htmlspecialchars(trim($title));
            $content = htmlspecialchars(trim($content));

            $stmt = $this->pdo->prepare("INSERT INTO reviews (user_id, product_id, rating, title, content, created_at) VALUES (?, ?, ?, ?, ?, NOW())");
            if (!$stmt->execute([$user_id, $product_id, $rating, $title, $content])) {
                return ['success' => false, 'error' => 'Failed to add review'];
            }

            return ['success' => true, 'message' => 'Review added successfully'];

        } catch (PDOException $e) {
            error_log("Error adding review: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Updates an existing review
    public function updateReview($review_id, $new_rating = null, $new_title = null, $new_content = null) {
        try {
            if (!$this->isReviewExists($review_id)) return ['success' => false, 'error' => 'Review not found'];

            // Prepare fields to update
            $updateFields = [];
            $params = [];

            if ($new_rating !== null) {
                if ($new_rating < 1 || $new_rating > 5) return ['success' => false, 'error' => 'Rating must be between 1 and 5'];
                $updateFields[] = "rating = ?";
                $params[] = $new_rating;
            }

            if ($new_title !== null && !empty(trim($new_title))) {
                $new_title = htmlspecialchars(trim($new_title));
                $updateFields[] = "title = ?";
                $params[] = $new_title;
            }

            if ($new_content !== null && !empty(trim($new_content))) {
                $new_content = htmlspecialchars(trim($new_content));
                $updateFields[] = "content = ?";
                $params[] = $new_content;
            }

            if (empty($updateFields)) return ['success' => false, 'error' => 'No changes provided'];

            // Check if the user is authorized to update this review
            $stmtCheckUser = $this->pdo->prepare("SELECT user_id FROM reviews WHERE id = ?");
            $stmtCheckUser->execute([$review_id]);
            $row = $stmtCheckUser->fetch(PDO::FETCH_ASSOC);
            
            // Here, you would typically check if the current user has permission (e.g., admin or original poster)
            // For simplicity, assuming only the author can update their review
            // In a real application, you'd compare with the current user's ID
            $params[] = $review_id;
            $stmtUpdate = $this->pdo->prepare("UPDATE reviews SET " . implode(', ', $updateFields) . " WHERE id = ?");
            if (!$stmtUpdate->execute($params)) {
                return ['success' => false, 'error' => 'Failed to update review'];
            }

            return ['success' => true, 'message' => 'Review updated successfully'];

        } catch (PDOException $e) {
            error_log("Error updating review: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Deletes a review
    public function deleteReview($review_id) {
        try {
            if (!$this->isReviewExists($review_id)) return ['success' => false, 'error' => 'Review not found'];

            // Check user permission (e.g., admin or the review's author)
            // For simplicity, assuming only admins can delete reviews
            $stmtCheckUser = $this->pdo->prepare("SELECT user_id FROM reviews WHERE id = ?");
            $stmtCheckUser->execute([$review_id]);
            $row = $stmtCheckUser->fetch(PDO::FETCH_ASSOC);

            // Here, you'd compare with the current user's role and ID
            // If not authorized, return error

            $stmtDelete = $this->pdo->prepare("DELETE FROM reviews WHERE id = ?");
            if (!$stmtDelete->execute([$review_id])) {
                return ['success' => false, 'error' => 'Failed to delete review'];
            }

            return ['success' => true, 'message' => 'Review deleted successfully'];

        } catch (PDOException $e) {
            error_log("Error deleting review: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Retrieves reviews for a product
    public function getReviews($product_id, $page = 1, $per_page = 10) {
        try {
            if (!$this->isProductExists($product_id)) return ['success' => false, 'error' => 'Product not found'];

            $offset = ($page - 1) * $per_page;

            $stmt = $this->pdo->prepare("SELECT r.*, u.username FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = ? AND r.status = 'approved' ORDER BY r.created_at DESC LIMIT ? OFFSET ?");
            $stmt->execute([$product_id, $per_page, $offset]);

            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

            return ['success' => true, 'data' => $reviews];

        } catch (PDOException $e) {
            error_log("Error retrieving reviews: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Calculates average rating for a product
    public function calculateAverageRating($product_id) {
        try {
            if (!$this->isProductExists($product_id)) return ['success' => false, 'error' => 'Product not found'];

            $stmt = $this->pdo->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = ?");
            $stmt->execute([$product_id]);
            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            return ['success' => true, 'data' => round($result['average'], 1)];

        } catch (PDOException $e) {
            error_log("Error calculating average rating: " . $e->getMessage());
            return ['success' => false, 'error' => 'Database error occurred'];
        }
    }

    // Helper methods
    private function isValidUser($user_id) {
        $stmt = $this->pdo->prepare("SELECT id FROM users WHERE id = ?");
        $stmt->execute([$user_id]);
        return $stmt->rowCount() > 0;
    }

    private function isProductExists($product_id) {
        $stmt = $this->pdo->prepare("SELECT id FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        return $stmt->rowCount() > 0;
    }

    private function isReviewExists($review_id) {
        $stmt = $this->pdo->prepare("SELECT id FROM reviews WHERE id = ?");
        $stmt->execute([$review_id]);
        return $stmt->rowCount() > 0;
    }
}

// Usage example
try {
    // Assuming $pdo is a valid PDO instance
    $reviewManager = new ReviewManager($pdo);

    // Adding a review
    $result = $reviewManager->addReview(1, 5, 4, "Great product!", "This product exceeded my expectations.");
    print_r($result);

    // Updating a review
    $updateResult = $reviewManager->updateReview(1, null, "Even better product!", null);
    print_r($updateResult);

    // Deleting a review
    $deleteResult = $reviewManager->deleteReview(1);
    print_r($deleteResult);

    // Retrieving reviews
    $reviews = $reviewManager->getReviews(5);
    print_r($reviews);

    // Calculating average rating
    $averageRating = $reviewManager->calculateAverageRating(5);
    print_r($averageRating);

} catch (Exception $e) {
    echo "An error occurred: " . $e->getMessage();
}


<?php
// Function to handle user review submissions
function submitReview() {
    // Database connection details
    $host = 'localhost';
    $db_name = 'reviews_db';
    $username = 'root';
    $password = '';

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if form is submitted
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            // Get form data
            $username = $_POST['username'];
            $rating = $_POST['rating'];
            $comment = $_POST['comment'];
            $review_date = date('Y-m-d H:i:s');
            
            // Handle file upload (if any)
            $image_path = '';
            if ($_FILES['review_image']['name'] != '') {
                $target_dir = 'uploads/';
                $target_file = $target_dir . basename($_FILES["review_image"]["name"]);
                
                // Validate image
                $uploadOk = 1;
                $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

                // Check if image file is a actual image or fake image
                $check = getimagesize($_FILES["review_image"]["tmp_name"]);
                if ($check === false) {
                    throw new Exception("File is not an image.");
                }

                // Allow only certain file formats
                $allowedFormats = array('jpg', 'jpeg', 'png', 'gif');
                if (!in_array($imageFileType, $allowedFormats)) {
                    throw new Exception("Only JPG, JPEG, PNG & GIF files are allowed.");
                }

                // Check file size (max 5MB)
                if ($_FILES["review_image"]["size"] > 5000000) {
                    throw new Exception("Sorry, your file is too large.");
                }

                // Rename the image to avoid duplicates
                $newFilename = time() . '_' . basename($_FILES['review_image']['name']);
                $target_file = $target_dir . $newFilename;

                // Upload the image
                if (move_uploaded_file($_FILES["review_image"]["tmp_name"], $target_file)) {
                    $image_path = 'uploads/' . $newFilename;
                } else {
                    throw new Exception("Sorry, there was an error uploading your file.");
                }
            }

            // Validate form input
            if ($username == '') {
                throw new Exception("Username is required.");
            }
            
            if (!isset($rating) || $rating < 1 || $rating > 5) {
                throw new Exception("Rating must be between 1 and 5.");
            }

            if (strlen($comment) > 500) {
                throw new Exception("Comment cannot exceed 500 characters.");
            }

            // Prepare SQL statement
            $stmt = $conn->prepare("
                INSERT INTO reviews (
                    username,
                    rating,
                    comment,
                    review_image,
                    review_date
                ) VALUES (
                    :username,
                    :rating,
                    :comment,
                    :review_image,
                    :review_date
                )
            ");

            // Bind parameters
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comment', $comment);
            $stmt->bindParam(':review_image', $image_path);
            $stmt->bindParam(':review_date', $review_date);

            // Execute query
            if ($stmt->execute()) {
                echo "Review submitted successfully!";
                header("Location: review_success.php");
                exit();
            } else {
                throw new Exception("Error submitting review.");
            }
        }
    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    } finally {
        // Close database connection
        if (isset($conn)) {
            $conn = null;
        }
    }
}

// Call the function
submitReview();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews';

// Create database connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function display_reviews() {
    global $conn;
    
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM user_reviews ORDER BY submission_date DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>By: " . htmlspecialchars($row['author'], ENT_QUOTES, 'UTF-8') . "</h4>";
            echo "<p>" . nl2br(htmlspecialchars($row['content'], ENT_QUOTES, 'UTF-8')) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }
}

function submit_review($author, $content) {
    global $conn;
    
    // Sanitize input
    $author = mysqli_real_escape_string($conn, htmlspecialchars(trim($author)));
    $content = mysqli_real_escape_string($conn, htmlspecialchars(trim($content)));
    
    // Check if fields are not empty
    if (empty($author) || empty($content)) {
        return false;
    }
    
    // Insert review into database
    $sql = "INSERT INTO user_reviews (author, content, submission_date)
            VALUES ('$author', '$content', NOW())";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

// Process form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $content = $_POST['content'];
    
    if (submit_review($author, $content)) {
        echo "<div class='success'>";
        echo "Thank you for your review!";
        echo "</div>";
    } else {
        echo "<div class='error'>";
        echo "Error submitting review. Please try again.";
        echo "</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>

<h1>Submit a Review</h1>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="author">Name:</label><br>
    <input type="text" id="author" name="author"><br>
    
    <label for="content">Review:</label><br>
    <textarea id="content" name="content" rows="5"></textarea><br>
    
    <input type="submit" value="Submit Review">
</form>

<h2>Previous Reviews</h2>
<?php display_reviews(); ?>

</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Function to display average rating
function getAverageRating() {
    global $conn;
    $stmt = $conn->query("SELECT AVG(rating) as average FROM reviews");
    $result = $stmt->fetch();
    return number_format($result['average'], 1);
}

// Function to handle review submission
function submitReview($name, $email, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (empty($name) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL) && $email != '') {
        return "Invalid email format.";
    }
    
    if (!ctype_digit((string)$rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }
    
    // Sanitize input
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $comment = htmlspecialchars($comment);
    
    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->execute([$name, $email, $rating, $comment]);
        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    try {
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
        while ($row = $stmt->fetch()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $submissionDate = $row['submission_date'];
            
            // Display star rating
            $stars = str_repeat("★", $rating) . str_repeat("☆", 5 - $rating);
            
            echo "<div class='review'>";
            echo "<div class='rating'>$stars</div>";
            echo "<div class='comment'>$comment</div>";
            echo "<div class='date'>Submitted on: $submissionDate</div>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $name = $_POST['name'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        $result = submitReview($name, $email, $rating, $comment);
        if ($result == "Review submitted successfully!") {
            // Reload page to show new review
            header("Location: #" . md5(uniqid()));
            exit();
        } else {
            echo "<div class='error'>$result</div>";
        }
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($product_id, $name, $email, $rating, $comment, $conn) {
    try {
        // Sanitize input
        $name = htmlspecialchars(strip_tags($name));
        $email = filter_var($email, FILTER_SANITIZE_EMAIL);
        $comment = htmlspecialchars(strip_tags($comment));

        if (empty($product_id) || empty($name) || empty($email) || empty($rating) || empty($comment)) {
            throw new Exception("All fields are required");
        }

        // Check email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check rating range
        $rating = (int)$rating;
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Prepare and execute query
        $stmt = $conn->prepare("
            INSERT INTO reviews 
            (product_id, name, email, rating, comment, created_at)
            VALUES (:product_id, :name, :email, :rating, :comment, NOW())
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            throw new Exception("Error submitting review");
        }

    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews($product_id, $conn) {
    try {
        $stmt = $conn->prepare("
            SELECT * FROM reviews 
            WHERE product_id = :product_id 
            ORDER BY created_at DESC
        ");
        
        $stmt->bindParam(':product_id', $product_id);
        $stmt->execute();

        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($reviews)) {
            return "No reviews yet.";
        }

        $output = '<div class="reviews-container">';
        foreach ($reviews as $review) {
            $stars = str_repeat('<span class="star">★</span>', $review['rating']);
            
            $output .= '
                <div class="review-item">
                    <h3>' . $review['name'] . '</h3>
                    <p class="rating">' . $stars . '</p>
                    <p class="comment">' . $review['comment'] . '</p>
                    <small>Posted on ' . date('F j, Y', strtotime($review['created_at'])) . '</small>
                </div>';
        }
        $output .= '</div>';

        return $output;

    } catch (Exception $e) {
        return "Error displaying reviews: " . $e->getMessage();
    }
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        textarea {
            width: 100%;
            height: 150px;
        }
        .star {
            color: #ffd700;
            font-size: 24px;
        }
    </style>
</head>
<body>

<h1>Product Review System</h1>

<!-- Review Form -->
<div class="review-form">
    <h2>Submit Your Review</h2>
    <form action="" method="post">
        <input type="hidden" name="product_id" value="1"> <!-- Product ID -->
        
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="5">★ ★ ★ ★ ★</option>
            <option value="4">★ ★ ★ ★</option>
            <option value="3">★ ★ ★</option>
            <option value="2">★ ★</option>
            <option value="1">★</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>
</div>

<!-- Display Reviews -->
<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = submitReview(
        $_POST['product_id'],
        $_POST['name'],
        $_POST['email'],
        $_POST['rating'],
        $_POST['comment'],
        $conn
    );
    
    echo "<script>alert('$result');</script>";
}

echo displayReviews(1, $conn);
?>

</body>
</html>


<?php
// Function to add a new review
function addReview($userId, $productId, $rating, $comment) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    try {
        // Sanitize inputs
        $rating = intval($rating);
        $comment = htmlspecialchars($comment);
        
        // Validate input
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Rating must be between 1 and 5.");
        }
        
        if (!is_numeric($userId) || !is_numeric($productId)) {
            throw new Exception("Invalid user or product ID.");
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
                VALUES (?, ?, ?, ?)";
                
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            // Update product's average rating
            $this->updateProductRating($productId);
            
            return array(
                'status' => 'success',
                'message' => 'Review added successfully',
                'review_id' => mysqli_insert_id($conn)
            );
        } else {
            throw new Exception("Error adding review: " . mysqli_error($conn));
        }
        
    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}

// Function to update product average rating after review is added
function updateProductRating($productId) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    try {
        // Calculate new average rating
        $sql = "SELECT COUNT(*) as total_reviews, AVG(rating) as avg_rating 
                FROM reviews 
                WHERE product_id = ?";
                
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);
        
        $total_reviews = $row['total_reviews'];
        $avg_rating = $row['avg_rating'];
        
        // Update product table
        $updateSql = "UPDATE products 
                      SET total_ratings = ?, avg_rating = ?
                      WHERE id = ?";
                      
        $updateStmt = mysqli_prepare($conn, $updateSql);
        mysqli_stmt_bind_param($updateStmt, "idi", $total_reviews, $avg_rating, $productId);
        
        if (!mysqli_stmt_execute($updateStmt)) {
            throw new Exception("Error updating product ratings: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}

// Function to get reviews for a product
function getProductReviews($productId) {
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    try {
        $sql = "SELECT r.id, u.username, r.rating, r.comment, DATE_FORMAT(r.created_at, '%Y-%m-%d %H:%i') as created_at 
                FROM reviews r
                JOIN users u ON r.user_id = u.id
                WHERE r.product_id = ?
                ORDER BY r.created_at DESC";
                
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        
        if (mysqli_stmt_execute($stmt)) {
            $result = mysqli_stmt_get_result($stmt);
            $reviews = array();
            
            while ($row = mysqli_fetch_assoc($result)) {
                $reviews[] = $row;
            }
            
            return array(
                'status' => 'success',
                'data' => $reviews
            );
        } else {
            throw new Exception("Error retrieving reviews: " . mysqli_error($conn));
        }
    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    } finally {
        // Close database connection
        mysqli_close($conn);
    }
}

// Example usage:
// Add a new review
$reviewResult = addReview(1, 5, 4, "Great product, highly recommended!");
print_r($reviewResult);

// Get reviews for product ID 5
$reviews = getProductReviews(5);
print_r($reviews);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die('Could not connect: ' . $e->getMessage());
}

// Function to handle and display reviews
function user_reviews($conn) {
    // Get all reviews from database
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Handle review submission
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Validate input
        $username = $_POST['username'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        if (empty($username) || empty($rating) || empty($comment)) {
            echo "Please fill in all fields!";
            exit();
        }

        // Insert review into database
        $stmt_insert = $conn->prepare("INSERT INTO reviews (username, rating, comment, timestamp) VALUES (:username, :rating, :comment, NOW())");
        $stmt_insert->bindParam(':username', $username);
        $stmt_insert->bindParam(':rating', $rating);
        $stmt_insert->bindParam(':comment', $comment);
        $stmt_insert->execute();

        // Redirect to prevent form resubmission
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }

    // Display review form
    echo "<div class='review-form'>";
    echo "<h2>Submit Your Review</h2>";
    echo "<form method='post' action='" . $_SERVER['PHP_SELF'] . "'>";
    echo "<input type='text' name='username' placeholder='Your Name' required><br>";
    echo "<select name='rating' required>";
    for ($i = 1; $i <= 5; $i++) {
        echo "<option value='$i'>$i Stars</option>";
    }
    echo "</select><br>";
    echo "<textarea name='comment' placeholder='Your Review' required></textarea><br>";
    echo "<input type='submit' value='Submit'>";
    echo "</form>";
    echo "</div>";

    // Display existing reviews
    if (count($reviews) > 0) {
        echo "<div class='existing-reviews'>";
        foreach ($reviews as $review) {
            $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
            $time_ago = date_diff(date_create($review['timestamp']), date_create())->format("%d days ago");
            
            echo "<div class='review'>";
            echo "<h3>By " . htmlspecialchars($review['username']) . "</h3>";
            echo "<p class='stars'>" . $stars . "</p>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted " . $time_ago . "</small>";
            echo "</div>";
        }
        echo "</div>";
        
        // Calculate and display average rating
        $stmt_avg = $conn->query("SELECT AVG(rating) AS avg_rating FROM reviews");
        $avg_rating = $stmt_avg->fetch(PDO::FETCH_ASSOC);
        $average = round($avg_rating['avg_rating'], 1);
        
        echo "<div class='average-rating'>";
        echo "Average Rating: $average/5";
        echo "</div>";
    } else {
        echo "No reviews yet. Be the first to review!";
    }
}

// Call the function
user_reviews($conn);

// Close database connection
$conn = null;
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database configuration
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';

    // Connect to database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return false;
    }

    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if all required fields are provided
    if (empty($user_id) || empty($product_id) || empty($rating)) {
        return false;
    }

    // Prepare SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";

    if (mysqli_query($conn, $sql)) {
        mysqli_close($conn);
        return true;
    } else {
        mysqli_close($conn);
        return false;
    }
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 5;
$comment = "This product is amazing!";

if (submit_review($user_id, $product_id, $rating, $comment)) {
    echo "Thank you for submitting your review!";
} else {
    echo "Error submitting review. Please try again.";
}
?>


<?php
function createReview($username, $rating, $comment, $db) {
    // Validate inputs
    if (empty($username)) {
        return "Username is required";
    }
    if (!isset($rating) || $rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }

    try {
        // Prepare the SQL statement to insert review
        $sql = "INSERT INTO reviews (username, rating, comment, created_at) 
                VALUES (:username, :rating, :comment, NOW())";

        $stmt = $db->prepare($sql);
        
        // Bind parameters
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return "Review created successfully";
        } else {
            return "Error creating review: " . implode(", ", $stmt->errorInfo());
        }
    } catch (PDOException $e) {
        // Handle any exceptions that occur during database operations
        return "Database error: " . $e->getMessage();
    }
}
?>


<?php
// Assume $db is your PDO database connection object

$username = "john_doe";
$rating = 4;
$comment = "Great product!";

$result = createReview($username, $rating, $comment, $db);

if ($result === "Review created successfully") {
    echo "Thank you for your review!";
} else {
    echo "Error: " . $result;
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function add_review($user_id, $category, $rating, $comment) {
    global $conn;
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    if (empty($comment)) {
        return false;
    }
    
    try {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, category, rating, comment, status, created_at)
                              VALUES (:user_id, :category, :rating, :comment, 'active', NOW())");
        
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':category', $category);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $stmt->execute();
        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function display_reviews($category = '', $limit = 10, $offset = 0) {
    global $conn;
    
    try {
        // Build SQL query
        $sql = "SELECT * FROM reviews WHERE status = 'active'";
        
        if (!empty($category)) {
            $sql .= " AND category = :category";
        }
        
        $sql .= " ORDER BY created_at DESC LIMIT :limit OFFSET :offset";
        
        $stmt = $conn->prepare($sql);
        
        // Bind parameters
        if (!empty($category)) {
            $stmt->bindParam(':category', $category);
        }
        $stmt->bindParam(':limit', $limit, PDO::PARAM_INT);
        $stmt->bindParam(':offset', $offset, PDO::PARAM_INT);
        
        $stmt->execute();
        
        // Fetch results
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            return "No reviews found";
        }
        
        // Display reviews
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "</small>";
            echo "</div>";
        }
        
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add new review
    if (isset($_POST['submit_review'])) {
        $user_id = 1; // Replace with actual user ID
        $category = $_POST['category'];
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));
        
        if (add_review($user_id, $category, $rating, $comment)) {
            echo "Review added successfully!";
        } else {
            echo "Error adding review.";
        }
    }
}

// Display all reviews
display_reviews();
?>

<!-- HTML Form -->
<form method="post" action="">
    <input type="hidden" name="submit_review" value="1">
    <select name="category">
        <option value="product">Product Review</option>
        <option value="service">Service Review</option>
        <option value="experience">Experience Review</option>
    </select>
    
    <div class="rating">
        <input type="radio" name="rating" value="5" id="5">
        <label for="5">★</label>
        <input type="radio" name="rating" value="4" id="4">
        <label for="4">★</label>
        <input type="radio" name="rating" value="3" id="3">
        <label for="3">★</label>
        <input type="radio" name="rating" value="2" id="2">
        <label for="2">★</label>
        <input type="radio" name="rating" value="1" id="1">
        <label for="1">★</label>
    </div>

    <textarea name="comment" placeholder="Write your review..." required></textarea>
    <button type="submit">Submit Review</button>
</form>

<!-- CSS Styling -->
<style>
.review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
}

.rating {
    display: flex;
    align-items: center;
    gap: 5px;
}
</style>


<?php
function submit_review($user_id, $product_id, $rating, $review_text) {
    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }
    
    if (empty($user_id) || empty($product_id)) {
        throw new Exception("User ID and Product ID are required");
    }
    
    // Database connection
    require_once('db_config.php');
    
    try {
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }
        
        // Check if user has already reviewed this product
        $check_review_query = "
            SELECT review_id 
            FROM reviews 
            WHERE user_id = ? AND product_id = ?
        ";
        
        $stmt = $conn->prepare($check_review_query);
        $stmt->bind_param("ii", $user_id, $product_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Update existing review
            $update_review_query = "
                UPDATE reviews 
                SET rating = ?, review_text = ?, review_date = CURRENT_TIMESTAMP 
                WHERE user_id = ? AND product_id = ?
            ";
            
            $stmt = $conn->prepare($update_review_query);
            $stmt->bind_param("iisi", $rating, $review_text, $user_id, $product_id);
            $stmt->execute();
        } else {
            // Insert new review
            $insert_review_query = "
                INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)
            ";
            
            $stmt = $conn->prepare($insert_review_query);
            $stmt->bind_param("iisi", $user_id, $product_id, $rating, $review_text);
            $stmt->execute();
        }
        
        $stmt->close();
        $conn->close();
        
        return "Review submitted successfully!";
    } catch (Exception $e) {
        // Handle any errors
        error_log("Error submitting review: " . $e->getMessage());
        throw new Exception("Failed to submit review");
    }
}
?>


try {
    $result = submit_review(123, 456, 5, "Great product!");
    echo $result; // Should display "Review submitted successfully!"
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Connect to database
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['author']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Date: " . htmlspecialchars($row['date']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to add new review
function add_review($author, $rating, $comment) {
    global $conn;
    
    // SQL injection prevention
    $author = mysqli_real_escape_string($conn, htmlspecialchars($author));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    $date = date("Y-m-d H:i:s");
    
    // Insert into database
    $sql = "INSERT INTO reviews (author, rating, comment, date) VALUES ('$author', '$rating', '$comment', '$date')";
    
    if (mysqli_query($conn, $sql)) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Validate input
    if (empty($author) || empty($comment)) {
        echo "Please fill in all required fields.";
    } else {
        add_review($author, $rating, $comment);
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            background-color: #fff;
            border-radius: 5px;
        }
        input, textarea {
            margin-bottom: 10px;
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h2>Leave a Review</h2>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="author" placeholder="Your Name" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br>
        <textarea name="comment" placeholder="Your Review" rows="5" required></textarea><br>
        <input type="submit" value="Submit Review">
    </form>

    <?php display_reviews(); ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Escape the inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if all fields are filled
    if ($userId == "" || $productId == "" || $rating == "" || $comment == "") {
        return "Please fill in all required fields.";
    }
    
    // Submit the review to the database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp, approved) 
              VALUES ('$userId', '$productId', '$rating', '$comment', NOW(), '0')";
    
    if (mysqli_query($conn, $query)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    // Escape the input to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Fetch all approved reviews for the given product
    $query = "SELECT r.*, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = '$productId' AND r.approved = '1'
              ORDER BY r.timestamp DESC";
    
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
                echo "<h3>Rating: " . $row['rating'] . "/5</h3>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                echo "<small>Posted by " . htmlspecialchars($row['username']) . " on " . date('F j, Y', strtotime($row['timestamp'])) . "</small><br>";
                echo "<div class='helpful'>";
                    // Add helpful vote functionality
                    echo "<a href='#'>Helpful (" . get Helpful Votes . ")</a>";
                echo "</div>";
            echo "</div>";
        }
    } else {
        echo "No reviews found for this product.";
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    // Escape the input to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Calculate average rating
    $query = "SELECT AVG(rating) as average 
              FROM reviews 
              WHERE product_id = '$productId' AND approved = '1'";
    
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average'], 2); // Round to 2 decimal places
}

// Example usage:

// Submit a new review when form is submitted
if (isset($_POST['submit_review'])) {
    $reviewMessage = submitReview(
        $_SESSION['user_id'],
        $_GET['product_id'],
        $_POST['rating'],
        $_POST['comment']
    );
    
    if ($reviewMessage == "Review submitted successfully!") {
        // Refresh the page to show new review
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit();
    } else {
        echo $reviewMessage;
    }
}

// Display all reviews for a product
echo "<h2>Product Reviews</h2>";
displayReviews($_GET['product_id']);

// Display average rating
echo "<p>Average Rating: " . getAverageRating($_GET['product_id']) . "/5</p>";

// Close the database connection
mysqli_close($conn);
?>


<?php
// Function to create or update a user review
function submitReview($reviewText, $userId, $rating = null, $reviewDate = null) {
    // Database connection parameters
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "reviews_db";

    try {
        // Validate inputs
        if (!is_string($reviewText) || trim($reviewText) === "") {
            throw new InvalidArgumentException("Review text cannot be empty.");
        }
        
        if (!is_int($userId)) {
            throw new InvalidArgumentException("User ID must be an integer.");
        }

        // Optional parameters validation
        if ($rating !== null) {
            if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
                throw new InvalidArgumentException("Rating must be between 1 and 5.");
            }
            $rating = (int)$rating;
        }

        if ($reviewDate !== null && !strtotime($reviewDate)) {
            throw new InvalidArgumentException("Invalid date format. Please use 'YYYY-MM-DD'.");
        }

        // Establish database connection
        $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare SQL statement
        $sql = "INSERT INTO reviews (review_text, user_id, rating, review_date) 
                VALUES (:reviewText, :userId, :rating, :reviewDate)";

        $statement = $pdo->prepare($sql);
        
        // Bind parameters
        $statement->bindParam(':reviewText', $reviewText);
        $statement->bindParam(':userId', $userId, PDO::PARAM_INT);

        if ($rating !== null) {
            $statement->bindParam(':rating', $rating, PDO::PARAM_INT);
        } else {
            $statement->bindValue(':rating', null);
        }

        if ($reviewDate !== null) {
            $statement->bindParam(':reviewDate', $reviewDate);
        } else {
            // Set current date if not provided
            $statement->bindValue(':reviewDate', date('Y-m-d'));
        }

        // Execute the statement
        $statement->execute();

        return "Review submitted successfully. Review ID: " . $pdo->lastInsertId();

    } catch (PDOException $e) {
        throw new RuntimeException("Database error: " . $e->getMessage(), 0, $e);
    } catch (InvalidArgumentException $e) {
        throw $e;
    }
}

// Example usage:
try {
    $reviewText = "This is a great product!";
    $userId = 123;
    $rating = 5;
    $reviewDate = date('Y-m-d');

    $result = submitReview($reviewText, $userId, $rating, $reviewDate);
    echo $result;

} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    // Input validation
    $errors = array();
    if (empty($name) || strlen($name) < 3) {
        $errors[] = "Please enter a valid name (minimum 3 characters)";
    }
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address";
    }
    if ($rating == 0) {
        $errors[] = "Please select a rating";
    }
    if (empty($comment) || strlen($comment) < 5) {
        $errors[] = "Please write a comment (minimum 5 characters)";
    }

    // If no errors, insert into database
    if (count($errors) == 0) {
        $sql = "INSERT INTO reviews (name, email, rating, comment, created_at)
                VALUES ('$name', '$email', $rating, '$comment', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "<p class='success'>Thank you for your review!</p>";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    } else {
        foreach ($errors as $error) {
            echo "<p class='error'>$error</p>";
        }
    }
}

// Retrieve and display all reviews
$sql = "SELECT * FROM reviews ORDER BY created_at DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        $rating_stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
        echo "
            <div class='review'>
                <h3>{$row['name']}</h3>
                <p class='rating'>$rating_stars</p>
                <p class='comment'>{$row['comment']}</p>
                <small>Submitted on: " . date('F j, Y', strtotime($row['created_at'])) . "</small>
            </div>
        ";
    }
} else {
    echo "<p>No reviews found. Be the first to review!</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .rating {
            color: #ff6b35;
            font-size: 24px;
        }
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <!-- Review Form -->
    <div class='review-form'>
        <h2>Submit Your Review</h2>
        <form action='<?php echo $_SERVER['PHP_SELF']; ?>' method='post'>
            <label for='name'>Name:</label>
            <input type='text' id='name' name='name' required><br>

            <label for='email'>Email:</label>
            <input type='email' id='email' name='email' required><br>

            <label>Rating:</label>
            <div class='rating-stars'>
                <input type='radio' name='rating' value='5'> ★★★★★<br>
                <input type='radio' name='rating' value='4'> ★★★★☆<br>
                <input type='radio' name='rating' value='3'> ★★★☆☆<br>
                <input type='radio' name='rating' value='2'> ★★☆☆☆<br>
                <input type='radio' name='rating' value='1'> ★☆☆☆☆
            </div><br>

            <label for='comment'>Comment:</label>
            <textarea id='comment' name='comment' rows='4' required></textarea><br>

            <input type='submit' name='submit' value='Submit Review'>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle review submission
if (isset($_POST['submit'])) {
    // Sanitize and validate input
    $name = htmlspecialchars(trim($_POST['name']));
    $review_text = htmlspecialchars(trim($_POST['review']));
    $rating = intval($_POST['rating']);

    if (empty($name) || empty($review_text) || empty($rating)) {
        echo "Please fill in all required fields!";
    } else {
        // Prepare and bind the SQL statement
        $stmt = mysqli_prepare($conn, "INSERT INTO reviews (author, review_text, rating, review_date) VALUES (?, ?, ?, CURRENT_TIMESTAMP)");
        mysqli_stmt_bind_param($stmt, "sss", $name, $review_text, $rating);

        if (mysqli_stmt_execute($stmt)) {
            echo "<p style='color: green;'>Thank you for submitting your review!</p>";
        } else {
            echo "<p style='color: red;'>Error submitting review. Please try again.</p>";
        }

        mysqli_stmt_close($stmt);
    }
}

// Fetch and display existing reviews
$reviews_query = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $reviews_query);

echo "<h2>Existing Reviews</h2>";
if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 10px;'>";
        echo "<h3>Reviewer: " . $row['author'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>Review: " . $row['review_text'] . "</p>";
        echo "<p>Date: " . date('jS M Y, g:i a', strtotime($row['review_date'])) . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews found. Be the first to review!</p>";
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }
        input, textarea {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Submit a Review</h1>
    
    <div class="review-form">
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="review">Review:</label><br>
            <textarea id="review" name="review" rows="5" cols="40" required></textarea><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Select a rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>

            <input type="submit" name="submit" value="Submit Review">
        </form>
    </div>
</body>
</html>


<?php
function submitReview($userId, $productId, $rating, $comment) {
    // Database configuration
    include('db_config.php');

    try {
        // Connect to database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Sanitize inputs
        $userId = intval($userId);
        $productId = intval($productId);
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, trim($$comment));

        // Validate input
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Prepare SQL statement to insert review
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                VALUES (?, ?, ?, ?, NOW())";

        // Create prepared statement
        $stmt = $conn->prepare($sql);
        
        if ($stmt === false) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("iiis", $userId, $productId, $rating, $comment);

        // Execute the statement
        $result = $stmt->execute();

        if ($result) {
            // Log successful review submission (optional)
            file_put_contents('review_log.txt', "Review submitted by user {$userId} for product {$productId} at " . date('Y-m-d H:i:s') . "
", FILE_APPEND);
            
            return true;
        } else {
            throw new Exception("Error submitting review: " . $stmt->error);
        }

    } catch (Exception $e) {
        // Log error
        file_put_contents('error_log.txt', "Review submission failed: " . $e->getMessage() . " at " . date('Y-m-d H:i:s') . "
", FILE_APPEND);
        return false;
    }
}

// Example usage:
// if (submitReview(1, 5, 4, "Great product!")) {
//     echo "Thank you for your review!";
// } else {
//     echo "Sorry, there was an error submitting your review.";
// }

?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($productId, $userName, $reviewText, $rating) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    $userName = mysqli_real_escape_string($conn, $userName);
    $reviewText = mysqli_real_escape_string($conn, $reviewText);
    $rating = mysqli_real_escape_string($conn, $rating);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, review_text, rating, review_date) 
            VALUES ('$productId', '$userName', '$reviewText', '$rating', NOW())";
            
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function displayReviews($productId) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get all reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("⭐", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $productId = $_POST['product_id'];
    $userName = $_POST['user_name'];
    $reviewText = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (addReview($productId, $ userName, $reviewText, $rating)) {
        echo "Thank you for your review!";
    } else {
        echo "Error adding review.";
    }
}

// Display reviews for product ID 1
displayReviews(1);

// Close database connection
mysqli_close($conn);
?>


<?php
function displayUserReview($total_reviews, $average_rating, $individual_ratings = array()) {
    // Calculate star distribution
    $star_counts = array_fill(0, 6, 0); // Indexes 0-5 (0 unused)
    
    if (!empty($individual_ratings)) {
        foreach ($individual_ratings as $rating) {
            $rounded_rating = round($rating);
            if ($rounded_rating > 0 && $rounded_rating <= 5) {
                $star_counts[$rounded_rating]++;
            }
        }
    } else {
        // If no individual ratings, calculate based on average
        $average_rating = round($average_rating, 1);
        $half_stars = ($average_rating * 2) % 2;
        
        for ($i = 1; $i <= 5; $i++) {
            if ($average_rating >= $i) {
                $star_counts[$i]++;
            } else {
                break;
            }
        }
    }

    // Handle case with no reviews
    if ($total_reviews == 0) {
        return "No reviews yet.";
    }

    // Build the HTML output
    $output = "<div class='review-stats'>";
    
    if (!empty($individual_ratings)) {
        foreach ($individual_ratings as $rating) {
            $stars = str_repeat('<span class="star full"></span>', floor($rating));
            
            if ($rating % 1 != 0) {
                $stars .= '<span class="star half"></span>';
            }
            
            $output .= "<div class='review'>";
            $output .= $stars;
            $output .= " (<span class='rating-text'>$rating</span>)";
            $output .= "</div>";
        }
    } else {
        // Display average rating
        for ($i = 1; $i <= $star_counts[5]; $i++) {
            $output .= '<span class="star full"></span>';
        }

        if ($average_rating != floor($average_rating)) {
            $output .= '<span class="star half"></span>';
        }
        
        $output .= " (<span class='rating-text'>{$average_rating}/5</span>)";
    }

    // Add review count
    $output .= "<div class='review-count'>";
    $output .= "$total_reviews reviews";
    $output .= "</div>";
    
    $output .= "</div>";

    return $output;
}
?>


$reviews = array(4.5, 5, 3, 2.5, 5);
$result = displayUserReview(count($reviews), 4.2, $reviews);

echo $result;


<?php
// Database connection setup
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return false; // Invalid rating value
    }
    
    // Sanitize and escape input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars(trim($comment)));
    
    // Check if user exists
    $checkUserQuery = "SELECT id FROM users WHERE id = ?";
    $stmt = mysqli_prepare($conn, $checkUserQuery);
    mysqli_stmt_bind_param($stmt, "i", $userId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false; // User doesn't exist
    }
    
    // Insert review into database
    $insertQuery = "
        INSERT INTO reviews (user_id, product_id, rating, comment)
        VALUES (?, ?, ?, ?)
    ";
    
    $stmt = mysqli_prepare($conn, $insertQuery);
    mysqli_stmt_bind_param($stmt, "iisi", $userId, $productId, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true; // Review submitted successfully
    } else {
        return false; // Error submitting review
    }
}

function getReviews($productId) {
    global $conn;
    
    $reviews = array();
    
    $query = "
        SELECT 
            r.id AS review_id,
            u.username,
            r.rating,
            r.comment,
            r.date,
            COUNT(DISTINCT v.vote_id) AS total_votes
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        LEFT JOIN votes v ON r.id = v.review_id
        WHERE r.product_id = ?
        GROUP BY r.id
        ORDER BY r.date DESC
    ";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'id' => $row['review_id'],
            'username' => $row['username'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date' => date('M j, Y', strtotime($row['date'])),
            'total_votes' => $row['total_votes']
        );
    }
    
    return $reviews;
}

function voteReview($reviewId, $userId, $voteType) {
    global $conn;
    
    // Validate input
    if ($voteType != 1 && $voteType != -1) {
        return false; // Invalid vote type (upvote = 1, downvote = -1)
    }
    
    // Check if user exists
    $checkUserQuery = "SELECT id FROM users WHERE id = ?";
    $stmt = mysqli_prepare($conn, $checkUserQuery);
    mysqli_stmt_bind_param($stmt, "i", $userId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false; // User doesn't exist
    }
    
    // Check if review exists
    $checkReviewQuery = "SELECT id FROM reviews WHERE id = ?";
    $stmt = mysqli_prepare($conn, $checkReviewQuery);
    mysqli_stmt_bind_param($stmt, "i", $reviewId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false; // Review doesn't exist
    }
    
    // Check if user has already voted for this review
    $checkVoteQuery = "SELECT id FROM votes WHERE review_id = ? AND user_id = ?";
    $stmt = mysqli_prepare($conn, $checkVoteQuery);
    mysqli_stmt_bind_param($stmt, "ii", $reviewId, $userId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        return false; // User already voted for this review
    }
    
    // Insert vote
    $insertVoteQuery = "
        INSERT INTO votes (review_id, user_id, vote_type)
        VALUES (?, ?, ?)
    ";
    
    $stmt = mysqli_prepare($conn, $insertVoteQuery);
    mysqli_stmt_bind_param($stmt, "iii", $reviewId, $userId, $voteType);
    
    if (mysqli_stmt_execute($stmt)) {
        // Update review votes count
        $updateReviewQuery = "
            UPDATE reviews SET total_votes = total_votes + 1 WHERE id = ?
        ";
        
        $stmt2 = mysqli_prepare($conn, $updateReviewQuery);
        mysqli_stmt_bind_param($stmt2, "i", $reviewId);
        mysqli_stmt_execute($stmt2);
        
        return true; // Vote submitted successfully
    } else {
        return false; // Error submitting vote
    }
}
?>


// Submitting a review
$userId = 1;
$productId = 5;
$rating = 4;
$comment = "Great product!";
if (submitReview($userId, $productId, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}

// Getting reviews for a product
$reviews = getReviews(5);
foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h3>Rating: " . str_repeat("★", $review['rating']) . "</h3>";
    echo "<p>By " . $review['username'] . " on " . $review['date'] . "</p>";
    echo "<p>" . $review['comment'] . "</p>";
    echo "<div class='votes'>";
    echo "<button onclick='voteReview(".$review['id'].", 1, 1)'>Upvote</button>";
    echo "<span>".$review['total_votes']."</span>";
    echo "<button onclick='voteReview(".$review['id'].", 1, -1)'>Downvote</button>";
    echo "</div></div>";
}


<?php
function add_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'reviews_db';

    // Validate input
    if (!isset($user_id, $product_id, $rating, $comment)) {
        return "All fields are required";
    }

    // Check for valid values
    if (!ctype_digit((string)$user_id) || !ctype_digit((string)$product_id)) {
        return "Invalid user or product ID";
    }
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5";
    }
    if (strlen($comment) < 1 || strlen($comment) > 1000) {
        return "Comment must be between 1 and 1000 characters";
    }

    // Connect to database
    $mysqli = new mysqli($host, $db_username, $db_password, $database);
    
    if ($mysqli->connect_errno) {
        return "Failed to connect to database: " . $mysqli->connect_error;
    }

    // Sanitize input
    $comment = $mysqli->real_escape_string($comment);

    // Prepare and execute the SQL query
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES (?, ?, ?, ?)";
    
    if ($stmt = $mysqli->prepare($sql)) {
        $stmt->bind_param("iiis", $user_id, $product_id, $rating, $comment);
        
        if ($stmt->execute()) {
            return "Review added successfully";
        } else {
            return "Error adding review: " . $stmt->error;
        }
    } else {
        return "Prepare failed: " . $mysqli->error;
    }

    // Close database connection
    $mysqli->close();
}

// Example usage:
$user_id = 123;
$product_id = 456;
$rating = 4;
$comment = "This product is great!";
$result = add_user_review($user_id, $product_id, $rating, $comment);
echo $result;

?>


<?php
function display_reviews() {
    // Sample review data (you would typically get this from a database)
    $reviews = array(
        array(
            'id' => 1,
            'user_name' => 'John Doe',
            'comment' => 'Great service! I had an amazing experience.',
            'rating' => 5,
            'timestamp' => time() - (86400 * 3) // 3 days ago
        ),
        array(
            'id' => 2,
            'user_name' => 'Jane Smith',
            'comment' => 'The staff was very helpful, but the wait time could be improved.',
            'rating' => 4,
            'timestamp' => time() - (86400 * 1) // 1 day ago
        ),
        array(
            'id' => 3,
            'user_name' => 'Bob Johnson',
            'comment' => 'Not the best experience. Will not return.',
            'rating' => 2,
            'timestamp' => time() - (86400 * 7) // 1 week ago
        )
    );

    // Display reviews
    echo '<div class="reviews-container">';
    
    foreach ($reviews as $review) {
        // Format timestamp
        $formatted_date = date('j M Y H:i', $review['timestamp']);
        
        // Get star rating
        $stars = get_stars($review['rating']);
        
        echo <<<HTML
            <div class="review-item">
                <h4>{$review['user_name']}</h4>
                <p>{$review['comment']}</p>
                <div class="rating">$stars</div>
                <small>{$formatted_date}</small>
            </div>
            
HTML;
    }
    
    echo '</div>';
}

// Helper function to display stars based on rating
function get_stars($rating) {
    $full_stars = floor($rating);
    $has_half_star = ($rating - $full_stars) >= 0.5;
    $stars_html = '';
    
    for ($i = 0; $i < $full_stars; $i++) {
        $stars_html .= '★';
    }
    
    if ($has_half_star) {
        $stars_html .= '⯨'; // Half star emoji
    }
    
    return $stars_html;
}

// Call the function to display reviews
display_reviews();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display review form
function display_review_form() {
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <h3>Submit a Review</h3>
        <div class="rating">
            <label for="stars">Rating:</label><br>
            <input type="radio" name="stars" value="5"> 5
            <input type="radio" name="stars" value="4"> 4
            <input type="radio" name="stars" value="3"> 3
            <input type="radio" name="stars" value="2"> 2
            <input type="radio" name="stars" value="1"> 1
        </div>
        <br>
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4" cols="50"></textarea>
        <br>
        <input type="submit" name="submit_review" value="Submit">
    </form>
    <?php
}

// Function to submit review
function submit_review($conn) {
    if (isset($_POST['submit_review'])) {
        $stars = $_POST['stars'];
        $comment = $_POST['comment'];
        
        // Sanitize inputs
        $stars = mysqli_real_escape_string($conn, $stars);
        $comment = mysqli_real_escape_string($conn, $comment);
        
        // Validate inputs
        if ($stars < 1 || $stars > 5) {
            echo "Invalid rating!";
            return;
        }
        if (empty($comment)) {
            echo "Please write a comment!";
            return;
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (stars, comment) VALUES ('$stars', '$comment')";
        if ($conn->query($sql) === TRUE) {
            echo "Review submitted successfully!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function display_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $stars = str_repeat("⭐", $row["stars"]);
            echo "<div class='review'>";
            echo "<p>Rating: $stars</p>";
            echo "<p>Comment: " . $row["comment"] . "</p>";
            echo "<p>" . date('d/m/Y H:i', strtotime($row["timestamp"])) . "</p>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
        .rating input[type="radio"] {
            display: inline-block;
            margin-right: 5px;
        }
    </style>
</head>
<body>

<?php
display_review_form();
submit_review($conn);
echo "<h3>Reviews:</h3>";
display_reviews($conn);

$conn->close();
?>
</body>
</html>


<?php
function handleReviews($db) {
    session_start();
    
    // Check if the action parameter is set
    $action = isset($_POST['action']) ? $_POST['action'] : '';
    
    switch ($action) {
        case 'display':
            displayReviews($db);
            break;
            
        case 'submit':
            submitReview($db);
            break;
            
        case 'edit':
            editReview($db);
            break;
            
        case 'delete':
            deleteReview($db);
            break;
            
        default:
            echo "Invalid action";
            break;
    }
}

function displayReviews($db) {
    $query = "SELECT r.*, u.name 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              ORDER BY r.review_date DESC";
    
    $stmt = $db->prepare($query);
    $stmt->execute();
    
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Reviewer: {$review['name']}</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>Review: {$review['comment']}</p>";
        echo "<small>Posted on: {$review['review_date']}</small><br>";
        
        if ($_SESSION['user_id'] == $review['user_id']) {
            echo "<a href='edit_review.php?id={$review['id']}'>Edit</a> | ";
            echo "<a href='delete_review.php?id={$review['id']}'>Delete</a>";
        }
        
        echo "</div><hr>";
    }
}

function submitReview($db) {
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['status' => 'error', 'message' => 'You must be logged in to post a review!']));
    }

    $name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars($_POST['comment']);

    if (empty($name) || empty($email) || $rating == 0 || empty($comment)) {
        die(json_encode(['status' => 'error', 'message' => 'Please fill in all required fields!']));
    }

    $stmt = $db->prepare("INSERT INTO reviews 
                        SET user_id = :user_id,
                            name = :name,
                            email = :email,
                            rating = :rating,
                            comment = :comment,
                            review_date = NOW()");
    
    $result = $stmt->execute([
        'user_id' => $_SESSION['user_id'],
        'name' => $name,
        'email' => $email,
        'rating' => $rating,
        'comment' => $comment
    ]);
    
    if ($result) {
        echo json_encode(['status' => 'success', 'message' => 'Review submitted successfully!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Error submitting review!']);
    }
}

function editReview($db) {
    $review_id = intval($_POST['id']);
    
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['status' => 'error', 'message' => 'You must be logged in to edit a review!']));
    }

    // Verify ownership of the review
    $stmt = $db->prepare("SELECT user_id FROM reviews WHERE id = :id");
    $stmt->execute(['id' => $review_id]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result['user_id'] != $_SESSION['user_id']) {
        die(json_encode(['status' => 'error', 'message' => 'You are not authorized to edit this review!']));
    }

    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars($_POST['comment']);

    if ($rating == 0 || empty($comment)) {
        die(json_encode(['status' => 'error', 'message' => 'Please fill in all required fields!']));
    }

    $stmt = $db->prepare("UPDATE reviews 
                        SET rating = :rating,
                            comment = :comment
                        WHERE id = :id");
    
    $result = $stmt->execute([
        'id' => $review_id,
        'rating' => $rating,
        'comment' => $comment
    ]);
    
    if ($result) {
        echo json_encode(['status' => 'success', 'message' => 'Review updated successfully!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Error updating review!']);
    }
}

function deleteReview($db) {
    $review_id = intval($_POST['id']);
    
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['status' => 'error', 'message' => 'You must be logged in to delete a review!']));
    }

    // Verify ownership of the review
    $stmt = $db->prepare("SELECT user_id FROM reviews WHERE id = :id");
    $stmt->execute(['id' => $review_id]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result['user_id'] != $_SESSION['user_id']) {
        die(json_encode(['status' => 'error', 'message' => 'You are not authorized to delete this review!']));
    }

    $stmt = $db->prepare("DELETE FROM reviews WHERE id = :id");
    $result = $stmt->execute(['id' => $review_id]);
    
    if ($result) {
        echo json_encode(['status' => 'success', 'message' => 'Review deleted successfully!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Error deleting review!']);
    }
}
?>


<?php
require 'database.php'; // Include your PDO connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    handleReviews($db);
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment, $db_connection) {
    // Sanitize input values
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags($comment), ENT_QUOTES);

    try {
        // Check if the rating is within valid range (1-5)
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Please choose a rating between 1 and 5.");
        }

        // Prepare SQL query
        $query = "INSERT INTO reviews 
                  SET user_id = :user_id,
                      product_id = :product_id,
                      rating = :rating,
                      comment = :comment,
                      review_date = NOW()";

        // Prepare the statement
        $stmt = $db_connection->prepare($query);
        
        // Bind parameters
        $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
        $stmt->bindParam(':product_id', $product_id, PDO::PARAM_INT);
        $stmt->bindParam(':rating', $rating, PDO::PARAM_INT);
        $stmt->bindParam(':comment', $comment);

        // Execute the query
        if ($stmt->execute()) {
            return array('status' => 'success', 'message' => 'Review submitted successfully!');
        } else {
            return array('status' => 'error', 'message' => 'Error submitting review. Please try again.');
        }
    } catch (PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return array('status' => 'error', 'message' => 'Database error occurred while submitting your review.');
    } catch (Exception $e) {
        // Handle other exceptions
        return array('status' => 'error', 'message' => $e->getMessage());
    }
}
?>


// Sample input data
$user_id = 123;
$product_id = 456;
$rating = 4;
$comment = "This is a great product! I love it!";
$db_connection = $pdo; // Your database connection

// Submit review
$result = submit_review($user_id, $product_id, $rating, $comment, $db_connection);

// Display result
if ($result['status'] == 'success') {
    echo "Review submitted successfully!";
} else {
    echo "Error: " . $result['message'];
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Create table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(100),
    review_text TEXT,
    rating INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to save a new review
function saveReview($user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize input data
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    $rating = intval($rating);
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating) 
            VALUES ('$user_name', '$review_text', '$rating')";
            
    mysqli_query($conn, $sql);
    return true;
}

// Function to get all reviews
function getAllReviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }
    
    return $reviews;
}

// Check if review was submitted
if (isset($_POST['submit_review'])) {
    // Get form data
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    // Validate input
    if (empty($user_name) || empty($review_text)) {
        echo "Please fill in all required fields!";
    } else {
        if (saveReview($user_name, $review_text, $rating)) {
            echo "Thank you for your review!";
        } else {
            echo "There was an error saving your review. Please try again.";
        }
    }
}

// Display review form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Review System</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .review-list { margin: 20px; }
        .single-review { margin-bottom: 15px; padding: 10px; border: 1px solid #eee; }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Write a Review</h2>
    <form method="post" action="">
        <input type="text" name="user_name" placeholder="Your Name" required><br><br>
        <textarea name="review_text" placeholder="Write your review here..." rows="4" required></textarea><br><br>
        <label>Rating:</label>
        <select name="rating">
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select><br><br>
        <input type="submit" name="submit_review" value="Submit Review">
    </form>
</div>

<div class="review-list">
    <h2>Customer Reviews</h2>
    <?php
    $reviews = getAllReviews();
    
    if (empty($reviews)) {
        echo "No reviews yet. Be the first to review!";
    } else {
        foreach ($reviews as $review) {
            echo "<div class='single-review'>";
            echo "<strong>" . htmlspecialchars_decode($review['user_name']) . "</strong><br>";
            echo "<span style='color: #ff8f00;'>★ " . $review['rating'] . "/5</span><br>";
            echo "<p>" . htmlspecialchars_decode($review['review_text']) . "</p>";
            echo "<small>Posted on " . $review['created_at'] . "</small>";
            echo "</div>";
        }
    }
    
    // Calculate and display average rating
    $sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews";
    $result_avg = mysqli_query($conn, $sql_avg);
    $row_avg = mysqli_fetch_assoc($result_avg);
    
    if ($row_avg['avg_rating'] > 0) {
        echo "<div style='margin-top: 20px; font-size: 1.2em;'>";
        echo "Average Rating: <span style='color: #ff8f00;'>★ " . round($row_avg['avg_rating'], 1) . "/5</span>";
        echo "</div>";
    }
    
    mysqli_close($conn);
    ?>
</div>

</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $current_user_id = $_SESSION['user_id'];
    $review_name = mysqli_real_escape_string($conn, $_POST['review_name']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

    if (!empty($review_name) && !empty($review_text)) {
        $sql = "INSERT INTO reviews (user_id, name, review_text) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 'iss', $current_user_id, $review_name, $review_text);

        if (mysqli_stmt_execute($stmt)) {
            echo "Review submitted successfully!";
            header("Location: reviews.php?refresh=true");
            exit();
        } else {
            die("Error submitting review: " . mysqli_error($conn));
        }
    } else {
        die("Please fill in all fields.");
    }
}
?>


<?php
session_start();
require_once 'db_connection.php';

function get_reviews() {
    global $conn;
    $sql = "SELECT r.*, u.role FROM reviews r LEFT JOIN users u ON r.user_id = u.id ORDER BY date_posted DESC";
    $result = mysqli_query($conn, $sql);
    return $result ? mysqli_fetch_all($result, MYSQLI_ASSOC) : [];
}

$reviews = get_reviews();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <?php foreach ($reviews as $review): ?>
        <div class="review-box">
            <h3><?php echo htmlspecialchars($review['name']); ?></h3>
            <p><?php echo nl2br(htmlspecialchars($review['review_text'])); ?></p>
            <small>Posted on: <?php echo date('F j, Y', strtotime($review['date_posted'])); ?></small>
            
            <!-- Delete Review Button -->
            <?php if ($_SESSION['user_id'] == $review['user_id'] || $_SESSION['role'] == 'admin'): ?>
                <form action="delete_review.php" method="POST">
                    <input type="hidden" name="review_id" value="<?php echo $review['id']; ?>">
                    <button type="submit">Delete</button>
                </form>
            <?php endif; ?>
        </div>
    <?php endforeach; ?>

    <!-- Review Form -->
    <?php include 'review_form.php'; ?>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $current_user_id = $_SESSION['user_id'];
    $review_id = intval($_POST['review_id']);

    // Check if user is admin or owner of the review
    $sql = "SELECT user_id FROM reviews WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $review_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        if ($row['user_id'] == $current_user_id || $_SESSION['role'] == 'admin') {
            // Delete the review
            $delete_sql = "DELETE FROM reviews WHERE id = ?";
            $delete_stmt = mysqli_prepare($conn, $delete_sql);
            mysqli_stmt_bind_param($delete_stmt, 'i', $review_id);

            if (mysqli_stmt_execute($delete_stmt)) {
                header("Location: reviews.php?refresh=true");
                exit();
            } else {
                die("Error deleting review: " . mysqli_error($conn));
            }
        } else {
            die("You are not authorized to delete this review.");
        }
    } else {
        die("Review not found.");
    }
}
?>


<?php
$host = 'localhost';
$db_name = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new mysqli($host, $username, $password, $db_name);
} catch (Exception $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


<?php
function displayUserReviews($reviews, $users) {
    // Check if inputs are valid arrays
    if (!is_array($reviews) || empty($reviews) || !is_array($users) || empty($users)) {
        return "No reviews available";
    }

    $output = "<div class='user-reviews'>";
    
    // Calculate average rating
    $totalRating = 0;
    foreach ($reviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = round($totalRating / count($reviews), 2);
    
    // Display average rating
    $output .= "<div class='average-rating'>";
    $output .= "Average Rating: $averageRating/5 stars";
    $output .= "</div>";

    // Display each review
    foreach ($reviews as $review) {
        // Get reviewer details
        $reviewerId = $review['reviewer_id'];
        $reviewerName = isset($users[$reviewerId]['name']) ? $users[$reviewerId]['name'] : 'Anonymous';
        
        $output .= "<div class='review-item'>";
        $output .= "<div class='review-header'>";
        $output .= "<span class='reviewer-name'>$reviewerName</span>";
        $output .= "<span class='rating-stars'>";
        
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                $output .= "★";
            } else {
                $output .= "☆";
            }
        }
        
        $output .= "</span>";
        $output .= "</div>";
        $output .= "<p class='review-text'>" . htmlspecialchars($review['text']) . "</p>";
        $output .= "<div class='review-date'>";
        $output .= date('F j, Y', strtotime($review['date']));
        $output .= "</div>";
        $output .= "</div>";
    }

    $output .= "</div>";

    return $output;
}

// Example usage:

$reviews = array(
    array(
        'id' => 1,
        'reviewer_id' => 101,
        'rating' => 5,
        'text' => "Excellent product! Highly recommended.",
        'date' => "2023-10-01"
    ),
    array(
        'id' => 2,
        'reviewer_id' => 102,
        'rating' => 4,
        'text' => "Good quality, but could be better.",
        'date' => "2023-10-02"
    )
);

$users = array(
    101 => array('name' => 'John Doe'),
    102 => array('name' => 'Jane Smith')
);

echo displayUserReviews($reviews, $users);
?>


<?php
// Function to create user review
function createReview($userId, $productId, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'my_store';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check if review already exists for this user and product
        $checkQuery = "SELECT id FROM reviews WHERE user_id = ? AND product_id = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ii", $userId, $productId);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Review already exists
            return "You have already submitted a review for this product.";
        } else {
            // Insert new review into database
            $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment) 
                           VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($insertQuery);
            $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);

            if ($stmt->execute()) {
                // Review successfully added
                return "Thank you for submitting your review!";
            } else {
                // Error inserting review
                throw new Exception("Error adding review: " . $conn->error);
            }
        }

        $stmt->close();
        $conn->close();

    } catch (Exception $e) {
        // Handle any exceptions
        return "An error occurred: " . $e->getMessage();
    }
}

// Example usage:
$userId = 1;
$productId = 5;
$rating = 4;
$comment = "Great product, highly recommend!";
$result = createReview($userId, $productId, $rating, $comment);
echo $result;

?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($user_name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Validate input
    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address";
    }

    // Check rating range
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, email, rating, comment, date_posted)
            VALUES ('$user_name', '$email', '$rating', '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date_posted DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . $row['user_name'] . "</h3>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Rating: " . createStars($row['rating']) . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<p>Date Posted: " . date('F j, Y', strtotime($row['date_posted'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to create star rating
function createStars($rating) {
    $stars = "";
    for ($i = 1; $i <= $rating; $i++) {
        $stars .= "<i class='fas fa-star'></i>";
    }
    return $stars;
}

// Pagination function (optional)
function pagination($conn, $results_per_page = 5) {
    $sql = "SELECT COUNT(*) as total FROM reviews";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    $total = $row['total'];
    
    $page = isset($_GET['page']) ? $_GET['page'] : 1;
    $offset = ($page - 1) * $results_per_page;

    $pages = ceil($total / $results_per_page);

    echo "<div class='pagination'>";
    for ($i = 1; $i <= $pages; $i++) {
        if ($i == $page) {
            echo "<a href='?page=$i' class='current'>$i</a>";
        } else {
            echo "<a href='?page=$i'>$i</a>";
        }
    }
    echo "</div>";

    return $offset;
}

// Close database connection
mysqli_close($conn);
?>



<?php
// Include the review functions
include("review_functions.php");

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submitReview($_POST['user_name'], $_POST['email'], $_POST['rating'], $_POST['comment'], $conn);
    echo $result;
}

// Display all reviews
displayReviews($conn);

// Show pagination
pagination($conn, 5); // Displays 5 reviews per page
?>


<?php
// This function handles adding new reviews and displaying existing ones
function user_review_system() {
    // Database connection details (update these with your actual database credentials)
    $db_host = 'localhost';
    $db_user = 'root';
    $db_password = '';
    $db_name = 'reviews';

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Get all reviews from the database
    $get_reviews_sql = "SELECT * FROM user_reviews ORDER BY review_id DESC";
    $result = $conn->query($get_reviews_sql);

    // Initialize variables for average rating calculation
    $total_rating = 0;
    $number_of_ratings = 0;

    // Display existing reviews
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>Rating: " . str_repeat("★", $row['rating']) . "</h4>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Reviewed by: " . htmlspecialchars($row['user_name']) . " on " . $row['review_date'] . "</small>";
            echo "</div>";
            
            // Calculate total rating
            $total_rating += $row['rating'];
            $number_of_ratings++;
        }
        
        // Display average rating
        if ($number_of_ratings > 0) {
            $average_rating = $total_rating / $number_of_ratings;
            echo "<div class='average-rating'>";
            echo "Average Rating: " . number_format($average_rating, 1) . "/5";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }

    // Close database connection
    $conn->close();

    // Display review form
    echo "<div class='review-form'>";
    echo "<h2>Leave a Review</h2>";
    echo "<form action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "' method='post'>";
    echo "<input type='text' name='user_name' placeholder='Your Name' required><br>";
    echo "Rating: ";
    for ($i = 5; $i >= 1; $i--) {
        echo "<input type='radio' name='rating' value='" . $i . "' checked> " . str_repeat("★", $i) . " ";
    }
    echo "<br>";
    echo "<textarea name='comment' placeholder='Your Review' required></textarea><br>";
    echo "<input type='submit' name='submit_review' value='Submit Review'>";
    echo "</form>";
    echo "</div>";

    // Process submitted review
    if (isset($_POST['submit_review'])) {
        $user_name = htmlspecialchars($_POST['user_name']);
        $rating = $_POST['rating'];
        $comment = htmlspecialchars($_POST['comment']);

        // Insert new review into database
        $insert_sql = "INSERT INTO user_reviews (user_name, rating, comment, review_date) 
                      VALUES ('$user_name', '$rating', '$comment', CURRENT_TIMESTAMP)";
        
        if ($conn->query($insert_sql)) {
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Error submitting review: " . $conn->error . "</div>";
        }
    }

    // Add some CSS styling
    echo "<style>
        .review { margin-bottom: 20px; padding: 10px; border: 1px solid #ddd; }
        .average-rating { font-weight: bold; color: #333; margin-top: 20px; }
        .review-form { margin-top: 20px; background-color: #f5f5f5; padding: 20px; }
        input[type='text'], textarea { width: 100%; margin: 10px 0; padding: 8px; }
        input[type='submit'] { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; }
        input[type='submit']:hover { background-color: #45a049; }
        .success { color: green; margin-top: 10px; }
        .error { color: red; margin-top: 10px; }
    </style>";
}
?>

<!-- Call the review function -->
<?php
user_review_system();
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add review
function add_review($name, $review) {
    global $conn;
    
    // Sanitize input
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $review = mysqli_real_escape_string($conn, htmlspecialchars($review));
    
    // Insert into database
    $sql = "INSERT INTO reviews (name, review, date) VALUES ('$name', '$review', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews
function get_reviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return $result;
    } else {
        return false;
    }
}

// Close connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        .review-form { margin-bottom: 30px; }
        .review-form input, .review-form textarea { width: 100%; padding: 8px; margin: 5px 0; }
        .review-list { margin-top: 20px; }
        .review-item { border: 1px solid #ddd; padding: 15px; margin-bottom: 10px; border-radius: 4px; }
        .review-author { font-weight: bold; color: #333; }
        .review-date { color: #666; font-size: 0.9em; }
    </style>
</head>
<body>

<h2>Leave a Review</h2>

<div class="review-form">
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <textarea name="review" rows="4" placeholder="Write your review here..." required></textarea><br>
        <button type="submit">Submit Review</button>
    </form>
</div>

<?php
// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $review = $_POST['review'];
    
    if (add_review($name, $review)) {
        echo "<script>alert('Review submitted successfully!');</script>";
    } else {
        echo "<script>alert('Error submitting review. Please try again.');</script>";
    }
}

// Display existing reviews
$reviews = get_reviews();
if ($reviews) {
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo "<div class='review-item'>";
        echo "<div class='review-author'>" . htmlspecialchars($row['name']) . "</div>";
        echo "<div class='review-date'>" . $row['date'] . "</div>";
        echo "<p>" . htmlspecialchars($row['review']) . "</p>";
        echo "</div>";
    }
} else {
    echo "<p>No reviews yet.</p>";
}
?>

</body>
</html>


<?php
function submit_review($username, $rating, $comment = "") {
    // Database connection details
    $host = 'localhost';
    $db_name = 'reviews_db';
    $username_db = 'root';
    $password_db = '';

    try {
        // Create a database connection using PDO
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username_db, $password_db);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Validate input
        if (empty($username) || strlen($username) > 50) {
            return array('success' => false, 'message' => 'Username must be between 1 and 50 characters');
        }

        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            return array('success' => false, 'message' => 'Rating must be a number between 1 and 5');
        }

        if (strlen($comment) > 500) {
            return array('success' => false, 'message' => 'Comment cannot exceed 500 characters');
        }

        // Prepare the SQL statement
        $sql = "INSERT INTO reviews (username, rating, comment, review_date)
                VALUES (:username, :rating, :comment, NOW())";

        $stmt = $conn->prepare($sql);

        // Bind parameters to the statement
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', ($comment !== "" ? $comment : null));

        // Execute the query
        $stmt->execute();

        return array('success' => true, 'message' => 'Review submitted successfully!');

    } catch(PDOException $e) {
        // Return error message if something goes wrong
        return array('success' => false, 'message' => 'Error submitting review: ' . $e->getMessage());
    }
}

// Example usage:
$review = submit_review(
    "JohnDoe",
    4,
    "Great product! Highly recommended."
);

if ($review['success']) {
    echo $review['message'];
} else {
    echo $review['message'];
}
?>


function submit_review($review_id = null, $user_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if review_id is provided (for updating an existing review)
    if ($review_id !== null) {
        // Update existing review
        $query = "UPDATE reviews SET rating = ?, comment = ? WHERE id = ?";
        
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "iss", $rating, $comment, $review_id);
        
        if (mysqli_stmt_execute($stmt)) {
            return array("success" => true, "message" => "Review updated successfully");
        } else {
            return array("success" => false, "message" => "Error updating review: " . mysqli_error($conn));
        }
    } else {
        // Insert new review
        $query = "INSERT INTO reviews (user_id, rating, comment) VALUES (?, ?, ?)";
        
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "iss", $user_id, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            return array("success" => true, "message" => "Review submitted successfully");
        } else {
            return array("success" => false, "message" => "Error submitting review: " . mysqli_error($conn));
        }
    }

    // Close database connection
    mysqli_close($conn);
}


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch all reviews from the database
    $sql = "SELECT name, review FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row["name"]) . "</h4>";
            echo "<p>" . htmlspecialchars($row["review"]) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Function to handle review submission
function submitReview() {
    global $conn;
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $review = htmlspecialchars(trim($_POST['review']));
        
        // Validate inputs
        if (empty($name) || empty($review)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("INSERT INTO reviews (name, review) VALUES (?, ?)");
        $stmt->bind_param("ss", $name, $review);
        
        if ($stmt->execute()) {
            echo "Thank you for your review!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
        
        // Close the statement
        $stmt->close();
    }
}

// Display form for submitting reviews
function displayReviewForm() {
    echo "<div class='review-form'>";
    echo "<h2>Submit Your Review</h2>";
    echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
    echo "<input type='text' name='name' placeholder='Your Name' required><br>";
    echo "<textarea name='review' placeholder='Write your review here...' required></textarea><br>";
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
    echo "</div>";
}

// Main function to run the application
function main() {
    // Display review form
    displayReviewForm();
    
    // Handle review submission if form was submitted
    submitReview();
    
    // Display all reviews
    displayReviews();
}

// Run the main function
main();

// Close database connection
$conn->close();
?>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create review table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
id INT AUTO_INCREMENT PRIMARY KEY,
product_id INT,
user_name VARCHAR(255),
user_email VARCHAR(255),
rating INT,
comments TEXT,
timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

$conn->query($sql);

function submit_review() {
    global $conn;
    
    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    $user_name = mysqli_real_escape_string($conn, $_POST['name']);
    $user_email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = mysqli_real_escape_string($conn, $_POST['rating']);
    $comments = mysqli_real_escape_string($conn, $_POST['comments']);
    
    // Validate input
    if (empty($user_name) || empty($user_email) || empty($rating)) {
        echo "Please fill in all required fields.";
        return;
    }
    
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email address.";
        return;
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comments)
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$comments')";
    
    if ($conn->query($sql) === TRUE) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>" . htmlspecialchars($row['user_name']) . "</h4>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['user_email']) . "</p>";
            echo "<p>Comments: " . htmlspecialchars($row['comments']) . "</p>";
            echo "<small>" . date('jS M Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    submit_review();
}

display_reviews(1); // Display reviews for product ID 1
?>



<?php
// Database connection
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $mysqli;
    
    // Sanitize input
    $user_id = intval($user_id);
    $product_id = intval($product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($mysqli, htmlspecialchars($comment));
    
    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, date_added)
              VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";
    
    if ($mysqli->query($query)) {
        return true;
    } else {
        return false;
    }
}

// Function to get reviews for a specific product
function get_reviews($product_id) {
    global $mysqli;
    
    $product_id = intval($product_id);
    
    // Get reviews from database
    $query = "SELECT r.*, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = '$product_id' 
              ORDER BY r.date_added DESC";
    
    $result = $mysqli->query($query);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    $reviews = get_reviews($product_id);
    
    if ($reviews) {
        echo '<div class="reviews">';
        
        while ($row = $reviews->fetch_assoc()) {
            $user_name = $row['username'];
            $rating = $row['rating'];
            $comment = htmlspecialchars_decode($row['comment']);
            $date = date('F j, Y', strtotime($row['date_added']));
            
            echo '<div class="review">';
                echo "<h4>Review by $user_name</h4>";
                echo "<p><strong>Rating:</strong> $rating/5</p>";
                echo "<p><strong>Comment:</strong> $comment</p>";
                echo "<small>Reviewed on $date</small>";
            echo '</div>';
        }
        
        echo '</div>';
    } else {
        echo '<p>No reviews available for this product.</p>';
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming user is logged in and has a valid session
    $user_id = $_SESSION['user_id'];
    $product_id = $_GET['product_id']; // Make sure to validate this
    
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo 'Review added successfully!';
    } else {
        echo 'Error adding review. Please try again.';
    }
}

// Display reviews for a product
if (isset($_GET['product_id'])) {
    display_reviews($_GET['product_id']);
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function add_review($product_id, $username, $useremail, $rating, $comment) {
    global $conn;
    
    // Validate input
    if (!isset($product_id, $username, $useremail, $rating, $comment)) {
        return false;
    }
    
    if (!is_numeric($product_id) || $product_id <= 0) {
        return false;
    }
    
    if (strlen(trim($username)) == 0) {
        return false;
    }
    
    if (!filter_var($useremail, FILTER_VALIDATE_EMAIL)) {
        return false;
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false;
    }
    
    // Prepare and bind
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, username, useremail, rating, comment, review_date) VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)");
    $stmt->bind_param("issss", $product_id, $username, $useremail, $rating, $comment);
    
    // Execute and check
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

function display_reviews($product_id) {
    global $conn;
    
    $reviews = array();
    
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    while ($row = $result->fetch_assoc()) {
        $reviews[] = array(
            'id' => $row['id'],
            'username' => htmlspecialchars($row['username']),
            'rating' => $row['rating'],
            'comment' => htmlspecialchars($row['comment']),
            'date' => date('F j, Y', strtotime($row['review_date']))
        );
    }
    
    return $reviews;
}
?>


<?php
if (isset($_POST['submit_review'])) {
    // Assuming $product_id is defined and valid
    $product_id = $_POST['product_id'];
    $username = $_POST['username'];
    $useremail = $_POST['useremail'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($product_id, $username, $useremail, $rating, $comment)) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>Error submitting review. Please try again.</div>";
    }
}

$reviews = display_reviews($product_id);
?>

<div class="reviews-list">
    <?php foreach ($reviews as $review) { ?>
        <div class="review-item">
            <h3><?php echo $review['username']; ?></h3>
            <div class="stars">
                <?php 
                    $stars = str_repeat('★ ', $review['rating']);
                    $empty_stars = str_repeat('☆ ', 5 - $review['rating']);
                    echo rtrim($stars . $empty_stars, ' ');
                ?>
            </div>
            <p><?php echo $review['comment']; ?></p>
            <small>Posted on <?php echo $review['date']; ?></small>
        </div>
    <?php } ?>
</div>


<?php
// Database configuration
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';      // Replace with your database password
$dbname = 'reviews_db'; // Replace with your database name

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');
}

// Process the form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize inputs
    $username = isset($_POST['username']) ? sanitizeInput($_POST['username']) : '';
    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : '';
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $review_text = isset($_POST['review_text']) ? sanitizeInput($_POST['review_text']) : '';

    // Set default error message
    $error = "";

    if (empty($username) || empty($email) || empty($rating) || empty($review_text)) {
        $error = "All fields are required!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Please enter a valid email address!";
    } elseif ($rating < 1 || $rating > 5) {
        $error = "Rating must be between 1 and 5!";
    }

    if (empty($error)) {
        // Prepare the SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (username, email, rating, review_text) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("ssis", $username, $email, $rating, $review_text);

        if ($stmt->execute()) {
            // Success: redirect back to the same page
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            echo "Error: " . $conn->error;
        }

        $stmt->close();
    }
}

// Retrieve all reviews from database
$reviews_query = "SELECT id, username, rating, review_text, submission_date FROM reviews ORDER BY submission_date DESC";
$result = $conn->query($reviews_query);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .stars {
            font-size: 24px;
            color: gold;
        }
        .review-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php if (isset($error) && $error != "") { ?>
        <div style="color: red; margin-bottom: 20px;"><?php echo $error; ?></div>
    <?php } ?>

    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Name:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="rating">Rating:</label><br>
        <?php for ($i = 5; $i >= 1; $i--) { ?>
            <input type="radio" name="rating" value="<?php echo $i; ?>" id="star<?php echo $i; ?>">
            <label for="star<?php echo $i; ?>">★</label>
        <?php } ?><br>

        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" required></textarea><br>

        <input type="submit" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
            $date = date('Y-m-d H:i', strtotime($row['submission_date']));
    ?>

        <div class="review-box">
            <strong><?php echo htmlspecialchars($row['username']); ?></strong><br>
            <?php echo $stars; ?><br>
            <em>Submitted on <?php echo $date; ?></em><br>
            <p><?php echo nl2br(htmlspecialchars($row['review_text'])); ?></p>
        </div>

    <?php }
        $result->free();
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    } ?>

</body>
</html>

<?php
$conn->close();
?>


<?php
function submit_review($review_text, $user_id, $product_id) {
    // Validate input parameters
    if (!is_string($review_text) || trim($review_text) === '') {
        return "Error: Review text is empty or not a string.";
    }
    
    if (!is_numeric($user_id) || $user_id <= 0) {
        return "Error: Invalid user ID.";
    }
    
    if (!is_numeric($product_id) || $product_id <= 0) {
        return "Error: Invalid product ID.";
    }
    
    // Database connection parameters
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';
    
    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);
    
    if ($conn->connect_error) {
        return "Error: Failed to connect to the database.";
    }
    
    // Prepare and execute SQL query to insert review
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, created_at, updated_at)
            VALUES (?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";
    
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        return "Error: Failed to prepare the SQL statement.";
    }
    
    // Bind parameters
    $stmt->bind_param("iis", $user_id, $product_id, $review_text);
    
    if ($stmt->execute()) {
        // Review submitted successfully
        $response = array(
            'status' => 'success',
            'message' => 'Review submitted successfully.',
            'review_id' => $stmt->insert_id
        );
        return json_encode($response);
    } else {
        // Error submitting review
        return "Error: Failed to submit the review. Please try again later.";
    }
    
    // Close database connection
    $conn->close();
}

// Example usage:
$review_text = "This is a great product!";
$user_id = 1;
$product_id = 5;

$result = submit_review($review_text, $user_id, $product_id);
echo $result;

?>


<?php
function displayUserReviews() {
    // Database connection details
    $host = "localhost";
    $dbUsername = "username";
    $dbPassword = "password";
    $dbName = "database_name";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = mysqli_query($conn, $sql);

    $output = "";

    while ($row = mysqli_fetch_assoc($result)) {
        $output .= "
            <div class='review-card'>
                <div class='review-header'>
                    <h3>" . $row['username'] . "</h3>
                    <div class='rating'>";
        
        // Display rating stars
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                $output .= "<span class='star'>★</span>";
            } else {
                $output .= "<span class='star'>☆</span>";
            }
        }

        $output .= "
                    </div>
                </div>
                <p class='review-text'>" . $row['review_text'] . "</p>
                <small class='review-date'>" . date('Y-m-d', strtotime($row['timestamp'])) . "</small>
            </div>";
    }

    // Close database connection
    mysqli_close($conn);

    if (empty($output)) {
        return "<p>No reviews have been submitted yet.</p>";
    } else {
        return $output;
    }
}
?>


<?php
// Include the function
require_once('review-function.php');

// Display reviews
echo displayUserReviews();
?>


<?php
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $review = htmlspecialchars($_POST['user_review']);

    // Validate inputs
    if (empty($username) || empty($review)) {
        echo "<div class='error'>Please fill in both name and review!</div>";
    } else {
        $filename = "reviews.txt";

        // Create file if it doesn't exist
        if (!file_exists($filename)) {
            touch($filename);
        }

        // Check file write permissions
        if (is_writable($filename)) {
            // Append the new review to the file
            $review_data = PHP_EOL . $username . "|" . $review;
            file_put_contents($filename, $review_data, FILE_APPEND | LOCK_EX);
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Unable to write to the reviews file. Contact the administrator.</div>";
        }
    }
}


<div class="reviews">
    <h2>Previous Reviews</h2>
    <?php
    $filename = "reviews.txt";
    
    if (file_exists($filename) && is_readable($filename)) {
        // Read all lines from the file
        $lines = file($filename, FILE_IGNORE_NEW_LINES);
        
        foreach ($lines as $line) {
            if (!empty($line)) {
                list($name, $comment) = explode('|', $line, 2);
                echo "<div class='review'>";
                echo "<strong>$name</strong><br>";
                echo "$comment<br><hr>";
                echo "</div>";
            }
        }
    } else {
        echo "No reviews available yet.";
    }
    ?>
</div>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            margin-bottom: 20px;
        }
        .reviews {
            background-color: #f9f9f9;
            padding: 10px;
            border-radius: 5px;
        }
        .error, .success {
            margin-bottom: 10px;
            padding: 5px;
            border-radius: 3px;
        }
        .error { background-color: #ffe6e6; color: red; }
        .success { background-color: #e6ffed; color: green; }
    </style>
</head>
<body>

<?php
// Handle form submission if it exists
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $review = htmlspecialchars($_POST['user_review']);

    if (empty($username) || empty($review)) {
        echo "<div class='error'>Please fill in both name and review!</div>";
    } else {
        $filename = "reviews.txt";

        if (!file_exists($filename)) {
            touch($filename);
        }

        if (is_writable($filename)) {
            $review_data = PHP_EOL . $username . "|" . $review;
            file_put_contents($filename, $review_data, FILE_APPEND | LOCK_EX);
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Unable to write to the reviews file. Contact the administrator.</div>";
        }
    }
}
?>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Your Name" required><br>
        <textarea name="user_review" placeholder="Write your review here..." rows="4" cols="50" required></textarea><br>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>
</div>

<div class="reviews">
    <h2>Previous Reviews</h2>
    <?php
    $filename = "reviews.txt";
    
    if (file_exists($filename) && is_readable($filename)) {
        $lines = file($filename, FILE_IGNORE_NEW_LINES);
        
        foreach ($lines as $line) {
            if (!empty($line)) {
                list($name, $comment) = explode('|', $line, 2);
                echo "<div class='review'>";
                echo "<strong>$name</strong><br>";
                echo "$comment<br><hr>";
                echo "</div>";
            }
        }
    } else {
        echo "No reviews available yet.";
    }
    ?>
</div>

</body>
</html>


<?php
function handleUserReview($review_id = null, $user_id = null, $rating = null, $comments = null) {
    // Database connection details
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    // Create connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // If review_id is provided, update the existing review
        if ($review_id !== null) {
            $stmt = $conn->prepare("UPDATE reviews SET rating=?, comments=? WHERE id=?");
            $stmt->bind_param("sii", $rating, $comments, $review_id);
        } 
        // Otherwise, insert a new review
        else {
            $stmt = $conn->prepare("INSERT INTO reviews (user_id, rating, comments) VALUES (?, ?, ?)");
            $stmt->bind_param("isi", $user_id, $rating, $comments);
        }

        // Execute the statement
        if ($stmt->execute()) {
            return "Review " . ($review_id ? "updated" : "added") . " successfully. Affected rows: " . $stmt->affected_rows;
        } else {
            throw new Exception("Error executing database query: " . $conn->error);
        }
    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    } finally {
        // Close the statement and connection
        if ($stmt) $stmt->close();
        $conn->close();
    }
}
?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Create table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    item_id INT,
    rating INT,
    comment TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .stars {
            display: inline-block;
            margin: 5px;
        }
        .star {
            color: #ffd700;
        }
    </style>
</head>
<body>

<?php
// Function to add a new review
function addReview($item_id, $user_id, $rating, $comment) {
    global $conn;

    // Check if the rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        die("Invalid rating");
    }

    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (item_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("iiis", $item_id, $user_id, $rating, $comment);
    $stmt->execute();
}

// Function to display all reviews for an item
function getReviews($item_id) {
    global $conn;

    $reviews = array();

    // Get the reviews from the database
    $result = mysqli_query($conn, "SELECT * FROM reviews WHERE item_id = '$item_id' ORDER BY timestamp DESC");
    
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }

    return $reviews;
}

// Function to display stars for rating
function displayStars($rating) {
    $stars_html = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars_html .= "<span class='star'>★</span>";
        } else {
            $stars_html .= "<span>☆</span>";
        }
    }
    return $stars_html;
}

// Example usage:
$item_id = 1; // Replace with actual item ID
$user_id = 1; // Replace with actual user ID

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    addReview($item_id, $user_id, $rating, $comment);
}

// Display reviews
$reviews = getReviews($item_id);

foreach ($reviews as $review) {
    echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px 0;'>";
    echo "Rating: " . displayStars($review['rating']) . "<br>";
    echo "Comment: " . htmlspecialchars($review['comment'], ENT_QUOTES) . "<br>";
    echo "Posted on: " . $review['timestamp'] . "<br>";
    echo "</div>";
?>

<!-- Review Form -->
<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    <label for="rating">Rating:</label><br>
    <input type="number" id="rating" name="rating" min="1" max="5" required><br>
    
    <label for="comment">Comment:</label><br>
    <textarea id="comment" name="comment" rows="4" cols="50" required></textarea><br>
    
    <input type="submit" value="Submit Review">
</form>

<?php
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $review_text) {
    try {
        // Connect to database
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, review_text, timestamp) 
                              VALUES (:user_id, :product_id, :rating, :review_text, NOW())");

        // Execute the statement with parameters
        $stmt->execute(array(
            ':user_id' => $user_id,
            ':product_id' => $product_id,
            ':rating' => $rating,
            ':review_text' => $review_text
        ));

        // Close connection
        $conn = null;

        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


if (submit_review($user_id, $product_id, $rating, $review_text)) {
    echo "Review submitted successfully!";
} else {
    echo "There was an error submitting your review.";
}


<?php
// Function to handle user reviews
function submitReview($userId, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    try {
        // Connect to the database
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Validate inputs
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception('Invalid rating. Please select a rating between 1 and 5.');
        }
        
        if (empty($comment)) {
            throw new Exception('Please enter your review comment.');
        }

        // Sanitize inputs
        $rating = intval($rating);
        $comment = htmlspecialchars(strip_tags($comment));

        // Prepare the SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, rating, comment, date) VALUES (?, ?, ?, NOW())");
        if (!$stmt) {
            throw new Exception('Error preparing statement.');
        }

        // Bind parameters
        $stmt->bind_param("iis", $userId, $rating, $comment);

        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception('Error submitting review. Please try again later.');
        }

        // Close the statement and connection
        $stmt->close();
        $conn->close();

        return true;
    } catch (Exception $e) {
        // Handle any errors that occurred
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['rating'], $_POST['comment'])) {
        // Assuming user authentication is in place and $userId is defined
        $userId = 1; // Replace with actual user ID
        submitReview($userId, $_POST['rating'], $_POST['comment']);
    }
}
?>


function getReviews() {
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    try {
        $conn = new mysqli($host, $username, $password, $database);
        
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Fetch reviews from the database
        $result = $conn->query("SELECT * FROM reviews ORDER BY date DESC");

        if (!$result) {
            throw new Exception('Error fetching reviews.');
        }

        $reviews = array();
        while ($row = $result->fetch_assoc()) {
            $reviews[] = $row;
        }

        $result->close();
        $conn->close();

        return $reviews;
    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}

// Display reviews
$reviews = getReviews();
if ($reviews) {
    foreach ($reviews as $review) {
        // Display each review here
        echo '<div class="review">';
        echo '<div class="rating">';
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo '<span class="star-filled">★</span>';
            } else {
                echo '<span class="star-empty">★</span>';
            }
        }
        echo '</div>';
        echo '<p>' . $review['comment'] . '</p>';
        echo '<small>Posted by: ' . $review['user_id'] . ' on ' . date('F j, Y', strtotime($review['date'])) . '</small>';
        echo '</div>';
    }
}


<?php
function submit_review($review_id, $user_id, $rating, $comment) {
    // Database connection parameters
    $db_host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $db_name = 'database_name';

    // Validate inputs
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating value. Please select a rating between 1 and 5.";
    }

    try {
        // Create database connection
        $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if user has already reviewed this item
        $stmt = $conn->prepare("SELECT id FROM reviews WHERE review_id = :review_id AND user_id = :user_id");
        $stmt->execute([':review_id' => $review_id, ':user_id' => $user_id]);
        
        if ($stmt->rowCount() > 0) {
            return "You have already submitted a review for this item.";
        }

        // Insert new review
        $stmt = $conn->prepare("INSERT INTO reviews (review_id, user_id, rating, comment) 
                              VALUES (:review_id, :user_id, :rating, :comment)");
        
        $stmt->execute([
            ':review_id' => $review_id,
            ':user_id' => $user_id,
            ':rating' => $rating,
            ':comment' => $comment
        ]);

        // Log the review submission (optional)
        $log_message = "User {$user_id} submitted a review for item {$review_id}: Rating {$rating}, Comment: {$comment}";
        error_log($log_message);

        return "Review submitted successfully!";

    } catch(PDOException $e) {
        // Handle database errors
        error_log("Database error: " . $e->getMessage());
        return "An error occurred while submitting your review. Please try again later.";
    }
}
?>


$user_id = 123; // Current user's ID
$review_id = 456; // ID of the item being reviewed
$rating = 5; // Rating given by the user (1-5)
$comment = "This is an excellent product!"; // Review comment

$result = submit_review($review_id, $user_id, $rating, $comment);
echo $result;


<?php
// User Review Function
function submitReview($userName, $reviewText, $rating = null, $dbHost, $dbUser, $dbPass, $dbName) {
    // Establish Database Connection
    try {
        $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }
        
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("INSERT INTO reviews (user_name, review_text, rating, review_date) 
                              VALUES (?, ?, ?, CURRENT_TIMESTAMP)");
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }
        
        // Bind parameters to placeholders
        // s = string, i = integer, d = double
        $stmt->bind_param("s?s", $userName, $reviewText, $rating);
        
        // Execute the statement
        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $conn->error);
        }
        
        // Close connection
        $stmt->close();
        $conn->close();
        
        return "Review submitted successfully!";
    } catch (Exception $e) {
        // Handle any exceptions and return error message
        return "Error submitting review: " . $e->getMessage();
    }
}

// Example usage:
$userName = "John Doe";
$reviewText = "This is a great product!";
$rating = 5; // Optional, can be omitted or set to null

$dbHost = "localhost";
$dbUser = "root";
$dbPass = "";
$dbName = "my_database";

$result = submitReview($userName, $reviewText, $rating, $dbHost, $dbUser, $dbPass, $dbName);
echo $result;

// Note: Make sure your database table 'reviews' exists and has the following columns:
/*
CREATE TABLE reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL,
    review_text TEXT NOT NULL,
    rating TINYINT DEFAULT NULL CHECK (rating BETWEEN 1 AND 5),
    review_date DATETIME DEFAULT CURRENT_TIMESTAMP
);
*/
?>


<?php
include('config.php'); // Include your database connection

// Sanitize inputs
$product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
$user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
$review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

// Insert review into the database
$sql = "INSERT INTO reviews (product_id, user_name, review_text) 
        VALUES ('$product_id', '$user_name', '$review_text')";

if (mysqli_query($conn, $sql)) {
    header("Location: product.php?id=$product_id");
} else {
    echo "Error submitting review: " . mysqli_error($conn);
}

// Close the database connection
mysqli_close($conn);
?>


<?php
include('config.php'); // Include your database connection

function get_reviews($product_id, $conn) {
    $reviews = array();
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = array(
                'id' => $row['id'],
                'user_name' => $row['user_name'],
                'review_text' => $row['review_text'],
                'created_at' => date('M j, Y - g:i a', strtotime($row['created_at']))
            );
        }
    } else {
        return "No reviews available.";
    }
    
    mysqli_close($conn);
    return $reviews;
}

// Usage example:
$product_id = 1; // Replace with the actual product ID
$all_reviews = get_reviews($product_id, $conn);

if (is_array($all_reviews)) {
    foreach ($all_reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . htmlspecialchars($review['user_name']) . "</h4>";
        echo "<p>" . nl2br(htmlspecialchars($review['review_text'])) . "</p>";
        echo "<small>Posted on " . $review['created_at'] . "</small>";
        echo "</div>";
    }
} else {
    echo $all_reviews;
}
?>


<?php
function user_review($action, $db_host, $db_username, $db_password, $db_name, $review = array()) {
    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    switch ($action) {
        case 'display':
            // Get all reviews from database
            $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
            $result = $conn->query($sql);
            
            if ($result->num_rows > 0) {
                while($row = $result->fetch_assoc()) {
                    echo "<div class='review'>";
                    echo "<div class='username'>{$row['username']}</div>";
                    echo "<div class='rating'>";
                    // Display stars based on rating
                    $stars = str_repeat("★", $row['rating']);
                    $remaining = 5 - $row['rating'];
                    $stars .= str_repeat("☆", $remaining);
                    echo $stars;
                    echo "</div>";
                    echo "<div class='comment'>{$row['comment']}</div>";
                    echo "<div class='date'>{$row['review_date']}</div>";
                    echo "</div>";
                }
            } else {
                echo "No reviews available.";
            }
            break;
            
        case 'add':
            // Sanitize input
            $username = mysqli_real_escape_string($conn, $review['username']);
            $comment = mysqli_real_escape_string($conn, $review['comment']);
            $rating = intval($review['rating']);
            
            if (!empty($username) && !empty($comment) && $rating >= 1 && $rating <=5) {
                // Insert into database
                $sql = "INSERT INTO reviews (username, comment, rating, review_date)
                        VALUES ('$username', '$comment', '$rating', NOW())";
                
                if ($conn->query($sql)) {
                    echo "Review submitted successfully!";
                } else {
                    echo "Error: " . $sql . "<br>" . $conn->error;
                }
            } else {
                echo "Please fill in all fields correctly.";
            }
            break;
            
        default:
            echo "Invalid action specified.";
    }
    
    // Close database connection
    $conn->close();
}

// Example usage:

// Display reviews
user_review('display', 'localhost', 'root', '', 'reviews_db');

// Add review
$review = array(
    'username' => 'JohnDoe',
    'comment' => 'Great product!',
    'rating' => 5
);
user_review('add', 'localhost', 'root', '', 'reviews_db', $review);

?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submitReview($username, $email, $reviewText, $rating, $conn) {
    // Sanitize inputs
    $username = htmlspecialchars(trim($username));
    $email = htmlspecialchars(trim($email));
    $reviewText = htmlspecialchars(trim($reviewText));
    $rating = (int)$rating;

    // Check if rating is valid
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please select a rating between 1 and 5.";
    }

    // Get current date
    $date = date('Y-m-d H:i:s');

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (username, email, review_text, rating, review_date) VALUES (?, ?, ?, ?, ?)");
    if ($stmt === false) {
        return "Error preparing statement: " . $conn->error;
    }

    // Bind parameters
    $stmt->bind_param("ssisi", $username, $email, $reviewText, $rating, $date);

    // Execute the query
    if ($stmt->execute()) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $stmt->error;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $reviewText = $_POST['review_text'];
    $rating = $_POST['rating'];

    // Call submitReview function
    $result = submitReview($username, $email, $reviewText, $rating, $conn);
    
    echo $result;
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!isset($productId, $userId, $rating, $comment)) {
        return false;
    }
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    if (strlen($comment) > 500) {
        return false;
    }
    
    // Sanitize inputs
    $productId = intval($productId);
    $userId = intval($userId);
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment), ENT_QUOTES, 'UTF-8');
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment, created_at) 
                              VALUES (:productId, :userId, :rating, :comment, NOW())");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        $result = $stmt->execute();
        
        if ($result) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to get reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.id, u.username, r.rating, r.comment, r.created_at 
                              FROM reviews r 
                              JOIN users u ON r.user_id = u.id 
                              WHERE r.product_id = :productId 
                              ORDER BY r.created_at DESC");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die("Error fetching reviews: " . $e->getMessage());
    }
}

// Function to delete a review
function deleteReview($reviewId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("DELETE FROM reviews WHERE id = :reviewId");
        $stmt->bindParam(':reviewId', $reviewId);
        $result = $stmt->execute();
        
        return $result ? true : false;
    } catch(PDOException $e) {
        die("Error deleting review: " . $e->getMessage());
    }
}

// Function to calculate average rating
function getAverageRating($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT AVG(rating) as average 
                              FROM reviews 
                              WHERE product_id = :productId");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        return round($result['average'], 1); // Round to one decimal place
    } catch(PDOException $e) {
        die("Error calculating average rating: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $userId = $_SESSION['user_id']; // Assuming user is logged in
    $rating = intval($_POST['rating']);
    $comment = $_POST['comment'];
    
    if (submitReview($productId, $userId, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}

// Display reviews
$reviews = getReviews(1); // Get reviews for product ID 1

foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h4>By: {$review['username']}</h4>";
    echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
    echo "<p>{$review['comment']}</p>";
    echo "<small>Posted on: {$review['created_at']}</small>";
    echo "</div>";
}

// Display average rating
echo "Average Rating: " . getAverageRating(1) . "/5";
?>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'reviews';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Display reviews function
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews for the product
    $sql = "SELECT r.review_id, r.user_id, r.rating, r.comment, r.date_created, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = ? 
            ORDER BY r.date_created DESC";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    
    $result = mysqli_stmt_get_result($stmt);
    
    // Calculate average rating
    $average_rating_sql = "SELECT AVG(rating) as avg_rating 
                           FROM reviews 
                           WHERE product_id = ?";
                           
    $avg_stmt = mysqli_prepare($conn, $average_rating_sql);
    mysqli_stmt_bind_param($avg_stmt, "i", $product_id);
    mysqli_stmt_execute($avg_stmt);
    
    $avg_result = mysqli_stmt_get_result($avg_stmt);
    $avg_row = mysqli_fetch_assoc($avg_result);
    $average_rating = number_format((float)$avg_row['avg_rating'], 1, '.', '');
    
    // Display average rating
    echo "<div class='average-rating'>";
    echo "Average Rating: <strong>" . $average_rating . "/5</strong>";
    echo "</div>";
    
    // Display individual reviews
    while ($row = mysqli_fetch_assoc($result)) {
        $rating = $row['rating'];
        $comment = $row['comment'];
        $username = $row['username'];
        $date = date('F j, Y', strtotime($row['date_created']));
        
        echo "<div class='review'>";
        echo "<h3>Rating: " . str_repeat("★", $rating) . "</h3>";
        echo "<p><strong>" . $username . "</strong> - " . $date . "</p>";
        echo "<p>" . $comment . "</p>";
        echo "</div>";
    }
}

// Submit review function
function submit_review($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }
    
    if (empty($comment)) {
        return "Please provide a comment for your review.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment) 
            VALUES (?, ?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iisi", $product_id, $user_id, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}
?>


<?php
$product_id = 1; // Replace with actual product ID

display_reviews($product_id);
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($product_id, $user_name, $user_email, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $user_email = mysqli_real_escape_string($conn, htmlspecialchars($user_email));
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Check if all required fields are filled
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {
        return "Please fill in all required fields.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment, submission_date)
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$comment', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        
        while ($row = mysqli_fetch_assoc($result)) {
            $rating = $row['rating'];
            
            // Display review details
            echo "<div class='review'>";
                echo "<h3>" . $row['user_name'] . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $rating) . str_repeat("☆", 5 - $rating) . "</p>";
                echo "<p>" . $row['comment'] . "</p>";
                echo "<small>Submitted on: " . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "<p>No reviews available for this product.</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_system";

// Create database connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $rating = intval($_POST['rating']);
    $review = sanitizeInput($_POST['review']);

    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, review_text) 
            VALUES (?, ?, ?, ?)";
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssis", $name, $email, $rating, $review);
        $stmt->execute();
        echo "Thank you for submitting your review!";
    } catch (mysqli_sql_exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Query database for reviews
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Date: " . htmlspecialchars($row['date']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}

// Example usage
if (isset($_GET['action']) && $_GET['action'] == 'display') {
    displayReviews();
}
?>


<?php
// Display all reviews
displayReviews();
?>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // SQL query to fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to leave a review!</p>";
    }
}

// Function to submit new review
function submitReview($user_name, $review_text) {
    global $conn;
    
    // Sanitize input data
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    
    // Get current date and time
    $date = date("Y-m-d H:i:s");
    
    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, review_date) VALUES ('$user_name', '$review_text', '$date')";
    
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success'>";
        echo "Thank you for your review!";
        echo "</div>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Process submitted review
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        $user_name = $_POST['user_name'];
        $review_text = $_POST['review_text'];
        
        // Check if fields are not empty
        if (!empty($user_name) && !empty($review_text)) {
            submitReview($user_name, $review_text);
        } else {
            echo "<div class='error'>";
            echo "Please fill in all required fields!";
            echo "</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reviews System</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 15px;
            background-color: #f9f9f9;
        }
        .review h3 {
            color: #333;
            font-size: 18px;
            margin-top: 0;
        }
        .review p {
            line-height: 1.6;
            margin-bottom: 10px;
        }
        .review small {
            color: #666;
            font-size: 12px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input, textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .success, .error {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid;
            border-radius: 4px;
        }
        .success {
            background-color: #dff0d8;
            color: #3c763d;
            border-color: #d6e9c6;
        }
        .error {
            background-color: #f2dede;
            color: #a94442;
            border-color: #ebccd1;
        }
    </style>
</head>
<body>
    <h2>Customer Reviews</h2>

    <?php displayReviews(); ?>

    <h3>Leave a Review</h3>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <div class="form-group">
            <label for="user_name">Name:</label>
            <input type="text" id="user_name" name="user_name" required>
        </div>
        
        <div class="form-group">
            <label for="review_text">Review:</label>
            <textarea id="review_text" name="review_text" rows="5" required></textarea>
        </div>
        
        <button type="submit" name="submit_review">Submit Review</button>
    </form>

    <?php
    // Close database connection
    mysqli_close($conn);
    ?>
</body>
</html>


<?php
function displayUserReviews() {
    // Database configuration
    $host = 'localhost';
    $db_user = 'root';
    $db_password = '';
    $db_name = 'reviews';

    // Connect to database
    $connection = new mysqli($host, $db_user, $db_password, $db_name);

    // Check connection
    if ($connection->connect_error) {
        die("Connection failed: " . $connection->connect_error);
    }

    // Fetch all reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY review_id DESC";
    $result = $connection->query($sql);

    // Display existing reviews
    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>By " . $row['author_name'] . "</h3>";
            echo "<p>" . $row['content'] . "</p>";
            echo "<small>Posted on: " . $row['date_posted'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<div class='no-reviews'>No reviews yet!</div>";
    }

    // Close the database connection
    $connection->close();

    // Display review submission form
    displayReviewForm();
}

function displayReviewForm() {
    // Display a simple HTML form for submitting reviews
    ?>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST" class="review-form">
        <h2>Leave a Review</h2>
        <input type="text" name="author_name" placeholder="Your Name" required><br><br>
        <textarea name="content" placeholder="Write your review here..." rows="5" required></textarea><br><br>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>

    <style>
        /* Basic CSS styling */
        .reviews {
            margin: 20px;
        }

        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }

        .no-reviews {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 20px;
        }

        .review-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .review-form h2 {
            color: #333;
            margin-bottom: 15px;
        }

        .review-form input,
        .review-form textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
    <?php
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['submit_review'])) {
    // Database configuration
    $host = 'localhost';
    $db_user = 'root';
    $db_password = '';
    $db_name = 'reviews';

    try {
        // Connect to database
        $connection = new mysqli($host, $db_user, $db_password, $db_name);

        // Check connection
        if ($connection->connect_error) {
            throw new Exception("Connection failed: " . $connection->connect_error);
        }

        // Prepare and bind the insert statement
        $stmt = $connection->prepare("INSERT INTO reviews (author_name, content, date_posted) VALUES (?, ?, NOW())");
        $stmt->bind_param("ss", $_POST['author_name'], $_POST['content']);

        if ($stmt->execute()) {
            // Redirect back to the page after submission
            header("Location: " . htmlspecialchars($_SERVER['PHP_SELF']));
            exit();
        } else {
            echo "Error submitting review: " . $stmt->error;
        }

        // Close the statement and connection
        $stmt->close();
        $connection->close();

    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Call the display function
displayUserReviews();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = sanitize($_POST['name']);
    $email = sanitize($_POST['email']);
    $rating = (int)$_POST['rating'];
    $comment = sanitize($_POST['comment']);

    // Validate input
    if ($name == '' || $email == '' || $rating < 1 || $rating > 5 || $comment == '') {
        die("Please fill in all fields correctly.");
    }

    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->execute([$name, $email, $rating, $comment]);
        header("Location: $_SERVER[PHP_SELF]");
        exit();
    } catch(PDOException $e) {
        die("Error submitting review: " . $e->getMessage());
    }
}

// Function to display reviews
function display_reviews($conn) {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY id DESC");
    while ($row = $stmt->fetch()) {
        $rating_stars = str_repeat('★', $row['rating']) . str_repeat('☆', 5 - $row['rating']);
        $time_ago = date_diff(date_create($row['created_at']), new DateTime())->format("%d days ago");
        
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
        echo "<p>Rating: " . $rating_stars . "</p>";
        echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
        echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
        echo "<small>" . $time_ago . "</small>";
        echo "</div>";
    }
}

// Create reviews table if not exists
try {
    $conn->exec("CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        email VARCHAR(100) NOT NULL,
        rating INT NOT NULL,
        comment TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )");
} catch(PDOException $e) {
    die("Error creating table: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .review-form { margin-bottom: 30px; }
        .rating-stars { display: flex; gap: 5px; }
        .star { cursor: pointer; color: #ff4081; }
        .review { border: 1px solid #ddd; padding: 15px; margin-bottom: 20px; }
    </style>
</head>
<body>

<h1>Submit a Review</h1>
<div class="review-form">
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="rating-stars">
            <label>Rating:</label>
            <?php for ($i = 5; $i >= 1; $i--): ?>
                <input type="radio" name="rating" value="<?php echo $i; ?>" id="star<?php echo $i; ?>">
                <label class="star" for="star<?php echo $i; ?>">★</label>
            <?php endfor; ?>
        </div>

        <div>
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>
</div>

<h2>Reviews</h2>
<?php
if ($conn->query("SELECT COUNT(*) FROM reviews")->fetchColumn() == 0) {
    echo "<p>No reviews yet. Be the first to review!</p>";
} else {
    display_reviews($conn);
}
?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$user = 'root'; // Change to your database user
$password = ''; // Change to your database password
$dbname = 'reviews_db'; // Change to your database name

try {
    $conn = new mysqli($host, $user, $password, $dbname);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize and validate inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));
    $product_id = intval($_GET['product_id']); // Ensure product_id is passed safely

    if (empty($name) || empty($email) || empty($comment)) {
        throw new Exception("All fields are required");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception("Invalid email format");
    }

    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5 stars");
    }

    // Prepare and execute the SQL statement
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, email, rating, comment) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        // Redirect to product page or review list with a success message
        header("Location: product.php?id=$product_id&msg=Review+submitted+successfully!");
        exit();
    } else {
        throw new Exception("Error submitting review");
    }

} catch (Exception $e) {
    // Handle exceptions and display error messages
    $error_message = $e->getMessage();
    header("Location: submit_review.php?error=" . urlencode($error_message));
    exit();
}

$conn->close();
?>


<?php
function display_reviews($product_id) {
    $host = 'localhost';
    $user = 'root'; // Change to your database user
    $password = ''; // Change to your database password
    $dbname = 'reviews_db'; // Change to your database name

    try {
        $conn = new mysqli($host, $user, $password, $dbname);
        
        if ($conn->connect_error) {
            throw new Exception("Connection failed");
        }

        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            echo "<p>No reviews yet. Be the first to review this product!</p>";
            return;
        }

        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "<small>Posted on: " . $row['timestamp'] . "</small>";
            echo "</div>";
        }

    } catch (Exception $e) {
        echo "<p>Error displaying reviews: " . $e->getMessage() . "</p>";
    } finally {
        $conn->close();
    }
}
?>


<?php
// Initialize an array to store reviews if it doesn't exist yet
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Function to handle review submission and display
function userReview() {
    // Check if the form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Basic validation
        if ($username !== '' && $rating >= 1 && $rating <= 5 && $comment !== '') {
            global $review_id; // Use a global variable to track review IDs

            // Create an array for the new review
            $new_review = array(
                'id' => $review_id,
                'username' => $username,
                'rating' => $rating,
                'comment' => $comment,
                'date' => date('Y-m-d H:i:s')
            );

            // Add the new review to the session
            $_SESSION['reviews'][$review_id] = $new_review;
            $review_id++; // Increment the review ID for next submission

            // Redirect to avoid form resubmission on page refresh
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            echo "<p class='error'>Please fill in all fields correctly.</p>";
        }
    }

    // Calculate and display the average rating
    $average_rating = 0;
    $total_ratings = count($_SESSION['reviews']);
    
    if ($total_ratings > 0) {
        $sum_ratings = array_sum(array_column($_SESSION['reviews'], 'rating'));
        $average_rating = $sum_ratings / $total_ratings;
    }

    // Display the average rating
    echo "<h3>Overall Rating: " . number_format($average_rating, 1) . "/5</h3>";

    // Display all reviews
    if (empty($_SESSION['reviews'])) {
        echo "<p>No reviews yet.</p>";
    } else {
        echo "<div class='reviews'>";
        foreach ($_SESSION['reviews'] as $review) {
            echo "<div class='review'>";
            echo "<strong>Username:</strong> " . $review['username'] . "<br>";
            echo "<strong>Rating:</strong> " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "<br>";
            echo "<strong>Comment:</strong> " . $review['comment'] . "<br>";
            echo "<strong>Date:</strong> " . $review['date'] . "<br>";
            echo "</div>";
        }
        echo "</div>";
    }
}

// Initialize review_id if not set
if (!isset($review_id)) {
    $review_id = 1;
}

// Call the function when needed
userReview();
?>


session_start();


<?php
// Function to handle and display user reviews
function user_reviews() {
    $reviews_file = 'reviews.txt';
    
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize inputs
        $username = htmlspecialchars($_POST['username']);
        $review = htmlspecialchars($_POST['review']);
        
        // Add timestamp
        $timestamp = date('j F Y, H:i:s');
        
        // Store the review in the file
        $review_data = "$username|$review|$timestamp
";
        file_put_contents($reviews_file, $review_data, FILE_APPEND);
        
        // Redirect back to the page to prevent form resubmission
        header("Location: {$_SERVER['PHP_SELF']}");
        exit();
    }
    
    // Display existing reviews
    if (file_exists($reviews_file)) {
        $reviews = file_get_contents($reviews_file);
        $reviews = explode("
", $reviews);
        
        echo "<div class='reviews'>";
        foreach ($reviews as $review) {
            $review_parts = explode("|", $review);
            if (count($review_parts) == 3) {
                list($username, $review_text, $timestamp) = $review_parts;
                echo "<div class='review'>";
                echo "<h4>$username</h4>";
                echo "<p>$review_text</p>";
                echo "<small>Posted on: $timestamp</small>";
                echo "</div>";
            }
        }
        echo "</div>";
    } else {
        // If no reviews exist, show a message
        echo "<p>No reviews yet. Be the first to leave a review!</p>";
    }
    
    // Display review form
    echo <<<_FORM
    <form action="{$_SERVER['PHP_SELF']}" method="post">
        <input type="text" name="username" placeholder="Your Name" required>
        <textarea name="review" placeholder="Write your review here..." required></textarea>
        <button type="submit">Submit Review</button>
    </form>
_FORM;
}
?>


<?php require_once('review.php'); ?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Handle review submission
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $productId = 1; // Example product ID
        $userName = $_POST['user_name'];
        $reviewText = $_POST['review_text'];
        $rating = $_POST['rating'];

        // Validate input
        if (empty($userName) || empty($reviewText) || !isset($rating)) {
            die('Please fill in all fields');
        }

        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, review_text, rating, timestamp) 
                              VALUES (:productId, :userName, :reviewText, :rating, NOW())");
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':userName', $userName);
        $stmt->bindParam(':reviewText', $reviewText);
        $stmt->bindParam(':rating', $rating);
        $stmt->execute();

        // Redirect to prevent form resubmission
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }

} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Get reviews from database
$stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = 1 ORDER BY timestamp DESC");
$stmt->execute();
$reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .rating {
            display: inline-block;
            width: 100px;
        }
        .star {
            color: #ffd700;
        }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<form method="post" action="">
    <div>
        <label for="user_name">Your Name:</label><br>
        <input type="text" id="user_name" name="user_name" required>
    </div>
    <div>
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" cols="50" required></textarea>
    </div>
    <div>
        <label>Rating:</label><br>
        <?php for ($i = 1; $i <= 5; $i++) { ?>
            <input type="radio" name="rating" value="<?php echo $i; ?>" id="star<?php echo $i; ?>">
            <label class="star" for="star<?php echo $i; ?>">★</label>
        <?php } ?>
    </div>
    <button type="submit">Submit Review</button>
</form>

<h2>Customer Reviews</h2>
<div id="reviews">
    <?php foreach ($reviews as $review) { ?>
        <div class="review-item">
            <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>
            <div class="rating">
                <?php 
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo '<span class="star">★</span>';
                }
                for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                    echo '<span>☆</span>';
                }
                ?>
            </div>
            <p><?php echo htmlspecialchars($review['review_text']); ?></p>
            <small><?php echo date('F j, Y g:i a', strtotime($review['timestamp'])); ?></small>
        </div>
    <?php } ?>

    <!-- Display average rating -->
    <div class="average-rating">
        <?php 
        $avgRating = $conn->query("SELECT AVG(rating) as avg FROM reviews WHERE product_id = 1");
        $row = $avgRating->fetch(PDO::FETCH_ASSOC);
        $average = round($row['avg'], 1);
        $percentage = ($average / 5) * 100;
        ?>
        <h3>Average Rating: <?php echo $average; ?>/5 (<?php echo $percentage; ?>%)</h3>
    </div>
</div>

</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Function to add a new review
function addReview($conn, $userId, $productId, $rating, $title, $comment) {
    // Sanitize inputs
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $title = mysqli_real_escape_string($conn, $title);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if inputs are not empty
    if ($userId == "" || $productId == "" || $rating == "" || $title == "" || $comment == "") {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, title, comment) VALUES (?, ?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iiiss", $userId, $productId, $rating, $title, $comment);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getReviews($conn, $productId) {
    // Sanitize input
    $productId = mysqli_real_escape_string($conn, $productId);

    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Fetch all reviews
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = $row;
    }

    return $reviews;
}

// Function to display reviews
function displayReviews($conn, $productId) {
    $reviews = getReviews($conn, $productId);

    if (empty($reviews)) {
        echo "<p>No reviews available yet.</p>";
        return;
    }

    foreach ($reviews as $review) {
        // Get user info (assuming you have a users table)
        $userId = $review['user_id'];
        $sql_user = "SELECT username FROM users WHERE id = ?";
        $stmt_user = mysqli_prepare($conn, $sql_user);
        mysqli_stmt_bind_param($stmt_user, "i", $userId);
        mysqli_stmt_execute($stmt_user);
        $result_user = mysqli_stmt_get_result($stmt_user);
        $user_row = mysqli_fetch_assoc($result_user);
        $username = $user_row['username'];

        // Display review
        echo "<div class='review'>";
        echo "<h3>Reviewer: " . htmlspecialchars($username) . "</h3>";
        echo "<p>Date: " . date('F j, Y', strtotime($review['review_date'])) . "</p>";
        echo "<p>Rating: " . getStars($review['rating']) . "</p>";
        echo "<h4>" . htmlspecialchars($review['title']) . "</h4>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

// Function to calculate average rating
function getAverageRating($conn, $productId) {
    // Sanitize input
    $productId = mysqli_real_escape_string($conn, $productId);

    // Get total ratings and count
    $sql = "SELECT SUM(rating) AS total_rating, COUNT(*) AS review_count FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);

    if ($row['review_count'] == 0) {
        return 0;
    }

    $average = $row['total_rating'] / $row['review_count'];
    return round($average, 1);
}

// Function to display stars based on rating
function getStars($rating) {
    $stars = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $stars .= "★";
        } else {
            $stars .= "☆";
        }
    }
    return $stars;
}

// Example usage:
// Add a new review
if (isset($_POST['submit_review'])) {
    $userId = $_SESSION['user_id'];
    $productId = $_GET['product_id'];
    $rating = intval($_POST['rating']);
    $title = $_POST['title'];
    $comment = $_POST['comment'];

    if (addReview($conn, $userId, $productId, $rating, $title, $comment)) {
        echo "<p>Thank you for submitting your review!</p>";
    } else {
        echo "<p>Error submitting review. Please try again.</p>";
    }
}

// Display reviews and average rating
echo "<h2>Product Reviews</h2>";
echo "<p>Rating: " . getStars(getAverageRating($conn, $productId)) . "</p>";
displayReviews($conn, $productId);
?>


<?php
// Connect to database or define variables as needed

// Function to display user reviews
function display_reviews() {
    // Example: Get reviews from database
    $reviews = array(
        array('id' => 1, 'user_name' => 'John Doe', 'review_text' => 'Great product!', 'rating' => 5, 'date_posted' => '2023-09-20'),
        array('id' => 2, 'user_name' => 'Jane Smith', 'review_text' => 'Good service', 'rating' => 4, 'date_posted' => '2023-09-19'),
    );
    
    // Display reviews
    echo '<div class="reviews-container">';
    foreach ($reviews as $review) {
        echo '<div class="review">';
            echo '<h3>' . htmlspecialchars($review['user_name']) . '</h3>';
            echo '<p>Rating: ' . str_repeat('★', $review['rating']) . '</p>';
            echo '<p>' . nl2br(htmlspecialchars($review['review_text'])) . '</p>';
            echo '<small>Posted on: ' . date('F j, Y', strtotime($review['date_posted'])) . '</small>';
        echo '</div>';
    }
    echo '</div>';
}

// Function to handle new reviews
function submit_review() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = htmlspecialchars(trim($_POST['review_name']));
        $review_text = htmlspecialchars(trim($_POST['review_text']));
        $rating = intval($_POST['review_rating']);
        
        // Validate input
        if ($name == "" || $review_text == "") {
            echo "<div class='error'>Please fill in all required fields!</div>";
            return;
        }
        
        if ($rating < 1 || $rating > 5) {
            echo "<div class='error'>Please select a valid rating (1-5 stars)!</div>";
            return;
        }
        
        // Save review to database or file
        // Example: Save to text file
        $filename = 'reviews.txt';
        $content = $name . '|' . $review_text . '|' . $rating . '|' . date('Y-m-d H:i:s') . "
";
        
        if (file_exists($filename)) {
            $handle = fopen($filename, 'a');
        } else {
            $handle = fopen($filename, 'w');
        }
        
        if ($handle) {
            fwrite($handle, $content);
            fclose($handle);
            
            echo "<div class='success'>Thank you for your review!</div>";
        } else {
            echo "<div class='error'>Error saving your review. Please try again later.</div>";
        }
    }
}

// Main code
if (isset($_POST['submit_review'])) {
    submit_review();
}

display_reviews();

?>

<!-- HTML form for submitting reviews -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="review_name" placeholder="Your Name" required>
    <textarea name="review_text" placeholder="Write your review here..." required></textarea>
    <select name="review_rating">
        <option value="">Rating (1-5 stars)</option>
        <option value="1">★</option>
        <option value="2">★★</option>
        <option value="3">★★★</option>
        <option value="4">★★★★</option>
        <option value="5">★★★★★</option>
    </select>
    <button type="submit" name="submit_review">Submit Review</button>
</form>

<!-- Add some CSS styling -->
<style>
.reviews-container {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
}

.review {
    border: 1px solid #ddd;
    margin-bottom: 20px;
    padding: 15px;
}

.error, .success {
    padding: 10px;
    margin: 10px 0;
    border-radius: 4px;
}

.error {
    background-color: #ffebee;
    color: #d32f2f;
}

.success {
    background-color: #a5d6a7;
    color: #1b5e20;
}
</style>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = htmlspecialchars(stripslashes(trim($comment)));
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, created_at) VALUES (?, ?, ?, ?, NOW())");
    $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to fetch reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $stmt = $conn->prepare("SELECT r.*, u.username FROM reviews r INNER JOIN users u ON r.user_id = u.id WHERE r.product_id = ? ORDER BY r.created_at DESC");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
}

// Function to display reviews
function display_reviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews yet.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        // Display user information and review content
        echo "<div class='review'>";
        echo "<div class='user-info'>";
        echo "<span class='username'>" . htmlspecialchars($review['username']) . "</span>";
        echo "<div class='rating'>";
        
        // Display stars for rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "</div>";
        echo "<p class='comment'>" . htmlspecialchars($review['comment']) . "</p>";
        echo "</div>";
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    $stmt = $conn->prepare("SELECT AVG(rating) as average FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result()->fetch_assoc();
    return round($result['average'], 1);
}

// Function to handle review voting
function vote_review($review_id, $vote_type) {
    global $conn;
    
    // Update votes based on type (upvote/downvote)
    if ($vote_type == 'up') {
        $stmt = $conn->prepare("UPDATE reviews SET upvotes = upvotes + 1 WHERE id = ?");
    } else {
        $stmt = $conn->prepare("UPDATE reviews SET downvotes = downvotes + 1 WHERE id = ?");
    }
    
    $stmt->bind_param("i", $review_id);
    return $stmt->execute();
}

// Example usage:
$product_id = 1; // Replace with actual product ID
$reviews = get_reviews($product_id);

echo "<h2>Product Reviews</h2>";
echo "<p>Rating: " . get_average_rating($product_id) . "/5</p>";

if (!empty($_POST['submit_review'])) {
    $user_id = 1; // Replace with actual user ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (add_review($user_id, $product_id, $rating, $comment)) {
        echo "<div class='success'>Review submitted successfully!</div>";
    } else {
        echo "<div class='error'>Error submitting review.</div>";
    }
}

// Display review form
echo "<form method='post'>";
echo "<input type='number' name='rating' min='1' max='5' required placeholder='Rating (1-5)'>";
echo "<textarea name='comment' required placeholder='Write your review...'></textarea>";
echo "<button type='submit' name='submit_review'>Submit Review</button>";
echo "</form>";

display_reviews($reviews);

// Close database connection
$conn->close();
?>


<?php
function addReview($contentId, $userId, $rating) {
    try {
        // Database configuration
        $host = 'localhost';
        $db   = 'your_database_name';
        $user = 'your_username';
        $pass = 'your_password';

        // Create a new PDO instance
        $pdo = new PDO("mysql:host=$host;dbname=$db", $user, $pass);
        
        // Check if user already reviewed this content
        $stmt = $pdo->prepare('SELECT review_id FROM reviews WHERE content_id = ? AND user_id = ?');
        $stmt->execute([$contentId, $userId]);
        if ($stmt->rowCount() > 0) {
            return ['error' => 'You have already reviewed this content.'];
        }
        
        // Insert new review
        $stmt = $pdo->prepare('INSERT INTO reviews (content_id, user_id, rating) VALUES (?, ?, ?)');
        $result = $stmt->execute([$contentId, $userId, $rating]);
        
        if (!$result) {
            return ['error' => 'Error adding review. Please try again.'];
        }
        
        // Calculate average rating
        $stmt = $pdo->prepare('SELECT AVG(rating) as avg_rating FROM reviews WHERE content_id = ?');
        $stmt->execute([$contentId]);
        $averageRating = $stmt->fetch()['avg_rating'];
        
        return ['success' => true, 'average_rating' => round($averageRating, 1)];
        
    } catch(PDOException $e) {
        return ['error' => 'Error: ' . $e->getMessage()];
    }
}

// Example usage:
$contentId = 5;
$userId = 3;
$rating = 4;

$result = addReview($contentId, $userId, $rating);

if (isset($result['success'])) {
    echo "Review added successfully! Average rating: " . $result['average_rating'];
} else {
    echo $result['error'];
}
?>


<?php
// Database connection
function connectDB() {
    $host = "localhost";
    $user = "username";
    $pass = "password";
    $dbname = "reviews_db";

    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $pass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $conn;
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// Submit review
function submitReview($reviewText, $rating) {
    try {
        $db = connectDB();
        
        // Sanitize input
        $reviewText = htmlspecialchars(trim($reviewText));
        $rating = intval($rating);
        
        // Check if rating is valid
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Invalid rating. Please choose a rating between 1 and 5.");
        }
        
        // Insert review into database
        $stmt = $db->prepare("INSERT INTO reviews (review_text, rating) VALUES (?, ?)");
        $stmt->execute([$reviewText, $rating]);
        
        return true;
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Display all reviews
function displayReviews() {
    try {
        $db = connectDB();
        
        // Get all reviews from database
        $stmt = $db->query("SELECT id, review_text, rating, date Posted FROM reviews ORDER BY posted DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<p><strong>Rating:</strong> " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p><strong>Review:</strong> " . htmlspecialchars_decode($review['review_text']) . "</p>";
                echo "<p><em>Posted on: " . date('jS M Y', strtotime($review['posted'])) . "</em></p>";
                echo "</div>";
            }
        } else {
            echo "No reviews found.";
        }
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Calculate average rating
function calculateAverageRating() {
    try {
        $db = connectDB();
        
        // Get total ratings and count
        $stmt = $db->query("SELECT SUM(rating) as total, COUNT(*) as count FROM reviews");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($result['count'] > 0) {
            $average = $result['total'] / $result['count'];
            return round($average, 1); // Round to one decimal place
        } else {
            return 0;
        }
    } catch(Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit_review'])) {
        // Handle review submission
        $reviewText = $_POST['review_text'];
        $rating = isset($_POST['rating']) ? $_POST['rating'] : 0;
        
        try {
            submitReview($reviewText, $rating);
            header("Location: " . $_SERVER["PHP_SELF"]); // Refresh to show new review
            exit();
        } catch(Exception $e) {
            echo "<div class='error'>" . $e->getMessage() . "</div>";
        }
    }
}

// Display average rating and reviews
echo "<h3>Product Reviews</h3>";
echo "<p>Average Rating: " . calculateAverageRating() . "/5</p>";

displayReviews();
?>

<!-- Review Form -->
<form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    <textarea name="review_text" placeholder="Write your review here..." required></textarea>
    <label>Rating:</label><br>
    <input type="radio" name="rating" value="5"> 5 Stars<br>
    <input type="radio" name="rating" value="4"> 4 Stars<br>
    <input type="radio" name="rating" value="3"> 3 Stars<br>
    <input type="radio" name="rating" value="2"> 2 Stars<br>
    <input type="radio" name="rating" value="1"> 1 Star<br>
    <button type="submit" name="submit_review">Submit Review</button>
</form>

<!-- CSS Styling -->
<style>
.review {
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
}
.error {
    color: red;
    margin-bottom: 10px;
}
</style>


<?php
function submit_review($review_text, $user_id, $product_id, $rating = null) {
    // Database connection details
    $db_host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $db_name = "database_name";

    // Connect to database
    $mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }

    // Sanitize input data (prevent SQL injection)
    $review_text = htmlspecialchars($review_text);
    $user_id = intval($user_id);
    $product_id = intval($product_id);
    $rating = ($rating !== null) ? intval($rating) : null;

    // Prepare and execute the SQL query
    if ($rating !== null) {
        $sql = "INSERT INTO reviews (review_text, user_id, product_id, rating, created_at)
                VALUES (?, ?, ?, ?, NOW())";
    } else {
        $sql = "INSERT INTO reviews (review_text, user_id, product_id, created_at)
                VALUES (?, ?, ?, NOW())";
    }

    // Use prepared statement to prevent SQL injection
    if ($rating !== null) {
        $stmt = $mysqli->prepare($sql);
        $stmt->bind_param("siii", $review_text, $user_id, $product_id, $rating);
    } else {
        $stmt = $mysqli->prepare($sql);
        $stmt->bind_param("siis", $review_text, $user_id, $product_id);
    }

    if ($stmt->execute()) {
        echo "Review submitted successfully!";
        return true;
    } else {
        echo "Error submitting review: " . $stmt->error;
        return false;
    }

    // Close database connection
    $mysqli->close();
}

// Example usage:
// submit_review("This is a great product!", 1, 5, 5);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'database_name';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY submission_date DESC";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h4>Written by: " . htmlspecialchars($row['user_name']) . "</h4>";
        echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
        echo "<div class='rating'>";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "</div>";
    }
}

// Function to submit a new review
function submit_review($product_id, $user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $user_name));
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $review_text));
    $rating = (int)$rating;
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, review_text, rating, submission_date) 
            VALUES (?, ?, ?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "isii", $product_id, $user_name, $review_text, $rating);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return round($row['average'], 1);
    } else {
        return 0;
    }
}

// Function to count total reviews
function get_review_count($product_id) {
    global $conn;
    
    $sql = "SELECT COUNT(*) as count FROM reviews WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        return $row['count'];
    } else {
        return 0;
    }
}

// Example usage:
$product_id = 1; // Replace with actual product ID

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];
    
    if (submit_review($product_id, $user_name, $review_text, $rating)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error submitting review. Please try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .star { color: #gold; }
        .review { border: 1px solid #ddd; padding: 10px; margin: 5px 0; }
        .rating { display: inline-block; margin-top: 5px; }
    </style>
</head>
<body>

<h2>Product Reviews</h2>

<!-- Review Submission Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
    <div>
        <label for="user_name">Your Name:</label><br>
        <input type="text" id="user_name" name="user_name" required>
    </div>
    
    <div>
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="4" cols="50" required></textarea>
    </div>
    
    <div>
        <label>Rating:</label><br>
        <input type="radio" name="rating" value="5"> ★★★★★<br>
        <input type="radio" name="rating" value="4"> ★★★★☆<br>
        <input type="radio" name="rating" value="3"> ★★★☆☆<br>
        <input type="radio" name="rating" value="2"> ★★☆☆☆<br>
        <input type="radio" name="rating" value="1"> ★☆☆☆☆<br>
    </div>
    
    <button type="submit">Submit Review</button>
</form>

<!-- Display Reviews -->
<h3>Customer Reviews</h3>
<?php
display_reviews($product_id);
?>

<!-- Display Average Rating and Review Count -->
<div style="margin-top: 20px;">
    <?php
    $average_rating = get_average_rating($product_id);
    $review_count = get_review_count($product_id);
    
    echo "<p>Average Rating: $average_rating/5 ($review_count reviews)</p>";
    ?>
</div>

</body>
</html>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($name, $email, $rating, $review_text, $conn) {
    // Sanitize input
    $name = mysqli_real_escape_string($conn, htmlspecialchars(trim($name)));
    $email = mysqli_real_escape_string($conn, htmlspecialchars(trim($email)));
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars(trim($review_text)));

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, review_text, timestamp) 
            VALUES ('$name', '$email', '$rating', '$review_text', NOW())";

    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["name"]) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row["rating"]) . "</p>";
            echo "<p>Email: " . htmlspecialchars($row["email"]) . "</p>";
            echo "<p>Review: " . htmlspecialchars($row["review_text"]) . "</p>";
            echo "<small>Posted on: " . date('d/m/Y H:i', $row["timestamp"]) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews found.</p>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user reviews
function handleReview($productId, $userId, $rating, $comment) {
    global $conn;

    // Sanitize inputs
    $productId = mysqli_real_escape_string($conn, $productId);
    $userId = mysqli_real_escape_string($conn, $userId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if user has already reviewed this product
    $checkQuery = "SELECT id FROM reviews WHERE product_id = '$productId' AND user_id = '$userId'";
    $result = mysqli_query($conn, $checkQuery);

    if (mysqli_num_rows($result) > 0) {
        // User already reviewed - update the review
        $updateQuery = "UPDATE reviews SET rating = '$rating', comment = '$comment' WHERE product_id = '$productId' AND user_id = '$userId'";
        mysqli_query($conn, $updateQuery);
    } else {
        // Insert new review
        $insertQuery = "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES ('$productId', '$userId', '$rating', '$comment')";
        mysqli_query($conn, $insertQuery);
    }

    // Display all reviews for the product
    displayReviews($productId);
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;

    $productId = mysqli_real_escape_string($conn, $productId);

    $reviewsQuery = "SELECT * FROM reviews WHERE product_id = '$productId'";
    $result = mysqli_query($conn, $reviewsQuery);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $averageRating = mysqli_fetch_assoc(mysqli_query($conn, "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = '$productId'"));
        echo "<h3>Product Reviews</h3>";
        echo "<p>Average Rating: " . round($averageRating['avg_rating'], 1) . "/5</p>";
        
        // Display each review
        while ($row = mysqli_fetch_assoc($result)) {
            $ratingStars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
            echo "<div class='review'>";
            echo "<p><strong>Rating:</strong> " . $ratingStars . "</p>";
            echo "<p><strong>Comment:</strong> " . $row['comment'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available yet.";
    }
}

// Example usage:
$product_id = 1;
$user_id = 1;
$rating = 4; // Scale of 1-5
$comment = "This is a great product!";

handleReview($product_id, $user_id, $rating, $comment);

?>


<?php
// Database configuration
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function add_review($user_id, $review_text, $rating) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $rating = intval($rating);

    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, review_text, rating) 
            VALUES ('$user_id', '$review_text', '$rating')";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a user
function get_reviews($user_id) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);

    $reviews = array();

    $sql = "SELECT * FROM reviews WHERE user_id = '$user_id'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $reviews[] = array(
                'id' => $row['id'],
                'review_text' => $row['review_text'],
                'rating' => $row['rating']
            );
        }
    }

    return $reviews;
}

// Function to get average rating
function get_average_rating($user_id) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);

    $sql = "SELECT AVG(rating) as average FROM reviews WHERE user_id = '$user_id'";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        return round($row['average'], 2); // Round to 2 decimal places
    }
    
    return 0;
}

// Function to get total number of reviews
function get_total_reviews($user_id) {
    global $conn;
    
    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);

    $sql = "SELECT COUNT(*) as count FROM reviews WHERE user_id = '$user_id'";
    $result = $conn->query($sql);
    
    if ($row = $result->fetch_assoc()) {
        return $row['count'];
    }
    
    return 0;
}

// Close database connection
$conn->close();
?>


<?php
// Include the review functions file
include('review_functions.php');

// Example usage:
$user_id = 'example_user';
$review_text = "This is a great product!";
$rating = 5;

if (add_review($user_id, $review_text, $rating)) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

echo "<br>";

// Get and display reviews
$reviews = get_reviews($user_id);
echo "Total Reviews: " . get_total_reviews($user_id) . "<br>";
echo "Average Rating: " . get_average_rating($user_id) . "/5<br><br>";

foreach ($reviews as $review) {
    echo "Rating: $review[rating]/5 <br>";
    echo "Review: $review[review_text] <br><br>";
}
?>


<?php
function userReviewForm() {
    // Initialize static variable to hold reviews across function calls
    static $reviews = array();
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate inputs
        $name = trim($_POST["reviewer_name"]);
        $reviewText = trim($_POST["review_text"]);
        
        if ($name !== "" && $reviewText !== "") {
            // Add new review to the array
            $reviews[] = array(
                'name' => $name,
                'text' => $reviewText
            );
            
            // Optionally reset form fields after submission
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        } else {
            $errorMessage = "Please enter both your name and review!";
        }
    }
    
    // Output the HTML form and reviews
    ?>
    <div class="review-container">
        <?php if (isset($errorMessage)) { ?>
            <p class="error"><?php echo $errorMessage; ?></p>
        <?php } ?>
        
        <h2>Leave a Review</h2>
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <div class="form-group">
                <label for="reviewer_name">Name:</label><br>
                <input type="text" id="reviewer_name" name="reviewer_name" required>
            </div>
            
            <div class="form-group">
                <label for="review_text">Review:</label><br>
                <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea>
            </div>
            
            <button type="submit" name="submit_review">Submit Review</button>
        </form>
        
        <?php if (!empty($reviews)) { ?>
            <h3>Previous Reviews:</h3>
            <ul class="review-list">
                <?php foreach ($reviews as $index => $rev) { ?>
                    <li>
                        <strong><?php echo htmlspecialchars($rev['name']); ?>:</strong><br>
                        <?php echo htmlspecialchars($rev['text']); ?>
                    </li>
                <?php } ?>
            </ul>
        <?php } ?>
    </div>
<?php
}

// Call the function to display the form and handle submissions
userReviewForm();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submitReview($user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection and XSS attacks
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_name, review_text, rating, created_at) 
            VALUES ('$user_name', '$review_text', '$rating', NOW())";
    
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

function getReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = $conn->query($sql);
    
    $reviews = array();
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $reviews[] = $row;
        }
    }
    
    return $reviews;
}

function upvoteReview($review_id) {
    global $conn;
    
    // Update upvotes count
    $sql = "UPDATE reviews SET upvotes = upvotes + 1 WHERE id = '$review_id'";
    $conn->query($sql);
}

function downvoteReview($review_id) {
    global $conn;
    
    // Update downvotes count
    $sql = "UPDATE reviews SET downvotes = downvotes + 1 WHERE id = '$review_id'";
    $conn->query($sql);
}
?>


<?php
// Include the review functions
include('review_functions.php');

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_name = $_POST['user_name'];
    $review_text = $_POST['review_text'];
    $rating = isset($_POST['rating']) ? (int)$_POST['rating'] : 0;
    
    if (!empty($user_name) && !empty($review_text)) {
        if (submitReview($user_name, $review_text, $rating)) {
            echo "Thank you for your review!";
        } else {
            echo "Error submitting review.";
        }
    } else {
        echo "Please fill in all required fields.";
    }
}

// Get all reviews
$reviews = getReviews();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
</head>
<body>
    <!-- Review Form -->
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="user_name">Name:</label><br>
        <input type="text" id="user_name" name="user_name"><br>
        
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text"></textarea><br>
        
        <label for="rating">Rating:</label><br>
        <input type="number" id="rating" name="rating" min="1" max="5"><br>
        
        <input type="submit" value="Submit Review">
    </form>

    <!-- Display Reviews -->
    <h2>Customer Reviews</h2>
    <?php foreach ($reviews as $review) { ?>
        <div class="review">
            <p><strong><?php echo htmlspecialchars($review['user_name']); ?></strong></p>
            <p><?php echo htmlspecialchars($review['review_text']); ?></p>
            <p>Rating: <?php echo $review['rating']; ?> stars</p>
            <p>Posted on: <?php echo date('F j, Y', strtotime($review['created_at'])); ?></p>
            
            <!-- Voting System -->
            <div class="votes">
                <button onclick="vote('up', '<?php echo $review['id']; ?>')">↑ Upvote</button>
                <span><?php echo $review['upvotes']; ?></span>
                <button onclick="vote('down', '<?php echo $review['id']; ?>')">↓ Downvote</button>
            </div>
        </div>
    <?php } ?>

    <!-- Voting JavaScript -->
    <script>
        function vote(action, review_id) {
            // Make an AJAX call to upvote/downvote
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    window.location.reload(); // Refresh to show updated votes
                }
            };
            xhttp.open("POST", "vote.php", true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send("action=" + action + "&review_id=" + review_id);
        }
    </script>
</body>
</html>


<?php
include('review_functions.php');

if (isset($_POST['action']) && isset($_POST['review_id'])) {
    $action = $_POST['action'];
    $review_id = $_POST['review_id'];
    
    if ($action == 'up') {
        upvoteReview($review_id);
    } elseif ($action == 'down') {
        downvoteReview($review_id);
    }
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Review function
function user_reviews($conn) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $name = htmlspecialchars($_POST['name']);
        $comment = htmlspecialchars($_POST['comment']);
        $rating = intval($_POST['rating']);

        // Validate input
        if ($name == "" || $comment == "" || $rating < 1) {
            echo "Please fill in all required fields!";
            exit();
        }

        // Insert review into database
        try {
            $stmt = $conn->prepare("INSERT INTO reviews (user_name, comment, rating, submission_date) 
                                  VALUES (:name, :comment, :rating, NOW())");
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':comment', $comment);
            $stmt->bindParam(':rating', $rating);

            if ($stmt->execute()) {
                echo "Thank you for submitting your review!";
            } else {
                echo "Error submitting your review. Please try again.";
            }
        } catch(PDOException $e) {
            die("Database error: " . $e->getMessage());
        }

        // Display all reviews
    } else {
        // Get all reviews from database
        try {
            $stmt = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");
            $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

            if ($reviews) {
                echo "<h2>Reviews</h2>";
                foreach ($reviews as $review) {
                    echo "<div class='review'>";
                    echo "<p><strong>" . htmlspecialchars($review['user_name']) . "</strong></p>";
                    echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
                    echo "<p>Rating: " . $review['rating'] . "/5</p>";
                    echo "<p>Submitted on: " . date('F j, Y', strtotime($review['submission_date'])) . "</p>";
                    echo "</div>";
                }
            } else {
                echo "No reviews found. Be the first to review!";
            }
        } catch(PDOException $e) {
            die("Database error: " . $e->getMessage());
        }
    }

    // Display review form
    if (!isset($_POST['submit'])) {
        // Generate CSRF token
        session_start();
        $token = md5(uniqid(mt_rand(), true));
        $_SESSION['csrf_token'] = $token;

        echo "<h2>Submit a Review</h2>";
        echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<input type='hidden' name='csrf_token' value='$token'>";
        
        echo "<p><label for='name'>Name:</label><br>";
        echo "<input type='text' id='name' name='name' required></p>";

        echo "<p><label for='comment'>Comment:</label><br>";
        echo "<textarea id='comment' name='comment' rows='5' cols='40' required></textarea></p>";

        echo "<p><label for='rating'>Rating:</label><br>";
        echo "<select id='rating' name='rating'>";
        echo "<option value='1'>1</option>";
        echo "<option value='2'>2</option>";
        echo "<option value='3'>3</option>";
        echo "<option value='4'>4</option>";
        echo "<option value='5' selected>5</option>";
        echo "</select></p>";

        echo "<input type='submit' name='submit' value='Submit Review'>";
        echo "</form>";
    }
}

// Call the review function
user_reviews($conn);

// Close database connection
$conn = null;
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check if the connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Sanitize the input data
$name = trim(mysqli_real_escape_string($conn, $_POST['name']));
$email = trim(mysqli_real_escape_string($conn, $_POST['email']));
$rating = intval($_POST['rating']);
$review_text = htmlspecialchars(trim(mysqli_real_escape_string($conn, $_POST['review_text'])));
$current_date = date('Y-m-d H:i:s');

// Insert the review into the database
$sql = "INSERT INTO reviews (name, email, rating, review_text, created_at) 
        VALUES ('$name', '$email', $rating, '$review_text', '$current_date')";

if ($conn->query($sql)) {
    // Redirect back to the review submission page
    header("Location: review_form.html");
} else {
    echo "Error submitting review: " . $conn->error;
}

// Close the database connection
$conn->close();
?>


<?php
function display_reviews() {
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $dbname = 'reviews_db';

    // Connect to the database
    $conn = new mysqli($host, $username, $password, $dbname);

    // Check if the connection was successful
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Fetch all approved reviews from the database
    $sql = "SELECT * FROM reviews WHERE status = 'approved' ORDER BY created_at DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
                echo "<h3>Review by " . htmlspecialchars($row['name']) . "</h3>";
                echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
                echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
                echo "<p>" . nl2br(htmlspecialchars($row['review_text'])) . "</p>";
                echo "<small>Posted on: " . $row['created_at'] . "</small>";
            echo "</div><hr>";
        }
    } else {
        echo "No reviews found.";
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
// Configuration
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews_db";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Sanitize inputs
    $user_id = intval($user_id);
    $product_id = intval($product_id);
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));

    if ($rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }

    if (empty($comment)) {
        throw new Exception("Comment cannot be empty");
    }

    // Insert into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, submission_date) 
            VALUES ($user_id, $product_id, $rating, '$comment', NOW())";

    if (!mysqli_query($conn, $sql)) {
        throw new Exception("Error adding review: " . mysqli_error($conn));
    }
}

// Function to display reviews
function display_reviews($product_id) {
    global $conn;

    try {
        $product_id = intval($product_id);

        // Calculate average rating
        $avg_sql = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = $product_id";
        $result = mysqli_query($conn, $avg_sql);
        $row = mysqli_fetch_assoc($result);
        $avg_rating = round($row['avg_rating'], 1);

        echo "<div class='review-container'>";
        echo "<h3>Average Rating: " . $avg_rating . " stars</h3>";

        // Get all reviews
        $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY submission_date DESC";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='review'>";
                echo "<div class='rating'>";
                for ($i = 1; $i <= $row['rating']; $i++) {
                    echo "<span class='star'>★</span>";
                }
                for ($i = $row['rating'] + 1; $i <= 5; $i++) {
                    echo "<span class='star'>☆</span>";
                }
                echo "</div>";
                echo "<p class='comment'>" . htmlspecialchars($row['comment']) . "</p>";
                echo "<small class='date'>" . date('F j, Y', strtotime($row['submission_date'])) . "</small>";
                echo "</div>";
            }
        } else {
            echo "<p>No reviews yet!</p>";
        }
        echo "</div>";

    } catch (Exception $e) {
        die("Error displaying reviews: " . $e->getMessage());
    }
}
?>


<?php
include 'review_functions.php';

if (isset($_POST['rating']) && isset($_POST['comment'])) {
    try {
        add_review(
            $user_id = $_SESSION['user_id'], // Replace with actual user ID
            $product_id = intval($_POST['product_id']),
            $rating = intval($_POST['rating']),
            $comment = $_POST['comment']
        );
        echo "Thank you for submitting your review!";
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
include 'review_functions.php';
display_reviews($product_id);
?>


<?php
class Review {
    private $id;
    private $author;
    private $email;
    private $rating;
    private $comment;
    private $date;

    public function __construct($id, $author, $email, $rating, $comment) {
        $this->id = $id;
        $this->author = $author;
        $this->email = $email;
        $this->rating = $rating;
        $this->comment = $comment;
        $this->date = date('Y-m-d H:i:s');
    }

    public function getId() {
        return $this->id;
    }

    public function getAuthor() {
        return $this->author;
    }

    public function getEmail() {
        return $this->email;
    }

    public function getRating() {
        return $this->rating;
    }

    public function getComment() {
        return $this->comment;
    }

    public function getDate() {
        return $this->date;
    }
}

class ReviewManager {
    private $reviews = array();
    private $filePath;

    public function __construct($filePath) {
        $this->filePath = $filePath;
        if (file_exists($filePath)) {
            $data = file_get_contents($filePath);
            $this->reviews = unserialize($data);
        }
    }

    public function addReview($id, $author, $email, $rating, $comment) {
        // Validate input
        if (empty($author) || empty($email) || empty($rating) || empty($comment)) {
            return false;
        }

        $review = new Review($id, $author, $email, $rating, $comment);
        array_push($this->reviews, $review);

        // Save to file
        $this->save();

        return true;
    }

    public function getReviews() {
        return $this->reviews;
    }

    private function save() {
        $data = serialize($this->reviews);
        file_put_contents($this->filePath, $data);
    }

    public function displayReviews() {
        foreach ($this->getReviews() as $review) {
            echo "<div class='review'>";
            echo "<h3>Review by: " . $review->getAuthor() . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $review->getRating()) . "</p>";
            echo "<p>" . $review->getComment() . "</p>";
            echo "<small>Posted on: " . $review->getDate() . "</small>";
            echo "</div>";
        }
    }
}

// Example usage:
$filePath = 'reviews.txt';
$reviewManager = new ReviewManager($filePath);

// Add a new review
$id = uniqid();
$author = "John Doe";
$email = "john@example.com";
$rating = 5;
$comment = "Great product!";
$success = $reviewManager->addReview($id, $author, $email, $rating, $comment);
if ($success) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

// Display all reviews
echo "<h2>All Reviews:</h2>";
$reviewManager->displayReviews();
?>


<?php
// Function to add a user review
function addReview($userId, $productId, $rating, $comment) {
    // Include database configuration file
    include 'db-config.php';
    
    // Connect to the database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return false;
    }
    
    // Sanitize inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Get current timestamp
    $timestamp = time();
    
    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
            VALUES ('$userId', '$productId', '$rating', '$comment', '$timestamp')";
    
    if ($conn->query($sql)) {
        // Review added successfully
        return true;
    } else {
        // Error adding review
        echo "Error: " . $sql . "<br>" . $conn->error;
        return false;
    }
    
    // Close database connection
    $conn->close();
}

// Example usage:
// addReview(1, 5, 4, "Great product! It works perfectly.");
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'yourusername');
define('DB_PASSWORD', 'yourpassword');
define('DB_NAME', 'yourdatabase');
?>


<?php
function user_review($item_id = null, $username = null, $rating = null, $comment = null, $limit = 5) {
    // Database connection details
    $db_host = 'localhost';
    $db_name = 'reviews_db';
    $db_user = 'root';
    $db_pass = '';

    // Connect to database
    $connection = mysql_connect($db_host, $db_user, $db_pass);
    if (!$connection) {
        die('Could not connect: ' . mysql_error());
    }
    
    mysql_select_db($db_name);

    // Insert new review if data is provided
    if ($item_id && $username && $rating && $comment) {
        $query = "INSERT INTO reviews (item_id, username, rating, comment, date) VALUES ('$item_id', '$username', '$rating', '$comment', NOW())";
        mysql_query($query);
    }

    // Fetch existing reviews
    $reviews_query = "SELECT * FROM reviews WHERE item_id = '$item_id' ORDER BY date DESC LIMIT $limit";
    $result = mysql_query($reviews_query);

    // Calculate average rating
    $avg_rating_query = "SELECT AVG(rating) as avg_rating FROM reviews WHERE item_id = '$item_id'";
    $avg_result = mysql_query($avg_rating_query);
    $avg_row = mysql_fetch_assoc($avg_result);
    $average_rating = number_format((float)$avg_row['avg_rating'], 1, '.', '');

    // Display review form and results
    if ($result) {
        echo "<div class='reviews'>";
        echo "<h3>Reviews</h3>";
        
        // Display average rating
        echo "<p>Average Rating: $average_rating/5</p>";
        
        while ($row = mysql_fetch_assoc($result)) {
            echo "<div class='review-item'>";
            echo "<div class='review-header'>";
            echo "<span class='username'>" . htmlspecialchars($row['username']) . "</span>";
            echo "<div class='rating'>";
            
            // Display stars
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            
            echo "</div>";
            echo "</div>";
            echo "<p class='comment'>" . nl2br(htmlspecialchars($row['comment'])) . "</p>";
            echo "<small class='date'>" . date('F j, Y', strtotime($row['date'])) . "</small>";
            echo "</div>";
        }
        
        echo "</div>";
    }

    // Close database connection
    mysql_close($connection);
}

// Example usage:
// Insert new review
user_review(123, 'JohnDoe', 4, 'Great product! Highly recommended.', 5);

// Display reviews
echo "<h2>Product Reviews</h2>";
user_review(123); // Display all reviews for item_id 123 with default limit of 5

?>


<?php
// Include the review function file
include('review_function.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process submitted review
    if (isset($_POST['item_id'], $_POST['username'], $_POST['rating'], $_POST['comment'])) {
        user_review($_POST['item_id'], $_POST['username'], $_POST['rating'], $_POST['comment']);
    }
}

// Display existing reviews for item ID 123
echo "<h2>Product Reviews</h2>";
user_review(123);
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

class Review {
    private $conn;

    public function __construct() {
        // Connect to database
        $this->conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        
        if ($this->conn->connect_error) {
            die("Connection failed: " . $this->conn->connect_error);
        }
    }

    // Function to submit a review
    public function submitReview($user_id, $product_id, $rating, $comment) {
        try {
            // Prepare and bind the statement
            $stmt = $this->conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment, created_at) VALUES (?, ?, ?, ?, NOW())");
            $stmt->bind_param("iids", $user_id, $product_id, $rating, $comment);
            
            // Execute the statement
            if ($stmt->execute()) {
                return true; // Review submitted successfully
            } else {
                return false; // Error submitting review
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Function to fetch reviews for a product
    public function getReviews($product_id, $limit = 5) {
        try {
            $reviews = array();

            // Prepare and bind the statement
            $stmt = $this->conn->prepare("SELECT r.*, u.username FROM reviews r INNER JOIN users u ON r.user_id = u.id WHERE product_id = ? ORDER BY created_at DESC LIMIT ?");
            $stmt->bind_param("ii", $product_id, $limit);
            
            // Execute the statement
            if ($stmt->execute()) {
                // Get result set
                $result = $stmt->get_result();
                
                while ($row = $result->fetch_assoc()) {
                    $review = array(
                        'user_name' => $row['username'],
                        'rating' => $row['rating'],
                        'comment' => $row['comment'],
                        'created_at' => date('M j, Y g:i a', strtotime($row['created_at'])),
                        // You can add more fields as needed
                    );
                    
                    array_push($reviews, $review);
                }
                
                return $reviews;
            } else {
                return false; // Error fetching reviews
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function __destruct() {
        // Close database connection
        if ($this->conn != null) {
            $this->conn->close();
        }
    }
}

// Example usage:
$review = new Review();

// Submit a review
$user_id = 1; // Replace with actual user ID
$product_id = 10; // Replace with actual product ID
$rating = 5; // Rating between 1 and 5
$comment = "This is an amazing product!"; // User comment

if ($review->submitReview($user_id, $product_id, $rating, $comment)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review!";
}

// Get reviews for a product
$product_reviews = $review->getReviews(10, 5); // Get 5 latest reviews for product ID 10

if ($product_reviews) {
    foreach ($product_reviews as $rev) {
        echo "<div class='review'>";
        echo "<p><strong>" . $rev['user_name'] . "</strong> - " . str_repeat("★", $rev['rating']) . "</p>";
        echo "<p>" . $rev['comment'] . "</p>";
        echo "<small>" . $rev['created_at'] . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews found.";
}
?>


<?php
// Function to add a user review
function addReview($username, $rating, $comment = "") {
    // Validate inputs
    if (empty($username) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid input";
    }
    
    // Sanitize inputs to prevent SQL injection and XSS attacks
    $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');
    $comment = htmlspecialchars($comment, ENT_QUOTES, 'UTF-8');
    
    // Connect to database
    include('db_config.php'); // Include your database configuration
    
    try {
        // Check if username exists in users table
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            return "Username does not exist";
        }
        
        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comment) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sis", $username, $rating, $comment);
        
        if ($stmt->execute()) {
            return "Review added successfully";
        } else {
            return "Error adding review: " . $stmt->error;
        }
    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
$reviewResult = addReview("JohnDoe", 4, "Great product!");
echo $reviewResult;
?>


// Required parameters: username and rating
addReview("JaneSmith", 5);

// With optional comment parameter
addReview("JohnDoe", 4, "This is a great product!");

// Minimum rating (1)
addReview("MikeJohnson", 1, "Not satisfied with the quality");

// Maximum rating (5)
addReview("SarahWilliams", 5, "Excellent service and product");


<?php
function addReview($userId, $productId, $rating, $comment) {
    // Connect to database
    try {
        $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Validate input
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            return "Invalid rating. Please enter a number between 1 and 5.";
        }
        if (strlen($comment) > 1000) {
            return "Comment is too long. Maximum allowed length is 1000 characters.";
        }
        
        // Sanitize inputs
        $userId = htmlspecialchars(strip_tags($userId));
        $productId = htmlspecialchars(strip_tags($productId));
        $rating = intval($rating);
        $comment = htmlspecialchars(strip_tags($comment));
        
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) 
                              VALUES (:userId, :productId, :rating, :comment)");
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':comment', $comment);
        
        if ($stmt->execute()) {
            // Calculate average rating for the product
            $avgStmt = $conn->prepare("SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = :productId");
            $avgStmt->bindParam(':productId', $productId);
            $avgStmt->execute();
            
            $avgResult = $avgStmt->fetch(PDO::FETCH_ASSOC);
            $averageRating = round($avgResult['avg_rating'], 1);
            
            // Update product table with new average rating
            $updateAvgStmt = $conn->prepare("UPDATE products SET average_rating = :averageRating WHERE id = :productId");
            $updateAvgStmt->bindParam(':averageRating', $averageRating);
            $updateAvgStmt->bindParam(':productId', $productId);
            
            if ($updateAvgStmt->execute()) {
                return "Review added successfully!";
            } else {
                return "Error updating average rating.";
            }
        } else {
            return "Error adding review.";
        }
        
    } catch(PDOException $e) {
        echo "Connection failed: " . $e->getMessage();
        return "Database error occurred.";
    }
}
?>


// Example usage:
$reviewResult = addReview(1, 2, 4, "Great product!");
echo $reviewResult;


<?php
// Connect to database
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function reviewSystem() {
    global $conn;
    
    // Handle form submission
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'submit_review':
                submitReview();
                break;
            case 'delete_review';
                deleteReview();
                break;
            default:
                break;
        }
    }

    displayReviews();
}

function submitReview() {
    global $conn;

    // Validate input
    if (empty($_POST['comment'])) {
        echo "Please enter a comment.";
        return;
    }

    if (!isset($_POST['rating']) || $_POST['rating'] < 1 || $_POST['rating'] > 5) {
        echo "Please select a rating between 1 and 5.";
        return;
    }

    $comment = mysqli_real_escape_string($conn, $_POST['comment']);
    $rating = intval($_POST['rating']);

    // Get current user's ID (assuming you have a user authentication system)
    $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;

    if ($user_id == 0) {
        echo "Please log in to post a review.";
        return;
    }

    // Insert into database
    $sql = "INSERT INTO reviews (user_id, rating, comment, submission_date)
            VALUES ('$user_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql)) {
        header("Location: {$_SERVER['PHP_SELF']}"); // Refresh page to show new review
    } else {
        echo "Error submitting review: " . $conn->error;
    }
}

function deleteReview() {
    global $conn;

    if (!isset($_POST['review_id'])) {
        return;
    }

    $review_id = intval($_POST['review_id']);

    // Verify ownership of the review
    $sql = "SELECT user_id FROM reviews WHERE id = '$review_id'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $user_id = $row['user_id'];

        // Check if current user is the review author
        if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $user_id) {
            $sql_delete = "DELETE FROM reviews WHERE id = '$review_id'";
            if ($conn->query($sql_delete)) {
                header("Location: {$_SERVER['PHP_SELF']}"); // Refresh page after deletion
            } else {
                echo "Error deleting review: " . $conn->error;
            }
        } else {
            echo "You are not authorized to delete this review.";
        }
    } else {
        echo "Review not found.";
    }
}

function displayReviews() {
    global $conn;

    // Get all reviews
    $sql = "SELECT r.id, r.user_id, r.rating, r.comment, r.submission_date, u.username 
            FROM reviews r 
            LEFT JOIN users u ON r.user_id = u.id 
            ORDER BY submission_date DESC";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Display average rating
        displayAverageRating();

        echo "<div class='reviews'>";
        
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
                displayRatingStars($row['rating']);
                echo "<p><strong>" . htmlspecialchars($row['username']) . "</strong></p>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                
                // Display delete button if current user is the review author
                if (isset($_SESSION['user_id']) && $_SESSION['user_id'] == $row['user_id']) {
                    echo "<form method='post'>";
                        echo "<input type='hidden' name='action' value='delete_review'>";
                        echo "<input type='hidden' name='review_id' value='" . $row['id'] . "'>";
                        echo "<button type='submit'>Delete Review</button>";
                    echo "</form>";
                }
            echo "</div>";
        }

        echo "</div>";
    } else {
        echo "No reviews yet.";
    }
}

function displayRatingStars($rating) {
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            echo "<span class='star'>★</span>";
        } else {
            echo "<span class='star'>☆</span>";
        }
    }
}

function displayAverageRating() {
    global $conn;

    // Calculate average rating
    $sql = "SELECT AVG(rating) AS avg_rating FROM reviews";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $avg_rating = number_format($row['avg_rating'], 1);

        echo "<div class='average-rating'>";
            displayRatingStars(round($avg_rating));
            echo "<span>Average Rating: {$avg_rating}/5</span>";
        echo "</div>";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .star {
            color: #ffd700;
            font-size: 24px;
            margin-right: 5px;
        }
        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .average-rating {
            background-color: #f8f9fa;
            padding: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <?php
    // Display review form and reviews
    if (isset($_SESSION['user_id'])) { ?>
        <form method="post">
            <h3>Submit a Review:</h3>
            <input type="hidden" name="action" value="submit_review">
            
            <div class="rating-stars">
                Rating: 
                <?php for ($i = 1; $i <= 5; $i++) { ?>
                    <input type="radio" name="rating" id="star<?=$i;?>" value="<?=$i;?>">
                    <label for="star<?=$i;?>">★</label>
                <?php } ?>
            </div>

            <textarea name="comment" placeholder="Write your review..." required></textarea>
            <button type="submit">Submit Review</button>
        </form>
    <?php } else { ?>
        <p>Please log in to submit a review.</p>
    <?php } ?>

    <!-- Display reviews -->
    <?php reviewSystem(); ?>
</body>
</html>


<?php
// Initialize the reviews array (this would typically be stored in a database in a real application)
$reviews = array();

function add_review($user_id, $username, $rating, $comment) {
    global $reviews;
    
    // Create a unique review ID using uniqid()
    $review_id = uniqid();
    
    // Add the new review to the reviews array
    $new_review = array(
        'id' => $review_id,
        'user_id' => $user_id,
        'username' => $username,
        'rating' => $rating,
        'comment' => $comment,
        'timestamp' => date('Y-m-d H:i:s') // Add current timestamp
    );
    
    $reviews[] = $new_review;
    
    return true;
}

function get_reviews() {
    global $reviews;
    return $reviews;
}

// Example usage:
add_review(1, "JohnDoe", 4, "This is a great product!");
add_review(2, "JaneSmith", 5, "Excellent service and quality!");

// Output the reviews
$all_reviews = get_reviews();

function output_reviews($reviews) {
    if (empty($reviews)) {
        echo "<p>No reviews available.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>Rating: " . $review['rating'] . "/5</h3>";
        echo "<p><strong>" . htmlspecialchars($review['username']) . "</strong></p>";
        echo "<p>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
        echo "<small>" . $review['timestamp'] . "</small>";
        echo "</div>";
    }
}

// Display the reviews
output_reviews($all_reviews);
?>


<?php
// Function to handle user reviews
function user_review($review_id = 0, $user_id = 0, $rating = 0, $comment = '', $action = 'add') {
    // Database connection details
    $host = "localhost";
    $username = "your_username";
    $password = "your_password";
    $database = "your_database";

    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Escape special characters to prevent SQL injection
    $review_id = mysqli_real_escape_string($conn, $review_id);
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Perform action based on the parameter
    switch ($action) {
        case 'add':
            // Add new review
            $sql = "INSERT INTO reviews (user_id, rating, comment)
                    VALUES ('$user_id', '$rating', '$comment')";
            break;

        case 'update':
            // Update existing review
            $sql = "UPDATE reviews 
                    SET rating='$rating', comment='$comment'
                    WHERE review_id='$review_id'";
            break;

        case 'delete':
            // Delete review
            $sql = "DELETE FROM reviews 
                    WHERE review_id='$review_id'";
            break;

        default:
            // Default action (could be set to return an error)
            return false;
    }

    // Execute the query
    if (mysqli_query($conn, $sql)) {
        // Close database connection
        mysqli_close($conn);
        return true;
    } else {
        // Close database connection
        mysqli_close($conn);
        die("Error: " . mysqli_error($conn));
        return false;
    }
}

// Example usage:
// Adding a new review
if (user_review(0, 1, 5, 'Great product!', 'add')) {
    echo "Review added successfully!";
} else {
    echo "Error adding review.";
}

// Updating an existing review
if (user_review(1, 1, 4, 'Good product!', 'update')) {
    echo "Review updated successfully!";
} else {
    echo "Error updating review.";
}

// Deleting a review
if (user_review(2, '', '', '', 'delete')) {
    echo "Review deleted successfully!";
} else {
    echo "Error deleting review.";
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$database = "reviews_db";

// Create database connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Check if the user has already reviewed this product
    $checkQuery = "SELECT * FROM reviews WHERE user_id = ? AND product_id = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ii", $userId, $productId);
    $stmt->execute();
    
    if ($stmt->fetch()) {
        return false; // User already reviewed this product
    }
    
    // Insert the new review into the database
    $insertQuery = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp) 
                   VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getProductReviews($productId) {
    global $conn;
    
    $query = "SELECT r.*, u.username FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE product_id = ? 
              ORDER BY timestamp DESC";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    return $result->fetch_all(MYSQLI_ASSOC);
}

// Function to update a review
function updateReview($reviewId, $rating, $comment) {
    global $conn;
    
    $updateQuery = "UPDATE reviews SET rating = ?, comment = ? WHERE id = ?";
    $stmt = $conn->prepare($updateQuery);
    $stmt->bind_param("isi", $rating, $comment, $reviewId);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to delete a review
function deleteReview($reviewId) {
    global $conn;
    
    $deleteQuery = "DELETE FROM reviews WHERE id = ?";
    $stmt = $conn->prepare($deleteQuery);
    $stmt->bind_param("i", $reviewId);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($productId) {
    $reviews = getProductReviews($productId);
    
    if (empty($reviews)) {
        echo "<p>No reviews available for this product.</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>By " . htmlspecialchars($review['username']) . "</h4>";
        echo "<p>Rating: " . htmlspecialchars($review['rating']) . " stars</p>";
        echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
        echo "<small>Posted on: " . date('F j, Y', strtotime($review['timestamp'])) . "</small>";
        echo "</div><hr>";
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $userId = 1; // Get this from user session
    $productId = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    if (addReview($userId, $productId, $rating, $comment)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: Review could not be submitted.";
    }
}

// Display all reviews for a product
$productId = 1; // Example product ID
displayReviews($productId);

$conn->close();
?>


<?php
function handleUserReview($reviewId = null, $userId, $username, $rating, $comment, $connection) {
    try {
        if ($reviewId === null) {
            // Add new review
            $stmt = $connection->prepare("INSERT INTO reviews (user_id, username, rating, comment) VALUES (?, ?, ?, ?)");
            $stmt->bind_param("isss", $userId, $username, $rating, $comment);
            if ($stmt->execute()) {
                return "Review added successfully";
            } else {
                return "Error adding review: " . $stmt->error;
            }
        } else {
            // Check if we're updating or deleting
            $action = $_POST['action'] ?? 'update';
            
            if ($action === 'delete') {
                // Delete review
                $stmt = $connection->prepare("UPDATE reviews SET deleted = 1 WHERE review_id = ?");
                $stmt->bind_param("i", $reviewId);
                if ($stmt->execute()) {
                    return "Review deleted successfully";
                } else {
                    return "Error deleting review: " . $stmt->error;
                }
            } else {
                // Update review
                $stmt = $connection->prepare("UPDATE reviews SET rating = ?, comment = ? WHERE review_id = ?");
                $stmt->bind_param("isi", $rating, $comment, $reviewId);
                if ($stmt->execute()) {
                    return "Review updated successfully";
                } else {
                    return "Error updating review: " . $stmt->error;
                }
            }
        }
    } catch (Exception $e) {
        return "An error occurred: " . $e->getMessage();
    }
}
?>


$result = handleUserReview(
    null,
    $userId,
    $username,
    $rating,
    $comment,
    $connection
);


$result = handleUserReview(
    $reviewId,
    $userId,
    $username,
    $rating,
    $comment,
    $connection
);


// In your form or request, include a hidden input:
<input type="hidden" name="action" value="delete">

// Then call the function:
$result = handleUserReview($reviewId, null, null, null, null, $connection);


<?php
// Function to handle review submission
function submitReview($name, $email, $rating, $comment) {
    // Validate inputs
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if (!preg_match("/^[\S.]+@[\S.]+\.[\S.]+$/", $email)) {
        return "Invalid email format!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Sanitize inputs
    $name = htmlspecialchars($name);
    $email = htmlspecialchars($email);
    $comment = htmlspecialchars($comment);

    // Create review array
    $review = [
        'name' => $name,
        'email' => $email,
        'rating' => $rating,
        'comment' => $comment,
        'date' => date('Y-m-d H:i:s')
    ];

    // Load existing reviews
    if (file_exists('reviews.json')) {
        $reviews = json_decode(file_get_contents('reviews.json'), true);
    } else {
        $reviews = [];
    }

    // Add new review
    array_unshift($reviews, $review);

    // Save reviews back to file
    file_put_contents('reviews.json', json_encode($reviews));

    return "Review submitted successfully!";
}

// Function to display reviews
function displayReviews() {
    if (!file_exists('reviews.json')) {
        echo "<p>No reviews yet!</p>";
        return;
    }

    $reviews = json_decode(file_get_contents('reviews.json'), true);

    echo "<div class='reviews'>";
    foreach ($reviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<h3>{$review['name']}</h3>";
        echo "<p>Email: " . str_replace('@', ' at ', $review['email']) . "</p>"; // Obfuscate email
        echo "<div class='rating'>";
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $review['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        echo "</div>";
        echo "<p>{$review['comment']}</p>";
        echo "<small>Posted on {$review['date']}</small>";
        echo "</div>";
    }
    echo "</div>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = submitReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    echo $result;
} else {
    displayReviews();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .star { color: #gold; }
        .review { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .reviews { max-width: 800px; margin: 0 auto; }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php
    if ($_SERVER["REQUEST_METHOD"] == "GET") {
        displayReviews();
    }
    ?>

    <form method="post" action="">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <select name="rating" required>
            <option value="">Select Rating</option>
            <option value="1">★☆☆☆☆</option>
            <option value="2">★★☆☆☆</option>
            <option value="3">★★★☆☆</option>
            <option value="4">★★★★☆</option>
            <option value="5">★★★★★</option>
        </select><br>
        <textarea name="comment" placeholder="Your Review" required></textarea><br>
        <button type="submit">Submit Review</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'reviews';

// Connect to database
$conn = new mysqli($host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address");
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, date) VALUES (
        '" . mysqli_real_escape_string($conn, $name) . "',
        '" . mysqli_real_escape_string($conn, $email) . "',
        '" . mysqli_real_escape_string($conn, $rating) . "',
        '" . mysqli_real_escape_string($conn, $comment) . "',
        CURRENT_TIMESTAMP
    )";

    if ($conn->query($sql)) {
        header("Location: $_SERVER[PHP_SELF]");
        exit;
    } else {
        echo "Error submitting review: " . $conn->error;
    }
}

// Get reviews from database
$sql = "SELECT * FROM reviews ORDER BY date DESC";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-form {
            margin-bottom: 30px;
        }
        .rating-stars {
            font-size: 24px;
            color: #ffd700;
        }
    </style>
</head>
<body>

<div class="review-form">
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <div class="rating-stars">
            <label>Rating:</label>
            <select name="rating">
                <option value="5">★★★★★</option>
                <option value="4">★★★★☆</option>
                <option value="3">★★★☆☆</option>
                <option value="2">★★☆☆☆</option>
                <option value="1">★☆☆☆☆</option>
            </select>
        </div><br>
        <textarea name="comment" placeholder="Your Review" rows="4" required></textarea><br>
        <input type="submit" value="Submit Review">
    </form>
</div>

<div class="reviews-list">
    <h2>Review List</h2>
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Mask email address
            $masked_email = substr_replace($row['email'], '***', 1, -5);

            echo "<div class='review-item'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Email: " . $masked_email . "</p>";
            echo "<p>Rating: ";
            for ($i = 0; $i < $row['rating']; $i++) {
                echo "★";
            }
            echo "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<p>Date: " . date("d M Y H:i", strtotime($row['date'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
    ?>
</div>

<?php
$conn->close();
?>



<?php
// Function to display and submit user reviews
function userReview() {
    // Array to store reviews (simulating a database)
    $reviews = array();
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $review = htmlspecialchars(trim($_POST['review']));
        
        // Validate input
        if (empty($name) || empty($review)) {
            echo "<div class='error'>Please fill in both name and review fields!</div>";
        } else {
            // Create a new review entry with timestamp
            $newReview = array(
                'name' => $name,
                'review' => $review,
                'timestamp' => time()
            );
            
            // Add the new review to the reviews array (simulating database insertion)
            array_push($reviews, $newReview);
            
            // Redirect back to avoid form resubmission
            header("Location: " . $_SERVER["PHP_SELF"]);
            exit();
        }
    }
    
    // Display existing reviews
    if (!empty($reviews)) {
        echo "<h3>Previous Reviews:</h3>";
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<p><strong>" . $review['name'] . "</strong></p>";
            echo "<p>" . $review['review'] . "</p>";
            echo "<small>Posted on: " . date('jS M Y, g:i a', $review['timestamp']) . "</small>";
            echo "</div>";
        }
    } else {
        // Show message if no reviews yet
        echo "<p class='info'>Be the first to leave a review!</p>";
    }
    
    // Display review form
    echo "<h3>Leave a Review:</h3>";
    echo "<form method='post' action='" . $_SERVER["PHP_SELF"] . "'>";
    echo "<input type='text' name='name' placeholder='Your Name'>";
    echo "<textarea name='review' placeholder='Write your review here...'></textarea>";
    echo "<button type='submit'>Submit Review</button>";
    echo "</form>";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $dbusername, $dbpassword, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['username']) . "</h3>";
            echo "<p>Rating: " . str_repeat("⭐️", $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        // No reviews found
        echo "<p>No reviews available for this product.</p>";
    }

    $stmt->close();
}

// Function to submit a new review
function submit_review() {
    global $conn;

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $username = sanitizeInput($_POST['username']);
        $email = sanitizeInput($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = sanitizeInput($_POST['comment']);

        // Validate input
        if (empty($username) || empty($email) || empty($comment)) {
            echo "Please fill in all required fields!";
            return;
        }

        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format!";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars!";
            return;
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, username, email, rating, comment) VALUES (?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("isidi", $product_id, $username, $email, $rating, $comment);

        if ($stmt->execute()) {
            echo "Review submitted successfully!";
        } else {
            echo "Error submitting review: " . $stmt->error;
        }

        $stmt->close();
    }
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = htmlspecialchars(strip_tags(trim($data)));
    return $data;
}

?>


<?php display_reviews(1); ?>


<?php
// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    rating INT,
    comment TEXT,
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $_POST['username']);
    $rating = intval($_POST['rating']);
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    if ($user_name && $rating > 0) {
        $sql = "INSERT INTO reviews (user_name, rating, comment)
                VALUES ('$user_name', '$rating', '$comment')";
        
        if (mysqli_query($conn, $sql)) {
            echo "<div class='alert alert-success'>Thank you for your review!</div>";
        } else {
            echo "<div class='alert alert-danger'>Error submitting review. Please try again.</div>";
        }
    } else {
        echo "<div class='alert alert-warning'>Please fill in all required fields (Name and Rating).</div>";
    }
}

// Retrieve reviews from database
$sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
$result = mysqli_query($conn, $sql);
$reviews = mysqli_fetch_all($result, MYSQLI_ASSOC);

mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .rating-stars {
            display: inline-block;
            font-size: 24px;
            color: #ffd700;
        }
        .review-container {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        #review-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<h2>Submit a Review</h2>
<form id="review-form" method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <div class="form-group">
        <label for="username">Name:</label><br>
        <input type="text" id="username" name="username" required>
    </div>

    <div class="form-group">
        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating" required>
            <option value="">Select Rating</option>
            <option value="5">★★★★★</option>
            <option value="4">★★★★☆</option>
            <option value="3">★★☆☆☆</option>
            <option value="2">★☆☆☆☆</option>
            <option value="1">☆☆☆☆☆</option>
        </select>
    </div>

    <div class="form-group">
        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="4" cols="50"></textarea>
    </div>

    <button type="submit">Submit Review</button>
</form>

<h2>Reviews</h2>
<?php foreach ($reviews as $review): ?>
<div class="review-container">
    <div class="review-header">
        <span class="rating-stars"><?php echo str_repeat('★', $review['rating']) ?></span>
        <span style="margin-left: 10px;">- <?php echo htmlspecialchars($review['user_name']) ?></span>
        <span style="float: right; color: #666;">
            <?php echo date("F j, Y g:i a", strtotime($review['submission_date'])) ?>
        </span>
    </div>
    <p><?php echo nl2br(htmlspecialchars($review['comment'])) ?></p>
</div>
<?php endforeach; ?>

</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$db_name = "reviews_db";

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submit_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Validate inputs
    if (empty($user_id) || empty($product_id) || empty($rating) || empty($comment)) {
        return "All fields are required!";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Escape special characters
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
            VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

    if ($conn->query($sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;

    // Get all reviews for the given product
    $sql = "SELECT r.id, u.username AS reviewer_name, p.product_name, r.rating,
            r.comment, DATE_FORMAT(r.timestamp, '%M %d, %Y') AS date
            FROM reviews r
            LEFT JOIN users u ON r.user_id = u.id
            LEFT JOIN products p ON r.product_id = p.id
            WHERE p.id = '$product_id'
            ORDER BY r.timestamp DESC";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Submit review
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    $result = submit_review($user_id, $product_id, $rating, $comment);
    echo $result;
}

// Display reviews for product ID 1
$reviews_result = get_reviews(1);

if ($reviews_result) {
    while ($row = $reviews_result->fetch_assoc()) {
        // Format and display the review
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['reviewer_name']) . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "<small>Posted on: " . $row['date'] . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews found for this product.";
}

// Close database connection
$conn->close();
?>


<?php
// Review class
class Review {
    private $reviewsFile = 'reviews.txt';

    // Get all reviews
    public function getReviews() {
        if (file_exists($this->reviewsFile)) {
            $data = file_get_contents($this->reviewsFile);
            return unserialize($data);
        }
        return array();
    }

    // Add a new review
    public function addReview($name, $email, $rating, $comment) {
        $reviews = $this->getReviews();
        
        $newReview = array(
            'id' => count($reviews) + 1,
            'name' => htmlspecialchars($name),
            'email' => htmlspecialchars($email),
            'rating' => intval($rating),
            'comment' => htmlspecialchars($comment),
            'timestamp' => time()
        );
        
        $reviews[] = $newReview;
        file_put_contents($this->reviewsFile, serialize($reviews));
    }

    // Display reviews
    public function displayReviews() {
        $reviews = $this->getReviews();
        if (!empty($reviews)) {
            echo '<div class="reviews">';
            
            // Calculate averages
            $totalRating = 0;
            foreach ($reviews as $review) {
                $totalRating += $review['rating'];
            }
            $averageRating = $totalRating / count($reviews);
            
            echo '<div class="ratings">';
            echo '<p>Average Rating: ' . number_format($averageRating, 1) . '/5</p>';
            echo '</div>';

            foreach ($reviews as $review) {
                echo '<div class="review-item">';
                echo '<h3>' . $review['name'] . '</h3>';
                
                // Display stars
                echo '<div class="stars">';
                for ($i = 1; $i <= $review['rating']; $i++) {
                    echo '<span class="star">★</span>';
                }
                if ($review['rating'] < 5) {
                    for ($i = $review['rating'] + 1; $i <= 5; $i++) {
                        echo '<span class="star">☆</span>';
                    }
                }
                echo '</div>';
                
                echo '<p>' . $review['comment'] . '</p>';
                echo '<small>Posted on: ' . date('jS M Y', $review['timestamp']) . '</small>';
                
                // Helpful counter
                echo '<div class="helpful">';
                echo '<span class="helpful-count">0</span> people found this helpful';
                echo '</div>';
                
                echo '</div>';
            }
            
            echo '</div>';
        } else {
            echo 'No reviews yet. Be the first to review!';
        }
    }

    // Mark a review as helpful
    public function markHelpful($reviewId) {
        $reviews = $this->getReviews();
        
        foreach ($reviews as &$review) {
            if ($review['id'] == $reviewId) {
                $review['helpful']++;
                break;
            }
        }
        
        file_put_contents($this->reviewsFile, serialize($reviews));
    }
}

// Example usage:
if (isset($_POST['submit-review'])) {
    // Validate input
    if (!empty($_POST['name']) && !empty($_POST['email']) && isset($_POST['rating']) && !empty($_POST['comment'])) {
        $review = new Review();
        $review->addReview($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comment']);
    }
}

// Display review form
?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <input type="email" name="email" placeholder="Email Address" required><br>
    <select name="rating">
        <option value="5">★ ★ ★ ★ ★</option>
        <option value="4">★ ★ ★ ★</option>
        <option value="3">★ ★ ★</option>
        <option value="2">★ ★</option>
        <option value="1">★</option>
    </select><br>
    <textarea name="comment" placeholder="Your Review" required></textarea><br>
    <input type="submit" name="submit-review" value="Submit Review">
</form>

<?php
$review = new Review();
$review->displayReviews();
?>


<?php
// Function to handle user reviews
function submit_review($user_id, $product_id, $review_text = "", $rating = 0) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "your_database_name";

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection failed
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input data
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    $rating = mysqli_real_escape_string($conn, $rating);

    // Get current timestamp
    $timestamp = date("Y-m-d H:i:s");

    // SQL query to insert review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating, review_date)
            VALUES ('$user_id', '$product_id', '$review_text', '$rating', '$timestamp')";

    // Execute the query
    if (mysqli_query($conn, $sql)) {
        // Review submitted successfully
        return true;
    } else {
        // Error submitting review
        echo "Error: " . mysqli_error($conn);
        return false;
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $user_id = $_POST['user_id'];
    $product_id = $_POST['product_id'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];

    if (submit_review($user_id, $product_id, $review_text, $rating)) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Sorry, there was an error submitting your review. Please try again.";
    }
}
?>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to add a review
function addReview($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Check if user has already reviewed this product
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id");
    $stmt->execute(['user_id' => $user_id, 'product_id' => $product_id]);
    
    if ($stmt->rowCount() > 0) {
        return "You have already reviewed this product!";
    }
    
    // Insert new review
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
            VALUES (:user_id, :product_id, :rating, :comment, NOW())";
    $stmt = $conn->prepare($sql);
    $result = $stmt->execute([
        'user_id' => $user_id,
        'product_id' => $product_id,
        'rating' => $rating,
        'comment' => $comment
    ]);
    
    if ($result) {
        return "Review added successfully!";
    } else {
        return "Error adding review!";
    }
}

// Function to get reviews for a product
function getProductReviews($product_id) {
    global $conn;
    
    // Get all reviews and user details for the given product
    $sql = "SELECT r.*, u.user_name, u.avatar FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = :product_id 
            ORDER BY review_date DESC";
    
    $stmt = $conn->prepare($sql);
    $stmt->execute(['product_id' => $product_id]);
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = :product_id";
    $stmt = $conn->prepare($sql);
    $stmt->execute(['product_id' => $product_id]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    return $result['average_rating'] ?: 0;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add a new review
    $review_result = addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);
    echo $review_result;
}

// Display reviews for a product
$product_id = 1; // Example product ID
$reviews = getProductReviews($product_id);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .review-container {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        .user-info {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 15px;
        }
        .stars {
            color: #FFD700;
        }
    </style>
</head>
<body>
    <?php if (!empty($reviews)): ?>
        <h2>Product Reviews (<?php echo count($reviews); ?>)</h2>
        
        <?php foreach ($reviews as $review): 
            $average_rating = getAverageRating($product_id);
        ?>
            <div class="review-container">
                <div class="user-info">
                    <img src="<?php echo $review['avatar']; ?>" alt="User Avatar" class="avatar">
                    <h3><?php echo $review['user_name']; ?></h3>
                </div>
                
                <!-- Display stars -->
                <?php 
                function displayStars($rating) {
                    $full_stars = floor($rating);
                    $has_half_star = ($rating - $full_stars) >= 0.5;
                    
                    echo str_repeat('★', $full_stars);
                    if ($has_half_star) {
                        echo '⯨';
                    }
                }
                
                displayStars($review['rating']);
                ?>
                
                <p><?php echo $review['comment']; ?></p>
                <small>Reviewed on: <?php echo date('F j, Y', strtotime($review['review_date'])); ?></small>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <h2>No reviews available</h2>
    <?php endif; ?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function save_review($name, $email, $rating, $comments, $conn) {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $rating = (int)$rating;
    $comments = mysqli_real_escape_string($conn, $comments);

    // Validate input
    if ($name == "" || $email == "") {
        return "Name and email are required.";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Please enter a valid email address.";
    }

    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5 stars.";
    }

    // Insert into database
    $timestamp = date('Y-m-d H:i:s');
    $sql = "INSERT INTO reviews (name, email, rating, comments, created_at)
            VALUES ('$name', '$email', '$rating', '$comments', '$timestamp')";

    if (mysqli_query($conn, $sql)) {
        return "Thank you for your review!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

function get_reviews($conn) {
    $sql = "SELECT * FROM reviews ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            display_review($row);
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }
}

function display_review($review) {
    $rating = str_repeat("★", $review['rating']);
    $date = date('jS F Y, g:i a', strtotime($review['created_at']));

    echo "
        <div class='review'>
            <h3>Reviewer: {$review['name']}</h3>
            <p>Email: {$review['email']}</p>
            <p>Rating: $rating</p>
            <p>Comments: {$review['comments']}</p>
            <small>Reviewed on: $date</small>
        </div>";
}

// Process form submission
if (isset($_POST['submit'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comments = $_POST['comments'];

    $result = save_review($name, $email, $rating, $comments, $conn);
    if ($result === "Thank you for your review!") {
        header("Location: index.php?success=1");
        exit();
    } else {
        echo "<div class='error'>$result</div>";
    }
}

// Display all reviews
get_reviews($conn);

mysqli_close($conn);
?>


<?php
// Initialize reviews array if it doesn't exist
if (!isset($_SESSION)) {
    session_start();
}
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Handle review submission
if (isset($_POST['submit_review'])) {
    $name = htmlspecialchars(trim($_POST['review_name']));
    $reviewText = htmlspecialchars(trim($_POST['review_text']));
    
    if ($name !== "" && $reviewText !== "") {
        // Add new review to the reviews array
        $newReview = array(
            'id' => count($_SESSION['reviews']) + 1,
            'name' => $name,
            'text' => $reviewText,
            'timestamp' => date('Y-m-d H:i:s')
        );
        $_SESSION['reviews'][] = $newReview;
    }
}

// Function to display reviews
function displayReviews() {
    global $reviews;
    
    if (empty($_SESSION['reviews'])) {
        echo "<p>No reviews yet.</p>";
    } else {
        foreach ($_SESSION['reviews'] as $review) {
            echo "<div class='review'>";
            echo "<h4>Review by " . $review['name'] . "</h4>";
            echo "<p>" . $review['text'] . "</p>";
            echo "<small>Posted on " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        h4 {
            color: #333;
            font-size: 16px;
        }
        small {
            color: #666;
        }
    </style>
</head>
<body>
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="review_name">Name:</label><br>
        <input type="text" id="review_name" name="review_name" required><br>
        
        <label for="review_text">Review:</label><br>
        <textarea id="review_text" name="review_text" rows="5" cols="40" required></textarea><br>
        
        <input type="submit" name="submit_review" value="Submit Review">
    </form>

    <h2>Reviews</h2>
    <?php displayReviews(); ?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'review_system';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to insert a review into the database
function insertReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date) 
            VALUES ($userId, $productId, $rating, '$comment', NOW())";
            
    if ($conn->query($sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to get reviews for a product
function getReviews($productId) {
    global $conn;
    
    // Sanitize input
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get all reviews for the specified product
    $sql = "SELECT r.review_id, u.username, r.rating, 
            r.comment, r.review_date 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = $productId 
            ORDER BY r.review_date DESC";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return "No reviews found for this product.";
    }
}

// Function to display reviews
function displayReviews($productId) {
    global $conn;
    
    // Get reviews
    $reviews = getReviews($ productId);
    
    if (is_string($reviews)) {
        echo "<p>" . $reviews . "</p>";
        return;
    }
    
    // Display each review
    while ($row = $reviews->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>Review by: " . $row['username'] . "</h3>";
        echo "<p>" . $row['comment'] . "</p>";
        echo "<div class='rating'>";
        
        // Display stars
        for ($i = 1; $i <= $row['rating']; $i++) {
            echo "<span class='star'>★</span>";
        }
        
        for ($i = $row['rating'] + 1; $i <= 5; $i++) {
            echo "<span class='star'>☆</span>";
        }
        
        echo "</div>";
        echo "<p>Reviewed on: " . $row['review_date'] . "</p>";
        echo "</div><br>";
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming these values are coming from a form
    $userId = $_SESSION['user_id'];
    $productId = $_GET['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['review_comment'];
    
    // Insert the review
    $result = insertReview($userId, $productId, $rating, $comment);
    echo $result;
}

// Display reviews for a product
$product_id = 1; // Example product ID
displayReviews($product_id);

$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to submit a user review
function submitReview($userId, $productId, $rating, $comment, $conn) {
    try {
        // Sanitize inputs
        $userId = mysqli_real_escape_string($conn, $userId);
        $productId = mysqli_real_escape_string($conn, $productId);
        $rating = intval($rating);
        $comment = mysqli_real_escape_string($conn, $comment);

        // Check if rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, review_date)
                VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";

        if (!mysqli_query($conn, $sql)) {
            throw new Exception("Error submitting review: " . mysqli_error($conn));
        }

        // Get the ID of the inserted review
        $reviewId = mysqli_insert_id($conn);

        return array(
            'status' => 'success',
            'message' => 'Review submitted successfully',
            'review_id' => $reviewId
        );

    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Function to get product reviews
function getProductReviews($productId, $conn) {
    try {
        // Sanitize input
        $productId = mysqli_real_escape_string($conn, $productId);

        // Get all reviews for the product
        $sql = "SELECT r.review_id, u.username, r.rating, r.comment, r.review_date
                FROM reviews r
                JOIN users u ON r.user_id = u.user_id
                WHERE r.product_id = '$productId'
                ORDER BY r.review_date DESC";

        $result = mysqli_query($conn, $sql);

        if (!$result) {
            throw new Exception("Error retrieving reviews: " . mysqli_error($conn));
        }

        // Convert result to array of reviews
        $reviews = array();
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = $row;
        }

        return array(
            'status' => 'success',
            'data' => $reviews
        );

    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Function to calculate average rating
function getAverageRating($productId, $conn) {
    try {
        // Sanitize input
        $productId = mysqli_real_escape_string($conn, $productId);

        // Calculate average rating
        $sql = "SELECT AVG(rating) as average_rating
                FROM reviews
                WHERE product_id = '$productId'";

        $result = mysqli_query($conn, $sql);

        if (!$result) {
            throw new Exception("Error calculating average rating: " . mysqli_error($conn));
        }

        $row = mysqli_fetch_assoc($result);
        $averageRating = $row['average_rating'] ?: 0;

        return array(
            'status' => 'success',
            'data' => $averageRating
        );

    } catch (Exception $e) {
        return array(
            'status' => 'error',
            'message' => $e->getMessage()
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Submit review example
    $result = submitReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment'], $conn);
    print_r($result);
} else {
    // Get reviews and average rating example
    $productId = 1; // Replace with actual product ID

    $reviewsResult = getProductReviews($productId, $conn);
    $averageRatingResult = getAverageRating($productId, $conn);

    echo "Reviews:<br>";
    print_r($reviewsResult);
    
    echo "<br>Average Rating:<br>";
    print_r($averageRatingResult);
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = filter_var(trim($_POST['email']), FILTER_VALIDATE_EMAIL);
    $rating = (int)trim($_POST['rating']);
    $review_text = htmlspecialchars(trim($_POST['review_text']));

    if ($name && $email && $rating && $review_text) {
        // Insert review into database
        try {
            $stmt = $conn->prepare("INSERT INTO reviews (user_name, user_email, rating, review_text, created_at) VALUES (?, ?, ?, ?, NOW())");
            $stmt->execute([$name, $email, $rating, $review_text]);

            echo "<p class='success'>Thank you for your review!</p>";
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    } else {
        echo "<p class='error'>Please fill in all required fields.</p>";
    }
}

// Display existing reviews
try {
    $stmt = $conn->query("SELECT * FROM reviews ORDER BY created_at DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    die("Error: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; }
        .review-form { margin-bottom: 30px; }
        .success, .error { color: #fff; padding: 10px; border-radius: 5px; display: block; margin-bottom: 20px; }
        .success { background-color: #4CAF50; }
        .error { background-color: #f44336; }
        .review-item { border-bottom: 1px solid #ddd; padding: 15px 0; }
        .rating-stars span { color: #ffd700; }
    </style>
</head>
<body>

<h2>Leave a Review</h2>
<div class="review-form">
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="">Select rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select>
        </div>

        <div>
            <label for="review_text">Review:</label><br>
            <textarea id="review_text" name="review_text" rows="4" required></textarea>
        </div>

        <button type="submit">Submit Review</button>
    </form>
</div>

<h2>Reviews</h2>
<?php foreach ($reviews as $review): ?>
<div class="review-item">
    <div><strong><?php echo htmlspecialchars($review['user_name']); ?></strong> - <?php echo substr($review['user_email'], 0, strpos($review['user_email'], '@')) . '@...'; ?></div>
    <div class="rating-stars">
        <?php 
        $stars = str_repeat("<span>&#9733;</span>", (int)$review['rating']);
        echo $stars; 
        ?>
    </div>
    <div><?php echo htmlspecialchars($review['review_text']); ?></div>
    <div>Posted on: <?php echo date('M j, Y g:i a', strtotime($review['created_at'])); ?></div>
</div>
<?php endforeach; ?>

</body>
</html>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "review_db";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Process review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validate input
    if ($name == "" || $comment == "") {
        echo "Please fill in all required fields!";
    } elseif ($rating < 1 || $rating > 5) {
        echo "Rating must be between 1 and 5!";
    } else {
        // Insert into database
        $sql = "INSERT INTO reviews (user_name, rating, comment, review_date)
                VALUES (?, ?, ?, CURRENT_TIMESTAMP)";
        
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "sii", $name, $rating, $comment);
        
        if (mysqli_stmt_execute($stmt)) {
            echo "Thank you for your review!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Display reviews
$sql = "SELECT * FROM reviews ORDER BY review_date DESC";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
        echo get_stars_html($row['rating']);
        echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
        echo "<small>Posted on: " . format_date($row['review_date']) . "</small>";
        echo "</div>";
    }
} else {
    echo "No reviews yet!";
}

// Helper function for stars
function get_stars_html($rating) {
    $html = "";
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $html .= "<span class='star'>★</span>";
        } else {
            $html .= "<span class='star'>☆</span>";
        }
    }
    return $html;
}

// Helper function for date formatting
function format_date($date_str) {
    $date = new DateTime($date_str);
    return $date->format('F j, Y g:i a');
}

mysqli_close($conn);
?>

<!-- HTML Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <select name="rating" required>
        <option value="">Rating</option>
        <option value="5">★ ★ ★ ★ ★</option>
        <option value="4">★ ★ ★ ★</option>
        <option value="3">★ ★ ★</option>
        <option value="2">★ ★</option>
        <option value="1">★</option>
    </select><br>
    <textarea name="comment" placeholder="Your Review" required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<style>
.review {
    margin: 20px;
    padding: 15px;
    border: 1px solid #ddd;
    background-color: #f9f9f9;
}

.star {
    color: orange;
    font-size: 24px;
}
</style>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

// Connect to database
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

// Function to handle user reviews
function user_review($action = '', $admin = false) {
    global $mysqli;
    
    // Create table if not exists
    $sql = "CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        review TEXT,
        date DATETIME
    )";
    $mysqli->query($sql);

    switch ($action) {
        case 'add':
            // Add a new review
            if (isset($_POST['name']) && isset($_POST['review'])) {
                $name = mysqli_real_escape_string($mysqli, $_POST['name']);
                $review = mysqli_real_escape_string($mysqli, $_POST['review']);
                
                $stmt = $mysqli->prepare("INSERT INTO reviews (name, review, date) VALUES (?, ?, NOW())");
                $stmt->bind_param("ss", $name, $review);
                $stmt->execute();
                $stmt->close();

                header("Location: ?added=1");
                exit;
            }
            break;

        case 'delete':
            // Delete a review (admin only)
            if ($admin && isset($_GET['delete_id'])) {
                $id = mysqli_real_escape_string($mysqli, $_GET['delete_id']);
                
                $stmt = $mysqli->prepare("DELETE FROM reviews WHERE id = ?");
                $stmt->bind_param("i", $id);
                $stmt->execute();
                $stmt->close();

                header("Location: ?deleted=1");
                exit;
            }
            break;

        default:
            // Display all reviews
            $sql = "SELECT * FROM reviews ORDER BY date DESC";
            $result = $mysqli->query($sql);

            if ($result) {
                while ($row = mysqli_fetch_assoc($result)) {
                    echo "<div class='review'>";
                    echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
                    echo "<p>" . htmlspecialchars($row['review']) . "</p>";
                    echo "<small>" . date('F j, Y g:i a', strtotime($row['date'])) . "</small>";
                    
                    // Show delete button if admin
                    if ($admin) {
                        echo "<a href='?action=delete&delete_id=" . $row['id'] . "' class='delete-btn'>Delete</a>";
                    }
                    
                    echo "</div>";
                }
                mysqli_free_result($result);
            }
    }
}

// Display review form and styling
echo <<< EOT
<style>
.review {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
}
.delete-btn {
    color: red;
    text-decoration: none;
}
</style>

EOT;

if (isset($_GET['added'])) {
    echo "<p>Review added successfully!</p>";
} elseif (isset($_GET['deleted'])) {
    echo "<p>Review deleted successfully!</p>";
}

// Display review form
echo <<< EOT
<form action="?action=add" method="post">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <textarea name="review" placeholder="Write your review..." required></textarea><br>
    <button type="submit">Submit Review</button>
</form>

EOT;

// Display all reviews
user_review('', $admin = false); // Set admin to true if user is logged in as admin

?>


user_review();


user_review('add');


user_review('delete', true);


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Get form data
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        // Sanitize input
        $rating = intval($rating);
        $comment = htmlspecialchars(strip_tags($comment));
        
        // Validate input
        if ($rating < 1 || $rating > 5) {
            echo "Invalid rating. Please select a rating between 1 and 5.";
            return;
        }
        
        if (empty($comment)) {
            echo "Please enter your review comment.";
            return;
        }
        
        // Insert into database
        $sql = "INSERT INTO reviews (rating, comment) VALUES (?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("is", $rating, $comment);
        
        if ($stmt->execute()) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT rating, comment, DATE_FORMAT(date_added, '%M %d, %Y') as date FROM reviews";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        echo "<div class='reviews'>";
        while($row = $result->fetch_assoc()) {
            // Display rating stars
            $stars = str_repeat("★", $row['rating']);
            
            // Display review content
            echo "<div class='review'>";
            echo "<p class='rating'>$stars</p>";
            echo "<p class='comment'>" . htmlspecialchars($row['comment']) . "</p>";
            echo "<p class='date'>" . $row['date'] . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "No reviews available yet.";
    }
}

// Close database connection
$conn->close();
?>



<?php displayReviews(); ?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Review System</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .review-form {
            margin-bottom: 30px;
        }

        .review-box {
            background-color: #f9f9f9;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 5px;
        }

        .rating-stars {
            font-size: 24px;
            color: gold;
        }
    </style>
</head>
<body>

<?php
session_start();

// Initialize reviews array if it doesn't exist
if (!isset($_SESSION['reviews'])) {
    $_SESSION['reviews'] = array();
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $rating = intval($_POST['rating']);
    $comment = trim($_POST['comment']);

    if (empty($name) || empty($email) || empty($comment)) {
        echo "<div style='color: red; margin-bottom: 20px;'>All fields are required!</div>";
    } else {
        // Create a new review array
        $new_review = array(
            'id' => count($_SESSION['reviews']) + 1,
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'timestamp' => time()
        );

        // Add the new review to the array
        $_SESSION['reviews'][] = $new_review;

        // Redirect back to the same page to show updated reviews
        header("Location: " . $_SERVER["PHP_SELF"]);
        exit();
    }
}

// Display all reviews
function display_reviews() {
    global $rating;
    if (!isset($_SESSION['reviews']) || empty($_SESSION['reviews'])) {
        echo "<p>No reviews yet. Be the first to review!</p>";
    } else {
        foreach ($_SESSION['reviews'] as $review) {
            $timestamp = date('F j, Y g:i a', $review['timestamp']);
            $time_ago = time_ago($review['timestamp']);

            echo "<div class='review-box'>";
            echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
            echo "<p><strong>Email:</strong> " . htmlspecialchars($review['email']) . "</p>";
            echo "<div class='rating-stars'>";
            for ($i = 1; $i <= $review['rating']; $i++) {
                echo "★";
            }
            for ($i = 1; $i <= (5 - $review['rating']); $i++) {
                echo "☆";
            }
            echo "</div>";
            echo "<p>" . htmlspecialchars($review['comment']) . "</p>";
            echo "<small>Reviewed on $timestamp ($time_ago)</small>";
            echo "</div>";
        }
    }
}

// Helper function to display time since review was posted
function time_ago($timestamp) {
    $current_time = time();
    $difference = $current_time - $timestamp;

    if ($difference < 60) {
        return "Just now";
    } elseif ($difference < 3600) {
        return floor($difference / 60) . " minutes ago";
    } elseif ($difference < 86400) {
        return floor($difference / 3600) . " hours ago";
    } else {
        return floor($difference / 86400) . " days ago";
    }
}
?>

<div class="review-container">
    <h1>Product Review</h1>

    <!-- Review Form -->
    <div class="review-form">
        <form method="POST" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating">
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5" selected>5 Stars</option>
            </select><br><br>

            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" required></textarea><br><br>

            <input type="submit" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <?php display_reviews(); ?>
</div>

</body>
</html>


<?php
$reviewsFile = 'reviews.json';

// Function to handle and display reviews
function userReview($reviewsFile) {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = htmlspecialchars($_POST['username']);
        $comment = htmlspecialchars($_POST['comment']);
        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;

        // Validate rating between 1 and 5
        if ($rating < 1 || $rating > 5) {
            $rating = 0; // Handle invalid ratings as needed
        }

        // Review data
        $review = array(
            'username' => $username,
            'comment' => $comment,
            'rating' => $rating,
            'date' => date('Y-m-d H:i:s')
        );

        // Load existing reviews or initialize an empty array
        if (file_exists($reviewsFile)) {
            $reviews = json_decode(file_get_contents($reviewsFile), true);
        } else {
            $reviews = array();
        }

        // Add new review
        array_push($reviews, $review);

        // Save back to file
        $jsonContent = json_encode($reviews, JSON_PRETTY_PRINT);
        file_put_contents($reviewsFile, $jsonContent);
    }

    // Load reviews for display
    if (file_exists($reviewsFile)) {
        $reviews = json_decode(file_get_contents($reviewsFile), true);
    } else {
        $reviews = array();
    }

    // Calculate average rating
    $averageRating = 0;
    $totalRatings = 0;

    foreach ($reviews as $review) {
        $totalRatings += $review['rating'];
    }

    if (count($reviews) > 0) {
        $averageRating = $totalRatings / count($reviews);
    } else {
        $averageRating = 0;
    }

    // Display average rating
    echo "<h3>Rating: " . number_format($averageRating, 1) . "/5</h3>";

    // Display each review
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h4>" . $review['username'] . "</h4>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']) . "</p>";
        echo "<p>" . $review['comment'] . "</p>";
        echo "<small>Posted on: " . $review['date'] . "</small>";
        echo "</div>";
    }
}

// Call the function
userReview($reviewsFile);
?>


<?php
// Database connection parameters
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;

    // Validate input
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        throw new Exception("Rating must be between 1 and 5");
    }
    
    if (empty($comment)) {
        throw new Exception("Comment cannot be empty");
    }

    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment)
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";

    if (!mysqli_query($conn, $sql)) {
        throw new Exception("Error adding review: " . mysqli_error($conn));
    }

    return true;
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;

    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.user_id 
            WHERE r.product_id = '$product_id' 
            ORDER BY r.review_date DESC";

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        throw new Exception("Error fetching reviews: " . mysqli_error($conn));
    }

    return $result;
}

// Function to calculate average rating for a product
function get_average_rating($product_id) {
    global $conn;

    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Calculate average rating
    $sql = "SELECT AVG(rating) as average 
            FROM reviews 
            WHERE product_id = '$product_id'";

    $result = mysqli_query($conn, $sql);

    if (!$result) {
        throw new Exception("Error calculating average rating: " . mysqli_error($conn));
    }

    $row = mysqli_fetch_assoc($result);
    return round($row['average'], 1); // Round to one decimal place
}

// Example usage:

try {
    // Add a review
    add_review(1, 101, 4, "Great product!");

    // Get reviews for product ID 101
    $reviews = get_reviews(101);
    
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo "User: " . $row['username'] . "<br>";
        echo "Rating: " . $row['rating'] . "/5<br>";
        echo "Comment: " . $row['comment'] . "<br>";
        echo "Date: " . $row['review_date'] . "<br><br>";
    }

    // Get average rating for product ID 101
    $average_rating = get_average_rating(101);
    echo "Average Rating: " . $average_rating . "/5";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Close database connection
mysqli_close($conn);
?>


<?php
class ReviewSystem {
    private $dbHost = 'localhost';
    private $dbName = 'reviews_db';
    private $dbUser = 'root';
    private $dbPass = '';

    private $connection;

    public function __construct() {
        $this->connectDB();
    }

    // Database connection
    private function connectDB() {
        try {
            $this->connection = new mysqli($this->dbHost, $this->dbUser, $this->dbPass, $this->dbName);
        } catch (mysqli_sql_exception $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }

    // Get all reviews
    public function getReviews() {
        $reviews = array();
        
        if ($result = $this->connection->query("SELECT * FROM reviews ORDER BY review_date DESC")) {
            while ($row = $result->fetch_assoc()) {
                $reviews[] = array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'rating' => $row['rating'],
                    'content' => $row['content'],
                    'date' => date('Y-m-d H:i:s', strtotime($row['review_date']))
                );
            }
            $result->close();
        }

        return $reviews;
    }

    // Add new review
    public function addReview($name, $rating, $content) {
        if (empty($name)) {
            return "Name is required!";
        }
        if (!isset($rating) || $rating < 1 || $rating > 5) {
            return "Please select a valid rating!";
        }
        if (empty($content)) {
            return "Review content cannot be empty!";
        }

        try {
            $stmt = $this->connection->prepare("INSERT INTO reviews (name, rating, content, review_date) VALUES (?, ?, ?, NOW())");
            $stmt->bind_param("sii", $name, $rating, $content);
            if ($stmt->execute()) {
                return "Review added successfully!";
            }
            return "Error adding review!";
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        } finally {
            $stmt->close();
        }
    }

    // Display reviews
    public function displayReviews() {
        $reviews = $this->getReviews();

        if (!empty($reviews)) {
            foreach ($reviews as $review) {
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['name']) . "</h3>";
                echo "<div class='rating'>" . $this->getStars($review['rating']) . "</div>";
                echo "<p>" . nl2br(htmlspecialchars($review['content'])) . "</p>";
                echo "<small>Posted on: " . $review['date'] . "</small>";
                echo "</div><hr>";
            }
        } else {
            echo "No reviews yet!";
        }
    }

    // Helper function to display stars
    private function getStars($rating) {
        $stars = '';
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                $stars .= "<span class='star'>★</span>";
            } else {
                $stars .= "<span class='star'>☆</span>";
            }
        }
        return $stars;
    }

    // Close database connection
    public function __destruct() {
        if ($this->connection != null) {
            $this->connection->close();
        }
    }
}

// Usage example:
$reviewSystem = new ReviewSystem();

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = $reviewSystem->addReview($_POST['name'], $_POST['rating'], $_POST['content']);
    echo "<script>alert('{$result}');</script>";
}

$reviewSystem->displayReviews();
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submit_review($name, $email, $rating, $comments) {
    global $conn;
    
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags(trim($name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $rating = intval($rating);
    $comments = htmlspecialchars(strip_tags(trim($comments)));
    
    if(empty($name) || empty($email) || empty($rating)) {
        return "Please fill in all required fields.";
    }
    
    try {
        // Prepare and execute the SQL statement
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comments, review_date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->execute([$name, $email, $rating, $comments]);
        
        return "Review submitted successfully!";
    } catch(PDOException $e) {
        return "Error submitting review: " . $e->getMessage();
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    try {
        // Retrieve reviews from the database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY review_date DESC");
        
        // Check if any reviews exist
        if($stmt->rowCount() == 0) {
            return "No reviews available.";
        }
        
        // Display each review
        $output = "<div class='reviews'>";
        foreach($stmt as $row) {
            $output .= "<div class='review'>";
            $output .= "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            $output .= "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            $output .= "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            $output .= "<p>Comments: " . htmlspecialchars($row['comments']) . "</p>";
            $output .= "<small>" . date('F j, Y', strtotime($row['review_date'])) . "</small>";
            $output .= "</div>";
        }
        $output .= "</div>";
        
        return $output;
    } catch(PDOException $e) {
        return "Error displaying reviews: " . $e->getMessage();
    }
}
?>


<?php include('display_reviews.php') ?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
        h3 {
            color: #333;
            font-size: 18px;
        }
        p {
            color: #666;
            line-height: 1.5;
        }
        small {
            color: #999;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <?php echo display_reviews() ?>
</body>
</html>


<?php
include('database.php');

if(isset($_POST['name']) && isset($_POST['email']) && isset($_POST['rating'])) {
    $result = submit_review($_POST['name'], $_POST['email'], $_POST['rating'], $_POST['comments']);
    echo $result;
} else {
    echo "Invalid request.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Assuming user authentication is handled elsewhere
    session_start();
    if (!isset($_SESSION['user_id'])) {
        die(json_encode(['error' => 'Please log in to submit a review.']));
    }

    $productId = 1; // Replace with actual product ID handling
    $userId = $_SESSION['user_id'];
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars($_POST['comment'], ENT_QUOTES);

    if ($rating < 1 || $rating > 5) {
        die(json_encode(['error' => 'Please select a valid rating.']));
    }

    // Insert review
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->execute([$productId, $userId, $rating, $comment]);

    // Generate response HTML
    $response = "<div class='review'>";
    $response .= "<div class='stars'>";
    for ($i = 1; $i <= $rating; $i++) {
        $response .= "<span class='star'>★</span>";
    }
    $response .= str_repeat("<span class='star' style='color: #cccccc;'>★</span>", 5 - $rating);
    $response .= "</div>";
    $response .= "<p>".$comment."</p>";
    $response .= "<small>Posted by User ".date('F j, Y')."</small>";
    $response .= "</div>";

    echo json_encode(['success' => true, 'html' => $response]);

} catch(PDOException $e) {
    die(json_encode(['error' => 'Error submitting review: '.$e->getMessage()]));
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Replace with actual product ID
    $productId = 1;

    // Fetch reviews
    $stmt = $conn->query("SELECT * FROM reviews WHERE product_id = $productId ORDER BY created_at DESC");
    $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    if (empty($reviews)) {
        echo '<p>No reviews available yet.</p>';
        exit;
    }

    foreach ($reviews as $review) {
        $response .= "<div class='review'>";
        $response .= "<div class='stars'>";
        for ($i = 1; $i <= $review['rating']; $i++) {
            $response .= "<span class='star'>★</span>";
        }
        $response .= str_repeat("<span class='star' style='color: #cccccc;'>★</span>", 5 - $review['rating']);
        $response .= "</div>";
        $response .= "<p>".$review['comment']."</p>";
        $response .= "<small>Posted by User ".date('F j, Y', strtotime($review['created_at']))."</small>";
        $response .= "</div>";
    }

    echo $response;

} catch(PDOException $e) {
    die('Error loading reviews: '.$e->getMessage());
}
?>


// In your login script:
session_start();
$_SESSION['user_id'] = $userId;


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Function to add a new review
function submitReview($productId, $userId, $rating, $comment) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, htmlspecialchars(trim($comment)));
    
    // Validate input
    if ($rating < 1 || $rating > 5) {
        return 'Invalid rating. Please choose a rating between 1 and 5.';
    }
    if (empty($comment)) {
        return 'Comment cannot be empty.';
    }
    
    // Get current timestamp
    $timestamp = time();
    
    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, timestamp) 
            VALUES (?, ?, ?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "iisss", $productId, $userId, $rating, $comment, $timestamp);
        if (mysqli_stmt_execute($stmt)) {
            return 'Review submitted successfully!';
        } else {
            return 'Error submitting review: ' . mysqli_error($conn);
        }
    } else {
        return 'Error preparing statement: ' . mysqli_error($conn);
    }
}

// Function to display reviews for a product
function getReviews($productId) {
    global $conn;
    
    // Get all reviews for the specified product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $productId);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo '<div class="review">';
            echo '<h3>Rating: ' . str_repeat('★', $row['rating']) . '</h3>';
            echo '<p>' . htmlspecialchars($row['comment'], ENT_QUOTES) . '</p>';
            echo '<small>Posted on: ' . date('F j, Y, g:i a', $row['timestamp']) . '</small>';
            echo '</div>';
        }
    } else {
        return 'Error preparing statement: ' . mysqli_error($conn);
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    // Assuming you have user authentication
    $productId = intval($_GET['product_id']);
    $userId = $_SESSION['user_id'];
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = $_POST['comment'];
    
    $result = submitReview($productId, $userId, $rating, $comment);
    echo $result;
}

// Display reviews for product ID 1
getReviews(1);

// Close database connection
mysqli_close($conn);
?>


<?php
function submit_review($user_id, $product_id, $rating, $comments) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Create a new database connection
    $conn = mysqli_connect($host, $username, $password, $database);

    // Check if connection was successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to insert review into the reviews table
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comments)
            VALUES (?, ?, ?, ?)";

    // Prepare the statement
    $stmt = mysqli_prepare($conn, $sql);

    // Bind parameters to the statement
    mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $rating, $comments);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        // Close the statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return true; // Review submitted successfully
    } else {
        // Close the statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);
        return false; // Error submitting review
    }
}
?>


// Example usage:
$user_id = 1;
$product_id = 101;
$rating = 5;
$comments = "Great product! Highly recommended.";

if (submit_review($user_id, $product_id, $rating, $comments)) {
    echo "Review submitted successfully!";
} else {
    echo "Error submitting review.";
}


<?php
// Connect to database (replace with your own credentials)
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function submitReview($name, $rating, $comment, $conn) {
    // Sanitize input
    $name = htmlspecialchars(strip_tags(trim($name)));
    $comment = htmlspecialchars(strip_tags(trim($comment)));
    
    // Check if inputs are valid
    if ($name == "" || $comment == "") {
        return "Please fill in all required fields.";
    }
    
    // Insert review into database
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (name, rating, comment, date) VALUES (?, ?, ?, NOW())");
    mysqli_stmt_bind_param($stmt, "sis", $name, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function displayReviews($conn) {
    // Retrieve reviews from database
    $result = mysqli_query($conn, "SELECT * FROM reviews ORDER BY date DESC");
    
    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['date'])) . "</small>";
            echo "</div>";
        }
        echo "</div>";
        
        // Calculate and display average rating
        $average_rating = mysqli_query($conn, "SELECT AVG(rating) AS avg FROM reviews");
        $avg_row = mysqli_fetch_assoc($average_rating);
        echo "<p class='average-rating'>Average Rating: " . number_format($avg_row['avg'], 1) . "/5</p>";
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
require_once 'review_functions.php';

// Get form data
$name = $_POST['name'];
$rating = $_POST['rating'];
$comment = $_POST['comment'];

// Submit review
$conn = mysqli_connect($host, $username, $password, $database);
$result = submitReview($name, $rating, $comment, $conn);

echo $result;

?>


<?php
require_once 'review_functions.php';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

// Display all reviews
displayReviews($conn);

// Close connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($productId, $userName, $userEmail, $rating, $reviewText) {
    global $conn;
    
    // Sanitize input data
    $userName = htmlspecialchars(strip_tags(trim($userName)));
    $userEmail = htmlspecialchars(strip_tags(trim($userEmail)));
    $reviewText = htmlspecialchars(strip_tags(trim($reviewText)));
    
    try {
        // Insert review into database
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, review_text) 
                              VALUES (:productId, :userName, :userEmail, :rating, :reviewText)");
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':userName', $userName);
        $stmt->bindParam(':userEmail', $userEmail);
        $stmt->bindParam(':rating', $rating);
        $stmt->bindParam(':reviewText', $reviewText);
        
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    } catch(PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to get reviews for a product
function getReviews($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = :productId ORDER BY timestamp DESC");
        $stmt->bindParam(':productId', $productId);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error fetching reviews: " . $e->getMessage();
        return false;
    }
}

// Function to display review form
function displayReviewForm($productId) {
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
    
    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
    </div>

    <div class="form-group">
        <label for="rating">Rating:</label>
        <select id="rating" name="rating" required>
            <option value="">Choose a rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
    </div>

    <div class="form-group">
        <label for="review">Review:</label>
        <textarea id="review" name="review" rows="5" required></textarea>
    </div>

    <button type="submit" name="submit_review">Submit Review</button>
</form>
<?php
}

// Function to display reviews
function displayReviews($productId) {
    $reviews = getReviews($productId);
    
    if ($reviews !== false && count($reviews) > 0) {
        echo "<div class='reviews'>";
        foreach ($reviews as $review) {
            $ratingStars = str_repeat("★", $review['rating']);
            $ratingStars .= str_repeat("☆", 5 - $review['rating']);
            
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    echo "<span class='user-name'>" . $review['user_name'] . "</span>";
                    echo "<div class='rating'>$ratingStars</div>";
                    echo "<small class='timestamp'>" . date('F j, Y g:i a', strtotime($review['timestamp'])) . "</small>";
                echo "</div>";
                echo "<p class='review-text'>" . $review['review_text'] . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }
}

// Process submitted review
if (isset($_POST['submit_review'])) {
    $productId = $_POST['product_id'];
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $reviewText = $_POST['review'];

    if (submitReview($productId, $name, $email, $rating, $reviewText)) {
        echo "<div class='success-message'>Thank you for your review!</div>";
    } else {
        echo "<div class='error-message'>Error submitting review. Please try again.</div>";
    }
}

// Display review form and reviews
?>



<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function addReview($user_name, $email, $review_text, $rating, $conn) {
    // Sanitize inputs
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $email = mysqli_real_escape_string($conn, $email);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    
    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_name, email, review_text, rating, submission_date) 
            VALUES ('$user_name', '$email', '$review_text', $rating, NOW())";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['user_name']) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews found.</p>";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and process input
    $user_name = $_POST['name'];
    $email = $_POST['email'];
    $review_text = $_POST['review'];
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    
    if ($rating < 1 || $rating > 5) {
        echo "Please select a valid rating (1-5 stars).";
    } else {
        addReview($user_name, $email, $review_text, $rating, $conn);
    }
}

// Display review form
echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
echo "<div>";
echo "<label for='name'>Name:</label><br>";
echo "<input type='text' id='name' name='name' required><br>";
echo "</div>";

echo "<div>";
echo "<label for='email'>Email:</label><br>";
echo "<input type='email' id='email' name='email' required><br>";
echo "</div>";

echo "<div>";
echo "<label for='review'>Review:</label><br>";
echo "<textarea id='review' name='review' rows='5' cols='40' required></textarea><br>";
echo "</div>";

echo "<div>";
echo "<label>Rating:</label><br>";
for ($i = 1; $i <= 5; $i++) {
    echo "<input type='radio' name='rating' value='$i'> $i stars<br>";
}
echo "</div>";

echo "<input type='submit' value='Submit Review'>";
echo "</form>";

// Display existing reviews
displayReviews($conn);

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

function display_review_form() {
    // Initialize reviews array if not set
    if (!isset($_SESSION['reviews'])) {
        $_SESSION['reviews'] = array();
    }
    
    // Check if form was submitted
    $submitted = isset($_POST['submit']);
    $errors = array();
    $success_message = '';
    
    if ($submitted) {
        // Validate input
        $name = trim($_POST['name']);
        $rating = $_POST['rating'];
        $comment = trim($_POST['comment']);
        
        if (empty($name)) {
            $errors[] = "Please enter your name.";
        } elseif (strlen($name) < 2) {
            $errors[] = "Name must be at least 2 characters long.";
        }
        
        if (!isset($rating) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
            $errors[] = "Please select a rating between 1 and 5 stars.";
        }
        
        if (empty($comment)) {
            $errors[] = "Please enter your comment.";
        } elseif (strlen($comment) < 5) {
            $errors[] = "Comment must be at least 5 characters long.";
        }
        
        // If no errors, process the review
        if (empty($errors)) {
            $review_id = count($_SESSION['reviews']) + 1;
            $timestamp = date('Y-m-d H:i:s');
            
            $new_review = array(
                'id' => $review_id,
                'name' => $name,
                'rating' => $rating,
                'comment' => $comment,
                'timestamp' => $timestamp
            );
            
            $_SESSION['reviews'][] = $new_review;
            $success_message = "Thank you for submitting your review!";
        }
    }
    
    // Display the form and reviews
    ?>
    <html>
    <head>
        <title>Product Review</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
            }
            .review-form {
                background-color: #f5f5f5;
                padding: 20px;
                border-radius: 5px;
                margin-bottom: 20px;
            }
            .review-list {
                margin-top: 20px;
            }
            .review-item {
                margin-bottom: 15px;
                padding: 15px;
                background-color: #fff;
                border: 1px solid #ddd;
                border-radius: 3px;
            }
        </style>
    </head>
    <body>
        <h1>Product Review</h1>
        
        <?php if ($submitted && empty($errors)): ?>
            <div style="color: green; margin-bottom: 10px;">
                <?php echo $success_message; ?>
            </div>
        <?php endif; ?>
        
        <?php if (!empty($errors)): ?>
            <div style="color: red; margin-bottom: 10px;">
                <?php foreach ($errors as $error): ?>
                    <p><?php echo htmlspecialchars($error); ?></p>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
        
        <div class="review-form">
            <h2>Submit a Review</h2>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <div style="margin-bottom: 10px;">
                    <label for="name">Name:</label><br>
                    <input type="text" id="name" name="name" value="<?php echo htmlspecialchars($name ?? ''); ?>" required>
                </div>
                
                <div style="margin-bottom: 10px;">
                    <label for="rating">Rating:</label><br>
                    <select id="rating" name="rating">
                        <?php for ($i = 1; $i <= 5; $i++): ?>
                            <option value="<?php echo $i; ?>" <?php if (isset($rating) && $rating == $i) { echo 'selected'; } ?>>
                                <?php echo $i; ?> Star<?php echo ($i != 1) ? 's' : ''; ?>
                            </option>
                        <?php endfor; ?>
                    </select>
                </div>
                
                <div style="margin-bottom: 10px;">
                    <label for="comment">Comment:</label><br>
                    <textarea id="comment" name="comment" rows="5"><?php echo htmlspecialchars($comment ?? ''); ?></textarea>
                </div>
                
                <button type="submit" name="submit">Submit Review</button>
            </form>
        </div>

        <?php if (!empty($_SESSION['reviews'])): ?>
            <div class="review-list">
                <h2>Customer Reviews</h2>
                <?php foreach ($_SESSION['reviews'] as $review): ?>
                    <div class="review-item">
                        <div style="margin-bottom: 5px;">
                            <strong><?php echo htmlspecialchars($review['name']); ?></strong><br>
                            <?php
                                // Display stars using HTML entities
                                for ($i = 1; $i <= $review['rating']; $i++) {
                                    echo "★ ";
                                }
                                for ($i = $review['rating'] + 1; $i <=5; $i++) {
                                    echo "☆ ";
                                }
                            ?>
                        </div>
                        <p><?php echo htmlspecialchars($review['comment']); ?></p>
                        <small style="color: #666;">
                            Posted on <?php echo date('F j, Y', strtotime($review['timestamp'])); ?>
                        </small>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </body>
    </html>
    <?php
}

// Call the function to display the form and reviews
display_review_form();
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to submit a review
function submitReview($name, $email, $review_text, $rating) {
    global $conn;

    // Validate input fields
    if (empty($name) || empty($email) || empty($review_text)) {
        return 'Please fill in all required fields.';
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return 'Please enter a valid email address.';
    }

    // Sanitize inputs to prevent SQL injection
    $name = htmlspecialchars(strip_tags(trim($name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $review_text = htmlspecialchars(strip_tags(trim($review_text)));

    if ($rating < 1 || $rating > 5) {
        return 'Rating must be between 1 and 5 stars.';
    }

    // Insert review into database
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, review_text, rating, created_at) 
                              VALUES (:name, :email, :review_text, :rating, NOW())");
        
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':review_text', $review_text);
        $stmt->bindParam(':rating', $rating);

        $stmt->execute();

        return 'Review submitted successfully!';
    } catch(PDOException $e) {
        return 'Error submitting review: ' . $e->getMessage();
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;

    try {
        // Fetch all reviews from database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY created_at DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($reviews)) {
            echo '<p>No reviews available.</p>';
            return;
        }

        // Display each review
        foreach ($reviews as $review) {
            echo '<div class="review">';
            echo '<h3>' . $review['name'] . '</h3>';
            echo '<p>Rating: ' . str_repeat('★', $review['rating']) . '</p>';
            echo '<p>' . $review['review_text'] . '</p>';
            echo '<small>Posted on: ' . date('F j, Y', strtotime($review['created_at'])) . '</small>';
            echo '</div>';
        }
    } catch(PDOException $e) {
        echo 'Error displaying reviews: ' . $e->getMessage();
    }
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function submitReview() {
    global $conn;

    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $rating = $_POST['rating'];
    $comments = $_POST['comments'];

    // Validate input
    if (empty($name) || empty($email) || empty($rating)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // SQL injection prevention
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $comments = mysqli_real_escape_string($conn, $comments);

    // Insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comments) 
            VALUES ('$name', '$email', '$rating', '$comments')";

    if ($conn->query($sql) === TRUE) {
        echo "Thank you for submitting your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

function displayReviews() {
    global $conn;

    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>Review #" . $row['id'] . "</h3>";
            echo "<p><strong>Name:</strong> " . $row['name'] . "</p>";
            echo "<p><strong>Email:</strong> " . substr($row['email'], 0, -5) . "*****</p>"; // Mask email
            echo "<p><strong>Rating:</strong> " . str_repeat("★", $row['rating']) . "</p>";
            echo "<p><strong>Comments:</strong> " . $row['comments'] . "</p>";
            echo "<p><em>" . $row['date'] . "</em></p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            margin: 10px;
            padding: 15px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }
        h3 {
            color: #333;
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "POST") { 
        submitReview();
    } else { ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select a rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>

            <label for="comments">Comments:</label><br>
            <textarea id="comments" name="comments" required></textarea><br>

            <input type="submit" value="Submit Review">
        </form>
    <?php } ?>

    <h2>Previous Reviews</h2>
    <?php displayReviews(); ?>
</body>
</html>


<?php
function create_user_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $username = 'your_username';
    $password = 'your_password';
    $database = 'your_database';

    try {
        // Create database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to insert review into the database
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                VALUES ('$user_id', '$product_id', '$rating', '$comment', NOW())";

        if ($conn->query($sql) === TRUE) {
            // Return true if review was successfully added
            return true;
        } else {
            // Display error message if insertion failed
            echo "Error: " . $sql . "<br>" . $conn->error;
            return false;
        }

        // Close database connection
        $conn->close();
    } catch (Exception $e) {
        // Handle any exceptions and display an error message
        echo "An error occurred while submitting your review: " . $e->getMessage();
        return false;
    }
}

// Example usage:
$user_id = 1;     // Replace with actual user ID
$product_id = 5;   // Replace with actual product ID
$rating = 4;       // Rating between 1 and 5 stars
$comment = "This is a great product!"; 

if (create_user_review($user_id, $product_id, $rating, $comment)) {
    echo "Thank you for your review!";
} else {
    echo "Sorry, there was an error submitting your review.";
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
    // Validate and sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = (int) $_POST['rating'];
    $comments = htmlspecialchars(trim($_POST['comments']));

    if (empty($name) || empty($comments)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    // Insert review into the database
    $stmt = $pdo->prepare('INSERT INTO reviews (name, email, rating, comments, created_at) VALUES (?, ?, ?, ?, NOW())');
    $stmt->execute([$name, $email, $rating, $comments]);

    if ($stmt->rowCount() > 0) {
        echo "Thank you for submitting your review!";
    } else {
        die("There was an error submitting your review.");
    }
}

// Display the review form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review-form { max-width: 600px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input, textarea { width: 100%; padding: 8px; margin-top: 5px; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
    </style>
</head>
<body>
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Choose a rating</option>
                    <option value="5">5 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="2">2 Stars</option>
                    <option value="1">1 Star</option>
                </select>
            </div>

            <div class="form-group">
                <label for="comments">Comments:</label><br>
                <textarea id="comments" name="comments" rows="5" required></textarea>
            </div>

            <button type="submit" name="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display existing reviews -->
    <?php
    $reviewsStmt = $pdo->query('SELECT * FROM reviews ORDER BY created_at DESC');
    while ($review = $reviewsStmt->fetch(PDO::FETCH_ASSOC)) {
        echo "<div style='margin: 20px auto; padding: 15px; border: 1px solid #ddd;'>";
        echo "<h3>{$review['name']}</h3>";
        echo "<p>Rating: {$review['rating']} stars</p>";
        echo "<p>Comments: {$review['comments']}</p>";
        echo "<small>Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "</small>";
        echo "</div>";
    }
    ?>
</body>
</html>


<?php
// Function to display user reviews
function display_reviews($product_id) {
    // Connect to database
    $connection = mysqli_connect("localhost", "username", "password", "database");
    
    // Check connection
    if(mysqli_connect_errno()) {
        echo "Failed to connect: " . mysqli_connect_error();
        return;
    }
    
    // Get reviews from database
    $query = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    $stmt = mysqli_prepare($connection, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    // Display reviews
    while($row = mysqli_fetch_assoc($result)) {
        echo "<div class='review'>";
        echo "<div class='review-header'>";
        echo "<span class='review-author'>" . htmlspecialchars($row['author'], ENT_QUOTES) . "</span>";
        echo "<div class='review-rating'>";
        
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                echo "<span class='star'>★</span>";
            } else {
                echo "<span class='star'>☆</span>";
            }
        }
        
        echo "</div>";
        echo "</div>";
        echo "<p class='review-comment'>" . htmlspecialchars($row['comment'], ENT_QUOTES) . "</p>";
        echo "<div class='review-date'>" . date('F j, Y', strtotime($row['review_date'])) . "</div>";
        echo "</div>";
    }
    
    // Close database connection
    mysqli_close($connection);
}

// Function to handle review submission
function submit_review() {
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $author = trim($_POST['author']);
        $email = trim($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']), ENT_QUOTES);
        
        // Validate inputs
        if ($author == "" || $email == "" || $rating < 1 || $rating > 5) {
            die("Please fill in all required fields.");
        }
        
        // Connect to database
        $connection = mysqli_connect("localhost", "username", "password", "database");
        
        // Check connection
        if(mysqli_connect_errno()) {
            echo "Failed to connect: " . mysqli_connect_error();
            return;
        }
        
        // Prevent SQL injection and XSS attacks
        $author = mysqli_real_escape_string($connection, $author);
        $email = mysqli_real_escape_string($connection, $email);
        $comment = mysqli_real_escape_string($connection, $comment);
        
        // Insert review into database
        $query = "INSERT INTO reviews (product_id, author, email, rating, comment, review_date) VALUES (?, ?, ?, ?, ?, NOW())";
        $stmt = mysqli_prepare($connection, $query);
        mysqli_stmt_bind_param($stmt, "isidi", $product_id, $author, $email, $rating, $comment);
        
        if(mysqli_stmt_execute($stmt)) {
            echo "<div class='success-message'>";
            echo "Thank you for submitting your review!";
            echo "</div>";
        } else {
            echo "<div class='error-message'>";
            echo "Error: Review could not be submitted. Please try again.";
            echo "</div>";
        }
        
        // Close database connection
        mysqli_close($connection);
    }
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create database connection
try {
    $dbh = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to create review table if not exists
function create_review_table($dbh) {
    $sql = "
        CREATE TABLE IF NOT EXISTS reviews (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT NOT NULL,
            rating INT NOT NULL,
            comment TEXT NOT NULL,
            submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS review_stats (
            id INT AUTO_INCREMENT PRIMARY KEY,
            average_rating FLOAT(2,1),
            total_reviews INT
        );
    ";
    
    try {
        $dbh->exec($sql);
    } catch (PDOException $e) {
        echo "Error creating tables: " . $e->getMessage();
    }
}

// Function to submit a review
function submit_review($user_id, $rating, $comment, $dbh, $review_id = null) {
    // Validate inputs
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose between 1 and 5 stars.";
    }
    
    if (strlen(trim($comment)) == 0) {
        return "Comment cannot be empty.";
    }
    
    if (strlen(trim($comment)) > 500) {
        return "Comment is too long. Maximum length is 500 characters.";
    }

    // Check if user has already submitted a review
    $stmt = $dbh->prepare("SELECT id FROM reviews WHERE user_id = ?");
    $stmt->execute([$user_id]);
    
    if ($stmt->rowCount() > 0) {
        return "You have already submitted a review.";
    }

    // Insert new review
    try {
        $sql = "INSERT INTO reviews (user_id, rating, comment) VALUES (?, ?, ?)";
        $stmt = $dbh->prepare($sql);
        $stmt->execute([$user_id, $rating, trim($comment)]);
        
        // Update average rating and total reviews in review_stats table
        $total_reviews = get_total_reviews($dbh);
        $average_rating = get_average_rating($dbh);
        
        if ($total_reviews == 0) {
            $new_average = $rating;
        } else {
            $new_average = ($average_rating * $total_reviews + $rating) / ($total_reviews + 1);
        }
        
        $sql_update = "UPDATE review_stats SET average_rating = ?, total_reviews = ?";
        $stmt_update = $dbh->prepare($sql_update);
        $stmt_update->execute([$new_average, $total_reviews + 1]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to get average rating
function get_average_rating($dbh) {
    try {
        $sql = "SELECT average_rating FROM review_stats ORDER BY id DESC LIMIT 1";
        $stmt = $dbh->query($sql);
        
        if ($stmt->rowCount() == 0) {
            return 0;
        }
        
        return $stmt->fetchColumn();
    } catch (PDOException $e) {
        echo "Error fetching average rating: " . $e->getMessage();
        return 0;
    }
}

// Function to get total reviews
function get_total_reviews($dbh) {
    try {
        $sql = "SELECT total_reviews FROM review_stats ORDER BY id DESC LIMIT 1";
        $stmt = $dbh->query($sql);
        
        if ($stmt->rowCount() == 0) {
            return 0;
        }
        
        return $stmt->fetchColumn();
    } catch (PDOException $e) {
        echo "Error fetching total reviews: " . $e->getMessage();
        return 0;
    }
}

// Function to display all reviews
function display_reviews($dbh) {
    try {
        $sql = "
            SELECT r.*, u.username 
            FROM reviews r
            JOIN users u ON r.user_id = u.id
            ORDER BY submission_date DESC
        ";
        
        $stmt = $dbh->query($sql);
        
        if ($stmt->rowCount() == 0) {
            return "No reviews available.";
        }
        
        $reviews_html = "<div class='reviews'>";
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $reviews_html .= "
                <div class='review'>
                    <h3>Rating: {$row['rating']} stars</h3>
                    <p>{$row['comment']}</p>
                    <small>Submitted by {$row['username']} on " . date('F j, Y', strtotime($row['submission_date'])) . "</small>
                </div>
            ";
        }
        $reviews_html .= "</div>";
        
        return $reviews_html;
    } catch (PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
        return "";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['rating']) && !empty($_POST['comment'])) {
        $result = submit_review($_POST['user_id'], $_POST['rating'], $_POST['comment'], $dbh);
        
        if ($result === true) {
            echo "Review submitted successfully!";
        } else {
            echo $result;
        }
    }
}

// Display average rating and total reviews
echo "<p>Current Average Rating: " . get_average_rating($dbh) . " stars</p>";
echo "<p>Total Reviews: " . get_total_reviews($dbh) . "</p>";

// Display all reviews
echo display_reviews($dbh);
?>


<?php
// Function to submit a new review
function submit_review($user_name, $user_email, $comment) {
    // Set file path (make sure this directory is writable)
    $reviews_file = 'reviews.txt';
    
    // Get current timestamp
    $timestamp = date('Y-m-d H:i:s');
    
    // Create an array of review data
    $review_data = [
        'user_name' => htmlspecialchars($user_name),
        'user_email' => htmlspecialchars($user_email),
        'comment' => htmlspecialchars($comment),
        'timestamp' => $timestamp
    ];
    
    try {
        // Open the file for writing
        $file_handle = fopen($reviews_file, 'a');
        
        // Serialize and write the review data to the file
        fwrite($file_handle, serialize($review_data) . "
");
        
        // Close the file
        fclose($file_handle);
        
        return true;
    } catch (Exception $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function display_reviews() {
    $reviews_file = 'reviews.txt';
    
    if (!file_exists($reviews_file)) {
        return; // File doesn't exist yet
    }
    
    try {
        // Read all lines from the file
        $lines = file($reviews_file, FILE_IGNORE_NEW_LINES);
        
        foreach ($lines as $line) {
            // Unserialize each review
            $review = unserialize($line);
            
            if (is_array($review)) {
                // Display the review
                echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($review['user_name']) . "</h3>";
                echo "<p><em>Submitted on: " . $review['timestamp'] . "</em></p>";
                echo "<p>" . nl2br(htmlspecialchars($review['comment'])) . "</p>";
                echo "</div>";
            }
        }
    } catch (Exception $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}
?>


<?php
// Submit a review when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['user_name']) && !empty($_POST['comment'])) {
        submit_review($_POST['user_name'], $_POST['user_email'], $_POST['comment']);
    }
}

// Display all reviews below the form
display_reviews();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to save review
function saveReview($name, $email, $rating, $comment, $conn) {
    // Validate input
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return false;
    }

    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return false;
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return false;
    }

    // Sanitize input
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));

    // Insert into database
    $query = "INSERT INTO reviews (name, email, rating, comment, review_date) 
              VALUES (?, ?, ?, ?, NOW())";

    $stmt = $conn->prepare($query);
    $stmt->bind_param("ssds", $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function displayReviews($conn) {
    $query = "SELECT name, rating, comment, review_date FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . date('Y-m-d H:i', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet.";
    }

    // Calculate and display average rating
    $avgQuery = "SELECT AVG(rating) AS avg_rating FROM reviews";
    $avgResult = $conn->query($avgQuery);
    $row = $avgResult->fetch_assoc();
    
    if ($row['avg_rating'] != null) {
        echo "<div class='average-rating'>";
        echo "Average Rating: " . number_format($row['avg_rating'], 1, '.', '') . "/5";
        echo "</div>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Connect to the database
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    // Query to fetch all reviews
    $sql = "SELECT * FROM user_reviews ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Review by " . $row['username'] . "</h3>";
            echo "<p>" . $row['review_text'] . "</p>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Posted on: " . $row['review_date'] . "</p>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Function to submit a new review
function submit_review($username, $review_text, $rating) {
    global $conn;
    
    // Validate input
    if (empty($username) || empty($review_text)) {
        return "Please fill in all required fields!";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating! Please choose a rating between 1 and 5.";
    }
    
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $review_text = mysqli_real_escape_string($conn, $review_text);
    
    // Insert into database
    $sql = "INSERT INTO user_reviews (username, review_text, rating) 
            VALUES ('$username', '$review_text', '$rating')";
    if (mysqli_query($conn, $sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to delete a review
function delete_review($id) {
    global $conn;
    
    // Sanitize input
    $id = mysqli_real_escape_string($conn, $id);
    
    // Delete from database
    $sql = "DELETE FROM user_reviews WHERE id='$id'";
    if (mysqli_query($conn, $sql)) {
        return "Review deleted successfully!";
    } else {
        return "Error deleting review: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Create table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(50),
    review_text TEXT,
    rating INT,
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submit_review($user_name, $review_text, $rating) {
    global $conn;
    
    // Sanitize inputs
    $user_name = htmlspecialchars(strip_tags(trim($user_name)));
    $review_text = htmlspecialchars(strip_tags(trim($review_text)));
    $rating = intval($rating);
    
    if ($user_name == '' || $review_text == '' || $rating < 1 || $rating > 5) {
        return false;
    }
    
    // Prepare and execute the query
    $stmt = mysqli_prepare($conn, "INSERT INTO reviews (user_name, review_text, rating) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($stmt, 'sii', $user_name, $review_text, $rating);
    $result = mysqli_stmt_execute($stmt);
    
    if ($result) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews
function get_reviews() {
    global $conn;
    
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($conn, $sql);
    
    $reviews = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $reviews[] = array(
            'id' => $row['id'],
            'user_name' => $row['user_name'],
            'review_text' => $row['review_text'],
            'rating' => $row['rating'],
            'submission_date' => $row['submission_date']
        );
    }
    
    return $reviews;
}

// Function to display reviews
function display_reviews() {
    $reviews = get_reviews();
    if (empty($reviews)) {
        echo "<p>No reviews yet!</p>";
        return;
    }
    
    foreach ($reviews as $review) {
        echo "<div class='review'>";
        echo "<h3>" . $review['user_name'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
        echo "<p>" . $review['review_text'] . "</p>";
        echo "<small>" . date('F j, Y', strtotime($review['submission_date'])) . "</small>";
        echo "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
function user_review($connection) {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
        $username = mysqli_real_escape_string($connection, $_POST['username']);
        $comment = mysqli_real_escape_string($connection, $_POST['comment']);

        // Basic validation
        if (empty($username) || empty($comment)) {
            echo "Please fill in all fields!";
            exit();
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (username, comment, date)
                VALUES ('$username', '$comment', NOW())";
        
        if (!mysqli_query($connection, $sql)) {
            die('Error submitting review: ' . mysqli_error($connection));
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews ORDER BY date DESC LIMIT 10";
    $result = mysqli_query($connection, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>Review by " . htmlspecialchars($row['username']) . "</h4>";
            echo "<p>" . nl2br(htmlspecialchars($row['comment'])) . "</p>";
            echo "<small>Posted on: " . $row['date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }

    // Show review submission form
    echo '<form method="post" action="">
          <input type="text" name="username" placeholder="Your Name">
          <textarea name="comment" rows="5" placeholder="Write your review..."></textarea>
          <button type="submit" name="submit">Submit Review</button>
          </form>';
}
?>


$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}


<?php
function submit_review($user_id, $review_text, $rating) {
    // Validate inputs
    if (empty($user_id) || !is_numeric($user_id)) {
        return "Error: User ID is invalid.";
    }
    
    if (empty($review_text) || !is_string(trim($review_text))) {
        return "Error: Review text cannot be empty.";
    }
    
    if (!isset($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }
    
    // Database connection
    try {
        $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Prepare the SQL statement
        $sql = "INSERT INTO reviews (review_id, user_id, review_text, rating, review_date) 
                VALUES (:review_id, :user_id, :review_text, :rating, NOW())";
                
        $stmt = $pdo->prepare($sql);
        
        // Bind parameters
        $params = array(
            ':review_id' => uniqid(),
            ':user_id' => $user_id,
            ':review_text' => trim($review_text),
            ':rating' => $rating
        );
        
        // Execute the statement
        $stmt->execute($params);
        
        return true;
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}
?>


$result = submit_review(123, "This is a great product!", 5);

if ($result === true) {
    echo "Review submitted successfully!";
} else {
    echo $result;
}


<?php
function submit_review($product_id, $user_id, $rating, $comment) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'reviews_db';

    try {
        // Connect to database
        $conn = new mysqli($host, $db_username, $db_password, $database);
        
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Check if user has already reviewed this product
        $check_query = "
            SELECT review_id 
            FROM reviews 
            WHERE product_id = ? AND user_id = ?
        ";
        
        $stmt = $conn->prepare($check_query);
        $stmt->bind_param("ii", $product_id, $user_id);
        $stmt->execute();
        
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            return "You have already reviewed this product.";
        }

        // Insert new review
        $insert_query = "
            INSERT INTO reviews (product_id, user_id, rating, comment)
            VALUES (?, ?, ?, ?)
        ";

        $stmt = $conn->prepare($insert_query);
        $stmt->bind_param("iisi", $product_id, $user_id, $rating, $comment);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error submitting review: " . $stmt->error;
        }

    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
$product_id = 123;
$user_id = 456;
$rating = 5;
$comment = "This is a great product!";

$result = submit_review($product_id, $user_id, $rating, $comment);
echo $result;

?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'review_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($productId, $userId, $rating, $comment, $conn) {
    // Sanitize inputs
    $productId = mysqli_real_escape_string($conn, $productId);
    $userId = mysqli_real_escape_string($conn, $userId);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Validate rating (assuming 1-5 stars)
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, comment, timestamp) 
            VALUES ('$productId', '$userId', '$rating', '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        echo "Error: " . mysqli_error($conn);
        return false;
    }
}

// Function to display reviews for a product
function displayReviews($productId, $conn) {
    $sql = "SELECT r.*, u.username FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = '$productId' 
            ORDER BY r.timestamp DESC";

    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Reviewed by " . $row['username'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . " stars</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>Posted on " . $row['timestamp'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available for this product.";
    }
}

// Example usage
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Submit review when form is submitted
    if (isset($_POST['submit_review'])) {
        $productId = $_POST['product_id'];
        $userId = $_POST['user_id'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        submitReview($productId, $userId, $rating, $comment, $conn);
    }
}

// Display reviews for product ID 1
displayReviews(1, $conn);

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px 0;
        }
        .rating-stars {
            font-size: 24px;
        }
    </style>
</head>
<body>
    <!-- Review Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="1">
        <input type="hidden" name="user_id" value="1">

        <div class="rating-stars">
            Rating: 
            <?php
                // Display rating stars
                $stars = 5;
                for ($i=1; $i<=$stars; $i++) {
                    echo "<input type='radio' name='rating' value='$i'>$i ";
                }
            ?>
        </div>

        <textarea name="comment" placeholder="Write your review here..."></textarea>
        <br>
        <button type="submit" name="submit_review">Submit Review</button>
    </form>
</body>
</html>


<?php
// Configuration
$dbHost = 'localhost';
$dbUser = 'username';
$dbPass = 'password';
$dbName = 'database_name';

// Connect to database
$connection = mysqli_connect($dbHost, $dbUser, $dbPass, $dbName);

if (!$connection) {
    die("Database connection failed: " . mysqli_error($connection));
}

function submitReview($username, $review, $connection) {
    // Sanitize inputs
    $username = htmlspecialchars(mysqli_real_escape_string($connection, trim($username)));
    $review = htmlspecialchars(mysqli_real_escape_string($connection, trim($review)));

    // Check if username and review are not empty
    if (empty($username) || empty($review)) {
        return "Please fill in all fields!";
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (username, review, submission_date)
            VALUES ('$username', '$review', NOW())";

    if (mysqli_query($connection, $sql)) {
        // Redirect back to the form after 1 second with a thank you message
        header("Refresh: 1; url=reviews.php");
        echo "Thank you for your review!";
    } else {
        return "Error submitting review: " . mysqli_error($connection);
    }
}

function displayReviews($connection) {
    // Fetch reviews from database
    $sql = "SELECT * FROM reviews ORDER BY submission_date DESC";
    $result = mysqli_query($connection, $sql);

    if (mysqli_num_rows($result) > 0) {
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>By " . htmlspecialchars($row['username']) . "</h3>";
            echo "<p>" . htmlspecialchars($row['review']) . "</p>";
            echo "<small>Submitted on: " . $row['submission_date'] . "</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "<p>No reviews yet. Be the first to leave a review!</p>";
    }
}

// Close database connection
mysqli_close($connection);
?>


<?php
// Function to display user reviews
function displayUserReviews($product_id) {
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // SQL query to fetch reviews
    $sql = "SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $average_rating_sql = "SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = $product_id";
        $average_rating_result = mysqli_query($conn, $average_rating_sql);
        $average_rating_row = mysqli_fetch_assoc($average_rating_result);
        $average_rating = number_format((float)$average_rating_row['avg_rating'], 1, '.', '');
        
        echo "<div class='reviews-container'>";
        echo "<h3>Customer Reviews</h3>";
        echo "<p>Average Rating: $average_rating/5</p>";
        
        while ($row = mysqli_fetch_assoc($result)) {
            // Review details
            $user_id = $row['user_id'];
            $rating = $row['rating'];
            $comment = $row['review_comment'];
            $date = $row['review_date'];
            
            // Get user info
            $user_sql = "SELECT username, email FROM users WHERE id = $user_id";
            $user_result = mysqli_query($conn, $user_sql);
            $user_row = mysqli_fetch_assoc($user_result);
            $username = $user_row['username'];
            $email = $user_row['email'];
            
            // Display review
            echo "<div class='review'>";
            echo "<div class='review-header'>";
            echo "<span class='username'>$username</span>";
            echo "<span class='date'>($date)</span>";
            echo "</div>";
            
            // Display rating stars
            echo "<div class='rating'>";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            
            // Display comment
            echo "<p class='comment'>$comment</p>";
            
            // Review actions
            echo "<div class='review-actions'>";
            echo "<button class='helpful'>Helpful</button>";
            if (isset($_SESSION['admin'])) {
                echo "<button onclick='approveReview($row[review_id])'>Approve</button>";
            }
            echo "</div>";
            echo "</div>";
        }
        
        // Close database connection
        mysqli_close($conn);
        echo "</div>";
    } else {
        echo "<p>No reviews available for this product.</p>";
    }
}

// Example usage:
displayUserReviews(1);
?>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_SESSION['user_id'])) {
    // Sanitize inputs
    $rating = filter_var($_POST['rating'], FILTER_SANITIZE_NUMBER_INT);
    $comment = htmlspecialchars(trim($_POST['comment']));
    $product_id = filter_var($_POST['product_id'], FILTER_SANITIZE_NUMBER_INT);
    
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_comment) 
            VALUES ($_SESSION[user_id], $product_id, $rating, '$comment')";
            
    if (mysqli_query($conn, $sql)) {
        echo "<div class='success-message'>Thank you for your review!</div>";
    } else {
        echo "<div class='error-message'>Error submitting review. Please try again.</div>";
    }
    
    // Close connection
    mysqli_close($conn);
}
?>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "reviews_db";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function processReview($conn) {
    try {
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Sanitize input data
            $user_name = htmlspecialchars($_POST['username']);
            $rating = intval($_POST['rating']);
            $comment = htmlspecialchars($_POST['comment']);

            // Validate input data
            if ($user_name == "" || $comment == "" || $rating < 1) {
                throw new Exception("Please fill in all required fields and select a rating.");
            }

            // Insert review into database
            $stmt = $conn->prepare("INSERT INTO reviews (username, rating, comment, submission_date) VALUES (?, ?, ?, NOW())");
            $stmt->bind_param("sii", $user_name, $rating, $comment);

            if ($stmt->execute()) {
                echo "<script>alert('Thank you for submitting your review!');</script>";
            } else {
                throw new Exception("Error submitting review: " . $conn->error);
            }

            $stmt->close();
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

function displayReviews($conn) {
    try {
        // Fetch all reviews from database
        $result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

        if ($result->num_rows > 0) {
            echo "<h3>Previous Reviews:</h3>";
            while ($row = $result->fetch_assoc()) {
                $rating_display = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
                $date = date("F j, Y g:i a", strtotime($row['submission_date']));

                echo "<div class='review'>";
                echo "<h4>" . htmlspecialchars($row['username']) . "</h4>";
                echo "<p>" . htmlspecialchars($row['comment']) . "</p>";
                echo "<div class='rating'>" . $rating_display . " (" . $date . ")</div>";
                echo "</div><br>";
            }
        } else {
            echo "<p>No reviews available.</p>";
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
        .rating {
            color: #gold;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <h1>Submit a Review</h1>
    
    <!-- Review submission form -->
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label for="username">Name:</label><br>
            <input type="text" id="username" name="username" required><br>
            
            <label for="rating">Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="1">1 Star</option>
                <option value="2">2 Stars</option>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select><br>
            
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="5" cols="30" required></textarea><br>
        </div><br>
        
        <input type="submit" value="Submit Review">
    </form>

    <?php
    // Process the review if form is submitted
    processReview($conn);
    
    // Display existing reviews
    displayReviews($conn);
    ?>

</body>
</html>


<?php
// Function to save a new review
function save_review($db_connection) {
    // Get the form data
    $review = $_POST['review'];
    $rating = $_POST['rating'];
    $product_id = $_POST['product_id'];
    $user_id = $_POST['user_id'];

    // Validate input data
    if (empty($review) || !isset($rating) || !ctype_digit((string)$rating) || $rating < 1 || $rating > 5 || !isset($product_id) || !is_numeric($product_id) || $product_id <= 0 || !isset($user_id) || !is_numeric($user_id) || $user_id <= 0) {
        return "Invalid input data!";
    }

    // Escape special characters to prevent SQL injection
    $review = mysqli_real_escape_string($db_connection, $review);

    // Insert the new review into the database
    $query = "INSERT INTO reviews (review_text, rating, product_id, user_id) 
              VALUES ('$review', $rating, $product_id, $user_id)";

    if (!mysqli_query($db_connection, $query)) {
        return "Error saving review: " . mysqli_error($db_connection);
    }

    // Return success message
    return "Review saved successfully!";
}

// Function to display reviews for a product
function display_reviews($db_connection, $product_id) {
    // Get all reviews for the specified product
    $query = "SELECT r.review_text, r.rating, u.username 
              FROM reviews r 
              JOIN users u ON r.user_id = u.id 
              WHERE r.product_id = $product_id 
              ORDER BY r.review_date DESC";

    $result = mysqli_query($db_connection, $query);

    if (!$result) {
        return "Error fetching reviews: " . mysqli_error($db_connection);
    }

    // Calculate average rating and total reviews
    $total_reviews = 0;
    $average_rating = 0;

    // Get review count and sum of ratings for the product
    $stats_query = "SELECT COUNT(*) as total, SUM(rating) as total_rating 
                    FROM reviews 
                    WHERE product_id = $product_id";
    $stats_result = mysqli_query($db_connection, $stats_query);

    if ($stats_row = mysqli_fetch_assoc($stats_result)) {
        $total_reviews = $stats_row['total'];
        $average_rating = ($total_reviews > 0) ? ($stats_row['total_rating'] / $total_reviews) : 0;
    }

    // Display reviews
    echo "<div class='product-reviews'>";
    echo "<h3>Customer Reviews</h3>";
    echo "<p>$total_reviews reviews</p>";
    echo "<p>Average Rating: " . number_format($average_rating, 1) . "/5</p>";

    while ($row = mysqli_fetch_assoc($result)) {
        $review_text = $row['review_text'];
        $rating = $row['rating'];
        $username = $row['username'];

        echo "<div class='review'>";
        echo "<h4>Rating: $rating/5</h4>";
        echo "<p>By: $username</p>";
        echo "<p>$review_text</p>";
        echo "</div>";
    }

    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet. Be the first to review this product!</p>";
    }

    echo "</div>";
}
?>


<?php
// Establish database connection
$host = 'localhost';
$db_name = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

$db_connection = mysqli_connect($host, $username, $password, $db_name);

if (!$db_connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Save the review
$review_result = save_review($db_connection);

if (strpos($review_result, "Error") === false && strpos($review_result, "Invalid") === false) {
    echo $review_result;
} else {
    echo $review_result;
}

mysqli_close($db_connection);
?>


<?php
// Establish database connection
$host = 'localhost';
$db_name = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

$db_connection = mysqli_connect($host, $username, $password, $db_name);

if (!$db_connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Display reviews for product with ID 1 (change as needed)
$product_id = 1;
display_reviews($db_connection, $product_id);

mysqli_close($db_connection);
?>


<?php
// Configuration
$reviewsFile = 'reviews.txt';

// Error message initialization
$error = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate and sanitize input
    $username = trim($_POST['username']);
    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;
    $comment = trim($_POST['comment']);

    if (empty($username)) {
        $error = 'Please enter your name.';
    } elseif ($rating < 1 || $rating > 5) {
        $error = 'Please select a rating between 1 and 5 stars.';
    } elseif (empty($comment)) {
        $error = 'Please write a comment.';
    } else {
        // Sanitize input
        $username = htmlspecialchars($username, ENT_QUOTES);
        $comment = htmlspecialchars($comment, ENT_QUOTES);

        // Create review data array
        $reviewData = [
            'username' => $username,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        ];

        try {
            // Open file for writing
            $fileHandle = fopen($reviewsFile, 'a');
            if (flock($fileHandle, LOCK_EX)) { // Lock file to prevent concurrent writes
                // Write review data as JSON string
                fwrite($fileHandle, json_encode($reviewData) . "
");
                flock($fileHandle, LOCK_UN); // Release lock
            }
            fclose($fileHandle);

            // Redirect back after successful submission
            header('Location: ' . $_SERVER['PHP_SELF']);
            exit();
        } catch (Exception $e) {
            $error = 'Error saving review. Please try again later.';
            error_log('Review submission failed: ' . $e->getMessage());
        }
    }
}

// Function to load reviews from file
function loadReviews($file) {
    if (!file_exists($file)) {
        return [];
    }

    $reviews = array();
    $lines = file($file);
    foreach ($lines as $line) {
        $line = trim($line);
        if (!empty($line)) {
            $reviewData = json_decode($line, true);
            if (is_array($reviewData)) {
                $reviews[] = $reviewData;
            }
        }
    }

    return $reviews;
}

// Load existing reviews
$reviews = loadReviews($reviewsFile);

// Function to display star rating
function displayStars($rating) {
    $stars = str_repeat('★', $rating);
    $emptyStars = str_repeat('☆', 5 - $rating);
    return $stars . $emptyStars;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            margin-bottom: 30px;
        }
        .star-rating {
            font-size: 24px;
            color: #ffd700;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>

    <?php if (!empty($error)): ?>
        <div style="color: red; margin-bottom: 20px;">
            Error: <?php echo $error; ?>
        </div>
    <?php endif; ?>

    <!-- Review submission form -->
    <form class="review-form" method="post">
        <div>
            <label for="username">Name:</label><br>
            <input type="text" id="username" name="username" required>
        </div>

        <div style="margin-top: 10px;">
            <label>Rating:</label><br>
            <select id="rating" name="rating" required>
                <option value="">Select Rating</option>
                <option value="5">★★★★★ (5)</option>
                <option value="4">★★★★☆ (4)</option>
                <option value="3">★★★☆☆ (3)</option>
                <option value="2">★★☆☆☆ (2)</option>
                <option value="1">★☆☆☆☆ (1)</option>
            </select>
        </div>

        <div style="margin-top: 10px;">
            <label for="comment">Comment:</label><br>
            <textarea id="comment" name="comment" rows="4" cols="50" required></textarea>
        </div>

        <button type="submit" style="margin-top: 10px;">Submit Review</button>
    </form>

    <?php if (!empty($reviews)): ?>
        <h2>Latest Reviews:</h2>
        <?php foreach ($reviews as $review): 
            // Limit comment length to prevent long comments from breaking layout
            $comment = substr($review['comment'], 0, 300); 
            if (strlen($review['comment']) > 300) {
                $comment .= '...';
            }
        ?>
            <div style="border-bottom: 1px solid #ddd; padding-bottom: 15px; margin-bottom: 15px;">
                <div>
                    <strong><?php echo htmlspecialchars($review['username']); ?></strong>
                    <span class="star-rating" style="margin-left: 10px;">
                        <?php echo displayStars($review['rating']); ?>
                    </span>
                </div>
                <p><?php echo $comment; ?></p>
                <small style="color: #666;">
                    <?php echo date('j M Y, H:i', strtotime($review['date'])); ?>
                </small>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <p>No reviews available. Be the first to review this product!</p>
    <?php endif; ?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'reviews_db';

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Create reviews table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    product_id INT,
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

mysqli_query($conn, $sql);

// Function to submit a review
function submitReview() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize inputs
        $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
        $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);
        
        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, product_id, rating, comment, timestamp)
                VALUES ('$user_name', '$product_id', '$rating', '$comment', NOW())";
        
        if (!mysqli_query($conn, $sql)) {
            die('Error submitting review: ' . mysqli_error($conn));
        }
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    // Get reviews for product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        echo '<div class="reviews">';
        
        // Calculate average rating
        $sum_ratings = 0;
        $count = 0;
        while ($row = mysqli_fetch_assoc($result)) {
            $sum_ratings += $row['rating'];
            $count++;
        }
        $average_rating = number_format(($sum_ratings / $count), 1);
        
        echo '<div class="average-rating">';
        echo '<h3>Average Rating:</h3>';
        echo '<p>' . $average_rating . '/5</p>';
        echo '</div>';
        
        // Reset result pointer
        mysqli_data_seek($result, 0);
        
        while ($row = mysqli_fetch_assoc($result)) {
            $user_name = htmlspecialchars($row['user_name']);
            $rating = $row['rating'];
            $comment = htmlspecialchars($row['comment']);
            $timestamp = date('M j, Y g:i a', strtotime($row['timestamp']));
            
            echo '<div class="review">';
            echo '<div class="review-header">';
            echo '<span class="user-name">' . $user_name . '</span>';
            echo '<div class="rating">';
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $rating) {
                    echo '<span class="star">★</span>';
                } else {
                    echo '<span class="star">☆</span>';
                }
            }
            echo '</div>';
            echo '</div>';
            echo '<p class="comment">' . $comment . '</p>';
            echo '<small class="timestamp">' . $timestamp . '</small>';
            echo '</div>';
        }
        
        echo '</div>';
    } else {
        echo 'No reviews yet.';
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submit_review() {
    global $conn;

    // Sanitize input data
    $user_name = htmlspecialchars($_POST['name']);
    $email = htmlspecialchars($_POST['email']);
    $rating = (int)$_POST['rating'];
    $comment = htmlspecialchars($_POST['comment']);

    // Get current date and time
    $date = date('Y-m-d H:i:s');

    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (name, email, rating, comment, date) 
            VALUES ('$user_name', '$email', $rating, '$comment', '$date')";

    if (mysqli_query($conn, $sql)) {
        echo "Review submitted successfully!";
        header("Refresh:2; url=reviews.php"); // Redirect after 2 seconds
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Function to display reviews
function display_reviews() {
    global $conn;

    // SQL query to fetch all reviews
    $sql = "SELECT * FROM reviews ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>" . $row['date'] . "</small>";
            echo "</div><br>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!-- HTML Form for submitting reviews -->
<!DOCTYPE html>
<html>
<head>
    <title>Submit Review</title>
    <style>
        .review {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        .stars {
            color: #ffd700;
        }
    </style>
</head>
<body>
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        submit_review();
    } else {
        // Display review form
        echo "<h2>Submit Your Review</h2>";
        echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<label for='name'>Name:</label><br>";
        echo "<input type='text' id='name' name='name' required><br><br>";
        
        echo "<label for='email'>Email:</label><br>";
        echo "<input type='email' id='email' name='email' required><br><br>";
        
        echo "<label for='rating'>Rating:</label><br>";
        echo "<select id='rating' name='rating'>";
        for ($i = 1; $i <= 5; $i++) {
            echo "<option value='$i'>$i stars</option>";
        }
        echo "</select><br><br>";
        
        echo "<label for='comment'>Comment:</label><br>";
        echo "<textarea id='comment' name='comment' rows='4' cols='50' required></textarea><br><br>";
        
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
    }
    
    // Display existing reviews
    echo "<h2>Reviews</h2>";
    display_reviews();
    ?>
</body>
</html>


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview() {
    global $conn;
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = mysqli_real_escape_string($conn, $_POST['comment']);

        // Insert into database
        $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, review_date) 
                VALUES ('$name', '$email', $rating, '$comment', NOW())";

        if (mysqli_query($conn, $sql)) {
            echo "Review submitted successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT r.*, u.user_name AS username 
            FROM reviews r 
            LEFT JOIN users u ON r.user_email = u.user_email 
            ORDER BY review_date DESC";
            
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $total_ratings = 0;
        $average_rating = 0;
        
        while ($row = mysqli_fetch_assoc($result)) {
            $total_ratings += $row['rating'];
            echo "<div class='review'>";
            echo "<h3>Review by " . $row['username'] . "</h3>";
            echo "<p><strong>Rating:</strong> " . $row['rating'] . "/5</p>";
            echo "<p><strong>Comment:</strong> " . $row['comment'] . "</p>";
            echo "<p><em>Posted on: " . $row['review_date'] . "</em></p>";
            echo "</div>";
        }
        
        // Calculate average
        $average_rating = ($total_ratings / mysqli_num_rows($result)) * 1;
        $rounded_average = round($average_rating, 2);
        
        echo "<div class='average-rating'>";
        echo "Average Rating: " . $rounded_average . "/5";
        echo "</div>";
    } else {
        echo "No reviews found.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
displayReviews();
?>


<?php
// Function to create a new review
function createReview($userId, $productId, $rating, $comment = "") {
    // Database connection details
    $servername = "localhost";
    $username = "your_username";
    $password = "your_password";
    $dbname = "your_database";

    // Create connection
    $conn = mysqli_connect($servername, $username, $password, $dbname);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = intval($rating); // Ensure rating is an integer
    $comment = mysqli_real_escape_string($conn, $comment);

    // Validate rating (assuming ratings are between 1 and 5)
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please provide a rating between 1 and 5.";
    }

    // SQL query to insert the review
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
            VALUES ('$userId', '$productId', '$rating', '" . ($comment ? "'$comment'" : "NULL") . "', NOW())";

    if (mysqli_query($conn, $sql)) {
        // Return success message
        return "Review submitted successfully!";
    } else {
        // Return error message
        return "Error: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);
}

// Function to get reviews for a product
function getReviewsByProduct($productId) {
    // Database connection details
    $servername = "localhost";
    $username = "your_username";
    $password = "your_password";
    $dbname = "your_database";

    // Create connection
    $conn = mysqli_connect($servername, $username, $password, $dbname);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);

    // SQL query to fetch reviews for the product
    $sql = "SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY created_at DESC";
    
    // Optional: Limit the number of reviews returned
    $limit = 5; // Change this value as needed
    $sql .= " LIMIT $limit";

    $result = mysqli_query($conn, $sql);
    $reviews = array();

    if ($result) {
        while ($row = mysqli_fetch_assoc($result)) {
            $review = array(
                'id' => $row['id'],
                'user_id' => $row['user_id'],
                'product_id' => $row['product_id'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'created_at' => $row['created_at']
            );
            array_push($reviews, $review);
        }
    } else {
        // Return error message
        return "Error: " . mysqli_error($conn);
    }

    // Close database connection
    mysqli_close($conn);

    return $reviews;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $userId = $_POST['user_id'];
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];

    // Create a new review
    $reviewResult = createReview($userId, $productId, $rating, $comment);
    echo $reviewResult;
}

// Get reviews for a specific product
$productReviews = getReviewsByProduct(1); // Replace 1 with the actual product ID

// Calculate average rating and display reviews
if (is_array($productReviews)) {
    $totalRating = 0;
    foreach ($productReviews as $review) {
        $totalRating += $review['rating'];
    }
    $averageRating = $totalRating / count($productReviews);

    echo "<h3>Product Reviews</h3>";
    echo "<p>Average Rating: " . number_format($averageRating, 1) . "/5</p>";

    foreach ($productReviews as $review) {
        // Display review details
        echo "<div class='review'>";
        echo "<p><strong>" . str_repeat("★", $review['rating']) . "</strong></p>";
        if (!empty($review['comment'])) {
            echo "<p>" . $review['comment'] . "</p>";
        }
        echo "</div>";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(100),
    user_email VARCHAR(100),
    rating INT,
    comment TEXT,
    timestamp DATETIME
)";

mysqli_query($conn, $sql);

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $rating = (int)$_POST['rating'];
    $comment = mysqli_real_escape_string($conn, $_POST['comment']);

    // Insert into database
    $sql = "INSERT INTO reviews (user_name, user_email, rating, comment, timestamp) 
            VALUES ('$name', '$email', $rating, '$comment', NOW())";

    if (mysqli_query($conn, $sql)) {
        header("Location: $_SERVER[PHP_SELF]");
        exit();
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}

// Get all reviews
$sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);
$reviews = mysqli_fetch_all($result, MYSQLI_ASSOC);

// Calculate average rating
$total_ratings = 0;
$count = count($reviews);
if ($count > 0) {
    foreach ($reviews as $review) {
        $total_ratings += $review['rating'];
    }
    $average_rating = $total_ratings / $count;
} else {
    $average_rating = 0;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Reviews</title>
    <style>
        .review-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .rating-stars {
            color: #ffd700;
        }
        .review-item {
            border-bottom: 1px solid #ddd;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="review-container">
        <?php if (!empty($average_rating)) { ?>
            <h2>Average Rating: <?php echo number_format($average_rating, 1); ?> stars</h2>
        <?php } ?>

        <h2>Leave a Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating" required>
                    <option value="">Choose a rating</option>
                    <option value="5">5 stars</option>
                    <option value="4">4 stars</option>
                    <option value="3">3 stars</option>
                    <option value="2">2 stars</option>
                    <option value="1">1 star</option>
                </select>
            </div>

            <div>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="5" required></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>

        <?php if (!empty($reviews)) { ?>
            <h2>Reviews</h2>
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>
                    <p><?php echo htmlspecialchars($review['user_email']); ?></p>
                    <div class="rating-stars">
                        <?php 
                            $stars = str_repeat('★ ', $review['rating']);
                            echo $stars;
                        ?>
                    </div>
                    <p><?php echo nl2br(htmlspecialchars($review['comment'])); ?></p>
                    <small>Posted on: <?php echo date('F j, Y', strtotime($review['timestamp'])); ?></small>
                </div>
            <?php } ?>
        <?php } else { ?>
            <p>No reviews yet. Be the first to leave a review!</p>
        <?php } ?>
    </div>
</body>
</html>


<?php
function display_reviews($reviews, $product_id) {
    // Initialize an empty array to hold matching reviews
    $matching_reviews = array();

    // Loop through each review to find those that match the product ID
    foreach ($reviews as $review) {
        if ($review['product_id'] == $product_id) {
            $matching_reviews[] = $review;
        }
    }

    // If there are no matching reviews, display a message
    if (empty($matching_reviews)) {
        echo "<div class='no-reviews'>No reviews yet.</div>";
        return;
    }

    // Display the reviews in an ordered list
    echo "<ol class='reviews'>";
    
    foreach ($matching_reviews as $review) {
        // Start each review item
        echo "<li class='review'>";
        
        // Display the author and content of the review
        echo "<div class='review-content'>";
        echo "<p><strong>" . htmlspecialchars($review['author']) . "</strong></p>";
        echo "<p>" . nl2br(htmlspecialchars($review['content'])) . "</p>";
        echo "</div>";

        // Display the star rating
        $stars = "";
        for ($i = 0; $i < $review['rating']; $i++) {
            $stars .= "★";
        }
        echo "<div class='rating'>";
        echo "<span class='stars'>" . $stars . "</span>";
        echo "</div>";

        // Display the review date
        echo "<div class='date'>";
        echo "<small>" . date('F j, Y', strtotime($review['date'])) . "</small>";
        echo "</div>";
        
        // End of this review item
        echo "</li>";
    }
    
    // Close the ordered list
    echo "</ol>";
}
?>


$reviews = array(
    array(
        'product_id' => 1,
        'author' => 'John Doe',
        'content' => "This is a great product! I highly recommend it.",
        'rating' => 5,
        'date' => '2023-07-20'
    ),
    array(
        'product_id' => 1,
        'author' => 'Jane Smith',
        'content' => "Okay but nothing special. It works but could be better.",
        'rating' => 3,
        'date' => '2023-07-19'
    ),
);

// Display reviews for product ID 1
display_reviews($reviews, 1);


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add a review
function addReview($name, $review) {
    global $conn;
    
    // Sanitize the inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));
    $review = mysqli_real_escape_string($conn, htmlspecialchars($review));
    
    // Insert into database
    $sql = "INSERT INTO reviews (name, review) VALUES ('$name', '$review')";
    
    if ($conn->query($sql)) {
        echo "Thank you for your review!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Retrieve all reviews from the database
    $sql = "SELECT * FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row["name"]) . "</h3>";
            echo "<p>" . htmlspecialchars($row["review"]) . "</p>";
            echo "<small>Posted on: " . $row["timestamp"] . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews yet!";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the values from the form
    $name = $_POST['name'];
    $review = $_POST['review'];
    
    // Validate input
    if (empty($name) || empty($review)) {
        echo "Please fill in all fields!";
    } else {
        addReview($name, $review);
    }
}

// Close the database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Process review submission
if (isset($_POST['submit_review'])) {
    // Sanitize and validate inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $comment = htmlspecialchars(trim($_POST['comment']));

    // Validation errors
    $errors = array();

    if (empty($name)) {
        $errors[] = "Name is required.";
    }
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Valid email is required.";
    }
    if ($rating < 1 || $rating > 5) {
        $errors[] = "Rating must be between 1 and 5 stars.";
    }
    if (empty($comment)) {
        $errors[] = "Comment is required.";
    }

    // If no errors, insert into database
    if (empty($errors)) {
        try {
            $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, comment) VALUES (?, ?, ?, ?)");
            $stmt->bind_param("ssis", $name, $email, $rating, $comment);
            $stmt->execute();
            $stmt->close();

            // Redirect after successful submission
            header("Location: review.php?success=1");
            exit();
        } catch (mysqli_sql_exception $e) {
            echo "Error submitting review: " . $e->getMessage();
        }
    } else {
        foreach ($errors as $error) {
            echo "<p class='error'>$error</p>";
        }
    }
}

// Fetch reviews from database
$reviews = array();
$result = $conn->query("SELECT * FROM reviews ORDER BY submission_date DESC");

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $reviews[] = $row;
    }
} else {
    echo "No reviews found.";
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Review</title>
    <style>
        .review-form { margin: 20px; padding: 15px; border: 1px solid #ddd; }
        .rating-stars input[type="radio"] { display: none; }
        .rating-stars label { color: #ddd; cursor: pointer; }
        .rating-stars label:before { content: "★ "; }
        .rating-stars input[type="radio"]:checked ~ label { color: #ffd700; }
        .review-list { margin-top: 20px; }
        .review-item { margin-bottom: 15px; padding: 10px; border: 1px solid #ddd; }
        .star-rated { color: #ffd700; }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <div class="review-form">
        <h2>Leave a Review</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <p>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </p>
            <p>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </p>
            <p>
                <label>Rating:</label><br>
                <div class="rating-stars">
                    <input type="radio" id="5-star" name="rating" value="5">
                    <label for="5-star">5</label>
                    <input type="radio" id="4-star" name="rating" value="4">
                    <label for="4-star">4</label>
                    <input type="radio" id="3-star" name="rating" value="3">
                    <label for="3-star">3</label>
                    <input type="radio" id="2-star" name="rating" value="2">
                    <label for="2-star">2</label>
                    <input type="radio" id="1-star" name="rating" value="1">
                    <label for="1-star">1</label>
                </div>
            </p>
            <p>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="5" cols="30" required></textarea>
            </p>
            <input type="submit" name="submit_review" value="Submit Review">
        </form>
    </div>

    <!-- Display Reviews -->
    <div class="review-list">
        <h2>Customer Reviews</h2>
        <?php foreach ($reviews as $review): ?>
            <div class="review-item">
                <p><strong><?php echo htmlspecialchars($review['name']); ?></strong></p>
                <p class="star-rated"><?php display_stars($review['rating']); ?> (<?php echo $review['rating']; ?> stars)</p>
                <p><?php echo htmlspecialchars($review['comment']); ?></p>
                <small>Submitted on: <?php echo $review['submission_date']; ?></small>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Star Display Helper Function -->
    <?php
    function display_stars($rating) {
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $rating) {
                echo "★ ";
            } else {
                echo "☆ ";
            }
        }
    }
    ?>
</body>
</html>


<?php
// Database connection configuration
$host = "localhost";
$user = "root";
$password = "";
$db_name = "reviews_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to fetch and display reviews
function getReviews($product_id) {
    global $conn;

    // Get all reviews for a product
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        
        $result = $stmt->get_result();

        // Display reviews
        while ($row = $result->fetch_assoc()) {
            $rating = $row['rating'];
            $comment = $row['comment'];
            $author = $row['author'];
            $review_date = date('jS M Y, g:i a', strtotime($row['review_date']));

            // Display review content
            echo "<div class='review'>";
                echo "<div class='review-header'>";
                    // Display rating stars
                    echo "<div class='rating'>";
                        for ($i = 1; $i <= 5; $i++) {
                            if ($i <= $rating) {
                                echo "<span class='star'>⭐️</span>";
                            } else {
                                echo "<span class='star' style='opacity:0.3'>⭐️</span>";
                            }
                        }
                    echo "</div>";
                    echo "<span class='review-date'>$review_date</span>";
                echo "</div>";
                
                // Display review comment and author
                echo "<p>$comment</p>";
                echo "<p class='author'>- $author</p>";
            echo "</div>";
        }
    }

    // Calculate average rating
    $sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = ?";
    
    if ($stmt = $conn->prepare($sql_avg)) {
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        
        $avg_result = $stmt->get_result();
        $row = $avg_result->fetch_assoc();
        $average_rating = number_format($row['avg_rating'], 1);

        // Display average rating
        echo "<div class='average-rating'>";
            echo "Average Rating: <span>$average_rating/5</span>";
        echo "</div>";
    }

    $stmt->close();
}

// Function to handle review submission
function submitReview() {
    global $conn;

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $author = $_POST['author'];
        $email = $_POST['email'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        $product_id = $_POST['product_id'];

        // Validate input
        if (empty($author) || empty($email) || empty($rating) || empty($comment)) {
            die("Please fill in all required fields.");
        }

        // Check rating is between 1 and 5
        if ($rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars.");
        }

        // Sanitize input data
        $author = mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($author))));
        $email = mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($email))));
        $comment = mysqli_real_escape_string($conn, htmlspecialchars(strip_tags(trim($comment))));

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, author, email, rating, comment) 
                VALUES (?, ?, ?, ?, ?)";

        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("isiii", $product_id, $author, $email, $rating, $comment);
            $stmt->execute();
            
            // Close statement
            $stmt->close();

            // Redirect back to the product page or review section
            header("Location: " . $_SERVER['HTTP_REFERER']);
        }
    }
}

// Function to handle helpfulness voting
function voteReview($review_id, $vote) {
    global $conn;

    if ($vote == 'up' || $vote == 'down') {
        // Update helpfulness count
        $sql = "UPDATE reviews SET helpful_$vote = helpful_$vote + 1 WHERE id = ?";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $review_id);
            $stmt->execute();
            $stmt->close();

            // Get updated helpfulness counts
            $sql_counts = "SELECT helpful_up, helpful_down FROM reviews WHERE id = ?";
            
            if ($stmt = $conn->prepare($sql_counts)) {
                $stmt->bind_param("i", $review_id);
                $stmt->execute();
                
                $result = $stmt->get_result();
                $row = $result->fetch_assoc();

                // Output helpfulness counts
                echo "Up: " . $row['helpful_up'] . ", Down: " . $row['helpful_down'];
            }
        }
    }
}
?>


<?php
// Display reviews for a specific product
$product_id = 1; // Replace with actual product ID
getReviews($product_id);
?>


<?php
function user_review($product_id) {
    // Database configuration
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $db_name = 'reviews_db';

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $db_name);
    
    if (!$conn) {
        die('Connection failed: ' . mysqli_connect_error());
    }

    // Check for review submission
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $name = $_POST['name'];
        $comment = $_POST['comment'];
        $rating = $_POST['rating'];

        // Validate input
        if (empty($name) || empty($comment)) {
            die('Name and comment are required.');
        }

        if (!isset($rating) || $rating < 1 || $rating > 5) {
            die('Rating must be between 1 and 5.');
        }

        // Prevent multiple submissions from the same user短时间内
        if (isset($_SESSION['last_review_submission'])) {
            if (time() - $_SESSION['last_review_submission'] < 30) { // Minimum 30 seconds between reviews
                die('Please wait before submitting another review.');
            }
        } else {
            $_SESSION['last_review_submission'] = time();
        }

        // Insert new review into the database
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, comment, rating, date) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("isii", $product_id, $name, $comment, $rating);
        
        if ($stmt->execute() === TRUE) {
            // Redirect to avoid form resubmission
            header('Location: ' . $_SERVER['PHP_SELF'] . '?product_id=' . $product_id);
            exit();
        } else {
            die('Error submitting review.');
        }
    }

    // Retrieve reviews for the specified product
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ? ORDER BY date DESC");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Display each review
        while ($row = $result->fetch_assoc()) {
            echo <<<EOD
<div class="review">
    <div class="review-header">
        <span class="review-author">{$row['name']}</span>
        <span class="review-rating">{$row['rating']} stars</span>
    </div>
    <div class="review-body">
        {$row['comment']}
    </div>
    <div class="review-date">
        Posted on {$row['date']}
    </div>
</div>
EOD;
        }
    } else {
        // No reviews found
        echo '<p>No reviews have been submitted yet.</p>';
    }

    // Display review submission form
    if ($result->num_rows == 0 || isset($_GET['submit'])) {
        echo <<<FORM
<form action="" method="post">
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <input type="text" name="name" placeholder="Your Name" required>
        <textarea name="comment" placeholder="Write your review here..." required></textarea>
        <label for="rating">Rating:</label>
        <select id="rating" name="rating">
            <option value="">Choose a rating</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
            <option value="3">3 Stars</option>
            <option value="2">2 Stars</option>
            <option value="1">1 Star</option>
        </select>
        <input type="submit" value="Submit Review">
    </div>
</form>
FORM;
    }

    // Close the database connection
    $conn->close();
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a review
function createReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $userId = mysqli_real_escape_string($conn, $userId);
    $productId = mysqli_real_escape_string($conn, $productId);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
            VALUES ('$userId', '$productId', '$rating', '$comment', NOW())";
            
    if ($conn->query($sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getProductReviews($productId) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get reviews from database
    $sql = "SELECT r.*, u.username 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE product_id = '$productId' 
            ORDER BY created_at DESC";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to get average rating for a product
function getProductRating($productId) {
    global $conn;
    
    // Escape special characters to prevent SQL injection
    $productId = mysqli_real_escape_string($conn, $productId);
    
    // Get average rating from database
    $sql = "SELECT AVG(rating) as average_rating 
            FROM reviews 
            WHERE product_id = '$productId'";
            
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average_rating'], 1); // Round to one decimal place
    } else {
        return 0;
    }
}

// Example usage:
$productId = 123; // Replace with actual product ID

// Create a review
if (createReview(456, $productId, 5, "Great product!")) {
    echo "Review created successfully!";
} else {
    echo "Error creating review.";
}

// Get and display reviews for product
$reviews = getProductReviews($productId);
if ($reviews) {
    while ($row = $reviews->fetch_assoc()) {
        echo "<div>";
        echo "<strong>" . $row['username'] . "</strong> - ";
        echo "<em>" . $row['rating'] . " stars</em><br>";
        echo $row['comment'];
        echo "</div>";
    }
} else {
    echo "No reviews available.";
}

// Get and display average rating
$averageRating = getProductRating($productId);
echo "<p>Average Rating: " . $averageRating . " stars</p>";

// Close database connection
$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a new review
function add_review($user_id, $product_id, $rating, $comment, $conn) {
    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating); // Ensure rating is an integer
    $comment = mysqli_real_escape_string($conn, $comment);

    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }

    // Insert review into database
    $query = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
              VALUES (?, ?, ?, ?, NOW())";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $rating, $comment);

    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id, $conn) {
    // Sanitize input
    $product_id = mysqli_real_escape_string($conn, $product_id);

    // Get all reviews for the product
    $query = "SELECT r.review_id, u.user_name, r.rating, r.comment, r.timestamp
              FROM reviews r
              JOIN users u ON r.user_id = u.user_id
              WHERE r.product_id = ?
              ORDER BY r.timestamp DESC";

    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);

        // Start output
        echo "<div class='reviews'>";
        while ($row = mysqli_fetch_assoc($result)) {
            $user_name = $row['user_name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $timestamp = date('F j, Y g:i a', strtotime($row['timestamp']));

            // Display review
            echo "<div class='review'>";
            echo "<h4> Reviewed by " . htmlspecialchars($user_name) . "</h4>";
            echo "<p><strong>Rating:</strong> ";
            for ($i = 0; $i < $rating; $i++) {
                echo "&#9733;";
            }
            echo "</p>";
            echo "<p>" . htmlspecialchars($comment) . "</p>";
            echo "<p class='timestamp'>" . $timestamp . "</p>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        // Handle error
        echo "Error displaying reviews: " . mysqli_error($conn);
    }
}

// Function to calculate average rating
function get_average_rating($product_id, $conn) {
    $product_id = mysqli_real_escape_string($conn, $product_id);

    $query = "SELECT AVG(rating) as average FROM reviews WHERE product_id = ?";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);
        return round($row['average'], 1); // Round to one decimal place
    } else {
        return 0;
    }
}

// Close database connection
mysqli_close($conn);

?>


<?php
// Function to handle review submission
function submitReview() {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = htmlspecialchars(trim($_POST['name']));
        $email = htmlspecialchars(trim($_POST['email']));
        $rating = (int)trim($_POST['rating']);
        $comment = htmlspecialchars(trim($_POST['comment']));

        // Validate input
        if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
            echo "Please fill in all fields!";
            return;
        }

        if ($rating < 1 || $rating > 5) {
            echo "Rating must be between 1 and 5 stars!";
            return;
        }

        // Store the review
        $review = array(
            'name' => $name,
            'email' => $email,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d H:i:s')
        );

        // Save to file (you might want to use a database in production)
        $reviewsFile = fopen('reviews.txt', 'a');
        fwrite($reviewsFile, serialize($review) . "
");
        fclose($reviewsFile);

        echo "Thank you for submitting your review!";
    }
}

// Function to display reviews
function displayReviews() {
    // Get all reviews from file
    $reviewsData = @file_get_contents('reviews.txt');
    if ($reviewsData === false) {
        return;
    }

    $reviews = explode("
", $reviewsData);
    foreach ($reviews as $review) {
        if (trim($review) == '') continue;

        $review = unserialize($review);
        if ($review !== false) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>{$review['name']}</h3>";
            echo "<p>{$review['email']}</p>";
            echo "<div class='stars'>";
            for ($i = 1; $i <= $review['rating']; $i++) {
                echo "<span class='star'>★</span>";
            }
            echo "</div>";
            echo "<p>{$review['comment']}</p>";
            echo "<small>Posted on {$review['date']}</small>";
            echo "</div>";
        }
    }
}

// Function to calculate average rating
function getAverageRating() {
    $ratings = array();
    $reviewsData = @file_get_contents('reviews.txt');
    if ($reviewsData === false) {
        return 0;
    }

    $reviews = explode("
", $reviewsData);
    foreach ($reviews as $review) {
        if (trim($review) == '') continue;

        $review = unserialize($review);
        if ($review !== false) {
            $ratings[] = $review['rating'];
        }
    }

    if (count($ratings) > 0) {
        return array_sum($ratings) / count($ratings);
    } else {
        return 0;
    }
}
?>


<?php displayReviews(); ?>


Average Rating: <?php echo number_format(getAverageRating(), 1); ?> stars


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add a review
function add_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Invalid rating value";
    }
    
    if (strlen($comment) == 0) {
        return "Comment cannot be empty";
    }
    
    // Check if user exists
    $check_user = "SELECT id FROM users WHERE id = ?";
    $stmt = mysqli_prepare($conn, $check_user);
    mysqli_stmt_bind_param($stmt, "i", $user_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return "User does not exist";
    }
    
    // Insert review
    $insert_review = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at)
                     VALUES (?, ?, ?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $insert_review);
    mysqli_stmt_bind_param($stmt, "iisi", $user_id, $product_id, $rating, $comment);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return "Error adding review: " . mysqli_error($conn);
    }
}

// Function to fetch reviews for a product
function get_reviews($product_id, $limit = 10, $order_by = 'created_at', $sort = 'DESC') {
    global $conn;
    
    // Validate parameters
    if (!is_numeric($product_id)) {
        return false;
    }
    
    // Build the query
    $query = "SELECT r.id AS review_id,
                    u.username,
                    r.rating,
                    r.comment,
                    r.created_at
             FROM reviews r
             JOIN users u ON r.user_id = u.id
             WHERE r.product_id = ?
             ORDER BY $order_by $sort
             LIMIT ?";
    
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ii", $product_id, $limit);
    
    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        return $result;
    } else {
        return false;
    }
}

// Function to display reviews
function display_reviews($product_id) {
    // Get reviews for the product
    $reviews_result = get_reviews($product_id);
    
    if ($reviews_result && mysqli_num_rows($reviews_result) > 0) {
        echo '<div class="reviews-container">';
        
        while ($review = mysqli_fetch_assoc($reviews_result)) {
            echo '<div class="review">';
                echo '<div class="review-header">';
                    echo '<span class="username">' . htmlspecialchars($review['username']) . '</span>';
                    // Display rating stars
                    echo '<div class="rating">';
                        for ($i = 1; $i <= 5; $i++) {
                            if ($i <= $review['rating']) {
                                echo '<span class="star">★</span>';
                            } else {
                                echo '<span class="star">☆</span>';
                            }
                        }
                    echo '</div>';
                echo '</div>';
                
                echo '<p class="comment">' . htmlspecialchars($review['comment']) . '</p>';
                
                // Display helpful vote button
                echo '<div class="vote-container">';
                    echo '<button class="helpful-vote">Was this helpful?</button>';
                echo '</div>';
                
                echo '<small class="date">' . date('F j, Y', strtotime($review['created_at'])) . '</small>';
            echo '</div>';
        }
        
        echo '</div>';
    } else {
        echo 'No reviews available for this product.';
    }
}

// Example usage:
if (isset($_POST['submit_review'])) {
    $user_id = 1; // Replace with actual user ID
    $product_id = 1; // Replace with actual product ID
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $result = add_review($user_id, $product_id, $rating, $comment);
    if ($result === true) {
        echo "Review added successfully!";
    } else {
        echo $result;
    }
}

// Display reviews for product ID 1
display_reviews(1);

?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submitReview($author, $rating, $review_text, $conn) {
    // Sanitize inputs
    $author = mysqli_real_escape_string($conn, htmlspecialchars($author));
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, htmlspecialchars($review_text));

    // Validate inputs
    if ($author == "" || $rating < 1 || $rating > 5 || $review_text == "") {
        return false;
    }

    // Insert review into database
    $sql = "INSERT INTO reviews (author, rating, review_text) 
            VALUES ('$author', '$rating', '$review_text')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display all reviews
function displayReviews($conn) {
    // Get reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Review by " . htmlspecialchars($row['author']) . "</h3>";
            echo "<p>Rating: ";
            // Display stars
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</p>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Submitted on: " . date('F j, Y', $row['timestamp']) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet!</p>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include 'review_functions.php';

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $rating = $_POST['rating'];
    $review_text = $_POST['review_text'];
    
    // Submit the review
    if (submitReview($author, $rating, $review_text, $conn)) {
        echo "<script>alert('Thank you for submitting your review!');</script>";
    } else {
        echo "<script>alert('Error submitting review. Please try again.');history.go(-1);</script>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
function submitUserReview($userId, $reviewText, $rating) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    try {
        // Validate input
        if (empty(trim($reviewText)) || !is_numeric($rating) || $rating < 1 || $rating > 5) {
            return "Invalid review or rating. Please provide a valid review and rating between 1 and 5.";
        }

        // Connect to database
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the SQL query to insert review
        $stmt = $conn->prepare("
            INSERT INTO reviews (user_id, review_text, rating, review_date)
            VALUES (:userId, :reviewText, :rating, NOW())
        ");
        
        $stmt->bindParam(':userId', $userId);
        $stmt->bindParam(':reviewText', $reviewText);
        $stmt->bindParam(':rating', $rating);

        $stmt->execute();

        // Calculate and return average rating after submission
        $avgRatingQuery = $conn->prepare("
            SELECT AVG(rating) as average_rating FROM reviews WHERE user_id = :userId
        ");
        
        $avgRatingQuery->bindParam(':userId', $userId);
        $avgRatingQuery->execute();
        $result = $avgRatingQuery->fetch(PDO::FETCH_ASSOC);

        return "Review submitted successfully! Current average rating: " . number_format($result['average_rating'], 1, '.', '');

    } catch (PDOException $e) {
        // Handle database errors
        return "Error submitting review: " . $e->getMessage();
    }
}

// Example usage:
$userId = 1;
$userReview = "Great experience!";
$userRating = 5;

echo submitUserReview($userId, $userReview, $userRating);
?>


<?php
// Database configuration
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create a user review
function create_review($user_id, $product_id, $rating, $comment) {
    global $conn;
    
    // Validate inputs
    if (
        empty($user_id) ||
        empty($product_id) ||
        !is_numeric($rating) || 
        $rating < 1 || 
        $rating > 5 ||
        empty($comment)
    ) {
        return "Error: Invalid input";
    }

    // Sanitize inputs
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // SQL query to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, created_at) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment', CURRENT_TIMESTAMP)";

    if ($conn->query($sql) === TRUE) {
        return array(
            "status" => "success",
            "message" => "Review submitted successfully",
            "review_id" => $conn->insert_id
        );
    } else {
        return "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Example usage:
$user_id = 123; // Replace with actual user ID
$product_id = 456; // Replace with actual product ID
$rating = 4; // Rating from 1 to 5
$comment = "This is a great product!"; // Review comment

$result = create_review($user_id, $product_id, $rating, $comment);

// Display result
if (is_array($result)) {
    echo "<pre>";
    print_r($result);
    echo "</pre>";
} else {
    echo $result;
}

$conn->close();
?>


<?php
function add_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'reviews_db';

    // Create database connection
    $conn = new mysqli($host, $db_username, $db_password, $database);

    // Check for connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Sanitize inputs to prevent SQL injection
    $user_id = mysqli_real_escape_string($conn, $user_id);
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $rating = mysqli_real_escape_string($conn, $rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Prepare and execute SQL query
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) 
            VALUES ('$user_id', '$product_id', '$rating', '$comment')";
            
    if ($conn->query($sql)) {
        // Review added successfully
        $conn->close();
        return true;
    } else {
        // Error adding review
        $conn->close();
        return false;
    }
}
?>


// Example usage:
$user_id = 1;
$product_id = 5;
$rating = 4;
$comment = "Great product!";

if (add_review($user_id, $product_id, $rating, $comment)) {
    echo "Thank you for your review!";
} else {
    echo "Error adding review. Please try again.";
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle reviews submission and display
function handleReviews() {
    global $conn;

    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $rating = (int)$_POST['rating'];
        $review_text = mysqli_real_escape_string($conn, $_POST['review']);

        // Validate input
        if ($name == '' || $email == '' || $review_text == '') {
            echo "Please fill in all required fields.";
            exit();
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (name, email, rating, review_text)
                VALUES ('$name', '$email', $rating, '$review_text')";
        
        if (!mysqli_query($conn, $sql)) {
            echo "Error: " . mysqli_error($conn);
        }

        // Redirect back to the page
        header('Location: ' . $_SERVER['PHP_SELF']);
        exit();
    }

    // Retrieve reviews from database
    $sql = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars($row['name']) . "</h3>";
            echo "<p>Email: " . htmlspecialchars($row['email']) . "</p>";
            echo "<div class='rating'>Rating: ";
            for ($i = 1; $i <= 5; $i++) {
                if ($i <= $row['rating']) {
                    echo "<span class='star'>★</span>";
                } else {
                    echo "<span class='star'>☆</span>";
                }
            }
            echo "</div>";
            echo "<p>" . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted on: " . date('F j, Y g:i a', $row['timestamp']) . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available.</p>";
    }

    // Close database connection
    mysqli_close($conn);
}

// Call the function to display reviews
handleReviews();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Reviews</title>
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .rating-stars span {
            color: gold;
        }
        .review {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Review submission form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST" class="review-form">
            <h2>Submit a Review</h2>
            <p>Please fill in your details and review below:</p>
            <input type="text" name="name" placeholder="Your Name" required><br><br>
            <input type="email" name="email" placeholder="Email Address" required><br><br>
            <div class="rating-stars">
                Rating: 
                <select name="rating">
                    <?php for ($i = 1; $i <=5; $i++) { ?>
                        <option value="<?php echo $i ?>"><?php echo $i ?> Stars</option>
                    <?php } ?>
                </select><br><br>
            </div>
            <textarea name="review" placeholder="Write your review here..." rows="4" cols="50" required></textarea><br><br>
            <input type="submit" value="Submit Review">
        </form>

        <!-- Display reviews -->
        <?php handleReviews(); ?>
    </div>
</body>
</html>


<?php
// This function handles adding new reviews and displaying existing ones
function userReviewSystem() {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews';

    try {
        // Create a database connection
        $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if the form is submitted
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            // Sanitize and validate input
            $name = htmlspecialchars(trim($_POST['name']));
            $rating = intval($_POST['rating']);
            $comment = htmlspecialchars(trim($_POST['comment']));

            // Basic validation
            if ($name == '' || $comment == '') {
                throw new Exception('Please fill in all fields');
            }

            if ($rating < 1 || $rating > 5) {
                throw new Exception('Rating must be between 1 and 5 stars');
            }

            // Insert the review into the database
            $stmt = $conn->prepare("INSERT INTO reviews (name, rating, comment, timestamp) VALUES (:name, :rating, :comment, NOW())");
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':rating', $rating);
            $stmt->bindParam(':comment', $comment);

            $stmt->execute();

            // Redirect back to the page after submission
            header('Location: ' . $_SERVER['PHP_SELF']);
            exit();
        }

        // Get all reviews from the database
        $stmt = $conn->query("SELECT * FROM reviews ORDER BY timestamp DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);

    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    }
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Review System</title>
    <style>
        /* Add some basic styling */
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
        }

        .star {
            font-size: 24px;
        }

        .review-list {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 5px;
        }

        .review-item {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
    </style>
</head>
<body>
    <h1>Product Review System</h1>

    <!-- Review Form -->
    <div class="review-form">
        <h2>Submit Your Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div>
                <label>Rating:</label><br>
                <div class="rating-stars">
                    <?php for ($i = 1; $i <= 5; $i++) { ?>
                        <input type="radio" name="rating" value="<?php echo $i; ?>" class="star">★
                    <?php } ?>
                </div>
            </div>

            <div>
                <label for="comment">Comment:</label><br>
                <textarea id="comment" name="comment" rows="4" required></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>
    </div>

    <!-- Display Reviews -->
    <div class="review-list">
        <?php if (!empty($reviews)) { ?>
            <h2>Customer Reviews</h2>
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <div class="rating-stars">
                        <?php for ($i = 1; $i <= $review['rating']; $i++) { ?>
                            <span class="star">★</span>
                        <?php } ?>
                    </div>
                    <h3><?php echo $review['name']; ?></h3>
                    <p><?php echo $review['comment']; ?></p>
                    <small><?php echo date('F j, Y', strtotime($review['timestamp'])); ?></small>
                </div>
            <?php } ?>
        <?php } else { ?>
            <p>No reviews yet. Be the first to review this product!</p>
        <?php } ?>
    </div>

</body>
</html>

<?php
} // End of userReviewSystem function

// Call the function
userReviewSystem();
?>


<?php
function user_review($name = '', $review = '', $rating = 0, $email = '') {
    // File where reviews will be stored
    $filename = 'reviews.txt';
    
    // If all parameters are empty, display existing reviews
    if (empty($name) && empty($review) && empty($rating) && empty($email)) {
        // Read reviews from file and display them
        if (file_exists($filename)) {
            $reviews = unserialize(file_get_contents($filename));
            
            echo '<div class="reviews">';
            foreach ($reviews as $review_data) {
                echo '<div class="review-card">';
                    echo '<h3>' . htmlspecialchars($review_data['name']) . '</h3>';
                    if (!empty($review_data['email'])) {
                        echo '<p>' . htmlspecialchars($review_data['email']) . '</p>';
                    }
                    echo '<p>Rating: ' . $review_data['rating'] . '/5</p>';
                    echo '<p>' . nl2br(htmlspecialchars($review_data['review'])) . '</p>';
                    // Add delete button
                    echo '<a href="?id=' . htmlspecialchars($review_data['id']) . '" class="delete-btn">Delete</a>';
                echo '</div>';
            }
            echo '</div>';
        } else {
            echo 'No reviews yet!';
        }
        
        return;
    }
    
    // Validate input
    if (empty($name) || $rating < 1 || $rating > 5) {
        die('Please fill in all required fields!');
    }
    
    // Check if review file exists
    if (!file_exists($filename)) {
        touch($filename);
    }
    
    // Generate unique ID for the review
    $id = uniqid();
    
    // Create array of review data
    $review_data = [
        'id' => $id,
        'name' => htmlspecialchars($name),
        'email' => htmlspecialchars($email),
        'rating' => (int)$rating,
        'review' => htmlspecialchars($review),
        'timestamp' => time()
    ];
    
    // Read existing reviews from file
    $reviews = array();
    if (file_exists($filename)) {
        $contents = file_get_contents($filename);
        $reviews = unserialize($contents);
    }
    
    // Add new review to the beginning of the array
    array_unshift($reviews, $review_data);
    
    // Save reviews back to file
    $success = file_put_contents($filename, serialize($reviews));
    
    if ($success === false) {
        die('Error saving review!');
    }
    
    // Display success message
    echo '<div class="success-message">Review submitted successfully!</div>';
}

// Example usage:
if (isset($_GET['id'])) {
    // Delete review with specified ID
    $filename = 'reviews.txt';
    if (file_exists($filename)) {
        $reviews = unserialize(file_get_contents($filename));
        foreach ($reviews as $key => $review_data) {
            if ($review_data['id'] == $_GET['id']) {
                unset($reviews[$key]);
                break;
            }
        }
        file_put_contents($filename, serialize(array_values($reviews)));
    }
}

// Display form for submitting reviews
echo '<form method="post" action="">';
echo '<h2>Submit a Review</h2>';
echo '<input type="text" name="name" placeholder="Your Name" required><br>';
echo '<textarea name="review" placeholder="Write your review..." required></textarea><br>';
echo '<select name="rating">';
for ($i = 1; $i <= 5; $i++) {
    echo '<option value="' . $i . '">' . $i . ' Star' . ($i != 1 ? 's' : '') . '</option>';
}
echo '</select><br>';
echo '<input type="email" name="email" placeholder="Your Email (optional)">';
echo '<button type="submit">Submit Review</button>';
echo '</form>';

// Display existing reviews
user_review();
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection parameters
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if rating is between 1 and 5
    if ($rating < 1 || $rating > 5) {
        return "Rating must be between 1 and 5!";
    }

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews_products (user_id, product_id, rating, comment, date_created)
                            VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)");

    if ($stmt === false) {
        return "Error: " . mysqli_error($conn);
    }

    // Bind parameters to the statement
    $stmt->bind_param("iiss", $user_id, $product_id, $rating, $comment);

    // Execute the statement
    if ($stmt->execute()) {
        // Get the new average rating for the product
        $average_rating = get_average_rating($product_id);
        
        // Close the statement and connection
        $stmt->close();
        $conn->close();

        return array(
            'status' => 'success',
            'message' => 'Review submitted successfully!',
            'average_rating' => $average_rating
        );
    } else {
        // Return error if execution failed
        $error = "Error: " . $stmt->error;
        $stmt->close();
        $conn->close();
        return array(
            'status' => 'error',
            'message' => $error
        );
    }
}

// Helper function to get average rating for a product
function get_average_rating($product_id) {
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $stmt = $conn->prepare("SELECT AVG(rating) as average FROM reviews_products WHERE product_id = ?");
    
    if ($stmt === false) {
        return "Error: " . mysqli_error($conn);
    }

    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        $average_rating = round($row['average'], 2); // Round to two decimal places
        return $average_rating;
    }

    $stmt->close();
    $conn->close();
}

// Example usage:
$user_id = 1;
$product_id = 1;
$rating = 5;
$comment = "Great product!";

$result = submit_review($user_id, $product_id, $rating, $comment);

if ($result['status'] == 'success') {
    echo "Review submitted successfully!";
    echo "New average rating: " . $result['average_rating'];
} else {
    echo "Error submitting review: " . $result['message'];
}
?>


<?php
// Function to handle and display reviews
function user_review() {
    // Database connection parameters
    $host = "localhost";
    $username = "root";
    $password = "";
    $database = "reviews_db";

    // Create database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Process form submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get and sanitize user input
        $user_name = htmlspecialchars($_POST['name']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);

        // Validate input
        if ($rating < 1 || $rating > 5) {
            die("Invalid rating! Rating must be between 1 and 5.");
        }

        if (strlen($comment) == 0) {
            die("Comment cannot be empty!");
        }

        // Insert review into database
        $sql = "INSERT INTO reviews (user_name, rating, comment, review_date)
                VALUES ('$user_name', '$rating', '$comment', NOW())";

        if ($conn->query($sql) === TRUE) {
            echo "<p>Review submitted successfully!</p>";
        } else {
            die("Error submitting review: " . $conn->error);
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h4>Rating: " . str_repeat("★", $row['rating']) . "</h4>";
            echo "<p><strong>" . $row['user_name'] . "</strong></p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<small>" . $row['review_date'] . "</small>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet. Be the first to review!</p>";
    }

    // Close database connection
    $conn->close();
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($user_id, $product_id, $rating, $review_text) {
    global $conn;
    
    // Sanitize input
    $rating = intval($rating);
    $review_text = htmlspecialchars(strip_tags($review_text));
    
    // Check if all required fields are filled
    if ($rating < 1 || $rating > 5 || empty($review_text)) {
        return "Please fill in all required fields.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, review_date) 
            VALUES (?, ?, ?, ?, NOW())";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $rating, $review_text);
        
        if (mysqli_stmt_execute($stmt)) {
            return "Review submitted successfully!";
        } else {
            return "Error submitting review: " . mysqli_error($conn);
        }
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    // Get all reviews for the product
    $sql = "SELECT r.review_text, r.rating, r.review_date, u.user_name 
            FROM reviews r 
            JOIN users u ON r.user_id = u.id 
            WHERE r.product_id = ? 
            ORDER BY r.review_date DESC";
            
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h4>By " . $row['user_name'] . " - " . date('M j, Y', strtotime($row['review_date'])) . "</h4>";
            echo "<p>" . str_repeat("★", $row['rating']) . "</p>";
            echo "<p>" . $row['review_text'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "Error displaying reviews: " . mysqli_error($conn);
    }
}

// Function to calculate average rating
function getAverageRating($product_id) {
    global $conn;
    
    // Calculate average rating
    $sql = "SELECT AVG(rating) as average_rating 
            FROM reviews 
            WHERE product_id = ?";
            
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        while ($row = mysqli_fetch_assoc($result)) {
            return number_format((float)$row['average_rating'], 1, '.', '');
        }
    } else {
        return 0;
    }
}

// Example usage:
// Submit a review
$user_id = 1;
$product_id = 1;
$rating = 5;
$review_text = "This is an amazing product!";
echo submitReview($user_id, $product_id, $rating, $review_text);

// Display reviews for product ID 1
echo "<h2>Product Reviews</h2>";
displayReviews(1);

// Get average rating
echo "<p>Average Rating: " . getAverageRating(1) . "/5</p>";

// Close database connection
mysqli_close($conn);
?>


<?php
function user_review() {
    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "reviews";

    // Create database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Handle review submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = trim($_POST['username']);
        $email = trim($_POST['email']);
        $rating = $_POST['rating'];
        $comment = trim($_POST['comment']);

        // Validate input
        if (empty($username) || empty($email) || empty($rating) || empty($comment)) {
            echo "Please fill in all required fields.";
        } else {
            // Sanitize inputs to prevent SQL injection
            $username = mysqli_real_escape_string($conn, $username);
            $email = mysqli_real_escape_string($conn, $email);
            $rating = mysqli_real_escape_string($conn, $rating);
            $comment = mysqli_real_escape_string($conn, $comment);

            // Insert review into database
            $sql = "INSERT INTO reviews (username, email, rating, comment)
                    VALUES ('$username', '$email', '$rating', '$comment')";
            
            if ($conn->query($sql) === TRUE) {
                echo "<p style='color: green;'>Thank you for your review!</p>";
            } else {
                echo "Error: " . $sql . "<br>" . $conn->error;
            }
        }
    }

    // Display existing reviews
    $sql = "SELECT * FROM reviews";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div style='border: 1px solid #ddd; padding: 15px; margin-bottom: 15px;'>";
            echo "<h3>" . $row["username"] . "</h3>";
            echo "<p>Rating: " . $row["rating"] . " stars</p>";
            echo "<p>" . $row["comment"] . "</p>";
            echo "<p style='color: #666;'>Posted on: " . $row["date"] . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }

    // Close database connection
    $conn->close();
}

// Display the review form
echo "<h2>Submit a Review</h2>
      <form method='post' action='" . $_SERVER['PHP_SELF'] . "'>
          <label for='username'>Username:</label><br>
          <input type='text' id='username' name='username'><br>

          <label for='email'>Email:</label><br>
          <input type='email' id='email' name='email'><br>

          <label for='rating'>Rating:</label><br>";
          
// Create rating radio buttons
for ($i = 1; $i <= 5; $i++) {
    echo "<input type='radio' name='rating' value='$i'>$i stars<br>";
}

echo "<label for='comment'>Comment:</label><br>
      <textarea id='comment' name='comment' rows='4'></textarea><br>
      <input type='submit' value='Submit Review'>
      </form>";

// Call the review function
user_review();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to save review to database
function saveReview($product_id, $name, $email, $rating, $comment, $conn) {
    // Sanitize inputs
    $name = htmlspecialchars(strip_tags(trim($name)));
    $email = htmlspecialchars(strip_tags(trim($email)));
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags(trim($comment)));

    // Check if all fields are filled
    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {
        return false;
    }

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, name, email, rating, comment) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $name, $email, $rating, $comment);

    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }

    $stmt->close();
}

// Function to display reviews
function displayReviews($product_id, $conn) {
    $reviews = array();

    // Get reviews from database
    $sql = "SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $review = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'timestamp' => $row['timestamp']
        );
        $reviews[] = $review;
    }

    $stmt->close();

    return $reviews;
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a review
function submitReview($userId, $productId, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $rating = intval($rating);
    $comment = htmlspecialchars(trim($comment));
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("iiis", $userId, $productId, $rating, $comment);
    
    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to get all reviews for a product
function getProductReviews($productId) {
    global $conn;
    
    $reviews = array();
    
    // Get reviews from database
    $result = mysqli_query($conn, "SELECT r.*, u.username FROM reviews r 
                                  JOIN users u ON r.user_id = u.id 
                                  WHERE r.product_id = $productId ORDER BY r.review_date DESC");
    
    if ($result) {
        while ($row = mysqli_fetch_assoc($result)) {
            $reviews[] = array(
                'id' => $row['id'],
                'user_id' => $row['user_id'],
                'username' => $row['username'],
                'rating' => $row['rating'],
                'comment' => $row['comment'],
                'review_date' => $row['review_date']
            );
        }
    }
    
    return $reviews;
}

// Function to calculate average rating for a product
function getAverageRating($productId) {
    global $conn;
    
    $result = mysqli_query($conn, "SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = $productId");
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average_rating'], 1); // Round to one decimal place
}

// Function to display review form
function displayReviewForm() {
    if (isLoggedIn()) { // Assuming you have a login system
        ?>
        <form method="post" action="submit_review.php">
            <div class="rating-container">
                <label for="rating">Rating:</label>
                <select name="rating" id="rating">
                    <option value="1">1 Star</option>
                    <option value="2">2 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="5">5 Stars</option>
                </select>
            </div>
            
            <div class="comment-container">
                <label for="comment">Comment:</label>
                <textarea name="comment" id="comment" rows="4"></textarea>
            </div>
            
            <button type="submit" name="submit_review">Submit Review</button>
        </form>
        <?php
    } else {
        echo "Please log in to submit a review.";
    }
}

// Function to display reviews for a product
function displayProductReviews($productId) {
    $reviews = getProductReviews($productId);
    $averageRating = getAverageRating($productId);
    
    if (!empty($reviews)) {
        ?>
        <div class="product-reviews">
            <h3>Product Reviews</h3>
            <p>Average Rating: <?php echo $averageRating; ?> stars</p>
            
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <div class="review-header">
                        <span class="username"><?php echo $review['username']; ?></span>
                        <span class="rating"><?php echo str_repeat("★", $review['rating']); ?></span>
                    </div>
                    <p class="comment"><?php echo $review['comment']; ?></p>
                </div>
            <?php } ?>
        </div>
        <?php
    } else {
        echo "No reviews available for this product.";
    }
}

// Function to check if user is logged in (example)
function isLoggedIn() {
    // Assuming you have a session-based login system
    return isset($_SESSION['user_id']);
}
?>


<?php
// Connect to database
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "reviews";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if (isset($_POST['submit'])) {
    // Sanitize inputs
    $rating = htmlspecialchars($_POST['rating']);
    $review = htmlspecialchars($_POST['review']);

    // Validate input lengths
    if ($rating < 1 || $rating > 5) {
        echo "Invalid rating!";
    } elseif (strlen($review) < 1 || strlen($review) > 500) {
        echo "Review must be between 1 and 500 characters!";
    } else {
        // Insert review into database
        $sql = "INSERT INTO reviews (rating, review_text)
                VALUES (?, ?)";
        
        if ($stmt = mysqli_prepare($conn, $sql)) {
            mysqli_stmt_bind_param($stmt, "is", $rating, $review);
            mysqli_stmt_execute($stmt);
            echo "Thank you for submitting your review!";
            // Reset form
            header("refresh:2;url=reviews.php");
        }
    }
}

// Get reviews from database
$sql = "SELECT rating, review_text, timestamp FROM reviews ORDER BY timestamp DESC";
$result = mysqli_query($conn, $sql);

// Calculate average rating
$average_rating = 0;
$total_ratings = 0;

$sql_avg = "SELECT AVG(rating) as avg_rating FROM reviews";
$result_avg = mysqli_query($conn, $sql_avg);
if ($row_avg = mysqli_fetch_assoc($result_avg)) {
    $average_rating = round($row_avg['avg_rating'], 1);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        .stars {
            font-size: 24px;
        }
        .review-box {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <h1>Product Reviews</h1>
    
    <!-- Review form -->
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        <div class="stars">
            Rating:<br>
            <select name="rating">
                <option value="">Select rating</option>
                <option value="5">★★★★★</option>
                <option value="4">★★★★☆</option>
                <option value="3">★★☆☆☆</option>
                <option value="2">★☆☆☆☆</option>
                <option value="1">☆☆☆☆☆</option>
            </select>
        </div><br>

        <div>
            Review:<br>
            <textarea name="review" rows="4" cols="50"></textarea>
        </div><br>

        <input type="submit" name="submit" value="Submit">
    </form>

    <!-- Display reviews -->
    <h3>Customer Reviews</h3>
    <p>Average Rating: <?php echo $average_rating; ?> stars</p>

    <?php
    while ($row = mysqli_fetch_assoc($result)) {
        // Convert rating to stars
        $stars = str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']);
        
        echo "<div class='review-box'>";
        echo "<p><strong>Rating:</strong> " . $stars . "</p>";
        echo "<p><strong>Review:</strong> " . $row['review_text'] . "</p>";
        echo "<p><em>Posted on: " . $row['timestamp'] . "</em></p>";
        echo "</div>";
    }
    ?>

</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Initialize some sample data (you would typically retrieve this from a database)
$data = array(
    'john_doe' => array(
        'reviews' => array(
            array(
                'id' => 1,
                'text' => 'This is a great product!',
                'rating' => 5,
                'timestamp' => strtotime('2023-01-01')
            ),
            array(
                'id' => 2,
                'text' => 'Good quality, but could be better.',
                'rating' => 4,
                'timestamp' => strtotime('2023-01-02')
            )
        )
    ),
    'jane_smith' => array(
        'reviews' => array(
            array(
                'id' => 3,
                'text' => 'I love this product!',
                'rating' => 5,
                'timestamp' => strtotime('2023-01-03')
            )
        )
    )
);

// Function to add a new review
function addReview($username, $reviewText, $rating) {
    global $data;
    
    // Initialize the user if they don't exist
    if (!isset($data[$username])) {
        $data[$username] = array('reviews' => array());
    }
    
    // Create a new review ID (you could use UUID or database auto-increment)
    $newReviewId = uniqid();
    
    $newReview = array(
        'id' => $newReviewId,
        'text' => $reviewText,
        'rating' => $rating,
        'timestamp' => time()
    );
    
    // Add the new review to the user's reviews
    $data[$username]['reviews'][] = $newReview;
    
    return true;
}

// Function to get all reviews for a user
function getReviews($username) {
    global $data;
    
    if (!isset($data[$username])) {
        return array();
    }
    
    return $data[$username]['reviews'];
}

// Function to delete a review
function deleteReview($username, $reviewId) {
    global $data;
    
    if (!isset($data[$username])) {
        return false;
    }
    
    // Loop through reviews and find the matching ID
    foreach ($data[$username]['reviews'] as $key => $review) {
        if ($review['id'] == $reviewId) {
            unset($data[$username]['reviews'][$key]);
            return true;
        }
    }
    
    return false;
}

// Function to update a review
function updateReview($username, $reviewId, $newText, $newRating) {
    global $data;
    
    if (!isset($data[$username])) {
        return false;
    }
    
    // Loop through reviews and find the matching ID
    foreach ($data[$username]['reviews'] as &$review) {
        if ($review['id'] == $reviewId) {
            $review['text'] = $newText;
            $review['rating'] = $newRating;
            $review['timestamp'] = time(); // Update timestamp
            return true;
        }
    }
    
    return false;
}

// Function to calculate average rating for a user
function getAverageRating($username) {
    global $data;
    
    if (!isset($data[$username]) || empty($data[$username]['reviews'])) {
        return 0;
    }
    
    $total = array_sum(array_column($data[$username]['reviews'], 'rating'));
    $average = $total / count($data[$username]['reviews']);
    
    return round($average, 1);
}

// Example usage:
if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'add_review':
            addReview('john_doe', $_POST['review_text'], $_POST['rating']);
            break;
        
        case 'delete_review':
            deleteReview('john_doe', $_POST['review_id']);
            break;
        
        case 'update_review':
            updateReview('john_doe', $_POST['review_id'], $_POST['new_text'], $_POST['new_rating']);
            break;
    }
}

// Display all reviews for a user
$reviews = getReviews('john_doe');
foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h3>Rating: {$review['rating']}</h3>";
    echo "<p>{$review['text']}</p>";
    echo "<small>".date('Y-m-d H:i:s', $review['timestamp'])."</small>";
    echo "</div>";
}

// Display average rating
echo "Average Rating: ".getAverageRating('john_doe');
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'reviews_db';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to submit a new review
function submit_review($product_id, $user_name, $user_email, $rating, $comment) {
    global $conn;

    // Sanitize input data
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $user_name = mysqli_real_escape_string($conn, $user_name);
    $user_email = mysqli_real_escape_string($conn, $user_email);
    $rating = intval($rating);
    $comment = mysqli_real_escape_string($conn, $comment);

    // Insert review into database
    $sql = "INSERT INTO reviews (product_id, user_name, user_email, rating, comment) 
            VALUES ('$product_id', '$user_name', '$user_email', '$rating', '$comment')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to display reviews for a product
function display_reviews($product_id) {
    global $conn;

    // Get all reviews for this product
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY review_date DESC";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Calculate average rating
        $total_rating = 0;
        while ($row = mysqli_fetch_assoc($result)) {
            $total_rating += $row['rating'];
        }
        $average_rating = number_format(($total_rating / mysqli_num_rows($result)), 1, '.', '');

        echo "<div class='reviews'>";
        echo "<h3>Product Reviews</h3>";
        echo "<p>Average Rating: $average_rating stars</p>";

        // Reset result pointer to display reviews
        mysqli_data_seek($result, 0);

        while ($row = mysqli_fetch_assoc($result)) {
            $user_name = $row['user_name'];
            $rating = $row['rating'];
            $comment = $row['comment'];
            $date = date('F j, Y', strtotime($row['review_date']));

            echo "<div class='review'>";
            echo "<h4>$user_name</h4>";
            echo "<p>Rating: $rating stars</p>";
            echo "<p>$comment</p>";
            echo "<small>Posted on $date</small>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "No reviews available for this product.";
    }
}

// Function to display review form
function display_review_form($product_id) {
    echo "<form method='post' action='submit_review.php'>";
    echo "<input type='hidden' name='product_id' value='$product_id'>";
    echo "<div class='form-group'>";
    echo "<label for='user_name'>Name:</label>";
    echo "<input type='text' id='user_name' name='user_name' required>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='user_email'>Email:</label>";
    echo "<input type='email' id='user_email' name='user_email' required>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='rating'>Rating:</label><br>";
    echo "<input type='radio' name='rating' value='5' required> 5 stars<br>";
    echo "<input type='radio' name='rating' value='4'> 4 stars<br>";
    echo "<input type='radio' name='rating' value='3'> 3 stars<br>";
    echo "<input type='radio' name='rating' value='2'> 2 stars<br>";
    echo "<input type='radio' name='rating' value='1'> 1 star";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label for='comment'>Comment:</label>";
    echo "<textarea id='comment' name='comment' rows='5' required></textarea>";
    echo "</div>";
    
    echo "<button type='submit' name='submit_review'>Submit Review</button>";
    echo "</form>";
}

// Close database connection
mysqli_close($conn);
?>



display_review_form($product_id);


display_reviews($product_id);


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Query to get all reviews
    $sql = "SELECT * FROM reviews ORDER BY id DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
                echo "<h3>" . htmlspecialchars($row['username']) . "</h3>";
                echo "<p>Rating: " . $row['rating'] . " stars</p>";
                echo "<p>Comment: " . htmlspecialchars($row['comment']) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No reviews found!";
    }
}

// Function to handle review submission
function submitReview() {
    global $conn;
    
    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        // Validate input
        if (empty($username) || empty($rating) || empty($comment)) {
            die("Please fill in all required fields!");
        }
        
        if (!preg_match("/^[0-9]+$/", $rating) || $rating < 1 || $rating > 5) {
            die("Rating must be between 1 and 5 stars!");
        }
        
        // Sanitize input
        $username = htmlspecialchars(strip_tags($username));
        $comment = htmlspecialchars(strip_tags($comment));
        
        // Insert review into database
        $sql = "INSERT INTO reviews (username, rating, comment) VALUES ('$username', '$rating', '$comment')";
        
        if ($conn->query($sql)) {
            echo "Thank you for your review!";
            displayReviews();
        } else {
            die("Error: " . $sql . "<br>" . $conn->error);
        }
    }
}

// Main function to handle both submission and display
function userReview() {
    // Create reviews table if not exists
    global $conn;
    
    $sql = "CREATE TABLE IF NOT EXISTS reviews (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(255) NOT NULL,
            rating INT NOT NULL,
            comment TEXT NOT NULL,
            timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          )";
          
    if (!$conn->query($sql)) {
        die("Error creating table: " . $conn->error);
    }
    
    // Display review form
    echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
        echo "<div>";
            echo "<label for='username'>Name:</label>";
            echo "<input type='text' id='username' name='username' required><br>";
            
            echo "<label for='rating'>Rating (1-5):</label>";
            echo "<input type='number' id='rating' name='rating' min='1' max='5' required><br>";
            
            echo "<label for='comment'>Comment:</label>";
            echo "<textarea id='comment' name='comment' rows='4' cols='50' required></textarea><br>";
            
            echo "<input type='submit' value='Submit Review'>";
        echo "</div>";
    echo "</form>";
    
    // Submit review if form was submitted
    submitReview();
    
    // Display existing reviews
    displayReviews();
}

// Call the main function
userReview();

// Close database connection
$conn->close();
?>


<?php
function submit_review($product_id, $user_id, $rating = 0, $review_text = '') {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'username';
    $db_password = 'password';
    $database = 'your_database';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    if (!$conn) {
        die('Connection failed: ' . mysqli_connect_error());
    }

    // Check if the user has already submitted a review for this product
    $check_review_query = "SELECT id FROM reviews WHERE product_id = $product_id AND user_id = $user_id";
    $result = mysqli_query($conn, $check_review_query);

    if (mysqli_num_rows($result) > 0) {
        echo "You have already submitted a review for this product!";
        return;
    }

    // Insert the new review into the database
    $insert_query = "
        INSERT INTO reviews (
            product_id,
            user_id,
            rating,
            review_text,
            submission_date
        ) VALUES (
            $product_id,
            $user_id,
            $rating,
            '$review_text',
            CURRENT_TIMESTAMP
        )
    ";

    if (mysqli_query($conn, $insert_query)) {
        // Update the product's average rating
        $update_avg_rating = "
            UPDATE products 
            SET avg_rating = (
                SELECT AVG(rating) 
                FROM reviews 
                WHERE product_id = $product_id
            ), review_count = (
                SELECT COUNT(*) 
                FROM reviews 
                WHERE product_id = $product_id
            )
            WHERE id = $product_id
        ";
        
        if (mysqli_query($conn, $update_avg_rating)) {
            echo "Thank you for your review!";
        } else {
            echo "Error updating average rating: " . mysqli_error($conn);
        }
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }

    // Close the database connection
    mysqli_close($conn);
}

// Example usage:
$product_id = 1;
$user_id = 5;
$rating = 4;
$review_text = "Great product! Highly recommended.";

submit_review($product_id, $user_id, $rating, $review_text);
?>


<?php
// Function to display and handle product reviews
function display_reviews($product_id) {
    // Database connection parameters
    $host = "localhost";
    $username = "root";
    $password = "";
    $database_name = "reviews_db";

    // Connect to the database
    $conn = mysqli_connect($host, $username, $password, $database_name);

    // Check if the connection is successful
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // SQL query to fetch all reviews for a specific product
    $sql = "SELECT user_name, review_text, review_date FROM reviews WHERE product_id = ?";
    
    // Prepare and bind parameters
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);

    // Execute the query
    mysqli_stmt_execute($stmt);

    // Get result set
    $result = mysqli_stmt_get_result($stmt);

    // Check if there are any reviews
    if (mysqli_num_rows($result) == 0) {
        echo "<p>No reviews yet.</p>";
    } else {
        // Display existing reviews
        while ($row = mysqli_fetch_assoc($result)) {
            $review_date = date('d/m/Y H:i', strtotime($row['review_date']));
            echo "
                <div class='review'>
                    <h3>Review by " . htmlspecialchars($row['user_name']) . "</h3>
                    <p>" . htmlspecialchars($row['review_text']) . "</p>
                    <small>Posted on: $review_date</small>
                </div>
            ";
        }
    }

    // Close the statement
    mysqli_stmt_close($stmt);

    // Display review form for new reviews
    echo "
        <form method='post' action='submit_review.php'>
            <input type='hidden' name='product_id' value='" . $product_id . "'>
            <div class='form-group'>
                <label>Your Name:</label>
                <input type='text' name='user_name' required>
            </div>
            <div class='form-group'>
                <label>Review:</label>
                <textarea name='review_text' required></textarea>
            </div>
            <button type='submit'>Submit Review</button>
        </form>
    ";

    // Close database connection
    mysqli_close($conn);
}
?>


<?php 
$product_id = 1; // Replace with actual product ID
display_reviews($product_id);
?>


<?php
// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);
    $review_text = mysqli_real_escape_string($conn, $_POST['review_text']);

    // Insert into database
    $sql = "INSERT INTO reviews (product_id, user_name, review_text, review_date) 
            VALUES ($product_id, '$user_name', '$review_text', NOW())";

    if (mysqli_query($conn, $sql)) {
        header("Location: product.php?id=$product_id");
    } else {
        echo "Error submitting review: " . mysqli_error($conn);
    }
}
?>


<?php
function handleUserReview($db_connection, $user_id, $item_id, $rating, $comment, $review_id = null, $action = 'add') {
    // Validate inputs
    if (!is_numeric($user_id) || !is_numeric($item_id) || !is_numeric($rating)) {
        return array('status' => 'error', 'message' => 'Invalid input data');
    }

    // Check if the user exists
    $stmt = $db_connection->prepare("SELECT id FROM users WHERE id = ?");
    $stmt->execute(array($user_id));
    $result = $stmt->fetch();
    if (!$result) {
        return array('status' => 'error', 'message' => 'Invalid User ID');
    }

    // Check if the review exists (for update action)
    if ($action == 'update') {
        $stmt = $db_connection->prepare("SELECT id FROM reviews WHERE id = ? AND user_id = ?");
        $stmt->execute(array($review_id, $user_id));
        $result = $stmt->fetch();
        if (!$result) {
            return array('status' => 'error', 'message' => 'Invalid Review ID');
        }
    }

    // Validate rating
    if ($rating < 1 || $rating > 5) {
        return array('status' => 'error', 'message' => 'Rating must be between 1 and 5');
    }

    try {
        if ($action == 'add') {
            // Add new review
            $stmt = $db_connection->prepare("INSERT INTO reviews (user_id, item_id, rating, comment) VALUES (?, ?, ?, ?)");
            $stmt->execute(array($user_id, $item_id, $rating, $comment));
            
        } elseif ($action == 'update') {
            // Update existing review
            $stmt = $db_connection->prepare("UPDATE reviews SET rating = ?, comment = ? WHERE id = ?");
            $stmt->execute(array($rating, $comment, $review_id));
        }

        // Calculate and update average rating for the item
        $stmt = $db_connection->prepare("SELECT AVG(rating) as avg_rating FROM reviews WHERE item_id = ?");
        $stmt->execute(array($item_id));
        $avg_result = $stmt->fetch();
        
        $stmt = $db_connection->prepare("UPDATE items SET average_rating = ? WHERE id = ?");
        $stmt->execute(array($avg_result['avg_rating'], $item_id));

        return array('status' => 'success', 'message' => ($action == 'add') ? 'Review added successfully!' : 'Review updated successfully!');

    } catch(PDOException $e) {
        // Handle any database errors
        error_log("Database error: " . $e->getMessage());
        return array('status' => 'error', 'message' => 'An error occurred while processing your review. Please try again later.');
    }
}
?>


// Add a new review
$result = handleUserReview(
    $db_connection,
    123, // User ID
    456, // Item ID
    5,   // Rating (1-5)
    "Great product!", // Comment
    null, // Review ID (not needed for add)
    'add'
);

// Update an existing review
$result = handleUserReview(
    $db_connection,
    123, // User ID
    456, // Item ID
    4,   // New rating
    "Great product but could be better!", // New comment
    789, // Review ID
    'update'
);

// Check the result
if ($result['status'] == 'success') {
    echo $result['message'];
} else {
    echo $result['message'];
}


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function submitReview() {
    // Sanitize and validate input
    if (isset($_POST['submit'])) {
        $name = htmlspecialchars($_POST['name']);
        $email = htmlspecialchars($_POST['email']);
        $rating = intval($_POST['rating']);
        $comment = htmlspecialchars($_POST['comment']);

        // Basic validation
        if ($name == "" || $email == "" || $rating == 0 || $comment == "") {
            echo "Please fill in all required fields.";
            return;
        }

        // Email format validation
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Please enter a valid email address.";
            return;
        }

        // Database query to insert review
        global $conn;

        $stmt = mysqli_prepare($conn, "
            INSERT INTO reviews (name, email, rating, comment)
            VALUES (?, ?, ?, ?)
        ");

        mysqli_stmt_bind_param($stmt, "ssis", $name, $email, $rating, $comment);

        if (mysqli_stmt_execute($stmt)) {
            echo "Thank you for submitting your review!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }

        mysqli_stmt_close($stmt);
    }
}

// Display existing reviews
function displayReviews() {
    global $conn;

    $query = "SELECT * FROM reviews ORDER BY timestamp DESC";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Email: " . $row['email'] . "</p>";
            echo "<p>Comment: " . $row['comment'] . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['timestamp'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews available.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Reviews</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .review-form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .review {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>

<div class='review-form'>
    <h2>Submit a Review</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$" required><br>

        <label for="rating">Rating:</label><br>
        <select id="rating" name="rating">
            <option value="">Choose a rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
        </select><br>

        <label for="comment">Comment:</label><br>
        <textarea id="comment" name="comment" rows="5" required></textarea><br>

        <input type="submit" name="submit" value="Submit Review">
    </form>
</div>

<?php
submitReview();
displayReviews();
?>

</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create reviews table if not exists
$sql = "CREATE TABLE IF NOT EXISTS reviews (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id VARCHAR(255),
product_id INT,
review_text TEXT,
rating INT,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

if (mysqli_query($conn, $sql)) {
    // echo "Table created successfully";
} else {
    die("Error creating table: " . mysqli_error($conn));
}

// Function to add a review
function add_review($user_id, $product_id, $review_text, $rating) {
    global $conn;
    
    // Sanitize input
    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $review_text));
    $rating = intval($rating);
    
    $sql = "INSERT INTO reviews (user_id, product_id, review_text, rating)
    VALUES ('$user_id', '$product_id', '$review_text', '$rating')";
    
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        die("Error adding review: " . mysqli_error($conn));
    }
}

// Function to get reviews for a product
function get_reviews($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to calculate average rating
function get_average_rating($product_id) {
    global $conn;
    
    $sql = "SELECT AVG(rating) as average FROM reviews WHERE product_id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    return round($row['average'], 1);
}

// Close database connection
mysqli_close($conn);
?>


// Add a new review
if (isset($_POST['submit_review'])) {
    $user_id = $_SESSION['user_id'];
    $product_id = $_GET['product_id'];
    $review_text = $_POST['review_text'];
    $rating = $_POST['rating'];

    if (add_review($user_id, $product_id, $review_text, $rating)) {
        echo "Thank you for your review!";
    }
}

// Display reviews
$product_id = 1; // Replace with actual product ID
$reviews = get_reviews($product_id);

if ($reviews) {
    while ($row = mysqli_fetch_assoc($reviews)) {
        echo "<div class='review'>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . $row['review_text'] . "</p>";
        echo "<small>Posted on: " . $row['created_at'] . "</small>";
        echo "</div>";
    }
}

// Display average rating
echo "Average Rating: " . get_average_rating($product_id) . "/5";


<?php
function submit_review($user_id, $feedback) {
    // Validate input
    if (empty($user_id) || empty($feedback)) {
        return "Please fill in all required fields";
    }
    
    // Sanitize inputs
    $user_id = htmlspecialchars(trim($user_id));
    $feedback = htmlspecialchars(trim($feedback));
    
    // Database connection details
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';
    
    // Connect to database
    $conn = mysqli_connect($host, $username, $password, $database);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, feedback, date_submitted)
            VALUES (?, ?, NOW())";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "is", $user_id, $feedback);
    
    if (mysqli_stmt_execute($stmt)) {
        return "Thank you for your review!";
    } else {
        error_log("Review submission failed: " . mysqli_error($conn));
        return "Error submitting your review. Please try again later.";
    }
    
    // Close database connection
    mysqli_close($conn);
}

// Example usage:
$user_id = 123;
$feedback = "This is a great product!";
$result = submit_review($user_id, $feedback);
echo $result;
?>


<?php
// Function to create or update user reviews
function handleUserReview($userId, $reviewText, $rating) {
    // Validate input
    if (!is_numeric($userId)) {
        return "Error: User ID must be a number.";
    }
    
    if (empty($reviewText)) {
        return "Error: Review text cannot be empty.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        return "Error: Rating must be between 1 and 5.";
    }

    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'reviews_db';

    // Connect to database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // Check if user exists
        $checkUserQuery = "SELECT id FROM users WHERE id = ?";
        $stmt = $conn->prepare($checkUserQuery);
        $stmt->bind_param('i', $userId);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            return "Error: User not found.";
        }

        // Insert review
        $insertReviewQuery = "INSERT INTO reviews (user_id, review_text, rating) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($insertReviewQuery);
        $stmt->bind_param('isd', $userId, $reviewText, $rating);

        if ($stmt->execute()) {
            return "Review submitted successfully!";
        } else {
            return "Error: Review could not be submitted. Please try again later.";
        }
    } catch (mysqli_sql_exception $e) {
        return "Database Error: " . $e->getMessage();
    } finally {
        // Close the database connection
        $conn->close();
    }
}

// Example usage:
$userId = 1;
$reviewText = "This is a great product!";
$rating = 5;

$result = handleUserReview($userId, $reviewText, $rating);
echo $result;
?>


<?php
function userReview($productId) {
    // Database connection details
    $host = "localhost";
    $username = "root";
    $password = "";
    $dbname = "reviews_db";

    // Connect to database
    $conn = new mysqli($host, $username, $password, $dbname);
    
    // Check for database connection errors
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Handle review submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $userId = $_SESSION['user_id']; // Assuming user is logged in
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];

        // Insert review into database
        $sql = "INSERT INTO reviews (product_id, user_id, rating, comment)
                VALUES ($productId, $userId, $rating, '$comment')";
        
        if ($conn->query($sql) === TRUE) {
            echo "<script>alert('Thank you for your review!');</script>";
            header("Refresh:0");
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }

    // Display existing reviews
    $sql = "SELECT users.username, reviews.rating, reviews.comment, reviews.submit_date 
            FROM reviews 
            JOIN users ON reviews.user_id = users.id 
            WHERE product_id = $productId 
            ORDER BY submit_date DESC";
    
    $result = $conn->query($sql);

    // Calculate average rating
    $averageRatingSql = "SELECT AVG(rating) as avg_rating FROM reviews WHERE product_id = $productId";
    $averageResult = $conn->query($averageRatingSql);
    $row = $averageResult->fetch_assoc();
    $avgRating = round($row['avg_rating'], 1);

    // Display average rating and reviews
    echo "<div class='review-section'>";
    echo "<h3>Average Rating: " . ($avgRating !== null ? $avgRating : 0) . "/5</h3>";
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<p><strong>" . $row['username'] . "</strong></p>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>" . $row['comment'] . "</p>";
            echo "<p class='review-date'>" . $row['submit_date'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews yet.</p>";
    }

    // Display review form
    if (isset($_SESSION['user_id'])) { // Only logged in users can leave reviews
        echo "<form method='post'>";
        echo "<h3>Leave a Review</h3>";
        echo "<input type='radio' name='rating' value='5'> ★★★★★<br>";
        echo "<input type='radio' name='rating' value='4'> ★★★★☆<br>";
        echo "<input type='radio' name='rating' value='3'> ★★★☆☆<br>";
        echo "<input type='radio' name='rating' value='2'> ★★☆☆☆<br>";
        echo "<input type='radio' name='rating' value='1'> ★☆☆☆☆<br>";
        echo "<textarea name='comment' placeholder='Write your review here...'></textarea><br>";
        echo "<input type='submit' value='Submit Review'>";
        echo "</form>";
    } else {
        echo "<p>Please login to leave a review.</p>";
    }

    echo "</div>";

    // Close database connection
    $conn->close();
}
?>


<?php
session_start();
// Include the function definition
require_once 'review_function.php';

// Display reviews for product ID 1
userReview(1);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'reviews_db';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function display_reviews($product_id) {
    global $conn;
    
    // SQL query to fetch reviews
    $sql = "SELECT review_id, user_name, review_text, rating, review_date 
            FROM reviews 
            WHERE product_id = :product_id 
            ORDER BY review_date DESC";
            
    try {
        // Prepare and execute the statement
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':product_id', $product_id, PDO::PARAM_INT);
        $stmt->execute();
        
        // Check if there are any reviews
        if ($stmt->rowCount() == 0) {
            echo "<div class='no-reviews'>No reviews yet!</div>";
            return;
        }
        
        // Display each review
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $user_name = htmlspecialchars($row['user_name']);
            $review_text = htmlspecialchars($row['review_text']);
            $rating = $row['rating'];
            $review_date = date('F j, Y', strtotime($row['review_date']));
            
            echo "<div class='review'>";
                echo "<h3>$user_name</h3>";
                echo "<p>Rating: " . get_stars($rating) . "</p>";
                echo "<p>$review_text</p>";
                echo "<small>Posted on $review_date</small>";
            echo "</div>";
        }
        
    } catch (PDOException $e) {
        die("Query failed: " . $e->getMessage());
    }
}

function get_stars($rating = 0) {
    // Maximum rating
    $max_rating = 5;
    
    $full_star = "<span class='star'>★</span>";
    $half_star = "<span class='star'>⯨</span>"; // Half star
    $empty_star = "<span class='star'>☆</span>";
    
    $stars_html = '';
    
    if ($rating > 0 && $rating <= $max_rating) {
        for ($i = 1; $i <= $max_rating; $i++) {
            if ($rating >= $i + 0.5) {
                $stars_html .= $full_star;
            } elseif ($rating >= $i - 0.5) {
                $stars_html .= $half_star;
            } else {
                $stars_html .= $empty_star;
            }
        }
    } else {
        // Show empty stars if no rating
        for ($i = 1; $i <= $max_rating; $i++) {
            $stars_html .= $empty_star;
        }
    }
    
    return $stars_html;
}

// Example usage:
if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
    display_reviews($_GET['product_id']);
} else {
    echo "Invalid product ID.";
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $review_text) {
    // Database connection details
    $db_host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $db_name = "reviews_db";

    // Connect to database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL statement to insert review into database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)
            VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";

    if ($stmt = $conn->prepare($sql)) {
        // Bind parameters to the prepared statement
        $stmt->bind_param("iiss", $user_id, $product_id, $rating, $review_text);

        if ($stmt->execute()) {
            // Update product average rating
            $update_avg_rating_sql = "UPDATE products SET 
                                        avg_rating = (SELECT AVG(rating) FROM reviews WHERE product_id = ?)
                                      WHERE id = ?";
            
            $update_stmt = $conn->prepare($update_avg_rating_sql);
            $update_stmt->bind_param("ii", $product_id, $product_id);
            $update_stmt->execute();
            $update_stmt->close();

            // Close statement and connection
            $stmt->close();
            $conn->close();

            return "Review submitted successfully!";
        } else {
            // Close statement and connection
            $stmt->close();
            $conn->close();
            
            return "Error submitting review: " . $stmt->error;
        }
    } else {
        // Close connection
        $conn->close();
        
        return "Error preparing review submission: " . $conn->error;
    }
}
?>


<?php
function get_user_reviews($item_id, $sort_by = 'recent', $page = 1, $items_per_page = 5, $db_connection) {
    // Calculate offset for pagination
    $offset = ($page - 1) * $items_per_page;

    // Get total number of reviews for this item
    $total_reviews_query = "SELECT COUNT(*) as total FROM reviews WHERE item_id = ?";
    $stmt = mysqli_prepare($db_connection, $total_reviews_query);
    mysqli_stmt_bind_param($stmt, "i", $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    $total_reviews = $row['total'];

    // Determine sorting order
    switch ($sort_by) {
        case 'highest-rated':
            $order_by = "rating DESC, review_date DESC";
            break;
        case 'lowest-rated':
            $order_by = "rating ASC, review_date DESC";
            break;
        default: // Most recent by date
            $order_by = "review_date DESC";
    }

    // Get reviews for this item
    $reviews_query = "
        SELECT 
            u.username,
            r.rating,
            r.comment,
            r.review_date
        FROM reviews r
        JOIN users u ON r.user_id = u.user_id
        WHERE r.item_id = ?
        ORDER BY $order_by
        LIMIT ? OFFSET ?";
    
    $stmt = mysqli_prepare($db_connection, $reviews_query);
    mysqli_stmt_bind_param($stmt, "iii", $item_id, $items_per_page, $offset);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Fetch reviews into an array
    $reviews = [];
    while ($row = mysqli_fetch_assoc($result)) {
        $review_date_formatted = date('Y-m-d', strtotime($row['review_date']));
        $reviews[] = [
            'username' => $row['username'],
            'rating' => $row['rating'],
            'comment' => $row['comment'],
            'date' => $review_date_formatted
        ];
    }

    // Return the results and pagination info
    return [
        'reviews' => $reviews,
        'total_reviews' => $total_reviews,
        'current_page' => $page,
        'items_per_page' => $items_per_page
    ];
}

// Example usage:
$db_connection = mysqli_connect("localhost", "username", "password", "database");

if (mysqli_connect_errno()) {
    die("Failed to connect to MySQL: " . mysqli_connect_error());
}

$reviews_data = get_user_reviews(
    item_id: 1,
    sort_by: 'highest-rated',
    page: 1,
    items_per_page: 5,
    db_connection: $db_connection
);

// Display reviews
foreach ($reviews_data['reviews'] as $review) {
    echo "<div class='review'>";
    echo "<h3>{$review['username']}</h3>";
    echo "<p>Rating: {$review['rating']} stars</p>";
    echo "<p>{$review['comment']}</p>";
    echo "<small>{$review['date']}</small>";
    echo "</div>";
}

// Display pagination
$total_pages = ceil($reviews_data['total_reviews'] / $reviews_data['items_per_page']);
for ($i = 1; $i <= $total_pages; $i++) {
    echo "<a href='?page=$i'>Page $i</a> ";
}

mysqli_close($db_connection);
?>


<?php
// Function to display user reviews for a product
function get_user_reviews($product_id) {
    // Database connection parameters
    $host = 'localhost';
    $user = 'username';
    $password = 'password';
    $database = 'reviews_db';

    // Create database connection
    $conn = new mysqli($host, $user, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to fetch reviews for the specified product
    $sql = "SELECT user_name, rating, review_text, review_date 
            FROM reviews 
            WHERE product_id = ? 
            ORDER BY review_date DESC";

    // Prepare statement
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
    }

    // Bind parameter
    $stmt->bind_param('i', $product_id);

    // Execute query
    $stmt->execute();

    // Get result
    $result = $stmt->get_result();

    // Generate HTML for reviews
    $reviews_html = '';
    while ($row = $result->fetch_assoc()) {
        $reviews_html .= '<div class="review">';
        $reviews_html .= '<div class="review-header">';
        $reviews_html .= '<span class="user-name">' . htmlspecialchars($row['user_name']) . '</span>';
        $reviews_html .= '<div class="rating">';
        
        // Display stars based on rating
        for ($i = 1; $i <= 5; $i++) {
            if ($i <= $row['rating']) {
                $reviews_html .= '★';
            } else {
                $reviews_html .= '☆';
            }
        }
        
        $reviews_html .= '</div>';
        $reviews_html .= '</div>';
        $reviews_html .= '<div class="review-body">';
        $reviews_html .= htmlspecialchars($row['review_text']);
        $reviews_html .= '</div>';
        $reviews_html .= '<div class="review-footer">';
        $reviews_html .= 'Date: ' . $row['review_date'];
        $reviews_html .= '</div>';
        $reviews_html .= '</div>';
    }

    // Close database connection
    $stmt->close();
    $conn->close();

    return $reviews_html;
}

// Example usage:
$product_id = 1; // Replace with the actual product ID
$reviews = get_user_reviews($product_id);
echo $reviews;
?>


function handleUserReview($conn, $action, $user_id, $product_id, $comment = "", $rating = 0, $review_id = "") {
    // Sanitize input data
    $comment = mysqli_real_escape_string($conn, $comment);
    
    switch ($action) {
        case 'add':
            // Add a new review
            $sql = "INSERT INTO reviews (user_id, product_id, comment, rating, created_at) 
                    VALUES (?, ?, ?, ?, NOW())";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                mysqli_stmt_bind_param($stmt, "iiss", $user_id, $product_id, $comment, $rating);
                
                if (mysqli_stmt_execute($stmt)) {
                    // Get the last inserted review ID
                    $review_id = mysqli_insert_id($conn);
                    return array(
                        'status' => 'success',
                        'message' => 'Review added successfully!',
                        'review_id' => $review_id
                    );
                } else {
                    return array(
                        'status' => 'error',
                        'message' => 'Error adding review: ' . mysqli_stmt_error($stmt)
                    );
                }
                mysqli_stmt_close($stmt);
            }
            break;
            
        case 'update':
            // Update an existing review
            $sql = "UPDATE reviews SET comment=?, rating=? WHERE id=? AND user_id=?";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                mysqli_stmt_bind_param($stmt, "sisi", $comment, $rating, $review_id, $user_id);
                
                if (mysqli_stmt_execute($stmt)) {
                    return array(
                        'status' => 'success',
                        'message' => 'Review updated successfully!'
                    );
                } else {
                    return array(
                        'status' => 'error',
                        'message' => 'Error updating review: ' . mysqli_stmt_error($stmt)
                    );
                }
                mysqli_stmt_close($stmt);
            }
            break;
            
        case 'delete':
            // Delete a review
            $sql = "DELETE FROM reviews WHERE id=? AND user_id=?";
            
            if ($stmt = mysqli_prepare($conn, $sql)) {
                mysqli_stmt_bind_param($stmt, "ii", $review_id, $user_id);
                
                if (mysqli_stmt_execute($stmt)) {
                    return array(
                        'status' => 'success',
                        'message' => 'Review deleted successfully!'
                    );
                } else {
                    return array(
                        'status' => 'error',
                        'message' => 'Error deleting review: ' . mysqli_stmt_error($stmt)
                    );
                }
                mysqli_stmt_close($stmt);
            }
            break;
            
        default:
            // Invalid action
            return array(
                'status' => 'error',
                'message' => 'Invalid action specified!'
            );
    }
}


$result = handleUserReview($conn, 'add', $user_id, $product_id, $comment, $rating);


$result = handleUserReview($conn, 'update', $user_id, $product_id, $new_comment, $new_rating, $review_id);


$result = handleUserReview($conn, 'delete', $user_id, $product_id, "", 0, $review_id);


<?php
// Initialize reviews array (you might want to use a database in a real application)
$reviews = array();

// Function to handle reviews
function user_reviews() {
    global $reviews;
    
    // Review submission form
    if (!isset($_POST['submit_review'])) {
        display_review_form();
    } else {
        // Process submitted review
        $name = htmlspecialchars(trim($_POST['review_name']));
        $rating = (int)$_POST['review_rating'];
        
        // Validate input
        if ($name == "" || $rating < 1 || $rating > 5) {
            echo "Please enter a valid name and rating between 1-5 stars!";
        } else {
            // Store the review (in memory - not persistent)
            $review_id = count($reviews) + 1;
            $reviews[] = array(
                'id' => $review_id,
                'name' => $name,
                'rating' => $rating,
                'date' => date('Y-m-d H:i:s')
            );
            
            // Redirect to view reviews
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        }
    }
}

// Function to display review form
function display_review_form() {
    global $reviews;
    
    ?>
    <html>
    <head>
        <title>Product Review</title>
        <style>
            .stars {
                color: gold;
            }
            .error { color: red; }
        </style>
    </head>
    <body>
        <?php if (!empty($reviews)) { 
            // Display existing reviews
            echo "<h2>Reviews:</h2>";
            foreach ($reviews as $review) {
                $stars = str_repeat("★", $review['rating']) . str_repeat("☆", 5 - $review['rating']);
                echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;'>";
                echo "<h3>Reviewer: {$review['name']}</h3>";
                echo "<p class='stars'>{$stars}</p>";
                echo "<small>Posted on: {$review['date']}</small>";
                echo "</div>";
            }
        } ?>

        <!-- Review Form -->
        <div style="margin-top: 20px;">
            <?php if (isset($_GET['error'])) { 
                // Display error message
                echo "<div class='error'>Error: Please fill in all required fields!</div>";
            } ?>
            
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <h2>Submit Your Review</h2>
                <p>Name:</p>
                <input type="text" name="review_name" required><br>
                
                <p>Rating (1-5 stars):</p>
                <?php for ($i = 1; $i <= 5; $i++) { 
                    // Display rating options
                    echo "<input type='radio' name='review_rating' value='{$i}' checked {$i == 5 ? 'checked' : ''}>{$i} stars <br>";
                } ?>

                <input type="submit" name="submit_review" value="Submit Review">
            </form>
        </div>
    </body>
    </html>
    <?php
}

// Call the user_reviews function when this script is loaded
if (isset($_GET['action']) && $_GET['action'] == 'reviews') {
    user_reviews();
} else {
    // Main content of your page
    echo "<h1>Welcome to Our Product Page</h1>";
    echo "<a href='".$_SERVER['PHP_SELF']."?action=reviews'>View and Submit Reviews</a>";
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'reviews_db';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display reviews
function display_reviews() {
    global $conn;
    
    $query = "SELECT * FROM reviews ORDER BY id DESC";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='review'>";
            echo "<h3>Review by " . htmlspecialchars($row['author']) . "</h3>";
            echo "<p>" . nl2br(htmlspecialchars($row['content'])) . "</p>";
            echo "<p>Rating: " . $row['rating'] . "/5</p>";
            echo "<p>Submitted on: " . date('F j, Y', strtotime($row['timestamp'])) . "</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No reviews available yet.</p>";
    }
}

// Function to submit a new review
function submit_review($author, $content, $rating) {
    global $conn;
    
    // Validate input
    if (empty($author) || empty($content) || !is_numeric($rating)) {
        return false;
    }
    
    $rating = intval($rating);
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Sanitize input
    $author = htmlspecialchars(mysqli_real_escape_string($conn, $author), ENT_QUOTES);
    $content = htmlspecialchars(mysqli_real_escape_string($conn, $content), ENT_QUOTES);
    
    // Insert into database
    $query = "INSERT INTO reviews (author, content, rating, timestamp) 
              VALUES ('$author', '$content', '$rating', NOW())";
              
    if (!mysqli_query($conn, $query)) {
        return false;
    }
    
    return true;
}

// Function to add a rating
function add_rating($id, $rating) {
    global $conn;
    
    // Validate input
    if (!is_numeric($id) || !is_numeric($rating)) {
        return false;
    }
    
    $id = intval($id);
    $rating = intval($rating);
    
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Update rating in database
    $query = "UPDATE reviews SET rating = '$rating' WHERE id = '$id'";
    
    if (!mysqli_query($conn, $query)) {
        return false;
    }
    
    return true;
}

// Function to validate review input
function validate_review($author, $content, $rating) {
    $errors = array();
    
    if (empty($author)) {
        $errors[] = "Please enter your name.";
    }
    
    if (empty($content)) {
        $errors[] = "Please write a review.";
    }
    
    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
        $errors[] = "Please select a valid rating between 1 and 5.";
    }
    
    return $errors;
}
?>

<!-- Sample HTML form -->
<!DOCTYPE html>
<html>
<head>
    <title>Review System</title>
    <style>
        .review {
            margin: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input, textarea {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            margin-bottom: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>

<?php
// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $author = $_POST['author'];
    $content = $_POST['content'];
    $rating = $_POST['rating'];
    
    $errors = validate_review($author, $content, $rating);
    
    if (empty($errors)) {
        if (submit_review($author, $content, $rating)) {
            echo "<p>Thank you for your review!</p>";
        } else {
            echo "<p>Error submitting review. Please try again.</p>";
        }
    } else {
        foreach ($errors as $error) {
            echo "<p style='color: red'>" . $error . "</p>";
        }
    }
}
?>

<h1>Leave a Review</h1>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <div class="form-group">
        <label for="author">Name:</label>
        <input type="text" id="author" name="author" required>
    </div>
    
    <div class="form-group">
        <label for="content">Review:</label>
        <textarea id="content" name="content" rows="5" required></textarea>
    </div>
    
    <div class="form-group">
        <label>Rating:</label><br>
        <input type="radio" name="rating" value="5" required> 5
        <input type="radio" name="rating" value="4"> 4
        <input type="radio" name="rating" value="3"> 3
        <input type="radio" name="rating" value="2"> 2
        <input type="radio" name="rating" value="1"> 1
    </div>
    
    <button type="submit">Submit Review</button>
</form>

<h2>Reviews</h2>
<?php display_reviews(); ?>

</body>
</html>


<?php
function submit_review($user_id, $rating, $comment = null) {
    try {
        // Validate inputs
        if (!is_numeric($user_id) || $user_id <= 0) {
            throw new Exception("Invalid user ID");
        }
        
        if (!is_numeric($rating) || $rating < 1 || $rating > 5) {
            throw new Exception("Rating must be between 1 and 5");
        }
        
        // Database connection (assuming $conn is a mysqli object)
        global $conn;
        
        // Prepare and execute the SQL statement
        $sql = "INSERT INTO reviews (user_id, rating, comment) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        
        if ($comment === null) {
            $stmt->bind_param("iis", $user_id, $rating, NULL);
        } else {
            $stmt->bind_param("iis", $user_id, $rating, $comment);
        }
        
        if (!$stmt->execute()) {
            throw new Exception("Error adding review: " . $stmt->error);
        }
        
        return true; // Review added successfully
        
    } catch (Exception $e) {
        // Log the error or handle it as needed
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}
?>


// Example usage:
$user_id = 123;
$rating = 5;
$comment = "Great product!";

if (submit_review($user_id, $rating, $comment)) {
    echo "Review submitted successfully!";
}


<?php
// Database connection
$host = 'localhost';
$dbname = 'reviews_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Create review table
$sql = "CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    rating INT,
    comment TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    votes INT DEFAULT 0
)";

try {
    $conn->exec($sql);
} catch (PDOException $e) {
    echo "Error creating table: " . $e->getMessage();
}

// Function to submit a review
function submitReview($product_id, $user_id, $rating, $comment) {
    global $conn;
    
    // Sanitize inputs
    $product_id = intval($product_id);
    $user_id = intval($user_id);
    $rating = intval($rating);
    $comment = htmlspecialchars(strip_tags($comment));
    
    try {
        $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
        $stmt->execute([$product_id, $user_id, $rating, $comment]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error submitting review: " . $e->getMessage();
        return false;
    }
}

// Function to display reviews
function displayReviews($product_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT r.*, u.name AS username FROM reviews r JOIN users u ON r.user_id = u.id WHERE product_id = ? ORDER BY timestamp DESC");
        $stmt->execute([$product_id]);
        
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (empty($reviews)) {
            echo "No reviews available for this product.";
            return;
        }
        
        foreach ($reviews as $review) {
            echo "<div class='review'>";
                echo "<h3>Review by: " . htmlspecialchars($review['username']) . "</h3>";
                echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
                echo "<p>Comment: " . htmlspecialchars($review['comment']) . "</p>";
                echo "<div class='vote-section'>";
                    echo "<button onclick='voteReview(" . $review['id'] . ", 1)'>↑ Upvote</button>";
                    echo "<span>Votes: " . $review['votes'] . "</span>";
                    echo "<button onclick='voteReview(" . $review['id'] . ", -1)'>↓ Downvote</button>";
                echo "</div>";
                echo "<small>Posted on: " . $review['timestamp'] . "</small>";
            echo "</div>";
        }
    } catch (PDOException $e) {
        echo "Error displaying reviews: " . $e->getMessage();
    }
}

// Function to vote for a review
function voteReview($review_id, $vote_type) {
    global $conn;
    
    // Check if user is logged in
    session_start();
    if (!isset($_SESSION['user_id'])) {
        die("Please login to vote!");
    }
    
    try {
        $current_votes = 0;
        
        // Get current votes
        $stmt = $conn->prepare("SELECT votes FROM reviews WHERE id = ?");
        $stmt->execute([$review_id]);
        if ($row = $stmt->fetch()) {
            $current_votes = $row['votes'];
        }
        
        // Update votes
        $new_votes = $current_votes + $vote_type;
        $new_votes = max($new_votes, 0); // Don't allow negative votes
        
        $stmt = $conn->prepare("UPDATE reviews SET votes = ? WHERE id = ?");
        $stmt->execute([$new_votes, $review_id]);
        
        return true;
    } catch (PDOException $e) {
        echo "Error voting: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['submit_review'])) {
        // Check if user is logged in
        session_start();
        if (!isset($_SESSION['user_id'])) {
            die("Please login to submit a review!");
        }
        
        $product_id = $_POST['product_id'];
        $user_id = $_SESSION['user_id'];
        $rating = $_POST['rating'];
        $comment = $_POST['comment'];
        
        if (submitReview($product_id, $user_id, $rating, $comment)) {
            echo "Thank you for submitting your review!";
        }
    }
}

// Display login form
function displayLoginForm() {
    echo "<form action='login.php' method='post'>";
        echo "<input type='email' name='email' placeholder='Email' required>";
        echo "<input type='password' name='password' placeholder='Password' required>";
        echo "<button type='submit'>Login</button>";
    echo "</form>";
}

// Example login script
if (isset($_POST['login'])) {
    $email = htmlspecialchars(strip_tags($_POST['email']));
    $password = $_POST['password'];
    
    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($row = $stmt->fetch()) {
            if (password_verify($password, $row['password'])) {
                session_start();
                $_SESSION['user_id'] = $row['id'];
                header('Location: review_page.php');
            } else {
                echo "Invalid credentials!";
            }
        } else {
            echo "User not found!";
        }
    } catch (PDOException $e) {
        echo "Error logging in: " . $e->getMessage();
    }
}
?>


<?php
function submit_review($user_id, $product_id, $rating, $comment) {
    // Database connection details
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "reviews_db";

    try {
        // Create database connection
        $conn = new mysqli($servername, $username, $password, $dbname);
        
        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL statement to insert review
        $sql = "INSERT INTO reviews (user_id, product_id, rating, comment, timestamp)
                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        
        // Prepare and bind parameters
        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }
        $stmt->bind_param("iisi", $user_id, $product_id, $rating, $comment);

        // Execute the statement
        if ($stmt->execute()) {
            return true; // Review submitted successfully
        } else {
            throw new Exception("Error submitting review: " . $stmt->error);
        }

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close statement and connection if they exist
        if ($stmt) {
            $stmt->close();
        }
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
try {
    $user_id = 123; // Replace with actual user ID
    $product_id = 456; // Replace with actual product ID
    $rating = 5; // Rating between 1 and 5
    $comment = "This is a great product!"; // Review comment

    if (submit_review($user_id, $product_id, $rating, $comment)) {
        echo "Review submitted successfully!";
    }
} catch (Exception $e) {
    echo "Error submitting review: " . $e->getMessage();
}
?>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle review submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $rating = intval($_POST['rating']);
    $review = htmlspecialchars(trim($_POST['review']));

    // Basic validation
    if (empty($name) || empty($email) || empty($rating) || empty($review)) {
        $error = "All fields are required!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format!";
    } elseif ($rating < 1 || $rating > 5) {
        $error = "Rating must be between 1 and 5!";
    } else {
        // Insert into database
        $stmt = $conn->prepare("INSERT INTO reviews (name, email, rating, review, created_at) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("ssii", $name, $email, $rating, $review);
        
        if ($stmt->execute()) {
            header("Location: " . $_SERVER['PHP_SELF']);
            exit();
        } else {
            $error = "Error submitting review!";
        }
    }
}

// Retrieve reviews
$reviews = array();
$sql = "SELECT * FROM reviews ORDER BY created_at DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $reviews[] = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'email' => $row['email'],
            'rating' => $row['rating'],
            'review' => $row['review'],
            'created_at' => $row['created_at']
        );
    }
}

// Close connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Reviews</title>
    <style>
        .stars {
            display: inline-block;
            margin-right: 10px;
        }

        .star {
            color: #FFD700;
            font-size: 24px;
        }

        .review-form, .review-list {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .review-item {
            border-bottom: 1px solid #ddd;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="review-form">
        <?php if (isset($error)) { ?>
            <p style="color: red;"><?php echo $error; ?></p>
        <?php } ?>

        <h2>Submit a Review</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name">
            </div>

            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email">
            </div>

            <div>
                <label for="rating">Rating:</label><br>
                <select id="rating" name="rating">
                    <?php for ($i = 1; $i <= 5; $i++) { ?>
                        <option value="<?php echo $i; ?>"><?php echo $i; ?> Stars</option>
                    <?php } ?>
                </select>
            </div>

            <div>
                <label for="review">Review:</label><br>
                <textarea id="review" name="review" rows="5"></textarea>
            </div>

            <button type="submit">Submit Review</button>
        </form>
    </div>

    <div class="review-list">
        <h2>Reviews</h2>
        <?php if (empty($reviews)) { ?>
            <p>No reviews yet!</p>
        <?php } else { ?>
            <?php foreach ($reviews as $review) { ?>
                <div class="review-item">
                    <div class="stars">
                        <?php for ($i = 1; $i <= $review['rating']; $i++) { ?>
                            <span class="star">★</span>
                        <?php } ?>
                    </div>
                    <h3><?php echo $review['name']; ?></h3>
                    <p><?php echo $review['email']; ?></p>
                    <p><?php echo $review['review']; ?></p>
                    <small><?php echo date('F j, Y', strtotime($review['created_at'])); ?></small>
                </div>
            <?php } ?>
        <?php } ?>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product ID from hidden field
    $product_id = $_POST['product_id'];
    
    // Validate and sanitize inputs
    $user_name = sanitizeInput($_POST['user_name']);
    $user_email = sanitizeInput($_POST['user_email']);
    $rating = intval($_POST['rating']);
    $review_text = sanitizeInput($_POST['review_text']);

    // Check for empty fields
    if (empty($user_name) || empty($user_email) || empty($rating) || empty($review_text)) {
        die("All fields are required!");
    }

    // Validate email format
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    // Validate rating (1-5)
    if ($rating < 1 || $rating > 5) {
        die("Rating must be between 1 and 5 stars!");
    }

    // Insert review into database
    $stmt = $conn->prepare("INSERT INTO reviews (product_id, user_name, user_email, rating, review_text) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("isiii", $product_id, $user_name, $user_email, $rating, $review_text);

    if ($stmt->execute()) {
        echo "Thank you for submitting your review!";
    } else {
        die("Error: " . $stmt->error);
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
} else {
    die("Invalid request method!");
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to fetch and display reviews for a product
function getReviewsByProduct($product_id) {
    global $conn;

    $reviews = array();
    
    // Fetch all reviews for the given product ID
    $stmt = $conn->prepare("SELECT * FROM reviews WHERE product_id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();

    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $reviews[] = array(
            'id' => $row['id'],
            'user_name' => $row['user_name'],
            'rating' => $row['rating'],
            'review_text' => $row['review_text'],
            'created_at' => $row['created_at']
        );
    }

    // Close statement and connection
    $stmt->close();

    return $reviews;
}

// Example usage:
$product_id = 1; // Replace with your product ID
$reviews = getReviewsByProduct($product_id);

foreach ($reviews as $review) {
    echo "<div class='review'>";
    echo "<h3>" . $review['user_name'] . "</h3>";
    echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
    echo "<p>" . $review['review_text'] . "</p>";
    echo "<small>" . date('F j, Y', strtotime($review['created_at'])) . "</small>";
    echo "</div>";
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'reviews_db';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to submit a review
function submitReview($user_id, $rating, $review_text) {
    global $conn;
    
    // Sanitize input
    $user_id = mysqli_real_escape_string($conn, trim($user_id));
    $rating = intval($rating);
    $review_text = mysqli_real_escape_string($conn, trim($review_text));
    
    // Check if rating is valid (1-5)
    if ($rating < 1 || $rating > 5) {
        return "Invalid rating. Please choose a rating between 1 and 5.";
    }
    
    // Insert review into database
    $sql = "INSERT INTO reviews (user_id, rating, review_text, review_date) 
            VALUES ('$user_id', '$rating', '$review_text', NOW())";
    
    if ($conn->query($sql)) {
        return "Review submitted successfully!";
    } else {
        return "Error submitting review: " . $conn->error;
    }
}

// Function to display reviews
function displayReviews() {
    global $conn;
    
    // Get all reviews from database
    $sql = "SELECT * FROM reviews ORDER BY review_date DESC";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='review'>";
            echo "<h3>Rating: " . str_repeat("★", $row['rating']) . "</h3>";
            echo "<p>Review: " . htmlspecialchars($row['review_text']) . "</p>";
            echo "<small>Posted by: " . htmlspecialchars($row['user_id']) . " on " . date('F j, Y g:i a', strtotime($row['review_date'])) . "</small>";
            echo "</div>";
        }
    } else {
        echo "No reviews found.";
    }
}

// Function to calculate average rating
function getAverageRating() {
    global $conn;
    
    // Get all ratings from database
    $sql = "SELECT AVG(rating) as average FROM reviews";
    $result = $conn->query($sql);
    
    if ($result && $result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return round($row['average'], 1); // Round to one decimal place
    }
    return 0;
}

// Function to display star rating
function displayStars($rating) {
    $full_stars = intval($rating);
    $has_half_star = ($rating - $full_stars) >= 0.5;
    
    echo "<div class='stars'>";
    for ($i = 0; $i < $full_stars; $i++) {
        echo "★ ";
    }
    if ($has_half_star) {
        echo "⯨ "; // Half star
    }
    echo "</div>";
}

// Main script
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $review_result = submitReview($_POST['username'], $_POST['rating'], $_POST['review']);
    echo "<p>" . $review_result . "</p>";
}

// Display average rating
echo "<h2>Rating: ";
displayStars(getAverageRating());
echo "</h2>";

// Review form
?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="text" name="username" placeholder="Enter your username" required><br>
    <select name="rating" required>
        <option value="">Choose a rating</option>
        <option value="1">1 Star</option>
        <option value="2">2 Stars</option>
        <option value="3">3 Stars</option>
        <option value="4">4 Stars</option>
        <option value="5">5 Stars</option>
    </select><br>
    <textarea name="review" placeholder="Write your review..." required></textarea><br>
    <input type="submit" value="Submit Review">
</form>

<?php
// Display all reviews
displayReviews();

// Close database connection
$conn->close();
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'reviews_db';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle review submission
function submitReview($user_name, $rating, $comment, $conn) {
    // Sanitize inputs to prevent SQL injection and XSS
    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));
    $rating = intval(mysqli_real_escape_string($conn, $rating));
    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));
    
    // Check for valid rating (1-5)
    if ($rating < 1 || $rating > 5) {
        return false;
    }
    
    // Insert into database
    $sql = "INSERT INTO reviews (user_name, rating, comment, date, status) 
            VALUES ('$user_name', '$rating', '$comment', NOW(), 'pending')";
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

// Function to fetch and display approved reviews
function displayReviews($conn) {
    // Fetch all approved reviews ordered by date
    $sql = "SELECT * FROM reviews WHERE status='approved' ORDER BY date DESC";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            // Display each review
            echo "<div class='review'>";
            echo "<h3>" . htmlspecialchars_decode($row['user_name']) . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $row['rating']) . str_repeat("☆", 5 - $row['rating']) . "</p>";
            echo "<p>" . htmlspecialchars_decode($row['comment']) . "</p>";
            echo "<small>" . date('F j, Y', strtotime($row['date'])) . "</small>";
            echo "</div>";
        }
    } else {
        // If no reviews yet
        echo "<p>No reviews available. Be the first to review!</p>";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    // Submit the review and show feedback
    if (submitReview($user_name, $rating, $comment, $conn)) {
        echo "<div class='success'>Thank you for your review!</div>";
    } else {
        echo "<div class='error'>Error submitting review. Please try again.</div>";
    }
}

// Display existing reviews
displayReviews($conn);

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration file
include 'db_config.php';

// Function to validate input data
function test_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Function to add review
function add_review($con) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get values from form
        $name = test_input($_POST['name']);
        $email = test_input($_POST['email']);
        $rating = $_POST['rating'];
        $comment = test_input($_POST['comment']);

        // Validate input data
        $errors = array();

        if (empty($name)) {
            $errors['name'] = "Name is required";
        }

        if (empty($email)) {
            $errors['email'] = "Email is required";
        } else {
            // Check email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors['email'] = "Invalid email format";
            }
        }

        if (empty($rating) || !ctype_digit($rating) || $rating < 1 || $rating > 5) {
            $errors['rating'] = "Rating must be between 1 and 5";
        }

        if (empty($comment)) {
            $errors['comment'] = "Comment is required";
        } else {
            // Check comment length
            if (strlen($comment) < 5) {
                $errors['comment'] = "Comment must be at least 5 characters long";
            }
        }

        // If no errors, insert into database
        if (empty($errors)) {
            try {
                // Prepare and execute the query
                $stmt = $con->prepare("INSERT INTO reviews (name, email, rating, comment) 
                    VALUES (:name, :email, :rating, :comment)");
                $stmt->execute(array(
                    ':name' => $name,
                    ':email' => $email,
                    ':rating' => $rating,
                    ':comment' => $comment
                ));
                
                // Success message
                echo "Thank you for your review!";
                return;
            } catch(PDOException $e) {
                die("Connection failed: " . $e->getMessage());
            }
        } else {
            // Display error messages
            foreach ($errors as $key => $value) {
                echo "<div class='alert alert-danger'>{$value}</div>";
            }
        }
    }
}

// Function to display reviews
function display_reviews($con) {
    try {
        // Prepare and execute the query
        $stmt = $con->query("SELECT * FROM reviews ORDER BY id DESC");
        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Display each review
        foreach ($reviews as $review) {
            echo "<div class='review'>";
            echo "<h3>" . $review['name'] . "</h3>";
            echo "<p>Rating: " . str_repeat("★", $review['rating']) . "</p>";
            echo "<p>Comment: " . $review['comment'] . "</p>";
            echo "<small>Posted on: " . date('F j, Y', strtotime($review['created_at'])) . "</small>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}
?>

