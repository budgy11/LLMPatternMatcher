{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so the user asked to create a user review function using PHP. I need to figure out how to approach this. First, I should understand what a user review system entails. It typically involves allowing users to leave reviews and ratings for something, like a product or service.\n\nI'll start by thinking about the database structure because that's fundamental. The reviews will be stored in a table, so I need columns for each review, such as review ID, user ID, product ID, rating, comment, timestamp, and maybe whether it's approved. So I'll outline the SQL schema for that.\n\nNext, I need functions to interact with this database. The main functionalities would be adding a review, retrieving reviews for display, calculating average ratings, and deleting reviews if necessary.\n\nFor adding a review, the function should take user input\u2014user ID, product ID, rating, and comment\u2014and insert it into the database. I'll make sure to use prepared statements with mysqli to prevent SQL injection. Also, I need to validate inputs: check that the rating is between 1 and 5, and ensure comments aren't too long or empty.\n\nRetrieving reviews should fetch all entries for a specific product, ordered by date so the latest appear first. This function will also use prepared statements and return an array of review data, which can then be displayed on a webpage.\n\nCalculating the average rating is crucial for displaying stars or overall sentiment. I'll write a function that counts the total reviews and sums up the ratings. If there are no reviews, it returns zero to avoid division by zero errors.\n\nDeleting a review might be necessary for moderation purposes. The function will remove a specific review based on its ID, again using prepared statements for safety.\n\nI should also consider displaying the average rating visually, like stars. So I'll include some HTML and CSS snippets that show filled or half-filled stars based on the average score. This makes the UI more user-friendly.\n\nPutting it all together, the PHP functions handle the backend logic, while the frontend displays the reviews and ratings. Testing each function is important to ensure they work as expected\u2014checking if adding a review correctly inserts into the database, retrieving shows the right data, and deleting removes the correct entry.\n\nI might have missed something, like handling different user permissions or displaying reviews in a paginated manner if there are many. But for a basic setup, these functions should cover the essentials.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database connection\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n\n// Create reviews table if not exists\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id VARCHAR(255),\n    product_id INT,\n    rating INT CHECK (rating BETWEEN 1 AND 5),\n    comment TEXT,\n    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    approved BOOLEAN DEFAULT FALSE\n)\";\n\nmysqli_query($conn, $sql);\n\n// Function to add a new review\nfunction addReview($user_id, $product_id, $rating, $comment) {\n    global $conn;\n    \n    // Validate input\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose between 1 and 5 stars.\";\n    }\n    \n    if (strlen($comment) == 0 || strlen($comment) > 1000) {\n        return \"Comment must be between 1 and 1000 characters.\";\n    }\n    \n    // Escape special characters\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $comment = mysqli_real_escape_string($conn, $comment);\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment) \n            VALUES ('$user_id', '$product_id', '$rating', '$comment')\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return \"Review added successfully!\";\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to get reviews for a product\nfunction getProductReviews($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC\";\n    \n    $result = mysqli_query($conn, $sql);\n    $reviews = array();\n    \n    while ($row = mysqli_fetch_assoc($result)) {\n        $reviews[] = $row;\n    }\n    \n    return $reviews;\n}\n\n// Function to calculate average rating\nfunction getAverageRating($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT COUNT(*) as total, AVG(rating) as average \n            FROM reviews WHERE product_id = $product_id\";\n    \n    $result = mysqli_query($conn, $sql);\n    $row = mysqli_fetch_assoc($result);\n    \n    if ($row['total'] == 0) {\n        return 0;\n    } else {\n        return number_format((float)$row['average'], 1, '.', '');\n    }\n}\n\n// Function to delete a review\nfunction deleteReview($review_id) {\n    global $conn;\n    \n    $sql = \"DELETE FROM reviews WHERE id = $review_id\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return \"Review deleted successfully!\";\n    } else {\n        return \"Error deleting review: \" . mysqli_error($conn);\n    }\n}\n\n// Example usage:\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Add a new review\n    $result = addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);\n    echo $result;\n}\n\n// Get and display reviews for product ID 1\n$reviews = getProductReviews(1);\nforeach ($reviews as $review) {\n    echo \"<div>\";\n    echo \"<p>Rating: \" . $review['rating'] . \"/5</p>\";\n    echo \"<p>Comment: \" . $review['comment'] . \"</p>\";\n    echo \"<small>Posted on: \" . $review['review_date'] . \"</small>\";\n    echo \"</div>\";\n}\n\n// Display average rating\n$average_rating = getAverageRating(1);\necho \"<h3>Average Rating: $average_rating/5</h3>\";\n?>\n```\n\nThis code includes:\n\n1. Database connection and table creation\n\n2. Functions:\n   - `addReview()`: Adds a new review to the database\n   - `getProductReviews()`: Retrieves reviews for a specific product\n   - `getAverageRating()`: Calculates and returns the average rating for a product\n   - `deleteReview()`: Deletes a specific review from the database\n\n3. Input validation and sanitization\n\n4. Example usage showing how to add, retrieve, and display reviews\n\nFeatures:\n\n- Reviews are stored with user ID, product ID, rating (1-5 stars), comment, timestamp, and approval status\n- Input validation for ratings and comments\n- Secure SQL queries using mysqli_real_escape_string()\n- Easy to integrate into a web application\n- Functions can be modified to support different review systems\n\nTo use this code:\n\n1. Replace the database connection details with your own\n2. Create the reviews table in your database\n3. Integrate the functions into your web application\n4. Add appropriate HTML forms for users to submit reviews\n\nYou can enhance this basic system by adding features like:\n- User authentication\n- Review approval system\n- Rating visualization (stars)\n- Sorting and filtering options\n- Pagination for long review lists\n- Edit functionality for reviews\n- Reporting system for inappropriate comments", "code_blocks": ["```php\n<?php\n// Database connection\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n\n// Create reviews table if not exists\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id VARCHAR(255),\n    product_id INT,\n    rating INT CHECK (rating BETWEEN 1 AND 5),\n    comment TEXT,\n    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    approved BOOLEAN DEFAULT FALSE\n)\";\n\nmysqli_query($conn, $sql);\n\n// Function to add a new review\nfunction addReview($user_id, $product_id, $rating, $comment) {\n    global $conn;\n    \n    // Validate input\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose between 1 and 5 stars.\";\n    }\n    \n    if (strlen($comment) == 0 || strlen($comment) > 1000) {\n        return \"Comment must be between 1 and 1000 characters.\";\n    }\n    \n    // Escape special characters\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $comment = mysqli_real_escape_string($conn, $comment);\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment) \n            VALUES ('$user_id', '$product_id', '$rating', '$comment')\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return \"Review added successfully!\";\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Function to get reviews for a product\nfunction getProductReviews($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews WHERE product_id = $product_id ORDER BY review_date DESC\";\n    \n    $result = mysqli_query($conn, $sql);\n    $reviews = array();\n    \n    while ($row = mysqli_fetch_assoc($result)) {\n        $reviews[] = $row;\n    }\n    \n    return $reviews;\n}\n\n// Function to calculate average rating\nfunction getAverageRating($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT COUNT(*) as total, AVG(rating) as average \n            FROM reviews WHERE product_id = $product_id\";\n    \n    $result = mysqli_query($conn, $sql);\n    $row = mysqli_fetch_assoc($result);\n    \n    if ($row['total'] == 0) {\n        return 0;\n    } else {\n        return number_format((float)$row['average'], 1, '.', '');\n    }\n}\n\n// Function to delete a review\nfunction deleteReview($review_id) {\n    global $conn;\n    \n    $sql = \"DELETE FROM reviews WHERE id = $review_id\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return \"Review deleted successfully!\";\n    } else {\n        return \"Error deleting review: \" . mysqli_error($conn);\n    }\n}\n\n// Example usage:\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Add a new review\n    $result = addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);\n    echo $result;\n}\n\n// Get and display reviews for product ID 1\n$reviews = getProductReviews(1);\nforeach ($reviews as $review) {\n    echo \"<div>\";\n    echo \"<p>Rating: \" . $review['rating'] . \"/5</p>\";\n    echo \"<p>Comment: \" . $review['comment'] . \"</p>\";\n    echo \"<small>Posted on: \" . $review['review_date'] . \"</small>\";\n    echo \"</div>\";\n}\n\n// Display average rating\n$average_rating = getAverageRating(1);\necho \"<h3>Average Rating: $average_rating/5</h3>\";\n?>\n```"]}
