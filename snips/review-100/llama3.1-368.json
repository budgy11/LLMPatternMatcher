{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a basic user review system in PHP. This code includes functionality to add, edit and delete reviews.\n\n**Database Schema**\n\nBefore we dive into the code, let's define the database schema for our review system:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255)\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_id INT,\n  rating INT,\n  review TEXT,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\n```php\n// Connect to the database\n$conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n\nfunction getUserReviews($userId, $productId = null) {\n    global $conn;\n    if ($productId !== null) {\n        $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id\");\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->execute();\n    } else {\n        $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->execute();\n    }\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction addReview($userId, $productId, $rating, $review) {\n    global $conn;\n    try {\n        $stmt = $conn->prepare(\"INSERT INTO reviews (user_id, product_id, rating, review) VALUES (:user_id, :product_id, :rating, :review)\");\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->bindParam(':rating', $rating);\n        $stmt->bindParam(':review', $review);\n        return $stmt->execute();\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\nfunction editReview($reviewId, $newRating, $newReview) {\n    global $conn;\n    try {\n        $stmt = $conn->prepare(\"UPDATE reviews SET rating = :rating, review = :review WHERE id = :id\");\n        $stmt->bindParam(':id', $reviewId);\n        $stmt->bindParam(':rating', $newRating);\n        $stmt->bindParam(':review', $newReview);\n        return $stmt->execute();\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\nfunction deleteReview($reviewId) {\n    global $conn;\n    try {\n        $stmt = $conn->prepare(\"DELETE FROM reviews WHERE id = :id\");\n        $stmt->bindParam(':id', $reviewId);\n        return $stmt->execute();\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n$userId = 1; // ID of the user\n$product_id = 2; // ID of the product\n\n$reviews = getUserReviews($userId);\nforeach ($reviews as $review) {\n    echo \"Review id: \" . $review['id'] . \", Rating: \" . $review['rating'] . \", Review: \" . $review['review'];\n}\n\n$newRating = 5;\n$newReview = 'Great product!';\n$added = addReview($userId, $product_id, $newRating, $newReview);\necho \"Added review successfully: \" . ($added ? 'true' : 'false');\n\n// To edit a review\n$reviewId = 1; // ID of the review to be edited\n$newRating = 4;\n$newReview = 'Even better product!';\n$edited = editReview($reviewId, $newRating, $newReview);\necho \"Edited review successfully: \" . ($edited ? 'true' : 'false');\n\n// To delete a review\n$deleted = deleteReview($reviewId);\necho \"Deleted review successfully: \" . ($deleted ? 'true' : 'false');\n```\n\n**Security Considerations**\n\n*   This code uses prepared statements to prevent SQL injection attacks.\n*   Error handling is implemented using try-catch blocks for PDO exceptions.\n\nThis basic example can be expanded upon as needed, with additional functionality and error handling. It assumes a MySQL database but can be adapted to other databases if necessary.", "code_blocks": [null, "```php\n// Connect to the database\n$conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n\nfunction getUserReviews($userId, $productId = null) {\n    global $conn;\n    if ($productId !== null) {\n        $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id\");\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->execute();\n    } else {\n        $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->execute();\n    }\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction addReview($userId, $productId, $rating, $review) {\n    global $conn;\n    try {\n        $stmt = $conn->prepare(\"INSERT INTO reviews (user_id, product_id, rating, review) VALUES (:user_id, :product_id, :rating, :review)\");\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->bindParam(':rating', $rating);\n        $stmt->bindParam(':review', $review);\n        return $stmt->execute();\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\nfunction editReview($reviewId, $newRating, $newReview) {\n    global $conn;\n    try {\n        $stmt = $conn->prepare(\"UPDATE reviews SET rating = :rating, review = :review WHERE id = :id\");\n        $stmt->bindParam(':id', $reviewId);\n        $stmt->bindParam(':rating', $newRating);\n        $stmt->bindParam(':review', $newReview);\n        return $stmt->execute();\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\nfunction deleteReview($reviewId) {\n    global $conn;\n    try {\n        $stmt = $conn->prepare(\"DELETE FROM reviews WHERE id = :id\");\n        $stmt->bindParam(':id', $reviewId);\n        return $stmt->execute();\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n$userId = 1; // ID of the user\n$product_id = 2; // ID of the product\n\n$reviews = getUserReviews($userId);\nforeach ($reviews as $review) {\n    echo \"Review id: \" . $review['id'] . \", Rating: \" . $review['rating'] . \", Review: \" . $review['review'];\n}\n\n$newRating = 5;\n$newReview = 'Great product!';\n$added = addReview($userId, $product_id, $newRating, $newReview);\necho \"Added review successfully: \" . ($added ? 'true' : 'false');\n\n// To edit a review\n$reviewId = 1; // ID of the review to be edited\n$newRating = 4;\n$newReview = 'Even better product!';\n$edited = editReview($reviewId, $newRating, $newReview);\necho \"Edited review successfully: \" . ($edited ? 'true' : 'false');\n\n// To delete a review\n$deleted = deleteReview($reviewId);\necho \"Deleted review successfully: \" . ($deleted ? 'true' : 'false');\n```"]}
