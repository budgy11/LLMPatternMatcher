{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a user review function in PHP:\n\n**Database Schema**\n\nFirst, let's assume we have the following database schema for reviews:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_id INT,\n  rating TINYINT,\n  comment TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n**PHP Function**\n\nNow, let's create a PHP function to handle user reviews:\n```php\nfunction review_product($product_id, $rating, $comment, $user_id) {\n  // Validate input data\n  if (!is_numeric($product_id)) {\n    throw new Exception(\"Invalid product ID\");\n  }\n  if (!is_int($rating) || $rating < 1 || $rating > 5) {\n    throw new Exception(\"Invalid rating (must be between 1 and 5)\");\n  }\n  if (!$comment) {\n    throw new Exception(\"Comment is required\");\n  }\n\n  // Get user data\n  $user = get_user($user_id);\n\n  // Get product data\n  $product = get_product($product_id);\n\n  // Check if review already exists for this product and user\n  if (review_exists($product_id, $user_id)) {\n    throw new Exception(\"You have already reviewed this product\");\n  }\n\n  // Insert review into database\n  try {\n    $db = connect_to_database();\n    $query = \"INSERT INTO reviews SET \n      user_id = :user_id,\n      product_id = :product_id,\n      rating = :rating,\n      comment = :comment\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":user_id\", $user_id);\n    $stmt->bindParam(\":product_id\", $product_id);\n    $stmt->bindParam(\":rating\", $rating);\n    $stmt->bindParam(\":comment\", $comment);\n    $stmt->execute();\n  } catch (PDOException $e) {\n    throw new Exception(\"Error inserting review: \" . $e->getMessage());\n  }\n\n  // Return success response\n  return array(\n    \"message\" => \"Review submitted successfully\",\n    \"review_id\" => $db->lastInsertId()\n  );\n}\n\nfunction get_user($user_id) {\n  // Get user data from database\n  try {\n    $db = connect_to_database();\n    $query = \"SELECT * FROM users WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":id\", $user_id);\n    $stmt->execute();\n    return $stmt->fetch();\n  } catch (PDOException $e) {\n    throw new Exception(\"Error getting user data: \" . $e->getMessage());\n  }\n}\n\nfunction get_product($product_id) {\n  // Get product data from database\n  try {\n    $db = connect_to_database();\n    $query = \"SELECT * FROM products WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":id\", $product_id);\n    $stmt->execute();\n    return $stmt->fetch();\n  } catch (PDOException $e) {\n    throw new Exception(\"Error getting product data: \" . $e->getMessage());\n  }\n}\n\nfunction review_exists($product_id, $user_id) {\n  // Check if review already exists for this product and user\n  try {\n    $db = connect_to_database();\n    $query = \"SELECT COUNT(*) FROM reviews WHERE product_id = :product_id AND user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":product_id\", $product_id);\n    $stmt->bindParam(\":user_id\", $user_id);\n    $stmt->execute();\n    return (int) $stmt->fetchColumn() > 0;\n  } catch (PDOException $e) {\n    throw new Exception(\"Error checking review existence: \" . $e->getMessage());\n  }\n}\n```\nThis code provides a `review_product` function that takes in the product ID, rating, comment, and user ID as input parameters. It validates the input data, checks if the review already exists for this product and user, inserts the review into the database, and returns a success response with the review ID.\n\nThe supporting functions `get_user`, `get_product`, and `review_exists` are used to retrieve user and product data from the database, and check if a review already exists for a given product and user.\n\nNote that this is just an example code, and you should adapt it to your specific use case and database schema. Additionally, error handling and security measures may need to be added depending on your requirements.", "code_blocks": [null, "```php\nfunction review_product($product_id, $rating, $comment, $user_id) {\n  // Validate input data\n  if (!is_numeric($product_id)) {\n    throw new Exception(\"Invalid product ID\");\n  }\n  if (!is_int($rating) || $rating < 1 || $rating > 5) {\n    throw new Exception(\"Invalid rating (must be between 1 and 5)\");\n  }\n  if (!$comment) {\n    throw new Exception(\"Comment is required\");\n  }\n\n  // Get user data\n  $user = get_user($user_id);\n\n  // Get product data\n  $product = get_product($product_id);\n\n  // Check if review already exists for this product and user\n  if (review_exists($product_id, $user_id)) {\n    throw new Exception(\"You have already reviewed this product\");\n  }\n\n  // Insert review into database\n  try {\n    $db = connect_to_database();\n    $query = \"INSERT INTO reviews SET \n      user_id = :user_id,\n      product_id = :product_id,\n      rating = :rating,\n      comment = :comment\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":user_id\", $user_id);\n    $stmt->bindParam(\":product_id\", $product_id);\n    $stmt->bindParam(\":rating\", $rating);\n    $stmt->bindParam(\":comment\", $comment);\n    $stmt->execute();\n  } catch (PDOException $e) {\n    throw new Exception(\"Error inserting review: \" . $e->getMessage());\n  }\n\n  // Return success response\n  return array(\n    \"message\" => \"Review submitted successfully\",\n    \"review_id\" => $db->lastInsertId()\n  );\n}\n\nfunction get_user($user_id) {\n  // Get user data from database\n  try {\n    $db = connect_to_database();\n    $query = \"SELECT * FROM users WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":id\", $user_id);\n    $stmt->execute();\n    return $stmt->fetch();\n  } catch (PDOException $e) {\n    throw new Exception(\"Error getting user data: \" . $e->getMessage());\n  }\n}\n\nfunction get_product($product_id) {\n  // Get product data from database\n  try {\n    $db = connect_to_database();\n    $query = \"SELECT * FROM products WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":id\", $product_id);\n    $stmt->execute();\n    return $stmt->fetch();\n  } catch (PDOException $e) {\n    throw new Exception(\"Error getting product data: \" . $e->getMessage());\n  }\n}\n\nfunction review_exists($product_id, $user_id) {\n  // Check if review already exists for this product and user\n  try {\n    $db = connect_to_database();\n    $query = \"SELECT COUNT(*) FROM reviews WHERE product_id = :product_id AND user_id = :user_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(\":product_id\", $product_id);\n    $stmt->bindParam(\":user_id\", $user_id);\n    $stmt->execute();\n    return (int) $stmt->fetchColumn() > 0;\n  } catch (PDOException $e) {\n    throw new Exception(\"Error checking review existence: \" . $e->getMessage());\n  }\n}\n```"]}
