{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for a user review system. Let me think about what features are essential.\n\nFirst, the function should let users submit reviews with a rating and comments. So, it needs fields for both. Also, each product or service will have an ID, so I'll include that as a parameter.\n\nI should handle database operations, like inserting new reviews and updating average ratings. Maybe using MySQL since it's common.\n\nSecurity is important. I need to prevent SQL injection by sanitizing inputs. Using functions like mysqli_real_escape_string can help with that.\n\nValidation is necessary too. The rating should be an integer between 1 and 5. Comments shouldn't be empty or too long. Product ID needs to exist in the database to avoid errors.\n\nLet me outline the steps:\n1. Connect to the database.\n2. Validate inputs: check product ID exists, ensure rating is correct, and validate comments.\n3. Insert the review into the reviews table.\n4. Update the average rating for that product.\n5. Close the database connection.\n\nI should write helper functions for validation and sanitization to keep things clean.\n\nWait, how about error handling? Using exceptions might be good so I can catch any issues during execution.\n\nAlso, after inserting a review, I need to calculate the new average rating. That involves fetching the current total and count, then updating them.\n\nI should make sure all variables are properly escaped to prevent SQL injection in every query.\n\nTesting each part step by step would help ensure everything works as expected.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database configuration\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$db_name = \"reviews_db\";\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to create a user review\nfunction createReview($product_id, $user_id, $rating, $comment) {\n    global $conn;\n    \n    // Validate inputs\n    if (!is_numeric($product_id) || !is_numeric($user_id)) {\n        throw new Exception(\"Invalid product or user ID\");\n    }\n    \n    if ($rating < 1 || $rating > 5) {\n        throw new Exception(\"Rating must be between 1 and 5\");\n    }\n    \n    if (empty($comment) || strlen($comment) > 500) {\n        throw new Exception(\"Comment is empty or too long (max 500 characters)\");\n    }\n    \n    // Sanitize inputs\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $comment = mysqli_real_escape_string($conn, $comment);\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment) \n            VALUES ($product_id, $user_id, $rating, '$comment')\";\n            \n    if (!$conn->query($sql)) {\n        throw new Exception(\"Error creating review: \" . $conn->error);\n    }\n    \n    // Update average rating for product\n    updateAverageRating($product_id);\n}\n\n// Function to update average rating for a product\nfunction updateAverageRating($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT COUNT(*) as total_reviews, AVG(rating) as avg_rating \n            FROM reviews \n            WHERE product_id = $product_id\";\n            \n    $result = $conn->query($sql);\n    \n    if ($result && $row = $result->fetch_assoc()) {\n        $total_reviews = $row['total_reviews'];\n        $avg_rating = number_format($row['avg_rating'], 1, '.', '');\n        \n        // Update product table with new average rating\n        $update_sql = \"UPDATE products \n                      SET avg_rating = $avg_rating,\n                          total_reviews = $total_reviews\n                      WHERE id = $product_id\";\n                      \n        if (!$conn->query($update_sql)) {\n            throw new Exception(\"Error updating average rating: \" . $conn->error);\n        }\n    } else {\n        throw new Exception(\"Error fetching reviews: \" . $conn->error);\n    }\n}\n\n// Example usage:\ntry {\n    // Create a review for product ID 1 by user ID 1\n    createReview(1, 1, 5, \"Great product! Highly recommend.\");\n    \n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n// Close database connection\n$conn->close();\n?>\n```\n\nThis code creates a user review system with the following features:\n\n1. **Database Connection**: Establishes a connection to the MySQL database.\n\n2. **createReview Function**:\n   - Accepts parameters for product ID, user ID, rating (1-5), and comment.\n   - Validates input values.\n   - Sanitizes inputs to prevent SQL injection.\n   - Inserts the review into the reviews table.\n   - Updates the average rating for the corresponding product.\n\n3. **updateAverageRating Function**:\n   - Calculates the new average rating and total number of reviews for a product.\n   - Updates the products table with the new average rating and review count.\n\n4. **Error Handling**: Uses try/catch blocks to handle exceptions and display error messages.\n\n**Required Database Tables:**\n\nYou'll need two tables in your database:\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    avg_rating DECIMAL(3,1) DEFAULT 0.0,\n    total_reviews INT DEFAULT 0\n);\n\nCREATE TABLE reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    product_id INT NOT NULL,\n    user_id INT NOT NULL,\n    rating TINYINT NOT NULL CHECK (rating >= 1 AND rating <=5),\n    comment TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**How to Use:**\n\n- Call the `createReview()` function with the appropriate parameters when a user submits a review.\n- The function will automatically update the average rating for the product.\n\n**Notes:**\n\n- Make sure to replace the database configuration variables (`$host`, `$username`, etc.) with your actual database credentials.\n- Add proper error handling and validation based on your specific requirements.\n- You might want to add additional security measures, such as CSRF protection, if using this in a production environment.", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$db_name = \"reviews_db\";\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to create a user review\nfunction createReview($product_id, $user_id, $rating, $comment) {\n    global $conn;\n    \n    // Validate inputs\n    if (!is_numeric($product_id) || !is_numeric($user_id)) {\n        throw new Exception(\"Invalid product or user ID\");\n    }\n    \n    if ($rating < 1 || $rating > 5) {\n        throw new Exception(\"Rating must be between 1 and 5\");\n    }\n    \n    if (empty($comment) || strlen($comment) > 500) {\n        throw new Exception(\"Comment is empty or too long (max 500 characters)\");\n    }\n    \n    // Sanitize inputs\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $comment = mysqli_real_escape_string($conn, $comment);\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment) \n            VALUES ($product_id, $user_id, $rating, '$comment')\";\n            \n    if (!$conn->query($sql)) {\n        throw new Exception(\"Error creating review: \" . $conn->error);\n    }\n    \n    // Update average rating for product\n    updateAverageRating($product_id);\n}\n\n// Function to update average rating for a product\nfunction updateAverageRating($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT COUNT(*) as total_reviews, AVG(rating) as avg_rating \n            FROM reviews \n            WHERE product_id = $product_id\";\n            \n    $result = $conn->query($sql);\n    \n    if ($result && $row = $result->fetch_assoc()) {\n        $total_reviews = $row['total_reviews'];\n        $avg_rating = number_format($row['avg_rating'], 1, '.', '');\n        \n        // Update product table with new average rating\n        $update_sql = \"UPDATE products \n                      SET avg_rating = $avg_rating,\n                          total_reviews = $total_reviews\n                      WHERE id = $product_id\";\n                      \n        if (!$conn->query($update_sql)) {\n            throw new Exception(\"Error updating average rating: \" . $conn->error);\n        }\n    } else {\n        throw new Exception(\"Error fetching reviews: \" . $conn->error);\n    }\n}\n\n// Example usage:\ntry {\n    // Create a review for product ID 1 by user ID 1\n    createReview(1, 1, 5, \"Great product! Highly recommend.\");\n    \n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n// Close database connection\n$conn->close();\n?>\n```", null]}
