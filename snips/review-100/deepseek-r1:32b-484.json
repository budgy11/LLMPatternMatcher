{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, the user asked to create a user review function using PHP. I need to figure out what exactly they're looking for. Probably, they want a system where users can leave reviews and ratings for something, like a product or service.\n\nFirst, I should outline the basic components needed. There should be a way for users to submit their reviews, so an HTML form makes sense. It needs fields for the user's name, email, review text, and a rating from 1 to 5 stars.\n\nNext, handling the form submission is crucial. Using PHP, I can capture the input data, sanitize it to prevent SQL injection or XSS attacks, and then store it in a database. I'll need to connect to a MySQL database, so including the mysqli functions is necessary.\n\nStoring the reviews in a database means creating a table with appropriate columns: id, user_name, email, review_text, rating, and a timestamp for when the review was submitted. This will help organize the data and make it easier to retrieve later.\n\nAfter storing the review, displaying it back to users is important. I'll write a function to fetch all reviews from the database, then loop through them to display each one on the webpage. Including the user's name, email, review text, stars as emojis, and the submission date adds clarity and context.\n\nSecurity is a big concern. I'll make sure to sanitize inputs using mysqli_real_escape_string to prevent SQL injection. Also, escaping output when displaying reviews can help avoid XSS attacks.\n\nI should also include error handling in case something goes wrong during the database operations, like inserting or fetching reviews. Displaying errors will help with debugging and ensure the function is robust.\n\nPutting it all together, I'll structure the code into sections: including the database connection, defining the functions for adding and displaying reviews, setting up the form for submission, and then showing the submitted reviews below the form. This makes the code organized and easy to follow.\n\nFinally, testing each part step by step is essential. Ensuring that the form submits correctly, data is stored in the database without issues, and the reviews are displayed as expected will confirm that everything works smoothly.\n</think>\n\nHere's an example of a user review function using PHP. This script allows users to submit reviews and ratings for a product or service:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a new review\nfunction addReview($user_name, $email, $review_text, $rating, $conn) {\n    // Sanitize inputs\n    $user_name = mysqli_real_escape_string($conn, $user_name);\n    $email = mysqli_real_escape_string($conn, $email);\n    $review_text = mysqli_real_escape_string($conn, $review_text);\n    \n    // SQL query to insert review into database\n    $sql = \"INSERT INTO reviews (user_name, email, review_text, rating, submission_date) \n            VALUES ('$user_name', '$email', '$review_text', $rating, NOW())\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        echo \"Error: \" . mysqli_error($conn);\n        return false;\n    }\n}\n\n// Function to display all reviews\nfunction displayReviews($conn) {\n    // SQL query to fetch all reviews\n    $sql = \"SELECT * FROM reviews ORDER BY submission_date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars($row['user_name']) . \"</h3>\";\n            echo \"<p>Email: \" . htmlspecialchars($row['email']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars($row['review_text']) . \"</p>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</p>\";\n            echo \"<small>Submitted on: \" . $row['submission_date'] . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews found.</p>\";\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Validate and process input\n    $user_name = $_POST['name'];\n    $email = $_POST['email'];\n    $review_text = $_POST['review'];\n    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;\n    \n    if ($rating < 1 || $rating > 5) {\n        echo \"Please select a valid rating (1-5 stars).\";\n    } else {\n        addReview($user_name, $email, $review_text, $rating, $conn);\n    }\n}\n\n// Display review form\necho \"<form method='post' action='\" . htmlspecialchars($_SERVER[\"PHP_SELF\"]) . \"'>\";\necho \"<div>\";\necho \"<label for='name'>Name:</label><br>\";\necho \"<input type='text' id='name' name='name' required><br>\";\necho \"</div>\";\n\necho \"<div>\";\necho \"<label for='email'>Email:</label><br>\";\necho \"<input type='email' id='email' name='email' required><br>\";\necho \"</div>\";\n\necho \"<div>\";\necho \"<label for='review'>Review:</label><br>\";\necho \"<textarea id='review' name='review' rows='5' cols='40' required></textarea><br>\";\necho \"</div>\";\n\necho \"<div>\";\necho \"<label>Rating:</label><br>\";\nfor ($i = 1; $i <= 5; $i++) {\n    echo \"<input type='radio' name='rating' value='$i'> $i stars<br>\";\n}\necho \"</div>\";\n\necho \"<input type='submit' value='Submit Review'>\";\necho \"</form>\";\n\n// Display existing reviews\ndisplayReviews($conn);\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis script includes the following features:\n\n1. A form for users to submit their reviews and ratings\n2. Input validation and sanitization\n3. Storage of reviews in a MySQL database\n4. Display of all submitted reviews with user information, rating stars, and submission date\n5. Security measures like SQL injection prevention\n\nTo use this script:\n\n1. Create a database named 'reviews' and a table named 'reviews' with the following columns:\n   - id (INT AUTO_INCREMENT PRIMARY KEY)\n   - user_name (VARCHAR(255))\n   - email (VARCHAR(255))\n   - review_text (TEXT)\n   - rating (TINYINT)\n   - submission_date (DATETIME)\n\n2. Modify the database connection details at the top of the script to match your environment\n\n3. Save this code as a PHP file and run it on a web server with PHP and MySQL support\n\n4. Users can submit reviews through the form, which are stored in the database and displayed below the form\n\nThe reviews are displayed with:\n- User name\n- Email address\n- Review text\n- Rating (displayed as stars)\n- Submission date\n\nYou can customize the styling by adding CSS classes to the elements or modifying the HTML structure.\n\nNote: This is a basic example. You might want to add additional features like:\n- User authentication\n- Review moderation\n- Display of average rating\n- Sorting and filtering reviews\n- Edit/delete functionality for reviewers\n- CAPTCHA to prevent spam\n- Rate limiting to prevent abuse\n\nAlso, make sure to handle errors properly and implement security measures according to your application's needs.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a new review\nfunction addReview($user_name, $email, $review_text, $rating, $conn) {\n    // Sanitize inputs\n    $user_name = mysqli_real_escape_string($conn, $user_name);\n    $email = mysqli_real_escape_string($conn, $email);\n    $review_text = mysqli_real_escape_string($conn, $review_text);\n    \n    // SQL query to insert review into database\n    $sql = \"INSERT INTO reviews (user_name, email, review_text, rating, submission_date) \n            VALUES ('$user_name', '$email', '$review_text', $rating, NOW())\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        echo \"Error: \" . mysqli_error($conn);\n        return false;\n    }\n}\n\n// Function to display all reviews\nfunction displayReviews($conn) {\n    // SQL query to fetch all reviews\n    $sql = \"SELECT * FROM reviews ORDER BY submission_date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars($row['user_name']) . \"</h3>\";\n            echo \"<p>Email: \" . htmlspecialchars($row['email']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars($row['review_text']) . \"</p>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</p>\";\n            echo \"<small>Submitted on: \" . $row['submission_date'] . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews found.</p>\";\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Validate and process input\n    $user_name = $_POST['name'];\n    $email = $_POST['email'];\n    $review_text = $_POST['review'];\n    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;\n    \n    if ($rating < 1 || $rating > 5) {\n        echo \"Please select a valid rating (1-5 stars).\";\n    } else {\n        addReview($user_name, $email, $review_text, $rating, $conn);\n    }\n}\n\n// Display review form\necho \"<form method='post' action='\" . htmlspecialchars($_SERVER[\"PHP_SELF\"]) . \"'>\";\necho \"<div>\";\necho \"<label for='name'>Name:</label><br>\";\necho \"<input type='text' id='name' name='name' required><br>\";\necho \"</div>\";\n\necho \"<div>\";\necho \"<label for='email'>Email:</label><br>\";\necho \"<input type='email' id='email' name='email' required><br>\";\necho \"</div>\";\n\necho \"<div>\";\necho \"<label for='review'>Review:</label><br>\";\necho \"<textarea id='review' name='review' rows='5' cols='40' required></textarea><br>\";\necho \"</div>\";\n\necho \"<div>\";\necho \"<label>Rating:</label><br>\";\nfor ($i = 1; $i <= 5; $i++) {\n    echo \"<input type='radio' name='rating' value='$i'> $i stars<br>\";\n}\necho \"</div>\";\n\necho \"<input type='submit' value='Submit Review'>\";\necho \"</form>\";\n\n// Display existing reviews\ndisplayReviews($conn);\n\n// Close database connection\nmysqli_close($conn);\n?>\n```"]}
