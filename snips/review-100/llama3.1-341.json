{"prompt": "Create a user review function using php", "llm_output": "Here is an example of how you can create a user review system in PHP:\n\n**Database Schema**\n```sql\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  rating TINYINT(1),\n  comment TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL UNIQUE\n);\n```\n**PHP Code**\n```php\n// Review class to handle user reviews\nclass Review {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  // Function to add a new review\n  public function addReview($userId, $productId, $rating, $comment) {\n    $stmt = $this->db->prepare(\"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)\");\n    $stmt->bindParam(1, $userId);\n    $stmt->bindParam(2, $productId);\n    $stmt->bindParam(3, $rating);\n    $stmt->bindParam(4, $comment);\n    return $stmt->execute();\n  }\n\n  // Function to get all reviews for a product\n  public function getReviewsForProduct($productId) {\n    $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE product_id = ?\");\n    $stmt->bindParam(1, $productId);\n    return $stmt->fetchAll();\n  }\n\n  // Function to get all reviews for a user\n  public function getReviewsForUser($userId) {\n    $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE user_id = ?\");\n    $stmt->bindParam(1, $userId);\n    return $stmt->fetchAll();\n  }\n}\n```\n**Example Usage**\n```php\n// Initialize database connection\n$db = new PDO('mysql:host=localhost;dbname=reviews', 'username', 'password');\n\n// Create a new Review object\n$review = new Review($db);\n\n// Add a new review\n$userId = 1;\n$productId = 2;\n$rating = 5;\n$comment = \"Great product!\";\n$result = $review->addReview($userId, $productId, $rating, $comment);\nif ($result) {\n  echo \"Review added successfully!\";\n} else {\n  echo \"Error adding review.\";\n}\n\n// Get all reviews for a product\n$productId = 2;\n$reviews = $review->getReviewsForProduct($productId);\nforeach ($reviews as $review) {\n  echo \"Rating: {$review['rating']}, Comment: {$review['comment']}\";\n}\n```\nThis code assumes you have a PDO database connection set up in your project. The `Review` class has methods to add new reviews, get all reviews for a product, and get all reviews for a user. You can modify the code to fit your specific use case.\n\nNote: This is just an example and you should adjust it according to your needs and security measures (e.g., validation, sanitization).", "code_blocks": [null, "```php\n// Review class to handle user reviews\nclass Review {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  // Function to add a new review\n  public function addReview($userId, $productId, $rating, $comment) {\n    $stmt = $this->db->prepare(\"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)\");\n    $stmt->bindParam(1, $userId);\n    $stmt->bindParam(2, $productId);\n    $stmt->bindParam(3, $rating);\n    $stmt->bindParam(4, $comment);\n    return $stmt->execute();\n  }\n\n  // Function to get all reviews for a product\n  public function getReviewsForProduct($productId) {\n    $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE product_id = ?\");\n    $stmt->bindParam(1, $productId);\n    return $stmt->fetchAll();\n  }\n\n  // Function to get all reviews for a user\n  public function getReviewsForUser($userId) {\n    $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE user_id = ?\");\n    $stmt->bindParam(1, $userId);\n    return $stmt->fetchAll();\n  }\n}\n```", "```php\n// Initialize database connection\n$db = new PDO('mysql:host=localhost;dbname=reviews', 'username', 'password');\n\n// Create a new Review object\n$review = new Review($db);\n\n// Add a new review\n$userId = 1;\n$productId = 2;\n$rating = 5;\n$comment = \"Great product!\";\n$result = $review->addReview($userId, $productId, $rating, $comment);\nif ($result) {\n  echo \"Review added successfully!\";\n} else {\n  echo \"Error adding review.\";\n}\n\n// Get all reviews for a product\n$productId = 2;\n$reviews = $review->getReviewsForProduct($productId);\nforeach ($reviews as $review) {\n  echo \"Rating: {$review['rating']}, Comment: {$review['comment']}\";\n}\n```"]}
