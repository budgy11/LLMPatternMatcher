{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nBelow is an example implementation of a user review function using PHP. This includes functions for retrieving reviews, adding new reviews, and calculating the average rating.\n\n### Database Schema\n\nFor this example, we'll assume you have a database schema with two tables: `users` and `reviews`.\n\n**users table**\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | int | Unique user ID |\n| username | varchar | User's username |\n\n**reviews table**\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | int | Unique review ID |\n| user_id | int | Foreign key referencing the users table |\n| product_id | int | Product being reviewed |\n| rating | tinyint | Rating from 1 to 5 |\n| review_text | text | User's review |\n\n### PHP Code\n\n```php\n// db.php: Database connection script ( omitted for brevity )\n\nclass ReviewManager {\n    private $db;\n\n    public function __construct() {\n        $this->db = connect_to_db(); // Assuming a database connection function\n    }\n\n    /**\n     * Get all reviews for a specific product.\n     *\n     * @param int $product_id ID of the product being reviewed.\n     * @return array Reviews for the given product.\n     */\n    public function getReviews($product_id) {\n        $query = \"SELECT r.id, u.username, r.rating, r.review_text\n                  FROM reviews r\n                  JOIN users u ON r.user_id = u.id\n                  WHERE r.product_id = ?\";\n        $stmt = $this->db->prepare($query);\n        $stmt->execute([$product_id]);\n        return $stmt->fetchAll();\n    }\n\n    /**\n     * Add a new review for a product.\n     *\n     * @param int $user_id ID of the user submitting the review.\n     * @param int $product_id ID of the product being reviewed.\n     * @param int $rating Rating from 1 to 5.\n     * @param string $review_text User's review text.\n     */\n    public function addReview($user_id, $product_id, $rating, $review_text) {\n        $query = \"INSERT INTO reviews (user_id, product_id, rating, review_text)\n                  VALUES (?, ?, ?, ?)\";\n        $stmt = $this->db->prepare($query);\n        $stmt->execute([$user_id, $product_id, $rating, $review_text]);\n    }\n\n    /**\n     * Calculate the average rating for a product.\n     *\n     * @param int $product_id ID of the product being reviewed.\n     * @return float Average rating for the given product.\n     */\n    public function getAverageRating($product_id) {\n        $query = \"SELECT AVG(r.rating) AS avg_rating\n                  FROM reviews r\n                  WHERE r.product_id = ?\";\n        $stmt = $this->db->prepare($query);\n        $stmt->execute([$product_id]);\n        return $stmt->fetch()['avg_rating'] ?? 0;\n    }\n}\n```\n\n### Example Usage\n\n```php\n$reviewManager = new ReviewManager();\n$product_id = 123; // Replace with the actual product ID\n\n// Get all reviews for a specific product.\n$reviews = $reviewManager->getReviews($product_id);\nprint_r($reviews);\n\n// Add a new review for a product.\n$user_id = 456; // Replace with the actual user ID\n$rating = 4;\n$review_text = \"Great product!\";\n$reviewManager->addReview($user_id, $product_id, $rating, $review_text);\n\n// Calculate the average rating for a product.\n$average_rating = $reviewManager->getAverageRating($product_id);\necho \"Average Rating: $average_rating\";\n```\n\nNote that this is a basic implementation and you should adapt it to your specific use case. Additionally, make sure to secure your database connection script (`db.php`) and handle errors properly.", "code_blocks": ["```php\n// db.php: Database connection script ( omitted for brevity )\n\nclass ReviewManager {\n    private $db;\n\n    public function __construct() {\n        $this->db = connect_to_db(); // Assuming a database connection function\n    }\n\n    /**\n     * Get all reviews for a specific product.\n     *\n     * @param int $product_id ID of the product being reviewed.\n     * @return array Reviews for the given product.\n     */\n    public function getReviews($product_id) {\n        $query = \"SELECT r.id, u.username, r.rating, r.review_text\n                  FROM reviews r\n                  JOIN users u ON r.user_id = u.id\n                  WHERE r.product_id = ?\";\n        $stmt = $this->db->prepare($query);\n        $stmt->execute([$product_id]);\n        return $stmt->fetchAll();\n    }\n\n    /**\n     * Add a new review for a product.\n     *\n     * @param int $user_id ID of the user submitting the review.\n     * @param int $product_id ID of the product being reviewed.\n     * @param int $rating Rating from 1 to 5.\n     * @param string $review_text User's review text.\n     */\n    public function addReview($user_id, $product_id, $rating, $review_text) {\n        $query = \"INSERT INTO reviews (user_id, product_id, rating, review_text)\n                  VALUES (?, ?, ?, ?)\";\n        $stmt = $this->db->prepare($query);\n        $stmt->execute([$user_id, $product_id, $rating, $review_text]);\n    }\n\n    /**\n     * Calculate the average rating for a product.\n     *\n     * @param int $product_id ID of the product being reviewed.\n     * @return float Average rating for the given product.\n     */\n    public function getAverageRating($product_id) {\n        $query = \"SELECT AVG(r.rating) AS avg_rating\n                  FROM reviews r\n                  WHERE r.product_id = ?\";\n        $stmt = $this->db->prepare($query);\n        $stmt->execute([$product_id]);\n        return $stmt->fetch()['avg_rating'] ?? 0;\n    }\n}\n```", "```php\n$reviewManager = new ReviewManager();\n$product_id = 123; // Replace with the actual product ID\n\n// Get all reviews for a specific product.\n$reviews = $reviewManager->getReviews($product_id);\nprint_r($reviews);\n\n// Add a new review for a product.\n$user_id = 456; // Replace with the actual user ID\n$rating = 4;\n$review_text = \"Great product!\";\n$reviewManager->addReview($user_id, $product_id, $rating, $review_text);\n\n// Calculate the average rating for a product.\n$average_rating = $reviewManager->getAverageRating($product_id);\necho \"Average Rating: $average_rating\";\n```"]}
