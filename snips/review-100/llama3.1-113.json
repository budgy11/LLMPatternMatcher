{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a simple user review system using PHP:\n\n**Database Setup**\n\nAssuming you have a database setup with the following tables:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  rating TINYINT,\n  comment TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**PHP Code**\n\n```php\n// Review model\nclass Review {\n  private $db;\n\n  function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function getReviews() {\n    $query = \"SELECT * FROM reviews\";\n    return $this->db->query($query)->fetchAll();\n  }\n\n  public function addReview($user_id, $product_id, $rating, $comment) {\n    $query = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (:user_id, :product_id, :rating, :comment)\";\n    $this->db->prepare($query)->execute(array(\n      ':user_id' => $user_id,\n      ':product_id' => $product_id,\n      ':rating' => $rating,\n      ':comment' => $comment\n    ));\n  }\n\n  public function getReviewsForProduct($product_id) {\n    $query = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n    return $this->db->prepare($query)->execute(array(':product_id' => $product_id))->fetchAll();\n  }\n}\n\n// User review class\nclass UserReview extends Review {\n  private $user_id;\n\n  function __construct($db, $user_id) {\n    parent::__construct($db);\n    $this->user_id = $user_id;\n  }\n\n  public function addReviewForProduct($product_id, $rating, $comment) {\n    $query = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (:user_id, :product_id, :rating, :comment)\";\n    $this->db->prepare($query)->execute(array(\n      ':user_id' => $this->user_id,\n      ':product_id' => $product_id,\n      ':rating' => $rating,\n      ':comment' => $comment\n    ));\n  }\n\n  public function getReviewsForUser() {\n    $query = \"SELECT * FROM reviews WHERE user_id = :user_id\";\n    return $this->db->prepare($query)->execute(array(':user_id' => $this->user_id))->fetchAll();\n  }\n}\n\n// Example usage\n$db = new PDO('mysql:host=localhost;dbname=database_name', 'username', 'password');\n\n$review_model = new Review($db);\n$user_review = new UserReview($db, 1);\n\n// Add review for product\n$user_review->addReviewForProduct(123, 5, \"Great product!\");\n\n// Get all reviews for user\n$reviews = $user_review->getReviewsForUser();\nprint_r($reviews);\n\n// Get all reviews for product\n$product_reviews = $review_model->getReviewsForProduct(123);\nprint_r($product_reviews);\n```\nThis code defines two classes: `Review` and `UserReview`. The `Review` class provides methods to add a review, get all reviews, and get reviews for a specific product. The `UserReview` class extends the `Review` class and adds methods to add a review for a specific product and get all reviews for a user.\n\nNote that this is a simplified example and you should adapt it to your specific use case and database schema. Additionally, this code assumes that you have already set up a PDO connection to your database.", "code_blocks": [null, "```php\n// Review model\nclass Review {\n  private $db;\n\n  function __construct($db) {\n    $this->db = $db;\n  }\n\n  public function getReviews() {\n    $query = \"SELECT * FROM reviews\";\n    return $this->db->query($query)->fetchAll();\n  }\n\n  public function addReview($user_id, $product_id, $rating, $comment) {\n    $query = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (:user_id, :product_id, :rating, :comment)\";\n    $this->db->prepare($query)->execute(array(\n      ':user_id' => $user_id,\n      ':product_id' => $product_id,\n      ':rating' => $rating,\n      ':comment' => $comment\n    ));\n  }\n\n  public function getReviewsForProduct($product_id) {\n    $query = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n    return $this->db->prepare($query)->execute(array(':product_id' => $product_id))->fetchAll();\n  }\n}\n\n// User review class\nclass UserReview extends Review {\n  private $user_id;\n\n  function __construct($db, $user_id) {\n    parent::__construct($db);\n    $this->user_id = $user_id;\n  }\n\n  public function addReviewForProduct($product_id, $rating, $comment) {\n    $query = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (:user_id, :product_id, :rating, :comment)\";\n    $this->db->prepare($query)->execute(array(\n      ':user_id' => $this->user_id,\n      ':product_id' => $product_id,\n      ':rating' => $rating,\n      ':comment' => $comment\n    ));\n  }\n\n  public function getReviewsForUser() {\n    $query = \"SELECT * FROM reviews WHERE user_id = :user_id\";\n    return $this->db->prepare($query)->execute(array(':user_id' => $this->user_id))->fetchAll();\n  }\n}\n\n// Example usage\n$db = new PDO('mysql:host=localhost;dbname=database_name', 'username', 'password');\n\n$review_model = new Review($db);\n$user_review = new UserReview($db, 1);\n\n// Add review for product\n$user_review->addReviewForProduct(123, 5, \"Great product!\");\n\n// Get all reviews for user\n$reviews = $user_review->getReviewsForUser();\nprint_r($reviews);\n\n// Get all reviews for product\n$product_reviews = $review_model->getReviewsForProduct(123);\nprint_r($product_reviews);\n```"]}
