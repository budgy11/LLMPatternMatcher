{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function in PHP. Let me think about how to approach this.\n\nFirst, I should understand the requirements. The function needs to allow users to leave reviews with ratings and comments. So, I'll probably need an HTML form for inputting the rating and comment. Then, I'll need to handle the submission using PHP.\n\nI'll start by setting up the database. I'll create a table called 'reviews' with columns like review_id, user_id, product_id, rating, comment, and date_created. This will store each review along with associated information.\n\nNext, I'll work on displaying existing reviews. I'll write a PHP function that fetches all reviews for a specific product from the database. It should calculate the average rating by summing up all ratings and dividing by the count of reviews. Then, it will display each review with user details, maybe using another query to get the username.\n\nFor submitting a new review, I'll create a form with stars for rating and a text area for comments. When the form is submitted, PHP will handle the input. It needs to validate that the rating is between 1 and 5 and that the comment isn't empty. Then, it will insert the new review into the database.\n\nI should also consider user authentication. Only logged-in users should be able to submit reviews. So, I'll check if a user is authenticated before allowing submission. If not, redirect them to login.\n\nSecurity is important. I'll use prepared statements with mysqli to prevent SQL injection. Also, sanitize any input data to avoid XSS attacks.\n\nTesting each part step by step is crucial. I'll first test the database connection and queries. Then, ensure the form displays correctly and that submissions are handled properly. Finally, check that reviews are displayed as expected, including the average rating.\n\nI might need to adjust the display function later if more user details are required or if there are many reviews. Pagination could be added in the future for better management of large numbers of reviews.\n\nPutting it all together, I'll structure the code with separate functions for displaying and submitting reviews, ensuring it's clean and maintainable.\n</think>\n\nHere's an example of a user review function using PHP that allows users to submit and display product reviews:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$dbname = 'reviews';\n\n$conn = mysqli_connect($host, $user, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Display reviews function\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews for the product\n    $sql = \"SELECT r.review_id, r.user_id, r.rating, r.comment, r.date_created, u.username \n            FROM reviews r \n            JOIN users u ON r.user_id = u.user_id \n            WHERE r.product_id = ? \n            ORDER BY r.date_created DESC\";\n            \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $product_id);\n    mysqli_stmt_execute($stmt);\n    \n    $result = mysqli_stmt_get_result($stmt);\n    \n    // Calculate average rating\n    $average_rating_sql = \"SELECT AVG(rating) as avg_rating \n                           FROM reviews \n                           WHERE product_id = ?\";\n                           \n    $avg_stmt = mysqli_prepare($conn, $average_rating_sql);\n    mysqli_stmt_bind_param($avg_stmt, \"i\", $product_id);\n    mysqli_stmt_execute($avg_stmt);\n    \n    $avg_result = mysqli_stmt_get_result($avg_stmt);\n    $avg_row = mysqli_fetch_assoc($avg_result);\n    $average_rating = number_format((float)$avg_row['avg_rating'], 1, '.', '');\n    \n    // Display average rating\n    echo \"<div class='average-rating'>\";\n    echo \"Average Rating: <strong>\" . $average_rating . \"/5</strong>\";\n    echo \"</div>\";\n    \n    // Display individual reviews\n    while ($row = mysqli_fetch_assoc($result)) {\n        $rating = $row['rating'];\n        $comment = $row['comment'];\n        $username = $row['username'];\n        $date = date('F j, Y', strtotime($row['date_created']));\n        \n        echo \"<div class='review'>\";\n        echo \"<h3>Rating: \" . str_repeat(\"\u2605\", $rating) . \"</h3>\";\n        echo \"<p><strong>\" . $username . \"</strong> - \" . $date . \"</p>\";\n        echo \"<p>\" . $comment . \"</p>\";\n        echo \"</div>\";\n    }\n}\n\n// Submit review function\nfunction submit_review($product_id, $user_id, $rating, $comment) {\n    global $conn;\n    \n    // Sanitize input\n    $rating = intval($rating);\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose a rating between 1 and 5.\";\n    }\n    \n    if (empty($comment)) {\n        return \"Please provide a comment for your review.\";\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment) \n            VALUES (?, ?, ?, ?)\";\n            \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"iisi\", $product_id, $user_id, $rating, $comment);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n?>\n```\n\nThis code includes:\n\n1. A `display_reviews()` function that:\n   - Shows all reviews for a specific product\n   - Calculates and displays the average rating\n   - Formats each review with user information, star rating, and comment\n\n2. A `submit_review()` function that:\n   - Validates input data\n   - Sanitizes comments to prevent XSS attacks\n   - Checks if the rating is within valid range (1-5)\n   - Inserts new reviews into the database\n\nTo use this code:\n\n1. Create a database table for reviews:\n\n```sql\nCREATE TABLE reviews (\n    review_id INT AUTO_INCREMENT PRIMARY KEY,\n    product_id INT NOT NULL,\n    user_id INT NOT NULL,\n    rating TINYINT NOT NULL CHECK (rating >= 1 AND rating <=5),\n    comment TEXT NOT NULL,\n    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n2. Create a simple HTML form to submit reviews:\n\n```html\n<form method=\"post\" action=\"submit_review.php\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product_id; ?>\">\n    \n    <div class=\"rating\">\n        <input type=\"radio\" name=\"rating\" value=\"5\"> \u2605\u2605\u2605\u2605\u2605<br>\n        <input type=\"radio\" name=\"rating\" value=\"4\"> \u2605\u2605\u2605\u2605<br>\n        <input type=\"radio\" name=\"rating\" value=\"3\"> \u2605\u2605\u2605<br>\n        <input type=\"radio\" name=\"rating\" value=\"2\"> \u2605\u2605<br>\n        <input type=\"radio\" name=\"rating\" value=\"1\"> \u2605\n    </div>\n\n    <textarea name=\"comment\" placeholder=\"Write your review...\" required></textarea>\n    \n    <button type=\"submit\">Submit Review</button>\n</form>\n```\n\n3. In your PHP page, display the reviews:\n\n```php\n<?php\n$product_id = 1; // Replace with actual product ID\n\ndisplay_reviews($product_id);\n?>\n```\n\nTo enhance this code further, you could add:\n\n- User authentication system to only allow registered users to submit reviews\n- Validation for non-logged-in users trying to submit reviews\n- Error handling and success messages\n- Pagination for displaying multiple reviews\n- A star rating display using CSS\n- Sorting options (most recent, highest rated, etc.)\n- Review edit/delete functionality\n\nRemember to:\n- Always sanitize user input\n- Use prepared statements to prevent SQL injection\n- Implement proper error handling\n- Add security measures like CSRF protection\n- Include proper validation for user authentication", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$dbname = 'reviews';\n\n$conn = mysqli_connect($host, $user, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Display reviews function\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews for the product\n    $sql = \"SELECT r.review_id, r.user_id, r.rating, r.comment, r.date_created, u.username \n            FROM reviews r \n            JOIN users u ON r.user_id = u.user_id \n            WHERE r.product_id = ? \n            ORDER BY r.date_created DESC\";\n            \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $product_id);\n    mysqli_stmt_execute($stmt);\n    \n    $result = mysqli_stmt_get_result($stmt);\n    \n    // Calculate average rating\n    $average_rating_sql = \"SELECT AVG(rating) as avg_rating \n                           FROM reviews \n                           WHERE product_id = ?\";\n                           \n    $avg_stmt = mysqli_prepare($conn, $average_rating_sql);\n    mysqli_stmt_bind_param($avg_stmt, \"i\", $product_id);\n    mysqli_stmt_execute($avg_stmt);\n    \n    $avg_result = mysqli_stmt_get_result($avg_stmt);\n    $avg_row = mysqli_fetch_assoc($avg_result);\n    $average_rating = number_format((float)$avg_row['avg_rating'], 1, '.', '');\n    \n    // Display average rating\n    echo \"<div class='average-rating'>\";\n    echo \"Average Rating: <strong>\" . $average_rating . \"/5</strong>\";\n    echo \"</div>\";\n    \n    // Display individual reviews\n    while ($row = mysqli_fetch_assoc($result)) {\n        $rating = $row['rating'];\n        $comment = $row['comment'];\n        $username = $row['username'];\n        $date = date('F j, Y', strtotime($row['date_created']));\n        \n        echo \"<div class='review'>\";\n        echo \"<h3>Rating: \" . str_repeat(\"\u2605\", $rating) . \"</h3>\";\n        echo \"<p><strong>\" . $username . \"</strong> - \" . $date . \"</p>\";\n        echo \"<p>\" . $comment . \"</p>\";\n        echo \"</div>\";\n    }\n}\n\n// Submit review function\nfunction submit_review($product_id, $user_id, $rating, $comment) {\n    global $conn;\n    \n    // Sanitize input\n    $rating = intval($rating);\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose a rating between 1 and 5.\";\n    }\n    \n    if (empty($comment)) {\n        return \"Please provide a comment for your review.\";\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment) \n            VALUES (?, ?, ?, ?)\";\n            \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"iisi\", $product_id, $user_id, $rating, $comment);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n?>\n```", null, null, "```php\n<?php\n$product_id = 1; // Replace with actual product ID\n\ndisplay_reviews($product_id);\n?>\n```"]}
