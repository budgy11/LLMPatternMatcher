{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so I need to create a user review function using PHP. Hmm, where do I start? Well, first, I should probably figure out what the requirements are. The user wants a function that allows users to leave reviews on a website, right?\n\nAlright, so let's break it down. I think the function needs to handle both displaying existing reviews and letting users submit new ones. That makes sense. So maybe I can split this into two parts: one for submitting reviews and another for displaying them.\n\nWait, but how do I structure the data? Oh right, I should probably use a database to store the reviews. So I'll need to set up a table in my SQL database with fields like review ID, user name, rating, comment, date, and status. Status could be used to moderate reviews before they're published.\n\nOkay, so for submitting a review, I need an HTML form where users can input their name, select a rating from 1 to 5 stars, and write a comment. Then, when they submit the form, PHP will handle the data. But I should make sure to sanitize the inputs to prevent SQL injection or XSS attacks. Using mysqli_real_escape_string sounds good for that.\n\nNext, inserting the data into the database. The SQL query would go into the reviews table with the sanitized values. Also, setting the status as 'pending' so an admin can approve it later if needed.\n\nNow, displaying the reviews. I need to retrieve all approved reviews from the database and display them on the page. For each review, show the user's name, the stars, the comment, and the date. I should order them by the most recent first for better user experience.\n\nWait, how do I handle the star rating visually? Maybe use CSS classes or emojis to represent each star. So if a user gives 3 stars, display three filled-star emojis and two empty ones. That would make it look neat.\n\nAlso, pagination could be useful if there are many reviews. But maybe that's an advanced feature. For now, I'll keep it simple and just display all approved reviews without pagination.\n\nTesting is important too. I should check if the form submission works correctly, if data is stored properly in the database, and if the displayed reviews match what's submitted. Also, ensuring that only approved reviews show up on the front end.\n\nOh, and security! I must remember to use prepared statements or parameterized queries to prevent SQL injection. Maybe using mysqli_stmt_prepare would be better than just escaping strings. But for simplicity, maybe I'll stick with the escape method in this example, but note that prepared statements are more secure.\n\nWait, also, should I handle cases where the user hasn't submitted a review yet? Like showing a prompt to leave a review if none exist. That could improve the user experience by encouraging participation.\n\nI think I've covered the main points. Now, putting it all together: create an HTML form for submission, write PHP functions to handle inserting and fetching reviews, sanitize inputs, connect to the database, and display everything properly with some styling.\n\nLet me outline the steps:\n\n1. Create the HTML form with fields for name, rating, comment.\n2. Use PHP to process the form data when submitted.\n3. Sanitize each input to prevent security issues.\n4. Insert the sanitized data into the reviews table as pending.\n5. Retrieve approved reviews from the database and display them.\n6. Format the displayed reviews with stars and other details.\n\nI should also consider error handling, like if the database connection fails or if there's an issue inserting data. Maybe add some error messages for debugging purposes.\n\nAlright, I think that's a solid plan. Now, time to write the code step by step, making sure each part works as intended.\n</think>\n\nHere is a PHP function designed to handle user reviews, including submission and display:\n\n```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews_db';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to handle review submission\nfunction submitReview($user_name, $rating, $comment, $conn) {\n    // Sanitize inputs to prevent SQL injection and XSS\n    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));\n    $rating = intval(mysqli_real_escape_string($conn, $rating));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    // Check for valid rating (1-5)\n    if ($rating < 1 || $rating > 5) {\n        return false;\n    }\n    \n    // Insert into database\n    $sql = \"INSERT INTO reviews (user_name, rating, comment, date, status) \n            VALUES ('$user_name', '$rating', '$comment', NOW(), 'pending')\";\n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to fetch and display approved reviews\nfunction displayReviews($conn) {\n    // Fetch all approved reviews ordered by date\n    $sql = \"SELECT * FROM reviews WHERE status='approved' ORDER BY date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            // Display each review\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars_decode($row['user_name']) . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars_decode($row['comment']) . \"</p>\";\n            echo \"<small>\" . date('F j, Y', strtotime($row['date'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        // If no reviews yet\n        echo \"<p>No reviews available. Be the first to review!</p>\";\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $user_name = $_POST['user_name'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    // Submit the review and show feedback\n    if (submitReview($user_name, $rating, $comment, $conn)) {\n        echo \"<div class='success'>Thank you for your review!</div>\";\n    } else {\n        echo \"<div class='error'>Error submitting review. Please try again.</div>\";\n    }\n}\n\n// Display existing reviews\ndisplayReviews($conn);\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\n### Explanation:\n\n1. **Database Connection:** The script starts by establishing a connection to the MySQL database.\n\n2. **submitReview Function:**\n   - Takes user input from the form.\n   - Sanitizes inputs to prevent SQL injection and XSS attacks.\n   - Checks if the rating is within the valid range (1-5).\n   - Inserts the review into the database with a status of 'pending' for moderation.\n\n3. **displayReviews Function:**\n   - Retrieves all approved reviews from the database, ordered by date.\n   - Displays each review with user name, rating (using star emojis), comment, and date.\n   - Handles cases where there are no reviews available.\n\n4. **Form Handling:**\n   - Checks if the form was submitted.\n   - Calls `submitReview` to process the submission.\n   - Provides feedback messages based on success or failure of submission.\n\n5. **Security Measures:**\n   - Uses `mysqli_real_escape_string` and `htmlspecialchars` to sanitize inputs.\n   - Validates user input for rating to ensure it's within acceptable limits.\n\n### Usage:\n\n- Ensure your database table named 'reviews' has the necessary columns: `id`, `user_name`, `rating`, `comment`, `date`, `status`.\n- Use appropriate HTML and CSS to style the form and reviews. For example, you might want to add classes for styling the stars or formatting the review display.\n\n### Example HTML Form:\n\n```html\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"text\" name=\"user_name\" placeholder=\"Your Name\" required>\n    <select name=\"rating\">\n        <option value=\"\">Select Rating</option>\n        <option value=\"1\">\u2605\u2606\u2606\u2606\u2606</option>\n        <option value=\"2\">\u2605\u2605\u2606\u2606\u2606</option>\n        <option value=\"3\">\u2605\u2605\u2605\u2606\u2606</option>\n        <option value=\"4\">\u2605\u2605\u2605\u2605\u2606</option>\n        <option value=\"5\">\u2605\u2605\u2605\u2605\u2605</option>\n    </select>\n    <textarea name=\"comment\" placeholder=\"Your Review...\" required></textarea>\n    <button type=\"submit\">Submit Review</button>\n</form>\n```\n\n### Example CSS for Reviews:\n\n```css\n.review {\n    margin: 20px;\n    padding: 15px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\n.success, .error {\n    padding: 10px;\n    margin: 10px 0;\n    border-radius: 4px;\n}\n\n.success { background-color: #dff0d8; color: #3c763d; }\n.error   { background-color: #f2dede; color: #a94442; }\n```\n\nThis setup provides a basic yet functional review system that can be expanded with features like user authentication, admin approval interface, and pagination for more reviews.", "code_blocks": ["```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews_db';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to handle review submission\nfunction submitReview($user_name, $rating, $comment, $conn) {\n    // Sanitize inputs to prevent SQL injection and XSS\n    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));\n    $rating = intval(mysqli_real_escape_string($conn, $rating));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    // Check for valid rating (1-5)\n    if ($rating < 1 || $rating > 5) {\n        return false;\n    }\n    \n    // Insert into database\n    $sql = \"INSERT INTO reviews (user_name, rating, comment, date, status) \n            VALUES ('$user_name', '$rating', '$comment', NOW(), 'pending')\";\n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to fetch and display approved reviews\nfunction displayReviews($conn) {\n    // Fetch all approved reviews ordered by date\n    $sql = \"SELECT * FROM reviews WHERE status='approved' ORDER BY date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            // Display each review\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars_decode($row['user_name']) . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars_decode($row['comment']) . \"</p>\";\n            echo \"<small>\" . date('F j, Y', strtotime($row['date'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        // If no reviews yet\n        echo \"<p>No reviews available. Be the first to review!</p>\";\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $user_name = $_POST['user_name'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    // Submit the review and show feedback\n    if (submitReview($user_name, $rating, $comment, $conn)) {\n        echo \"<div class='success'>Thank you for your review!</div>\";\n    } else {\n        echo \"<div class='error'>Error submitting review. Please try again.</div>\";\n    }\n}\n\n// Display existing reviews\ndisplayReviews($conn);\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null, null]}
