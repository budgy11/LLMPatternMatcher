{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, I need to create a PHP function for handling user reviews. Let me break down what the user is asking for.\n\nFirst, the function should add a review to a MySQL database. So, I'll need to connect to the database using mysqli. I'll include placeholders for the host, username, password, and database name since those will vary depending on the setup.\n\nNext, the function needs parameters like user ID, product ID, rating, and comment. These are essential fields for a review system. I should make sure each parameter is required to avoid missing data.\n\nData validation is crucial. I'll check that the user ID and product ID are positive integers using ctype_digit. The rating must be between 1 and 5. Also, the comment shouldn't be empty and should have a reasonable length limit to prevent abuse or errors.\n\nSanitizing inputs is important to prevent SQL injection. Using mysqli_real_escape_string will help with that for the comment field. Preparing and binding parameters in a prepared statement will handle the other numeric fields securely.\n\nI'll structure the function to return different messages based on success or failure at each step: validation, database connection, query execution, etc. This makes debugging easier and gives clear feedback about what went wrong if something fails.\n\nFinally, I'll provide an example usage so users can see how to implement the function correctly in their code. This helps ensure that others can integrate it without issues.\n</think>\n\nHere's a PHP function for handling user reviews:\n\n```php\n<?php\nfunction add_user_review($user_id, $product_id, $rating, $comment) {\n    // Database connection details\n    $host = 'localhost';\n    $db_username = 'username';\n    $db_password = 'password';\n    $database = 'reviews_db';\n\n    // Validate input\n    if (!isset($user_id, $product_id, $rating, $comment)) {\n        return \"All fields are required\";\n    }\n\n    // Check for valid values\n    if (!ctype_digit((string)$user_id) || !ctype_digit((string)$product_id)) {\n        return \"Invalid user or product ID\";\n    }\n    if ($rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5\";\n    }\n    if (strlen($comment) < 1 || strlen($comment) > 1000) {\n        return \"Comment must be between 1 and 1000 characters\";\n    }\n\n    // Connect to database\n    $mysqli = new mysqli($host, $db_username, $db_password, $database);\n    \n    if ($mysqli->connect_errno) {\n        return \"Failed to connect to database: \" . $mysqli->connect_error;\n    }\n\n    // Sanitize input\n    $comment = $mysqli->real_escape_string($comment);\n\n    // Prepare and execute the SQL query\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment) \n            VALUES (?, ?, ?, ?)\";\n    \n    if ($stmt = $mysqli->prepare($sql)) {\n        $stmt->bind_param(\"iiis\", $user_id, $product_id, $rating, $comment);\n        \n        if ($stmt->execute()) {\n            return \"Review added successfully\";\n        } else {\n            return \"Error adding review: \" . $stmt->error;\n        }\n    } else {\n        return \"Prepare failed: \" . $mysqli->error;\n    }\n\n    // Close database connection\n    $mysqli->close();\n}\n\n// Example usage:\n$user_id = 123;\n$product_id = 456;\n$rating = 4;\n$comment = \"This product is great!\";\n$result = add_user_review($user_id, $product_id, $rating, $comment);\necho $result;\n\n?>\n```\n\nThis function includes the following features:\n\n1. Input validation for all required fields\n2. Data sanitization to prevent SQL injection\n3. Error handling and meaningful error messages\n4. Database connection setup\n5. Prepared statements for secure data insertion\n6. Example usage\n\nTo use this function, you'll need to:\n\n1. Replace the database connection details (host, username, password, database)\n2. Create a reviews table in your database with these columns:\n   - user_id (INT)\n   - product_id (INT)\n   - rating (INT)\n   - comment (TEXT)\n\nThe function will return:\n- Success message if review was added\n- Error message if any validation failed or there was a database error\n\nYou can customize the input validation, database schema, and error messages based on your specific requirements.", "code_blocks": ["```php\n<?php\nfunction add_user_review($user_id, $product_id, $rating, $comment) {\n    // Database connection details\n    $host = 'localhost';\n    $db_username = 'username';\n    $db_password = 'password';\n    $database = 'reviews_db';\n\n    // Validate input\n    if (!isset($user_id, $product_id, $rating, $comment)) {\n        return \"All fields are required\";\n    }\n\n    // Check for valid values\n    if (!ctype_digit((string)$user_id) || !ctype_digit((string)$product_id)) {\n        return \"Invalid user or product ID\";\n    }\n    if ($rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5\";\n    }\n    if (strlen($comment) < 1 || strlen($comment) > 1000) {\n        return \"Comment must be between 1 and 1000 characters\";\n    }\n\n    // Connect to database\n    $mysqli = new mysqli($host, $db_username, $db_password, $database);\n    \n    if ($mysqli->connect_errno) {\n        return \"Failed to connect to database: \" . $mysqli->connect_error;\n    }\n\n    // Sanitize input\n    $comment = $mysqli->real_escape_string($comment);\n\n    // Prepare and execute the SQL query\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment) \n            VALUES (?, ?, ?, ?)\";\n    \n    if ($stmt = $mysqli->prepare($sql)) {\n        $stmt->bind_param(\"iiis\", $user_id, $product_id, $rating, $comment);\n        \n        if ($stmt->execute()) {\n            return \"Review added successfully\";\n        } else {\n            return \"Error adding review: \" . $stmt->error;\n        }\n    } else {\n        return \"Prepare failed: \" . $mysqli->error;\n    }\n\n    // Close database connection\n    $mysqli->close();\n}\n\n// Example usage:\n$user_id = 123;\n$product_id = 456;\n$rating = 4;\n$comment = \"This product is great!\";\n$result = add_user_review($user_id, $product_id, $rating, $comment);\necho $result;\n\n?>\n```"]}
