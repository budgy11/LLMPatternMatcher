{"prompt": "Create a user review function using php", "llm_output": "Here's an example of a simple user review system in PHP. This will cover creating, reading, updating and deleting reviews.\n\n**Database Schema**\n\nFor this system, we'll need to set up a database table for reviews. The following is the schema:\n\n```sql\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  title VARCHAR(255),\n  review TEXT,\n  rating TINYINT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  user_id INT,\n  product_id INT,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**Review Class**\n\nCreate a `Review` class to encapsulate the functionality of creating, reading, updating and deleting reviews.\n\n```php\nclass Review {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  // Create review\n  public function create($user_id, $product_id, $title, $review, $rating) {\n    try {\n      $stmt = $this->db->prepare('INSERT INTO reviews (title, review, rating, user_id, product_id) VALUES (?, ?, ?, ?, ?)');\n      $stmt->execute([$title, $review, $rating, $user_id, $product_id]);\n      return true;\n    } catch (PDOException $e) {\n      echo \"Error creating review: \" . $e->getMessage();\n      return false;\n    }\n  }\n\n  // Read reviews\n  public function read($product_id = null, $limit = null, $offset = null) {\n    try {\n      if ($product_id === null) {\n        $stmt = $this->db->prepare('SELECT * FROM reviews');\n      } else {\n        $stmt = $this->db->prepare('SELECT * FROM reviews WHERE product_id = ? ORDER BY id DESC LIMIT ? OFFSET ?');\n        $stmt->execute([$product_id, $limit, $offset]);\n      }\n      return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    } catch (PDOException $e) {\n      echo \"Error reading reviews: \" . $e->getMessage();\n      return array();\n    }\n  }\n\n  // Update review\n  public function update($id, $title = null, $review = null, $rating = null) {\n    try {\n      if ($title !== null || $review !== null || $rating !== null) {\n        $stmt = $this->db->prepare('UPDATE reviews SET title = ?, review = ?, rating = ? WHERE id = ?');\n        $stmt->execute([$title ?? '', $review ?? '', $rating ?? 0, $id]);\n      }\n      return true;\n    } catch (PDOException $e) {\n      echo \"Error updating review: \" . $e->getMessage();\n      return false;\n    }\n  }\n\n  // Delete review\n  public function delete($id) {\n    try {\n      $stmt = $this->db->prepare('DELETE FROM reviews WHERE id = ?');\n      $stmt->execute([$id]);\n      return true;\n    } catch (PDOException $e) {\n      echo \"Error deleting review: \" . $e->getMessage();\n      return false;\n    }\n  }\n}\n```\n\n**Example Usage**\n\n```php\n$db = new PDO('mysql:host=localhost;dbname=reviews', 'username', 'password');\n\n$review = new Review($db);\n\n// Create a review\n$user_id = 1;\n$product_id = 1;\n$title = 'Review Title';\n$review_text = 'This is the review text.';\n$rating = 4;\n\n$created_review = $review->create($user_id, $product_id, $title, $review_text, $rating);\nif ($created_review) {\n    echo \"Review created successfully!\";\n} else {\n    echo \"Error creating review.\";\n}\n\n// Read reviews\n$product_id = 1;\n$limit = 10;\n$offset = 0;\n\n$reviews = $review->read($product_id, $limit, $offset);\nforeach ($reviews as $r) {\n    echo \"ID: \" . $r['id'] . \", Title: \" . $r['title'] . \", Review: \" . $r['review'] . \", Rating: \" . $r['rating'];\n}\n\n// Update review\n$id = 1;\n$title = 'New title';\n$review_text = 'New review text.';\n$rating = 5;\n\n$updated_review = $review->update($id, $title, $review_text, $rating);\nif ($updated_review) {\n    echo \"Review updated successfully!\";\n} else {\n    echo \"Error updating review.\";\n}\n\n// Delete review\n$id = 1;\n$deleted_review = $review->delete($id);\nif ($deleted_review) {\n    echo \"Review deleted successfully!\";\n} else {\n    echo \"Error deleting review.\";\n}\n```\n\nThis code creates a simple review system, allowing you to create reviews for products, read reviews from the database, update existing reviews and delete reviews. You can customize it as needed to fit your specific requirements.", "code_blocks": [null, "```php\nclass Review {\n  private $db;\n\n  public function __construct($db) {\n    $this->db = $db;\n  }\n\n  // Create review\n  public function create($user_id, $product_id, $title, $review, $rating) {\n    try {\n      $stmt = $this->db->prepare('INSERT INTO reviews (title, review, rating, user_id, product_id) VALUES (?, ?, ?, ?, ?)');\n      $stmt->execute([$title, $review, $rating, $user_id, $product_id]);\n      return true;\n    } catch (PDOException $e) {\n      echo \"Error creating review: \" . $e->getMessage();\n      return false;\n    }\n  }\n\n  // Read reviews\n  public function read($product_id = null, $limit = null, $offset = null) {\n    try {\n      if ($product_id === null) {\n        $stmt = $this->db->prepare('SELECT * FROM reviews');\n      } else {\n        $stmt = $this->db->prepare('SELECT * FROM reviews WHERE product_id = ? ORDER BY id DESC LIMIT ? OFFSET ?');\n        $stmt->execute([$product_id, $limit, $offset]);\n      }\n      return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    } catch (PDOException $e) {\n      echo \"Error reading reviews: \" . $e->getMessage();\n      return array();\n    }\n  }\n\n  // Update review\n  public function update($id, $title = null, $review = null, $rating = null) {\n    try {\n      if ($title !== null || $review !== null || $rating !== null) {\n        $stmt = $this->db->prepare('UPDATE reviews SET title = ?, review = ?, rating = ? WHERE id = ?');\n        $stmt->execute([$title ?? '', $review ?? '', $rating ?? 0, $id]);\n      }\n      return true;\n    } catch (PDOException $e) {\n      echo \"Error updating review: \" . $e->getMessage();\n      return false;\n    }\n  }\n\n  // Delete review\n  public function delete($id) {\n    try {\n      $stmt = $this->db->prepare('DELETE FROM reviews WHERE id = ?');\n      $stmt->execute([$id]);\n      return true;\n    } catch (PDOException $e) {\n      echo \"Error deleting review: \" . $e->getMessage();\n      return false;\n    }\n  }\n}\n```", "```php\n$db = new PDO('mysql:host=localhost;dbname=reviews', 'username', 'password');\n\n$review = new Review($db);\n\n// Create a review\n$user_id = 1;\n$product_id = 1;\n$title = 'Review Title';\n$review_text = 'This is the review text.';\n$rating = 4;\n\n$created_review = $review->create($user_id, $product_id, $title, $review_text, $rating);\nif ($created_review) {\n    echo \"Review created successfully!\";\n} else {\n    echo \"Error creating review.\";\n}\n\n// Read reviews\n$product_id = 1;\n$limit = 10;\n$offset = 0;\n\n$reviews = $review->read($product_id, $limit, $offset);\nforeach ($reviews as $r) {\n    echo \"ID: \" . $r['id'] . \", Title: \" . $r['title'] . \", Review: \" . $r['review'] . \", Rating: \" . $r['rating'];\n}\n\n// Update review\n$id = 1;\n$title = 'New title';\n$review_text = 'New review text.';\n$rating = 5;\n\n$updated_review = $review->update($id, $title, $review_text, $rating);\nif ($updated_review) {\n    echo \"Review updated successfully!\";\n} else {\n    echo \"Error updating review.\";\n}\n\n// Delete review\n$id = 1;\n$deleted_review = $review->delete($id);\nif ($deleted_review) {\n    echo \"Review deleted successfully!\";\n} else {\n    echo \"Error deleting review.\";\n}\n```"]}
