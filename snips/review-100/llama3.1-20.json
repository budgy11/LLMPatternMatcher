{"prompt": "Create a user review function using php", "llm_output": "Here's an example of a basic user review system in PHP. This example assumes you're using MySQL as your database management system.\n\n**Database Schema:**\n\nFirst, let's create the necessary tables to store reviews:\n\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    product_id INT NOT NULL,\n    rating TINYINT NOT NULL,\n    review TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\n```php\n// Database connection settings\n$host = 'your_host';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a database connection\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\nfunction getUserReviews($userId) {\n    global $conn;\n    \n    try {\n        // Prepare the query to get reviews for a specific user\n        $stmt = $conn->prepare(\"SELECT r.*, p.name as product_name FROM reviews r JOIN products p ON r.product_id = p.id WHERE r.user_id = :user_id\");\n        \n        // Bind the parameters\n        $stmt->bindParam(':user_id', $userId);\n        \n        // Execute the query and fetch results\n        $stmt->execute();\n        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        \n        return $reviews;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return array();\n    }\n}\n\nfunction getProductReviews($productId) {\n    global $conn;\n    \n    try {\n        // Prepare the query to get reviews for a specific product\n        $stmt = $conn->prepare(\"SELECT r.*, u.name as user_name FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = :product_id\");\n        \n        // Bind the parameters\n        $stmt->bindParam(':product_id', $productId);\n        \n        // Execute the query and fetch results\n        $stmt->execute();\n        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        \n        return $reviews;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return array();\n    }\n}\n\nfunction addReview($userId, $productId, $rating, $reviewText) {\n    global $conn;\n    \n    try {\n        // Prepare the query to insert a new review\n        $stmt = $conn->prepare(\"INSERT INTO reviews (user_id, product_id, rating, review) VALUES (:user_id, :product_id, :rating, :review)\");\n        \n        // Bind the parameters\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->bindParam(':rating', $rating);\n        $stmt->bindParam(':review', $reviewText);\n        \n        // Execute the query\n        $stmt->execute();\n        \n        return true;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n\n// Get reviews for a specific user\n$userId = 1;\n$reviews = getUserReviews($userId);\nprint_r($reviews);\n\n// Get reviews for a specific product\n$productId = 1;\n$reviews = getProductReviews($productId);\nprint_r($reviews);\n\n// Add a new review\n$userId = 1;\n$productId = 1;\n$rating = 5;\n$reviewText = \"This is an awesome product!\";\n$isAdded = addReview($userId, $productId, $rating, $reviewText);\necho $isAdded ? 'Review added successfully!' : 'Error adding review.';\n```\n\n**Note:** This code uses PDO (PHP Data Objects) for database interactions. Make sure to replace the placeholders (`your_host`, `your_database_name`, etc.) with your actual database credentials.\n\nThis example demonstrates a basic user review system, where you can:\n\n* Get reviews for a specific user\n* Get reviews for a specific product\n* Add a new review\n\nThe `getUserReviews` and `getProductReviews` functions use prepared statements to fetch reviews from the database based on user/product IDs. The `addReview` function uses a prepared statement to insert a new review into the database.\n\nRemember to replace the placeholders with your actual database credentials and adjust the code according to your specific requirements.", "code_blocks": [null, "```php\n// Database connection settings\n$host = 'your_host';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a database connection\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\nfunction getUserReviews($userId) {\n    global $conn;\n    \n    try {\n        // Prepare the query to get reviews for a specific user\n        $stmt = $conn->prepare(\"SELECT r.*, p.name as product_name FROM reviews r JOIN products p ON r.product_id = p.id WHERE r.user_id = :user_id\");\n        \n        // Bind the parameters\n        $stmt->bindParam(':user_id', $userId);\n        \n        // Execute the query and fetch results\n        $stmt->execute();\n        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        \n        return $reviews;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return array();\n    }\n}\n\nfunction getProductReviews($productId) {\n    global $conn;\n    \n    try {\n        // Prepare the query to get reviews for a specific product\n        $stmt = $conn->prepare(\"SELECT r.*, u.name as user_name FROM reviews r JOIN users u ON r.user_id = u.id WHERE r.product_id = :product_id\");\n        \n        // Bind the parameters\n        $stmt->bindParam(':product_id', $productId);\n        \n        // Execute the query and fetch results\n        $stmt->execute();\n        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        \n        return $reviews;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return array();\n    }\n}\n\nfunction addReview($userId, $productId, $rating, $reviewText) {\n    global $conn;\n    \n    try {\n        // Prepare the query to insert a new review\n        $stmt = $conn->prepare(\"INSERT INTO reviews (user_id, product_id, rating, review) VALUES (:user_id, :product_id, :rating, :review)\");\n        \n        // Bind the parameters\n        $stmt->bindParam(':user_id', $userId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->bindParam(':rating', $rating);\n        $stmt->bindParam(':review', $reviewText);\n        \n        // Execute the query\n        $stmt->execute();\n        \n        return true;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n\n// Get reviews for a specific user\n$userId = 1;\n$reviews = getUserReviews($userId);\nprint_r($reviews);\n\n// Get reviews for a specific product\n$productId = 1;\n$reviews = getProductReviews($productId);\nprint_r($reviews);\n\n// Add a new review\n$userId = 1;\n$productId = 1;\n$rating = 5;\n$reviewText = \"This is an awesome product!\";\n$isAdded = addReview($userId, $productId, $rating, $reviewText);\necho $isAdded ? 'Review added successfully!' : 'Error adding review.';\n```"]}
