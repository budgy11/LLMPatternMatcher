{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nBelow is an example implementation of a user review function using PHP. This function allows users to create, read, update and delete (CRUD) reviews.\n\n### Database Schema\n--------------------\n\nWe assume that you have a database table `reviews` with the following schema:\n\n```sql\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  review TEXT,\n  rating TINYINT(1),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### PHP Function Implementation\n------------------------------\n\nCreate a new file `review.php` with the following code:\n\n```php\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database_name', 'username', 'password');\n  }\n\n  /**\n   * Create a new review\n   *\n   * @param int $user_id User ID\n   * @param int $product_id Product ID\n   * @param string $review Review text\n   * @param int $rating Rating (1-5)\n   */\n  public function createReview($user_id, $product_id, $review, $rating) {\n    try {\n      $stmt = $this->db->prepare('INSERT INTO reviews (user_id, product_id, review, rating) VALUES (?, ?, ?, ?)');\n      $stmt->execute([$user_id, $product_id, $review, $rating]);\n      return $this->db->lastInsertId();\n    } catch (PDOException $e) {\n      echo 'Error creating review: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Get all reviews\n   *\n   * @return array Reviews data\n   */\n  public function getAllReviews() {\n    try {\n      $stmt = $this->db->prepare('SELECT * FROM reviews');\n      $stmt->execute();\n      return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    } catch (PDOException $e) {\n      echo 'Error fetching reviews: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Get review by ID\n   *\n   * @param int $id Review ID\n   * @return array Review data\n   */\n  public function getReviewById($id) {\n    try {\n      $stmt = $this->db->prepare('SELECT * FROM reviews WHERE id = ?');\n      $stmt->execute([$id]);\n      return $stmt->fetch(PDO::FETCH_ASSOC);\n    } catch (PDOException $e) {\n      echo 'Error fetching review: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Update a review\n   *\n   * @param int $id Review ID\n   * @param string $review Review text\n   * @param int $rating Rating (1-5)\n   */\n  public function updateReview($id, $review, $rating) {\n    try {\n      $stmt = $this->db->prepare('UPDATE reviews SET review = ?, rating = ? WHERE id = ?');\n      $stmt->execute([$review, $rating, $id]);\n    } catch (PDOException $e) {\n      echo 'Error updating review: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Delete a review\n   *\n   * @param int $id Review ID\n   */\n  public function deleteReview($id) {\n    try {\n      $stmt = $this->db->prepare('DELETE FROM reviews WHERE id = ?');\n      $stmt->execute([$id]);\n    } catch (PDOException $e) {\n      echo 'Error deleting review: ' . $e->getMessage();\n    }\n  }\n}\n```\n\n### Usage\n-----\n\nTo use the `Review` class, create an instance and call the desired method:\n\n```php\n$review = new Review();\n\n// Create a new review\n$user_id = 1;\n$product_id = 2;\n$review_text = 'Great product!';\n$rating = 5;\n$new_review_id = $review->createReview($user_id, $product_id, $review_text, $rating);\n\n// Get all reviews\n$reviews = $review->getAllReviews();\n\n// Get a review by ID\n$review_data = $review->getReviewById(1);\n\n// Update a review\n$review->updateReview(1, 'Updated review text!', 4);\n\n// Delete a review\n$review->deleteReview(1);\n```\n\nRemember to replace `your_database_name`, `username` and `password` with your actual database credentials.", "code_blocks": [null, "```php\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database_name', 'username', 'password');\n  }\n\n  /**\n   * Create a new review\n   *\n   * @param int $user_id User ID\n   * @param int $product_id Product ID\n   * @param string $review Review text\n   * @param int $rating Rating (1-5)\n   */\n  public function createReview($user_id, $product_id, $review, $rating) {\n    try {\n      $stmt = $this->db->prepare('INSERT INTO reviews (user_id, product_id, review, rating) VALUES (?, ?, ?, ?)');\n      $stmt->execute([$user_id, $product_id, $review, $rating]);\n      return $this->db->lastInsertId();\n    } catch (PDOException $e) {\n      echo 'Error creating review: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Get all reviews\n   *\n   * @return array Reviews data\n   */\n  public function getAllReviews() {\n    try {\n      $stmt = $this->db->prepare('SELECT * FROM reviews');\n      $stmt->execute();\n      return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    } catch (PDOException $e) {\n      echo 'Error fetching reviews: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Get review by ID\n   *\n   * @param int $id Review ID\n   * @return array Review data\n   */\n  public function getReviewById($id) {\n    try {\n      $stmt = $this->db->prepare('SELECT * FROM reviews WHERE id = ?');\n      $stmt->execute([$id]);\n      return $stmt->fetch(PDO::FETCH_ASSOC);\n    } catch (PDOException $e) {\n      echo 'Error fetching review: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Update a review\n   *\n   * @param int $id Review ID\n   * @param string $review Review text\n   * @param int $rating Rating (1-5)\n   */\n  public function updateReview($id, $review, $rating) {\n    try {\n      $stmt = $this->db->prepare('UPDATE reviews SET review = ?, rating = ? WHERE id = ?');\n      $stmt->execute([$review, $rating, $id]);\n    } catch (PDOException $e) {\n      echo 'Error updating review: ' . $e->getMessage();\n    }\n  }\n\n  /**\n   * Delete a review\n   *\n   * @param int $id Review ID\n   */\n  public function deleteReview($id) {\n    try {\n      $stmt = $this->db->prepare('DELETE FROM reviews WHERE id = ?');\n      $stmt->execute([$id]);\n    } catch (PDOException $e) {\n      echo 'Error deleting review: ' . $e->getMessage();\n    }\n  }\n}\n```", "```php\n$review = new Review();\n\n// Create a new review\n$user_id = 1;\n$product_id = 2;\n$review_text = 'Great product!';\n$rating = 5;\n$new_review_id = $review->createReview($user_id, $product_id, $review_text, $rating);\n\n// Get all reviews\n$reviews = $review->getAllReviews();\n\n// Get a review by ID\n$review_data = $review->getReviewById(1);\n\n// Update a review\n$review->updateReview(1, 'Updated review text!', 4);\n\n// Delete a review\n$review->deleteReview(1);\n```"]}
