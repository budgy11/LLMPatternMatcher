{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so the user asked to create a user review function using PHP. I need to figure out what exactly they're looking for. Maybe they want a way for users to leave reviews on their website and have those reviews displayed.\n\nFirst, I should outline the main components needed. There's storing the reviews somewhere, probably in a database since it's more reliable than files. So I'll need a database connection setup. Then, functions to add a review, retrieve them, display them on the site, and maybe allow users to rate using stars.\n\nI should start by creating a function to connect to the database. That's standard, so I'll use mysqli_connect with placeholders for host, user, password, and database name. They can fill those in later.\n\nNext, adding a review. This function needs to take parameters like user ID, product ID, rating, title, and comment. I should validate these inputs to prevent SQL injection and ensure they're not empty. Using prepared statements would be good for security here. Then, insert into the reviews table and return success or failure.\n\nFor displaying reviews, I'll need a function that fetches all reviews for a specific product. It should order them by date so the latest are first. Again, using prepared statements to prevent SQL injection. Then loop through the results and build HTML elements with stars based on the rating.\n\nI also need helper functions: one to calculate the average rating by summing ratings and dividing by count, and another to convert a rating number into star emojis for display.\n\nIn the display function, I'll structure each review with user info, date, stars, title, and comment. Maybe include CSS classes for styling later.\n\nI should remind them about security measures like escaping inputs, using prepared statements, and sanitizing outputs. Also mention that they need to set up their database table correctly before running this code.\n\nPutting it all together, the example usage shows how to call these functions with sample data. They can then integrate this into their web pages, making sure to connect properly and handle any potential errors.\n\nI think I covered the main points: connecting, adding, displaying, calculating averages, and helper functions for stars. Also included some notes on security and setup. Hopefully, this gives them a solid starting point for implementing user reviews on their site.\n</think>\n\nHere's an example of a user review function in PHP that allows users to submit reviews and display them:\n\n```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$database = 'your_database';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $database);\n\n// Function to add a new review\nfunction addReview($conn, $userId, $productId, $rating, $title, $comment) {\n    // Sanitize inputs\n    $userId = mysqli_real_escape_string($conn, $userId);\n    $productId = mysqli_real_escape_string($conn, $productId);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $title = mysqli_real_escape_string($conn, $title);\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Check if inputs are not empty\n    if ($userId == \"\" || $productId == \"\" || $rating == \"\" || $title == \"\" || $comment == \"\") {\n        return false;\n    }\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, title, comment) VALUES (?, ?, ?, ?, ?)\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"iiiss\", $userId, $productId, $rating, $title, $comment);\n\n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get all reviews for a product\nfunction getReviews($conn, $productId) {\n    // Sanitize input\n    $productId = mysqli_real_escape_string($conn, $productId);\n\n    // Get reviews from database\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n\n    // Fetch all reviews\n    $reviews = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n        $reviews[] = $row;\n    }\n\n    return $reviews;\n}\n\n// Function to display reviews\nfunction displayReviews($conn, $productId) {\n    $reviews = getReviews($conn, $productId);\n\n    if (empty($reviews)) {\n        echo \"<p>No reviews available yet.</p>\";\n        return;\n    }\n\n    foreach ($reviews as $review) {\n        // Get user info (assuming you have a users table)\n        $userId = $review['user_id'];\n        $sql_user = \"SELECT username FROM users WHERE id = ?\";\n        $stmt_user = mysqli_prepare($conn, $sql_user);\n        mysqli_stmt_bind_param($stmt_user, \"i\", $userId);\n        mysqli_stmt_execute($stmt_user);\n        $result_user = mysqli_stmt_get_result($stmt_user);\n        $user_row = mysqli_fetch_assoc($result_user);\n        $username = $user_row['username'];\n\n        // Display review\n        echo \"<div class='review'>\";\n        echo \"<h3>Reviewer: \" . htmlspecialchars($username) . \"</h3>\";\n        echo \"<p>Date: \" . date('F j, Y', strtotime($review['review_date'])) . \"</p>\";\n        echo \"<p>Rating: \" . getStars($review['rating']) . \"</p>\";\n        echo \"<h4>\" . htmlspecialchars($review['title']) . \"</h4>\";\n        echo \"<p>\" . htmlspecialchars($review['comment']) . \"</p>\";\n        echo \"</div>\";\n    }\n}\n\n// Function to calculate average rating\nfunction getAverageRating($conn, $productId) {\n    // Sanitize input\n    $productId = mysqli_real_escape_string($conn, $productId);\n\n    // Get total ratings and count\n    $sql = \"SELECT SUM(rating) AS total_rating, COUNT(*) AS review_count FROM reviews WHERE product_id = ?\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    $row = mysqli_fetch_assoc($result);\n\n    if ($row['review_count'] == 0) {\n        return 0;\n    }\n\n    $average = $row['total_rating'] / $row['review_count'];\n    return round($average, 1);\n}\n\n// Function to display stars based on rating\nfunction getStars($rating) {\n    $stars = '';\n    for ($i = 1; $i <= 5; $i++) {\n        if ($i <= $rating) {\n            $stars .= \"\u2605\";\n        } else {\n            $stars .= \"\u2606\";\n        }\n    }\n    return $stars;\n}\n\n// Example usage:\n// Add a new review\nif (isset($_POST['submit_review'])) {\n    $userId = $_SESSION['user_id'];\n    $productId = $_GET['product_id'];\n    $rating = intval($_POST['rating']);\n    $title = $_POST['title'];\n    $comment = $_POST['comment'];\n\n    if (addReview($conn, $userId, $productId, $rating, $title, $comment)) {\n        echo \"<p>Thank you for submitting your review!</p>\";\n    } else {\n        echo \"<p>Error submitting review. Please try again.</p>\";\n    }\n}\n\n// Display reviews and average rating\necho \"<h2>Product Reviews</h2>\";\necho \"<p>Rating: \" . getStars(getAverageRating($conn, $productId)) . \"</p>\";\ndisplayReviews($conn, $productId);\n?>\n```\n\nThis code includes the following features:\n\n1. `addReview()`: Allows users to submit new reviews\n2. `getReviews()`: Retrieves all reviews for a specific product\n3. `displayReviews()`: Displays formatted reviews with user information and ratings\n4. `getAverageRating()`: Calculates and returns the average rating for a product\n5. `getStars()`: Converts numerical ratings into star emojis\n\nTo use this code:\n\n1. Set up your database connection details\n2. Create a table named `reviews` with columns: id, user_id, product_id, rating, title, comment, review_date\n3. Create a table named `users` with columns: id, username\n4. Use the example usage section to handle submitting and displaying reviews\n\nNote: This code includes basic security measures like input sanitization and prepared statements, but you should consider adding additional security measures like:\n\n- Input validation\n- Output escaping\n- CSRF protection\n- Proper error handling\n- Database connection security\n\nMake sure to:\n1. Replace the database connection details with your actual database information\n2. Create the necessary database tables before running this code\n3. Handle user authentication and sessions properly\n4. Add appropriate CSS styling for better presentation\n\nYou can customize the review display by modifying the HTML structure in the `displayReviews()` function.\n\nRemember to sanitize all user inputs and escape outputs to prevent SQL injection and XSS attacks.", "code_blocks": ["```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$database = 'your_database';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $database);\n\n// Function to add a new review\nfunction addReview($conn, $userId, $productId, $rating, $title, $comment) {\n    // Sanitize inputs\n    $userId = mysqli_real_escape_string($conn, $userId);\n    $productId = mysqli_real_escape_string($conn, $productId);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $title = mysqli_real_escape_string($conn, $title);\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Check if inputs are not empty\n    if ($userId == \"\" || $productId == \"\" || $rating == \"\" || $title == \"\" || $comment == \"\") {\n        return false;\n    }\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, title, comment) VALUES (?, ?, ?, ?, ?)\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"iiiss\", $userId, $productId, $rating, $title, $comment);\n\n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get all reviews for a product\nfunction getReviews($conn, $productId) {\n    // Sanitize input\n    $productId = mysqli_real_escape_string($conn, $productId);\n\n    // Get reviews from database\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n\n    // Fetch all reviews\n    $reviews = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n        $reviews[] = $row;\n    }\n\n    return $reviews;\n}\n\n// Function to display reviews\nfunction displayReviews($conn, $productId) {\n    $reviews = getReviews($conn, $productId);\n\n    if (empty($reviews)) {\n        echo \"<p>No reviews available yet.</p>\";\n        return;\n    }\n\n    foreach ($reviews as $review) {\n        // Get user info (assuming you have a users table)\n        $userId = $review['user_id'];\n        $sql_user = \"SELECT username FROM users WHERE id = ?\";\n        $stmt_user = mysqli_prepare($conn, $sql_user);\n        mysqli_stmt_bind_param($stmt_user, \"i\", $userId);\n        mysqli_stmt_execute($stmt_user);\n        $result_user = mysqli_stmt_get_result($stmt_user);\n        $user_row = mysqli_fetch_assoc($result_user);\n        $username = $user_row['username'];\n\n        // Display review\n        echo \"<div class='review'>\";\n        echo \"<h3>Reviewer: \" . htmlspecialchars($username) . \"</h3>\";\n        echo \"<p>Date: \" . date('F j, Y', strtotime($review['review_date'])) . \"</p>\";\n        echo \"<p>Rating: \" . getStars($review['rating']) . \"</p>\";\n        echo \"<h4>\" . htmlspecialchars($review['title']) . \"</h4>\";\n        echo \"<p>\" . htmlspecialchars($review['comment']) . \"</p>\";\n        echo \"</div>\";\n    }\n}\n\n// Function to calculate average rating\nfunction getAverageRating($conn, $productId) {\n    // Sanitize input\n    $productId = mysqli_real_escape_string($conn, $productId);\n\n    // Get total ratings and count\n    $sql = \"SELECT SUM(rating) AS total_rating, COUNT(*) AS review_count FROM reviews WHERE product_id = ?\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    $row = mysqli_fetch_assoc($result);\n\n    if ($row['review_count'] == 0) {\n        return 0;\n    }\n\n    $average = $row['total_rating'] / $row['review_count'];\n    return round($average, 1);\n}\n\n// Function to display stars based on rating\nfunction getStars($rating) {\n    $stars = '';\n    for ($i = 1; $i <= 5; $i++) {\n        if ($i <= $rating) {\n            $stars .= \"\u2605\";\n        } else {\n            $stars .= \"\u2606\";\n        }\n    }\n    return $stars;\n}\n\n// Example usage:\n// Add a new review\nif (isset($_POST['submit_review'])) {\n    $userId = $_SESSION['user_id'];\n    $productId = $_GET['product_id'];\n    $rating = intval($_POST['rating']);\n    $title = $_POST['title'];\n    $comment = $_POST['comment'];\n\n    if (addReview($conn, $userId, $productId, $rating, $title, $comment)) {\n        echo \"<p>Thank you for submitting your review!</p>\";\n    } else {\n        echo \"<p>Error submitting review. Please try again.</p>\";\n    }\n}\n\n// Display reviews and average rating\necho \"<h2>Product Reviews</h2>\";\necho \"<p>Rating: \" . getStars(getAverageRating($conn, $productId)) . \"</p>\";\ndisplayReviews($conn, $productId);\n?>\n```"]}
