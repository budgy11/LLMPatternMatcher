{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, the user wants to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I need to understand what exactly they're asking for. A review system typically involves allowing users to submit reviews and display them. So, the function should handle both submitting and displaying reviews.\n\nI'll start by outlining the basic structure. The function needs a form where users can input their name, rating, and comment. Then, upon submission, it should save this data somewhere\u2014probably in a database for persistence.\n\nNext, I need to consider security. User inputs can be risky, so sanitization is essential. I'll make sure to sanitize the inputs to prevent SQL injection or XSS attacks.\n\nStoring the reviews in a MySQL database makes sense because it's common and straightforward. I'll create a table with columns for review ID, product ID (assuming reviews are for specific products), user name, rating, comment, and submission date.\n\nNow, handling the form submission: when the user submits the form, PHP will capture the POST data, sanitize it, validate it to ensure all required fields are filled, and then insert it into the database. If there's an error during this process, I should display an appropriate message to the user.\n\nAfter submitting a review, the user should see the thank you message and the updated list of reviews. So, I'll need to retrieve the reviews from the database, sort them by submission date in descending order so that the newest appears first, and then display them on the page.\n\nDisplaying each review involves looping through the results from the database query. For each review, I'll show the user's name, the rating as stars, their comment, and when they submitted it.\n\nI should also include error handling both for form submission errors and any potential issues with accessing or querying the database. Providing clear feedback will make the user experience better.\n\nPutting it all together, the PHP script will first check if the form was submitted. If so, it processes the input, saves to the database, and then redirects or reloads the page to show the updated reviews. If not, it simply displays the review form and any existing reviews.\n\nI should also consider styling for better presentation\u2014maybe using CSS to make the stars visually appealing and the layout clean.\n\nFinally, I'll structure the code with proper HTML forms, PHP processing blocks, and database interactions. Testing each part step by step will ensure everything works as intended without errors.\n</think>\n\nHere's an example of a user review function in PHP that allows users to submit reviews and displays them:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews';\n\n$conn = mysqli_connect($host, $username, $password, $database);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews() {\n    global $conn;\n    \n    // Retrieve reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY submission_date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars($row['name'], ENT_QUOTES) . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars($row['comment'], ENT_QUOTES) . \"</p>\";\n            echo \"<small>Submitted on: \" . $row['submission_date'] . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet. Be the first to review!</p>\";\n    }\n}\n\n// Function to handle review submission\nfunction submit_review() {\n    global $conn;\n    \n    // Check if form was submitted\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $name = mysqli_real_escape_string($conn, htmlspecialchars($_POST['name'], ENT_QUOTES));\n        $rating = intval($_POST['rating']);\n        $comment = mysqli_real_escape_string($conn, htmlspecialchars($_POST['comment'], ENT_QUOTES));\n        \n        // Validate input\n        if (empty($name) || empty($comment)) {\n            echo \"<p class='error'>Please fill in all required fields.</p>\";\n            return;\n        }\n        \n        if ($rating < 1 || $rating > 5) {\n            echo \"<p class='error'>Please select a valid rating between 1 and 5 stars.</p>\";\n            return;\n        }\n        \n        // Insert review into database\n        $sql = \"INSERT INTO reviews (name, rating, comment, submission_date)\n                VALUES ('$name', '$rating', '$comment', NOW())\";\n                \n        if (!mysqli_query($conn, $sql)) {\n            echo \"<p class='error'>Error submitting review: \" . mysqli_error($conn) . \"</p>\";\n        } else {\n            echo \"<p class='success'>Thank you for your review!</p>\";\n            // Redirect to avoid form resubmission\n            header(\"Location: ?submitted=1\");\n            exit();\n        }\n    }\n}\n\n// Main function to handle reviews\nfunction main() {\n    // Check if review was submitted\n    if (isset($_GET['submitted'])) {\n        echo \"<div class='success-message'>Your review has been submitted successfully!</div>\";\n    }\n    \n    // Display review form\n    echo \"<form method='post' action='\" . htmlspecialchars($_SERVER['PHP_SELF'], ENT_QUOTES) . \"'>\";\n    echo \"<h2>Submit a Review</h2>\";\n    echo \"<div class='form-group'>\";\n    echo \"<label for='name'>Name:</label>\";\n    echo \"<input type='text' id='name' name='name' required>\";\n    echo \"</div>\";\n    \n    echo \"<div class='form-group'>\";\n    echo \"<label for='rating'>Rating:</label>\";\n    echo \"<select id='rating' name='rating' required>\";\n    echo \"<option value='5'>\u2605 \u2605 \u2605 \u2605 \u2605</option>\";\n    echo \"<option value='4'>\u2605 \u2605 \u2605 \u2605</option>\";\n    echo \"<option value='3'>\u2605 \u2605 \u2605</option>\";\n    echo \"<option value='2'>\u2605 \u2605</option>\";\n    echo \"<option value='1'>\u2605</option>\";\n    echo \"</select>\";\n    echo \"</div>\";\n    \n    echo \"<div class='form-group'>\";\n    echo \"<label for='comment'>Comment:</label>\";\n    echo \"<textarea id='comment' name='comment' rows='5' required></textarea>\";\n    echo \"</div>\";\n    \n    echo \"<button type='submit'>Submit Review</button>\";\n    echo \"</form>\";\n    \n    // Display existing reviews\n    echo \"<h2>Reviews</h2>\";\n    display_reviews();\n}\n\n// Create the reviews table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        name VARCHAR(100) NOT NULL,\n        rating INT NOT NULL,\n        comment TEXT NOT NULL,\n        submission_date DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\";\n\nmysqli_query($conn, $sql);\n\n// Run the main function\nmain();\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis PHP script includes:\n\n1. A database connection configuration\n\n2. Two main functions:\n   - `display_reviews()`: Displays existing reviews from the database\n   - `submit_review()`: Handles new review submissions\n\n3. Input validation and sanitization\n\n4. SQL injection prevention measures\n\n5. Error handling for form submission\n\n6. CSS-friendly output with classes for styling\n\nTo use this script:\n\n1. Create a MySQL database named 'reviews'\n\n2. Create a table named 'reviews' with the following columns:\n   - id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - name (VARCHAR(100))\n   - rating (INT)\n   - comment (TEXT)\n   - submission_date (DATETIME)\n\n3. Save this script as an PHP file (e.g., `review.php`)\n\n4. Access it through a web browser\n\nFeatures:\n\n- Users can submit reviews with:\n  - Their name\n  - A rating (1-5 stars)\n  - A comment\n\n- Reviews are stored in the database and displayed below the submission form\n\n- New reviews appear at the top of the list\n\n- Input validation for required fields and valid ratings\n\n- SQL injection prevention using mysqli_real_escape_string()\n\n- XSS prevention using htmlspecialchars()\n\nTo style this script, you can add CSS to your HTML file:\n\n```css\n.review {\n    border: 1px solid #ddd;\n    padding: 15px;\n    margin-bottom: 20px;\n}\n\n.form-group {\n    margin-bottom: 20px;\n}\n\n.error {\n    color: red;\n}\n\n.success {\n    color: green;\n}\n\n.success-message {\n    color: green;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n```\n\nYou can customize this further based on your needs. You might also want to add user authentication if you need to prevent multiple reviews from the same user or implement other security features.\n\nRemember to replace the database connection details (`$host`, `$username`, `$password`) with your actual MySQL credentials.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews';\n\n$conn = mysqli_connect($host, $username, $password, $database);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews() {\n    global $conn;\n    \n    // Retrieve reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY submission_date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars($row['name'], ENT_QUOTES) . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars($row['comment'], ENT_QUOTES) . \"</p>\";\n            echo \"<small>Submitted on: \" . $row['submission_date'] . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet. Be the first to review!</p>\";\n    }\n}\n\n// Function to handle review submission\nfunction submit_review() {\n    global $conn;\n    \n    // Check if form was submitted\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $name = mysqli_real_escape_string($conn, htmlspecialchars($_POST['name'], ENT_QUOTES));\n        $rating = intval($_POST['rating']);\n        $comment = mysqli_real_escape_string($conn, htmlspecialchars($_POST['comment'], ENT_QUOTES));\n        \n        // Validate input\n        if (empty($name) || empty($comment)) {\n            echo \"<p class='error'>Please fill in all required fields.</p>\";\n            return;\n        }\n        \n        if ($rating < 1 || $rating > 5) {\n            echo \"<p class='error'>Please select a valid rating between 1 and 5 stars.</p>\";\n            return;\n        }\n        \n        // Insert review into database\n        $sql = \"INSERT INTO reviews (name, rating, comment, submission_date)\n                VALUES ('$name', '$rating', '$comment', NOW())\";\n                \n        if (!mysqli_query($conn, $sql)) {\n            echo \"<p class='error'>Error submitting review: \" . mysqli_error($conn) . \"</p>\";\n        } else {\n            echo \"<p class='success'>Thank you for your review!</p>\";\n            // Redirect to avoid form resubmission\n            header(\"Location: ?submitted=1\");\n            exit();\n        }\n    }\n}\n\n// Main function to handle reviews\nfunction main() {\n    // Check if review was submitted\n    if (isset($_GET['submitted'])) {\n        echo \"<div class='success-message'>Your review has been submitted successfully!</div>\";\n    }\n    \n    // Display review form\n    echo \"<form method='post' action='\" . htmlspecialchars($_SERVER['PHP_SELF'], ENT_QUOTES) . \"'>\";\n    echo \"<h2>Submit a Review</h2>\";\n    echo \"<div class='form-group'>\";\n    echo \"<label for='name'>Name:</label>\";\n    echo \"<input type='text' id='name' name='name' required>\";\n    echo \"</div>\";\n    \n    echo \"<div class='form-group'>\";\n    echo \"<label for='rating'>Rating:</label>\";\n    echo \"<select id='rating' name='rating' required>\";\n    echo \"<option value='5'>\u2605 \u2605 \u2605 \u2605 \u2605</option>\";\n    echo \"<option value='4'>\u2605 \u2605 \u2605 \u2605</option>\";\n    echo \"<option value='3'>\u2605 \u2605 \u2605</option>\";\n    echo \"<option value='2'>\u2605 \u2605</option>\";\n    echo \"<option value='1'>\u2605</option>\";\n    echo \"</select>\";\n    echo \"</div>\";\n    \n    echo \"<div class='form-group'>\";\n    echo \"<label for='comment'>Comment:</label>\";\n    echo \"<textarea id='comment' name='comment' rows='5' required></textarea>\";\n    echo \"</div>\";\n    \n    echo \"<button type='submit'>Submit Review</button>\";\n    echo \"</form>\";\n    \n    // Display existing reviews\n    echo \"<h2>Reviews</h2>\";\n    display_reviews();\n}\n\n// Create the reviews table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        name VARCHAR(100) NOT NULL,\n        rating INT NOT NULL,\n        comment TEXT NOT NULL,\n        submission_date DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\";\n\nmysqli_query($conn, $sql);\n\n// Run the main function\nmain();\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null]}
