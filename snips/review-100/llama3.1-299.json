{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a simple user review system in PHP:\n\n**Database Schema:**\n\nWe'll use a MySQL database with the following tables:\n\n```sql\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  product_id INT,\n  user_id INT,\n  rating DECIMAL(2,1),\n  comment TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL\n);\n```\n\n**PHP Code:**\n\nCreate a new PHP file called `review.php` and add the following code:\n```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Connect to database\n$db = new PDO('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASSWORD);\n\n// Function to get all reviews for a product\nfunction getReviews($productId) {\n  global $db;\n  $stmt = $db->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n  $stmt->bindParam(':product_id', $productId);\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// Function to add a new review\nfunction addReview($userId, $productId, $rating, $comment) {\n  global $db;\n  $review = array(\n    'user_id' => $userId,\n    'product_id' => $productId,\n    'rating' => $rating,\n    'comment' => $comment\n  );\n  $stmt = $db->prepare(\"INSERT INTO reviews SET user_id = :user_id, product_id = :product_id, rating = :rating, comment = :comment\");\n  $stmt->execute($review);\n}\n\n// Function to delete a review\nfunction deleteReview($id) {\n  global $db;\n  $stmt = $db->prepare(\"DELETE FROM reviews WHERE id = :id\");\n  $stmt->bindParam(':id', $id);\n  $stmt->execute();\n}\n\n// Function to update a review\nfunction updateReview($id, $rating, $comment) {\n  global $db;\n  $review = array(\n    'rating' => $rating,\n    'comment' => $comment\n  );\n  $stmt = $db->prepare(\"UPDATE reviews SET rating = :rating, comment = :comment WHERE id = :id\");\n  $stmt->bindParam(':id', $id);\n  $stmt->execute($review);\n}\n\n// Example usage:\nif (isset($_POST['action'])) {\n  switch ($_POST['action']) {\n    case 'get_reviews':\n      echo json_encode(getReviews($_POST['product_id']));\n      break;\n    case 'add_review':\n      addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);\n      break;\n    case 'delete_review':\n      deleteReview($_POST['id']);\n      break;\n    case 'update_review':\n      updateReview($_POST['id'], $_POST['rating'], $_POST['comment']);\n      break;\n  }\n}\n```\n\n**API Endpoints:**\n\nTo use the above PHP code, you'll need to create API endpoints for each action. For example:\n\n* `GET /api/reviews/:product_id`: Get all reviews for a product\n* `POST /api/reviews`: Add a new review (requires `user_id`, `product_id`, `rating`, and `comment`)\n* `DELETE /api/reviews/:id`: Delete a review by ID\n* `PUT /api/reviews/:id`: Update a review (requires `rating` and `comment`)\n\nYou can use a framework like Laravel or Express.js to create these API endpoints, or simply use the PHP code above as a starting point.\n\nNote: This is just a basic example, you should add security measures such as authentication and authorization to protect your database.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Connect to database\n$db = new PDO('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASSWORD);\n\n// Function to get all reviews for a product\nfunction getReviews($productId) {\n  global $db;\n  $stmt = $db->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n  $stmt->bindParam(':product_id', $productId);\n  $stmt->execute();\n  return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// Function to add a new review\nfunction addReview($userId, $productId, $rating, $comment) {\n  global $db;\n  $review = array(\n    'user_id' => $userId,\n    'product_id' => $productId,\n    'rating' => $rating,\n    'comment' => $comment\n  );\n  $stmt = $db->prepare(\"INSERT INTO reviews SET user_id = :user_id, product_id = :product_id, rating = :rating, comment = :comment\");\n  $stmt->execute($review);\n}\n\n// Function to delete a review\nfunction deleteReview($id) {\n  global $db;\n  $stmt = $db->prepare(\"DELETE FROM reviews WHERE id = :id\");\n  $stmt->bindParam(':id', $id);\n  $stmt->execute();\n}\n\n// Function to update a review\nfunction updateReview($id, $rating, $comment) {\n  global $db;\n  $review = array(\n    'rating' => $rating,\n    'comment' => $comment\n  );\n  $stmt = $db->prepare(\"UPDATE reviews SET rating = :rating, comment = :comment WHERE id = :id\");\n  $stmt->bindParam(':id', $id);\n  $stmt->execute($review);\n}\n\n// Example usage:\nif (isset($_POST['action'])) {\n  switch ($_POST['action']) {\n    case 'get_reviews':\n      echo json_encode(getReviews($_POST['product_id']));\n      break;\n    case 'add_review':\n      addReview($_POST['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);\n      break;\n    case 'delete_review':\n      deleteReview($_POST['id']);\n      break;\n    case 'update_review':\n      updateReview($_POST['id'], $_POST['rating'], $_POST['comment']);\n      break;\n  }\n}\n```"]}
