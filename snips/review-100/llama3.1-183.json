{"prompt": "Create a user review function using php", "llm_output": "Here's an example of a simple user review system in PHP. This code snippet includes functionality to add, edit and delete reviews.\n\n**Database Schema:**\n\nFor this example, we'll assume you have the following database schema:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    product_id INT,\n    content TEXT NOT NULL,\n    rating TINYINT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\n```php\n// config.php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'database');\n\n// Establish database connection\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n```\n\n```php\n// functions.php\n\nfunction addReview($product_id, $user_id, $content, $rating) {\n    global $conn;\n\n    $sql = \"INSERT INTO reviews (product_id, user_id, content, rating)\n            VALUES (?, ?, ?, ?)\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"iiss\", $product_id, $user_id, $content, $rating);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction getReviews($product_id) {\n    global $conn;\n\n    $sql = \"SELECT * FROM reviews WHERE product_id = ?\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $product_id);\n\n    if ($stmt->execute()) {\n        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n    } else {\n        return array();\n    }\n}\n\nfunction editReview($review_id, $content) {\n    global $conn;\n\n    $sql = \"UPDATE reviews SET content = ? WHERE id = ?\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"si\", $content, $review_id);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction deleteReview($review_id) {\n    global $conn;\n\n    $sql = \"DELETE FROM reviews WHERE id = ?\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $review_id);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```\n\n```php\n// index.php\n\ninclude 'config.php';\ninclude 'functions.php';\n\nif (isset($_POST['add_review'])) {\n    $product_id = $_POST['product_id'];\n    $user_id = $_SESSION['user_id']; // Assume user is logged in and has a session ID\n    $content = $_POST['content'];\n    $rating = $_POST['rating'];\n\n    if (addReview($product_id, $user_id, $content, $rating)) {\n        echo \"Review added successfully!\";\n    } else {\n        echo \"Error adding review.\";\n    }\n}\n\nif (isset($_POST['edit_review'])) {\n    $review_id = $_POST['review_id'];\n    $content = $_POST['content'];\n\n    if (editReview($review_id, $content)) {\n        echo \"Review edited successfully!\";\n    } else {\n        echo \"Error editing review.\";\n    }\n}\n\nif (isset($_GET['delete_review'])) {\n    $review_id = $_GET['delete_review'];\n\n    if (deleteReview($review_id)) {\n        echo \"Review deleted successfully!\";\n    } else {\n        echo \"Error deleting review.\";\n    }\n}\n\n// Display reviews\n$product_id = 1; // Replace with actual product ID\n$reviews = getReviews($product_id);\n\nforeach ($reviews as $review) {\n    echo \"Rating: $review[rating]<br>\";\n    echo \"Content: $review[content]<br><hr>\";\n}\n```\n\nThis example uses prepared statements to prevent SQL injection attacks. However, this is a basic implementation and you should add more error checking, validation, and security measures as per your needs.\n\nRemember to replace the placeholders (`$product_id`, `$user_id`, etc.) with actual values or variables in your code.\n\n**Example Use Cases:**\n\n*   When adding a review:\n    *   Set `add_review` variable to 1.\n    *   Pass product ID, user ID, content, and rating as POST variables (e.g., `$_POST['product_id']`, `$_SESSION['user_id']`, etc.).\n*   When editing a review:\n    *   Set `edit_review` variable to 1.\n    *   Pass review ID and updated content as POST variables.\n*   When deleting a review:\n    *   Append `?delete_review=review_id` (replace with actual review ID) to the URL.\n\n**Security Considerations:**\n\nMake sure to follow best practices for security, such as:\n\n*   Validating input data\n*   Escaping user input when displaying it in the database or HTML output\n*   Using prepared statements and parameterized queries\n*   Handling errors and exceptions properly", "code_blocks": [null, "```php\n// config.php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'database');\n\n// Establish database connection\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n```", "```php\n// functions.php\n\nfunction addReview($product_id, $user_id, $content, $rating) {\n    global $conn;\n\n    $sql = \"INSERT INTO reviews (product_id, user_id, content, rating)\n            VALUES (?, ?, ?, ?)\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"iiss\", $product_id, $user_id, $content, $rating);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction getReviews($product_id) {\n    global $conn;\n\n    $sql = \"SELECT * FROM reviews WHERE product_id = ?\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $product_id);\n\n    if ($stmt->execute()) {\n        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n    } else {\n        return array();\n    }\n}\n\nfunction editReview($review_id, $content) {\n    global $conn;\n\n    $sql = \"UPDATE reviews SET content = ? WHERE id = ?\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"si\", $content, $review_id);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction deleteReview($review_id) {\n    global $conn;\n\n    $sql = \"DELETE FROM reviews WHERE id = ?\";\n\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $review_id);\n\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```", "```php\n// index.php\n\ninclude 'config.php';\ninclude 'functions.php';\n\nif (isset($_POST['add_review'])) {\n    $product_id = $_POST['product_id'];\n    $user_id = $_SESSION['user_id']; // Assume user is logged in and has a session ID\n    $content = $_POST['content'];\n    $rating = $_POST['rating'];\n\n    if (addReview($product_id, $user_id, $content, $rating)) {\n        echo \"Review added successfully!\";\n    } else {\n        echo \"Error adding review.\";\n    }\n}\n\nif (isset($_POST['edit_review'])) {\n    $review_id = $_POST['review_id'];\n    $content = $_POST['content'];\n\n    if (editReview($review_id, $content)) {\n        echo \"Review edited successfully!\";\n    } else {\n        echo \"Error editing review.\";\n    }\n}\n\nif (isset($_GET['delete_review'])) {\n    $review_id = $_GET['delete_review'];\n\n    if (deleteReview($review_id)) {\n        echo \"Review deleted successfully!\";\n    } else {\n        echo \"Error deleting review.\";\n    }\n}\n\n// Display reviews\n$product_id = 1; // Replace with actual product ID\n$reviews = getReviews($product_id);\n\nforeach ($reviews as $review) {\n    echo \"Rating: $review[rating]<br>\";\n    echo \"Content: $review[content]<br><hr>\";\n}\n```"]}
