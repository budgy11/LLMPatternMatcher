{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so the user wants me to create a PHP function for handling user reviews. Let me think about what that entails.\n\nFirst, I need to understand the requirements. The function should allow users to leave reviews with a rating and text. It also needs to store these reviews in a database and display them on a webpage. Plus, it should calculate an average rating.\n\nHmm, so I'll start by setting up the database connection. That's essential for storing and retrieving data. I'll use mysqli because it's more secure and widely used than the older mysql functions.\n\nNext, I'll need a function to submit the review. This function will take user input\u2014like username, rating, and review text\u2014and insert it into the database. I should make sure to sanitize the inputs to prevent SQL injection. Using prepared statements with mysqli can help with that.\n\nThen, there's displaying the reviews. Another function will fetch all stored reviews from the database and output them on the page. Each review should show the username, rating stars, review text, and date. Formatting the date to be user-friendly is important too.\n\nCalculating the average rating is another key part. I'll write a function that queries the database for all ratings, sums them up, and divides by the number of reviews. If there are no reviews yet, it should return zero to avoid division errors.\n\nFor displaying the stars, a helper function would be useful. It can take the average rating and output HTML stars\u2014full stars for whole numbers and a half star if there's a .5. That way, the UI looks nice and conveys the ratings clearly.\n\nPutting it all together, I'll structure the main script to include these functions and call them appropriately. At the top, I'll set up the database connection with the necessary credentials. Then, check if a review is being submitted and call the submit function. After that, display the average stars, show the form for new reviews, and list all existing reviews using the display function.\n\nI should also consider user experience aspects, like validation. For example, ensuring that the rating is between 1 and 5 before submitting. Maybe add some checks in the submit function to handle that, perhaps with error messages if someone tries to bypass it.\n\nSecurity-wise, I used prepared statements which help prevent SQL injection. Also, sanitizing the username and review text by trimming whitespace is a good start, but for more robust security, maybe using htmlspecialchars could be added when displaying user inputs to prevent XSS attacks.\n\nTesting each function separately would be important. For instance, submitting a review and ensuring it appears correctly. Checking that the average rating updates properly after each submission. Also, verifying that the stars display accurately based on the average.\n\nI think I covered all the necessary parts: database setup, submission handling, displaying reviews, calculating averages, and showing stars. Now, putting it into code step by step should make sense.\n</think>\n\nHere's an example of a user review function in PHP:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Create database connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to submit a review\nfunction submitReview($user_id, $rating, $review_text) {\n    global $conn;\n    \n    // Sanitize input\n    $user_id = mysqli_real_escape_string($conn, trim($user_id));\n    $rating = intval($rating);\n    $review_text = mysqli_real_escape_string($conn, trim($review_text));\n    \n    // Check if rating is valid (1-5)\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose a rating between 1 and 5.\";\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (user_id, rating, review_text, review_date) \n            VALUES ('$user_id', '$rating', '$review_text', NOW())\";\n    \n    if ($conn->query($sql)) {\n        return \"Review submitted successfully!\";\n    } else {\n        return \"Error submitting review: \" . $conn->error;\n    }\n}\n\n// Function to display reviews\nfunction displayReviews() {\n    global $conn;\n    \n    // Get all reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY review_date DESC\";\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"<div class='review'>\";\n            echo \"<h3>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</h3>\";\n            echo \"<p>Review: \" . htmlspecialchars($row['review_text']) . \"</p>\";\n            echo \"<small>Posted by: \" . htmlspecialchars($row['user_id']) . \" on \" . date('F j, Y g:i a', strtotime($row['review_date'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews found.\";\n    }\n}\n\n// Function to calculate average rating\nfunction getAverageRating() {\n    global $conn;\n    \n    // Get all ratings from database\n    $sql = \"SELECT AVG(rating) as average FROM reviews\";\n    $result = $conn->query($sql);\n    \n    if ($result && $result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        return round($row['average'], 1); // Round to one decimal place\n    }\n    return 0;\n}\n\n// Function to display star rating\nfunction displayStars($rating) {\n    $full_stars = intval($rating);\n    $has_half_star = ($rating - $full_stars) >= 0.5;\n    \n    echo \"<div class='stars'>\";\n    for ($i = 0; $i < $full_stars; $i++) {\n        echo \"\u2605 \";\n    }\n    if ($has_half_star) {\n        echo \"\u2be8 \"; // Half star\n    }\n    echo \"</div>\";\n}\n\n// Main script\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $review_result = submitReview($_POST['username'], $_POST['rating'], $_POST['review']);\n    echo \"<p>\" . $review_result . \"</p>\";\n}\n\n// Display average rating\necho \"<h2>Rating: \";\ndisplayStars(getAverageRating());\necho \"</h2>\";\n\n// Review form\n?>\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"text\" name=\"username\" placeholder=\"Enter your username\" required><br>\n    <select name=\"rating\" required>\n        <option value=\"\">Choose a rating</option>\n        <option value=\"1\">1 Star</option>\n        <option value=\"2\">2 Stars</option>\n        <option value=\"3\">3 Stars</option>\n        <option value=\"4\">4 Stars</option>\n        <option value=\"5\">5 Stars</option>\n    </select><br>\n    <textarea name=\"review\" placeholder=\"Write your review...\" required></textarea><br>\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\n<?php\n// Display all reviews\ndisplayReviews();\n\n// Close database connection\n$conn->close();\n?>\n```\n\nThis PHP script includes the following features:\n\n1. A form for users to submit their reviews with a rating (1-5 stars) and review text.\n\n2. The ability to store reviews in a MySQL database.\n\n3. Functions to:\n   - Submit new reviews (`submitReview()`)\n   - Display stored reviews (`displayReviews()`)\n   - Calculate and display the average rating (`getAverageRating()` and `displayStars()`)\n   \n4. Input validation and sanitization to prevent SQL injection.\n\n5. Formatting of review dates and display of user ratings as stars.\n\nTo use this script:\n\n1. Make sure you have a MySQL database set up with a table named `reviews` that includes the following columns:\n   - id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - user_id (VARCHAR)\n   - rating (INT)\n   - review_text (TEXT)\n   - review_date (DATETIME)\n\n2. Update the database connection details in the script (`$host`, `$username`, `$password`, `$dbname`).\n\n3. Save this code as a PHP file and run it on your web server.\n\n4. Users can submit reviews through the form, and all reviews will be displayed below the form with their corresponding ratings and formatted dates.\n\n5. The average rating is displayed at the top of the page using star icons.\n\nNote: Make sure to enable error reporting during development and consider adding additional validation or security measures depending on your specific use case. Also, you may want to style the output using CSS for better visual presentation.", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Create database connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to submit a review\nfunction submitReview($user_id, $rating, $review_text) {\n    global $conn;\n    \n    // Sanitize input\n    $user_id = mysqli_real_escape_string($conn, trim($user_id));\n    $rating = intval($rating);\n    $review_text = mysqli_real_escape_string($conn, trim($review_text));\n    \n    // Check if rating is valid (1-5)\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please choose a rating between 1 and 5.\";\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (user_id, rating, review_text, review_date) \n            VALUES ('$user_id', '$rating', '$review_text', NOW())\";\n    \n    if ($conn->query($sql)) {\n        return \"Review submitted successfully!\";\n    } else {\n        return \"Error submitting review: \" . $conn->error;\n    }\n}\n\n// Function to display reviews\nfunction displayReviews() {\n    global $conn;\n    \n    // Get all reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY review_date DESC\";\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"<div class='review'>\";\n            echo \"<h3>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</h3>\";\n            echo \"<p>Review: \" . htmlspecialchars($row['review_text']) . \"</p>\";\n            echo \"<small>Posted by: \" . htmlspecialchars($row['user_id']) . \" on \" . date('F j, Y g:i a', strtotime($row['review_date'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews found.\";\n    }\n}\n\n// Function to calculate average rating\nfunction getAverageRating() {\n    global $conn;\n    \n    // Get all ratings from database\n    $sql = \"SELECT AVG(rating) as average FROM reviews\";\n    $result = $conn->query($sql);\n    \n    if ($result && $result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        return round($row['average'], 1); // Round to one decimal place\n    }\n    return 0;\n}\n\n// Function to display star rating\nfunction displayStars($rating) {\n    $full_stars = intval($rating);\n    $has_half_star = ($rating - $full_stars) >= 0.5;\n    \n    echo \"<div class='stars'>\";\n    for ($i = 0; $i < $full_stars; $i++) {\n        echo \"\u2605 \";\n    }\n    if ($has_half_star) {\n        echo \"\u2be8 \"; // Half star\n    }\n    echo \"</div>\";\n}\n\n// Main script\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $review_result = submitReview($_POST['username'], $_POST['rating'], $_POST['review']);\n    echo \"<p>\" . $review_result . \"</p>\";\n}\n\n// Display average rating\necho \"<h2>Rating: \";\ndisplayStars(getAverageRating());\necho \"</h2>\";\n\n// Review form\n?>\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"text\" name=\"username\" placeholder=\"Enter your username\" required><br>\n    <select name=\"rating\" required>\n        <option value=\"\">Choose a rating</option>\n        <option value=\"1\">1 Star</option>\n        <option value=\"2\">2 Stars</option>\n        <option value=\"3\">3 Stars</option>\n        <option value=\"4\">4 Stars</option>\n        <option value=\"5\">5 Stars</option>\n    </select><br>\n    <textarea name=\"review\" placeholder=\"Write your review...\" required></textarea><br>\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\n<?php\n// Display all reviews\ndisplayReviews();\n\n// Close database connection\n$conn->close();\n?>\n```"]}
