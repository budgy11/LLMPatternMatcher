{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, the user wants to create a user review function using PHP. I need to figure out what that entails.\n\nFirst, I should consider the main components of such a system. Users will submit reviews with ratings and comments, so I'll need functions for adding new reviews and displaying existing ones.\n\nI should start by setting up a database connection because storing reviews is essential. Using MySQLi makes sense since it's widely supported and secure.\n\nNext, creating the review submission function. It needs to take user ID, product ID, rating, and comment as parameters. I'll write an SQL query to insert these into the database. Error handling is important here in case of duplicates or issues.\n\nThen, displaying reviews is crucial. The function should fetch all reviews for a specific product from the database. For each review, it shows the user's name, star rating, comment, and date. Formatting the stars with emojis makes it visually appealing.\n\nI also need to calculate the average rating. This involves summing up all ratings and dividing by the number of reviews. If there are no reviews yet, it should handle that gracefully.\n\nSecurity is a big concern. I'll make sure to prevent SQL injection by using prepared statements in both functions. Escaping inputs can help avoid attacks.\n\nPutting it all together, I'll structure the code with clear function names and comments. The example usage at the end shows how these functions interact, making it easier for the user to understand implementation.\n\nI should remind the user about setting up their database correctly\u2014creating tables for users, products, and reviews\u2014and adjusting connection details as needed.\n\nOverall, the solution needs to be robust, secure, and easy to integrate into a larger application. I think this covers all bases but might need adjustments based on specific project requirements.\n</think>\n\nHere's an example of a user review function using PHP. This function will handle submitting reviews, displaying reviews, and calculating average ratings.\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $database);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to submit a review\nfunction submitReview($userId, $productId, $rating, $comment, $conn) {\n    // Check if the user has already reviewed this product\n    $checkQuery = \"SELECT id FROM reviews WHERE user_id = ? AND product_id = ?\";\n    $stmt = mysqli_prepare($conn, $checkQuery);\n    mysqli_stmt_bind_param($stmt, 'ii', $userId, $productId);\n    mysqli_execute($stmt);\n    \n    if (mysqli_stmt_affected_rows($stmt) > 0) {\n        return \"You have already reviewed this product!\";\n    }\n\n    // Insert the new review\n    $insertQuery = \"INSERT INTO reviews (user_id, product_id, rating, comment) \n                    VALUES (?, ?, ?, ?)\";\n    $stmt = mysqli_prepare($conn, $insertQuery);\n    mysqli_stmt_bind_param($stmt, 'iiis', $userId, $productId, $rating, $comment);\n\n    if (mysqli_execute($stmt)) {\n        return \"Review submitted successfully!\";\n    } else {\n        return \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Function to display reviews for a product\nfunction displayReviews($productId, $conn) {\n    $reviewsQuery = \"SELECT r.id, r.rating, r.comment, u.username, r.created_at \n                    FROM reviews r \n                    JOIN users u ON r.user_id = u.id \n                    WHERE r.product_id = ? \n                    ORDER BY r.created_at DESC\";\n    \n    $stmt = mysqli_prepare($conn, $reviewsQuery);\n    mysqli_stmt_bind_param($stmt, 'i', $productId);\n    mysqli_execute($stmt);\n\n    $result = mysqli_stmt_get_result($stmt);\n    $averageRating = calculateAverageRating($productId, $conn);\n    \n    echo \"<h3>Product Reviews</h3>\";\n    echo \"<p>Average Rating: \" . number_format($averageRating, 1) . \"/5</p>\";\n    \n    if (mysqli_num_rows($result) == 0) {\n        echo \"<p>No reviews yet!</p>\";\n        return;\n    }\n\n    while ($row = mysqli_fetch_assoc($result)) {\n        $username = $row['username'];\n        $rating = $row['rating'];\n        $comment = $row['comment'];\n        $created_at = date('M j, Y g:i a', strtotime($row['created_at']));\n\n        // Display star rating\n        echo \"<div class='review'>\";\n        echo \"<h4>Reviewed by: \" . $username . \"</h4>\";\n        echo \"<p>Rating: \";\n        for ($i = 1; $i <= $rating; $i++) {\n            echo \"\u2605\";\n        }\n        for ($i = $rating + 1; $i <=5; $i++) {\n            echo \"\u2606\";\n        }\n        echo \"</p>\";\n        echo \"<p>\" . $comment . \"</p>\";\n        echo \"<small>Posted on: \" . $created_at . \"</small>\";\n        echo \"</div><br>\";\n    }\n}\n\n// Function to calculate average rating\nfunction calculateAverageRating($productId, $conn) {\n    $averageQuery = \"SELECT AVG(rating) as average \n                    FROM reviews \n                    WHERE product_id = ?\";\n    \n    $stmt = mysqli_prepare($conn, $averageQuery);\n    mysqli_stmt_bind_param($stmt, 'i', $productId);\n    mysqli_execute($stmt);\n\n    $result = mysqli_stmt_get_result($stmt);\n    $row = mysqli_fetch_assoc($result);\n    \n    return $row['average'];\n}\n\n// Example usage\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $userId = $_SESSION['user_id']; // Assuming user is logged in\n    $productId = 1; // Specific product ID\n    $rating = intval($_POST['rating']);\n    $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n\n    $message = submitReview($userId, $productId, $rating, $comment, $conn);\n    echo \"<script>alert('\" . $message . \"');</script>\";\n}\n\ndisplayReviews(1, $conn); // Display reviews for product ID 1\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis code includes:\n\n1. A `submitReview()` function to handle user review submissions.\n2. A `displayReviews()` function to show all reviews for a specific product along with the average rating.\n3. A `calculateAverageRating()` function to compute the average rating for a product.\n\nFeatures:\n- Prevents duplicate reviews from the same user\n- Displays formatted star ratings\n- Shows user comments and timestamps\n- Calculates and displays average rating\n- Includes proper error handling\n\nTo use this code:\n\n1. Make sure you have set up your database with tables for users, products, and reviews.\n2. Modify the database configuration variables (`host`, `username`, `password`, `database`) to match your environment.\n3. Ensure you have a session started if using user authentication.\n\nThe example assumes you have these table structures:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT NOT NULL,\n    product_id INT NOT NULL,\n    rating INT NOT NULL,\n    comment TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\nTo submit a review, you need to:\n1. Have a logged-in user\n2. Select a product\n3. Provide a rating (1-5 stars)\n4. Write a comment\n\nThe code uses prepared statements to prevent SQL injection and proper escaping for inputs.\n\nYou can customize the styling by adding CSS classes or modifying the HTML output in the `displayReviews()` function.", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $database);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to submit a review\nfunction submitReview($userId, $productId, $rating, $comment, $conn) {\n    // Check if the user has already reviewed this product\n    $checkQuery = \"SELECT id FROM reviews WHERE user_id = ? AND product_id = ?\";\n    $stmt = mysqli_prepare($conn, $checkQuery);\n    mysqli_stmt_bind_param($stmt, 'ii', $userId, $productId);\n    mysqli_execute($stmt);\n    \n    if (mysqli_stmt_affected_rows($stmt) > 0) {\n        return \"You have already reviewed this product!\";\n    }\n\n    // Insert the new review\n    $insertQuery = \"INSERT INTO reviews (user_id, product_id, rating, comment) \n                    VALUES (?, ?, ?, ?)\";\n    $stmt = mysqli_prepare($conn, $insertQuery);\n    mysqli_stmt_bind_param($stmt, 'iiis', $userId, $productId, $rating, $comment);\n\n    if (mysqli_execute($stmt)) {\n        return \"Review submitted successfully!\";\n    } else {\n        return \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Function to display reviews for a product\nfunction displayReviews($productId, $conn) {\n    $reviewsQuery = \"SELECT r.id, r.rating, r.comment, u.username, r.created_at \n                    FROM reviews r \n                    JOIN users u ON r.user_id = u.id \n                    WHERE r.product_id = ? \n                    ORDER BY r.created_at DESC\";\n    \n    $stmt = mysqli_prepare($conn, $reviewsQuery);\n    mysqli_stmt_bind_param($stmt, 'i', $productId);\n    mysqli_execute($stmt);\n\n    $result = mysqli_stmt_get_result($stmt);\n    $averageRating = calculateAverageRating($productId, $conn);\n    \n    echo \"<h3>Product Reviews</h3>\";\n    echo \"<p>Average Rating: \" . number_format($averageRating, 1) . \"/5</p>\";\n    \n    if (mysqli_num_rows($result) == 0) {\n        echo \"<p>No reviews yet!</p>\";\n        return;\n    }\n\n    while ($row = mysqli_fetch_assoc($result)) {\n        $username = $row['username'];\n        $rating = $row['rating'];\n        $comment = $row['comment'];\n        $created_at = date('M j, Y g:i a', strtotime($row['created_at']));\n\n        // Display star rating\n        echo \"<div class='review'>\";\n        echo \"<h4>Reviewed by: \" . $username . \"</h4>\";\n        echo \"<p>Rating: \";\n        for ($i = 1; $i <= $rating; $i++) {\n            echo \"\u2605\";\n        }\n        for ($i = $rating + 1; $i <=5; $i++) {\n            echo \"\u2606\";\n        }\n        echo \"</p>\";\n        echo \"<p>\" . $comment . \"</p>\";\n        echo \"<small>Posted on: \" . $created_at . \"</small>\";\n        echo \"</div><br>\";\n    }\n}\n\n// Function to calculate average rating\nfunction calculateAverageRating($productId, $conn) {\n    $averageQuery = \"SELECT AVG(rating) as average \n                    FROM reviews \n                    WHERE product_id = ?\";\n    \n    $stmt = mysqli_prepare($conn, $averageQuery);\n    mysqli_stmt_bind_param($stmt, 'i', $productId);\n    mysqli_execute($stmt);\n\n    $result = mysqli_stmt_get_result($stmt);\n    $row = mysqli_fetch_assoc($result);\n    \n    return $row['average'];\n}\n\n// Example usage\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $userId = $_SESSION['user_id']; // Assuming user is logged in\n    $productId = 1; // Specific product ID\n    $rating = intval($_POST['rating']);\n    $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n\n    $message = submitReview($userId, $productId, $rating, $comment, $conn);\n    echo \"<script>alert('\" . $message . \"');</script>\";\n}\n\ndisplayReviews(1, $conn); // Display reviews for product ID 1\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null]}
