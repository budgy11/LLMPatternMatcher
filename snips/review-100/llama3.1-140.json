{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a simple user review function in PHP:\n\n**review.php**\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'reviews_db';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    die(\"Error connecting to database: \" . $e->getMessage());\n}\n\nfunction add_review($review_text, $product_id, $user_id) {\n    global $conn;\n    \n    // Insert review into reviews table\n    $stmt = $conn->prepare(\"INSERT INTO reviews (text, product_id, user_id) VALUES (:text, :product_id, :user_id)\");\n    $stmt->bindParam(':text', $review_text);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    \n    // Get the ID of the newly inserted review\n    $new_review_id = $conn->lastInsertId();\n    \n    return $new_review_id;\n}\n\nfunction get_reviews($product_id) {\n    global $conn;\n    \n    // Retrieve reviews from reviews table where product_id matches\n    $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    \n    $reviews = array();\n    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n        $reviews[] = array(\n            'id' => $row['id'],\n            'text' => $row['text'],\n            'user_id' => $row['user_id']\n        );\n    }\n    \n    return $reviews;\n}\n\nfunction get_user_reviews($user_id) {\n    global $conn;\n    \n    // Retrieve reviews from reviews table where user_id matches\n    $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    \n    $reviews = array();\n    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n        $reviews[] = array(\n            'id' => $row['id'],\n            'text' => $row['text'],\n            'product_id' => $row['product_id']\n        );\n    }\n    \n    return $reviews;\n}\n\nfunction delete_review($review_id) {\n    global $conn;\n    \n    // Delete review from reviews table where id matches\n    $stmt = $conn->prepare(\"DELETE FROM reviews WHERE id = :id\");\n    $stmt->bindParam(':id', $review_id);\n    $stmt->execute();\n}\n\n?>\n```\nThis script defines four functions:\n\n* `add_review`: adds a new review to the database.\n* `get_reviews`: retrieves all reviews for a specific product.\n* `get_user_reviews`: retrieves all reviews written by a specific user.\n* `delete_review`: deletes a review from the database.\n\nNote that this is just a basic example, and you may want to add additional functionality or error handling as needed.\n\n**Example usage**\n```php\nrequire_once 'review.php';\n\n// Add a new review\n$new_review_id = add_review('This product is great!', 123, 456);\n\n// Get all reviews for a specific product\n$product_reviews = get_reviews(123);\nprint_r($product_reviews);\n\n// Get all reviews written by a specific user\n$user_reviews = get_user_reviews(456);\nprint_r($user_reviews);\n\n// Delete a review\ndelete_review(789);\n```\nThis is just a simple example, and you may want to modify it to fit your specific use case.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'reviews_db';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    die(\"Error connecting to database: \" . $e->getMessage());\n}\n\nfunction add_review($review_text, $product_id, $user_id) {\n    global $conn;\n    \n    // Insert review into reviews table\n    $stmt = $conn->prepare(\"INSERT INTO reviews (text, product_id, user_id) VALUES (:text, :product_id, :user_id)\");\n    $stmt->bindParam(':text', $review_text);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    \n    // Get the ID of the newly inserted review\n    $new_review_id = $conn->lastInsertId();\n    \n    return $new_review_id;\n}\n\nfunction get_reviews($product_id) {\n    global $conn;\n    \n    // Retrieve reviews from reviews table where product_id matches\n    $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    \n    $reviews = array();\n    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n        $reviews[] = array(\n            'id' => $row['id'],\n            'text' => $row['text'],\n            'user_id' => $row['user_id']\n        );\n    }\n    \n    return $reviews;\n}\n\nfunction get_user_reviews($user_id) {\n    global $conn;\n    \n    // Retrieve reviews from reviews table where user_id matches\n    $stmt = $conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    \n    $reviews = array();\n    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n        $reviews[] = array(\n            'id' => $row['id'],\n            'text' => $row['text'],\n            'product_id' => $row['product_id']\n        );\n    }\n    \n    return $reviews;\n}\n\nfunction delete_review($review_id) {\n    global $conn;\n    \n    // Delete review from reviews table where id matches\n    $stmt = $conn->prepare(\"DELETE FROM reviews WHERE id = :id\");\n    $stmt->bindParam(':id', $review_id);\n    $stmt->execute();\n}\n\n?>\n```", "```php\nrequire_once 'review.php';\n\n// Add a new review\n$new_review_id = add_review('This product is great!', 123, 456);\n\n// Get all reviews for a specific product\n$product_reviews = get_reviews(123);\nprint_r($product_reviews);\n\n// Get all reviews written by a specific user\n$user_reviews = get_user_reviews(456);\nprint_r($user_reviews);\n\n// Delete a review\ndelete_review(789);\n```"]}
