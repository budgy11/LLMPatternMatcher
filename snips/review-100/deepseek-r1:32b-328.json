{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for user reviews. Let me think about how to approach this.\n\nFirst, the function should display all existing reviews. So I'll probably need to fetch data from a database table, maybe called 'reviews'. Each review has an ID, user name, content, rating, and date. I'll use mysqli_query to select these records.\n\nNext, I want to allow users to submit new reviews. That means I'll need a form with fields for their name, comment, and rating selection. The form should POST to the same page so that after submission, it shows the updated list of reviews without redirecting away.\n\nI should handle the form submission. When the user submits, I'll check if all required fields are filled in. If not, display an error message. Then, insert the new review into the database using mysqli_insert_query.\n\nAlso, the reviews need to be displayed in a user-friendly way. Each review should show the user's name, comment, stars for rating, and the date. I'll create a loop that goes through each fetched review and formats them with HTML, maybe inside a div or article tag.\n\nFor the star display, I can use CSS classes. For example, if the rating is 4, then four stars are filled, and one is empty. I'll write some CSS to handle this, using before pseudo-elements to create the stars dynamically based on the rating number.\n\nI should also consider the database setup. The 'reviews' table needs columns for id (auto-increment), user_name, comment, rating (integer), and date. I'll make sure to connect properly using mysqli_connect with the correct host, username, password, and database name.\n\nSecurity is important too. Since this is a basic example, I'm not handling prepared statements or escaping inputs extensively, but in a real application, I should use mysqli_real_escape_string or prepared statements to prevent SQL injection.\n\nTesting is another consideration. After writing the code, I should test submitting reviews, checking if they appear correctly, and ensuring that the form validation works when fields are missing.\n\nPutting it all together, the function will include fetching existing reviews, displaying them with proper formatting, handling new submissions through a form, and updating the display accordingly. The CSS will style the page to make it look neat, especially for the star ratings.\n\nI think I've covered the main points: database interaction, form processing, HTML display, and some basic styling. Now, I can structure the PHP code with these elements in mind.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'review_system';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews() {\n    global $conn;\n    \n    // Fetch reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['user_name'] . \"</h3>\";\n            echo \"<p>\" . $row['comment'] . \"</p>\";\n            echo \"<div class='stars'>\";\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $row['rating']) {\n                    echo \"<span class='star'>\u2605</span>\";\n                } else {\n                    echo \"<span class='star'>\u2606</span>\";\n                }\n            }\n            echo \"</div>\";\n            echo \"<p class='date'>\" . $row['date'] . \"</p>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet. Be the first to review!</p>\";\n    }\n}\n\n// Function to submit a new review\nfunction submit_review($user_name, $comment, $rating) {\n    global $conn;\n    \n    // Validate input\n    if (empty($user_name) || empty($comment) || empty($rating)) {\n        return \"Please fill in all fields.\";\n    }\n    \n    // Sanitize inputs\n    $user_name = mysqli_real_escape_string($conn, $user_name);\n    $comment = mysqli_real_escape_string($conn, $comment);\n    $rating = intval($rating);\n    \n    // Insert into database\n    $sql = \"INSERT INTO reviews (user_name, comment, rating, date) VALUES ('$user_name', '$comment', '$rating', NOW())\";\n    if (mysqli_query($conn, $sql)) {\n        return \"Thank you for your review!\";\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $result = submit_review($_POST['user_name'], $_POST['comment'], $_POST['rating']);\n    echo \"<p class='message'>$result</p>\";\n}\n\n// Review submission form\necho \"<form method='post'>\";\necho \"<input type='text' name='user_name' placeholder='Your Name'>\";\necho \"<textarea name='comment' placeholder='Write your review...'></textarea>\";\necho \"<label>Rating:</label>\";\necho \"<select name='rating'>\";\nfor ($i = 1; $i <= 5; $i++) {\n    echo \"<option value='$i'>$i stars</option>\";\n}\necho \"</select>\";\necho \"<button type='submit'>Submit Review</button>\";\necho \"</form>\";\n\n// Display existing reviews\ndisplay_reviews();\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<style>\nbody {\n    font-family: Arial, sans-serif;\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.review {\n    border: 1px solid #ddd;\n    padding: 20px;\n    margin-bottom: 20px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n}\n\n.stars .star {\n    color: #FFD700;\n    font-size: 24px;\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\n}\n\nh3 {\n    margin-top: 0;\n    color: #333;\n}\n\n.date {\n    font-style: italic;\n    color: #666;\n}\n\nform input,\nform textarea {\n    width: 100%;\n    padding: 10px;\n    margin: 10px 0;\n    box-sizing: border-box;\n}\n\nselect {\n    padding: 10px;\n    width: 200px;\n}\n\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n\n.message {\n    color: #333;\n    margin-top: 20px;\n}\n</style>\n```\n\nThis code creates a user review system with the following features:\n\n1. Users can submit reviews with their name, comment, and rating (1-5 stars)\n2. All submitted reviews are displayed below the submission form\n3. Each review shows:\n   - User's name\n   - Review comment\n   - Star rating\n   - Date of submission\n\nThe system uses a MySQL database to store the reviews. The function includes:\n\n- `display_reviews()`: Fetches and displays all reviews from the database\n- `submit_review()`: Handles new review submissions\n- Form validation\n- Input sanitization\n- Responsive design with CSS styling\n\nTo use this code:\n\n1. Create a MySQL database named 'review_system'\n2. Create a table named 'reviews' with the following columns:\n   - id (INT, AUTO_INCREMENT)\n   - user_name (VARCHAR(255))\n   - comment (TEXT)\n   - rating (INT)\n   - date (DATETIME)\n\n3. Update the database connection details in the code (`$host`, `$username`, `$password`)\n\nThe reviews are displayed with a clean layout and includes CSS styling for:\n- Review cards\n- Star ratings\n- Form inputs\n- Submit button\n- Responsive design\n\nNote: This is a basic implementation and should be modified according to your specific needs. You might want to add features like:\n- User authentication\n- Edit/delete reviews\n- More robust validation\n- Security measures (SQL injection prevention)\n- Error handling\n- Pagination for large numbers of reviews", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'review_system';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews() {\n    global $conn;\n    \n    // Fetch reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY date DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['user_name'] . \"</h3>\";\n            echo \"<p>\" . $row['comment'] . \"</p>\";\n            echo \"<div class='stars'>\";\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $row['rating']) {\n                    echo \"<span class='star'>\u2605</span>\";\n                } else {\n                    echo \"<span class='star'>\u2606</span>\";\n                }\n            }\n            echo \"</div>\";\n            echo \"<p class='date'>\" . $row['date'] . \"</p>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet. Be the first to review!</p>\";\n    }\n}\n\n// Function to submit a new review\nfunction submit_review($user_name, $comment, $rating) {\n    global $conn;\n    \n    // Validate input\n    if (empty($user_name) || empty($comment) || empty($rating)) {\n        return \"Please fill in all fields.\";\n    }\n    \n    // Sanitize inputs\n    $user_name = mysqli_real_escape_string($conn, $user_name);\n    $comment = mysqli_real_escape_string($conn, $comment);\n    $rating = intval($rating);\n    \n    // Insert into database\n    $sql = \"INSERT INTO reviews (user_name, comment, rating, date) VALUES ('$user_name', '$comment', '$rating', NOW())\";\n    if (mysqli_query($conn, $sql)) {\n        return \"Thank you for your review!\";\n    } else {\n        return \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $result = submit_review($_POST['user_name'], $_POST['comment'], $_POST['rating']);\n    echo \"<p class='message'>$result</p>\";\n}\n\n// Review submission form\necho \"<form method='post'>\";\necho \"<input type='text' name='user_name' placeholder='Your Name'>\";\necho \"<textarea name='comment' placeholder='Write your review...'></textarea>\";\necho \"<label>Rating:</label>\";\necho \"<select name='rating'>\";\nfor ($i = 1; $i <= 5; $i++) {\n    echo \"<option value='$i'>$i stars</option>\";\n}\necho \"</select>\";\necho \"<button type='submit'>Submit Review</button>\";\necho \"</form>\";\n\n// Display existing reviews\ndisplay_reviews();\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<style>\nbody {\n    font-family: Arial, sans-serif;\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.review {\n    border: 1px solid #ddd;\n    padding: 20px;\n    margin-bottom: 20px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n}\n\n.stars .star {\n    color: #FFD700;\n    font-size: 24px;\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\n}\n\nh3 {\n    margin-top: 0;\n    color: #333;\n}\n\n.date {\n    font-style: italic;\n    color: #666;\n}\n\nform input,\nform textarea {\n    width: 100%;\n    padding: 10px;\n    margin: 10px 0;\n    box-sizing: border-box;\n}\n\nselect {\n    padding: 10px;\n    width: 200px;\n}\n\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n\n.message {\n    color: #333;\n    margin-top: 20px;\n}\n</style>\n```"]}
