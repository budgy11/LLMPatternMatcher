{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nHere's an example of how you can create a user review system in PHP. This example includes functions to add reviews, display reviews for a specific product, and calculate the average rating.\n\n### Database Schema\n\nFor this example, let's assume we have two tables: `products` and `reviews`. The `reviews` table has the following columns:\n\n* `id`: primary key\n* `product_id`: foreign key referencing the `id` column in the `products` table\n* `user_name`: the name of the user who wrote the review\n* `rating`: a rating from 1 to 5\n* `review_text`: the text of the review\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255)\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  product_id INT,\n  user_name VARCHAR(255),\n  rating TINYINT,\n  review_text TEXT,\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### PHP Code\n\n```php\n<?php\nclass Review {\n  private $db;\n\n  function __construct() {\n    // Connect to the database\n    $this->db = new mysqli('localhost', 'username', 'password', 'database_name');\n    if ($this->db->connect_error) {\n      die(\"Connection failed: \" . $this->db->connect_error);\n    }\n  }\n\n  function add_review($product_id, $user_name, $rating, $review_text) {\n    // Insert the review into the database\n    $query = \"INSERT INTO reviews (product_id, user_name, rating, review_text) VALUES ('$product_id', '$user_name', '$rating', '$review_text')\";\n    if ($this->db->query($query)) {\n      return true;\n    } else {\n      echo \"Error adding review: \" . $this->db->error;\n      return false;\n    }\n  }\n\n  function get_reviews($product_id) {\n    // Retrieve reviews for a specific product\n    $query = \"SELECT * FROM reviews WHERE product_id = '$product_id'\";\n    $result = $this->db->query($query);\n    if ($result->num_rows > 0) {\n      return $result;\n    } else {\n      echo \"No reviews found\";\n      return null;\n    }\n  }\n\n  function calculate_average_rating($product_id) {\n    // Calculate the average rating for a specific product\n    $query = \"SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$product_id'\";\n    $result = $this->db->query($query);\n    if ($result->num_rows > 0) {\n      return $result->fetch_assoc()['average_rating'];\n    } else {\n      echo \"No ratings found\";\n      return null;\n    }\n  }\n\n  function close_connection() {\n    // Close the database connection\n    $this->db->close();\n  }\n}\n?>\n```\n\n### Example Usage\n\n```php\n$review = new Review();\n\n// Add a review\n$product_id = 1;\n$user_name = 'John Doe';\n$rating = 4;\n$review_text = 'Great product!';\nif ($review->add_review($product_id, $user_name, $rating, $review_text)) {\n  echo \"Review added successfully\";\n} else {\n  echo \"Error adding review\";\n}\n\n// Get reviews for a specific product\n$product_id = 1;\n$result = $review->get_reviews($product_id);\nif ($result) {\n  while ($row = $result->fetch_assoc()) {\n    echo \"User: \" . $row['user_name'] . \", Rating: \" . $row['rating'] . \", Review: \" . $row['review_text'];\n  }\n} else {\n  echo \"No reviews found\";\n}\n\n// Calculate average rating for a specific product\n$product_id = 1;\n$average_rating = $review->calculate_average_rating($product_id);\necho \"Average Rating: \" . $average_rating;\n\n// Close database connection\n$review->close_connection();\n?>\n```\n\nThis is a basic example of how you can implement a user review system in PHP. You may need to modify it based on your specific requirements and database schema.", "code_blocks": [null, "```php\n<?php\nclass Review {\n  private $db;\n\n  function __construct() {\n    // Connect to the database\n    $this->db = new mysqli('localhost', 'username', 'password', 'database_name');\n    if ($this->db->connect_error) {\n      die(\"Connection failed: \" . $this->db->connect_error);\n    }\n  }\n\n  function add_review($product_id, $user_name, $rating, $review_text) {\n    // Insert the review into the database\n    $query = \"INSERT INTO reviews (product_id, user_name, rating, review_text) VALUES ('$product_id', '$user_name', '$rating', '$review_text')\";\n    if ($this->db->query($query)) {\n      return true;\n    } else {\n      echo \"Error adding review: \" . $this->db->error;\n      return false;\n    }\n  }\n\n  function get_reviews($product_id) {\n    // Retrieve reviews for a specific product\n    $query = \"SELECT * FROM reviews WHERE product_id = '$product_id'\";\n    $result = $this->db->query($query);\n    if ($result->num_rows > 0) {\n      return $result;\n    } else {\n      echo \"No reviews found\";\n      return null;\n    }\n  }\n\n  function calculate_average_rating($product_id) {\n    // Calculate the average rating for a specific product\n    $query = \"SELECT AVG(rating) as average_rating FROM reviews WHERE product_id = '$product_id'\";\n    $result = $this->db->query($query);\n    if ($result->num_rows > 0) {\n      return $result->fetch_assoc()['average_rating'];\n    } else {\n      echo \"No ratings found\";\n      return null;\n    }\n  }\n\n  function close_connection() {\n    // Close the database connection\n    $this->db->close();\n  }\n}\n?>\n```", "```php\n$review = new Review();\n\n// Add a review\n$product_id = 1;\n$user_name = 'John Doe';\n$rating = 4;\n$review_text = 'Great product!';\nif ($review->add_review($product_id, $user_name, $rating, $review_text)) {\n  echo \"Review added successfully\";\n} else {\n  echo \"Error adding review\";\n}\n\n// Get reviews for a specific product\n$product_id = 1;\n$result = $review->get_reviews($product_id);\nif ($result) {\n  while ($row = $result->fetch_assoc()) {\n    echo \"User: \" . $row['user_name'] . \", Rating: \" . $row['rating'] . \", Review: \" . $row['review_text'];\n  }\n} else {\n  echo \"No reviews found\";\n}\n\n// Calculate average rating for a specific product\n$product_id = 1;\n$average_rating = $review->calculate_average_rating($product_id);\necho \"Average Rating: \" . $average_rating;\n\n// Close database connection\n$review->close_connection();\n?>\n```"]}
