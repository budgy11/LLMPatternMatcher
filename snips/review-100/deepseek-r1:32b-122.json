{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function should display reviews and allow users to add new ones. So, I'll need some form for submitting reviews and a way to display existing ones.\n\nI'll start by setting up a database connection. Using mysqli is a good choice because it's more secure than mysql_ functions and supports prepared statements, which help prevent SQL injection.\n\nNext, I need a table in the database to store reviews. The table should have fields like id, name, review text, rating, and timestamp. That makes sense for capturing all necessary information from users.\n\nNow, handling form submission is important. When a user submits a review, I need to capture their input securely. Using prepared statements will help avoid SQL injection attacks by separating the SQL code from the data.\n\nDisplaying the reviews involves fetching them from the database and presenting them on the page. I'll sort them by timestamp so the newest appears first. Each review should show the user's name, their rating as stars, the review text, and the date it was posted.\n\nI should also validate the input before inserting into the database. Checking that all required fields are filled out and ensuring the rating is within a valid range will help maintain data integrity.\n\nFor displaying ratings as stars, I can use CSS classes to represent filled or empty stars based on the numeric rating stored in the database.\n\nSecurity is a big concern here. Using prepared statements not only helps with SQL injection but also makes the code cleaner and more efficient. Also, sanitizing any user input before processing it adds another layer of security.\n\nI should include error handling so that if something goes wrong during the submission or display process, the user gets helpful feedback. This could be simple messages indicating success or failure.\n\nPutting it all together, I'll structure the PHP script to first check if there's a POST request for submitting a review. If so, it processes the input and inserts into the database. Then, regardless of submission, it fetches existing reviews and displays them on the page.\n\nI need to make sure the HTML form is properly integrated with the PHP script, using appropriate form fields and structure. Styling the stars and layout with CSS will enhance the user experience.\n\nTesting each part as I go is important. I'll test submitting a review and ensure it appears correctly in the display. Checking for edge cases, like empty fields or invalid ratings, ensures the function handles those gracefully.\n\nFinally, I should document the code so that anyone reading it can understand how it works. Adding comments where necessary helps with maintainability.\n</think>\n\nHere's an example of a user review system using PHP:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'username';\n$password = 'password';\n$db_name = 'reviews_db';\n\n$conn = mysqli_connect($host, $user, $password, $db_name);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Create reviews table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\nid INT AUTO_INCREMENT PRIMARY KEY,\nname VARCHAR(255),\nreview TEXT,\nrating INT,\ntimestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n)\";\n\nif (!mysqli_query($conn, $sql)) {\n    die(\"Table creation failed: \" . mysqli_error($conn));\n}\n\n// Function to add a new review\nfunction addReview($conn, $name, $review, $rating) {\n    // Sanitize inputs\n    $name = htmlspecialchars(strip_tags($name));\n    $review = htmlspecialchars(strip_tags($review));\n    \n    if (empty($name) || empty($review) || !is_numeric($rating)) {\n        return \"Please fill in all fields\";\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5 stars\";\n    }\n\n    // Prepare and bind\n    $stmt = mysqli_prepare($conn, \"INSERT INTO reviews (name, review, rating) VALUES (?, ?, ?)\");\n    mysqli_stmt_bind_param($stmt, \"sss\", $name, $review, $rating);\n\n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to display all reviews\nfunction displayReviews($conn) {\n    $sql = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars($row['name']) . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars($row['review']) . \"</p>\";\n            echo \"<small>Posted on: \" . date('jS M Y', strtotime($row['timestamp'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet.</p>\";\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST['name'];\n    $review = $_POST['review'];\n    $rating = $_POST['rating'];\n\n    // Add review to database\n    $result = addReview($conn, $name, $review, $rating);\n\n    if ($result === true) {\n        echo \"<p>Thank you for your review!</p>\";\n    } else {\n        echo \"<p>Error: \" . $result . \"</p>\";\n    }\n}\n\n// Display the review form\necho <<<EOD\n<form method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br>\n    <textarea name=\"review\" placeholder=\"Write your review here...\" required></textarea><br>\n    <label>Rating:</label>\n    <select name=\"rating\" required>\n        <option value=\"\">Select rating</option>\n        <option value=\"1\">1 star</option>\n        <option value=\"2\">2 stars</option>\n        <option value=\"3\">3 stars</option>\n        <option value=\"4\">4 stars</option>\n        <option value=\"5\">5 stars</option>\n    </select><br>\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\nEOD;\n\n// Display existing reviews\necho \"<h2>Previous Reviews:</h2>\";\ndisplayReviews($conn);\n\nmysqli_close($conn);\n?>\n```\n\nThis code creates a user review system with the following features:\n\n1. Creates a database connection and table if it doesn't exist.\n2. Adds new reviews to the database:\n   - Validates input\n   - Sanitizes data\n   - Uses prepared statements for security\n3. Displays existing reviews in descending order (newest first)\n4. Includes error handling for invalid inputs\n5. Shows ratings as stars (using Unicode characters)\n\nTo use this code:\n\n1. Replace the database connection details (`$host`, `$user`, `$password`, `$db_name`) with your actual database information.\n2. Make sure the database and table are created before running the script.\n3. The form will submit reviews to the same page, which will then display all existing reviews.\n\nTo style the reviews, you can add CSS:\n\n```css\n.review {\n    border: 1px solid #ddd;\n    padding: 15px;\n    margin: 10px 0;\n    background-color: #f9f9f9;\n}\n\nh3 {\n    color: #333;\n    font-size: 1.2em;\n}\n\n.rating-stars {\n    display: inline-block;\n    font-size: 1.5em;\n}\n\n\u2606, \u2605 {\n    margin-right: 0.2em;\n}\n```\n\nYou can customize the styling to match your website's design.\n\nNote: This is a basic implementation and might need additional security measures and validation for production use. Consider implementing:\n\n- User authentication\n- Input sanitization\n- CSRF protection\n- XSS prevention\n- Database error handling\n- Rate limiting\n- Review moderation\n\nAlso, make sure to use HTTPS if your website handles sensitive data or user submissions.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'username';\n$password = 'password';\n$db_name = 'reviews_db';\n\n$conn = mysqli_connect($host, $user, $password, $db_name);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Create reviews table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\nid INT AUTO_INCREMENT PRIMARY KEY,\nname VARCHAR(255),\nreview TEXT,\nrating INT,\ntimestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n)\";\n\nif (!mysqli_query($conn, $sql)) {\n    die(\"Table creation failed: \" . mysqli_error($conn));\n}\n\n// Function to add a new review\nfunction addReview($conn, $name, $review, $rating) {\n    // Sanitize inputs\n    $name = htmlspecialchars(strip_tags($name));\n    $review = htmlspecialchars(strip_tags($review));\n    \n    if (empty($name) || empty($review) || !is_numeric($rating)) {\n        return \"Please fill in all fields\";\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5 stars\";\n    }\n\n    // Prepare and bind\n    $stmt = mysqli_prepare($conn, \"INSERT INTO reviews (name, review, rating) VALUES (?, ?, ?)\");\n    mysqli_stmt_bind_param($stmt, \"sss\", $name, $review, $rating);\n\n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to display all reviews\nfunction displayReviews($conn) {\n    $sql = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n\n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . htmlspecialchars($row['name']) . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']) . \"</p>\";\n            echo \"<p>\" . htmlspecialchars($row['review']) . \"</p>\";\n            echo \"<small>Posted on: \" . date('jS M Y', strtotime($row['timestamp'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews yet.</p>\";\n    }\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST['name'];\n    $review = $_POST['review'];\n    $rating = $_POST['rating'];\n\n    // Add review to database\n    $result = addReview($conn, $name, $review, $rating);\n\n    if ($result === true) {\n        echo \"<p>Thank you for your review!</p>\";\n    } else {\n        echo \"<p>Error: \" . $result . \"</p>\";\n    }\n}\n\n// Display the review form\necho <<<EOD\n<form method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br>\n    <textarea name=\"review\" placeholder=\"Write your review here...\" required></textarea><br>\n    <label>Rating:</label>\n    <select name=\"rating\" required>\n        <option value=\"\">Select rating</option>\n        <option value=\"1\">1 star</option>\n        <option value=\"2\">2 stars</option>\n        <option value=\"3\">3 stars</option>\n        <option value=\"4\">4 stars</option>\n        <option value=\"5\">5 stars</option>\n    </select><br>\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\nEOD;\n\n// Display existing reviews\necho \"<h2>Previous Reviews:</h2>\";\ndisplayReviews($conn);\n\nmysqli_close($conn);\n?>\n```", null]}
