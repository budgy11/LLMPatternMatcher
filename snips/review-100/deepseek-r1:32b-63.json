{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, the user wants me to create a user review function using PHP. I need to figure out what exactly they're looking for. They probably want a way to display reviews on their website, maybe with ratings.\n\nFirst, I should consider how reviews are stored. Using a database makes sense, so I'll outline connecting to MySQL. That means including the mysqli functions and setting up the connection details.\n\nNext, I need functions to add a review and to fetch them. The add_review function will take user ID, product ID, rating, and comment. I should include validation checks, like ensuring the user exists and that ratings are between 1-5. Prepared statements will help prevent SQL injection.\n\nFor fetching reviews, the get_reviews function needs parameters for product ID, optional limit, order by, and sort direction. Fetching from the database with placeholders is important to avoid SQL injection again. Sorting can be based on date or helpful votes if implemented later.\n\nDisplaying the reviews is another part. I'll create a display_reviews function that formats each review into HTML elements. It should show user info, rating stars, comment, and a vote option. Using CSS classes will help style it properly.\n\nI also think about allowing users to vote on reviews, which would require more functions, but for now, just the structure is provided. The voting feature can be added later if needed.\n\nSecurity is crucial, so I remind them about sanitizing inputs and protecting against SQL injection. It's important to mention that they should adjust the database connection details according to their setup.\n\nFinally, I'll include some notes on how to use these functions, like calling add_review with sample data and then displaying them. This gives a clear example of implementation.\n\nOverall, the approach is modular, breaking down each part into separate functions for better maintainability. I also consider future enhancements, like adding helpful vote features or handling different order types.\n</think>\n\nHere's an example of a user review system in PHP:\n\n```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $database);\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a review\nfunction add_review($user_id, $product_id, $rating, $comment) {\n    global $conn;\n    \n    // Validate inputs\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return \"Invalid rating value\";\n    }\n    \n    if (strlen($comment) == 0) {\n        return \"Comment cannot be empty\";\n    }\n    \n    // Check if user exists\n    $check_user = \"SELECT id FROM users WHERE id = ?\";\n    $stmt = mysqli_prepare($conn, $check_user);\n    mysqli_stmt_bind_param($stmt, \"i\", $user_id);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    \n    if (mysqli_num_rows($result) == 0) {\n        return \"User does not exist\";\n    }\n    \n    // Insert review\n    $insert_review = \"INSERT INTO reviews (user_id, product_id, rating, comment, created_at)\n                     VALUES (?, ?, ?, ?, NOW())\";\n    $stmt = mysqli_prepare($conn, $insert_review);\n    mysqli_stmt_bind_param($stmt, \"iisi\", $user_id, $product_id, $rating, $comment);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return \"Error adding review: \" . mysqli_error($conn);\n    }\n}\n\n// Function to fetch reviews for a product\nfunction get_reviews($product_id, $limit = 10, $order_by = 'created_at', $sort = 'DESC') {\n    global $conn;\n    \n    // Validate parameters\n    if (!is_numeric($product_id)) {\n        return false;\n    }\n    \n    // Build the query\n    $query = \"SELECT r.id AS review_id,\n                    u.username,\n                    r.rating,\n                    r.comment,\n                    r.created_at\n             FROM reviews r\n             JOIN users u ON r.user_id = u.id\n             WHERE r.product_id = ?\n             ORDER BY $order_by $sort\n             LIMIT ?\";\n    \n    $stmt = mysqli_prepare($conn, $query);\n    mysqli_stmt_bind_param($stmt, \"ii\", $product_id, $limit);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        $result = mysqli_stmt_get_result($stmt);\n        return $result;\n    } else {\n        return false;\n    }\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    // Get reviews for the product\n    $reviews_result = get_reviews($product_id);\n    \n    if ($reviews_result && mysqli_num_rows($reviews_result) > 0) {\n        echo '<div class=\"reviews-container\">';\n        \n        while ($review = mysqli_fetch_assoc($reviews_result)) {\n            echo '<div class=\"review\">';\n                echo '<div class=\"review-header\">';\n                    echo '<span class=\"username\">' . htmlspecialchars($review['username']) . '</span>';\n                    // Display rating stars\n                    echo '<div class=\"rating\">';\n                        for ($i = 1; $i <= 5; $i++) {\n                            if ($i <= $review['rating']) {\n                                echo '<span class=\"star\">\u2605</span>';\n                            } else {\n                                echo '<span class=\"star\">\u2606</span>';\n                            }\n                        }\n                    echo '</div>';\n                echo '</div>';\n                \n                echo '<p class=\"comment\">' . htmlspecialchars($review['comment']) . '</p>';\n                \n                // Display helpful vote button\n                echo '<div class=\"vote-container\">';\n                    echo '<button class=\"helpful-vote\">Was this helpful?</button>';\n                echo '</div>';\n                \n                echo '<small class=\"date\">' . date('F j, Y', strtotime($review['created_at'])) . '</small>';\n            echo '</div>';\n        }\n        \n        echo '</div>';\n    } else {\n        echo 'No reviews available for this product.';\n    }\n}\n\n// Example usage:\nif (isset($_POST['submit_review'])) {\n    $user_id = 1; // Replace with actual user ID\n    $product_id = 1; // Replace with actual product ID\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    $result = add_review($user_id, $product_id, $rating, $comment);\n    if ($result === true) {\n        echo \"Review added successfully!\";\n    } else {\n        echo $result;\n    }\n}\n\n// Display reviews for product ID 1\ndisplay_reviews(1);\n\n?>\n```\n\nThis code creates a user review system with the following features:\n\n1. Users can submit ratings (1-5 stars)\n2. Users can write comments about their experience\n3. Reviews are stored in a database\n4. Reviews include:\n   - User's username\n   - Rating stars\n   - Comment text\n   - Date of submission\n\nTo use this code, you'll need to:\n\n1. Set up your database connection details\n2. Create the necessary database tables (users and reviews)\n3. Adjust the functions according to your specific requirements\n\nThe system includes:\n\n- `add_review()` function to submit new reviews\n- `get_reviews()` function to fetch reviews for a product\n- `display_reviews()` function to show formatted reviews on your page\n\nNote: This is a basic implementation and you should consider adding:\n- Validation for user input\n- Protection against SQL injection (though the current code uses prepared statements)\n- Error handling\n- User authentication system\n- CSS styling for better presentation\n- JavaScript functionality for the \"Was this helpful?\" feature\n\nYou can enhance it further by adding features like:\n- Upvoting/downvoting reviews\n- Sorting and filtering reviews\n- Reply to reviews\n- Flagging inappropriate content\n- Review moderation system", "code_blocks": ["```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $database);\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a review\nfunction add_review($user_id, $product_id, $rating, $comment) {\n    global $conn;\n    \n    // Validate inputs\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return \"Invalid rating value\";\n    }\n    \n    if (strlen($comment) == 0) {\n        return \"Comment cannot be empty\";\n    }\n    \n    // Check if user exists\n    $check_user = \"SELECT id FROM users WHERE id = ?\";\n    $stmt = mysqli_prepare($conn, $check_user);\n    mysqli_stmt_bind_param($stmt, \"i\", $user_id);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    \n    if (mysqli_num_rows($result) == 0) {\n        return \"User does not exist\";\n    }\n    \n    // Insert review\n    $insert_review = \"INSERT INTO reviews (user_id, product_id, rating, comment, created_at)\n                     VALUES (?, ?, ?, ?, NOW())\";\n    $stmt = mysqli_prepare($conn, $insert_review);\n    mysqli_stmt_bind_param($stmt, \"iisi\", $user_id, $product_id, $rating, $comment);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return \"Error adding review: \" . mysqli_error($conn);\n    }\n}\n\n// Function to fetch reviews for a product\nfunction get_reviews($product_id, $limit = 10, $order_by = 'created_at', $sort = 'DESC') {\n    global $conn;\n    \n    // Validate parameters\n    if (!is_numeric($product_id)) {\n        return false;\n    }\n    \n    // Build the query\n    $query = \"SELECT r.id AS review_id,\n                    u.username,\n                    r.rating,\n                    r.comment,\n                    r.created_at\n             FROM reviews r\n             JOIN users u ON r.user_id = u.id\n             WHERE r.product_id = ?\n             ORDER BY $order_by $sort\n             LIMIT ?\";\n    \n    $stmt = mysqli_prepare($conn, $query);\n    mysqli_stmt_bind_param($stmt, \"ii\", $product_id, $limit);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        $result = mysqli_stmt_get_result($stmt);\n        return $result;\n    } else {\n        return false;\n    }\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    // Get reviews for the product\n    $reviews_result = get_reviews($product_id);\n    \n    if ($reviews_result && mysqli_num_rows($reviews_result) > 0) {\n        echo '<div class=\"reviews-container\">';\n        \n        while ($review = mysqli_fetch_assoc($reviews_result)) {\n            echo '<div class=\"review\">';\n                echo '<div class=\"review-header\">';\n                    echo '<span class=\"username\">' . htmlspecialchars($review['username']) . '</span>';\n                    // Display rating stars\n                    echo '<div class=\"rating\">';\n                        for ($i = 1; $i <= 5; $i++) {\n                            if ($i <= $review['rating']) {\n                                echo '<span class=\"star\">\u2605</span>';\n                            } else {\n                                echo '<span class=\"star\">\u2606</span>';\n                            }\n                        }\n                    echo '</div>';\n                echo '</div>';\n                \n                echo '<p class=\"comment\">' . htmlspecialchars($review['comment']) . '</p>';\n                \n                // Display helpful vote button\n                echo '<div class=\"vote-container\">';\n                    echo '<button class=\"helpful-vote\">Was this helpful?</button>';\n                echo '</div>';\n                \n                echo '<small class=\"date\">' . date('F j, Y', strtotime($review['created_at'])) . '</small>';\n            echo '</div>';\n        }\n        \n        echo '</div>';\n    } else {\n        echo 'No reviews available for this product.';\n    }\n}\n\n// Example usage:\nif (isset($_POST['submit_review'])) {\n    $user_id = 1; // Replace with actual user ID\n    $product_id = 1; // Replace with actual product ID\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    $result = add_review($user_id, $product_id, $rating, $comment);\n    if ($result === true) {\n        echo \"Review added successfully!\";\n    } else {\n        echo $result;\n    }\n}\n\n// Display reviews for product ID 1\ndisplay_reviews(1);\n\n?>\n```"]}
