{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nBelow is an example of a basic user review system in PHP. This example includes the following features:\n\n*   Creating reviews for users\n*   Displaying all reviews for a specific product or user\n*   Deleting reviews\n\n### Database Schema\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    title VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    product_id INT,\n    content TEXT,\n    rating INT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### PHP Code\n\n**models/Review.php**\n\n```php\nclass Review {\n    private $id;\n    private $userId;\n    private $productId;\n    private $content;\n    private $rating;\n\n    public function __construct($id = null, $userId = null, $productId = null, $content = null, $rating = null) {\n        $this->id = $id;\n        $this->userId = $userId;\n        $this->productId = $productId;\n        $this->content = $content;\n        $this->rating = $rating;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getUserId() {\n        return $this->userId;\n    }\n\n    public function getProductId() {\n        return $this->productId;\n    }\n\n    public function getContent() {\n        return $this->content;\n    }\n\n    public function getRating() {\n        return $this->rating;\n    }\n}\n```\n\n**controllers/ReviewController.php**\n\n```php\nclass ReviewController {\n    private $db;\n\n    public function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function createReview($userId, $productId, $content, $rating) {\n        $stmt = $this->db->prepare(\"INSERT INTO reviews (user_id, product_id, content, rating) VALUES (?, ?, ?, ?)\");\n        $stmt->execute([$userId, $productId, $content, $rating]);\n        return new Review($this->db->insertId());\n    }\n\n    public function getReviewsByUser($userId) {\n        $reviews = [];\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE user_id = ?\");\n        $stmt->execute([$userId]);\n        while ($row = $stmt->fetch()) {\n            $review = new Review($row['id'], $row['user_id'], $row['product_id'], $row['content'], $row['rating']);\n            $reviews[] = $review;\n        }\n        return $reviews;\n    }\n\n    public function getReviewsByProduct($productId) {\n        $reviews = [];\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE product_id = ?\");\n        $stmt->execute([$productId]);\n        while ($row = $stmt->fetch()) {\n            $review = new Review($row['id'], $row['user_id'], $row['product_id'], $row['content'], $row['rating']);\n            $reviews[] = $review;\n        }\n        return $reviews;\n    }\n\n    public function deleteReview($reviewId) {\n        $stmt = $this->db->prepare(\"DELETE FROM reviews WHERE id = ?\");\n        $stmt->execute([$reviewId]);\n    }\n}\n```\n\n**routes/reviews.php**\n\n```php\n$router->get('/users/{userId}/reviews', 'ReviewController:getReviewsByUser');\n$router->get('/products/{productId}/reviews', 'ReviewController:getReviewsByProduct');\n$router->post('/reviews', 'ReviewController:createReview');\n$router->delete('/reviews/{reviewId}', 'ReviewController:deleteReview');\n```\n\n**Example Usage**\n\n```php\n$db = new Database(); // assuming you have a Database class\n\n$reviewController = new ReviewController($db);\n\n// Create review\n$userId = 1;\n$productId = 1;\n$content = 'Great product!';\n$rating = 5;\n\n$newReview = $reviewController->createReview($userId, $productId, $content, $rating);\necho \"New review created: \" . $newReview->getId() . \"\\n\";\n\n// Get reviews by user\n$userReviews = $reviewController->getReviewsByUser($userId);\nforeach ($userReviews as $review) {\n    echo \"Review by user \" . $review->getUserId() . \": \" . $review->getContent() . \"\\n\";\n}\n\n// Get reviews by product\n$productReviews = $reviewController->getReviewsByProduct($productId);\nforeach ($productReviews as $review) {\n    echo \"Review on product \" . $review->getProductId() . \": \" . $review->getContent() . \"\\n\";\n}\n\n// Delete review\n$reviewId = 1;\n$reviewController->deleteReview($reviewId);\necho \"Review deleted: \" . $reviewId . \"\\n\";\n```\n\nNote that this is a simplified example and you may need to modify it based on your specific requirements. Additionally, ensure proper error handling and security measures are in place when using this code.", "code_blocks": [null, "```php\nclass Review {\n    private $id;\n    private $userId;\n    private $productId;\n    private $content;\n    private $rating;\n\n    public function __construct($id = null, $userId = null, $productId = null, $content = null, $rating = null) {\n        $this->id = $id;\n        $this->userId = $userId;\n        $this->productId = $productId;\n        $this->content = $content;\n        $this->rating = $rating;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getUserId() {\n        return $this->userId;\n    }\n\n    public function getProductId() {\n        return $this->productId;\n    }\n\n    public function getContent() {\n        return $this->content;\n    }\n\n    public function getRating() {\n        return $this->rating;\n    }\n}\n```", "```php\nclass ReviewController {\n    private $db;\n\n    public function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function createReview($userId, $productId, $content, $rating) {\n        $stmt = $this->db->prepare(\"INSERT INTO reviews (user_id, product_id, content, rating) VALUES (?, ?, ?, ?)\");\n        $stmt->execute([$userId, $productId, $content, $rating]);\n        return new Review($this->db->insertId());\n    }\n\n    public function getReviewsByUser($userId) {\n        $reviews = [];\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE user_id = ?\");\n        $stmt->execute([$userId]);\n        while ($row = $stmt->fetch()) {\n            $review = new Review($row['id'], $row['user_id'], $row['product_id'], $row['content'], $row['rating']);\n            $reviews[] = $review;\n        }\n        return $reviews;\n    }\n\n    public function getReviewsByProduct($productId) {\n        $reviews = [];\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE product_id = ?\");\n        $stmt->execute([$productId]);\n        while ($row = $stmt->fetch()) {\n            $review = new Review($row['id'], $row['user_id'], $row['product_id'], $row['content'], $row['rating']);\n            $reviews[] = $review;\n        }\n        return $reviews;\n    }\n\n    public function deleteReview($reviewId) {\n        $stmt = $this->db->prepare(\"DELETE FROM reviews WHERE id = ?\");\n        $stmt->execute([$reviewId]);\n    }\n}\n```", "```php\n$router->get('/users/{userId}/reviews', 'ReviewController:getReviewsByUser');\n$router->get('/products/{productId}/reviews', 'ReviewController:getReviewsByProduct');\n$router->post('/reviews', 'ReviewController:createReview');\n$router->delete('/reviews/{reviewId}', 'ReviewController:deleteReview');\n```", "```php\n$db = new Database(); // assuming you have a Database class\n\n$reviewController = new ReviewController($db);\n\n// Create review\n$userId = 1;\n$productId = 1;\n$content = 'Great product!';\n$rating = 5;\n\n$newReview = $reviewController->createReview($userId, $productId, $content, $rating);\necho \"New review created: \" . $newReview->getId() . \"\\n\";\n\n// Get reviews by user\n$userReviews = $reviewController->getReviewsByUser($userId);\nforeach ($userReviews as $review) {\n    echo \"Review by user \" . $review->getUserId() . \": \" . $review->getContent() . \"\\n\";\n}\n\n// Get reviews by product\n$productReviews = $reviewController->getReviewsByProduct($productId);\nforeach ($productReviews as $review) {\n    echo \"Review on product \" . $review->getProductId() . \": \" . $review->getContent() . \"\\n\";\n}\n\n// Delete review\n$reviewId = 1;\n$reviewController->deleteReview($reviewId);\necho \"Review deleted: \" . $reviewId . \"\\n\";\n```"]}
