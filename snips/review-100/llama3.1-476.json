{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nBelow is an example of a simple user review system implemented in PHP. This script includes functions for creating, reading, updating, and deleting reviews.\n\n### Database Setup\n\nFor this example to work, you need a database table named `reviews` with the following structure:\n\n```sql\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  title VARCHAR(255) NOT NULL,\n  content TEXT NOT NULL,\n  rating TINYINT UNSIGNED NOT NULL CHECK (rating BETWEEN 1 AND 5),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n### PHP Code\n\n```php\n<?php\n\n// Configuration for database connection\n$dsn = 'mysql:host=localhost;dbname=reviews';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    // Establish a connection to the database\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Function to create a new review\nfunction createReview(array $data): int {\n    $query = \"INSERT INTO reviews (title, content, rating) VALUES (:title, :content, :rating)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->execute($data);\n    return $pdo->lastInsertId();\n}\n\n// Function to get all reviews\nfunction getReviews(): array {\n    $query = \"SELECT * FROM reviews ORDER BY created_at DESC\";\n    $stmt = $pdo->prepare($query);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// Function to get a review by its ID\nfunction getReview(int $id): ?array {\n    $query = \"SELECT * FROM reviews WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch(PDO::FETCH_ASSOC);\n}\n\n// Function to update a review\nfunction updateReview(int $id, array $data): bool {\n    $query = \"UPDATE reviews SET title = :title, content = :content, rating = :rating WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    return $stmt->execute($data + ['id' => $id]);\n}\n\n// Function to delete a review\nfunction deleteReview(int $id): bool {\n    $query = \"DELETE FROM reviews WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    return $stmt->execute(['id' => $id]);\n}\n\n// Example usage:\n$reviewData = ['title' => 'Example Review', 'content' => 'This is an example review.', 'rating' => 4];\n$newReviewId = createReview($reviewData);\n\necho \"New review created with ID: $newReviewId\\n\";\n\n$reviews = getReviews();\nprint_r($reviews);\n\n$existingReview = getReview(1);\nvar_dump($existingReview);\n\n$updatedReviewId = updateReview(1, ['title' => 'Updated Review', 'content' => 'This is an updated review.', 'rating' => 5]);\necho \"Review updated with ID: $updatedReviewId\\n\";\n\ndeleteReview(2);\n\n?>\n```\n\n### Explanation\n\nThe functions provided are:\n\n- `createReview(array $data)`: Creates a new review in the database. Requires the title, content, and rating as an array.\n- `getReviews(): array`: Retrieves all reviews from the database, sorted by creation date in descending order.\n- `getReview(int $id): ?array`: Retrieves a single review by its ID.\n- `updateReview(int $id, array $data): bool`: Updates a review with the given ID. Requires the title, content, and rating as an array.\n- `deleteReview(int $id): bool`: Deletes a review with the specified ID.\n\nThis is a basic implementation for demonstration purposes. You should consider implementing additional error handling and security measures according to your specific requirements and environment.", "code_blocks": [null, "```php\n<?php\n\n// Configuration for database connection\n$dsn = 'mysql:host=localhost;dbname=reviews';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    // Establish a connection to the database\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Function to create a new review\nfunction createReview(array $data): int {\n    $query = \"INSERT INTO reviews (title, content, rating) VALUES (:title, :content, :rating)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->execute($data);\n    return $pdo->lastInsertId();\n}\n\n// Function to get all reviews\nfunction getReviews(): array {\n    $query = \"SELECT * FROM reviews ORDER BY created_at DESC\";\n    $stmt = $pdo->prepare($query);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n// Function to get a review by its ID\nfunction getReview(int $id): ?array {\n    $query = \"SELECT * FROM reviews WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch(PDO::FETCH_ASSOC);\n}\n\n// Function to update a review\nfunction updateReview(int $id, array $data): bool {\n    $query = \"UPDATE reviews SET title = :title, content = :content, rating = :rating WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    return $stmt->execute($data + ['id' => $id]);\n}\n\n// Function to delete a review\nfunction deleteReview(int $id): bool {\n    $query = \"DELETE FROM reviews WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    return $stmt->execute(['id' => $id]);\n}\n\n// Example usage:\n$reviewData = ['title' => 'Example Review', 'content' => 'This is an example review.', 'rating' => 4];\n$newReviewId = createReview($reviewData);\n\necho \"New review created with ID: $newReviewId\\n\";\n\n$reviews = getReviews();\nprint_r($reviews);\n\n$existingReview = getReview(1);\nvar_dump($existingReview);\n\n$updatedReviewId = updateReview(1, ['title' => 'Updated Review', 'content' => 'This is an updated review.', 'rating' => 5]);\necho \"Review updated with ID: $updatedReviewId\\n\";\n\ndeleteReview(2);\n\n?>\n```"]}
