{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a simple user review system written in PHP:\n\n**Database Schema**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  title VARCHAR(255),\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_id INT,\n  rating TINYINT,\n  comment TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n```php\n// Review Model\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  }\n\n  public function createReview($user_id, $product_id, $rating, $comment) {\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (:user_id, :product_id, :rating, :comment)\";\n    $stmt = $this->db->prepare($sql);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':rating', $rating);\n    $stmt->bindParam(':comment', $comment);\n    return $stmt->execute();\n  }\n\n  public function getReviewsForProduct($product_id) {\n    $sql = \"SELECT * FROM reviews WHERE product_id = :product_id ORDER BY created_at DESC\";\n    $stmt = $this->db->prepare($sql);\n    $stmt->bindParam(':product_id', $product_id);\n    return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n  }\n\n  public function getReviewsForUser($user_id) {\n    $sql = \"SELECT * FROM reviews WHERE user_id = :user_id ORDER BY created_at DESC\";\n    $stmt = $this->db->prepare($sql);\n    $stmt->bindParam(':user_id', $user_id);\n    return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n  }\n}\n```\n\n**Controller**\n```php\n// Create a new review\nif (isset($_POST['submit'])) {\n  $review = new Review();\n  $result = $review->createReview($_SESSION['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);\n  if ($result) {\n    echo \"Review created successfully!\";\n  } else {\n    echo \"Error creating review.\";\n  }\n}\n\n// Get reviews for a product\n$reviews = new Review();\n$product_reviews = $reviews->getReviewsForProduct($_GET['product_id']);\n\n// Get reviews for a user\n$user_reviews = $reviews->getReviewsForUser($_SESSION['user_id']);\n```\n\n**View**\n```php\n<!-- Create review form -->\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $_GET['product_id']; ?>\">\n  <label for=\"rating\">Rating:</label>\n  <select id=\"rating\" name=\"rating\">\n    <?php foreach (range(1, 5) as $i) { ?>\n      <option value=\"<?php echo $i; ?>\"><?php echo $i; ?>/5</option>\n    <?php } ?>\n  </select>\n  <br><br>\n  <label for=\"comment\">Comment:</label>\n  <textarea id=\"comment\" name=\"comment\"></textarea>\n  <br><br>\n  <input type=\"submit\" name=\"submit\" value=\"Submit Review\">\n</form>\n\n<!-- Display reviews for a product -->\n<h2>Reviews for <?php echo $_GET['product_id']; ?></h2>\n<ul>\n  <?php foreach ($product_reviews as $review) { ?>\n    <li>\n      <strong><?php echo $review['rating']; ?>/5 by <?php echo $review['user_name']; ?></strong><br>\n      <?php echo $review['comment']; ?><br><br>\n    </li>\n  <?php } ?>\n</ul>\n\n<!-- Display reviews for a user -->\n<h2>Reviews by <?php echo $_SESSION['name']; ?></h2>\n<ul>\n  <?php foreach ($user_reviews as $review) { ?>\n    <li>\n      <strong><?php echo $review['rating']; ?>/5 on <?php echo $review['product_title']; ?></strong><br>\n      <?php echo $review['comment']; ?><br><br>\n    </li>\n  <?php } ?>\n</ul>\n```\nThis code creates a simple review system where users can create reviews for products, and then view their own reviews or reviews for specific products. The `Review` model encapsulates the database logic, and the controller handles user input and displays the reviews in the view.\n\nNote that this is just a basic example, you should add error handling, security measures (e.g. sanitizing user input), and other features as needed to make it production-ready.", "code_blocks": [null, "```php\n// Review Model\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n  }\n\n  public function createReview($user_id, $product_id, $rating, $comment) {\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (:user_id, :product_id, :rating, :comment)\";\n    $stmt = $this->db->prepare($sql);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':rating', $rating);\n    $stmt->bindParam(':comment', $comment);\n    return $stmt->execute();\n  }\n\n  public function getReviewsForProduct($product_id) {\n    $sql = \"SELECT * FROM reviews WHERE product_id = :product_id ORDER BY created_at DESC\";\n    $stmt = $this->db->prepare($sql);\n    $stmt->bindParam(':product_id', $product_id);\n    return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n  }\n\n  public function getReviewsForUser($user_id) {\n    $sql = \"SELECT * FROM reviews WHERE user_id = :user_id ORDER BY created_at DESC\";\n    $stmt = $this->db->prepare($sql);\n    $stmt->bindParam(':user_id', $user_id);\n    return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n  }\n}\n```", "```php\n// Create a new review\nif (isset($_POST['submit'])) {\n  $review = new Review();\n  $result = $review->createReview($_SESSION['user_id'], $_POST['product_id'], $_POST['rating'], $_POST['comment']);\n  if ($result) {\n    echo \"Review created successfully!\";\n  } else {\n    echo \"Error creating review.\";\n  }\n}\n\n// Get reviews for a product\n$reviews = new Review();\n$product_reviews = $reviews->getReviewsForProduct($_GET['product_id']);\n\n// Get reviews for a user\n$user_reviews = $reviews->getReviewsForUser($_SESSION['user_id']);\n```", "```php\n<!-- Create review form -->\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $_GET['product_id']; ?>\">\n  <label for=\"rating\">Rating:</label>\n  <select id=\"rating\" name=\"rating\">\n    <?php foreach (range(1, 5) as $i) { ?>\n      <option value=\"<?php echo $i; ?>\"><?php echo $i; ?>/5</option>\n    <?php } ?>\n  </select>\n  <br><br>\n  <label for=\"comment\">Comment:</label>\n  <textarea id=\"comment\" name=\"comment\"></textarea>\n  <br><br>\n  <input type=\"submit\" name=\"submit\" value=\"Submit Review\">\n</form>\n\n<!-- Display reviews for a product -->\n<h2>Reviews for <?php echo $_GET['product_id']; ?></h2>\n<ul>\n  <?php foreach ($product_reviews as $review) { ?>\n    <li>\n      <strong><?php echo $review['rating']; ?>/5 by <?php echo $review['user_name']; ?></strong><br>\n      <?php echo $review['comment']; ?><br><br>\n    </li>\n  <?php } ?>\n</ul>\n\n<!-- Display reviews for a user -->\n<h2>Reviews by <?php echo $_SESSION['name']; ?></h2>\n<ul>\n  <?php foreach ($user_reviews as $review) { ?>\n    <li>\n      <strong><?php echo $review['rating']; ?>/5 on <?php echo $review['product_title']; ?></strong><br>\n      <?php echo $review['comment']; ?><br><br>\n    </li>\n  <?php } ?>\n</ul>\n```"]}
