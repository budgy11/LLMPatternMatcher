{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nHere is an example of a user login function written in PHP. This function will verify the user's credentials and return `true` if they are valid, or `false` otherwise.\n\n```php\nfunction loginUser($username, $password) {\n    // Database connection settings (modify to suit your database)\n    define('DB_HOST', 'localhost');\n    define('DB_USER', 'your_username');\n    define('DB_PASSWORD', 'your_password');\n    define('DB_NAME', 'your_database');\n\n    // Connect to the database\n    $conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username AND password = :password\");\n\n    // Bind parameters\n    $params = array(\n        ':username' => $username,\n        ':password' => hash('sha256', $password) // Hash the password for security\n    );\n\n    // Execute query and retrieve result\n    try {\n        $stmt->execute($params);\n        $result = $stmt->fetch();\n\n        if ($result !== false) {\n            return true; // User credentials are valid\n        } else {\n            return false; // Invalid user credentials\n        }\n    } catch (PDOException $e) {\n        echo 'Error: ' . $e->getMessage();\n        return false;\n    } finally {\n        $conn = null; // Close the database connection\n    }\n}\n```\n\n**Example Usage**\n---------------\n\n```php\nif (loginUser('username', 'password')) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n```\n\nNote:\n\n* Make sure to replace `your_username`, `your_password`, and `your_database` with your actual database credentials.\n* This function uses a simple SHA-256 hash for password storage, which is not recommended for production use. Consider using a more secure method like bcrypt.\n* This example assumes you have a `users` table in your database with columns `username` and `password`. Adjust the SQL query to match your actual database schema.", "code_blocks": ["```php\nfunction loginUser($username, $password) {\n    // Database connection settings (modify to suit your database)\n    define('DB_HOST', 'localhost');\n    define('DB_USER', 'your_username');\n    define('DB_PASSWORD', 'your_password');\n    define('DB_NAME', 'your_database');\n\n    // Connect to the database\n    $conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username AND password = :password\");\n\n    // Bind parameters\n    $params = array(\n        ':username' => $username,\n        ':password' => hash('sha256', $password) // Hash the password for security\n    );\n\n    // Execute query and retrieve result\n    try {\n        $stmt->execute($params);\n        $result = $stmt->fetch();\n\n        if ($result !== false) {\n            return true; // User credentials are valid\n        } else {\n            return false; // Invalid user credentials\n        }\n    } catch (PDOException $e) {\n        echo 'Error: ' . $e->getMessage();\n        return false;\n    } finally {\n        $conn = null; // Close the database connection\n    }\n}\n```", "```php\nif (loginUser('username', 'password')) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n```"]}
