{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP, including error handling and hashing passwords for security.\n\n```php\n// Database connection settings\n$db_host = 'localhost';\n$db_user = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a new MySQLi object\n$mysqli = new mysqli($db_host, $db_user, $db_password, $db_name);\n\nif ($mysqli->connect_error) {\n    die('Connect Error: ' . $mysqli->connect_error);\n}\n\nfunction login($username, $password) {\n    global $mysqli;\n    \n    // SQL query to retrieve the user's details\n    $query = \"SELECT id, username, password FROM users WHERE username = '$username'\";\n    \n    try {\n        // Execute the SQL query\n        $result = $mysqli->query($query);\n        \n        if ($result->num_rows == 0) {\n            throw new Exception('No such user exists');\n        }\n        \n        // Fetch the result of the query as an associative array\n        $userDetails = $result->fetch_assoc();\n        \n        // Compare hashed password with given password\n        $hash = hash('sha256', $password);\n        if ($hash == $userDetails['password']) {\n            return true;\n        } else {\n            throw new Exception('Incorrect Password');\n        }\n    } catch (Exception $e) {\n        echo 'Error: ', $e->getMessage();\n    }\n}\n\n// Login function usage\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (login($username, $password)) {\n        echo 'Login Successful';\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n```\n\nHowever, it's recommended to use prepared statements for SQL queries as shown below:\n\n```php\nfunction login($username, $password) {\n    global $mysqli;\n    \n    // Create a new SQL query object with the user details and encrypted password\n    $stmt = $mysqli->prepare(\"SELECT id, username, password FROM users WHERE username = ?\");\n    $stmt->bind_param(\"s\", $username);\n    \n    try {\n        // Execute the prepared statement\n        $stmt->execute();\n        \n        // Fetch the result of the query as an associative array\n        $userDetails = $stmt->get_result()->fetch_assoc();\n        \n        // Compare hashed password with given password\n        if ($userDetails['password'] == hash('sha256', $password)) {\n            return true;\n        } else {\n            throw new Exception('Incorrect Password');\n        }\n    } catch (Exception $e) {\n        echo 'Error: ', $e->getMessage();\n    } finally {\n        // Close the prepared statement\n        $stmt->close();\n    }\n}\n```\n\nPlease note that it's always a good practice to use `hash` function for hashing passwords instead of concatenating them in the SQL query. Also, never store plain text passwords and remember to close your database connections properly.\n\nThis code has security vulnerabilities (e.g., SQL injection) and lacks proper error handling. Use this as a starting point and refer to documentation or consult with an expert if you're unfamiliar with best practices for building secure PHP applications.", "code_blocks": ["```php\n// Database connection settings\n$db_host = 'localhost';\n$db_user = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a new MySQLi object\n$mysqli = new mysqli($db_host, $db_user, $db_password, $db_name);\n\nif ($mysqli->connect_error) {\n    die('Connect Error: ' . $mysqli->connect_error);\n}\n\nfunction login($username, $password) {\n    global $mysqli;\n    \n    // SQL query to retrieve the user's details\n    $query = \"SELECT id, username, password FROM users WHERE username = '$username'\";\n    \n    try {\n        // Execute the SQL query\n        $result = $mysqli->query($query);\n        \n        if ($result->num_rows == 0) {\n            throw new Exception('No such user exists');\n        }\n        \n        // Fetch the result of the query as an associative array\n        $userDetails = $result->fetch_assoc();\n        \n        // Compare hashed password with given password\n        $hash = hash('sha256', $password);\n        if ($hash == $userDetails['password']) {\n            return true;\n        } else {\n            throw new Exception('Incorrect Password');\n        }\n    } catch (Exception $e) {\n        echo 'Error: ', $e->getMessage();\n    }\n}\n\n// Login function usage\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (login($username, $password)) {\n        echo 'Login Successful';\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n```", "```php\nfunction login($username, $password) {\n    global $mysqli;\n    \n    // Create a new SQL query object with the user details and encrypted password\n    $stmt = $mysqli->prepare(\"SELECT id, username, password FROM users WHERE username = ?\");\n    $stmt->bind_param(\"s\", $username);\n    \n    try {\n        // Execute the prepared statement\n        $stmt->execute();\n        \n        // Fetch the result of the query as an associative array\n        $userDetails = $stmt->get_result()->fetch_assoc();\n        \n        // Compare hashed password with given password\n        if ($userDetails['password'] == hash('sha256', $password)) {\n            return true;\n        } else {\n            throw new Exception('Incorrect Password');\n        }\n    } catch (Exception $e) {\n        echo 'Error: ', $e->getMessage();\n    } finally {\n        // Close the prepared statement\n        $stmt->close();\n    }\n}\n```"]}
