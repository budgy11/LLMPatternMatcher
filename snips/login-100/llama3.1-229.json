{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP, using a MySQL database for storing user credentials. This code uses prepared statements to prevent SQL injection attacks.\n\n**Note:** Before running this code, make sure you have set up your MySQL database with the necessary tables and fields.\n\n### Database Schema\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    password_hash CHAR(60) NOT NULL\n);\n```\n\n### PHP Code (login.php)\n```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Create a database connection\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash the password\nfunction hashPassword($password) {\n    return password_hash($password, PASSWORD_DEFAULT);\n}\n\n// Function to check user credentials\nfunction checkUserCredentials($username, $password) {\n    global $conn;\n    \n    // Prepare and execute query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username=?\");\n    $stmt->bind_param(\"s\", $username);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Get the user's hashed password\n        $user_data = $result->fetch_assoc();\n        \n        // Check if the provided password matches the stored hash\n        return password_verify($password, $user_data['password_hash']);\n    }\n    \n    // If no match found, return false\n    return false;\n}\n\n// Function to handle user login\nfunction loginUser() {\n    global $conn;\n    \n    // Get input values from form submission (e.g., username and password)\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (!empty($username) && !empty($password)) {\n        // Hash the provided password\n        $hashed_password = hashPassword($password);\n        \n        // Check user credentials\n        if (checkUserCredentials($username, $hashed_password)) {\n            // User is authenticated, set session variables and redirect to protected page\n            session_start();\n            $_SESSION['username'] = $username;\n            header('Location: protected-page.php');\n            exit;\n        } else {\n            echo \"Invalid username or password\";\n        }\n    } else {\n        echo \"Please fill in both fields\";\n    }\n}\n\n// Handle form submission (login)\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    loginUser();\n} elseif ($_SERVER['REQUEST_METHOD'] === 'GET') {\n    // Display login form\n    ?>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"><br><br>\n        <label>Password:</label>\n        <input type of=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    <?php\n}\n\n?>\n```\n\n### Explanation\n\nThis code defines three main functions:\n\n1. `hashPassword`: hashes a given password using the default password hashing algorithm.\n2. `checkUserCredentials`: checks if the provided username and hashed password match stored user data.\n3. `loginUser`: handles user login, checking credentials, setting session variables, and redirecting to a protected page.\n\nIn the main script:\n\n* The database connection is established using `$conn`.\n* If the request method is POST (form submission), it calls the `loginUser` function to process the login attempt.\n* Otherwise, it displays a basic login form with input fields for username and password.\n\nNote that this code assumes a simple user authentication scenario. In a real-world application, consider implementing more advanced security features like secure password storage, salted hashing, and account locking mechanisms.", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Create a database connection\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash the password\nfunction hashPassword($password) {\n    return password_hash($password, PASSWORD_DEFAULT);\n}\n\n// Function to check user credentials\nfunction checkUserCredentials($username, $password) {\n    global $conn;\n    \n    // Prepare and execute query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username=?\");\n    $stmt->bind_param(\"s\", $username);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Get the user's hashed password\n        $user_data = $result->fetch_assoc();\n        \n        // Check if the provided password matches the stored hash\n        return password_verify($password, $user_data['password_hash']);\n    }\n    \n    // If no match found, return false\n    return false;\n}\n\n// Function to handle user login\nfunction loginUser() {\n    global $conn;\n    \n    // Get input values from form submission (e.g., username and password)\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (!empty($username) && !empty($password)) {\n        // Hash the provided password\n        $hashed_password = hashPassword($password);\n        \n        // Check user credentials\n        if (checkUserCredentials($username, $hashed_password)) {\n            // User is authenticated, set session variables and redirect to protected page\n            session_start();\n            $_SESSION['username'] = $username;\n            header('Location: protected-page.php');\n            exit;\n        } else {\n            echo \"Invalid username or password\";\n        }\n    } else {\n        echo \"Please fill in both fields\";\n    }\n}\n\n// Handle form submission (login)\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    loginUser();\n} elseif ($_SERVER['REQUEST_METHOD'] === 'GET') {\n    // Display login form\n    ?>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"><br><br>\n        <label>Password:</label>\n        <input type of=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    <?php\n}\n\n?>\n```"]}
