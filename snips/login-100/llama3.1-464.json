{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThe following is an example of a basic user login function in PHP. This function uses prepared statements to prevent SQL injection attacks.\n\n### Database Schema\n\nAssuming you have the following database schema:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n```\n\n### PHP Function\n\n**`login.php`**\n```php\n<?php\n// Config file with database connection details\nrequire_once 'config.php';\n\nfunction login($username, $password) {\n    // Prepare SQL statement to retrieve user credentials\n    $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    \n    // Execute query and store result in array\n    $stmt->execute();\n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n    \n    if ($user) {\n        // Verify password using hash comparison\n        if (password_verify($password, $user['password'])) {\n            return true;\n        } else {\n            echo \"Invalid username or password.\";\n            return false;\n        }\n    } else {\n        echo \"Invalid username or password.\";\n        return false;\n    }\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (login($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid login attempt.\";\n    }\n}\n?>\n```\n\n### Security Notes\n\n1. **Hash passwords**: Store hashed passwords instead of plain text.\n2. **Use prepared statements**: Prevent SQL injection attacks by using prepared statements with placeholders (`:username`).\n3. **Verify password using `password_verify()`**: Compare the input password with the stored hash value.\n\n### Example Use Case\n\nTo use this function, create a HTML form to collect user credentials and submit it via POST request:\n\n```html\n<form action=\"login.php\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" name=\"username\" id=\"username\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" name=\"password\" id=\"password\"><br><br>\n    <button type=\"submit\">Login</button>\n</form>\n```\n\nMake sure to replace `config.php` with your actual database connection file.", "code_blocks": [null, "```php\n<?php\n// Config file with database connection details\nrequire_once 'config.php';\n\nfunction login($username, $password) {\n    // Prepare SQL statement to retrieve user credentials\n    $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    \n    // Execute query and store result in array\n    $stmt->execute();\n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n    \n    if ($user) {\n        // Verify password using hash comparison\n        if (password_verify($password, $user['password'])) {\n            return true;\n        } else {\n            echo \"Invalid username or password.\";\n            return false;\n        }\n    } else {\n        echo \"Invalid username or password.\";\n        return false;\n    }\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (login($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid login attempt.\";\n    }\n}\n?>\n```", null]}
