{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    global $conn;\n\n    // Sanitize user input\n    $username = mysqli_real_escape_string($conn, $username);\n    $password = mysqli_real_escape_string($conn, $password);\n\n    // Query the database for the user\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows == 1) {\n        // Get the user data from the result set\n        $user_data = $result->fetch_assoc();\n\n        // Hash the provided password and compare it with the stored hash\n        $stored_hash = $user_data['password'];\n        $provided_password = md5($password);\n\n        if ($provided_password == $stored_hash) {\n            // Login successful, return a success message\n            echo \"Login successful!\";\n            return true;\n        } else {\n            // Password mismatch\n            echo \"Invalid password\";\n            return false;\n        }\n    } else {\n        // User not found\n        echo \"User not found\";\n        return false;\n    }\n}\n\n// Handle form submission\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login_user($username, $password)) {\n        // Login successful, redirect to a protected page\n        header(\"Location: protected_page.php\");\n        exit();\n    } else {\n        // Login failed, display an error message\n        echo \"Invalid username or password\";\n    }\n}\n\n// Close the database connection\n$conn->close();\n?>\n```\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login Page</title>\n</head>\n<body>\n    <h1>Login Form</h1>\n    <form action=\"login.php\" method=\"post\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"><br><br>\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```\nThis code creates a basic login form that sends the username and password to the `login.php` script, which checks the user credentials against the database. If the login is successful, it redirects the user to a protected page (e.g. `protected_page.php`). Note that this is just an example and you should consider implementing additional security measures such as hashing passwords securely, using prepared statements, and validating user input.\n\n**Security Notes:**\n\n* This code uses `md5` to hash passwords, which is not recommended for password storage due to its weaknesses.\n* It's better to use a library like PHP-BCrypt or PasswordHasher to securely store hashed passwords.\n* The example above does not implement prepared statements, which can help prevent SQL injection attacks. Consider using a library that supports prepared statements or implementing them manually.\n\nPlease let me know if you need further assistance!", "code_blocks": ["```php\n<?php\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    global $conn;\n\n    // Sanitize user input\n    $username = mysqli_real_escape_string($conn, $username);\n    $password = mysqli_real_escape_string($conn, $password);\n\n    // Query the database for the user\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows == 1) {\n        // Get the user data from the result set\n        $user_data = $result->fetch_assoc();\n\n        // Hash the provided password and compare it with the stored hash\n        $stored_hash = $user_data['password'];\n        $provided_password = md5($password);\n\n        if ($provided_password == $stored_hash) {\n            // Login successful, return a success message\n            echo \"Login successful!\";\n            return true;\n        } else {\n            // Password mismatch\n            echo \"Invalid password\";\n            return false;\n        }\n    } else {\n        // User not found\n        echo \"User not found\";\n        return false;\n    }\n}\n\n// Handle form submission\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login_user($username, $password)) {\n        // Login successful, redirect to a protected page\n        header(\"Location: protected_page.php\");\n        exit();\n    } else {\n        // Login failed, display an error message\n        echo \"Invalid username or password\";\n    }\n}\n\n// Close the database connection\n$conn->close();\n?>\n```", null]}
