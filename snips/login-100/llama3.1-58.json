{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a basic user login function using PHP. This code assumes you have already set up a database with a `users` table containing the following columns: `id`, `username`, `password`, and `email`.\n\n**login.php**\n```php\n<?php\n// Configuration\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myuser';\n$password = 'mypassword';\n\ntry {\n    // Connect to database\n    $conn = new PDO($dsn, $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    function loginUser($username, $password) {\n        global $conn;\n\n        // Prepare SQL query\n        $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        // Fetch user data\n        $userData = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($userData) {\n            // Hashed password check\n            if (password_verify($password, $userData['password'])) {\n                return true; // Login successful\n            } else {\n                return false; // Incorrect password\n            }\n        } else {\n            return false; // User not found\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Error connecting to database: ' . $e->getMessage();\n}\n?>\n```\n**Example Usage**\n```php\n// Assume we're calling this from another PHP file\nrequire_once('login.php');\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (loginUser($username, $password)) {\n        // Login successful, redirect to dashboard or protected page\n        header('Location: dashboard.php');\n        exit;\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n```\n**Notes**\n\n*   This example uses prepared statements and parameter binding for security. Never concatenate user input into SQL queries.\n*   We're using `password_verify` to check the hashed password, which is a secure way to compare passwords.\n*   Make sure to replace the configuration values (`$dsn`, `$username`, `$password`) with your actual database credentials.\n*   This code only checks if the username and password are correct. You may want to add additional security measures (e.g., rate limiting, IP blocking) to prevent brute-force attacks.\n\nPlease let me know if you'd like any modifications or have further questions!", "code_blocks": ["```php\n<?php\n// Configuration\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myuser';\n$password = 'mypassword';\n\ntry {\n    // Connect to database\n    $conn = new PDO($dsn, $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    function loginUser($username, $password) {\n        global $conn;\n\n        // Prepare SQL query\n        $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        // Fetch user data\n        $userData = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($userData) {\n            // Hashed password check\n            if (password_verify($password, $userData['password'])) {\n                return true; // Login successful\n            } else {\n                return false; // Incorrect password\n            }\n        } else {\n            return false; // User not found\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Error connecting to database: ' . $e->getMessage();\n}\n?>\n```", "```php\n// Assume we're calling this from another PHP file\nrequire_once('login.php');\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (loginUser($username, $password)) {\n        // Login successful, redirect to dashboard or protected page\n        header('Location: dashboard.php');\n        exit;\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n```"]}
