{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n====================================\n\nBelow is an example of a simple user login function written in PHP. This code uses prepared statements to prevent SQL injection attacks.\n\n### `login.php` File\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    printf(\"Connect failed: %s\\n\", $mysqli->connect_error);\n    exit();\n}\n\nfunction login_user($username, $password) {\n    // Prepare SQL statement\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param('ss', $username, md5($password));\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Fetch results\n    $result = $stmt->get_result();\n    \n    // Check if user exists\n    if ($result->num_rows == 1) {\n        // User found, return true\n        return true;\n    } else {\n        // User not found, return false\n        return false;\n    }\n}\n\n// Handle login form submission\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $password = md5($_POST['password']);\n    \n    if (login_user($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n\n// Close database connection\n$mysqli->close();\n\n?>\n```\n### Explanation\n\n1. The code connects to the MySQL database using `mysqli`.\n2. The `login_user` function takes two parameters: `$username` and `$password`. It uses prepared statements to prevent SQL injection attacks.\n3. If the user is found, the function returns `true`; otherwise, it returns `false`.\n4. In the example usage, a login form submission handler checks if the user exists in the database.\n\n### Example Usage\n\n```php\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"submit\">Login</button>\n</form>\n```\n**Note**: In a real-world application, you should store passwords securely using a library like `password_hash` or a password hashing algorithm. This example uses `md5` for simplicity.\n\n**Security Considerations**\n\n* Always use prepared statements to prevent SQL injection attacks.\n* Use a secure password hashing algorithm (e.g., `password_hash`) to store user passwords.\n* Never store plain-text passwords in your database.\n* Validate user input on the client-side and server-side using techniques like CSRF protection.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    printf(\"Connect failed: %s\\n\", $mysqli->connect_error);\n    exit();\n}\n\nfunction login_user($username, $password) {\n    // Prepare SQL statement\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param('ss', $username, md5($password));\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Fetch results\n    $result = $stmt->get_result();\n    \n    // Check if user exists\n    if ($result->num_rows == 1) {\n        // User found, return true\n        return true;\n    } else {\n        // User not found, return false\n        return false;\n    }\n}\n\n// Handle login form submission\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $password = md5($_POST['password']);\n    \n    if (login_user($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n\n// Close database connection\n$mysqli->close();\n\n?>\n```", "```php\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"submit\">Login</button>\n</form>\n```"]}
