{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function using PHP:\n\n**Note:** This code assumes you're storing user data in a MySQL database. Make sure to replace the placeholders with your actual database credentials and table names.\n\n```php\n// db.php (database connection file)\n<?php\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"your_database_name\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```\n\n**login.php (user login script)**\n```php\n<?php\n\nrequire_once 'db.php'; // include database connection file\n\nfunction user_login($email, $password) {\n    global $conn; // access the database connection variable\n\n    // Prepare SQL query to select users with matching email and password\n    $sql = \"SELECT * FROM your_table_name WHERE email = ? AND password = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $email, $password); // bind parameters\n\n    if ($stmt->execute()) {\n        // Fetch user data from database\n        $result = $stmt->get_result();\n        $row = $result->fetch_assoc();\n\n        // If login credentials are valid, return true and user data\n        if (count($row) > 0 && password_verify($password, $row['password'])) {\n            return array(true, $row);\n        } else {\n            // Return false for incorrect email or password\n            return array(false, null);\n        }\n    }\n\n    // If database query failed, return false and error message\n    return array(false, 'Database error');\n}\n\n// Handle user login attempt\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $result = user_login($email, $password);\n\n    if ($result[0]) {\n        // Login successful, redirect to protected area or display welcome message\n        echo \"Login successful. Welcome, {$result[1]['name']}!\";\n    } else {\n        // Display login error message\n        echo 'Invalid email or password';\n    }\n}\n\n?>\n```\n\nIn this example:\n\n* We use the `mysqli` extension to connect to the database.\n* The `user_login()` function takes an email and password as input, prepares a SQL query to select users with matching credentials, executes the query, and returns true or false along with user data if login is successful.\n* In the login script, we check if the request method is POST (indicating a form submission) and call the `user_login()` function with the submitted email and password. If login is successful, we display a welcome message; otherwise, we display an error message.\n\n**Security Notes:**\n\n* Always use prepared statements to prevent SQL injection attacks.\n* Use `password_verify()` to compare passwords securely (assuming you're using PHP 5.5+).\n* Store user passwords securely in the database using a strong hashing algorithm like bcrypt.\n\nRemember to replace placeholders with your actual database credentials and table names. This code is meant as a starting point, and you should adapt it to fit your specific requirements.", "code_blocks": ["```php\n// db.php (database connection file)\n<?php\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"your_database_name\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```", "```php\n<?php\n\nrequire_once 'db.php'; // include database connection file\n\nfunction user_login($email, $password) {\n    global $conn; // access the database connection variable\n\n    // Prepare SQL query to select users with matching email and password\n    $sql = \"SELECT * FROM your_table_name WHERE email = ? AND password = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $email, $password); // bind parameters\n\n    if ($stmt->execute()) {\n        // Fetch user data from database\n        $result = $stmt->get_result();\n        $row = $result->fetch_assoc();\n\n        // If login credentials are valid, return true and user data\n        if (count($row) > 0 && password_verify($password, $row['password'])) {\n            return array(true, $row);\n        } else {\n            // Return false for incorrect email or password\n            return array(false, null);\n        }\n    }\n\n    // If database query failed, return false and error message\n    return array(false, 'Database error');\n}\n\n// Handle user login attempt\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $result = user_login($email, $password);\n\n    if ($result[0]) {\n        // Login successful, redirect to protected area or display welcome message\n        echo \"Login successful. Welcome, {$result[1]['name']}!\";\n    } else {\n        // Display login error message\n        echo 'Invalid email or password';\n    }\n}\n\n?>\n```"]}
