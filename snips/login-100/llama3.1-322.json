{"prompt": "Create a user login function using php", "llm_output": "Here's an example of how you can create a basic user login function using PHP:\n\n**Note:** This is a simplified version and should not be used in production without proper security measures (e.g., password hashing, SQL injection protection).\n\n**File: `login.php`**\n```php\n<?php\n\n// Configuration\n$databaseHost = 'localhost';\n$databaseName = 'users_db';\n$username = 'username';\n$password = 'password';\n\n// Connect to database\n$mysqli = new mysqli($databaseHost, $username, $password, $databaseName);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    die(\"Database connection failed: \" . $mysqli->connect_error);\n}\n\n// Login function\nfunction login($username, $password) {\n    // Prepare query\n    $stmt = $mysqli->prepare('SELECT * FROM users WHERE username = ? AND password = ?');\n    \n    // Bind parameters\n    $stmt->bind_param('ss', $username, $password);\n\n    // Execute query\n    $stmt->execute();\n\n    // Get result\n    $result = $stmt->get_result();\n\n    // Check if user exists and password is correct\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Handle login form submission\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Hash password (for security)\n    $hashedPassword = hash('sha256', $password);\n\n    if (login($username, $hashedPassword)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n\n// Display login form\n?>\n<form action=\"\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Login\">\n</form>\n```\n**Explanation:**\n\n1. We connect to the database using `mysqli`.\n2. The `login` function takes a username and password, prepares a SQL query to select the user from the database, binds the parameters, executes the query, and checks if the result is non-empty.\n3. If the login form is submitted (i.e., when the submit button is clicked), we hash the password using SHA-256 and call the `login` function with the username and hashed password.\n4. We display a simple login form with text fields for username and password.\n\n**Note:** This example uses an insecure password hashing method (`hash('sha256', $password)`) for simplicity. In production, you should use a secure password hashing library like `phpass` or a framework's built-in hashing functions.\n\nAlso, remember to protect against SQL injection by using prepared statements and bound parameters as shown above.\n\n**Update:** I added some basic error handling (e.g., connection failure), but this is still a simplified example. You should consider implementing additional security measures, such as secure password storage and protection against other types of attacks.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$databaseHost = 'localhost';\n$databaseName = 'users_db';\n$username = 'username';\n$password = 'password';\n\n// Connect to database\n$mysqli = new mysqli($databaseHost, $username, $password, $databaseName);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    die(\"Database connection failed: \" . $mysqli->connect_error);\n}\n\n// Login function\nfunction login($username, $password) {\n    // Prepare query\n    $stmt = $mysqli->prepare('SELECT * FROM users WHERE username = ? AND password = ?');\n    \n    // Bind parameters\n    $stmt->bind_param('ss', $username, $password);\n\n    // Execute query\n    $stmt->execute();\n\n    // Get result\n    $result = $stmt->get_result();\n\n    // Check if user exists and password is correct\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Handle login form submission\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Hash password (for security)\n    $hashedPassword = hash('sha256', $password);\n\n    if (login($username, $hashedPassword)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n\n// Display login form\n?>\n<form action=\"\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Login\">\n</form>\n```"]}
