{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login function using PHP:\n\n**login.php**\n```php\n<?php\n\n// Configuration settings\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\ntry {\n    // Create connection to database\n    $conn = new PDO($dsn, $username, $password);\n\n    // Set error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    echo 'Error connecting to database: ' . $e->getMessage();\n    exit;\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    global $conn;\n\n    // Prepare query to select user data\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username AND password = :password');\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', md5($password)); // Hash the password\n\n    // Execute query and get result\n    $stmt->execute();\n    $result = $stmt->fetch();\n\n    // If user exists, return true\n    if ($result) {\n        return true;\n    }\n\n    // If no user found, return false\n    return false;\n}\n\n// Example usage:\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login_user($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password.';\n    }\n}\n\n?>\n```\n\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <form action=\"login.php\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\"><br><br>\n        Password: <input type=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```\n\n**How it works**\n\n1. The `login.php` script connects to a MySQL database using PDO.\n2. The `login_user()` function takes two parameters, `$username` and `$password`, which are checked against the stored user data in the database.\n3. If the username and password match, the function returns `true`.\n4. In the example usage section, we check if the `$_POST['username']` and `$_POST['password']` variables are set, and then call the `login_user()` function with these values.\n5. The result of the `login_user()` function is used to display a success or failure message.\n\nNote that this code uses MD5 hashing for password storage, which is not recommended for production environments due to security concerns. Consider using a more secure hashing algorithm like bcrypt or Argon2 instead.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\ntry {\n    // Create connection to database\n    $conn = new PDO($dsn, $username, $password);\n\n    // Set error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    echo 'Error connecting to database: ' . $e->getMessage();\n    exit;\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    global $conn;\n\n    // Prepare query to select user data\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username AND password = :password');\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', md5($password)); // Hash the password\n\n    // Execute query and get result\n    $stmt->execute();\n    $result = $stmt->fetch();\n\n    // If user exists, return true\n    if ($result) {\n        return true;\n    }\n\n    // If no user found, return false\n    return false;\n}\n\n// Example usage:\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login_user($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password.';\n    }\n}\n\n?>\n```", null]}
