{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function in PHP:\n```php\n<?php\n\n// Config variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'your_database_name');\n\n// Function to connect to database\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Function to login user\nfunction login_user($username, $password) {\n  // Connect to database\n  $db = db_connect();\n\n  // Prepare query\n  $query = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n\n  // Bind parameters\n  $stmt = $db->prepare($query);\n  $stmt->bind_param(\"ss\", $username, $password);\n\n  // Execute query\n  $stmt->execute();\n\n  // Get result\n  $result = $stmt->get_result();\n\n  // Check if user exists and password is correct\n  if ($result->num_rows > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = md5($_POST['password']);\n\nif (login_user($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n?>\n```\nHere's an explanation of the code:\n\n* We define some config variables at the top for database connection details.\n* The `db_connect()` function establishes a connection to the database using `mysqli`.\n* The `login_user()` function takes in a username and password as arguments. It connects to the database, prepares a query to select all columns from the \"users\" table where the username and password match, binds the parameters, executes the query, and returns a boolean indicating whether the user exists and password is correct.\n* In the example usage section, we demonstrate how to use the `login_user()` function by passing in the username and password from a POST request. If the login is successful, it outputs \"Login successful!\", otherwise it outputs \"Invalid username or password.\".\n\nNote that this is just a basic example and you should consider implementing additional security measures such as:\n\n* Using prepared statements with parameterized queries to prevent SQL injection attacks\n* Hashing passwords securely using a library like `password_hash()` instead of using MD5\n* Validating user input to prevent cross-site scripting (XSS) attacks\n* Implementing a secure password reset mechanism\n\nAlso, make sure to replace the placeholder database name and credentials with your actual database details.", "code_blocks": ["```php\n<?php\n\n// Config variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'your_database_name');\n\n// Function to connect to database\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Function to login user\nfunction login_user($username, $password) {\n  // Connect to database\n  $db = db_connect();\n\n  // Prepare query\n  $query = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n\n  // Bind parameters\n  $stmt = $db->prepare($query);\n  $stmt->bind_param(\"ss\", $username, $password);\n\n  // Execute query\n  $stmt->execute();\n\n  // Get result\n  $result = $stmt->get_result();\n\n  // Check if user exists and password is correct\n  if ($result->num_rows > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = md5($_POST['password']);\n\nif (login_user($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n?>\n```"]}
