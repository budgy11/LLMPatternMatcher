{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a simple user login function written in PHP. This function uses prepared statements to prevent SQL injection attacks.\n\n### Database Configuration (example MySQL)\n\n```php\n// config.php\n$host = 'localhost';\n$dbname = 'login_system';\n$user = 'your_username';\n$password = 'your_password';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $password);\n} catch(PDOException $e) {\n    die(\"ERROR: Could not connect. \" . $e->getMessage());\n}\n```\n\n### Login Function\n\n```php\n// login.php\nrequire_once 'config.php';\n\nfunction loginUser($username, $password)\n{\n    global $conn;\n\n    // Clean input to prevent SQL injection\n    $username = htmlspecialchars(strip_tags($username));\n    $password = md5(htmlspecialchars(strip_tags($password)));\n\n    $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n\n    try {\n        $stmt->execute();\n        $result = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($result) {\n            // Login successful, store user data in session\n            $_SESSION['username'] = $username;\n            $_SESSION['id'] = $result['id'];\n\n            return true;\n        } else {\n            // Login failed\n            return false;\n        }\n    } catch (PDOException $e) {\n        echo \"ERROR: \" . $e->getMessage();\n        return false;\n    }\n}\n```\n\n### Example Usage\n\n```php\n// login_example.php\nrequire_once 'login.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (loginUser($username, $password)) {\n        header('Location: dashboard.php');\n        exit;\n    } else {\n        echo \"Invalid username or password\";\n    }\n} else {\n    // Display login form\n    ?>\n    <form action=\"\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\"><br>\n        Password: <input type=\"password\" name=\"password\"><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    <?php\n}\n```\n\n**Security Notes**\n\n*   Always clean user input to prevent SQL injection attacks using `htmlspecialchars` and `strip_tags`.\n*   Use prepared statements with parameterized queries for safer database interactions.\n*   Store sensitive data like passwords securely using a library like `password_hash` and do not store them in plain text.\n\nRemember, this is a basic example. You should consider implementing additional security measures such as password hashing (like `password_hash()`), token-based authentication, or other more advanced techniques depending on your specific use case.", "code_blocks": ["```php\n// config.php\n$host = 'localhost';\n$dbname = 'login_system';\n$user = 'your_username';\n$password = 'your_password';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $password);\n} catch(PDOException $e) {\n    die(\"ERROR: Could not connect. \" . $e->getMessage());\n}\n```", "```php\n// login.php\nrequire_once 'config.php';\n\nfunction loginUser($username, $password)\n{\n    global $conn;\n\n    // Clean input to prevent SQL injection\n    $username = htmlspecialchars(strip_tags($username));\n    $password = md5(htmlspecialchars(strip_tags($password)));\n\n    $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n    $stmt = $conn->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n\n    try {\n        $stmt->execute();\n        $result = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($result) {\n            // Login successful, store user data in session\n            $_SESSION['username'] = $username;\n            $_SESSION['id'] = $result['id'];\n\n            return true;\n        } else {\n            // Login failed\n            return false;\n        }\n    } catch (PDOException $e) {\n        echo \"ERROR: \" . $e->getMessage();\n        return false;\n    }\n}\n```", "```php\n// login_example.php\nrequire_once 'login.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (loginUser($username, $password)) {\n        header('Location: dashboard.php');\n        exit;\n    } else {\n        echo \"Invalid username or password\";\n    }\n} else {\n    // Display login form\n    ?>\n    <form action=\"\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\"><br>\n        Password: <input type=\"password\" name=\"password\"><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    <?php\n}\n```"]}
