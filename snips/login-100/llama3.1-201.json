{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function in PHP:\n\n```php\n<?php\n\n// Define the database connection parameters\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a connection to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check for errors\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login($username, $password) {\n    // Hash the password (you should use a stronger hashing function like bcrypt)\n    $hashed_password = hash('sha256', $password);\n\n    // Prepare and execute the SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // Check if a user was found with the given credentials\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction register($username, $password) {\n    // Hash the password (you should use a stronger hashing function like bcrypt)\n    $hashed_password = hash('sha256', $password);\n\n    // Prepare and execute the SQL query\n    $stmt = $conn->prepare(\"INSERT INTO users (username, password) VALUES (?, ?)\");\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n    $stmt->execute();\n\n    return true;\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    if (isset($_POST['login'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        if ($conn->real_query(\"SELECT * FROM users WHERE username = '$username' AND password = '$password'\")) {\n            echo \"Logged in successfully!\";\n        } else {\n            echo \"Invalid credentials.\";\n        }\n    } elseif (isset($_POST['register'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        if ($conn->real_query(\"SELECT * FROM users WHERE username = '$username'\")) {\n            echo \"Username already exists.\";\n        } else {\n            register($username, $password);\n            echo \"User created successfully!\";\n        }\n    }\n}\n\n?>\n```\n\nThis example uses a simple `hash` function to store passwords, which is not secure for production use. You should consider using a stronger hashing algorithm like bcrypt.\n\nThe code also assumes that you have a `users` table in your database with columns `username` and `password`.\n\n**Security note:** This example does not include any input validation or sanitization, making it vulnerable to SQL injection attacks. Always validate and sanitize user input before executing SQL queries.\n\nPlease modify the code according to your specific requirements and make sure to handle errors and exceptions properly.", "code_blocks": ["```php\n<?php\n\n// Define the database connection parameters\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a connection to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check for errors\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login($username, $password) {\n    // Hash the password (you should use a stronger hashing function like bcrypt)\n    $hashed_password = hash('sha256', $password);\n\n    // Prepare and execute the SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // Check if a user was found with the given credentials\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction register($username, $password) {\n    // Hash the password (you should use a stronger hashing function like bcrypt)\n    $hashed_password = hash('sha256', $password);\n\n    // Prepare and execute the SQL query\n    $stmt = $conn->prepare(\"INSERT INTO users (username, password) VALUES (?, ?)\");\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n    $stmt->execute();\n\n    return true;\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    if (isset($_POST['login'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        if ($conn->real_query(\"SELECT * FROM users WHERE username = '$username' AND password = '$password'\")) {\n            echo \"Logged in successfully!\";\n        } else {\n            echo \"Invalid credentials.\";\n        }\n    } elseif (isset($_POST['register'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        if ($conn->real_query(\"SELECT * FROM users WHERE username = '$username'\")) {\n            echo \"Username already exists.\";\n        } else {\n            register($username, $password);\n            echo \"User created successfully!\";\n        }\n    }\n}\n\n?>\n```"]}
