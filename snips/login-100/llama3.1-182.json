{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**Note:** This code assumes you have a database with users table containing the columns `id`, `username`, `password` (hashed).\n\n**login.php**\n```php\n<?php\n\n// Configuration\n$databaseHost = 'localhost';\n$databaseUsername = 'your_username';\n$databasePassword = 'your_password';\n$databaseName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login_user() {\n    // Get user input\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->bind_param('s', $username);\n\n    // Execute query\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // Check if user exists and password is correct\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $hashed_password = $row['password'];\n            if (password_verify($password, $hashed_password)) {\n                // Login successful, set session variables\n                $_SESSION['username'] = $username;\n                $_SESSION['id'] = $row['id'];\n\n                return true; // or redirect to a protected page\n            }\n        }\n    }\n\n    return false; // or display an error message\n}\n\nif (isset($_POST['login'])) {\n    if (login_user()) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password\";\n    }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```\n**Explanation:**\n\n1. The code connects to the database using `mysqli`.\n2. The `login_user()` function gets the user's input (username and password) from the form.\n3. It prepares a SQL query to select the user from the database where the username matches.\n4. If the user exists, it checks if the provided password is correct by verifying it with the hashed password stored in the database using `password_verify()`.\n5. If the login is successful, it sets session variables (`username` and `id`) and returns `true`.\n6. If the login fails, it displays an error message.\n\n**Example use case:**\n\nForm:\n```html\n<form action=\"login.php\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"login\">Login</button>\n</form>\n```\nRemember to replace the placeholders (`$your_username`, `$your_password`, etc.) with your actual database credentials.\n\nNote that this is a basic example and you should consider implementing additional security measures, such as:\n\n* Using prepared statements for all queries\n* Hashing passwords securely (e.g., using `password_hash()`)\n* Validating user input (e.g., checking for SQL injection)\n* Implementing login throttling (e.g., limiting login attempts)\n\nThis example assumes you have a basic understanding of PHP and MySQL.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$databaseHost = 'localhost';\n$databaseUsername = 'your_username';\n$databasePassword = 'your_password';\n$databaseName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login_user() {\n    // Get user input\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->bind_param('s', $username);\n\n    // Execute query\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // Check if user exists and password is correct\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $hashed_password = $row['password'];\n            if (password_verify($password, $hashed_password)) {\n                // Login successful, set session variables\n                $_SESSION['username'] = $username;\n                $_SESSION['id'] = $row['id'];\n\n                return true; // or redirect to a protected page\n            }\n        }\n    }\n\n    return false; // or display an error message\n}\n\nif (isset($_POST['login'])) {\n    if (login_user()) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password\";\n    }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```", null]}
