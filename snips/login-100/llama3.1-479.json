{"prompt": "Create a user login function using php", "llm_output": "Here's an example of how to create a simple user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration\n$database = 'users.db';\n$usernameField = 'username';\n$passwordField = 'password';\n\n// Function to check if the username exists\nfunction checkUsernameExists($conn, $username) {\n  $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  return ($stmt->rowCount() > 0);\n}\n\n// Function to login a user\nfunction loginUser($conn, $username, $password) {\n  if (checkUsernameExists($conn, $username)) {\n    // Get the password from the database\n    $stmt = $conn->prepare('SELECT password FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    $row = $stmt->fetch();\n    \n    if (password_verify($password, $row['password'])) {\n      // User is logged in\n      return true;\n    } else {\n      // Incorrect password\n      return false;\n    }\n  } else {\n    // Username does not exist\n    return false;\n  }\n}\n\n// Connect to the database\n$conn = new PDO('sqlite:' . $database);\n\n// Process login form submission\nif (isset($_POST['username']) && isset($_POST['password'])) {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  if (loginUser($conn, $username, $password)) {\n    // User is logged in, redirect to dashboard\n    header('Location: dashboard.php');\n    exit;\n  } else {\n    // Incorrect login credentials, display error message\n    echo 'Incorrect username or password';\n  }\n} else {\n  // Display login form\n  ?>\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Username: <input type=\"text\" name=\"username\"><br>\n    Password: <input type=\"password\" name=\"password\"><br>\n    <input type=\"submit\" value=\"Login\">\n  </form>\n  <?php\n}\n```\n**Explanation**\n\nThis script uses a SQLite database to store user credentials. The `checkUsernameExists` function checks if the username exists in the database, while the `loginUser` function attempts to login a user using their provided username and password.\n\nThe `loginUser` function first checks if the username exists using the `checkUsernameExists` function. If it does, it retrieves the stored password from the database and uses PHP's built-in `password_verify` function to check if the provided password matches the stored one.\n\nIf the login is successful, the script redirects the user to a dashboard page (not included in this example). Otherwise, it displays an error message.\n\nNote that this script assumes you have created a SQLite database file named `users.db` with a table named `users` containing the username and password fields. You will need to modify the configuration variables at the top of the script to match your own setup.\n\nAlso note that this is a very basic example, and in a real-world application, you should use prepared statements to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n// Configuration\n$database = 'users.db';\n$usernameField = 'username';\n$passwordField = 'password';\n\n// Function to check if the username exists\nfunction checkUsernameExists($conn, $username) {\n  $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  return ($stmt->rowCount() > 0);\n}\n\n// Function to login a user\nfunction loginUser($conn, $username, $password) {\n  if (checkUsernameExists($conn, $username)) {\n    // Get the password from the database\n    $stmt = $conn->prepare('SELECT password FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    $row = $stmt->fetch();\n    \n    if (password_verify($password, $row['password'])) {\n      // User is logged in\n      return true;\n    } else {\n      // Incorrect password\n      return false;\n    }\n  } else {\n    // Username does not exist\n    return false;\n  }\n}\n\n// Connect to the database\n$conn = new PDO('sqlite:' . $database);\n\n// Process login form submission\nif (isset($_POST['username']) && isset($_POST['password'])) {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  if (loginUser($conn, $username, $password)) {\n    // User is logged in, redirect to dashboard\n    header('Location: dashboard.php');\n    exit;\n  } else {\n    // Incorrect login credentials, display error message\n    echo 'Incorrect username or password';\n  }\n} else {\n  // Display login form\n  ?>\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Username: <input type=\"text\" name=\"username\"><br>\n    Password: <input type=\"password\" name=\"password\"><br>\n    <input type=\"submit\" value=\"Login\">\n  </form>\n  <?php\n}\n```"]}
