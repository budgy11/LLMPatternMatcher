{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration\n$databaseHost = 'localhost';\n$databaseName = 'mydatabase';\n$databaseUsername = 'myusername';\n$databasePassword = 'mypassword';\n\n// Connect to the database\n$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login_user($username, $password) {\n    global $conn;\n    \n    // Sanitize input data\n    $username = mysqli_real_escape_string($conn, $username);\n    $password = mysqli_real_escape_string($conn, $password);\n\n    // SQL query to check user credentials\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n    \n    // Execute the query\n    $result = $conn->query($sql);\n\n    // Check if any rows were returned\n    if ($result->num_rows > 0) {\n        // Get the user data from the result set\n        $row = $result->fetch_assoc();\n\n        // If we found a match, return an array of user data\n        return array(\n            'id' => $row['id'],\n            'username' => $row['username']\n        );\n    } else {\n        // No match was found. Return null.\n        return null;\n    }\n}\n\n// Handle POST request to login\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Call the login_user function with the provided credentials\n    $user_data = login_user($username, $password);\n\n    if ($user_data !== null) {\n        // If we found a match, redirect to protected area\n        header('Location: /protected_area');\n        exit;\n    } else {\n        // Display error message\n        echo 'Invalid username or password';\n    }\n}\n?>\n```\n**index.php (example login form)**\n```php\n<?php include 'login.php'; ?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login Form</title>\n</head>\n<body>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```\nThis example uses the `mysqli` extension to connect to a MySQL database. The `login_user` function takes in two parameters, `$username` and `$password`, which are used to execute an SQL query against the `users` table. If a match is found, the function returns an array of user data; otherwise, it returns `null`.\n\nIn the example login form (`index.php`), we include the `login.php` file, which defines the `login_user` function and sets up the database connection.\n\nWhen the user submits the login form, the PHP script checks whether a match was found in the database. If so, it redirects the user to the protected area using an HTTP header (`Location`); otherwise, it displays an error message.\n\n**Important notes:**\n\n* This is a very basic example and should not be used as-is for production use. You should always follow best practices for securing passwords (e.g., using password hashing algorithms like bcrypt).\n* Make sure to update the database connection settings in `login.php` with your actual database credentials.\n* You'll need to modify the SQL query in `login_user` function to match your specific database schema.", "code_blocks": ["```php\n<?php\n// Configuration\n$databaseHost = 'localhost';\n$databaseName = 'mydatabase';\n$databaseUsername = 'myusername';\n$databasePassword = 'mypassword';\n\n// Connect to the database\n$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login_user($username, $password) {\n    global $conn;\n    \n    // Sanitize input data\n    $username = mysqli_real_escape_string($conn, $username);\n    $password = mysqli_real_escape_string($conn, $password);\n\n    // SQL query to check user credentials\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n    \n    // Execute the query\n    $result = $conn->query($sql);\n\n    // Check if any rows were returned\n    if ($result->num_rows > 0) {\n        // Get the user data from the result set\n        $row = $result->fetch_assoc();\n\n        // If we found a match, return an array of user data\n        return array(\n            'id' => $row['id'],\n            'username' => $row['username']\n        );\n    } else {\n        // No match was found. Return null.\n        return null;\n    }\n}\n\n// Handle POST request to login\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Call the login_user function with the provided credentials\n    $user_data = login_user($username, $password);\n\n    if ($user_data !== null) {\n        // If we found a match, redirect to protected area\n        header('Location: /protected_area');\n        exit;\n    } else {\n        // Display error message\n        echo 'Invalid username or password';\n    }\n}\n?>\n```", "```php\n<?php include 'login.php'; ?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login Form</title>\n</head>\n<body>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```"]}
