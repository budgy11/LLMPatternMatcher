{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nHere is an example of a simple user login function in PHP. This function uses prepared statements to prevent SQL injection attacks.\n\n**database.php (configuration file)**\n```php\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n?>\n```\n\n**login.php (login function)**\n```php\n<?php\n\n// Include configuration file\nrequire_once 'database.php';\n\n// Connect to database\n$conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USERNAME, DB_PASSWORD);\n\n// Check if user is already logged in\nif (isset($_SESSION['user_id'])) {\n    header('Location: dashboard.php');\n    exit;\n}\n\n// Process login form data\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Query database to check user credentials\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        // Check password\n        if (password_verify($password, $user_data['password'])) {\n            // Log user in\n            $_SESSION['user_id'] = $user_data['id'];\n            $_SESSION['username'] = $user_data['username'];\n\n            header('Location: dashboard.php');\n            exit;\n        } else {\n            echo 'Invalid password';\n        }\n    } else {\n        echo 'Invalid username';\n    }\n}\n\n?>\n```\n\n**login.html (login form)**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <form action=\"login.php\" method=\"post\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"><br><br>\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```\n\n**Usage:**\n\n1. Create a new file called `database.php` and add your database configuration details.\n2. Create a new file called `login.php` and add the code above.\n3. Create a new file called `login.html` and add the HTML form above.\n4. Save all files in the same directory.\n5. Run the script by accessing `http://localhost/login.html` in your web browser.\n\n**Note:**\n\n* This is a basic example to illustrate how to create a user login function using PHP.\n* Make sure to replace the placeholders (`your_username`, `your_password`, etc.) with your actual database credentials.\n* You should also consider implementing additional security measures such as password hashing and salting, and input validation.\n* Always use prepared statements to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n?>\n```", "```php\n<?php\n\n// Include configuration file\nrequire_once 'database.php';\n\n// Connect to database\n$conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USERNAME, DB_PASSWORD);\n\n// Check if user is already logged in\nif (isset($_SESSION['user_id'])) {\n    header('Location: dashboard.php');\n    exit;\n}\n\n// Process login form data\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Query database to check user credentials\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        // Check password\n        if (password_verify($password, $user_data['password'])) {\n            // Log user in\n            $_SESSION['user_id'] = $user_data['id'];\n            $_SESSION['username'] = $user_data['username'];\n\n            header('Location: dashboard.php');\n            exit;\n        } else {\n            echo 'Invalid password';\n        }\n    } else {\n        echo 'Invalid username';\n    }\n}\n\n?>\n```", null]}
