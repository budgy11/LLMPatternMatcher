{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis example demonstrates a basic user login function in PHP, including password hashing and verification.\n\n### database.php\n```php\n<?php\n\nclass Database {\n    private $conn;\n\n    public function __construct() {\n        $this->conn = new mysqli('localhost', 'username', 'password', 'database');\n        if ($this->conn->connect_error) {\n            die(\"Connection failed: \" . $this->conn->connect_error);\n        }\n    }\n\n    public function query($sql, $params = []) {\n        if (!empty($params)) {\n            $stmt = $this->conn->prepare($sql);\n            foreach ($params as $key => $value) {\n                $stmt->bind_param($key, $value);\n            }\n            $stmt->execute();\n            return $stmt->get_result();\n        } else {\n            return $this->conn->query($sql);\n        }\n    }\n\n    public function close() {\n        $this->conn->close();\n    }\n}\n\n?>\n```\n### login.php\n```php\n<?php\n\nrequire_once 'database.php';\n\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $db = new Database();\n\n    // Hash the password using a secure hashing algorithm (e.g. bcrypt)\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Check if user exists\n    $sql = \"SELECT * FROM users WHERE username = ?\";\n    $stmt = $db->query($sql, ['s', $username]);\n    $result = $stmt->fetch_assoc();\n\n    if ($result) {\n        // Verify the hashed password\n        if (password_verify($password, $result['password'])) {\n            // User login successful\n            session_start();\n            $_SESSION['username'] = $username;\n            header('Location: dashboard.php');\n            exit;\n        } else {\n            // Incorrect password\n            echo 'Incorrect password';\n        }\n    } else {\n        // User not found\n        echo 'User not found';\n    }\n\n    $db->close();\n}\n\n?>\n```\n### login.html\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login</title>\n</head>\n<body>\n    <form action=\"\" method=\"post\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" name=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```\n### dashboard.php\n```php\n<?php\n\nrequire_once 'database.php';\n\nsession_start();\n\nif (isset($_SESSION['username'])) {\n    echo \"Welcome, \" . $_SESSION['username'] . \"!\";\n\n} else {\n    header('Location: login.php');\n    exit;\n}\n\n?>\n```\nThis example demonstrates a basic user login function in PHP. The `login.php` script checks if the user exists and verifies their password using a secure hashing algorithm (e.g., bcrypt). If the login is successful, it sets a session variable for the username and redirects to the dashboard.\n\nNote:\n\n*   This is a simplified example and should not be used as-is in production. You should consider implementing additional security measures such as salting passwords, validating user input, and securing your database.\n*   The `database.php` script establishes a connection to your database using `mysqli`. Make sure to replace the placeholders (`'username'`, `'password'`, `'database'`) with your actual database credentials.\n\nI hope this helps you get started with creating a user login function in PHP!", "code_blocks": ["```php\n<?php\n\nclass Database {\n    private $conn;\n\n    public function __construct() {\n        $this->conn = new mysqli('localhost', 'username', 'password', 'database');\n        if ($this->conn->connect_error) {\n            die(\"Connection failed: \" . $this->conn->connect_error);\n        }\n    }\n\n    public function query($sql, $params = []) {\n        if (!empty($params)) {\n            $stmt = $this->conn->prepare($sql);\n            foreach ($params as $key => $value) {\n                $stmt->bind_param($key, $value);\n            }\n            $stmt->execute();\n            return $stmt->get_result();\n        } else {\n            return $this->conn->query($sql);\n        }\n    }\n\n    public function close() {\n        $this->conn->close();\n    }\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'database.php';\n\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $db = new Database();\n\n    // Hash the password using a secure hashing algorithm (e.g. bcrypt)\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Check if user exists\n    $sql = \"SELECT * FROM users WHERE username = ?\";\n    $stmt = $db->query($sql, ['s', $username]);\n    $result = $stmt->fetch_assoc();\n\n    if ($result) {\n        // Verify the hashed password\n        if (password_verify($password, $result['password'])) {\n            // User login successful\n            session_start();\n            $_SESSION['username'] = $username;\n            header('Location: dashboard.php');\n            exit;\n        } else {\n            // Incorrect password\n            echo 'Incorrect password';\n        }\n    } else {\n        // User not found\n        echo 'User not found';\n    }\n\n    $db->close();\n}\n\n?>\n```", null, "```php\n<?php\n\nrequire_once 'database.php';\n\nsession_start();\n\nif (isset($_SESSION['username'])) {\n    echo \"Welcome, \" . $_SESSION['username'] . \"!\";\n\n} else {\n    header('Location: login.php');\n    exit;\n}\n\n?>\n```"]}
