{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$dbname = 'users_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Establish database connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check if connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define user login function\nfunction user_login($username, $password) {\n    global $conn;\n    \n    // Escape and sanitize input\n    $username = mysqli_real_escape_string($conn, $username);\n    $password = mysqli_real_escape_string($conn, $password);\n\n    // Query to check if user exists\n    $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n    \n    // Execute query and get result\n    $result = $conn->query($query);\n    \n    // Check if user was found\n    if ($result->num_rows > 0) {\n        // If user exists, return true to indicate successful login\n        return true;\n    } else {\n        // If user does not exist or password is incorrect, return false\n        return false;\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (user_login($username, $password)) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n?>\n```\nThis script assumes you have a database table named `users` with columns for `username` and `password`. The function takes in two parameters: `$username` and `$password`, which are used to query the database.\n\n**Security notes:**\n\n* This is a very basic example, and you should never store passwords in plain text (i.e., as strings). Instead, use a secure hashing algorithm like bcrypt or PBKDF2.\n* The script uses `mysqli_real_escape_string()` to escape input, but this is not foolproof. Consider using prepared statements for improved security.\n* Always validate user input on the client-side and server-side.\n\n**Example usage:**\n\nTo test the function, you can create an HTML form with two input fields (username and password) and submit them to `login.php`:\n```html\n<form action=\"login.php\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\">Login</button>\n</form>\n```\nWhen the user submits the form, the `user_login()` function will be called with their input values. If the login is successful, the script will echo \"Login successful!\". Otherwise, it will display an error message.\n\nRemember to adapt this example to your specific database schema and security requirements.", "code_blocks": ["```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$dbname = 'users_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Establish database connection\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check if connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define user login function\nfunction user_login($username, $password) {\n    global $conn;\n    \n    // Escape and sanitize input\n    $username = mysqli_real_escape_string($conn, $username);\n    $password = mysqli_real_escape_string($conn, $password);\n\n    // Query to check if user exists\n    $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n    \n    // Execute query and get result\n    $result = $conn->query($query);\n    \n    // Check if user was found\n    if ($result->num_rows > 0) {\n        // If user exists, return true to indicate successful login\n        return true;\n    } else {\n        // If user does not exist or password is incorrect, return false\n        return false;\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (user_login($username, $password)) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n?>\n```", null]}
