{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login function in PHP:\n\n```php\n<?php\n\n// Define the database connection details\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    // Establish a connection to the database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\nfunction login($username, $password) {\n    global $conn;\n\n    // Prepare a SQL query to retrieve the user's password\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n\n    // Bind the parameters\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch the user data\n    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user_data) {\n        // Hash the provided password and compare it with the stored one\n        if (password_verify($password, $user_data['password'])) {\n            // Successful login, return true and the user's ID\n            session_start();\n            $_SESSION['username'] = $username;\n            $_SESSION['user_id'] = $user_data['id'];\n            return true;\n        } else {\n            // Incorrect password\n            echo \"Incorrect password\";\n            return false;\n        }\n    } else {\n        // User not found\n        echo \"User not found\";\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login($username, $password)) {\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        echo \"Invalid credentials\";\n    }\n}\n\n?>\n```\n\n**Security Notes**\n\n1.  **Password Hashing:** The `password_verify()` function is used to compare the provided password with the stored hashed version.\n2.  **SQL Injection Protection:** Prepared statements and parameter binding are used to prevent SQL injection attacks.\n3.  **User Data Storage:** User passwords should be stored securely, ideally using a strong hashing algorithm like Argon2.\n\n**Database Schema**\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL UNIQUE,\n    password VARCHAR(255) NOT NULL\n);\n```\n\nRemember to replace the placeholders (`your_database_name`, `your_username`, and `your_password`) with your actual database credentials. This code is a basic example, and you should adapt it to fit your specific requirements.", "code_blocks": ["```php\n<?php\n\n// Define the database connection details\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    // Establish a connection to the database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\nfunction login($username, $password) {\n    global $conn;\n\n    // Prepare a SQL query to retrieve the user's password\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n\n    // Bind the parameters\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch the user data\n    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user_data) {\n        // Hash the provided password and compare it with the stored one\n        if (password_verify($password, $user_data['password'])) {\n            // Successful login, return true and the user's ID\n            session_start();\n            $_SESSION['username'] = $username;\n            $_SESSION['user_id'] = $user_data['id'];\n            return true;\n        } else {\n            // Incorrect password\n            echo \"Incorrect password\";\n            return false;\n        }\n    } else {\n        // User not found\n        echo \"User not found\";\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login($username, $password)) {\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        echo \"Invalid credentials\";\n    }\n}\n\n?>\n```", null]}
