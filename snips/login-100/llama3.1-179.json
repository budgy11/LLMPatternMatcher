{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP. This example uses a MySQL database to store usernames and passwords.\n\n**Note:** This is a simple example for educational purposes only. In a real-world application, you should use a more secure method to store passwords (e.g., hashing with bcrypt) and handle sessions securely.\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database_name');\n\n// Connect to the database\nfunction dbConnect() {\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n    \n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    \n    return $conn;\n}\n\n// Login function\nfunction login($username, $password) {\n    // Connect to the database\n    $conn = dbConnect();\n    \n    // SQL query to get user data\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    \n    if ($result = $conn->query($query)) {\n        while ($row = $result->fetch_assoc()) {\n            // If password is correct, return the user ID\n            if (password_verify($password, $row['password'])) {\n                return $row;\n            }\n        }\n        \n        // Close the database connection\n        $conn->close();\n        \n        // Password was incorrect or username not found\n        return null;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return null;\n    }\n}\n\n// Example usage:\n$username = 'example_user';\n$password = 'password';\n\n$result = login($username, $password);\n\nif ($result !== null) {\n    // Login successful!\n    echo \"Welcome, {$result['username']}!\";\n} else {\n    // Login failed\n    echo \"Invalid username or password.\";\n}\n?>\n```\n\n**Example use cases:**\n\n1. **Login form**: Create an HTML form that submits the `username` and `password` to a PHP script.\n2. **Secure API endpoint**: Use this function as part of an API endpoint to authenticate users.\n\nRemember to adjust the database configuration (`DB_HOST`, `DB_USERNAME`, etc.) and user data storage (in this example, we're using a simple `users` table with `username` and `password` columns) to fit your specific use case.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database_name');\n\n// Connect to the database\nfunction dbConnect() {\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n    \n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    \n    return $conn;\n}\n\n// Login function\nfunction login($username, $password) {\n    // Connect to the database\n    $conn = dbConnect();\n    \n    // SQL query to get user data\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    \n    if ($result = $conn->query($query)) {\n        while ($row = $result->fetch_assoc()) {\n            // If password is correct, return the user ID\n            if (password_verify($password, $row['password'])) {\n                return $row;\n            }\n        }\n        \n        // Close the database connection\n        $conn->close();\n        \n        // Password was incorrect or username not found\n        return null;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return null;\n    }\n}\n\n// Example usage:\n$username = 'example_user';\n$password = 'password';\n\n$result = login($username, $password);\n\nif ($result !== null) {\n    // Login successful!\n    echo \"Welcome, {$result['username']}!\";\n} else {\n    // Login failed\n    echo \"Invalid username or password.\";\n}\n?>\n```"]}
