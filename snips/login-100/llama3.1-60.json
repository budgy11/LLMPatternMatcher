{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis example demonstrates a simple user login function using PHP. It includes basic validation and encryption for password storage.\n\n### Configuration\n\nFirst, you need to configure the database connection:\n\n```php\n// db_config.php\n\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n?>\n```\n\n### User Model\n\nCreate a user model to store and validate user data:\n\n```php\n// models/User.php\n\n<?php\n\nclass User {\n    private $id;\n    private $username;\n    private $password;\n\n    public function __construct($data) {\n        $this->id = $data['id'];\n        $this->username = $data['username'];\n        $this->password = password_hash($data['password'], PASSWORD_DEFAULT);\n    }\n\n    public static function findUserByUsername($username) {\n        // Retrieve user data from database\n        global $db;\n        $stmt = $db->prepare(\"SELECT * FROM users WHERE username = ?\");\n        $stmt->execute([$username]);\n        return $stmt->fetch();\n    }\n}\n```\n\n### Login Function\n\nCreate a login function to handle user authentication:\n\n```php\n// controllers/Login.php\n\n<?php\n\nclass Login {\n    public static function processLogin($username, $password) {\n        // Retrieve user data from database\n        $user = User::findUserByUsername($username);\n\n        if ($user !== false && password_verify($password, $user['password'])) {\n            // Successful login: store user data in session\n            $_SESSION['id'] = $user['id'];\n            $_SESSION['username'] = $user['username'];\n\n            return true;\n        } else {\n            // Invalid username or password\n            return false;\n        }\n    }\n}\n```\n\n### Example Usage\n\nUse the `Login` class to handle user login attempts:\n\n```php\n// index.php (example usage)\n\n<?php\n\nrequire_once 'db_config.php';\nrequire_once 'models/User.php';\nrequire_once 'controllers/Login.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (Login::processLogin($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n```\n\n**Security Notes**\n\n* Use a secure password hashing algorithm like `PASSWORD_DEFAULT` to store passwords.\n* Always validate user input data before processing it.\n* Keep sensitive data like database credentials and passwords separate from your codebase.\n\nThis example demonstrates basic user login functionality. You can extend this implementation with additional features, such as authentication using sessions or tokens.", "code_blocks": ["```php\n// db_config.php\n\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n?>\n```", "```php\n// models/User.php\n\n<?php\n\nclass User {\n    private $id;\n    private $username;\n    private $password;\n\n    public function __construct($data) {\n        $this->id = $data['id'];\n        $this->username = $data['username'];\n        $this->password = password_hash($data['password'], PASSWORD_DEFAULT);\n    }\n\n    public static function findUserByUsername($username) {\n        // Retrieve user data from database\n        global $db;\n        $stmt = $db->prepare(\"SELECT * FROM users WHERE username = ?\");\n        $stmt->execute([$username]);\n        return $stmt->fetch();\n    }\n}\n```", "```php\n// controllers/Login.php\n\n<?php\n\nclass Login {\n    public static function processLogin($username, $password) {\n        // Retrieve user data from database\n        $user = User::findUserByUsername($username);\n\n        if ($user !== false && password_verify($password, $user['password'])) {\n            // Successful login: store user data in session\n            $_SESSION['id'] = $user['id'];\n            $_SESSION['username'] = $user['username'];\n\n            return true;\n        } else {\n            // Invalid username or password\n            return false;\n        }\n    }\n}\n```", "```php\n// index.php (example usage)\n\n<?php\n\nrequire_once 'db_config.php';\nrequire_once 'models/User.php';\nrequire_once 'controllers/Login.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (Login::processLogin($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n```"]}
