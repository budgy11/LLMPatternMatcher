{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n```php\n<?php\n\n// Configuration settings\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Function to connect to the database and check credentials\nfunction authenticateUser($username, $password) {\n  try {\n    // Connect to the database using PDO\n    $pdo = new PDO($dsn, $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare a SQL query to retrieve user data\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch the user data from the database\n    $userData = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    // If a user is found, check their password\n    if ($userData) {\n      // Hash the provided password and compare it to the stored hash\n      $passwordHash = md5($password);\n      if ($passwordHash === $userData['password']) {\n        // User authenticated successfully, return true\n        return true;\n      } else {\n        // Password incorrect, return false\n        return false;\n      }\n    } else {\n      // No user found with that username, return false\n      return false;\n    }\n\n  } catch (PDOException $e) {\n    // Handle any database errors\n    echo 'Error connecting to the database: ' . $e->getMessage();\n    return false;\n  }\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  if (authenticateUser($username, $password)) {\n    // User authenticated successfully, log them in\n    session_start();\n    $_SESSION['username'] = $username;\n    header('Location: /dashboard');\n  } else {\n    // Authentication failed, display error message\n    echo 'Invalid username or password';\n  }\n}\n```\nThis code defines a function `authenticateUser` that takes two arguments: the user's username and password. It connects to a MySQL database using PDO and prepares a SQL query to retrieve the user data. If the user is found, it hashes the provided password and compares it to the stored hash.\n\nIf the authentication is successful, it returns true; otherwise, it returns false.\n\nThe example usage at the bottom shows how to call this function with form input from a login page.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Function to connect to the database and check credentials\nfunction authenticateUser($username, $password) {\n  try {\n    // Connect to the database using PDO\n    $pdo = new PDO($dsn, $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare a SQL query to retrieve user data\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch the user data from the database\n    $userData = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    // If a user is found, check their password\n    if ($userData) {\n      // Hash the provided password and compare it to the stored hash\n      $passwordHash = md5($password);\n      if ($passwordHash === $userData['password']) {\n        // User authenticated successfully, return true\n        return true;\n      } else {\n        // Password incorrect, return false\n        return false;\n      }\n    } else {\n      // No user found with that username, return false\n      return false;\n    }\n\n  } catch (PDOException $e) {\n    // Handle any database errors\n    echo 'Error connecting to the database: ' . $e->getMessage();\n    return false;\n  }\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  if (authenticateUser($username, $password)) {\n    // User authenticated successfully, log them in\n    session_start();\n    $_SESSION['username'] = $username;\n    header('Location: /dashboard');\n  } else {\n    // Authentication failed, display error message\n    echo 'Invalid username or password';\n  }\n}\n```"]}
