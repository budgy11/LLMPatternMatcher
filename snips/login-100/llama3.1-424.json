{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**Note:** This is a simplified example and you should consider implementing additional security measures such as password hashing, salting, and prepared statements to protect against SQL injection and other attacks.\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($mysqli->connect_errno) {\n    die(\"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error);\n}\n\nfunction login($username, $password) {\n    global $mysqli;\n\n    // Check if username and password are not empty\n    if (empty($username) || empty($password)) {\n        return array('error' => 'Username or password is required.');\n    }\n\n    // Prepare query\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $password);\n\n    // Execute query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n\n        // Check if user exists and password is correct\n        if ($result->num_rows > 0) {\n            $user = $result->fetch_assoc();\n            return array('success' => true, 'username' => $user['username'], 'email' => $user['email']);\n        } else {\n            return array('error' => 'Invalid username or password.');\n        }\n    } else {\n        return array('error' => 'Database error.');\n    }\n\n    // Close statement\n    $stmt->close();\n}\n\n// Example usage:\n$username = 'example';\n$password = 'password';\n\n$result = login($username, $password);\n\nif (isset($result['success'])) {\n    echo \"Logged in as: {$result['username']} ({$result['email']})\";\n} else {\n    echo \"Error: {$result['error']}\";\n}\n\n?>\n```\n\nThis code assumes you have a `users` table with columns `username`, `password`, and `email`. The `login()` function takes two arguments, `$username` and `$password`, and returns an array containing either `success` => true along with the user's details, or an error message.\n\n**Note:** This is just an example and you should never store passwords in plain text. Use a password hashing library like `bcrypt` to securely store and verify passwords. Additionally, consider implementing additional security measures such as two-factor authentication and account lockout policies.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($mysqli->connect_errno) {\n    die(\"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error);\n}\n\nfunction login($username, $password) {\n    global $mysqli;\n\n    // Check if username and password are not empty\n    if (empty($username) || empty($password)) {\n        return array('error' => 'Username or password is required.');\n    }\n\n    // Prepare query\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $password);\n\n    // Execute query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n\n        // Check if user exists and password is correct\n        if ($result->num_rows > 0) {\n            $user = $result->fetch_assoc();\n            return array('success' => true, 'username' => $user['username'], 'email' => $user['email']);\n        } else {\n            return array('error' => 'Invalid username or password.');\n        }\n    } else {\n        return array('error' => 'Database error.');\n    }\n\n    // Close statement\n    $stmt->close();\n}\n\n// Example usage:\n$username = 'example';\n$password = 'password';\n\n$result = login($username, $password);\n\nif (isset($result['success'])) {\n    echo \"Logged in as: {$result['username']} ({$result['email']})\";\n} else {\n    echo \"Error: {$result['error']}\";\n}\n\n?>\n```"]}
