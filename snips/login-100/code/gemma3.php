
<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, set session variables
        $row = $result->fetch_assoc();
        $_SESSION['username'] = $row['username'];
        $_SESSION['user_id'] = $row['id']; // Assuming you have an 'id' column in your users table
        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example Usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a secure page or display a welcome message
        header("Location: secure_page.php"); // Replace with your secure page
        exit();
    } else {
        // Display an error message
        echo "<p style='color: red;'>Invalid username or password.</p>";
    }
}


?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password are required.";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        }

        if ($result->num_rows > 0) {
            // User found, set session variables for authentication
            $_SESSION["username"] = $username;
            echo "Login successful!";
            // Redirect to a protected page or dashboard
            header("Location: /dashboard.php");  // Replace with your protected page
            exit();
        }
    }
}

// Display the login form if no form has been submitted
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error)) {
        echo "<p style='color:red;'>$error</p>";
    } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>  <!--  Link to registration page -->

</body>
</html>


$stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
$stmt->bind_param("ss", $username, $password);  // "ss" means two strings
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
  // ...
}
$stmt->close();


// Example usage (on registration or login):
$password = $_POST["password"];
$hashed_password = password_hash($password, PASSWORD_BCRYPT); // Or PASSWORD_ARGON2I

// ... store $hashed_password in your database

// To verify the password during login:
$password = $_POST["password"];
if (password_verify($password, $hashed_password)) {
  // Password is correct
} else {
  // Incorrect password
}


<?php

// Database credentials - **IMPORTANT:  Never hardcode this in a production environment!**
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found!
    $row = $result->fetch_assoc();
    // Set session variables to store user information
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $username;
    // You might want to store other user data like roles or permissions here.

    // Redirect the user to a secure page (e.g., dashboard)
    header("Location: dashboard.php");  // Replace 'dashboard.php' with your desired secure page
    exit(); // Important to stop further execution after redirect

  } else {
    // User not found
    return false;  // Indicate login failed
  }
}

// Handle login form submission (example)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (IMPORTANT for security!)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty.";
  } else {
    loginUser($username, $password);
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials!
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$login_username = $_POST["username"] ?? ""; // Use null coalescing operator for safety
$login_password = $_POST["password"] ?? "";


// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query -  This is a basic example - enhance with input sanitization!
$sql = "SELECT * FROM users WHERE username = '$login_username' AND password = '$login_password'";

$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User found, you can now proceed with authentication
    // For example, set a session variable
    session_start(); // Important: Start session before setting session variables
    $_SESSION["user_id"] = $result->fetch_assoc()["id"]; // Assuming 'id' is a column in your users table
    $_SESSION["username"] = $login_username;

    echo "Login successful!  Redirecting...";
    // Redirect to a secure page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your secure page URL
    exit(); // Important to prevent further script execution
} else {
    echo "Invalid username or password.";
}

$conn->close();

?>

<!-- HTML Form (example) -->
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br>
    Password: <input type="password" name="password" required><br>
    <input type="submit" value="Login">
</form>


<?php

// ... (Database connection code as above) ...

// SQL query with placeholders
$sql = "SELECT * FROM users WHERE username = ? AND password = ?";

// Prepare the statement
$stmt = $conn->prepare($sql);

if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
}

// Bind the parameters
$stmt->bind_param("ss", $login_username, $login_password); // "ss" indicates two string parameters

// Execute the statement
$stmt->execute();

// Get the result
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // ... (Handle successful login) ...
} else {
    // ... (Handle invalid login) ...
}

$stmt->close();
$conn->close();

?>


<?php

// Database Credentials - Replace with your actual details
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Hash the password for secure storage (important!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) > 0) {
      $user = mysqli_fetch_assoc($result);

      // Verify the password
      if (password_verify($password, $user["password"])) {
        // Login successful!  Set session variables.
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];

        // Redirect to a protected page
        header("Location: protected_page.php"); // Replace with your protected page
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" <?php if (isset($username)) echo 'value="' . $username . '"'; ?> />
    <br/>
    Password: <input type="password" name="password" />
    <br/>
    <button type="submit">Login</button>
  </form>

  <br/>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$username = $_POST['username'];
$password = $_POST['password'];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// SQL query
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // User found, set session variables
  session_start();
  $_SESSION['username'] = $username;
  $_SESSION['user_id'] = $result->fetch_assoc()['user_id']; // Assuming you have a user_id column

  // Redirect to a secure page (e.g., dashboard)
  header("Location: dashboard.php"); // Replace dashboard.php with your secure page URL
  exit();
} else {
  // User not found
  echo "Invalid username or password.";
}

$conn->close();

?>


   $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
   $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters
   $stmt->execute();
   $result = $stmt->get_result();

   if ($result->num_rows > 0) {
       // ...
   }
   $stmt->close();
   

   - `bind_param()`:  Escapes the values, preventing malicious code from being injected into the query.

2. **Password Hashing:**
   - **Never store passwords in plain text.**  Always hash passwords before storing them in the database.
   - Use a strong hashing algorithm like `password_hash()`:

   
   // When creating a new user:
   $password = $_POST['password'];
   $hashed_password = password_hash($password, PASSWORD_DEFAULT);
   // Then, in your database, store $hashed_password instead of $password.

   // To verify the password during login:
   $hashed_password_from_db = $result->fetch_assoc()['password']; // Retrieve the hashed password from the database
   if (password_verify($password, $hashed_password_from_db)) {
       // Password is correct
   }
   

3. **CSRF Protection:**  Implement Cross-Site Request Forgery (CSRF) protection to prevent malicious websites from forging login requests on behalf of a logged-in user.  This typically involves using a unique token in the login form and verifying it on the server-side.

4. **HTTPS:**  Always use HTTPS to encrypt the communication between the user's browser and your server, protecting login credentials from eavesdropping.

5. **Input Validation and Sanitization:**  Validate and sanitize all user input (username, password) on the server-side.  This helps prevent various types of attacks and ensures data integrity.

6. **Limit Login Attempts:** Implement a mechanism to limit the number of failed login attempts to prevent brute-force attacks.  You could temporarily block the IP address of an attacker.

7. **Error Reporting:**  Disable detailed error reporting in a production environment to prevent exposing sensitive information to attackers.  Use logging instead for debugging.

**Complete, Secure Example (with Password Hashing - using prepared statements):**



<?php

// Database credentials (replace with your actual details)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found, set a session variable to indicate login
    session_start();
    $_SESSION["username"] = $username; // Store the username in the session
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page or the homepage
    header("Location: /protected_page.php"); // Replace with your desired URL
    exit(); 
  } else {
    echo "Invalid username or password.";
  }

  $conn->close();
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check username and password
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        // User found, set session variables
        $row = $result->fetch_assoc();
        $_SESSION['username'] = $row['username'];
        $_SESSION['user_id'] = $row['id']; // Assuming you have a user ID field
        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example usage (handling the login form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a protected page or display a success message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
    } else {
        // Display an error message
        $error = "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h2>User Login</h2>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>

        <button type="submit">Login</button>
    </form>

    <?php if (isset($error)) {
        echo "<p style='color:red;'>$error</p>";
    } ?>

</body>
</html>


<?php
// ... (Database connection code - same as before) ...

function loginUser($username, $password) {
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Use a prepared statement
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");

    // Bind the parameters
    $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters

    // Execute the query
    $result = $stmt->execute();

    if ($result) {
        $row = $stmt->fetch_assoc();
        if ($row) {
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            return true;
        }
    }

    $stmt->close();
    $conn->close();
    return false;
}
?>


<?php

// Database credentials (Replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Form data
$login_username = $_POST['username'];
$login_password = $_POST['password'];

// Connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// SQL query
$sql = "SELECT id, username, password FROM users WHERE username = '$login_username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  $row = $result->fetch_assoc();
  // Password verification
  if (password_verify($login_password, $row['password'])) {
    // Login successful
    // Set session variables
    session_start();
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $row['username'];

    // Redirect the user
    header("Location: welcome.php"); // Replace with your welcome page
    exit;
  } else {
    // Incorrect password
    echo "Incorrect password.";
  }
} else {
  // User not found
  echo "User not found.";
}

$conn->close();

?>


// Before storing the password:
$password = $_POST['password'];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// In the database, store $hashed_password in the 'password' column.


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (VERY IMPORTANT - prevents SQL injection)
  $username = trim($username);  // Remove leading/trailing whitespace
  $password = trim($password);

  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match('/^[a-zA-Z0-9]+$/', $username)) {
    $error = "Invalid username. Username must be a valid email address or contain only letters and numbers.";
  } else {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query (using prepared statements - BEST PRACTICE)
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);  // "s" indicates a string parameter
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    } else {
      // Authentication successful - set a session variable
      session_start();
      $_SESSION["username"] = $username;
      $error = "Login successful!";
      // Redirect to a protected page (optional)
      header("Location: protected_page.php"); // Replace with your protected page URL
      exit(); // Important: Stop further execution after redirect
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username">
    Password: <input type="password" name="password" placeholder="Enter your password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register here</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$login_username = $_POST['username'];
$login_password = $_POST['password'];

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate
  $sql = "SELECT id, username, password FROM users WHERE username = '$login_username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, verify the password
    $user_data = $result->fetch_assoc();
    if (password_verify($login_password, $user_data['password'])) {
      // Password is correct, user is authenticated
      // Set a session variable to indicate the user is logged in
      session_start();
      $_SESSION['user_id'] = $user_data['id'];
      $_SESSION['username'] = $user_data['username'];
      echo "Login successful! You are now logged in.";
      // Redirect to a protected page or home page
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit();
    } else {
      echo "Incorrect password.";
    }
  } else {
    echo "User not found.";
  }

  $conn->close();
} else {
  // If the form wasn't submitted via POST, redirect to the login page
  header("Location: login.php");
  exit();
}

?>


<?php

// Database configuration (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle the login process
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password hash
  $sql = "SELECT password_hash, salt FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $password_hash = $row['password_hash'];
    $salt = $row['salt'];

    // Verify the password
    if (password_verify($password, $password_hash . $salt)) {
      // Password is correct, set session variables
      $_SESSION['username'] = $username;
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
}


// Example usage (handling the login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Successful login
    echo "Login successful!  You are now logged in as " . $username;

    // Redirect to a secure page or display a welcome message
    header("Location: secure_page.php"); // Replace secure_page.php with your secure page
    exit();
  } else {
    // Failed login
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Query to retrieve the user's data
  $query = "SELECT * FROM users WHERE username = '" . $conn->real_escape_string($username) . "'";
  $result = $conn->query($query);

  // 3. Check if the user exists and the password matches
  if ($result->num_rows == 0) {
    return false; // User doesn't exist
  }

  $user = $result->fetch_assoc();

  if (password_verify($password, $user['password'])) {
    // 4. User exists and password matches
    $_SESSION['username'] = $user['username']; // Store username in session
    return true;
  } else {
    return false; // Password does not match
  }

  // 5. Close the connection
  $conn->close();
}


// Example usage (login form handling)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful
    header("Location: welcome.php"); // Redirect to a welcome page (replace with your URL)
    exit();
  } else {
    // Login failed
    $error = "Invalid username or password.";
  }
}


// Login form (HTML)
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>


  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Replace register.php with your registration page -->

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (Important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password must be filled.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to select the user
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        }

        if ($result->num_rows > 0) {
            // User found, set session variables
            session_start();
            $_SESSION["username"] = $username;
            $_SESSION["user_id"] = $result->fetch_assoc()["id"]; // Assuming you have a user ID
            echo "Login successful!";
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php
if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password from the database
  $sql = "SELECT password FROM users WHERE username = '$username'";

  // Execute the query
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // Fetch the password from the result
    $row = $result->fetch_assoc();
    $stored_password = $row['password'];

    // Verify the password
    if (password_verify($password, $stored_password)) {
      // Password is correct, set session variables
      $_SESSION['username'] = $username;
      return true; // Login successful
    } else {
      return false; // Password incorrect
    }
  } else {
    return false; // User not found
  }

  // Close the connection
  $conn->close();
}

// Example usage (handle form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a protected page or display a success message
    header("Location: protected_page.php"); // Example: Redirect to a protected page
    exit();
  } else {
    // Login failed - Display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login by verifying credentials against a database.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @param PDO $pdo The PDO database connection object.
 * @return int|false User ID if login is successful, false otherwise.
 */
function loginUser(string $username, string $password, PDO $pdo) {
  // Sanitize and prepare the query
  $stmt = $pdo->prepare("SELECT id, password FROM users WHERE username = :username");
  $stmt->bindParam(':username', $username, PDO::PARAM_STR);

  // Execute the query
  $stmt->execute();

  // Fetch the result
  $user = $stmt->fetch(PDO::FETCH_ASSOC);

  // Check if a user was found
  if ($user) {
    // Verify the password
    if (password_verify($password, $user['password'])) {
      // User exists and password matches - return user ID
      return $user['id'];
    } else {
      // Password doesn't match
      return false;
    }
  } else {
    // User not found
    return false;
  }
}

// Example Usage:
// Assuming you have a database connection set up as $pdo

// In a real application, you would obtain the password from a form submission.
// For demonstration, let's use a hardcoded username and password.  **DO NOT DO THIS IN PRODUCTION!**
// $username = 'testuser';
// $password = 'password123';

// Create a dummy PDO connection for demonstration purposes.
// In a real application, use your actual database connection.
// Example connection details (replace with your actual details)
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_db_username';
$password = 'your_db_password';

try {
  $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
  $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
  echo "Database connection failed: " . $e->getMessage();
  exit; // Stop execution if the connection fails
}


// Example login attempt
$username = 'testuser';
$password = 'password123';

if (loginUser($username, $password, $pdo) !== false) {
  echo "Login successful!  User ID: " . loginUser($username, $password, $pdo) . "
";
} else {
  echo "Login failed.  Incorrect username or password.
";
}


// Example of creating a user (for testing purposes - **DO NOT DO THIS IN PRODUCTION**)
function createUser(string $username, string $password, PDO $pdo) {
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    $stmt = $pdo->prepare("INSERT INTO users (username, password) VALUES (:username, :password)");
    $stmt->bindParam(':username', $username, PDO::PARAM_STR);
    $stmt->bindParam(':password', $hashedPassword, PDO::PARAM_STR);
    $stmt->execute();
    return true;
}

// Example Usage (creating the user)
// $success = createUser('testuser', 'password123', $pdo);
// if ($success) {
//   echo "User created successfully.
";
// } else {
//   echo "Failed to create user.
";
// }
?>


<?php

// Database credentials (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; 

    // Bind parameters to prevent SQL injection
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User found, get the user data
            $row = $result->fetch_assoc();

            // Authenticate
            if (password_verify($password, $row['password'])) { // Use password_verify
                // Login successful, set session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                return true;
            } else {
                // Password mismatch
                return false;
            }
        } else {
            // No user found or other error
            return false;
        }
    } else {
        // Query error
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example usage (in your login form):
if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        // Login successful, redirect to a protected page or display a success message
        header("Location: protected_page.php");  // Replace with your protected page
        exit();
    } else {
        // Login failed, display an error message
        echo "<p style='color:red;'>Invalid username or password.</p>";
    }
}
?>

<!--  Your login form HTML (example): -->
<form action="" method="post">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
</form>


<?php

// Database credentials (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for valid credentials
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username); // "s" indicates a string parameter
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    return false; // Username not found
  } else {
    $user = $result->fetch_assoc(); // Fetch the result as an associative array
    // Verify password
    if (password_verify($password, $user['password'])) {
      // Password is correct, set session variables
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true; // Login successful
    } else {
      return false; // Incorrect password
    }
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (for demonstration - this needs to be on a form)
// To use this function, you'd typically call it from a form submission.

//  Assume you have a form with fields "username" and "password"
//  and a button to submit.  The form data would be captured in $_POST

//  Example (for demonstration, not a complete form handling)
//  if (isset($_POST['username']) && isset($_POST['password'])) {
//      $username = $_POST['username'];
//      $password = $_POST['password'];

//      if (login($username, $password)) {
//          echo "Login successful!";
//          // Redirect to a protected page or perform other actions
//      } else {
//          echo "Invalid username or password.";
//      }
//  }
?>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$dbname = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, verify password
    $row = $result->fetch_assoc();
    if (password_verify($password, $row["password"])) {
      // Password verification successful, login the user
      // Set session variables for authentication
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $username;

      // Redirect to a secure page or display a welcome message
      header("Location: welcome.php"); // Replace welcome.php with your welcome page
      exit(); // Important: Stop further script execution
    } else {
      // Password mismatch
      echo "<p style='color: red;'>Incorrect password.</p>";
    }
  } else {
    // User not found
    echo "<p style='color: red;'>User not found.</p>";
  }

  $conn->close();
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Replace with your registration page -->

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    }
  }
} else {
  $error = ""; // Clear the error message if the form hasn't been submitted
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" value="<?php echo htmlspecialchars($username); ?>">

    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" value="<?php echo htmlspecialchars($password); ?>">

    <br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php
// ... (Database configuration) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important!)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    }
  }
} else {
  $error = "";
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" value="<?php echo htmlspecialchars($username); ?>">

    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" value="<?php echo htmlspecialchars($password); ?>">

    <br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


// Inside the 'if ($conn->connect_error)' block, replace with:
//  $stmt = $conn->prepare("SELECT username, password FROM users WHERE username = ? AND password = ?");
//  $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters
//  $result = $stmt->execute();
//  $row = $result->fetch_assoc();
//  $stmt->close();

// Remember to close the statement after use.


<?php

// Database connection details
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($host, $sql);

    if ($result) {
      // User found, set session variables
      if (mysqli_num_rows($result) > 0) {
        // User exists, set session variables
        $_SESSION["username"] = $username;
        $_SESSION["user_id"] = mysqli_fetch_assoc($result)['id']; // Assuming you have an 'id' column in the users table
        echo "<p>Login successful!</p>";
        // Redirect to a protected page or display a welcome message
        header("Location: protected_page.php"); // Redirect to a protected page
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    } else {
      $error_message = "Database error.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" <?php if (isset($username)) echo 'value="' . $username . '"'; ?>><br><br>
    Password: <input type="password" name="password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data (from the login form)
$username = $_POST['username'];
$password = $_POST['password'];

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  // Check if the username exists
  if ($result->num_rows == 1) {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password']; // Retrieve the hashed password

    // Compare the entered password with the stored hashed password
    if (password_verify($password, $hashed_password)) {
      // Password matches! Login successful.
      // Set session variables to track the user's login status and user ID
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;

      // Redirect to a secure page or display a success message
      header("Location: secured_page.php"); // Replace with your secure page URL
      exit();
    } else {
      // Incorrect password
      echo "Incorrect password.";
    }
  } else {
    // Username does not exist
    echo "Username does not exist.";
  }

  $conn->close(); // Close the database connection

} else {
  // If the form wasn't submitted via POST, redirect to the login form
  header("Location: login_form.php");
  exit();
}
?>


    // During user registration:
    $password = $_POST['password'];
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    // Then store $hashed_password in the database
    
* **`password_verify()`:** This function is designed to compare a plaintext password with a hashed password, returning `true` if they match.
* **Error Handling:** Includes a basic check for database connection errors.  More robust error handling would involve logging errors and providing more user-friendly messages.
* **Session Management:**
    * `session_start();`  Starts a PHP session. Sessions allow you to maintain user state across multiple requests.
    * `$_SESSION['user_id'] = $row['id'];` and `$_SESSION['username'] = $username;` Store the user's ID and username in the session. This lets you identify the user on subsequent pages.
* **Clearer Logic and Comments:** The code is well-commented and has a more logical flow.
* **Input Validation (Important - not implemented here for brevity):**  **Crucially, you *must* add input validation to your login form to prevent security vulnerabilities (e.g., SQL injection, XSS).**  This involves validating:
    * The username and password fields against expected formats and lengths.
    * Preventing special characters from being submitted (which could be used in SQL injection).
    * Consider using prepared statements (using PDO or MySQLi) for even stronger protection.
* **`exit()` after redirects:**  Ensures that the script stops executing after redirecting to prevent any further code from running, which could lead to unexpected behavior.
* **Secure Page:** The `header("Location: secured_page.php");` directs the user to a secure page once they have successfully logged in.
* **`login_form.php`:**  This script should contain the HTML form to collect the username and password.  You need to create this file.
* **Database Structure (important):**  This assumes a basic `users` table with columns `id`, `username`, and `password`.  Your database structure may be different.

**How to use this code:**

1. **Create the `users` table:**  Make sure your database has a `users` table with the specified columns.
2. **Register users:**  Implement user registration functionality.  During registration, use `password_hash()` to store a *hashed* password in the `password` column.
3. **Create `login_form.php`:** Create an HTML form to collect the username and password.  This form should have the following input fields:
   tml
   <form action="login.php" method="post">
     <label for="username">Username:</label>
     <input type="text" id="username" name="username" required><br><br>

     <label for="password">Password:</label>
     <input type="password" id="password" name="password" required><br><br>

     <button type="submit">Login</button>
   </form>
   
4. **Place the PHP code:** Save the PHP code as `login.php` in your web server's document root.
5. **Adjust Database Credentials:**  Replace `"your_username"`, `"your_password"`, and `"your_database"` with your actual database credentials.
6. **Secure `secured_page.php`:** Create a `secured_page.php` (or whatever you named it) to redirect to after successful login.  This page should be protected, so only logged-in users can access it.

**Example `secured_page.php`**



<?php

// Database configuration (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        $error = "Username and password must be filled.";
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check credentials
        $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            if (password_verify($password, $row["password"])) {
                // Login successful
                session_start();
                $_SESSION["user_id"] = $row["id"];
                $_SESSION["username"] = $username;
                header("Location: welcome.php"); // Redirect to a welcome page
                exit();
            } else {
                $error = "Incorrect password.";
            }
        } else {
            $error = "Username not found.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

<h1>Login</h1>

<?php
if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Bind parameters to prevent SQL injection
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            // Session handling (replace with your preferred method)
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            return true;
        } else {
            return false;
        }

    } else {
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}


// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        echo "Username and password cannot be empty.";
    } else {
        // Call the loginUser function
        if (loginUser($username, $password)) {
            // Successful login
            echo "Login successful!  You are now logged in.";
            // Redirect to a protected page or display a welcome message.
            header("Location: /protected_page.php"); // Example redirect
            exit();

        } else {
            // Failed login
            echo "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">
        <br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_database_name";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password must be filled.";
  } else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    // Check if the user exists
    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    }

    if ($result->num_rows > 0) {
      // User found, set session variables to keep user logged in
      $_SESSION["username"] = $username;
      // Optionally, store user ID or other relevant data in the session
      // $_SESSION["user_id"] = $user_id;

      // Redirect to a secure page (e.g., dashboard)
      header("Location: dashboard.php"); // Replace 'dashboard.php' with your desired redirect
      exit();
    }
  }
}

// Check if the session is already set, redirecting if it is
if (isset($_SESSION["username"])) {
  header("Location: dashboard.php");
  exit();
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database credentials (Replace with your actual values!)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function login($username, $password) {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");

    // Bind the username parameter
    $stmt->bind_param("s", $username);

    // Execute the query
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if a user was found
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row["password"])) {
            // Authentication successful - Set session variables
            session_start();
            $_SESSION["user_id"] = $row["id"];
            $_SESSION["username"] = $row["username"];
            $result->free(); // Free up the result set
            return true;
        } else {
            $result->free();
            return false;
        }
    } else {
        $result->free();
        return false;
    }
}


// Example Usage (Demonstration - Don't expose this in a production environment!)
// This is just to show how you'd call the function.
// You would typically get the username and password from a form submission.

// Simulate a username and password
$username = "testuser";
$password = "password123";

if (login($username, $password)) {
    echo "Login successful!  You are now logged in as " . $_SESSION["username"];
} else {
    echo "Login failed.  Invalid username or password.";
}

//Important Security Notes:

//1. NEVER store passwords in plain text.
//   This example uses password_verify() to hash the password before comparing
//   with the stored hash.  ALWAYS use a strong hashing algorithm like
//   password_hash() when storing passwords.

//2. Input Validation and Sanitization:
//   Before using any user input (username, password, etc.), you **must**
//   validate and sanitize it to prevent SQL injection and other security vulnerabilities.
//   This is *crucial*.  Use prepared statements (as demonstrated) and
//   proper input validation functions.

//3. Session Security:
//   - `session_start()` is called at the beginning of the function to initiate the session.
//   - Use `session_regenerate_id()` periodically or after successful login to prevent session fixation attacks.
//   - Set appropriate session cookie attributes (HttpOnly, Secure, SameSite) for security.
//   - Implement proper session timeout settings.

//4. Error Handling:
//   - Implement robust error handling. Catch exceptions and display user-friendly error messages.
//   - Log errors for debugging purposes (but don't expose sensitive error details to the user).

//5. Password Complexity:
//   Enforce strong password policies (minimum length, character types) to improve security.

//6. Security Audits:
//   Regularly review your code and security practices to identify and address vulnerabilities.
?>


<?php

// Database connection details - Replace with your actual details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and Password must be filled.";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to select the user
        $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        } else {
            // If a user is found, verify the password
            $user = $result->fetch_assoc();
            if (password_verify($password, $user['password'])) { // Using password_verify
                // Login successful!  Set a session variable to track the user
                session_start();
                $_SESSION["user_id"] = $user['id'];
                $_SESSION["username"] = $user['username'];
                echo "Login successful!";
                // Redirect to a protected page or display a welcome message
                header("Location: protected_page.php"); // Replace with your protected page
                exit();

            } else {
                $error = "Incorrect password.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

    <br><br>
    <a href="register.php">Not registered? Register here.</a>

</body>
</html>


<?php
// Database connection details - Replace with your actual details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the registration form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input
    if (empty($username) || empty($password)) {
        $error = "Username and Password must be filled.";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // SQL query to insert the new user
        $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";

        if ($conn->query($sql) === TRUE) {
            echo "New user created successfully!";
            // Redirect to the login page
            header("Location: login.php");
            exit();
        } else {
            $error = "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>

    <h2>Register</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Register">
    </form>

    <br><br>
    <a href="login.php">Already have an account? Login here.</a>

</body>
</html>


<?php

// Database configuration (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Bind parameters to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);

  // Execute the query
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if any users were found
  if ($result->num_rows > 0) {
    // Fetch the user data
    $user = $result->fetch_assoc();

    // Authentication successful - create a session
    session_start();
    $_SESSION['username'] = $user['username'];
    $_SESSION['userid'] = $user['userid']; // Add user ID for further actions

    // Redirect the user (optional - you can also use a simple success message)
    return true;
  } else {
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (simulated form handling)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful, redirect to the homepage or another protected page
    header("Location: /home.php"); // Replace with your actual homepage URL
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>


<?php

// Database credentials (replace with your actual credentials)
$username = "your_username";
$password = "your_password";
$db_host = "localhost";
$db_name = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $username, $password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);

  if ($stmt) {
    // Bind parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
      // Get result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found - retrieve user data
        $row = $result->fetch_assoc();
        $_SESSION['username'] = $row['username']; // Store username in session
        $_SESSION['user_id'] = $row['id']; //  Store user ID in session (recommended)

        // Redirect to a secure page or display a success message
        header("Location: secure_page.php"); // Redirect to a secure page
        exit(); // Terminate the script execution after redirection

      } else {
        // User not found or incorrect password
        return false;
      }

      $stmt->close();
    } else {
      // Query execution failed
      return false;
    }
  } else {
    // Prepare statement failed
    return false;
  }
}

// Example usage (from a form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - redirect
    // You can also perform other actions here, like displaying a welcome message
  } else {
    // Login failed - display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Session handling (for storing user login status)
session_start();

/**
 * Logs in a user based on username and password.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username); // "s" indicates a string parameter
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found
    $stmt->close();
    return false;
  } else {
    // User found, verify password
    $user = $result->fetch_assoc();
    if (password_verify($password, $user['password'])) {
      // Password is correct, log in the user
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $username;

      // Optionally, redirect the user
      header("Location: user_dashboard.php"); // Replace with your dashboard page
      exit();

      $stmt->close();
      return true;
    } else {
      // Incorrect password
      $stmt->close();
      return false;
    }
  }
}


/**
 * Registers a new user. (Simplified - In a real application, you'd sanitize, validate, and hash the password)
 */
function registerUser(string $username, string $password) {
    // In a real application, you'd hash the password
    // For demonstration purposes, we'll use password_hash directly

    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
    $stmt->bind_param("ss", $username, $hashed_password);
    $stmt->execute();

    if ($stmt->affected_rows === 0) {
        // Insertion failed (e.g., username already exists)
        $stmt->close();
        return false;
    }

    $stmt->close();
    return true;
}



// Example usage (handling login form submission)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Login successful
        echo "Login successful!  Redirecting...";
    } else {
        // Login failed
        echo "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Register</a>  <!--  Link to a registration page -->
</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security - prevents SQL injection)
    if (empty($username) || empty($password)) {
        $error[] = "Username and Password must be filled.";
    }

    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    // Check if the query returned any results
    if ($result->num_rows > 0) {
        // User found, set session variables to store user information
        $_SESSION["username"] = $username; // Store username in the session
        // You can store other user data in the session as needed (e.g., user_id, role)

        // Redirect to a secure page (e.g., the main page)
        header("Location: welcome.php");  //  Replace welcome.php with your secure page
        exit(); // Important to stop further execution
    } else {
        $error[] = "Invalid username or password.";
    }

    // Close the database connection
    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h2>User Login</h2>

<?php
// Display any error messages
if (isset($error)) {
    echo "<div style='color: red;'>";
    foreach ($error as $err) {
        echo $err . "<br>";
    }
    echo "</div>";
}
?>

<form method="post" action="login.php">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to validate the login attempt
function login($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // 3. Bind the parameters
  $stmt->bind_param("s", $username); // "s" indicates a string parameter

  // 4. Execute the query
  if (!$stmt->execute()) {
    die("Error executing query: " . $stmt->error);
  }

  // 5. Get the result
  $result = $stmt->get_result();

  // 6. Check if any rows were returned
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password'];  // Get the hashed password

    // 7. Verify the password
    if (password_verify($password, $hashed_password)) {
      // Password is correct - Set session variables
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];

      // Redirect the user
      return true;
    } else {
      // Password doesn't match
      $stmt->close();
      return false;
    }
  } else {
    // No user found
    $stmt->close();
    return false;
  }
}

// Example usage:
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (login($username, $password)) {
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page or do something else here.
    header("Location: /protected_page.php"); // Example redirection
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>


<?php

/**
 * User Login Function
 *
 * This function handles user login using a simple file-based authentication.
 *  **WARNING:** This is a VERY basic example for demonstration purposes ONLY. 
 *  Do NOT use this in a production environment due to security vulnerabilities.
 *  Use a proper database and robust authentication methods.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function login(string $username, string $password)
{
    // Check if the username and password are provided
    if (empty($username) || empty($password)) {
        return false; // Invalid input
    }

    // Load user data from a file (replace with database access in a real application)
    $user_data = file_get_contents('users.txt');

    if ($user_data === false) {
        return false; // Could not read the file
    }


    // Parse user data (assuming a simple format: username:password)
    $users = explode(',', $user_data);  // Split data if multiple users stored in file

    foreach ($users as $user) {
        $parts = explode(':', $user);
        if (count($parts) == 2) {
            $username_in_file = trim($parts[0]);
            $password_in_file = trim($parts[1]);

            // Compare passwords (case-sensitive)
            if ($username === $username_in_file && $password === $password_in_file) {
                return true; // Login successful
            }
        }
    }

    return false; // Login failed
}


// Example Usage (for demonstration only - NEVER do this in a production environment)
// Create a users.txt file for testing (e.g., username:password)
//   user1:password123
//   user2:secret

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (login($username, $password)) {
        echo "Login successful! You are now logged in.";
    } else {
        echo "Login failed.  Incorrect username or password.";
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Simple Login Example</title>
</head>
<body>

    <h1>Simple Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">
        <br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php
//  This is a very simplified example and assumes you have the
//  bcrypt extension installed and configured correctly in your PHP environment.

//  In a real application, you would use a proper database.  This is
//  for demonstration only.

function hashPassword(string $password): string {
    return password_hash($password, PASSWORD_BCRYPT);
}

function verifyPassword(string $password, string $hashedPassword): bool {
    return password_verify($password, $hashedPassword);
}

// Example Usage (for demonstration)
$password = "mySecretPassword";
$hashed = hashPassword($password);
echo "Hashed Password: " . $hashed . "
";

if (verifyPassword("mySecretPassword", $hashed)) {
    echo "Password matches!
";
} else {
    echo "Password does not match.
";
}
?>


<?php

// Database configuration (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, create a session
    session_start();
    $user_data = $result->fetch_assoc();
    $_SESSION['username'] = $user_data['username'];
    $_SESSION['user_id'] = $user_data['id']; // Assuming you have a user_id column
    return true;
  } else {
    return false;
  }

  $conn->close();
}

// Example usage (handle login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a secure page or display a welcome message
    header("Location: secure_page.php"); // Redirect to a secure page
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


// ... (previous code) ...

  // Hash the password before storing it in the database
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);  // Use a strong salt automatically
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'";

// ... (rest of the loginUser function) ...


// ... (previous code) ...

  if ($result->num_rows > 0) {
    // User found, create a session
    $user_data = $result->fetch_assoc();
    $_SESSION['username'] = $user_data['username'];
    $_SESSION['user_id'] = $user_data['id'];

    // Verify the entered password with the hashed password in the database
    if (password_verify($password, $user_data['password'])) {
      // Password matches, login successful
      header("Location: secure_page.php");
      exit();
    } else {
      // Password does not match, login failed
      echo "<p style='color:red;'>Invalid username or password.</p>";
    }
  }


<?php

// Database configuration (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to validate user input (basic example - improve security in production)
function validate_input($username, $password) {
  $username = trim($username);
  $password = trim($password);
  return $username && $password; // Check if both are non-empty
}

// Function to handle user login
function login_user($username, $password) {
  // Database connection
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = PASSWORD('$password')";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    session_start();
    $user_data = $result->fetch_assoc();
    $_SESSION['user_id'] = $user_data['id'];
    $_SESSION['username'] = $user_data['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage (handle form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (validate_input($username, $password)) {
    if (login_user($username, $password)) {
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  } else {
    $error = "Please enter both username and password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    <br><br>
    Password: <input type="password" name="password">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Not a user? Register here.</a>  <!-- Add a link to registration -->

</body>
</html>


<?php
// ... (Database connection code as before) ...

// Function to handle user login
function login_user($username, $password) {
  // ... (Database connection code) ...

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = PASSWORD('$password')";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $user_data = $result->fetch_assoc();
    session_start();

    // Hash the password for storage
    $hashed_password = password_hash($password, PASSWORD_DEFAULT); // Use PASSWORD_DEFAULT for the best hashing algorithm

    $_SESSION['user_id'] = $user_data['id'];
    $_SESSION['username'] = $user_data['username'];

    return true;
  } else {
    return false;
  }

  $conn->close();
}

// Example usage
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (validate_input($username, $password)) {
    if (login_user($username, $password)) {
      header("Location: welcome.php");
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  } else {
    $error = "Please enter both username and password.";
  }
}
?>


<?php
session_start(); // Start the session

// Database credentials (Replace with your actual credentials!)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Login Form Data
$username = $_POST['username'];
$password = $_POST['password'];

// Connect to the database
$conn = new mysqli($db_host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL Query to fetch user data
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User found, verify password
    $user_data = $result->fetch_assoc();
    if (password_verify($password, $user_data['password'])) {
        // Password correct!
        $_SESSION['username'] = $username;
        $_SESSION['user_id'] = $user_data['id']; // Store user ID for easier access
        header("Location: /welcome.php"); // Redirect to a welcome page or desired location
        exit(); // Important: Stop further script execution after redirection
    } else {
        // Incorrect password
        echo "Incorrect password.";
    }
} else {
    // User not found
    echo "User not found.";
}

$conn->close();
?>


<?php

/**
 * User Login Function
 *
 * This function handles user login verification and returns data if successful.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return array|null  An array containing user data if login is successful, 
 *                       or null if login fails.
 */
function loginUser(string $username, string $password): ?array {
  // **IMPORTANT:  NEVER STORE PASSWORDS IN PLAIN TEXT!**
  // This is just for demonstration purposes.  In a real application,
  // you would hash the password before storing it in the database.

  // **Dummy User Data (Replace with your database query)**
  $users = [
    ['username' => 'john.doe', 'password' => 'securepassword123'],
    ['username' => 'jane.smith', 'password' => 'anotherpass'],
  ];

  // Loop through the users and find a match
  foreach ($users as $user) {
    if ($user['username'] === $username && password_verify($password, $user['password'])) {
      // Login successful - Return user data
      return [
        'username' => $user['username'],
        'id' => 123, // Example user ID (replace with your database ID)
        'role' => 'admin', // Example user role (replace with your database role)
      ];
    }
  }

  // Login failed
  return null;
}

// **Example Usage**

// Get username and password from the form (example)
$username = $_POST['username']; // Or $_GET, etc.
$password = $_POST['password'];

// Perform the login
$user_data = loginUser($username, $password);

if ($user_data) {
  // Login successful - Redirect or display user information
  echo "Login successful!<br>";
  echo "Username: " . htmlspecialchars($user_data['username']) . "<br>";
  echo "User ID: " . htmlspecialchars($user_data['id']) . "<br>";
  echo "Role: " . htmlspecialchars($user_data['role']) . "<br>";

  // Optionally, create a session for the user
  session_start();
  $_SESSION['user_id'] = $user_data['id'];
  $_SESSION['username'] = $user_data['username'];

} else {
  // Login failed
  echo "Invalid username or password.<br>";
}


// **Important Security Considerations and Best Practices:**

// 1. **Hashing Passwords:**  NEVER store passwords in plain text.  Use a strong hashing algorithm like `password_hash()` to securely hash the password before storing it in the database.
//    - `password_hash($password, PASSWORD_DEFAULT);`  This creates a secure, one-way hash of the password.
//    - Use `password_verify($password, $hashed_password)` to verify the password during login.

// 2. **Input Validation and Sanitization:**  Always validate and sanitize user input to prevent SQL injection and cross-site scripting (XSS) attacks.
//    - Use `htmlspecialchars()` to escape output to prevent XSS.
//    - Use prepared statements or parameterized queries to prevent SQL injection.

// 3. **Rate Limiting:** Implement rate limiting to prevent brute-force attacks.

// 4. **Two-Factor Authentication (2FA):**  Consider adding 2FA for enhanced security.

// 5. **Session Management:** Use sessions to keep track of the logged-in user. Use `session_start()` before accessing session variables.

// 6. **Error Handling:** Implement robust error handling to gracefully handle login failures and other errors.

?>


<?php

/**
 * User Login Function
 *
 * This function handles user login.  It should be called with the username
 * and password provided by the user.
 *
 * @param string $username The username to authenticate.
 * @param string $password The password to authenticate.
 * @return int|string A user ID if login is successful, or an error message if not.
 */
function loginUser(string $username, string $password) {
  // **IMPORTANT:  In a real application, you should NOT store passwords in plain text!**
  // This is just a simplified example for demonstration.
  // Use a secure hashing algorithm like bcrypt or Argon2.

  // **Example Data - Replace with your database connection and data retrieval logic.**
  $validUsers = [
    'john.doe@example.com' => 'password123',
    'jane.smith@example.com' => 'securePassword',
  ];

  // Normalize username for case-insensitive comparison
  $username = strtolower($username);

  if (isset($validUsers[$username])) {
    // **SECURITY WARNING:**  Never store passwords in plain text.
    // This is a placeholder for your actual password verification logic.
    if ($validUsers[$username] === $password) {
      // User login successful
      // Generate a session ID (for security)
      session_start();  // Start a session
      $sessionId = session_id();

      // Store user data in the session (for example)
      $_SESSION['userId'] = $username; // or perhaps a unique ID from your database

      return $username; // Return the username (or user ID)
    } else {
      return 'Password mismatch.';
    }
  } else {
    return 'Invalid username.';
  }
}

// **Example Usage (for testing):**

// Simulate user input
$username = 'john.doe@example.com'; // Replace with actual input
$password = 'password123'; // Replace with actual input

// Perform the login
$result = loginUser($username, $password);

if ($result === 'Invalid username.') {
  echo "<p>Error: Invalid username.</p>";
} elseif ($result === 'Password mismatch.') {
  echo "<p>Error: Password mismatch.</p>";
} elseif ($result === 'Invalid username.' || $result === 'Password mismatch.') {
  echo "<p>Error: " . $result . "</p>";
} else {
  echo "<p>Login successful.  User: " . $result . "</p>";
}


// Example for checking if the user is logged in:
session_start();
if (isset($_SESSION['userId'])) {
  echo "<p>You are logged in as: " . $_SESSION['userId'] . "</p>";
} else {
  echo "<p>You are not logged in.</p>";
}

?>


<?php

// Database connection details (replace with your actual details)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format.";
  } else {
    // Database query
    $query = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($GLOBALS['conn'], $query);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);

      // Verify the password (Important - compare with hash if you store hashed passwords)
      if (password_verify($password, $row["password"])) {
        // Login successful!  Set a session variable.
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        
        // Redirect the user to a protected page (or display a success message)
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Incorrect username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register here</a></p>

</body>
</html>


<?php
session_start(); // Start the session at the beginning of your script

/**
 * User Login Function
 *
 * @param string $username The username to log in.
 * @param string $password The password for the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password)
{
    // Database connection details - Replace with your actual credentials
    $db_host = 'localhost';
    $db_username = 'your_db_username';
    $db_password = 'your_db_password';
    $db_name = 'your_database_name';

    // Check if the username and password are provided
    if (empty($username) || empty($password)) {
        return false;
    }

    // Connect to the database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to retrieve the password hash for the given username
    $sql = "SELECT password_hash, user_id FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $hashed_password = $row['password_hash'];
        $userId = $row['user_id']; // Store user ID for potential later use

        // Verify password using password_verify()
        if (password_verify($password, $hashed_password)) {
            // Password matches!  Set session variables
            $_SESSION['user_id'] = $userId;  // Store user ID in session
            $_SESSION['username'] = $username; // Store username for convenience
            return true; // Login successful
        } else {
            return false; // Password does not match
        }
    } else {
        return false; // User not found
    }

    $conn->close(); // Close the database connection
}


// Example Usage (Demonstration - This part would be in your form submission handler)
// Assume a form has been submitted with username and password

// if (isset($_POST['username']) && isset($_POST['password'])) {
//     $username = $_POST['username'];
//     $password = $_POST['password'];
//
//     if (loginUser($username, $password)) {
//         // Login successful - Redirect to a protected page or display a welcome message
//         header("Location: /protected_page.php"); // Replace with your desired redirect
//         exit();
//     } else {
//         // Login failed - Display an error message
//         echo "<p style='color:red;'>Invalid username or password.</p>";
//     }
// }
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h1>Login</h1>

    <form method="post" action="">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  // Execute the query
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $row = $result->fetch_assoc();
    $_SESSION['username'] = $row['username']; // Store username in session
    $_SESSION['user_id'] = $row['id']; //  Optional: Store user ID for more robust security

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage (This would be called from a form submission)
// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the loginUser function
  if (loginUser($username, $password)) {
    // If login is successful, redirect to a secure page or display a welcome message
    header("Location: secure_page.php"); // Redirect to a secure page
    exit();
  } else {
    // If login fails, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

// Example form (This would be part of your HTML form)
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php
// ... (Database credentials) ...

// Function to handle login (using prepared statements)
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL statement
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters

  // Execute the query
  $result = $stmt->execute();

  if ($result) {
    $row = $stmt->fetch_assoc();
    if($row){
      $_SESSION['username'] = $row['username'];
      $_SESSION['user_id'] = $row['id'];
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }

  $stmt->close();
  $conn->close();
}
?>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check for connection errors
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    } else {
      // Prepare the SQL query
      $sql = "SELECT id, username, password FROM users WHERE username = '$username' AND password = '$password'";

      // Execute the query
      $result = $conn->query($sql);

      // Check if any rows were returned
      if ($result->num_rows > 0) {
        // User found, set session variables
        session_start();
        $_SESSION["username"] = $username;
        $user_id = $result->fetch_assoc()["id"]; // Get the user's ID
        $_SESSION["user_id"] = $user_id;
        // Redirect to a welcome page or the main page
        header("Location: welcome.php"); // Replace welcome.php with your desired redirect page
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    }
  }
}

// If the form hasn't been submitted, display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Replace register.php with your registration page -->

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            // Verify the password
            if (password_verify($password, $row['password'])) {
                // Login successful
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // User not found
            return false;
        }
    } else {
        // Error preparing the statement
        return false;
    }

    // Close the connection
    $conn->close();
}


// Example Usage:
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
    $username = $_POST['login_username'];
    $password = $_POST['login_password'];

    if (loginUser($username, $password)) {
        // Login successful - Redirect to a secure page or display a welcome message
        header("Location: secure_page.php"); // Replace with your secure page
        exit();
    } else {
        // Login failed - Display an error message
        echo "<p style='color:red;'>Invalid username or password.</p>";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <form method="post" action="">
        <label for="login_username">Username:</label>
        <input type="text" id="login_username" name="login_username">
        <br><br>

        <label for="login_password">Password:</label>
        <input type="password" id="login_password" name="login_password">
        <br><br>

        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual values!)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input - IMPORTANT for security
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password must be filled.";
  } elseif (filter_var($username, FILTER_VALIDATE_EMAIL) === false) { // Basic email validation
    $error_message = "Invalid Username (Please enter a valid email address).";
  } else {
    // Attempt to authenticate the user
    $result = mysqli_query($conn, "SELECT * FROM users WHERE email = '$username'"); // Use email for authentication
    if ($result) {
      while ($row = mysqli_fetch_assoc($result)) {
        if (password_verify($password, $row["password"])) { // Use password_verify for secure comparison
          // Successful login - Set session variables
          session_start();
          $_SESSION["username"] = $username;
          $_SESSION["user_id"] = $row["id"]; // Store user ID (good practice)
          header("Location: welcome.php"); // Redirect to welcome page
          exit(); // Important: Stop further execution
        } else {
          $error_message = "Incorrect password.";
        }
      }
    } else {
      $error_message = "Query error.";
    }
  }
} else {
  // If form was not submitted, display the login form
  $error_message = ""; // Clear any previous errors
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username:
    <input type="email" name="username" value="<?php echo isset($_POST['username']) ? htmlspecialchars($_POST['username']) : ''; ?>" />
    <br />
    Password:
    <input type="password" name="password" />
    <br />
    <button type="submit">Login</button>
  </form>

  <br />
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle login
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user based on username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $user = $result->fetch_assoc();
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage (Handles login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    // Redirect to a welcome page or wherever you want to go after login
    header("Location: welcome.php"); // Replace welcome.php with your welcome page
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Replace register.php with your registration page -->

</body>
</html>


<?php

// ... (Database connection as before)

function login($username, $password) {
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Use a prepared statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
    $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $stmt->close();
        return true;
    } else {
        $stmt->close();
        return false;
    }
}

// ... (Form handling as before)
?>


<?php

// Database connection details (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password must be filled.";
    } elseif (!filter_var($username, FILTER_SANITIZE_STRING)) {
        $error_message = "Invalid username.  Only letters and numbers allowed.";
    }
    // Basic password check (change this to your desired security policy)
    elseif ($password != "password123") { // Replace with your secure password validation logic
        $error_message = "Incorrect password.";
    } else {
        // Perform the login query
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($db_host, $sql);

        if (mysqli_num_rows($result) > 0) {
            // User found, set session variables
            session_start();
            $_SESSION["username"] = $username;
            // You could also store other user data if needed.

            // Redirect the user to the logged-in area
            header("Location: welcome.php"); // Replace welcome.php with your welcome page
            exit();
        } else {
            $error_message = "Incorrect username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" />
        <br />
        Password: <input type="password" name="password" />
        <br />
        <button type="submit">Login</button>
    </form>

    <br>
    <a href="register.php">Don't have an account? Register here.</a>  <!-- Link to your registration page -->


</body>
</html>


<?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // ... (other code) ...

        if ($password != "password123") {
            $error_message = "Incorrect password.";
        } else {
            // Hash the password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);

            // Now store $hashed_password in your database.  DO NOT store the plain text password.
            $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
            // ... (database query) ...
        }
    }
?>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT - Prevent SQL injection and other attacks)
  $username = trim($username); // Remove leading/trailing whitespace
  $password = trim($password);

  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match('/^[a-zA-Z0-9]+$/', $username)) {
     $error = "Invalid username.  Username must be a valid email or contain only letters and numbers.";
  } else {
    // Attempt to connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query to retrieve the user's data
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      // User found
      $row = $result->fetch_assoc();

      // Verify password (using password_hash/password_verify is the best practice)
      // This example uses a simple comparison, but it's not secure
      if (password_verify($password, $row["password"])) {
        // Authentication successful - Session setup
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];

        // Redirect to a protected page or the homepage
        header("Location: /protected_page.php"); // Replace with your desired destination
        exit(); // Stop further execution
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Invalid username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

/**
 * Handles user login.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt === false) {
        die("Error preparing statement: " . $conn->error);
    }

    // Bind parameters (important for security - prevents SQL injection)
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if (!$stmt->execute()) {
        die("Query failed: " . $stmt->error);
    }

    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
        // User found, you can now work with the user data
        $user = $result->fetch_assoc();
        //  (optional)  Here you would typically store the user ID or session information

        // Example:  Save user ID to a session variable (recommended)
        session_start();
        $_SESSION['user_id'] = $user['id'];  // Assuming 'id' is the primary key in your 'users' table
        // You can also store other user data if needed.
        $stmt->close();
        return true;
    } else {
        // User not found
        $stmt->close();
        return false;
    }
}


// Example usage (in a form):
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        echo "Login successful! You are now logged in.";
        // Redirect to a protected page or display a welcome message.
        header("Location: /protected_page.php"); // Replace with your desired URL
        exit();
    } else {
        echo "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?;";  // Use parameterized query for security

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the statement
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      $user = $result->fetch_assoc(); // Fetch the user data as an associative array
      return $user; // Return the user data if login is successful
    } else {
      return null; // Return null if login fails
    }

    // Close the statement
    $stmt->close();
  } else {
    // Handle the error in preparing the statement
    error_log("Error preparing statement: " . $conn->error); // Log the error for debugging
    return null;
  }
}

// Example Usage (Demonstration - Don't use this in a live application without proper input validation and sanitization!)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT -  This is a simplified example)
  if (empty($username) || empty($password)) {
    echo "Username and Password cannot be empty.";
  } else {
    $user = loginUser($username, $password);

    if ($user) {
      // Login successful
      session_start();  // Start the session
      $_SESSION["username"] = $user["username"];  // Store username in session
      echo "Login successful!  You are logged in as " . $user["username"];
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    } else {
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
// Database credentials - REPLACE WITH YOUR ACTUAL CREDENTIALS!
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$username = $_POST["username"];
$password = $_POST["password"];

// 1. Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// 2. SQL Query -  IMPORTANT: Use parameterized queries to prevent SQL Injection!
$sql = "SELECT id, username, password FROM users WHERE username = ?;";
$stmt = $conn->prepare($sql); // Prepare the statement
$stmt->bind_param("s", $username); // "s" indicates a string, bind the username parameter
$stmt->execute();

// 3. Process the result
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    // No user found with that username
    echo "Invalid username or password.";
} else {
    $user = $result->fetch_assoc(); // Fetch the result as an associative array

    // 4. Password Verification (VERY IMPORTANT - Use Password Hashing)
    // In a real application, you should NEVER store passwords in plain text!
    // Instead, hash them when storing and verify against the hash.
    // This example uses a simple comparison, but it's insecure.  Use a library like password_hash() and password_verify()
    if (password_verify($password, $user["password"])) {
        // 5. Authentication Successful -  Set session variables
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];

        // Redirect to a secure page
        header("Location: secure_page.php"); // Replace with your secure page
        exit();
    } else {
        // Password mismatch
        echo "Invalid username or password.";
    }
}

// 6. Close the connection
$stmt->close();
$conn->close();
?>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_SANITIZE_STRING)) {
    $error = "Invalid username.  Please use alphanumeric characters.";
  } elseif (!filter_var($password, FILTER_SANITIZE_STRING)) {
    $error = "Invalid password.  Please use alphanumeric characters.";
  }

  // Database connection
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

  // Bind parameters to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);

  // Execute the query
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, set session variables
      session_start();
      $user_row = $result->fetch_assoc();
      $_SESSION["user_id"] = $user_row["id"];
      $_SESSION["username"] = $user_row["username"];
      echo "Login successful!";
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();

    } else {
      echo "Invalid username or password.";
    }

  } else {
    echo "Query execution error: " . $conn->error;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();

} else {
  // If the form hasn't been submitted, display the login form
  // You can include the HTML of your login form here
  echo "<form method='post' action=''>";
  echo "Username: <input type='text' name='username'>";
  echo "<br>";
  echo "Password: <input type='password' name='password'>";
  echo "<br>";
  echo "<input type='submit' value='Login'>";
  echo "</form>";
}

?>


<?php
session_start(); // Start the session

/**
 *  Login User
 *
 *  This function handles the login process.
 *
 *  @param string $username  The username entered by the user.
 *  @param string $password The password entered by the user.
 *  @return bool True if login was successful, false otherwise.
 */
function loginUser($username, $password) {
  // *** IMPORTANT: Replace with your actual database credentials ***
  $db_host = "localhost";
  $db_name = "your_database_name";
  $db_user = "your_db_user";
  $db_password = "your_db_password";

  // Validate inputs (very basic - add more robust validation in a real application)
  if (empty($username) || empty($password)) {
    return false;
  }

  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? LIMIT 1";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind the username to the prepared statement
  $stmt->bind_param("s", $username);

  // Execute the statement
  if (!$stmt->execute()) {
    die("Error executing statement: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows == 0) {
    $stmt->close();
    $conn->close();
    return false;
  }

  $user = $result->fetch_assoc();
  $stmt->close();
  $conn->close();

  // Verify the password (important security step)
  if (password_verify($password, $user['password'])) {
    // Login successful
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    return true;
  } else {
    // Incorrect password
    return false;
  }
}


// Example usage (in your HTML form submission handler)
//  (This is just an example - integrate this into your HTML form handling)
//  Assume you have a form with fields 'username' and 'password'
//  and a button to submit.

// if (isset($_POST['username']) && isset($_POST['password'])) {
//   $username = $_POST['username'];
//   $password = $_POST['password'];

//   if (loginUser($username, $password)) {
//     // Redirect to a protected page
//     header("Location: /protected_page.php"); // Replace with your protected page URL
//     exit();
//   } else {
//     // Display an error message (e.g., "Invalid username or password")
//     echo "<p>Invalid username or password.</p>";
//   }
// }
?>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data from the login form
$username = $_POST['username'];
$password = $_POST['password'];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare the SQL query
$sql = "SELECT * FROM users WHERE username = ? AND password = ?";
$stmt = $conn->prepare($sql);

// Bind parameters
$stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

// Execute the query
$stmt->execute();

// Get the result
$result = $stmt->get_result();

// Check if a user was found
if ($result->num_rows > 0) {
    // User found, proceed with login
    $row = $result->fetch_assoc();
    // Verify password (important for security - hash the stored password)
    //  This is a simplified example. In a production environment, you MUST
    //  use a proper password hashing function like password_hash() and
    //  verify against the hashed password stored in your database.

    // Example:  Assuming password is stored hashed:
    if (password_verify($password, $row['password'])) {
        // Login successful
        // Set session variables to store user information
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        // You can also store other user data in the session
        // e.g., $_SESSION['user_name'] = $row['name'];

        // Redirect the user to a secure page (e.g., the dashboard)
        header("Location: dashboard.php");
        exit();

    } else {
        // Password mismatch
        echo "Incorrect password.";
    }

} else {
    // User not found
    echo "User not found.";
}

// Close the database connection
$stmt->close();
$conn->close();

?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_pass = "your_database_password";

// Function to handle the login process
function loginUser($username, $password) {
  // 1. Validate Input (Important for security!)
  $username = trim($username);
  $password = trim($password);

  if (empty($username) || empty($password)) {
    return false; // Or return an error message
  }

  // 2. Database Connection
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 3. SQL Query (Important:  Use Prepared Statements!)
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; // Use parameterized query

  // 4. Prepare Statement (Crucial for Security)
  $stmt = $conn->prepare($sql);

  if (!$stmt) {
    die("Error preparing statement: " . $conn->error);
  }

  // 5. Bind Parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // 6. Execute Query
  if ($stmt->execute()) {
    // 7. Fetch Result
    $result = $stmt->get_result();
    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // 8.  Session Management (Example)
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      $stmt->close();
      return true;
    } else {
      $stmt->close();
      return false;
    }
  } else {
    $stmt->close();
    return false;
  }
}


// Example Usage (This is for demonstration;  You'll likely use a form)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message.
    header("Location: protected_page.php"); // Replace with your protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  //Sanitize input here
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $user_data = $result->fetch_assoc();
    $_SESSION['user_id'] = $user_data['id'];
    $_SESSION['username'] = $user_data['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example Usage:
// 1. Check if form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // 2. Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // 3. Validate input (VERY IMPORTANT - Protect against SQL injection)
  if (empty($username) || empty($password)) {
    $error[] = "Username and password cannot be empty.";
  }

  // 4. Call the login function
  $login_result = loginUser($username, $password);

  // 5. Handle the result
  if ($login_result) {
    // Redirect to a protected page
    header("Location: /protected_page.php"); // Replace with the URL of your protected page
    exit();
  } else {
    $error[] = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <?php
    if (!empty($error)) {
      echo "<div style='color: red;'>Error: " . implode(", ", $error) . "</div>";
    }
  ?>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle login
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Bind the values to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, fetch the data
      $row = $result->fetch_assoc();
      // Session handling (recommended way)
      session_start();
      $_SESSION['user_id'] = $row['id']; // Store user ID in session
      $_SESSION['username'] = $row['username'];

      // Optionally, redirect to a protected page
      // header("Location: secured_page.php");
      // exit();

      return true; // Login successful
    } else {
      return false; // User not found
    }

  } else {
    return false; // Error executing query
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (you'll need a form to submit username and password)
// You'd typically place this in your login.php file.

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page or display welcome message.
  } else {
    echo "Invalid username or password.";
  }
} else {
  // If not a POST request, likely a form with empty fields.
  // You can display a login form here.
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (must be a valid email address).";
  } else {
    // Attempt to connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query to verify the username and password
    $sql = "SELECT * FROM users WHERE email = '$username'";  // Assuming username is email address
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();

      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Login successful
        $_SESSION["username"] = $username;
        $success = "Login successful!";
        header("Location: welcome.php"); // Redirect to a welcome page
        exit;
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  } ?>

  <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="POST">
    Username: <input type="email" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <?php if (isset($success)) {
    echo "<p style='color:green;'>$success</p>";
  } ?>

</body>
</html>


// Example of using prepared statements (recommended)

$sql = "SELECT * FROM users WHERE email = ?"; // Use a placeholder ?
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $username); // "s" indicates a string
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 1) {
  // ...
}


<?php

// Database credentials (replace with your actual details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format.";
  } else {
    // Attempt to connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check for connection errors
    if ($conn->connect_error) {
      $error = "Failed to connect to database: " . $conn->connect_error;
    } else {
      // Query to check for the username and password
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = $conn->query($sql);

      if ($result->num_rows == 0) {
        $error = "Invalid username or password.";
      }

      if ($error) {
        echo "<p style='color:red;'>$error</p>";
      } else {
        // If the query is successful, redirect the user to the dashboard
        session_start();  // Start a session for user data

        $_SESSION["username"] = $username; // Store username in session

        header("Location: dashboard.php"); // Redirect to the dashboard
        exit(); // Important to stop further script execution
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  }
?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="your_email@example.com" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['loggedin'] = true;
      $_SESSION['id'] = $row['id'];
      $_SESSION['username'] = $row['username'];

      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage:
// Check if the user is logged in
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a secure page or display a welcome message
    header("Location: secure_page.php"); // Replace with your secure page
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <br><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  } ?>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get user input
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Hash the password (VERY IMPORTANT - never store passwords in plain text!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Login successful
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Username not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo __FILE__; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
// ... (database connection)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // ... (input validation)

  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username); // "s" indicates a string parameter

  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    if (password_verify($password, $row["password"])) {
      // ... (login logic)
    } else {
      $error_message = "Incorrect password.";
    }
  } else {
    $error_message = "Username not found.";
  }

  $stmt->close();
}
?>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
    $error_message = "Invalid username. Please use a valid email address or alphanumeric characters only.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare SQL query
    $sql = "SELECT * FROM users WHERE username = '" . $conn->real_escape_string($username) . "' AND password = '" . $conn->real_escape_string($password) . "'";

    // Execute query
    $result = $conn->query($sql);

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      // User found, set session variable
      session_start();
      $_SESSION["username"] = $username;
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login based on credentials.
 *
 * @param string $username The username entered by the user.
 * @param string $password The password entered by the user.
 * @return int|false $user_id if login is successful, or false if failed.
 */
function loginUser(string $username, string $password) {
  // **Important Security Note:**  Never store passwords directly in your code or database.
  // This example is for demonstration purposes *only*.
  // Always use a strong hashing algorithm like bcrypt or Argon2id.

  // Simulated User Database (Replace this with a real database connection)
  $users = [
    'john.doe' => 'password123',
    'jane.smith' => 'securePassword',
  ];

  // Check if the username exists in the database
  if (isset($users[$username])) {
    // Verify the password
    if (password_verify($password, $users[$username])) {  // Use password_verify
      // Login successful, return the user ID
      return $username; // Returning the username as the ID
      //  Alternatively, return a database user ID here.
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }
}

// **Example Usage**
// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (VERY IMPORTANT - in a real application)
  if (empty($username) || empty($password)) {
    echo "Username and Password cannot be empty.";
  } else {
    $user_id = loginUser($username, $password);

    if ($user_id) {
      echo "Login successful! Welcome, " . $user_id . "!";
      // You would likely redirect the user here:
      // header("Location: /welcome.php?user=" . $user_id);
      // exit();
    } else {
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found, set session variables and redirect
    // You can store user data in session variables for later use
    session_start();
    $_SESSION["username"] = $username;

    // Redirect to a protected page or home page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();

  } else {
    // User not found
    echo "Incorrect username or password.";
  }

  // Close the connection
  $conn->close();
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query to check username and password
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = $conn->query($sql);

      if ($result->num_rows > 0) {
        // User found, set session variables
        session_start();  // Important: Start the session
        $_SESSION["username"] = $username;
        $error_message = "Login successful!";

        // Redirect to a protected page
        header("Location: protected_page.php");  // Replace with your desired page
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" <?php if (isset($error_message)) echo 'style="border-color: red;"'; ?> />
    <br />
    Password: <input type="password" name="password" />
    <br />
    <button type="submit">Login</button>
  </form>

  <br />
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
session_start();

/**
 * User Login Function
 *
 * This function handles user login using a simple username/password validation.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // **Important Security Note:**  This is a simplified example.
  // NEVER store passwords in plain text in a real-world application.
  // Always hash and salt passwords before storing them in the database.

  // Simulate a user database (replace with your actual database connection)
  $users = [
    ['username' => 'john.doe', 'password' => 'securePassword123'],
    ['username' => 'jane.smith', 'password' => 'anotherPassword'],
  ];

  // Find the user in the database
  foreach ($users as $user) {
    if ($user['username'] == $username && password_verify($password, $user['password'])) {  // Use password_verify for secure comparison
      // Login successful
      $_SESSION['username'] = $username;
      return true;
    }
  }

  // Login failed
  return false;
}

/**
 * Logout Function (clears session variables)
 */
function logoutUser() {
  unset($_SESSION['username']);
  session_unset();  // Remove all session variables
  session_destroy(); // Destroy the session
}

// **Example Usage (This is just for demonstration.  You'll integrate this into your application) **

// Check if the form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - redirect to a secure page or display a welcome message
    echo '<p>Login successful! Welcome, ' . $username . '</p>';
    // Redirect (replace with your desired redirect)
    // header("Location: /welcome.php");
    // exit();

  } else {
    // Login failed - display an error message
    echo '<p style="color: red;">Invalid username or password.</p>';
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>

    <button type="submit">Login</button>
  </form>

  <a href="logout.php" style="color: red;">Logout</a>  <!-- This would be a separate file for logout -->

</body>
</html>


<?php
session_start();

/**
 * Handles user login functionality.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  //  In a real application, you would check against a database.
  //  This is a simplified example for demonstration.
  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'secretpass',
  ];

  if (isset($validUsers[$username])) {
    if ($validUsers[$username] === $password) {
      //  Login successful
      $_SESSION['username'] = $username; // Store username in session
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }
}

// Example Usage (demonstration)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful! You are now logged in.";
    // Redirect to a secure page or display a welcome message.
    header("Location: /welcome.php"); // Replace /welcome.php with your welcome page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="john.doe" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Basic validation - enhance as needed)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // Query the database to check for the user
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'"; // IMPORTANT:  Sanitize input properly in a production environment!
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // User found, set session variables and redirect
      session_start();
      $_SESSION["username"] = $username;
      // Add any other data you want to store from the user (e.g., role, etc.)
      // $_SESSION["role"] = "admin"; // Example
      // Redirect to a secure page
      header("Location: secure_page.php"); // Replace with the name of your secure page
      exit(); // Important to stop further execution
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
// ... (Database connection code) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // ... (Input validation) ...

    $username = $_POST["username"];
    $password = $_POST["password"];

    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the statement
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");

    if ($stmt) {
        // Bind the parameters
        $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

        // Execute the statement
        $stmt->execute();

        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // User found
            session_start();
            $_SESSION["username"] = $username;
            // Add any other data
            // $_SESSION["role"] = "admin";
            header("Location: secure_page.php");
            exit();
        } else {
            $error_message = "Invalid username or password.";
        }

        // Close the statement
        $stmt->close();
    } else {
        $error_message = "Error preparing statement.";
    }
?>


<?php

// Database connection details (Replace with your actual details)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query to check the username and password
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // User found
      $row = $result->fetch_assoc();
      // Verify password (Hashing is crucial in real applications)
      if (password_verify($password, $row["password"])) {
        // Successful login
        session_start();  // Start the session
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
  ?>

  <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login, checks credentials against a database.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @param PDO $pdo  A PDO object for database connection.
 * @return int|false  User ID if login is successful, false otherwise.
 */
function loginUser(string $username, string $password, PDO $pdo) {
  // 1. Sanitize and Validate Inputs
  $username = trim($username); // Remove leading/trailing whitespace
  $password = trim($password);

  if (empty($username) || empty($password)) {
    return false; // Username and password cannot be empty
  }

  // 2. Fetch the password hash from the database
  $stmt = $pdo->prepare("SELECT password_hash, user_id FROM users WHERE username = :username");
  $stmt->bindParam(':username', $username, PDO::PARAM_STR);
  $stmt->execute();

  $user = $stmt->fetch(PDO::FETCH_ASSOC);

  // 3. Check if User Exists and Password Matches
  if ($user && $user['password_hash'] === $password) {
    // Password is correct, return user ID
    return $user['user_id'];
  }

  // 4. Authentication Failed
  return false;
}


/**
 * Example Usage (Illustrative -  Requires database setup and table)
 */

// 1. Database Connection (Replace with your actual credentials)
try {
    $host = 'localhost';
    $dbname = 'your_database_name';
    $user = 'your_username';
    $password = 'your_password';

    $pdo = new PDO("mysql:host=$host;dbname=$dbname;charset=utf8", $user, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // For better error handling
    // Example PDO connection string (adjust for your setup):
    // $dsn = "mysql:host=$host;dbname=$dbname;charset=utf8";
    // $options = [
    //     PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
    //     PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
    //     PDO::ATTR_EMULATE_PREPARES => false, // Important for security
    // ];
    // $pdo = new PDO($dsn, 'your_username', 'your_password', $options);


} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}


// 2.  Example Usage
$username = 'testuser';
$password = 'password123';

$userId = loginUser($username, $password, $pdo);

if ($userId) {
  echo "Login successful! User ID: " . $userId . "<br>";
  // Do something with the user ID, like redirecting to their profile page
} else {
  echo "Login failed.  Invalid username or password.<br>";
}
?>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate the inputs (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Hash the password for security
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Attempt to authenticate the user
    // Assuming you have a database table 'users' with columns 'username' and 'password'
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($GLOBALS['conn'], $sql);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);
      if (password_verify($password, $row["password"])) {
        // If the password matches, set a session variable to store the user's ID
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username; //optional, but useful
        // Redirect to a secure page
        header("Location: secure_page.php"); // Replace 'secure_page.php' with your secure page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Incorrect username.";
    }
  }
}

// Start the session (if not already started)
if (session_status() == 'closed') {
  session_start();
}


// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php
  if (isset($error_message)) {
    echo "<p style='color:red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to retrieve user data
    $sql = "SELECT * FROM users WHERE username = '" . $conn->real_escape_string($username) . "' AND password = '" . $conn->real_escape_string($password) . "'";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, create a session
        $user_data = $result->fetch_assoc();
        session_start();
        $_SESSION['username'] = $user_data['username'];
        $_SESSION['user_id'] = $user_data['id']; // Assuming you have an 'id' column

        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}


// Example Usage (Handling the login form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a welcome page or the intended destination
        header("Location: welcome.php"); // Replace welcome.php with your welcome page
        exit();
    } else {
        // Handle login failure (e.g., display an error message)
        $error = "Invalid username or password.";
        // You might want to display this error on a specific page, e.g., login.php
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    <br>
    Password: <input type="password" name="password">
    <br>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

/**
 * Handles user login functionality.
 *
 * This function validates user credentials against a data source (e.g., database).
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return int|null  The user's ID if login is successful, or null if not.
 */
function loginUser(string $username, string $password)
{
    // **IMPORTANT SECURITY NOTE:**  Do NOT store passwords in plain text.
    // This example uses a simple hash for demonstration purposes ONLY.
    // In a real application, you MUST use a strong password hashing algorithm
    // like bcrypt or Argon2.
    $hashedPasswords = [
        'john.doe' => '$2y$10$abcdefg1234567890abcdefg1234567890', // Example hash
        'jane.smith' => '$2y$10$hijklmn0123456789hijklmn0123456789', // Example hash
    ];

    // Normalize username (lowercase and remove spaces)
    $username = strtolower(trim($username));

    if (isset($hashedPasswords[$username])) {
        // Verify the password
        if (password_verify($password, $hashedPasswords[$username])) {
            // Login successful - return the user's ID
            return array_key_first($hashedPasswords, $username); // Returns the first key that matches the username
        } else {
            // Incorrect password
            return null;
        }
    } else {
        // User not found
        return null;
    }
}

// **Example Usage:**

// Simulate form submission (replace with your actual form handling)
$username = $_POST['username'];
$password = $_POST['password'];

$userId = loginUser($username, $password);

if ($userId) {
    echo "Login successful! User ID: " . $userId . "<br>";
    // Redirect the user to a secure area
    // header("Location: /secure_area.php?id=" . $userId);
    // exit();

} else {
    echo "Login failed. Please check your credentials.<br>";
}


?>


<?php

// Database connection details (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the login form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the username and password
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  // Check if the user exists
  if ($result->num_rows == 1) {
    // Fetch the user data
    $row = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $row["password"])) {
      // Login successful
      // Set session variables to store the user's information
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      echo "Login successful! <a href='welcome.php'>Welcome, " . $_SESSION["username"] . "</a>";
    } else {
      echo "Incorrect password.";
    }
  } else {
    echo "User not found.";
  }

  $conn->close();
}

// Form HTML
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_pass = 'your_db_password';

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (Basic validation - improve this for production)
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check the credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        } else {
            // Successful login - Redirect to the welcome page or a protected area
            session_start();
            $_SESSION['username'] = $username;  // Store the username in the session
            header("Location: welcome.php"); // Redirect to a welcome page
            exit(); // Important to stop further execution
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php
    if (isset($error_message)) {
        echo "<p style='color:red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" />
        Password: <input type="password" name="password" />
        <br />
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php
// Database credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_pass = 'your_db_password';

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (Basic validation - improve this for production)
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password cannot be empty.";
    } else {
        // Database connection using PDO
        try {
            $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_pass);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // Enable exception handling

            // SQL query to check the credentials using prepared statement
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username AND password = :password");
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':password', $password);
            $stmt->execute();

            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($result) {
                // Successful login - Redirect to the welcome page or a protected area
                session_start();
                $_SESSION['username'] = $username;
                header("Location: welcome.php");
                exit();
            } else {
                $error_message = "Invalid username or password.";
            }

        } catch (PDOException $e) {
            $error_message = "Database error: " . $e->getMessage();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php
    if (isset($error_message)) {
        echo "<p style='color:red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" />
        Password: <input type="password" name="password" />
        <br />
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare statement
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the statement
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        // Session management -  Store user data in session
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        return true; // Login successful
      } else {
        return false; // No user found with those credentials
      }
    } else {
      return false; // Error executing the statement
    }

    $stmt->close();
  } else {
    return false; //  Error preparing the statement
  }

  $conn->close();
}


// Example Usage (Illustrative - This would usually be in a form submission handler)
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (Important for security - add more thorough validation)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty.";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      echo "Login successful!  You are now logged in.";
      // Redirect to a secure page or display a welcome message
      header("Location: secure_page.php"); // Replace with your secure page
      exit();
    } else {
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found, set session variables
    $_SESSION["username"] = $username;
    echo "Login successful!  Redirecting...";
    // Redirect to a secure page (e.g., dashboard)
    header("Location: dashboard.php");
    exit(); // Important to stop further script execution
  } else {
    echo "Invalid username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form action="login.php" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

/**
 * This function handles user login.
 *
 * @param string $username The username to attempt login with.
 * @param string $password The password to attempt login with.
 * @return int|string Returns the user's ID if login is successful,
 *                    or an error message string if login fails.
 */
function loginUser(string $username, string $password) {
  // Replace this with your actual database connection and authentication logic.
  // This is a placeholder for demonstration purposes.

  // Simulate a user database (in a real application, you'd use a database query)
  $users = [
    'john.doe' => 'secretPassword123',
    'jane.smith' => 'anotherPassword',
    'admin' => 'adminPassword'
  ];

  // Convert username and password to lowercase for case-insensitive comparison
  $username = strtolower($username);
  $password = strtolower($password);

  if (isset($users[$username])) {
    // Verify the password
    if ($users[$username] === $password) {
      // Login successful - Get user ID (assuming user ID is the username)
      return $username; // Return the username (or a user ID if you have one)
    } else {
      return "Incorrect password for " . $username;
    }
  } else {
    return "User " . $username . " not found.";
  }
}


// Example Usage:
$username = $_POST['username']; // Get username from form submission
$password = $_POST['password']; // Get password from form submission


if (isset($username) && isset($password)) {
  $loginResult = loginUser($username, $password);

  if (is_int($loginResult)) {
    // Login successful - Redirect or display the user's information
    echo "Login successful! User ID: " . $loginResult;
    // You might redirect here: header("Location: user_dashboard.php?id=" . $loginResult);
  } else {
    // Login failed - Display the error message
    echo "<p style='color:red'>" . $loginResult . "</p>";
  }
} else {
  //  Handle the case where username or password are not submitted.  This is good practice.
  echo "<p>Please enter your username and password.</p>";
}

?>


function loginUser(string $username, string $password) {
  // ... (previous code) ...

  if (isset($users[$username])) {
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT); // Hash the password
    if ($hashedPassword === $users[$username]) {
      return $username;
    } else {
      return "Incorrect password for " . $username;
    }
  } else {
    return "User " . $username . " not found.";
  }
}


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - sanitize and validate)
  $username = filter_var($username, FILTER_SANITIZE_STRING); // Sanitize and remove leading/trailing whitespace
  $password = filter_var($password, FILTER_SANITIZE_STRING);

  // Check if username and password are empty
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; // Use parameterized query to prevent SQL injection

    // Prepare statement
    $stmt = $conn->prepare($sql);

    // Bind parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute statement
    $stmt->execute();

    // Get result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      // User found
      session_start(); // Start the session if not already started
      $_SESSION["username"] = $username;  // Store username in session
      echo "Login successful!";
      header("Location: welcome.php"); // Redirect to welcome page
      exit(); // Terminate the script
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check login credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User exists, return their ID (or other relevant data)
    $user_data = $result->fetch_assoc();
    return $user_data['id']; // Assuming 'id' is the primary key in your users table
  } else {
    // User does not exist
    return false;
  }

  $conn->close();
}

// Example Usage (Demonstration -  DO NOT HARDCODE CREDENTIALS IN PRODUCTION)
//  In a real application, this would come from a form submission.

// Simulate form submission (for testing)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Perform the login
    $user_id = loginUser($username, $password);

    if ($user_id) {
      echo "Login successful! User ID: " . $user_id;
      //  You would typically set a session variable here:
      //  $_SESSION['user_id'] = $user_id;
    } else {
      echo "Invalid username or password.";
    }
  }
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (basic example - improve for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (filter_var($username, FILTER_SANITIZE_STRING) === false) {
    $error = "Invalid username.  Please use letters and numbers only.";
  } else {
    // Hash the password (IMPORTANT - NEVER store passwords in plain text)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check the credentials
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // Prepare the SQL query (use prepared statements to prevent SQL injection)
      $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

      // Execute the query with the username and hashed password
      $stmt = $conn->prepare($sql);
      $stmt->bind_param("ss", $username, $hashed_password); // 'ss' indicates two string parameters
      $stmt->execute();

      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found - set session variables
        session_start();
        $_SESSION["user_id"] = $result->fetch_assoc()["user_id"]; // Assuming you have a user_id column
        $_SESSION["username"] = $username;
        $success = "Login successful!";
        $stmt->close();
        $conn->close();

        // Redirect the user (optional - depends on your application)
        header("Location: welcome.php"); // Redirect to a welcome page or your main application
        exit();
      } else {
        $error = "Invalid username or password.";
        $stmt->close();
        $conn->close();
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" placeholder="Enter your username">
    <br><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" placeholder="Enter your password">
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user credentials
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // Fetch the user data
    $user = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $user['password'])) {
      // Login successful
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];

      return true; // Indicate success
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  $conn->close();
}

// Example usage:  (This is for demonstration - don't include this in your actual login form)
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (important for security!)
  if (empty($username) || empty($password)) {
      echo "Username and password cannot be empty.";
  }
  else{
    // Attempt to login
    if (loginUser($username, $password)) {
      // Login successful - redirect to a secure page or display a welcome message
      header("Location: welcome.php"); // Replace 'welcome.php' with your secure page
      exit();
    } else {
      // Login failed - display an error message
      echo "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if there's a row in the result
  if ($result->num_rows > 0) {
    // User found, set session variables
    session_start();
    $_SESSION["username"] = $username;
    $_SESSION["user_id"] = $result->fetch_assoc()["user_id"]; // Assuming you have a user_id column
    // Redirect to a secure page or display a success message
    header("Location: /protected_page.php"); // Replace with your secure page URL
    exit();
  } else {
    // User not found
    echo "Invalid username or password.";
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="login.php" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows == 0) {
    // User not found
    return false;
  } else {
    // User found, set session variables for authentication
    session_start();
    $_SESSION['username'] = $username;
    return true;
  }
}


// Example Usage:  Handle Login Form Submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a protected page or display a welcome message
    echo "Login successful! You are now logged in.";
    // Redirect (example)
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();

  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials - REPLACE with your actual values
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_pass = 'your_db_password';

// Session handling (for keeping users logged in)
session_start();

// Function to validate user credentials
function validate_login($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $query = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        return $user;
    } else {
        return null;
    }

    $stmt->close();
    $conn->close();
}

// Handle login request
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        $user = validate_login($username, $password);

        if ($user) {
            // Login successful
            $_SESSION["user_id"] = $user["id"]; // Store user ID in session
            $_SESSION["username"] = $user["username"];

            // Redirect to a secure page (e.g., dashboard)
            header("Location: dashboard.php"); // Replace with your dashboard URL
            exit(); // Important to stop further execution
        } else {
            $error = "Invalid username or password.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
        Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and Password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format."; // or use FILTER_VALIDATE_EMAIL
  } else {
      // Database query to check credentials
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = mysqli_query($GLOBALS['conn'], $sql); // Use mysqli_query for safety

      if (mysqli_num_rows($result) > 0) {
        // User found, set session variables
        $_SESSION["username"] = $username;
        echo "Login successful!";
        // Redirect to a secure page (e.g., dashboard)
        header("Location: dashboard.php"); // Replace with your dashboard page
        exit();
      } else {
        $error = "Invalid username or password.";
      }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
?>

  <form method="post" action="<?php echo $_SERVER["SCRIPT_NAME"]; ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <input type="submit" value="Login" />
  </form>

</body>
</html>


   $password = $_POST["password"];
   $hashed_password = password_hash($password, PASSWORD_DEFAULT);
   $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
   
   Then, in the login function, you'd retrieve the hashed password from the database and use `password_verify()` to compare it with the user's input.
4. **Security Considerations (Beyond this example):**
   * **HTTPS:** Always use HTTPS to encrypt the data transmitted between the user's browser and your server.
   * **Rate Limiting:** Implement rate limiting to prevent brute-force attacks.
   * **Regular Security Audits:** Regularly review your code and server configuration for vulnerabilities.
   * **Strong Password Policies:** Enforce strong password policies.

Example with Hashing (Illustrative - Adapt to your specific hashing function):



<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match('/^[a-zA-Z0-9]+$/', $username)) {
    $error = "Invalid username. Please enter a valid email or alphanumeric username.";
  } else {
     // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($host, $sql);

    if (mysqli_num_rows($result) > 0) {
      // User found, set session variables
      session_start();
      $_SESSION["username"] = $username;
      echo "Login successful! You are now logged in as " . htmlspecialchars($username);
      // Redirect to a protected page or display a welcome message
      header("Location: protected_page.php"); // Replace with your desired destination
      exit;
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>Error: " . htmlspecialchars($error) . "</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_database_user';
$db_password = 'your_database_password';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query (Using prepared statements - Best Practice!)
    $query = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($query);

    if ($stmt) {
      // Bind the parameters
      $stmt->bind_param("ss", $username, $password);

      // Execute the query
      $stmt->execute();

      // Get the result
      $result = $stmt->get_result();

      // Check if there is a user with the given credentials
      if ($result->num_rows == 1) {
        // User found, set session variables
        session_start(); // Start session management (if not already started)
        $_SESSION["username"] = $username;
        $result->fetch_assoc(); // Fetch the user data
        $error_message = ""; // Clear any previous errors
        // Redirect to a secure page or display a success message
        header("Location: secure_page.php"); // Replace with your secure page
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    } else {
      $error_message = "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" value="<?php if (isset($username)) echo $username; ?>">
    Password: <input type="password" name="password" value="<?php if (isset($password)) echo $password; ?>">
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle the login process
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user data
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found
    $user_data = $result->fetch_assoc();
    $hashed_password = $user_data['password']; // Get the stored hash

    // Verify password (using password_verify) - This is the secure way
    if (password_verify($password, $hashed_password)) {
      // Password is correct!
      // Set session variables to indicate successful login
      $_SESSION['user_id'] = $user_data['id'];
      $_SESSION['username'] = $username;

      return true; // Login successful
    } else {
      // Password mismatch
      return false; // Login failed
    }
  } else {
    // User not found
    return false; // Login failed
  }

  // Close the connection
  $conn->close();
}


// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (basic validation - improve for production)
  if (empty($username) || empty($password)) {
    echo "Username and Password cannot be empty.";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Login successful - Redirect to the desired page
      header("Location: welcome.php"); // Replace 'welcome.php' with your welcome page
      exit();
    } else {
      // Login failed
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Session management
session_start();

// Function to check login credentials
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the credentials
  $sql = "SELECT * FROM users WHERE username = ? AND password = ? "; // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters
  $stmt->execute();

  $result = $stmt->get_result();

  if ($result->num_rows == 1) {
    $row = $result->fetch_assoc();

    // Set session variables
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $row['username'];

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $stmt->close();
  $conn->close();
}

// Example usage:

// 1.  Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - add more validation as needed)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    $login_result = login($username, $password);

    if ($login_result) {
      // Redirect to a protected page
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to check user credentials
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare statement
  $stmt = $conn->prepare($sql);

  // Bind parameters (important for security)
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result set
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Session management (simplified for demonstration)
      session_start();
      $_SESSION['user_id'] = $row['id']; // Assuming 'id' is a column in your users table
      $_SESSION['username'] = $username;

      return true; // Login successful
    } else {
      return false; // No user found
    }
  } else {
    return false; // Error executing query
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (handling login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } elseif (filter_var($username, FILTER_SANITIZE_STRING) === false) {
    $error_message = "Invalid Username.  Must contain letters and numbers.";
  }
  // Hash the password for security
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row["password"])) {
      // Login successful
      // Session handling for persistent login
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];

      // Redirect to a secure page or display a success message
      header("Location: secure_page.php"); // Replace with your secure page
      exit();
    } else {
      $error_message = "Incorrect password.";
    }
  } else {
    $error_message = "User not found.";
  }
} else {
  // Display the login form
  $error_message = ""; // Clear any previous errors
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($_POST['username']) ? htmlspecialchars($_POST['username']) : ''; ?>">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Replace with your registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the login details from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to verify credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the user exists
  if ($result->num_rows == 1) {
    // User found, set session variables
    session_start();
    $user_row = $result->fetch_assoc();
    $_SESSION["username"] = $user_row["username"];
    $_SESSION["user_id"] = $user_row["id"]; // Assuming you have an ID column in your table

    // Redirect to a secure page or display a success message
    header("Location: secure_page.php"); // Replace with your secure page
    exit;
  } else {
    // User not found
    echo "Invalid username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// ... (Database credentials) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $conn = new mysqli($servername, $username, $password, $dbname);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Use a prepared statement
  $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 1) {
    $user_row = $result->fetch_assoc();
    session_start();
    $_SESSION["username"] = $user_row["username"];
    $_SESSION["user_id"] = $user_row["id"];
    header("Location: secure_page.php");
    exit;
  } else {
    echo "Invalid username or password.";
  }

  $stmt->close();
  $conn->close();
}
?>


<?php

// Database connection details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get login details from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to fetch the user based on username
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  // Check if a user exists
  if ($result->num_rows == 1) {
    $row = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $row["password"])) {
      // Successful login - set session variables
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];

      // Redirect to the protected page
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit(); // Important:  Stop script execution after redirect
    } else {
      // Incorrect password
      echo "Incorrect password.";
    }
  } else {
    // User does not exist
    echo "User does not exist.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form action="login.php" method="POST">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <a href="register.php">Register</a>  <!-- Link to registration page -->

</body>
</html>


<?php

// ... (previous code) ...

// Register new user
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $servername = "localhost";
  $username = "your_username";
  $password = "your_password";
  $dbname = "your_database_name";

  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Hash the password
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // SQL query to insert new user
  $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
  if ($conn->query($sql) === TRUE) {
    echo "New record created successfully";
  } else {
    echo "Error: " . $sql . "<br>" . $conn->error;
  }

  $conn->close();
}
?>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    session_start();
    $_SESSION["username"] = $username;
    echo "Login successful!";
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page's URL
    exit();
  } else {
    echo "Invalid username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form action="" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Function to handle the login process
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();
    $user = $result->fetch_assoc();

    // Check if a user was found
    if ($user) {
      // Authentication successful
      // You can set session variables here to store user information
      session_start(); // Start the session
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];

      return true; // Login successful
    } else {
      return false; // User not found
    }
  } else {
    // Query execution failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (from a form submission)
// Assume username and password are submitted via POST
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to the dashboard or a welcome page
    header("Location: dashboard.php"); // Replace with your dashboard URL
    exit();
  } else {
    // Login failed - Display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}
?>


<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

    // Bind the parameters (important for security - prevents SQL injection)
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password);  // "ss" means two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User found
            $row = $result->fetch_assoc();
            // Set session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];

            return true; // Login successful
        } else {
            return false; // User not found
        }
    } else {
        return false; // Query execution failed
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example usage (simplified - for demonstration only)
// In a real application, this would come from a form submission.
// For demonstration, we'll try to login with some example credentials
if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        echo "Login successful!  You are now logged in as " . $_SESSION['username'];
    } else {
        echo "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username"><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password"><br><br>

        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

// Database connection details (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to fetch user details
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found
    $user = $result->fetch_assoc();
    // Set session variables to store user information
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    // You might want to store other user details here, e.g., $user['email']
    return true; // Login successful
  } else {
    // User not found
    return false; // Login failed
  }

  $conn->close();
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    echo "<p>Username and password cannot be empty.</p>";
  } else {
    // Call the login function
    if (loginUser($username, $password)) {
      // Login successful - redirect to a protected page or display a welcome message
      header("Location: protected_page.php"); // Replace with your protected page
      exit();
    } else {
      // Login failed - display an error message
      echo "<p>Invalid username or password.</p>";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT - Add more robust validation in a real application)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (validatePassword($password)) {
    // Hash the password before comparing
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check the credentials
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $user = $result->fetch_assoc();
      // Verify password
      if (password_verify($password, $user["password"])) {
        // Login successful - Set session variables
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];
        echo "Login successful! <a href='dashboard.php'>Go to Dashboard</a>";
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Invalid username.";
    }
  } else {
    $error = "Invalid password format.";
  }
}

// Helper function for password validation (improve this!)
function validatePassword($password) {
  return (strlen($password) >= 8); // Minimum 8 characters
}

// Start the database connection
$conn = new mysqli($db_host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");

  // Bind the username parameter
  $stmt->bind_param("s", $username);

  // Execute the query
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows == 1) {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password']; // Fetch the hashed password
    // Compare the provided password with the hashed password
    if (password_verify($password, $hashed_password)) {
      // Password matches!  Set session variables.
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true; // Login successful
    } else {
      // Password does not match
      $stmt->close();
      return false;
    }
  } else {
    // No user found
    $stmt->close();
    return false;
  }
}


// Example usage (simulated form submission - replace with your actual form handling)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a secure page or display a welcome message
    header("Location: secure_page.php"); // Redirect to your secure page
    exit(); // Important to stop further execution after redirection
  } else {
    // Login failed - Display error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Session handling
session_start();

// Function to check login credentials
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the username parameter
    $stmt->bind_param("s", $username);

    // Execute the query
    if ($stmt->execute()) {
      $result = $stmt->get_result();

      if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $user['password'])) {
          // Login successful
          $_SESSION['user_id'] = $user['id'];
          $_SESSION['username'] = $user['username'];
          return true;
        } else {
          // Incorrect password
          return false;
        }
      } else {
        // User not found
        return false;
      }

      $stmt->close();
    } else {
      // Query execution failed
      return false;
    }
  } else {
    // Failed to prepare statement
    return false;
  }
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a protected page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Login failed
    $error = "Invalid username or password";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Function to handle login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to select the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Login successful
            $_SESSION['username'] = $username;  // Store username in session
            return true;
        } else {
            // Password incorrect
            return false;
        }
    } else {
        // User not found
        return false;
    }

    // Close connection (important!)
    $conn->close();
}


// Example Usage:  This will be triggered by a form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a secure page or display a welcome message
        header("Location: /welcome.php"); // Replace /welcome.php with your welcome page
        exit();
    } else {
        // Login failed - display an error message
        $error = "Invalid username or password.";
        echo "<p style='color:red;'>$error</p>";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query to check username and password
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    }

    if ($result->num_rows > 0) {
      // User found, set session variables and redirect
      session_start();
      $_SESSION["username"] = $username; // Store the username
      // Optionally, store other user data (e.g., user ID)
      // $_SESSION["user_id"] = $user_id;

      header("Location: welcome.php"); // Redirect to a welcome page
      exit(); // Important: Stop further script execution
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Hash the password (store securely)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check the credentials
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($GLOBALS["db_host"], $sql);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);

      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Login successful!
        // Set a session variable to store the user's ID
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"]; // Optional: Store username for convenience
        // Redirect the user to a secure page (e.g., dashboard)
        header("Location: dashboard.php"); // Replace dashboard.php with your desired URL
        exit(); // Stop further execution of the script
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Invalid username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, create a session
    session_start();

    // Get the user data
    $user = $result->fetch_assoc();

    // Store user data in session for later access
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['role'] = $user['role']; // Assuming you have a role column in your table

    // Redirect to a secure page or display a success message
    header("Location: secure_page.php"); // Replace with your secured page
    exit(); // Stop further execution of the script
  } else {
    // User not found
    return false;
  }

  $conn->close();
}

// Example usage (handling login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty.";
  } else {
    // Call the login function
    loginUser($username, $password);
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php
session_start(); // Start the session

/**
 * Handles user login functionality.
 *
 * @param string $username The username to login.
 * @param string $password The password for the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Validate inputs (important for security)
  if (empty($username) || empty($password)) {
    return false;
  }

  // Database connection (replace with your actual database details)
  $db_host = 'localhost';
  $db_name = 'your_database_name';
  $db_user = 'your_database_user';
  $db_password = 'your_database_password';

  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user data
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify password (hash comparison - IMPORTANT!)
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;

      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}


// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a welcome page or other appropriate location
    header("Location: welcome.php"); // Replace 'welcome.php' with your desired page
    exit();
  } else {
    // Login failed, display error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    <br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details - Replace with your actual details
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Sanitize the inputs (Important for security)
  $username = filter_var($username, FILTER_SANITIZE_STRING);
  $password = filter_var($password, FILTER_SANITIZE_STRING);

  // Validate the inputs
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } else {
    // Database query
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ? ";

    // Bind the parameters (Important for security - prevents SQL injection)
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

    // Execute the query
    if ($stmt->execute() === TRUE) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found
        $row = $result->fetch_assoc();
        // Set session variables
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];

        // Redirect to a welcome page or the main page
        header("Location: welcome.php"); // Replace with your welcome page
        exit();
      } else {
        $error = "Invalid username or password.";
      }
    } else {
      $error = "Error executing query.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>New user? <a href="register.php">Register</a></p>  <!-- Add a registration link -->

</body>
</html>


<?php
// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $query = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if the query returned any rows
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Session setup
    session_start();
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Successful login
    return true;
  } else {
    // Login failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (for demonstration - in a real application, this would be in a form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a welcome page or perform other actions
    header("Location: welcome.php"); // Replace welcome.php with your welcome page
    exit();
  } else {
    // Login failed
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>Error: " . $error . "</p>";
  } ?>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select user based on username and password
  $sql = "SELECT id, username, password FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, retrieve user data
    $user = $result->fetch_assoc();
    $userId = $user['id'];
    $userName = $user['username'];

    // Set session variables for the logged-in user
    session_start();
    $_SESSION['userId'] = $userId;
    $_SESSION['userName'] = $userName;

    // You can also store other user data in the session
    // $_SESSION['userEmail'] = $user['email'];

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage (assuming you have a form to submit username and password)
//  This is just an example, you'll need to integrate it with your form
//  and error handling.

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!loginUser($username, $password)) {
    $error = "Invalid username or password.";
  } else {
    // If login is successful, redirect to the user's dashboard or main page
    header("Location: dashboard.php"); // Replace with your desired redirect
    exit();
  }
}


?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form action="" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$dbname = "your_db_name";

// Form data from the login form
$username = $_POST["username"];
$password = $_POST["password"];

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to check credentials
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User found, set session variables
    session_start();
    $row = $result->fetch_assoc();
    $_SESSION["username"] = $row["username"];
    $_SESSION["user_id"] = $row["id"]; // Assuming you have an 'id' column in your users table
    // You can add more data you want to store in the session here.
    // For example: $_SESSION["role"] = $row["role"];

    // Redirect to a protected page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit(); // Important: Exit after redirecting

} else {
    // User not found
    echo "Invalid username or password.";
}

$conn->close();

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

/**
 * Logs in a user based on username and password.
 *
 * @param string $username The username to authenticate.
 * @param string $password The password.
 * @return int|false User ID if successful, false otherwise.
 */
function login(string $username, string $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id FROM users WHERE username = ? AND password = ?;";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      $user_id = $row["id"];
      return $user_id;
    } else {
      return false; // User not found
    }
  } else {
    // Handle query error
    echo "Query failed: " . $conn->error;
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (for testing - don't use directly in your application)
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty.";
  } else {
    // Call the login function
    $user_id = login($username, $password);

    if ($user_id) {
      // User logged in successfully
      echo "User ID: " . $user_id . "<br>";
      // You can redirect the user to a secure area, etc.
    } else {
      // User login failed
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="Enter username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (very basic example, improve this for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      // User found, set session variables
      session_start(); // Start the session
      $user_row = $result->fetch_assoc();
      $_SESSION["username"] = $user_row["username"];
      $_SESSION["user_id"] = $user_row["id"]; // Assuming you have an id column in your users table
      // You might want to add more user data to the session if needed
      echo "Login successful!  Redirecting...";
      header("Location: user_dashboard.php"); // Redirect to a secure page
      exit(); // Important: Stop further script execution
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Session handling
session_start();


/**
 * Logs in a user.
 *
 * @param string $username The user's login username.
 * @param string $password The user's login password.
 *
 * @return bool True on successful login, false otherwise.
 */
function loginUser(string $username, string $password) {
  // Validate inputs (basic - you should add more robust validation)
  if (empty($username) || empty($password)) {
    return false;
  }

  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";  //Use parameterized queries to prevent SQL Injection
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if (!$stmt->execute()) {
    die("Query failed: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if any users were found
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();  // Fetch the user data as an associative array
    // Set session variables to identify the user
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Optionally, redirect the user to a specific page
    // header("Location: user_dashboard.php");  //Example of redirecting
    return true;
  } else {
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Login form handling (Example -  This code will be in your login.php file)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    //  Redirect after successful login
    header("Location: user_dashboard.php");  //Or wherever you want to redirect
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="login.php">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password must be filled.";
  } else {
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check the credentials
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $user = $result->fetch_assoc();
      if (password_verify($password, $user["password"])) {
        // Password matches!  Set session variables.
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];
        echo "Login successful!  Redirecting...";
        header("Location: welcome.php"); // Redirect to a welcome page
        exit; // Stop further execution
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Incorrect username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password"><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { // Email validation
    $error = "Invalid username (Please enter a valid email address).";
  } else {
    // Hash the password (Securely compare passwords)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $pdo = new PDO("mysql:host=$db_host;dbname=$db_name;charset=utf8mb4", $db_user, $db_password);

    // Attempt to fetch the user
    $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    // Check if the user exists and if the password matches
    if ($user) {
      if (password_verify($password, $user["password"])) {
        // Login successful
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="email" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

  <p>New user? <a href="register.php">Register here</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Query the database to check for the username
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        } else {
            // If the login is successful, set a session variable
            session_start();
            $_SESSION["username"] = $username;
            $error_message = "Login successful!";

            // Redirect the user to a protected page or the homepage
            header("Location: welcome.php"); // Replace with your welcome page
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" placeholder="Your Username"><br><br>
        Password: <input type="password" name="password" placeholder="Your Password"><br><br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php
// Database credentials
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (still important!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL statement
        $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

        // Use prepared statement to prevent SQL injection
        $stmt = $conn->prepare($sql);

        if ($stmt === false) {
            die("Error preparing statement: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("ss", $username, $password);  // "ss" means two strings

        // Execute the statement
        $stmt->execute();

        // Get the result
        $result = $stmt->get_result();

        // Close the statement
        $stmt->close();


        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        } else {
            session_start();
            $_SESSION["username"] = $username;
            $error_message = "Login successful!";
            header("Location: welcome.php");
            exit();
        }
    }
}
?>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Login Form Processing
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate username and password (IMPORTANT: NEVER store passwords in plain text)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Hash the password before comparing (Recommended security practice)
    // You'll need to implement a hashing function like password_hash()
    // This example assumes you've already hashed the password in your database
    $hashedPassword = "your_hashed_password"; //Replace with the hashed password from the database

    if ($hashedPassword == $password) {
      // Login successful
      session_start();
      $_SESSION["username"] = $username; // Store username in session
      header("Location: welcome.php"); // Redirect to welcome page
      exit;
    } else {
      $error = "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Username" required>
    <br><br>
    Password: <input type="password" name="password" placeholder="Your Password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>
</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

/**
 * Logs in a user based on their username and password.
 *
 * @param string $username The username to authenticate.
 * @param string $password The password to authenticate.
 * @return int|false The user's ID if login is successful, false otherwise.
 */
function loginUser($username, $password)
{
    // Create a database connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $query = "SELECT id FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return $row['id']; // Return the user's ID
    } else {
        return false; // User not found
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example Usage (Illustrative - Replace with your actual form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security) -  Example Validation
    if (empty($username) || empty($password)) {
        echo "Username and password cannot be empty!";
    } else {
        $userId = loginUser($username, $password);

        if ($userId) {
            echo "Login successful! User ID: " . $userId;
            // Redirect the user or continue with logged-in functionality here
        } else {
            echo "Invalid username or password.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT - Add more robust validation)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (must be a valid email address).";
  } else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $sql = "SELECT * FROM users WHERE email = '$username'"; // Use email for more secure authentication
    $result = $conn->query($sql);

    // Check if a user exists
    if ($result->num_rows > 0) {
      // Fetch the user data
      $user = $result->fetch_assoc();

      // Verify password
      if (password_verify($password, $user["password"])) {
        // Login successful - Set session variables
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["email"]; // Use email for session
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (Replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  // 3. Bind parameters (Important for security - prevents SQL injection)
  $stmt->bind_param("ss", $username, $password);

  // 4. Execute the query
  if ($stmt->execute() === TRUE) {
    // 5. Get the result
    $result = $stmt->get_result();

    // 6. Check if any rows were returned
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // 7.  Return user data if login is successful.  You can adapt this.
      return $row;
    } else {
      return false; // Login failed (username or password incorrect)
    }
  } else {
    // Query error
    return false;
  }

  // 8. Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (This will only work if you have a 'users' table with 'username' and 'password' columns)
//  This section is for demonstration -  don't directly use this in a production environment.

// Simulate a login attempt
$username = "testuser";
$password = "password123";

$user = loginUser($username, $password);

if ($user) {
  echo "Login successful!";
  echo "<br>Username: " . $user['username'];
  echo "<br>Email: " . $user['email']; // Assuming you have an email column
} else {
  echo "Login failed.  Incorrect username or password.";
}

?>


<?php

// Database credentials - Replace with your actual values
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password must be filled.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error_message = "Invalid username.  Please enter a valid email address.";
    } else {
        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query - Use parameterized queries for security!
        $sql = "SELECT * FROM users WHERE email = ?";  // Use email for user authentication
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $username);  // "s" indicates a string parameter
        $stmt->execute();

        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        } else {
            // If the query finds a user, verify the password
            $user = $result->fetch_assoc();
            if (password_verify($password, $user["password"])) {
                // Login successful!  Set session variables
                session_start();
                $_SESSION["user_id"] = $user["id"];
                $_SESSION["username"] = $user["email"]; // Use email for session
                header("Location: /welcome.php");  // Redirect to a welcome page
                exit();
            } else {
                $error_message = "Incorrect password.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="email" name="username" required>
        Password: <input type="password" name="password" required>
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>

</body>
</html>


<?php
// ... (Database connection - same as login.php)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Basic - expand this!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password must be filled.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error_message = "Invalid username.  Please enter a valid email address.";
    }  elseif (strlen($password) < 8) {
        $error_message = "Password must be at least 8 characters long.";
    }

    if (empty($error_message)) {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Prepare the SQL query
        $sql = "INSERT INTO users (email, password) VALUES (?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $username, $hashed_password); // "ss" for string parameters
        $stmt->execute();

        if ($stmt->error) {
            die("Error inserting user: " . $stmt->error);
        }

        $success_message = "Registration successful.  Check your email to verify your account.";
    }
}
?>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password must be filled.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error_message = "Invalid email format."; // More specific validation
    } else {
        // Attempt to connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL query
        $sql = "SELECT * FROM users WHERE email = '$username'";  // Use email for comparison
        $result = $conn->query($sql);

        // Check if the query executed successfully
        if ($result->num_rows > 0) {
            // Fetch the data from the result set
            $row = $result->fetch_assoc();

            // Verify the password
            if (password_verify($password, $row["password"])) {
                // Login successful!  Set session variables
                session_start();
                $_SESSION["username"] = $row["email"]; // Store email for flexibility
                $_SESSION["user_id"] = $row["id"]; // Assuming you have a user ID
                echo "Login successful!  Redirecting...";
                // Redirect to a welcome page or desired location
                header("Location: welcome.php");
                exit(); // Important to stop further script execution
            } else {
                echo "Incorrect password.";
            }
        } else {
            echo "No user found with that email.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Email:</label>
        <input type="email" id="username" name="username" placeholder="Your Email">
        <br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" placeholder="Your Password">
        <br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input (IMPORTANT - Always validate user input!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } elseif (strlen($username) < 3) {
        $error = "Username must be at least 3 characters long.";
    } elseif (strlen($password) < 6) {
        $error = "Password must be at least 6 characters long.";
    } else {
        // Hash the password (using password_hash - preferred method)
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Query the database to check credentials
        $pdo = new PDO("mysql:host=$db_host;dbname=$db_name;charset=utf8mb4", $db_user, $db_password);

        try {
            $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");
            $stmt->execute([$username]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user) {
                // Check if the hashed password matches
                if (password_verify($password, $user["password"])) {
                    // Login successful
                    session_start();
                    $_SESSION["user_id"] = $user["id"];
                    $_SESSION["username"] = $user["username"];
                    header("Location: welcome.php"); // Redirect to a welcome page
                    exit(); // Important: Stop further execution
                } else {
                    $error = "Incorrect password.";
                }
            } else {
                $error = "Username not found.";
            }
        } catch (PDOException $e) {
            $error = "Database error: " . $e->getMessage();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
<?php } ?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" <?php if (isset($username)) echo 'value="'. $username . '"'; ?> />
    <br />
    Password: <input type="password" name="password" />
    <br />
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$username = $_POST["username"];
$password = $_POST["password"];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// SQL query to authenticate the user
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows == 1) {
  $row = $result->fetch_assoc();
  // Verify password
  if (password_verify($password, $row["password"])) {
    // Authentication successful
    // Set session variables
    session_start();
    $_SESSION["user_id"] = $row["id"];
    $_SESSION["username"] = $username;

    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Incorrect password
    echo "Incorrect password.";
  }
} else {
  // User not found
  echo "User not found.";
}

$conn->close();

?>


   $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
   $stmt->bind_param("s", $username); // 's' indicates a string
   $stmt->execute();
   $result = $stmt->fetch_assoc();
   $stmt->close();
   
* **Session Management Security:**
    * Set the `session.cookie_lifetime` and `session.gc_maxlifetime` settings in your `php.ini` file to control session timeout values.
    * Use `session_regenerate_id()` to generate a new session ID on each login attempt to mitigate session fixation attacks.
* **Input Validation and Sanitization:**  Validate and sanitize all user input *before* using it in any database queries or other operations.
* **HTTPS:**  Always use HTTPS to encrypt communication between the user's browser and your server, protecting user credentials during transmission.
* **Rate Limiting:** Implement rate limiting to prevent brute-force attacks.

**Example of adding Password Hashing and Prepared Statements:**



<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare statement
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind parameters (important for security)
    $stmt->bind_param("ss", $username, $password);

    // Execute the statement
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if a user was found
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      //  You can store session variables here if needed
      // session_start();  // Ensure session is started
      // $_SESSION['user_id'] = $row['id']; // Replace 'id' with your user ID column
      // $_SESSION['username'] = $username;

      // Return true if login successful
      return true;
    } else {
      // Return false if no user found
      return false;
    }

    // Close statement
    $stmt->close();
  } else {
    // Handle statement preparation error
    return false;
  }
}

// Example usage:
//  This is just for demonstration, you'll typically get the username and password from a form
$username = $_POST['username'];
$password = $_POST['password'];

if (loginUser($username, $password)) {
  echo "Login successful!";
  // Redirect to a protected page or display a welcome message
  // header("Location: protected_page.php"); // Example
} else {
  echo "Invalid username or password.";
}

?>


<?php

// Database credentials - REPLACE WITH YOUR ACTUAL CREDENTIALS
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Login successful - Set session variables
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;

      return true; // Indicate successful login
    } else {
      return false; // Indicate password mismatch
    }
  } else {
    return false; // User not found
  }

  $conn->close();
}

// Example Usage (Illustrative - Implement this in your form)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Redirect to a secure page or display a success message
    header("Location: secure_page.php"); // Replace with your secure page
    exit();
  } else {
    // Handle login failure - Display error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Successful login
      // You can now do something with the user's information
      // For example, set a session variable
      session_start();
      $_SESSION['username'] = $username;
      $_SESSION['user_id'] = $row['id']; // Assuming you have an 'id' column
      return true; // Indicate successful login
    } else {
      return false; // Indicate login failed (username or password incorrect)
    }
  } else {
    // Something went wrong with the query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage:
// To check if the login is successful:
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit(); // Important to stop further execution
  } else {
    // Login failed - Display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data (from the HTML form submission)
$login_username = $_POST["username"];
$login_password = $_POST["password"];

// Validate input (Important for security!)
if (empty($login_username) || empty($login_password)) {
    $error_message = "Username and Password must be filled.";
}

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check the connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare the SQL query (Using prepared statements - BEST PRACTICE for security)
$sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

// Execute the query with the prepared statement
$stmt = $conn->prepare($sql);
$stmt->bind_param("ss", $login_username, $login_password);  // "ss" means two strings
$stmt->execute();

// Get the result
$result = $stmt->get_result();

// Check if the user was found
if ($result->num_rows == 0) {
    echo "<p style='color: red;'>Invalid username or password.</p>";
    $stmt->close();
    $conn->close();
    exit;
}

// Fetch the user data
$user = $result->fetch_assoc();

// Check if the user exists (optional, but recommended)
if ($user['id'] == 0) {
  echo "<p style='color: red;'>Invalid username or password.</p>";
  $stmt->close();
  $conn->close();
  exit;
}


// Authentication successful - set a session variable to track the login
session_start();
$_SESSION["user_id"] = $user['id'];
$_SESSION["username"] = $user['username'];

// Redirect to a protected page or display a welcome message
echo "<p style='color: green;'>Login successful! Welcome, " . $user['username'] . "</p>";
//echo "<a href='protected_page.php'>Proceed to Protected Page</a>";
echo "<a href='logout.php'>Logout</a>";

// Close the statement and connection
$stmt->close();
$conn->close();

?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to check if the login is successful
function isLoginSuccessful($username, $password, $user_id) {
    // In a real application, you would check against a database table
    // that stores usernames and hashed passwords.
    // This example uses a simple comparison for demonstration only.
    // NEVER store plain text passwords!

    if ($username == "demo" && $password == "password") {
        // Simulate successful login and user ID retrieval
        return $user_id;
    }

    return false;
}

// Function to handle the login process
function loginUser($username, $password) {
    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        return "Username and password cannot be empty.";
    }

    // Hash the password (for security - this is a basic example)
    // In a real application, use a strong hashing algorithm like bcrypt or Argon2.
    $hashed_password = password_hash($password, PASSWORD_DEFAULT); // Use password_hash()

    // Simulate database query (replace with your actual database query)
    $user_id = isLoginSuccessful($username, $hashed_password, 123); // Replace 123 with actual user_id or result of query.

    if ($user_id) {
        // Login successful
        $_SESSION["user_id"] = $user_id; // Store the user ID in the session
        return true;
    } else {
        // Login failed
        return false;
    }
}


// Example usage (for demonstration)
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
    $username = $_POST['login_username'];
    $password = $_POST['login_password'];

    $login_result = loginUser($username, $password);

    if ($login_result === true) {
        echo "Login successful!  User ID: " . $login_result;
    } else {
        echo "Login failed.  " . $login_result;
    }
}


?>

<!-- HTML Form for Login -->
<form method="post" action="">
    Username: <input type="text" name="login_username" value="<?php if(isset($_POST['login_username'])) echo $_POST['login_username']; ?>">
    Password: <input type="password" name="login_password" value="<?php if(isset($_POST['login_password'])) echo $_POST['login_password']; ?>">
    <button type="submit" name="login_button">Login</button>
</form>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to retrieve user information
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, create a session
        session_start();

        $user_data = $result->fetch_assoc();
        $_SESSION['user_id'] = $user_data['id']; // Store user ID in session
        $_SESSION['username'] = $user_data['username'];

        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example usage:  Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a protected page
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
    } else {
        $error = "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Form data from the login form
$username = $_POST['username'];
$password = $_POST['password'];

// Validate form data (very basic - improve for production)
if (empty($username) || empty($password)) {
    $error = 'Username and password cannot be empty.';
}

// Connect to the database
$conn = new mysqli($db_host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die('Connection failed: ' . $conn->connect_error);
}

// Prepare and execute the query (using prepared statements - BEST PRACTICE)
$sql = "SELECT id, username, password FROM users WHERE username = ?;";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $username); // 's' indicates a string parameter
$stmt->execute();

// Get the result
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    $error = 'Invalid username or password.';
} else {
    $row = $result->fetch_assoc();
    // Verify password (HASHED password from the database)
    if (password_verify($password, $row['password'])) {
        // Authentication successful!  Set session variables
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $username;
        header("Location: /welcome.php"); // Redirect to a welcome page
        exit();
    } else {
        $error = 'Incorrect password.';
    }
}

// Handle errors
if ($error != "") {
    echo "<p style='color: red;'>$error</p>";
}

// Close the connection
$stmt->close();
$conn->close();

?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (basic validation - add more robust validation as needed)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (must be a valid email address).";
  } else {
    // Query the database to verify the credentials
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE email = '$username'"; // Using email for security
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row["password"])) {
          // Login successful!  You can redirect or display a welcome message
          session_start();
          $_SESSION["user_id"] = $row["id"];
          $_SESSION["username"] = $row["email"]; // Use email instead of username
          header("Location: welcome.php"); // Redirect to a welcome page
          exit();
        } else {
          $error = "Incorrect password.";
        }
      } else {
        $error = "User not found.";
      }

      $stmt->close();
    } else {
      $error = "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Crucial for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'") && mysqli_fetch_row(mysqli_fetch_assoc(mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'"))) !== false) {
    // User exists, attempt to verify password
    $hashed_password = password_hash($_POST["password"], PASSWORD_DEFAULT);

    $result = mysqli_query($conn, "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'");

    if ($result) {
      $user_data = mysqli_fetch_assoc($result);

      // If user found, set session variables
      session_start();
      $_SESSION["user_id"] = $user_data["id"];
      $_SESSION["username"] = $user_data["username"];

      // Redirect to a success page or the homepage
      header("Location: success.php"); // Replace 'success.php' with your desired redirect
      exit();
    } else {
      $error_message = "Incorrect password.";
    }
  } else {
    $error_message = "Invalid username or password.";
  }
}
else{
   // If form is not submitted, display the login form
   $error_message = "";
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Link to registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual details)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get login details from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    // Check if the username exists
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row["password"])) {
            // If passwords match, set session variables
            session_start();
            $_SESSION["username"] = $username;
            $_SESSION["user_id"] = $row["id"]; // Store the user ID as well for more robust security
            echo "Login successful! <a href=''>Continue to Dashboard</a>";
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "User not found.";
    }

    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<form action="" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
</form>

<br>
<a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
session_start(); // Start the session

/**
 * User Login Function
 *
 * This function handles user login.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Database connection details (Replace with your actual credentials)
  $dbHost = "localhost";
  $dbUsername = "your_db_username";
  $dbPassword = "your_db_password";
  $dbName = "your_db_name";

  // Connect to the database
  $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['username'] = $username; // Store username in session
      $_SESSION['id'] = $row['id']; // Store user ID in session (optional, but recommended)
      return true;
    } else {
      // Password mismatch
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

/**
 *  Helper function to display a login form (for demonstration)
 */
function displayLoginForm() {
    ?>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>
    <?php
}


// Example usage:
// if (isset($_POST['username']) && isset($_POST['password'])) {
//   if (loginUser($_POST['username'], $_POST['password'])) {
//     echo "Login successful!";
//     // Redirect to a protected page or display a welcome message
//   } else {
//     echo "Invalid username or password.";
//   }
// }

// Display the login form
displayLoginForm();

?>


<?php
// ... (previous code) ...

/**
 * User Login Function (using Prepared Statements)
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Database connection details (Replace with your actual credentials)
  $dbHost = "localhost";
  $dbUsername = "your_db_username";
  $dbPassword = "your_db_password";
  $dbName = "your_db_name";

  // Connect to the database
  $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL statement
  $sql = "SELECT id, username, password FROM users WHERE username = ?";
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("s", $username);  // "s" indicates a string parameter

  // Execute the statement
  if ($stmt->execute()) {
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();

      // Verify the password
      if (password_verify($password, $row['password'])) {
        // Login successful
        $_SESSION['username'] = $username; // Store username in session
        $_SESSION['id'] = $row['id']; // Store user ID in session
        return true;
      } else {
        // Password mismatch
        return false;
      }
    } else {
      return false; // No rows returned (user not found)
    }

  } else {
    // Error executing the statement
    die("Error executing query: " . $conn->error);
  }

  // Close the connection
  $conn->close();
  $stmt->close(); // Important: Close the statement
}

// ... (rest of the code remains the same) ...
?>


<?php
session_start(); // Start the session

/**
 * Handles user login.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login was successful, false otherwise.
 */
function loginUser($username, $password) {
  // **IMPORTANT:  Never store passwords directly in the code. This is for demonstration only.**
  //  In a real application, you MUST hash and salt passwords before storing them.
  //  Using a library like Sodium or Blowfish is highly recommended.

  // Example: Check against hardcoded credentials (REMOVE THIS FOR PRODUCTION!)
  $validUsers = array(
    'john.doe' => 'password123',
    'jane.smith' => 'securepass',
  );

  if (isset($validUsers[$username])) {
    if (hash_equals($validUsers[$username], password_hash($password, PASSWORD_DEFAULT))) {
      $_SESSION['username'] = $username; // Store the username in the session
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
}

/**
 * Handles user logout.
 *
 * @return void
 */
function logoutUser() {
  unset($_SESSION['username']); // Remove the username from the session
  session_destroy(); // Destroy the session
}

// **Example Usage (Illustrative - Do not use this directly in a website)**
// Assume a form is submitted with username and password.

//  If form data is submitted...
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  Welcome, " . $username;
    // Redirect the user to a protected page or display a welcome message.
    // header("Location: /protected_page.php"); // Example: Redirect
  } else {
    echo "Invalid username or password.";
  }
}

// Example Logout Button (In your HTML)
// <form method="post" action="login.php"> ... </form>
// <button type="button" onclick="logoutUser()">Logout</button>
?>


<?php

/**
 * This function handles user login functionality.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|string Returns the user ID on successful login, or an error message on failure.
 */
function loginUser(string $username, string $password) {
  // **IMPORTANT: Replace this with your actual database connection and authentication logic.**
  // This is just a basic example for demonstration purposes.

  // Example Database Credentials - DO NOT USE THIS IN A REAL APPLICATION!
  $db_host = "localhost";
  $db_name = "your_database_name";
  $db_user = "your_db_user";
  $db_password = "your_db_password";


  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    return "Error: " . $conn->connect_error;
  }

  // SQL query to check username and password
  $sql = "SELECT id, username FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, retrieve data
    $user_data = $result->fetch_assoc();
    $user_id = $user_data['id'];
    $username = $user_data['username'];

    // Session management -  This is a *basic* example.  Use a more robust solution in production.
    session_start();
    $_SESSION['user_id'] = $user_id;
    $_SESSION['username'] = $username;


    // Redirect the user (optional, you can return the user ID instead)
    // header("Location: /home.php"); // Replace /home.php with your desired landing page

    return $user_id; // Return the user ID
  } else {
    return "Invalid username or password.";
  }

  $conn->close();
}

// --- Example Usage (Demonstration - For testing only) ---
// To test this function, you'll need to call it and handle the response.
// This is just for demonstration; don't run this directly in a web page.

// Simulate a user login attempt:
// $username = "testuser";
// $password = "password123";

// $result = loginUser($username, $password);

// if (is_numeric($result)) {
//   echo "Login successful! User ID: " . $result . "<br>";
// } else {
//   echo $result . "<br>";
// }
?>


<?php

//... (Database Connection code - use mysqli) ...

// SQL query with placeholders
$sql = "SELECT id, username FROM users WHERE username = ? AND password = ?";

// Prepare the statement
$stmt = $conn->prepare($sql);

// Bind the parameters
$stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

// Execute the statement
$stmt->execute();

// Get the result
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // User found, retrieve data
    $user_data = $result->fetch_assoc();
    $user_id = $user_data['id'];
    $username = $user_data['username'];

    // Session management
    session_start();
    $_SESSION['user_id'] = $user_id;
    $_SESSION['username'] = $username;

    // Redirect (optional)
    // header("Location: /home.php");
    return $user_id;
} else {
    return "Invalid username or password.";
}

$stmt->close();
$conn->close();
?>


<?php

// Database connection details - REPLACE WITH YOUR ACTUAL CREDENTIALS
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (IMPORTANT for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error_message = "Invalid email address.";
  } else {
    // Database query
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query - IMPORTANT for security
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";
    $stmt = $conn->prepare($sql);
    if ($stmt === false) {
      die("Error preparing statement: " . $conn->error);
    }

    // Bind parameters - IMPORTANT for security
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if (!$stmt->execute()) {
      echo "Error: " . $stmt->error;
      $stmt->close();
      $conn->close();
      exit();
    }

    // Get the result
    $result = $stmt->get_result();

    // Check if the user exists
    if ($result->num_rows == 0) {
      echo "<p style='color:red;'>Invalid username or password.</p>";
      $stmt->close();
      $conn->close();
    } else {
      // User exists, set session variables
      session_start();
      $_SESSION["user_id"] = $result->fetch_assoc()["id"];
      $_SESSION["username"] = $username;

      // Redirect to the protected page
      header("Location: protected_page.php");  // Replace with your protected page URL
      exit();
    }

  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color:red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate the input (basic validation - enhance as needed)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } elseif (strlen($username) < 3) {
        $error_message = "Username must be at least 3 characters long.";
    } elseif (strlen($password) < 5) {
        $error_message = "Password must be at least 5 characters long.";
    } else {
        // Hash the password for security
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Connect to the database
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check the connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check the username and password
        $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            // Verify the password
            if (password_verify($password, $row["password"])) {
                // Login successful
                // Set session variables to store the user's ID
                session_start();
                $_SESSION["user_id"] = $row["id"];
                $_SESSION["username"] = $row["username"];
                echo "Login successful!";
                // Redirect the user to a welcome page or other appropriate location
                header("Location: welcome.php"); // Replace welcome.php with your welcome page
                exit();
            } else {
                echo "Incorrect password.";
            }
        } else {
            echo "Username not found.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" required>
        Password: <input type="password" name="password" required>
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check the credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, create a session
        session_start();
        $row = $result->fetch_assoc();
        $_SESSION['user_id'] = $row['id']; // Store the user's ID in the session
        $_SESSION['username'] = $row['username'];
        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example Usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a secure page after successful login
        header("Location: secure_page.php");
        exit(); // Stop further execution
    } else {
        // Handle login failure (e.g., display an error message)
        $error = "Invalid username or password.";
        echo "<p style='color:red;'>" . $error . "</p>";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ?;";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("s", $username);  // "s" indicates a string parameter

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      $hashed_password = $row['password']; // Retrieve the hashed password

      // Verify the password (Crucially, compare with the *hashed* password)
      if (password_verify($password, $hashed_password)) {
        // Login successful
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        return true;
      } else {
        // Incorrect password
        return false;
      }
    } else {
      // No user found with that username
      return false;
    }

  } else {
    // Query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (simplified - you'll likely want to have a form and handle the form submission)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message.
    header("Location: protected_page.php"); // Redirect to a different page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!-- HTML form for login -->
<form method="post" action="">
  Username: <input type="text" name="username">
  Password: <input type="password" name="password">
  <button type="submit">Login</button>
</form>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!preg_match("/^[a-zA-Z0-9._-]+$/", $username)) {
    $error = "Invalid username.  Username can only contain letters, numbers, periods, underscores, and hyphens.";
  } elseif (!preg_match("/^[a-zA-Z0-9]+$/", $password)) {
    $error = "Invalid password. Password can only contain letters and numbers.";
  }
  else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      // User found - set session variables to indicate login
      session_start(); // Must be called before setting session variables
      $_SESSION["username"] = $username;
      $_SESSION["user_id"] = $result->fetch_assoc()["user_id"]; // Assuming you have a user_id column

      // Redirect to a protected page or display a welcome message
      header("Location: /protected_page.php"); // Replace with your protected page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ""; ?>" />
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ""; ?>" />
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


// ... (rest of the form handling code) ...

// After the user submits the form:
$username = $_POST["username"];
$password = $_POST["password"];

// Hash the password
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// SQL query to check credentials
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'";  // Now use the hashed password
$result = $conn->query($sql);


<?php
session_start(); // Start the session

/**
 * User Login Function
 *
 * @param string $username The username to login.
 * @param string $password The password for the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // 1. Sanitize Input (Important for Security)
  $username = trim($username);
  $password = trim($password);

  // 2. Database Credentials (Replace with your actual credentials)
  $db_host = "localhost";
  $db_name = "your_database_name";
  $db_user = "your_database_user";
  $db_password = "your_database_password";

  // 3. Connect to the Database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 4. Query the Database
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  // 5. Check for Results
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // 6. Password Verification (Crucial Security Step)
    if (password_verify($password, $row['password'])) {
      // 7. Login Successful
      $_SESSION['loggedin'] = true;
      $_SESSION['id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Password mismatch
      return false;
    }
  } else {
    // No user found
    return false;
  }

  // 8. Close the Connection
  $conn->close();
}


// --- Example Usage (Demonstration) ---

// Check if the user is already logged in
if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] == true) {
  echo "Welcome back, " . $_SESSION['username'] . "!";
}

// Handle Login Form Submission
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login Successful
    echo "Login successful!";
    // Redirect to a protected page or display a welcome message
  } else {
    // Login Failed
    echo "Incorrect username or password!";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="Enter username" required>
    <br><br>
    Password: <input type="password" name="password" placeholder="Enter password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, return user data
    $user = $result->fetch_assoc();
    return $user;
  } else {
    // User not found
    return null;
  }

  // Close connection
  $conn->close();
}

// Example usage (This is for demonstration - don't directly use this in a production environment)
// You'll need to replace these with your actual username and password.
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  $user = loginUser($username, $password);

  if ($user) {
    // User logged in successfully
    echo "Login successful!";
    echo "<br>Welcome, " . $user['username'];

    // You can store the user's ID in a session or cookie for further use.
    // Example (using session):
    session_start();
    $_SESSION['user_id'] = $user['id'];
    
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    <br>
    Password: <input type="password" name="password">
    <br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check the connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // Query to authenticate the user
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = $conn->query($sql);

      if ($result->num_rows == 1) {
        // User found, set session variables
        session_start();
        $_SESSION["username"] = $username;
        $result->fetch_assoc(); // Fetch the row data
        $error = "";  // Clear any previous errors
        // Redirect to a secure page or display a welcome message
        header("Location: welcome.php"); // Redirect to a welcome page
        exit(); // Stop further execution
      } else {
        $error = "Incorrect username or password.";
      }
    }
  }
}

// Display the login form if no form was submitted or if there's an error
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["SCRIPT_NAME"]; ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" placeholder="Your Username" value="<?php if (isset($username)) echo $username; ?>">
    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" placeholder="Your Password">
    <br><br>

    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here</a>

</body>
</html>


<?php

// Database credentials
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Basic validation - enhance for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check the connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // Use a prepared statement to prevent SQL injection
      $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
      $stmt = $conn->prepare($sql);

      if ($stmt) {
        // Bind the parameters
        $stmt->bind_param("ss", $username, $password);

        // Execute the query
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
          // User found, set session variables
          session_start();
          $_SESSION["username"] = $username;
          $result->fetch_assoc(); // Fetch the row data
          $error = "";  // Clear any previous errors
          header("Location: welcome.php");
          exit();
        } else {
          $error = "Incorrect username or password.";
        }

        // Close the statement
        $stmt->close();
      } else {
        $error = "Error preparing statement.";
      }
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["SCRIPT_NAME"]; ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" placeholder="Your Username">
    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" placeholder="Your Password">
    <br><br>

    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here</a>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check username and password
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify password (Important:  Never store passwords directly.  Use hashing!)
        if (password_verify($password, $row['password'])) {
            // Login successful!  Set session variables
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;

            return true; // Login successful
        } else {
            return false; // Incorrect password
        }
    } else {
        return false; // User not found
    }
}

// Example usage (in a form or similar)

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        echo "Username and password cannot be empty.";
    } else {
        // Call the loginUser function
        if (loginUser($username, $password)) {
            // Redirect to a secure page or display a welcome message
            header("Location: secure_page.php"); // Replace with your secure page
            exit();
        } else {
            echo "Invalid username or password.";
        }
    }
}
?>

<!-- HTML Form for Login -->
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
</form>


<?php

// Database connection details (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password
  $sql = "SELECT password FROM users WHERE username = '$username'";  // Use quotes around $username for security

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $stored_password = $row["password"];

    // Compare the entered password with the stored password (using password_verify)
    if (password_verify($password, $stored_password)) {
      // If passwords match, set a session variable to indicate login
      session_start();
      $_SESSION['username'] = $username;  // Store the username in the session
      return true; // Login successful
    } else {
      return false; // Passwords do not match
    }
  } else {
    return false; // User not found
  }

  $conn->close();
}

// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // If login is successful, redirect to a secure page
    header("Location: secure_page.php");
    exit();
  } else {
    // If login fails, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
session_start();

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

/**
 * User Login Function
 *
 * This function handles user login using credentials from form input.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password)
{
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Compare passwords (Use password_hash for secure password storage in production)
        if (password_verify($password, $row['password'])) {
            // Login successful
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }

    // Close the connection
    $conn->close();
}

/**
 * Logout Function
 */
function logoutUser() {
    unset($_SESSION['user_id']);
    unset($_SESSION['username']);
    session_destroy();
}


// --- Example Usage (Handle Login Form Submission) ---

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a protected page or display a success message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit(); // Important: Stop further script execution after redirect
    } else {
        // Display error message
        $error = "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>Error: " . $error . "</p>";
    } ?>

    <a href="logout.php">Logout</a> <!--  Link to a logout script -->
</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, return user data
    $user = $result->fetch_assoc();
    return $user; // Return the user's data (you can adapt this to return just the user ID, etc.)
  } else {
    // User not found
    return null;
  }

  // Close the connection
  $conn->close();
}

// Example Usage:  (This part is for demonstration - you'll need to integrate this into your application)

// Get username and password from the form (replace with your form input names)
$username = $_POST['username'];
$password = $_POST['password'];

// Handle the login process
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $user = loginUser($username, $password);

  if ($user) {
    // Login successful
    // Set a session variable to store the user's ID (or other relevant data)
    session_start();
    $_SESSION['user_id'] = $user['id']; // Assuming you have an 'id' field in your users table
    echo "Login successful!  You are now logged in as " . $username;
    // Redirect the user to a different page (optional)
    header("Location: welcome.php");
    exit();
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (important for security)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid Email Address.";
    } else {
        // Database query
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL query (prevent SQL injection)
        $query = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

        // Use prepared statement to prevent SQL injection
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

        if ($stmt->execute()) {
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found, set session variables
                session_start();
                $user_data = $result->fetch_assoc();
                $_SESSION["user_id"] = $user_data["id"];
                $_SESSION["username"] = $user_data["username"];
                // You might also store other user data here, like roles or permissions

                // Redirect to a secure page or display a welcome message
                header("Location: welcome.php"); // Replace 'welcome.php' with your welcome page
                exit(); // Important to stop further execution
            } else {
                $error = "Invalid username or password.";
            }
        } else {
            $error = "Error executing query.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
<?php } ?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" value="<?php echo isset($username) ? $username : ''; ?>">
    Password: <input type="password" name="password" placeholder="Enter your password">
    <button type="submit">Login</button>
</form>

</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Welcome</title>
</head>
<body>
    <h1>Welcome, <?php echo $_SESSION["username"]; ?>!</h1>
    <p>You are logged in as user ID: <?php echo $_SESSION["user_id"]; ?></p>
    <a href="logout.php">Logout</a> <!--  Create a logout.php file for logout functionality -->
</body>
</html>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (IMPORTANT - this is basic, improve for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (Please enter a valid email address).";
  } else {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, set session variables
      session_start();
      $user_row = $result->fetch_assoc();
      $_SESSION["user_id"] = $user_row["id"];
      $_SESSION["username"] = $user_row["username"];
      echo "Login successful!  Redirecting...";

      // Redirect to a protected page or your application's homepage
      header("Location: protected_page.php"); // Replace with your desired URL
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


// ... (rest of the code)

  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (Please enter a valid email address).";
  } else {
    // ... (database connection) ...

    $password = password_hash($_POST["password"], PASSWORD_DEFAULT); // Hash the password
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    ...
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
    $stmt->execute();
    ...
  }


<?php
session_start(); // Start the session

/**
 * Handles user login.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
    // Database connection (Replace with your actual database credentials)
    $db_host = "localhost";
    $db_name = "your_database_name";
    $db_user = "your_database_user";
    $db_password = "your_database_password";

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize inputs - IMPORTANT for security
    $username = trim($username);
    $password = trim($password);

    // SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get data from the result
        $user_data = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Login successful
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];

            return true;
        } else {
            return false; // Password incorrect
        }
    } else {
        return false; // User not found
    }

    // Close the connection
    $conn->close();
}


// Example Usage:  (This is for demonstrating the function, not for a complete form)
/*
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        echo "Login successful!  Redirecting...";
        header("Location: user_dashboard.php"); // Redirect to a secure page
        exit();
    } else {
        echo "Invalid username or password.";
    }
}
*/

?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_database_user';
$db_pass = 'your_database_password';

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows == 0) {
    return false; // User not found
  }

  $user = $result->fetch_assoc();

  // Verify the password
  if (password_verify($password, $user['password'])) {
    // If passwords match, set session variables
    session_start();
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $username;
    return true; // Login successful
  } else {
    return false; // Incorrect password
  }

  $conn->close();
}

// Example usage (to demonstrate login)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Replace protected_page.php
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle the login process
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL statement for the login query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the statement
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // User found, now you can do something like:
      //  - Set session variables
      //  - Redirect the user
      //  - Display a welcome message
      // Example:
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      $stmt->close();
      $conn->close();

      // Redirect the user after login
      header("Location: welcome.php"); // Replace welcome.php with your desired page
      exit(); // Stop further execution

    } else {
      $stmt->close();
      $conn->close();
      return false; // User not found
    }
  } else {
    $stmt = null;
    $conn->close();
    return false; // Preparation failed
  }
}


// Example usage (from a login form submission)
//  Let's assume the username and password are coming from a form called 'loginForm'
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (VERY IMPORTANT - see notes below)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    $loginResult = loginUser($username, $password);

    if ($loginResult === false) {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form action="login.php" method="post">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register here</a></p> <!-- Replace register.php with your registration page -->

</body>
</html>


<?php

// Database connection details - REPLACE WITH YOUR ACTUAL CREDENTIALS
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // 1. Database connection
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. SQL Query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; 
  // Use prepared statements to prevent SQL injection
  $stmt = $conn->prepare($sql); 
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings

  // 3. Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // 4.  Authentication successful - Now you can use the user's data
      $_SESSION['user_id'] = $row['id']; // Store user ID in session
      $_SESSION['username'] = $username;

      return true; // Login successful
    } else {
      return false; // No user found or incorrect password
    }
  } else {
    // Query error
    return false;
  }

  // 5. Close connection
  $stmt->close();
  $conn->close();
}

// Example Usage (in your HTML form)

// 1. Form Input Handling (Example - in your HTML form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // 2. Validate Input (Important - always validate user input!)
  if (empty($username) || empty($password)) {
    $error = "Username and password are required!";
  } else {
    // 3. Call the loginUser function
    $login_result = loginUser($username, $password);

    if ($login_result) {
      // 4. Successful Login - Redirect to a protected page
      header("Location: protected_page.php"); // Replace with your protected page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to authenticate the user
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare the query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // 3. Bind parameters
  $stmt->bind_param("ss", $username, $password);

  // 4. Execute the query
  if (!$stmt->execute()) {
    die("Error executing query: " . $stmt->error);
  }

  // 5. Get the result
  $result = $stmt->get_result();

  // 6. Check if a user was found
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // 7.  Create a session
    session_start();  // Start the session
    $_SESSION['user_id'] = $row['id']; // Store user ID in session
    $_SESSION['username'] = $username; // Store username in session (optional)

    //  You might also want to store other user data in the session.

    // 8.  Success!  Return true
    return true;
  } else {
    // 9. User not found
    return false;
  }

  // 10. Close the statement
  $stmt->close();

  // 11. Close the connection (not always necessary, but good practice)
  $conn->close();
}


// Example usage (handling the login form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // User successfully logged in
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    // User login failed
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  } ?>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Form data from the login form
$username = $_POST["username"];
$password = $_POST["password"];

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password are required.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email address.";
  } else {
    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);

      // Verify the password (using password_verify from PHP 8.1 and later, or manual comparison)
      if (password_verify($password, $row["password"])) {
        // Login successful
        // Set session variables to keep the user logged in
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        echo "Login successful! <a href='dashboard.php'>Go to Dashboard</a>";
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Username not found.";
    }
  }
} else {
  // If the form wasn't submitted via POST, redirect to the login form
  header("Location: login.php");
  exit();
}
?>


<?php

// Database configuration (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for the username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  //Important: Use prepared statements for security!

  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, set session variables
    session_start();
    $_SESSION["username"] = $username;
    $_SESSION["user_id"] = $result->fetch_assoc()["id"];  // Assuming you have an 'id' column in your users table

    // Redirect the user to a protected page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Invalid credentials
    echo "<p>Invalid username or password.</p>";
  }

  $conn->close();
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Form data handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Query to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        } else {
            // Successful login
            session_start();  // Start a session to store user information
            $_SESSION["username"] = $username;  // Store username in session
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    } ?>

    <form method="post" action="">
        Username: <input type="text" name="username" required>
        Password: <input type="password" name="password" required>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database connection details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error[] = "Username and password must be filled.";
  }

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows == 0) {
    $error[] = "Invalid username or password.";
  } else {
    // If the query returns a row, it means the user exists
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row["password"])) {
      // Password is correct!  Set session variables
      session_start();
      $_SESSION["username"] = $username; // Store the username in the session
      $_SESSION["id"] = $row["id"];  // Optionally, store the user ID as well
      echo "Login successful!";
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    } else {
      $error[] = "Incorrect password.";
    }
  }

  // If there are errors, display them
  if (count($error) > 0) {
    echo "<ul>";
    foreach ($error as $err) {
      echo "<li>" . $err . "</li>";
    }
    echo "</ul>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to verify credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found - Session started
    // Set session variables to identify the user
    session_start();
    $_SESSION["username"] = $username;  // Store username in session
    echo "Login successful!";
    // Redirect to a secure page or show a welcome message
    header("Location: secure_page.php"); // Redirect to a secure page
    exit();
  } else {
    echo "Invalid username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo __FILE__; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT - Add more robust validation)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (strlen($username) < 3) {
    $error_message = "Username must be at least 3 characters long.";
  }
  // In a real application, you would compare the input against the
  // database, properly hashed for security.  This is a simplified example.

  // Simulate a login check (replace with actual database query)
  if ($username == "admin" && $password == "password") {
    // Login successful
    session_start();
    $_SESSION["username"] = $username;
    header("Location: /welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    $error_message = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// ... (Previous code) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (strlen($username) < 3) {
    $error_message = "Username must be at least 3 characters long.";
  }

  // Hash the password
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // Simulate a login check (replace with actual database query)
  if ($username == "admin" && $hashed_password == password_verify("password", $password)) {
    // Login successful
    session_start();
    $_SESSION["username"] = $username;
    header("Location: /welcome.php");
    exit();
  } else {
    $error_message = "Invalid username or password.";
  }
}
?>


<?php

// Database connection details - Replace with your actual details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate inputs (IMPORTANT - See security notes below!)
  if (empty($username) || empty($password)) {
    $errors = ["Username" => "Username is required.", "Password" => "Password is required."];
  } elseif (strlen($username) < 3) {
    $errors = ["Username" => "Username must be at least 3 characters long."];
  }

  // Attempt to connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query - Prepare and execute.  This is safer than echo'ing raw user input
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; // Using prepared statements
  $stmt = $conn->prepare($sql);

  if ($stmt) {
      $stmt->bind_param("ss", $username, $password);  // "ss" means two strings
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found - Session based authentication
        session_start();
        $_SESSION["username"] = $username;
        $stmt->close();
        $conn->close();

        // Redirect to a protected page (e.g., dashboard)
        header("Location: dashboard.php");
        exit();
      } else {
        $stmt->close();
        $conn->close();
        $error = "Invalid username or password.";
      }
    } else {
      $stmt = null;
      $conn->close();
      $error = "Error preparing statement.";
    }


} else {
  // If form is not submitted, display the login form
  $error = "";
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>Not have an account? <a href="register.php">Register</a></p>
</body>
</html>


<?php

// Database Credentials (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$username = $_POST["username"];
$password = $_POST["password"];

// 1. Connect to the Database
try {
    $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}

// 2. Sanitize and Prepare the Query
// This is CRUCIAL for security.  Avoid using echo or print directly on user input.
$stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
$stmt->execute([$username, password_hash($password, PASSWORD_DEFAULT)]);  // password_hash for secure storage


// 3. Fetch the Result
$result = $stmt->fetch(PDO::FETCH_ASSOC);

// 4. Check if a user exists and is authenticated
if ($result) {
    // User exists, login successful
    session_start();
    $_SESSION["user_id"] = $result["id"];  // Store user ID in session
    $_SESSION["username"] = $result["username"];
    echo "Login successful!  Welcome, " . $_SESSION["username"];

    // Redirect to a protected page or dashboard
    header("Location: /dashboard.php");
    exit(); // Important to stop further execution after redirect
} else {
    // User does not exist
    echo "Invalid username or password.";
}

// 5. Close the Connection (good practice)
$conn = null;
?>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" for string

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // User found, set session variables
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      return true; // Login successful
    } else {
      return false; // User not found
    }
  } else {
    return false; // Query execution error
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (in your login form or script)

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - redirect or display welcome message
    header("Location: welcome.php"); // Replace with your welcome page
    exit();
  } else {
    // Login failed - display error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials - **IMPORTANT:  NEVER HARDCODE CREDENTIALS IN PRODUCTION!**
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic - improve for production)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($host, $sql);

    if (mysqli_num_rows($result) > 0) {
      // User exists - set session variables
      // You might want to store more user data here (e.g., user_id, role)
      $_SESSION["username"] = $username; 

      // Redirect to a secure page (e.g., dashboard)
      header("Location: dashboard.php");
      exit(); // Stop further execution after redirection
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" />
    <br />
    Password: <input type="password" name="password" />
    <br />
    <button type="submit">Login</button>
  </form>

  <br />
  <a href="register.php">Don't have an account? Register here.</a>


</body>
</html>


<?php

// Database credentials - **IMPORTANT:  NEVER HARDCODE CREDENTIALS IN PRODUCTION!**
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic - improve for production)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // SQL query using prepared statements
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = mysqli_prepare($host, $sql);

    if ($stmt) {
      // Bind parameters
      mysqli_stmt_bind_param($stmt, "s", $username, $password); // "s" indicates a string

      // Execute the query
      mysqli_stmt_execute($stmt);

      // Get the result
      $result = mysqli_stmt_get_result($stmt);

      // Check for results
      if (mysqli_num_rows($result) > 0) {
        // User exists - set session variables
        $_SESSION["username"] = $username;

        // Redirect to a secure page
        header("Location: dashboard.php");
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }

      // Close the statement
      mysqli_stmt_close($stmt);
    } else {
      $error_message = "Database error preparing statement.";
    }
  }
}
?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Form data
$username = $_POST["username"];
$password = $_POST["password"];

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to authenticate the user
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User exists, fetch the password hash
    $row = $result->fetch_assoc();
    $hashed_password = $row["password"]; // Assuming password is stored as a hash

    // Verify the password
    if (password_verify($password, $hashed_password)) {
        // Password matches, user is authenticated
        // Set a session variable to store the user's ID
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;

        echo "Login successful!";  // Or redirect to your dashboard
        // You can also set a flag to show a success message on the login form
        // e.g., echo "<p style='color:green;'>Login successful!</p>";

    } else {
        // Password does not match
        echo "Incorrect password!";
    }
} else {
    // User does not exist
    echo "User not found!";
}

$conn->close();

?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Form data
$username = $_POST["username"];
$password = $_POST["password"];

// Connect to the database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare the SQL query
$sql = "SELECT id, username, password FROM users WHERE username = ?";  // Use a placeholder
$stmt = $conn->prepare($sql);

// Bind the parameters
$stmt->bind_param("s", $username); // "s" indicates a string

// Execute the query
$stmt->execute();

$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // User exists, fetch the password hash
    $row = $result->fetch_assoc();
    $hashed_password = $row["password"];

    // Verify the password
    if (password_verify($password, $hashed_password)) {
        // Password matches, user is authenticated
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;

        echo "Login successful!";
    } else {
        echo "Incorrect password!";
    }
} else {
    echo "User not found!";
}

$stmt->close();
$conn->close();

?>


<?php

// Database Configuration (Replace with your actual values)
$db_host = "localhost";
$db_user = "your_db_user";
$db_pass = "your_db_password";
$db_name = "your_db_name";

// ---  Function to handle Login ---
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to fetch user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Verify password (use a secure hashing method - see below)
    if (password_verify($password, $user['password'])) {
      // Successful login
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true; // Indicate successful login
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // User not found
  }

  $conn->close();
}

// ---  Example Usage (For demonstration only - should be within a form submission) ---

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - prevent SQL injection)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
      // Call the loginUser function
      $loginResult = loginUser($username, $password);

      if ($loginResult) {
        // Successful login - Redirect to a secure page or display a welcome message
        header("Location: welcome.php"); // Replace with your desired page
        exit(); // Stop further execution
      } else {
        $error = "Invalid username or password.";
      }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <input type="submit" value="Login" />
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

/**
 * User login function
 *
 * @param string $username
 * @param string $password
 * @return int|false  Returns user ID on success, false on failure
 */
function user_login(string $username, string $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username FROM users WHERE username = ? AND password = ? LIMIT 1";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
    return false;
  }

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the query
  if (!$stmt->execute()) {
    die("Error executing query: " . $stmt->error);
    return false;
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows == 0) {
    $stmt->close();
    return false;
  }

  // Fetch the user data
  $user = $result->fetch_assoc();

  // Close the statement and result
  $stmt->close();
  $result->close();

  // Return the user ID
  return $user['id'];
}


// Example usage:
$username = $_POST['username']; // Get username from form
$password = $_POST['password'];  // Get password from form

if (isset($username) && isset($password)) {
  $user_id = user_login($username, $password);

  if ($user_id) {
    // User is logged in successfully
    echo "Welcome, User ID: " . $user_id . "<br>";
    // You can now redirect the user to a protected page or perform other actions.
  } else {
    // Login failed
    echo "Invalid username or password.<br>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $query = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if a user was found
    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        // Session management
        session_start();
        $_SESSION['username'] = $user['username'];
        $_SESSION['user_id'] = $user['id']; // Assuming you have a user ID
        return true; // Login successful
    } else {
        return false; // Login failed
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example usage (handling login form submission - demonstration only)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        header("Location: /welcome.php"); // Redirect to a welcome page
        exit();
    } else {
        echo "<p>Invalid username or password.</p>";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    session_start();
    $user_data = $result->fetch_assoc();
    $_SESSION['user_id'] = $user_data['id'];
    $_SESSION['username'] = $user_data['username'];
    // You can also store other user information in session if needed
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - see notes below)
  if (empty($username) || empty($password)) {
    echo "Username and password must be filled.";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Login successful, redirect to a protected page or display a welcome message
      header("Location: protected_page.php"); // Redirect to a secure page
      exit();
    } else {
      // Login failed, display an error message
      echo "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Establish database connection
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user credentials
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close connection
  $conn->close();
}


// Example usage (simulated form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    // Login failed
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>


<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login authentication and returns a session cookie
 * if successful.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Simulate a database lookup - Replace this with your actual database query
  $users = [
    ['username' => 'john.doe', 'password' => 'secret123'],
    ['username' => 'jane.smith', 'password' => 'securepass'],
  ];

  // Convert input to lowercase for case-insensitive comparison
  $username = strtolower($username);
  $password = strtolower($password);

  foreach ($users as $user) {
    if ($user['username'] === $username && $user['password'] === $password) {
      // Login successful
      // Set a session cookie to track the user
      session_start();
      $_SESSION['username'] = $username;  // Store the username in the session
      return true;
    }
  }

  // Login failed
  return false;
}

// Example Usage (demonstration)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security - implement robust validation)
  if (empty($username) || empty($password)) {
    echo "<p style='color:red;'>Username and password cannot be empty.</p>";
  } else {
    // Call the login function
    if (loginUser($username, $password)) {
      // Redirect to a secure page after successful login
      header("Location: secure_page.php"); // Redirect to a protected page
      exit();
    } else {
      echo "<p style='color:red;'>Invalid username or password.</p>";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, verify password
    $row = $result->fetch_assoc();
    if (password_verify($password, $row['password'])) { // Use password_verify for secure password comparison
      // Login successful
      session_start(); // Start the session
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close connection
  $conn->close();
}

// Example usage:
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Redirect to a protected page
    exit(); // Stop further execution
  } else {
    // Login failed - display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Form data
$username = $_POST["username"];
$password = $_POST["password"];


// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to retrieve user data
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";

$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User found
    $row = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $row["password"])) { // Use password_verify()
        // Login successful
        session_start();  // Start the session
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;

        // Redirect to a secure page (e.g., dashboard)
        header("Location: dashboard.php"); // Replace with your dashboard URL
        exit;

    } else {
        // Incorrect password
        echo "Incorrect password.";
    }

} else {
    // User not found
    echo "User not found.";
}

$conn->close();

?>


<?php
// ... (Database configuration as before)

// Form data
$username = $_POST["username"];
$password = $_POST["password"];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to retrieve user data
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";

$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();

    // Hash the provided password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    if ($hashed_password === $row["password"]) {
        // Login successful
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;

        header("Location: dashboard.php");
        exit;

    } else {
        echo "Incorrect password.";
    }

} else {
    echo "User not found.";
}

$conn->close();
?>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check for connection errors
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query for login
      $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
      $result = $conn->query($sql);

      if ($result->num_rows == 0) {
        $error = "Invalid username or password.";
      } else {
        // If the query returns a result, it means the user exists
        $row = $result->fetch_assoc();
        // Password verification (VERY IMPORTANT - use password_hash and password_verify)
        if (password_verify($password, $row["password"])) {
          // Login successful! Set a session variable to store the user's ID
          $_SESSION["user_id"] = $row["id"];
          $error = "Login successful!";  // Or redirect to a success page
        } else {
          $error = "Invalid username or password.";
        }
      }
    }
  }
}

// Check if the user is logged in
if (isset($_SESSION["user_id"])) {
  // Redirect to a secure area or display a welcome message
  echo "<h1>Welcome, User!</h1>";
} else {
  // Display the login form
  echo "<h1>Login</h1>";
  echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
  echo "<label for='username'>Username:</label><br>";
  echo "<input type='text' id='username' name='username' required><br><br>";
  echo "<label for='password'>Password:</label><br>";
  echo "<input type='password' id='password' name='password' required><br><br>";
  echo "<button type='submit'>Login</button>";
  echo "</form>";
  if (isset($error)) {
    echo "<p style='color: red;'>Error: " . $error . "</p>";
  }
}

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_user = 'your_db_user';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security - prevent SQL injection and other issues)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password are required.";
  } else {
    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query with a prepared statement (Highly Recommended)
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found
        $user = $result->fetch_assoc();
        // Set session variables to store user information
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];
        // You can store more user data in the session if needed (e.g., role, name)
        echo "Login successful!";
        header("Location: welcome.php"); // Redirect to a welcome page (adjust path as needed)
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    } else {
      $error_message = "Error preparing the SQL statement.";
    }

    $stmt->close();
    $conn->close();
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>
  <br>
  <a href="logout.php">Logout</a>

</body>
</html>


<?php

// Assuming you have a register() function that creates a new user account
// and securely hashes the password before inserting it into the database.

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // ... (your register() function call here to create the user) ...

  echo "Registration successful!  Please check your email for verification."; // or redirect to login page
}
?>

<!-- (Same HTML form as login.php) -->


<?php

// Database Credentials (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for username and password
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, verify password
    $user_data = $result->fetch_assoc();
    if (password_verify($password, $user_data['password'])) {
      // Password matches, login successful
      $_SESSION['user_id'] = $user_data['id'];
      $_SESSION['username'] = $user_data['username'];
      return true;
    } else {
      // Password does not match
      return false;
    }
  } else {
    // User not found
    return false;
  }
}

// --- Example Usage (Illustrative - Not complete login form) ---

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a welcome page or desired location
    header("Location: welcome.php"); // Replace welcome.php with your desired page
    exit();
  } else {
    // Login failed, display an error message
    $error = "Invalid username or password.";
  }
}

// --- Login Form (Simplified for Demonstration) ---
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)): ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php endif; ?>

  <form method="post" action="">
    Username: <input type="text" name="username" value="<?php if(isset($username)) echo $username; ?>">
    <br><br>
    Password: <input type="password" name="password" value="<?php if(isset($password)) echo $password; ?>">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Not registered? Register here.</a> <!-- Replace with your register page -->

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT: Sanitize and validate all user input)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

    // Bind parameters to prevent SQL injection
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password); // 'ss' indicates two string parameters

    // Execute the query
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found, set session variables
        session_start();
        $user_id = $result->fetch_assoc()["id"];
        $username = $result->fetch_assoc()["username"];
        $_SESSION["user_id"] = $user_id;
        $_SESSION["username"] = $username;

        // Redirect to a protected page (e.g., homepage)
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    } else {
      $error_message = "Error executing query.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" value="<?php if (isset($username)) echo htmlspecialchars($username); ?>"><br><br>
    Password: <input type="password" name="password" value="<?php if (isset($password)) echo htmlspecialchars($password); ?>"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_username';
$db_pass = 'your_db_password';

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (Important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        //  Hashes for Password Storage - DO NOT STORE PLAINTEXT PASSWORDS!
        // In a real application, you would hash and salt the password before storing it in the database.
        // This is a simplified example for demonstration purposes.

        // Attempt to authenticate the user
        $result = mysqli_query($conn, "SELECT * FROM users WHERE username = '$username' AND password = '$password'");

        if (mysqli_num_rows($result) > 0) {
            // User found, set session variables and redirect
            $_SESSION["username"] = $username;
            // Optionally, store user information in the session:
            // $_SESSION['user_id'] = $result['id'];
            //  ... other user details ...

            // Redirect to a secure page (e.g., the homepage)
            header("Location: homepage.php");
            exit(); // Very important to stop further execution after redirect
        } else {
            $error_message = "Incorrect username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h1>User Login</h1>

<?php
if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <br />
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database connection details
$db_host = 'localhost';
$db_user = 'your_db_user';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { // Validate email (example)
    $error_message = "Invalid username (must be an email address).";
  } else {
    // Database query
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      $stmt->bind_param("ss", $username, $password); // "ss" means two strings
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found
        $row = $result->fetch_assoc();
        // Set session variables
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        echo "Login successful!";
        header("Location: welcome.php"); // Redirect to a welcome page
        exit;
      } else {
        $error_message = "Incorrect username or password.";
      }
    } else {
      $error_message = "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

/**
 * Handles user login functionality.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return int|false 1 if successful, false if failed.
 */
function loginUser(string $username, string $password)
{
    // **IMPORTANT:**  Replace this with a secure database connection and query.
    // This example uses a simple, insecure, in-memory array for demonstration purposes only.
    // NEVER use this in a production environment!

    $users = [
        ['username' => 'john.doe', 'password' => 'securePassword123'],
        ['username' => 'jane.smith', 'password' => 'anotherPassword'],
        ['username' => 'admin', 'password' => 'superSecretPass']
    ];

    // Find the user in the array
    foreach ($users as $user) {
        if ($user['username'] === $username && password_verify($password, $user['password'])) {
            // Authentication successful!  Store a session ID or similar to track the user.
            session_start();
            $_SESSION['username'] = $username; // Store username in session
            return 1; // Indicate success
        }
    }

    // Authentication failed
    return false;
}

// Example usage (from a login form):
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        // Successful login - Redirect to a secure page or display a welcome message.
        header("Location: /welcome.php"); // Replace /welcome.php with your desired page
        exit();
    } else {
        // Login failed - Display an error message.
        echo "<p style='color:red;'>Invalid username or password.</p>";
    }
}

// Example form (HTML - place this in your login form)
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data from the login form
$login_username = $_POST['username'];
$login_password = $_POST['password'];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Prepare and execute the query
$sql = "SELECT username, password FROM users"; // Replace 'users' with your table name
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // Fetch the data
  $row = $result->fetch_assoc();

  // Verify credentials
  if (password_verify($login_password, $row['password'])) {
    // Login successful
    // Set session variables to track the user
    session_start();
    $_SESSION['username'] = $row['username'];
    $_SESSION['user_id'] = $row['id']; // Assuming you have an id column in your table

    // Redirect to a welcome page or desired location
    header("Location: welcome.php"); // Replace 'welcome.php' with your welcome page
    exit();  // Important:  Prevent further script execution
  } else {
    // Login failed - password incorrect
    echo "Incorrect password.";
  }
} else {
  // No users found
  echo "No users found.";
}

// Close the connection
$conn->close();

?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Query the database to check for the username and password
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($db_host, $sql); // Use mysqli_query for modern PHP

    if (mysqli_num_rows($result) > 0) {
      // User found, set a session variable to indicate login
      $_SESSION["username"] = $username;
      // Optionally, redirect to a protected page after successful login
      header("Location: protected_page.php"); // Replace with your protected page
      exit(); // Important to stop further script execution
    } else {
      $error_message = "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" value="<?php if (isset($username)) echo htmlspecialchars($username); ?>">
    <br><br>
    Password: <input type="password" name="password" placeholder="Enter your password">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="registration.php">New User? Register here.</a>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (basic example - improve this significantly for production)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (trim($username) == "" || trim($password) == "") {
    $error_message = "Username and password cannot be empty.";
  }
  else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Verify the password (hash comparison - VERY IMPORTANT!)
      if (password_verify($password, $row["password"])) {
        // Login successful
        session_start(); // Start the session
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Username not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual values!)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // 3. Bind the parameters
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

  // 4. Execute the query
  if ($stmt->execute()) {
    // 5. Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found
      $row = $result->fetch_assoc();
      // 6. Set session variables
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];

      return true; // Login successful
    } else {
      // No user found with those credentials
      return false;
    }
  } else {
    // Error executing query
    return false;
  }

  // 7. Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (Illustrative - this is for testing only)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - redirect or display a welcome message
    echo "Login successful!  Welcome, " . $_SESSION['username'];
    // Redirect to a secure page, or display a welcome message.
    header("Location: secure_page.php"); // Replace with your secure page
    exit();

  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}

?>


<?php
session_start();

// Database connection details (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic, for demonstration purposes)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password are required.";
  } else {
    // Database query (use prepared statements for security - see important note)
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    $sql = "SELECT id, username, password FROM users WHERE username = ?;";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username); // 's' indicates a string
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      $row = $result->fetch_assoc();
      // Hash the password from the database and compare
      if (password_verify($password, $row["password"])) {
        // Login successful
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>
</body>
</html>


<?php
session_start();

/**
 * User login function.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password)
{
    // Database credentials (replace with your actual credentials)
    $db_host = 'localhost';
    $db_username = 'your_db_username';
    $db_password = 'your_db_password';
    $db_name = 'your_db_name';

    // Connect to the database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ?";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind the parameter
    $stmt->bind_param("s", $username);

    // Execute the statement
    if ($stmt->execute() === TRUE) {
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            $hashed_password = $row['password']; // Get the hashed password

            // Verify the password
            if (password_verify($password, $hashed_password)) {
                // Login successful
                $_SESSION['username'] = $username;
                $_SESSION['id'] = $row['id']; // Store the user ID
                return true;
            } else {
                // Password mismatch
                return false;
            }
        } else {
            // No user found
            return false;
        }
    } else {
        // Error executing the query
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example Usage (for demonstration only - don't expose this in a real application)
// $username = "testuser";
// $password = "password123";

// if (loginUser($username, $password)) {
//     echo "Login successful!";
// } else {
//     echo "Login failed.";
// }

?>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Verify password
    if (password_verify($password, $user['password'])) {
      // Login successful
      $_SESSION['loggedin'] = true;
      $_SESSION['id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true;
    } else {
      // Password mismatch
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}


// Example usage (HTML form for login)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a protected page
    header("Location: protected.php"); // Replace 'protected.php' with your protected page URL
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Link to registration page (you'll need to create this) -->

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate username and password (important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      // Authentication successful!
      // Set a session variable to store the user's ID
      session_start();
      $_SESSION["user_id"] = $result->fetch_assoc()["id"]; // Assuming 'id' is the user ID column
      $error_message = "Login successful.";

      // Redirect to a protected page
      header("Location: protected_page.php"); // Replace with your protected page URL
      exit();
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form action="<?php echo htmlspecialchars($_SERVER["REQUEST_URI"]); ?>" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" placeholder="Enter your username" value="<?php if (isset($username)) echo $username; ?>">
    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" placeholder="Enter your password">
    <br><br>

    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
session_start();

/**
 * Handles user login functionality.
 *
 * @param string $username The username to log in.
 * @param string $password The password for the username.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password)
{
    // **IMPORTANT:  Never store passwords directly in your code!**
    // This is a simplified example for demonstration purposes.
    // In a real-world application, you MUST hash the password 
    // before storing it in the database.

    // Simulated Database (replace with your actual database connection)
    $validUsers = [
        'john.doe' => 'password123',
        'jane.smith' => 'securePass',
    ];

    // Convert input to lowercase for case-insensitive comparison
    $username = strtolower($username);

    if (isset($validUsers[$username])) {
        // Verify the password
        if ($validUsers[$username] === $password) {
            // Successful login!
            $_SESSION['user_id'] = $username; // Store user ID (or any relevant user data)
            $_SESSION['logged_in'] = true;
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }
}


// Example usage:  (This code would typically be in a form submission handler)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Login successful, redirect to a secure page
        header("Location: /secure_page.php"); // Replace with your secure page URL
        exit();
    } else {
        // Login failed
        $error = "Invalid username or password.";
        echo "<p style='color: red;'>$error</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h1>User Login</h1>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
     $error = "Invalid username.  Username must be a valid email address or contain only letters, numbers, and underscores.";
  }  else {
    // Hash the password (VERY IMPORTANT for security)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        if (password_verify($password, $row["password"])) {
          // Authentication successful!
          // Set session variables to keep the user logged in
          session_start();
          $_SESSION["user_id"] = $row["id"];
          $_SESSION["username"] = $row["username"];
          echo "Login successful!";
          // Redirect the user to a welcome page or desired location
          header("Location: welcome.php"); // Replace with your welcome page
          exit();
        } else {
          echo "Incorrect password.";
        }
      } else {
        echo "User not found.";
      }

      $stmt->close();
    } else {
      echo "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for user credentials
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, retrieve data
    $user = $result->fetch_assoc();
    $hashed_password = $user['password']; // Retrieve the password

    // Verify password (compare with hashed password)
    if (password_verify($password, $hashed_password)) {
      // Password is correct, set session variables
      session_start();
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true; // Login successful
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // User not found
  }
}

// Example usage (this would be in your login form processing)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - redirect or display a welcome message
    header("Location: welcome.php"); // Example: Redirect to a welcome page
    exit();
  } else {
    // Login failed - display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Form data from the login form
$username = $_POST['username'];
$password = $_POST['password'];

// Validate input (important to prevent common vulnerabilities)
if (empty($username) || empty($password)) {
    // Handle empty fields (e.g., display an error message)
    echo "<p>Username and password fields cannot be empty.</p>";
    exit; // Stop further execution
}

// Connect to the database
$conn = new mysqli($db_host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare the SQL query
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$stmt = $conn->prepare($sql);

// Check if the prepared statement is ready
if (!$stmt->prepare($sql)) {
    echo "Error preparing statement";
    exit;
}

// Bind the password (using password_hash)
$stmt->bind_param("s", $password);

// Execute the query
$result = $stmt->execute();

// Check if the query was successful
if ($result) {
    // Get the result row
    $row = $stmt->fetch_assoc();

    // Check if a user was found
    if ($row['id']) {
        // Verify the password (using password_verify)
        if (password_verify($password, $row['password'])) {
            // User found and password verified!
            // Set session variables to track the user
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;

            // Redirect the user to a secure page (e.g., the dashboard)
            header("Location: dashboard.php"); // Assuming you have a dashboard.php page
            exit;
        } else {
            // Password mismatch
            echo "<p>Incorrect password.</p>";
        }
    } else {
        // User not found
        echo "<p>User not found.</p>";
    }
}

// Close the connection
$conn->close();

?>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);  // "ss" for string, string

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Set session variables to indicate login
      $_SESSION['user_id'] = $row['id'];  // Assuming you have an 'id' column in your users table
      $_SESSION['username'] = $row['username'];
      return true;  // Login successful
    } else {
      return false; // No user found with those credentials
    }

  } else {
    // Handle SQL errors
    error_log("SQL error: " . $conn->error); // Log the error for debugging
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage:

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty.";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Login successful, redirect to a protected page or display a welcome message
      header("Location: protected_page.php"); // Redirect to a secure page
      exit();
    } else {
      // Login failed, display an error message
      echo "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login authentication.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false Returns the user ID on successful login, or false on failure.
 */
function loginUser(string $username, string $password) {
  // In a real application, you would connect to a database here.
  // This example uses a hardcoded user database for demonstration purposes only.

  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'securePass',
    'admin' => 'admin123'
  ];

  // Check if the username exists in the user database
  if (isset($validUsers[$username])) {
    // Check if the password matches
    if (hash('sha256', $password) === hash('sha256', $validUsers[$username])) {
      // Authentication successful
      session_start();  // Start a session to store user information
      $_SESSION['userId'] = $username; // Store the username (could also store the user ID)
      return $username; // Return the username as the user ID
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // Username does not exist
    return false;
  }
}


/**
 * Example Usage
 */

// Get username and password from form input (example)
$username = $_POST['username'];
$password = $_POST['password'];


// Attempt to login the user
$userId = loginUser($username, $password);

if ($userId) {
  // Login successful
  echo "Login successful! User ID: " . $userId . "<br>";
  // You can redirect the user to a different page here.
  // header("Location: user_dashboard.php");  // Example redirect
  exit(); // Stop further execution of the script
} else {
  // Login failed
  echo "Login failed.  Invalid username or password.<br>";
}

?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (mysqli_num_rows(mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'") == 0) ) {
    $error = "Invalid username or password.";
  } else {
    // Authenticate the user
    $password_hash = password_hash($password, PASSWORD_DEFAULT); // Hash the password
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    $user = mysqli_fetch_assoc($result);

    // Check if the password matches
    if (password_verify($password, $user["password_hash"])) {
      // Login successful!  Set a session variable.
      $_SESSION["user_id"] = $user["id"]; // Store the user ID in the session
      $_SESSION["username"] = $user["username"];
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    } else {
      $error = "Incorrect password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form action="login.php" method="post">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // Hash the password before comparing (VERY IMPORTANT!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check the credentials
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($db_connection, $sql);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);
      if (password_verify($password, $row["password"])) {
        // Password matches, login successful
        session_start(); // Start a session to store user information
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        
        // Redirect the user to a protected page
        header("Location: protected_page.php"); // Replace with your protected page URL
        exit(); // Stop further script execution
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Incorrect username.";
    }
  }
}

// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? $username : ''; ?>" />
    Password: <input type="password" name="password" value="<?php echo isset($password) ? $password : ''; ?>" />
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


$username = $_POST["username"];
$password = $_POST["password"];

$sql = "SELECT id, username, password FROM users WHERE username = ?";
$stmt = mysqli_prepare($db_connection, $sql);
mysqli_stmt_bind_param($stmt, "s", $username); // "s" indicates a string
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

// ... rest of the login logic using $result ...

mysqli_stmt_close($stmt);


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password must be filled.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query - Use prepared statements for security!
        $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
        $stmt = $conn->prepare($sql);

        if ($stmt) {
            $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // Successful login
                session_start(); // Start the session
                $_SESSION["username"] = $username; // Store the username in the session
                $user_data = $result->fetch_assoc();
                $_SESSION["user_id"] = $user_data["id"]; //  Store the user ID as well (recommended)
                header("Location: welcome.php"); // Redirect to a welcome page
                exit();
            } else {
                $error_message = "Invalid username or password.";
            }
        } else {
            $error_message = "Error preparing SQL statement.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" required>
        Password: <input type="password" name="password" required>
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to authenticate the user
function loginUser($username, $password) {
  // 1. Connect to the Database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. SQL Query to Retrieve User
  $query = "SELECT id, username, password FROM users WHERE username = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("s", $username); // "s" indicates a string parameter

  if ($stmt->execute() === false) {
    // Handle execution error
    echo "Query execution failed: " . $conn->error;
    $stmt->close();
    $conn->close();
    return false;
  }

  // 3. Get Result
  $result = $stmt->get_result();

  // 4. Check if User Found
  if ($result->num_rows == 0) {
    // User not found
    $stmt->close();
    $conn->close();
    return false;
  }

  // 5. Get User Data
  $user = $result->fetch_assoc(); // Fetch as an associative array
  $stmt->close();
  $conn->close();

  // 6. Verify Password (Using Password Hashing - VERY IMPORTANT!)
  if (password_verify($password, $user['password'])) {
    // Password correct!
    return $user['id']; // Return the user ID if authentication is successful
  } else {
    // Incorrect password
    return false;
  }
}

// Example Usage (Handling Login Form Submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (empty($username) || empty($password)) {
    echo "Username and password fields are required.";
  } else {
    $userId = loginUser($username, $password);

    if ($userId) {
      // Login Successful
      session_start(); // Start the session
      $_SESSION['userId'] = $userId;  // Store the user ID in the session
      echo "Login successful! You are now logged in.";
      // Redirect to a protected page or the homepage
      header("Location: /protected_page.php"); // Replace with your desired URL
      exit();
    } else {
      // Login Failed
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle the login process
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, verify the password
    $row = $result->fetch_assoc();
    if (password_verify($password, $row['password'])) { // Use password_verify for security
      // Authentication successful
      session_start();  // Start the session to store user information

      // Store user information in the session
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];

      return true; // Indicate successful login
    } else {
      return false; // Password mismatch
    }
  } else {
    return false; // User not found
  }

  $conn->close();
}

// Example usage (This is a simplified example; handle form input and error handling properly)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information based on username
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password (using password_verify)
    if (password_verify($password, $row['password'])) {
      // Successful login
      $_SESSION['user_id'] = $row['id']; // Store user ID in session
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example Usage (Form Handling - Simplified)
// Assume this is from a form submission

// Get username and password from form data (in a real application, sanitize this!)
$username = $_POST['username'];
$password = $_POST['password'];

// Check if the login function returns true
if (loginUser($username, $password)) {
  // Successful Login - Redirect to protected page or display welcome message
  header("Location: /protected_page.php"); // Replace with the correct URL
  exit();
} else {
  // Failed Login - Display error message
  echo "<p style='color:red;'>Invalid username or password.</p>";
}

?>

<!-- HTML Form (Example) -->
<form action="" method="post">
  Username: <input type="text" name="username">
  Password: <input type="password" name="password">
  <button type="submit">Login</button>
</form>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Session handling (for storing user information)
session_start();

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $user_data = $result->fetch_assoc();
      $user_id = $user_data['id'];
      $username = $user_data['username'];

      // Set session variables
      $_SESSION['user_id'] = $user_id;
      $_SESSION['username'] = $username;

      // Optionally, redirect the user
      // header("Location: user_dashboard.php");
      // exit();

      return true;  // Login successful
    } else {
      return false; // No user found
    }

  } else {
    // Handle query errors
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (handling login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to a user dashboard or other protected page
    header("Location: user_dashboard.php");
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Credentials - Replace with your actual values
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Function to validate user input
function validate_input($username, $password) {
    // Sanitize inputs (important for security)
    $username = trim($username);
    $password = trim($password);

    // Basic validation - you should enhance this with more checks
    if (empty($username) || empty($password)) {
        return false;
    }

    return true;
}

// Function to authenticate the user
function authenticate_user($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?;";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    if ($stmt) {
        // Bind parameters
        $stmt->bind_param("ss", $username, $password);

        // Execute the statement
        if ($stmt->execute()) {
            // Get the result
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found - return user data
                $row = $result->fetch_assoc();
                $stmt->close();  // Close statement
                return $row;
            } else {
                // No user found or multiple users with the same username (shouldn't happen)
                $stmt->close();
                return null;
            }
        } else {
            // Error executing the query
            $stmt->close();
            return null;
        }
    } else {
        // Error preparing the statement
        return null;
    }
}

// Example usage:

// 1. Get user input
$username = $_POST["username"];
$password = $_POST["password"];

// 2. Validate the input
if (!validate_input($username, $password)) {
    echo "Invalid username or password.";
} else {
    // 3. Authenticate the user
    $user = authenticate_user($username, $password);

    // 4. Handle the result
    if ($user) {
        // User is authenticated
        echo "Welcome, " . $user["username"];  // Or use $user["username"]
        // Session management or other authentication-related tasks would go here
    } else {
        // User is not authenticated
        echo "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Hash the password (Store only the hash, not the plain password!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query
    $sql = "SELECT id, username, hashed_password FROM users WHERE username = '$username' AND hashed_password = '$hashed_password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      // User found, set session variables
      $row = $result->fetch_assoc();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      echo "Login successful!";
      // Redirect to a protected page or display a welcome message
      header("Location: protected_page.php"); // Example: Redirect to a protected page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, set session variables
    session_start();
    $_SESSION["username"] = $username; // Store username in session
    // You can store other user data here if needed
    // For example: $_SESSION["user_id"] = $result->fetch_assoc()["user_id"];

    // Redirect to a protected page or home page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();  // Very important to stop further execution
  } else {
    // User not found
    echo "Invalid username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form action="login.php" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
session_start();

/**
 * Handles user login functionality.
 *
 * @param string $username The username to authenticate.
 * @param string $password The password to authenticate.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Database connection (Replace with your actual database connection details)
  $dbHost = 'localhost';
  $dbName = 'your_database_name';
  $dbUser = 'your_username';
  $dbPassword = 'your_password';

  // Credentials for database connection
  $conn = new mysqli($dbHost, $dbUser, $dbPassword, $dbName);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $user = $result->fetch_assoc();
    $_SESSION['username'] = $user['username'];
    $_SESSION['user_id'] = $user['id']; // Assuming you have an ID column in your users table
    return true;
  } else {
    return false;
  }

  $conn->close();
}


/**
 * Handles user logout functionality.
 */
function logoutUser() {
  // Destroy session variables
  session_unset();
  session_destroy();
}

// Example Usage (Demonstration -  This part won't run on its own)
// This is just to illustrate how you'd use the functions.

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display content
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

// Logout button example (replace with your actual button)
if (isset($_GET['logout'])) {
  logoutUser();
  echo "<p>You have been logged out.</p>";
  header("Location: /index.php"); // Redirect back to the homepage
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

  <p><a href="logout.php?logout=1">Logout</a></p> <!-- Link to logout page -->
</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Form handling - Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Crucial for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { // Example email validation
        $error = "Invalid email format.";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        } else {
            // If login is successful, set session variables
            session_start();
            $_SESSION["username"] = $username;
            $error = "Login successful!";
            // Redirect to a secure page or display a welcome message
            header("Location: secure_page.php"); // Replace with your secure page
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
<?php } ?>

<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle login
function login($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check for the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, set session variables
        $user_data = $result->fetch_assoc();
        $_SESSION['user_id'] = $user_data['id']; // Assuming you have an 'id' column
        $_SESSION['username'] = $user_data['username'];
        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example Usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (VERY IMPORTANT - add more robust validation here!)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } else {
        $login_result = login($username, $password);
        if ($login_result) {
            echo "Login successful!  Redirecting...";
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form method="post" action="">
        Username: <input type="text" name="username" />
        Password: <input type="password" name="password" />
        <input type="submit" value="Login" />
    </form>

    <br>
    <a href="register.php">Don't have an account? Register here!</a>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Function to handle user login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare and Execute the SQL Query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  if ($stmt->execute() === false) {
      echo "Query execution failed: " . $conn->error;
      $stmt->close();
      $conn->close();
      return false;
  }

  // 3. Get the Result
  $result = $stmt->get_result();

  // 4. Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found, process the user
    $row = $result->fetch_assoc();
    // You might want to do more than just return true here.
    // For example, you could set a session variable or redirect the user.
    // For simplicity, let's just return true.
    $stmt->close();
    $conn->close();
    return true;
  } else {
    // User not found
    $stmt->close();
    $conn->close();
    return false;
  }
}

// Example Usage:  (For testing - remove or comment out in a production environment)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!";
    // Redirect the user, set a session, etc.
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br>
    Password: <input type="password" name="password" required><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT - prevent SQL injection)
  $username = trim($username);  // Remove leading/trailing whitespace
  $password = trim($password);

  // Sanitize input (important for security)
  $username = filter_var($username, FILTER_SANITIZE_STRING);
  $password = filter_var($password, FILTER_SANITIZE_STRING);


  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows > 0) {
    // User found, set session variables
    session_start(); // Start the session (if not already started)
    $_SESSION["username"] = $username;
    echo "Login successful!";
    // Redirect to a secure page or display a welcome message
    header("Location: /welcome.php");  // Replace with your welcome page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}
else {
  // If the form wasn't submitted, display the login form
  // You can either include this file or display a simple HTML form
  // For example:
  echo "<form method='post' action='login.php'>";
  echo "Username: <input type='text' name='username'>";
  echo "<br>";
  echo "Password: <input type='password' name='password'>";
  echo "<br>";
  echo "<input type='submit' value='Login'>";
  echo "</form>";
}

?>


<?php

/**
 * User Login Function
 *
 * This function handles user login.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false  The user ID if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
    //  Replace this with your actual database connection and user data
    //  This is a simplified example for demonstration purposes.

    $validUsers = [
        ['username' => 'john_doe', 'password' => 'securepassword123'],
        ['username' => 'jane_smith', 'password' => 'anotherpassword'],
    ];

    // Convert inputs to lowercase for case-insensitive comparison
    $username = strtolower($username);
    $password = strtolower($password);

    foreach ($validUsers as $user) {
        if ($user['username'] === $username && $user['password'] === $password) {
            // User found, return the user ID
            return $user['id'];  // Assuming you have an 'id' field in your user data
        }
    }

    // User not found, return false
    return false;
}

// Example Usage (for demonstration - remove in actual application)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (empty($username) || empty($password)) {
        echo "<p style='color: red;'>Username and password cannot be empty.</p>";
    } else {
        $userId = loginUser($username, $password);

        if ($userId) {
            echo "<p style='color: green;'>Login successful! User ID: " . $userId . "</p>";
            //  You can redirect the user to a different page here.
        } else {
            echo "<p style='color: red;'>Invalid username or password.</p>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Form handling (for simplicity, we'll use GET.  Consider POST for security)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (VERY IMPORTANT - sanitize and validate all user input!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Query to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // User found, set session variables
            $_SESSION["username"] = $username;  // Store username in session
            $conn->close(); // Close connection

            // Redirect the user
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}

// Check if the session is already set (e.g., if the user came from a logout)
if (isset($_SESSION["username"])) {
    header("Location: welcome.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h2>User Login</h2>

    <?php
    if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">
        <br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $query = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($query);

    if ($stmt === false) {
        die("Error preparing statement: " . $conn->error);
    }

    // Bind parameters to prevent SQL injection
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if (!$stmt->execute()) {
        echo "Error executing query: " . $stmt->error;
        return false;
    }

    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return false; // User not found
    }

    // Fetch the user data
    $user = $result->fetch_assoc();

    // Close the statement and connection
    $stmt->close();
    $conn->close();

    // Set session variables
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    return true; // Login successful
}

// Example Usage (within a form or other user interaction)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a secure page or display a welcome message
        header("Location: /welcome.php"); // Replace with your welcome page URL
        exit();
    } else {
        echo "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and Password are required.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (Please enter a valid email address).";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE email = '$username'"; // Assuming email as the login field
    $result = $conn->query($sql);

    // Check if the query returned any results
    if ($result->num_rows > 0) {
      // User found, verify password
      $row = $result->fetch_assoc();
      if (password_verify($password, $row["password"])) {
        // Password correct, set session variables
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["email"]; // Or whatever your username field is

        // Redirect to a welcome page or your main application
        header("Location: welcome.php");
        exit(); // Important to stop further script execution
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "No user found with this email address.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="email" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual details)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  //IMPORTANT: Use prepared statements for security!

        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            // User found, set session variables
            session_start();
            $_SESSION["username"] = $username; //Store username in session
            $_SESSION["user_id"] = $result->fetch_assoc()["id"]; //Assuming you have an 'id' column in your users table.
            $error_message = "";  //Clear any previous errors
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        } else {
            $error_message = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
<?php } ?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php
session_start();

if (isset($_SESSION["username"])) {
    echo "<h1>Welcome, " . $_SESSION["username"] . "!</h1>";
} else {
    echo "<p>You are not logged in.</p>";
}
?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Session handling (to maintain login state)
session_start();

// Function to handle the login process
function loginUser($username, $password) {
  // 1. Validate Input (VERY IMPORTANT!)
  $username = trim($username); // Remove leading/trailing whitespace
  $password = trim($password);

  //  Sanitize the input - important to prevent SQL injection!
  $username = mysqli_real_escape_string($GLOBALS['db_host'], $username); // Use mysqli_real_escape_string for mysqli
  $password = mysqli_real_escape_string($GLOBALS['db_host'], $password);


  // 2. Database Query (Using mysqli - recommended)
  $conn = mysqli_connect($db_host, $db_user, $db_password, $db_name);

  if (mysqli_connect_errno()) {
    die("Connection failed: " . mysqli_connect_error());
  }

  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = mysqli_query($conn, $sql);

  if (mysqli_num_rows($result) > 0) {
    // User found - authenticate
    $row = mysqli_fetch_assoc($result);
    $_SESSION['username'] = $row['username']; // Store username in session
    $_SESSION['user_id'] = $row['id']; // Store user ID (if available)
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  mysqli_close($conn);
}


// Example Usage (Illustrative - You would normally get this from a form)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - redirect to a protected page or display a welcome message
    header("Location: welcome.php"); // Assuming you have a welcome.php page
    exit();
  } else {
    // Login failed - display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="Enter your username" required>
    Password: <input type="password" name="password" placeholder="Enter your password" required>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Example register link -->

</body>
</html>


<?php

// Database configuration (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_SANITIZE_STRING)) {
    $error = "Invalid username.  Only letters and numbers are allowed.";
  } elseif (!filter_var($password, FILTER_SANITIZE_STRING)) {
    $error = "Invalid password.  Only letters and numbers are allowed.";
  } else {
    // Hash the password for security
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check the connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // Prepare and execute the query
      $sql = "SELECT * FROM users WHERE username = ? AND password = ? ";
      $stmt = $conn->prepare($sql);
      $stmt->bind_param("ss", $username, $hashed_password);  // Use "ss" for string comparison
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found, set session variables
        session_start();
        $_SESSION["username"] = $username;
        $stmt->close();
        $conn->close();

        // Redirect to a secure page
        header("Location: secure_page.php"); // Replace with your secure page
        exit();

      } else {
        $error = "Invalid username or password.";
        $stmt->close();
        $conn->close();
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Replace with your registration page -->

</body>
</html>


<?php

// Database Credentials (Replace with your actual values!)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic example, enhance for production)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Query the database (using prepared statements for security)
    $pdo = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_password);
    $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    // Check if the user exists and password matches
    if ($user) {
      // Verify the password (using password_hash for secure hashing in a real application!)
      if (password_verify($password, $user["password"])) {
        // Successful login
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Invalid username.";
    }
  }
}

// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];
    $confirm_password = $_POST["confirm_password"];

    // Validation
    if (empty($username) || empty($password) || empty($confirm_password)) {
        $error_message = "All fields are required.";
    } elseif ($password != $confirm_password) {
        $error_message = "Passwords do not match.";
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Connect to the database
        $pdo = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_password);

        // Prepare the insert statement
        $stmt = $pdo->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
        $stmt->execute([$username, $hashed_password]);

        // Success message
        $success_message = "Registration successful!";

    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>

    <h1>Register</h1>

    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <?php if (isset($success_message)) { ?>
        <p style="color: green;"><?php echo $success_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" />
        Password: <input type="password" name="password" />
        Confirm Password: <input type="password" name="confirm_password" />
        <button type="submit">Register</button>
    </form>

    <p>Already have an account? <a href="login.php">Login</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, set session variables and redirect
    session_start();
    $user_row = $result->fetch_assoc();

    // Store the username in the session
    $_SESSION["username"] = $user_row["username"];

    // You can store other user data in the session as needed
    // $_SESSION["user_id"] = $user_row["id"];

    // Redirect to a protected page or the homepage
    header("Location: /protected_page.php"); // Replace with the actual URL of the protected page
    exit();

  } else {
    // User not found
    echo "Invalid username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form action="login.php" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate the input
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password cannot be empty.";
    } else {
        // Query to check for the username and password
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = mysqli_query($host, $sql);

        if (mysqli_num_rows($result) == 1) {
            // User found, set session variables and redirect
            session_start();
            $_SESSION["username"] = $username;
            $_SESSION["user_id"] = $result->fetch_assoc()["user_id"]; // Assuming you have a user_id column
            // You can add more information to the session if needed, like user roles.
            // Redirect the user to the homepage or desired page
            header("Location: homepage.php");
            exit();
        } else {
            $error_message = "Incorrect username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php
if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database configuration (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the login credentials
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (basic example, improve for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Query the database to check for the credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) > 0) {
      // User found, set session variables for authentication
      session_start();
      $_SESSION["username"] = $username;  // Store the username
      // You might want to store other user information here, like user ID, etc.
      // $_SESSION["user_id"] = $user_id;

      // Redirect the user to a secure page (e.g., dashboard)
      header("Location: dashboard.php"); // Replace with your secure page
      exit(); // Important: Stop further script execution
    } else {
      $error = "Invalid username or password.";
    }
  }
}

// If the form hasn't been submitted, display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$login_username = $_POST["username"];
$login_password = $_POST["password"];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check the connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare and execute the query
$sql = "SELECT username, password FROM users WHERE username = '$login_username'";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    // User not found
    echo "Invalid username or password.";
} else {
    // User found, check password
    $user_data = $result->fetch_assoc();
    if (password_verify($login_password, $user_data["password"])) {
        // Password matches, successful login
        // Set a session variable to store the user's username
        session_start();
        $_SESSION["username"] = $login_username;
        echo "Login successful!  Redirecting...";

        // Redirect to a protected page or your main application page
        header("Location: /protected_page.php"); //  Replace with your protected page
        exit();
    } else {
        // Password does not match
        echo "Invalid username or password.";
    }
}

$conn->close();

?>


<?php
// ... (database configuration and connection)

// Prepare the statement
$stmt = $conn->prepare("SELECT username, password FROM users WHERE username = ?");

// Bind the parameters
$stmt->bind_param("s", $login_username); // "s" indicates a string

// Execute the statement
$stmt->execute();

// Get the result
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    // User not found
    echo "Invalid username or password.";
} else {
    // User found, check password
    $user_data = $result->fetch_assoc();
    if (password_verify($login_password, $user_data["password"])) {
        // Password matches, successful login
        session_start();
        $_SESSION["username"] = $login_username;
        echo "Login successful!  Redirecting...";

        // Redirect to a protected page
        header("Location: /protected_page.php");
        exit();
    } else {
        // Password does not match
        echo "Invalid username or password.";
    }
}

$stmt->close();
$conn->close();
?>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();

      // Check if the user exists and is active
      if ($row['status'] == 'active') {
        // Successful login
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        return true;
      } else {
        return false; // User exists but inactive
      }
    } else {
      return false; // No user found with these credentials
    }
  } else {
    // Error executing the statement
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage:

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Call the login function
    $login_result = loginUser($username, $password);

    if ($login_result) {
      // Login successful - redirect to a secure page or display a welcome message
      header("Location: /secure_page.php"); // Replace with your desired secure page URL
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" />
    <br />
    Password: <input type="password" name="password" placeholder="Enter your password" />
    <br />
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Crucial for security - See details below)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid Username (Must be a valid email address).";
    }  // Add more validation here (e.g., password complexity, minimum length, etc.)


    // Database connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query (Use prepared statements for security!)
    $sql = "SELECT id, username, password FROM users WHERE username = ? LIMIT 1";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
        $stmt->bind_param("s", $username); // "s" indicates a string parameter
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User found - Verify password
            $row = $result->fetch_assoc();
            if (password_verify($password, $row["password"])) {
                // Password correct - Login successful
                echo "Login successful!";
                // Session management (Important for security - see example below)
                session_start();
                $_SESSION["username"] = $username;
                // Redirect to a protected page or display a welcome message.
                header("Location: /protected_page.php"); // Change to your desired URL
                exit();
            } else {
                // Password incorrect
                echo "Incorrect password.";
            }
        } else {
            // User not found
            echo "User not found.";
        }
    } else {
        // Error preparing statement
        echo "Error preparing statement.";
    }

    $stmt->close();
    $conn->close();
} else {
    // If the form hasn't been submitted, display the login form
    echo "<form method='POST' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
    echo "Username: <input type='text' name='username'><br>";
    echo "Password: <input type='password' name='password'><br>";
    echo "<input type='submit' value='Login'>";
    echo "</form>";
}

?>


<?php

// Database credentials - **IMPORTANT:  NEVER HARDCODE THESE IN A PRODUCTION ENVIRONMENT**
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      // User found -  Fetch the user data
      $user_data = $result->fetch_assoc();

      //  In a real application, you'd likely store more user data
      //  (e.g., user ID, role, etc.)

      //  For demonstration purposes, we'll return the username
      return $user_data['username'];  // Return the username

    } else {
      return null; // User not found
    }

  } else {
    // Query execution failed
    return null;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage:
// Get the username and password from the form (or wherever they come from)
$username = $_POST['username'];
$password = $_POST['password'];

// Perform the login
$result = loginUser($username, $password);

// Check the result
if ($result) {
  // User is logged in
  echo "Login successful! Welcome, " . $result . "!";
} else {
  // Login failed
  echo "Invalid username or password.";
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>PHP Login Example</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


function registerUser($username, $password) {
  // ... database connection ...

  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // ... Prepare and execute the query, using $hashed_password instead of $password ...

  // ... Close connection ...
}


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get input values
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error[] = "Username and Password must be filled.";
  }

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  // Check if the query returned any rows
  if ($result->num_rows > 0) {
    // Get data from the result
    $row = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $row["password"])) {
      // Password matches!  User is authenticated
      // Set session variables for the user
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      echo "Login successful!  You are now logged in.";
      header("Location: user_dashboard.php"); // Redirect to a dashboard page
      exit(); // Important: Stop further script execution after successful login
    } else {
      $error[] = "Incorrect password.";
    }
  } else {
    $error[] = "User not found.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <div style="color: red;">
      <?php foreach ($error as $err) { echo $err . "<br>"; } ?>
    </div>
  <?php } ?>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="registration.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Login Form Handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate Input (Important for Security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Database Connection
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL Query
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // User Found - Set session variables
            session_start();
            $_SESSION["username"] = $username;
            header("Location: welcome.php"); // Redirect to welcome page
            exit();
        } else {
            $error_message = "Invalid username or password.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" placeholder="Enter your username">
        <br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" placeholder="Enter your password">
        <br><br>
        <button type="submit">Login</button>
    </form>

    <br>
    <a href="register.php">Not a user? Register here.</a>

</body>
</html>


     $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
     $stmt->bind_param("ss", $username, $password); // "ss" means two strings
     $stmt->execute();
     $result = $stmt->get_result();
     

2. **Password Hashing:**
   - **Never** store passwords in your database in plain text.  Always hash passwords before storing them.  Use a strong hashing algorithm like bcrypt or Argon2. PHP's `password_hash()` function is excellent for this:

     
     $password = $_POST["password"];
     $hashed_password = password_hash($password, PASSWORD_DEFAULT);
     // Store $hashed_password in the database
     

3. **Cross-Site Scripting (XSS) Prevention:**
   - Use `htmlspecialchars()` to escape special characters in user input before displaying it in your HTML. This prevents attackers from injecting malicious JavaScript code.

4. **CSRF Protection:**
   - Implement Cross-Site Request Forgery (CSRF) protection to prevent attackers from submitting forms on behalf of a logged-in user.

5. **Rate Limiting:**
   - Implement rate limiting to prevent brute-force attacks (repeated attempts to guess passwords).

6. **Error Handling:**
   - Implement proper error handling to prevent sensitive information from being revealed to users.

7. **HTTPS:**
   - Always use HTTPS to encrypt the communication between the user's browser and your server.


**Example of a `register.php` page (for completeness):**



<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Form data from the login form
$username = $_POST["username"];
$password = $_POST["password"];

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// SQL query to select the user
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'"; // Use parameterized queries for security
$result = $conn->query($sql);

// Check if the query was successful
if ($result->num_rows > 0) {
  // User found, set session variables
  // You should also check other fields in the 'users' table if needed.
  $user_data = $result->fetch_assoc();

  session_start();
  $_SESSION['username'] = $username;
  $_SESSION['user_id'] = $user_data['id']; // Assuming you have an 'id' column in the 'users' table
  // You can add other user data to the session as needed.

  // Redirect the user to the protected page
  header("Location: protected_page.php");
  exit(); // Stop further script execution

} else {
  // User not found
  echo "Invalid username or password.";
}

$conn->close();

?>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

/**
 * User Login Function
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false  User ID if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username FROM users WHERE username = ? AND password = ?";

  // Bind the parameters to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two strings

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      $userId = $row['id'];
      return $userId; // Return the user ID if successful
    } else {
      return false; // User not found
    }
  } else {
    return false; // Query execution error
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// --- Example Usage (Illustrative - NOT for direct implementation) ---
//  This section demonstrates how the `loginUser` function would be called.
//  In a real application, this would be handled by a form submission.

/*
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $userId = loginUser($username, $password);

  if ($userId) {
    echo "Login successful! User ID: " . $userId;
    // Redirect to a secure page or display a welcome message
  } else {
    echo "Invalid username or password.";
  }
}
*/

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
session_start(); // Start the session

/**
 * Logs a user in.
 *
 * @param string $username The username of the user.
 * @param string $password The password of the user.
 * @return bool True on success, false on failure.
 */
function login(string $username, string $password)
{
    // Validate inputs (simple example - improve for production)
    if (empty($username) || empty($password)) {
        return false;
    }

    // Check credentials against a "database" (replace with actual database query)
    $validUsers = [
        'john.doe' => 'password123',
        'jane.smith' => 'securepass',
    ];

    if (isset($validUsers[$username])) {
        if ($validUsers[$username] === $password) {
            // Authentication successful
            $_SESSION['username'] = $username; // Store username in session
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }
}

/**
 * Logs a user out.
 */
function logout() {
    unset($_SESSION['username']); // Remove username from session
    session_destroy(); // Destroy the session
}

// --- Example Usage (demonstrates login and logout) ---

// 1. Check if the user is already logged in
if (isset($_SESSION['username'])) {
    echo "You are already logged in as " . htmlspecialchars($_SESSION['username']) . "<br>";
}

// 2. Check for login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST["username"]);
    $password = htmlspecialchars($_POST["password"]);

    // Call the login function
    if (login($username, $password)) {
        echo "Login successful! You are now logged in as " . htmlspecialchars($_SESSION['username']) . "<br>";
    } else {
        echo "Invalid username or password. Please try again.<br>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

    <hr>

    <p>
        <a href="logout.php" onclick="logoutFunction()">Logout</a>  <!-- Call logout.php to handle logout -->
    </p>

    <script>
        //Simulating a logout function - In a real application, logout.php would handle this
        function logoutFunction() {
            //In a real application, you would redirect to logout.php here.
            //For this example, just a placeholder
            alert("Logout initiated (placeholder)"); //Replace with actual redirect
        }
    </script>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials!)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password are required.";
  } else {
    // Connect to the database
    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Verify password (using password_hash in a real application!)
      if (password_verify($password, $row["password"])) {
        // If passwords match, set session variables
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Invalid username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="login.php">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials - Replace with your actual details
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (very important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !filter_var($username, FILTER_VALIDATE_EMAIL)) { // Basic email validation (you can refine this)
    $error = "Invalid username or email address.";
  } else {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check username and password
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    }

    if ($result->num_rows > 0) {
      // User found, set session variables
      $row = $result->fetch_assoc();
      $_SESSION["username"] = $row["username"];
      $_SESSION["user_id"] = $row["id"]; // Assuming you have an 'id' column in the users table
      //  You might also want to check the password hash
      //  if (password_verify($password, $row["password_hash"])) {  // Using password_verify to compare with the hashed password
      //    $_SESSION["username"] = $row["username"];
      //  } else {
      //    $error = "Invalid password.";
      //  }

      // Redirect to a secure page
      header("Location: secure_page.php"); // Replace 'secure_page.php' with your desired secure page
      exit();
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="your_email@example.com" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>  <!-- Link to registration page (create one) -->

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
    // Create connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Bind parameters to prevent SQL injection
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute()) {
        $result = $stmt->get_result(); // Get result set

        if ($result->num_rows > 0) {
            // User exists, return user data (you can customize this)
            $user_data = $result->fetch_assoc();
            return $user_data;
        } else {
            return false; // User not found
        }
    } else {
        return false; // Query error
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
}


// Example usage (Handle login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (basic example - improve for production)
    if (empty($username) || empty($password)) {
        echo "Username and password fields cannot be empty.";
    } else {
        $loginResult = loginUser($username, $password);

        if ($loginResult) {
            // Successful login
            session_start();  // Start a session to store user data
            $_SESSION["username"] = $loginResult["username"]; // Store username in session
            $_SESSION["user_id"] = $loginResult["user_id"]; // Store user_id for more efficient database lookups
            echo "Login successful!  Redirecting...";
            // Redirect to a secure page or dashboard
            header("Location: /dashboard.php"); // Replace with your dashboard URL
            exit();

        } else {
            echo "Invalid username or password.";
        }
    }
}


?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the username and password
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify password
    if (password_verify($password, $row['password'])) {
      // Authentication successful
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage (Illustrative - use with proper form handling)
// This is a simplified example.  You would get the username and password
// from a form submission.

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a different page or display a success message
    header("Location: welcome.php"); // Redirect to a welcome page.  Replace 'welcome.php'
                                    // with your desired page.
    exit();
  } else {
    // Login failed, display an error message
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Replace with your registration page -->

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

/**
 * User Login Function
 *
 * This function checks if a user's login credentials are valid.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ? ";

  // Prepare the statement (Important for security - prevents SQL injection)
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
      die("Error preparing statement: " . $conn->error);
  }

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);  // "ss" means two string parameters

  // Execute the statement
  if ($stmt->execute() === false) {
    die("Error executing query: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found - verify credentials and set session
    $row = $result->fetch_assoc();
    // Verify password (you can use a more secure hashing method here)
    if (password_verify($password, $row['password'])) {
      // Login successful - set session variables
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      $stmt->close();
      $conn->close();
      return true;
    } else {
      $stmt->close();
      $conn->close();
      return false; // Password mismatch
    }
  } else {
    $stmt->close();
    $conn->close();
    return false; // User not found
  }
}

// --- Example Usage (This would typically be in a separate form handling script) ---
/*
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
*/

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password hash
  $sql = "SELECT password_hash, user_id FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password_hash'];
    $userId = $row['user_id'];

    // Verify the password
    if (password_verify($password, $hashed_password)) {
      // Authentication successful, set session variables
      session_start(); // Start the session (important!)

      $_SESSION['user_id'] = $userId;  // Store the user ID
      $_SESSION['username'] = $username; // Optionally store the username

      return true; // Login successful
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // User not found
  }

  $conn->close(); // Close the database connection
}


// Example Usage (for testing - this would be in your form handling code)
//  This is just an example. In a real application, you'd get the username and password
//  from your form submission.  This demonstrates the login function being called.
// $username = $_POST['username']; // Get username from form
// $password = $_POST['password'];   // Get password from form

// if (loginUser($username, $password)) {
//   echo "Login successful! You are now logged in.";
//   // Redirect to a protected page or display a welcome message
// } else {
//   echo "Invalid username or password.";
// }



?>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to validate the login form
function validateLogin($username, $password) {
    // Sanitize input (important for security)
    $username = filter_input(INPUT_POST, 'username', FILTER_SANITIZE_STRING);
    $password = filter_input(INPUT_POST, 'password', FILTER_SANITIZE_STRING);

    // Sanitize password for security
    $password = hash_sha256($password, true); // Use SHA256 for stronger hashing


    // Check if username and password are empty (or if sanitization removed them)
    if (empty($username) || empty($password)) {
        return false;
    }

    // Retrieve the hashed password from the database (using a secure query)
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        // Compare the hashed passwords
        if (hash_sha256($password, true) === $user['hashed_password']) {
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}

// Handle login submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (validateLogin($username, $password)) {
        // Login successful
        session_start();
        // Store user data in the session (e.g., username)
        $_SESSION['username'] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page or logged-in area
        exit();
    } else {
        // Login failed
        $error = "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" placeholder="Enter username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
        <br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" placeholder="Enter password">
        <br><br>

        <button type="submit">Login</button>
    </form>

    <br><br>
    <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials - REPLACE WITH YOUR ACTUAL CREDENTIALS
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, get user data
      $user = $result->fetch_assoc();

      // Session management - setting user ID and other data
      $_SESSION["user_id"] = $user["id"];  // Store user ID in session
      $_SESSION["username"] = $user["username"];
      // You can store more user data in the session as needed, e.g., roles, name, etc.

      return true; // Login successful
    } else {
      return false; // User not found or incorrect password
    }

  } else {
    return false; // Error executing the query
  }

  // Close the statement
  $stmt->close();

  // Close the connection
  $conn->close();
}


// Example usage:  This is for demonstration -  DO NOT put actual login form logic here.
//  This is just a simplified example.  You'll need a form and proper handling.
if (isset($_POST["username"]) && isset($_POST["password"])) {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message
    // header("Location: protected_page.php");
    // exit;

  } else {
    echo "Invalid username or password.";
  }
}
?>


<?php

// Database credentials - Replace with your actual values
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

/**
 * Logs in a user.
 *
 * @param string $username The username to log in.
 * @param string $password The password for the user.
 * @return int|string  Returns the user's ID if login is successful, 
 *                      or an error message string if login fails.
 */
function loginUser(string $username, string $password)
{
    // 1. Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        return "Connection failed: " . $conn->connect_error;
    }

    // 2. Prepare the SQL query
    $sql = "SELECT id, username FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if (!$stmt) {
        return "Error preparing statement.";
    }

    // 3. Bind parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // 4. Execute the query
    if (!$stmt->execute()) {
        return "Error executing query: " . $stmt->error;
    }

    // 5. Get the result
    $result = $stmt->get_result();

    // 6. Check if a user was found
    if ($result->num_rows == 0) {
        return "Invalid username or password.";
    }

    $user = $result->fetch_assoc(); // Fetch the user data as an associative array
    $user_id = $user['id'];

    // 7. Close the statement and connection
    $stmt->close();
    $conn->close();

    return $user_id; // Return the user ID
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    $loginResult = loginUser($username, $password);

    if (strpos($loginResult, "Invalid") !== false) {
        echo "<p style='color:red;'>" . $loginResult . "</p>";
    } else {
        // Successful login -  You can redirect the user or display their profile
        echo "<p style='color:green;'>Login successful!  User ID: " . $loginResult . "</p>";
        // Redirect to a different page or display user data
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login using a simple database (you'll need
 * to adapt this to your database setup).
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false  Returns the user ID if login is successful, 
 *                   false if login fails.
 */
function loginUser(string $username, string $password) {
  // Replace this with your actual database connection details.
  $db_host = 'localhost';
  $db_name = 'your_database_name';
  $db_user = 'your_database_user';
  $db_password = 'your_database_password';

  // Construct the database connection string.
  $dsn = "mysql:host=$db_host;dbname=$db_name;charset=utf8mb4";
  $options = []; // For PDO options, e.g., exception on error

  try {
    $pdo = new PDO($dsn, $db_user, $db_password, $options);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // Enable error handling
  } catch (PDOException $e) {
    // Handle database connection errors
    error_log("Database connection failed: " . $e->getMessage());
    return false;
  }


  // SQL query to check username and password
  $sql = "SELECT id FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $pdo->prepare($sql);

  // Bind parameters
  $stmt->bindParam(1, $username, PDO::PARAM_STR);
  $stmt->bindParam(2, $password, PDO::PARAM_STR);

  // Execute the query
  $stmt->execute();

  // Fetch the result
  $user = $stmt->fetch(PDO::FETCH_ASSOC);

  // Close the statement and connection
  $stmt = null;
  $pdo = null; // Close the connection

  // Check if a user was found and if the password matches.
  if ($user) {
    return $user['id']; // Return the user ID
  } else {
    return false; // Login failed
  }
}


// **Example Usage (For testing)**
// $username = "testuser";
// $password = "password123";

// $userId = loginUser($username, $password);

// if ($userId) {
//   echo "User logged in successfully. User ID: " . $userId . "
";
//   // Redirect to a secure page or perform other actions.
// } else {
//   echo "Invalid username or password.
";
// }


// **Important Security Considerations & Best Practices:**

// 1.  Never store passwords in plain text. Always hash passwords.
//     *  Use a strong hashing algorithm like bcrypt or Argon2.
//     *  PHP's `password_hash()` function is designed for this.
//     *  Don't use PHP's built-in `password_verify()` function directly in this function;  use the dedicated function for verification.

// 2.  Input Validation and Sanitization: Always validate and sanitize user input *before* using it in your database queries. This prevents SQL injection attacks.
//     *   Use prepared statements (as shown) - this is already implemented in the example.
//     *   Escape special characters if prepared statements are not used (not recommended for this example, but crucial in other scenarios).

// 3.  Error Handling:  The code includes basic error handling (catching PDO exceptions). Enhance this to provide more informative error messages and logging.

// 4.  Session Management:  After successful login, use sessions or cookies to track the user's logged-in state.

// 5.  Rate Limiting:  Implement rate limiting to prevent brute-force attacks.

// 6.  HTTPS:  Always use HTTPS to encrypt communication between the browser and your server.

// 7.  Regular Security Audits: Regularly review your code and database security configurations.

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (IMPORTANT - prevent SQL injection and bad input)
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password cannot be empty.";
    } else {
        // Hash the password before comparing
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Query the database to check for the username
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);  // "s" indicates a string
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        } else {
            $user = $result->fetch_assoc();
            if (password_verify($password, $user["password"])) {
                // Password matches, so login successful
                session_start();  // Start the session
                $_SESSION["user_id"] = $user["id"];
                $_SESSION["username"] = $username;
                header("Location: welcome.php"); // Redirect to welcome page
                exit();
            } else {
                $error_message = "Invalid username or password.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (!empty($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Form handling (for simplicity, we'll assume POST method)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (VERY IMPORTANT - prevent SQL injection and other issues)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // SQL query (using prepared statements for security - highly recommended)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT); // Hash the password
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ? ";
    $stmt = $conn->prepare($sql); // Prepare the statement
    $stmt->bind_param("ss", $username, $hashed_password); // Bind parameters
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found - set session variables
      $user = $result->fetch_assoc();
      $_SESSION["user_id"] = $user["id"];
      $_SESSION["username"] = $user["username"];
      $success_message = "Login successful!";

      // Redirect to a secure page (e.g., dashboard)
      header("Location: dashboard.php"); // Replace with your secure page
      exit(); // Important to stop further script execution
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}

// Check if the user is logged in
if (!isset($_SESSION["user_id"])) {
  // User is not logged in - display the login form
  //  This is generally handled in a separate view or template file.
  //  Here's a basic example:
  echo "<!DOCTYPE html>
  <html>
  <head>
    <title>Login</title>
  </head>
  <body>
    <h1>Login</h1>
    <form method='post'>
      <label for='username'>Username:</label>
      <input type='text' id='username' name='username' required><br><br>
      <label for='password'>Password:</label>
      <input type='password' id='password' name='password' required><br><br>
      <input type='submit' value='Login'>
    </form>
    ";

    if(isset($error_message)){
      echo "<p style='color:red;'>".$error_message."</p>";
    }
    if(isset($success_message)){
      echo "<p style='color:green;'>".$success_message."</p>";
    }

}
?>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("s", $username);

    // Execute the query
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row["password"])) {
          // Login successful
          session_start();  // Start the session to store user data
          $_SESSION["user_id"] = $row["id"];
          $_SESSION["username"] = $username;
          return true;
        } else {
          // Password mismatch
          return false;
        }
      } else {
        // No user found
        return false;
      }

      $stmt->close();
    } else {
      // Query execution failed
      return false;
    }
  } else {
    // Failed to prepare statement
    return false;
  }
}

// Example usage (for testing)
// Uncomment the following lines to test the function:
// $username = "testuser";
// $password = "password123";
//
// if (loginUser($username, $password)) {
//   echo "Login successful!";
// } else {
//   echo "Login failed.";
// }


?>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to fetch user data
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, return user data (you can customize this to return other user details)
    $user = $result->fetch_assoc();
    return $user;
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage (handling form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - see notes below)
  if (empty($username) || empty($password)) {
    echo "Username and password must be filled.";
  } else {
    // Call the loginUser function
    $user = loginUser($username, $password);

    if ($user) {
      // User logged in successfully
      // You can redirect to a welcome page or do something else here
      // echo "Welcome, " . $user['username'];  // Display username (example)
      // For production, you'd typically set a session variable here.
      session_start();
      $_SESSION['username'] = $username;  // Store username in session
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();

    } else {
      // User login failed
      echo "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data for login
$login_username = $_POST["username"] ?? ""; // Use null coalescing operator
$login_password = $_POST["password"] ?? "";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Validate the input (Crucially important to prevent SQL injection)
  if (empty($login_username) || empty($login_password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Sanitize the inputs - very important to prevent SQL injection
    $login_username = filter_var($login_username, FILTER_SANITIZE_STRING);
    $login_password = filter_var($login_password, FILTER_SANITIZE_STRING);

    // SQL query to select the user
    $sql = "SELECT * FROM users WHERE username = '$login_username' AND password = '$login_password'";
    $result = mysqli_query($host, $sql);

    if (mysqli_num_rows($result) == 1) {
      // User found!

      //  Retrieve user data (customize based on your user table structure)
      $user_data = mysqli_fetch_assoc($result);

      //  Set a session variable to store the user's information
      session_start();
      $_SESSION["user_id"] = $user_data["id"]; // Assuming your users table has an 'id' column
      $_SESSION["username"] = $user_data["username"];
      //  You might want to store other user details like role, etc.

      // Redirect to a protected page or display a success message
      header("Location: secure_page.php"); // Replace 'secure_page.php' with your protected page
      exit(); // Important to stop further execution

    } else {
      // User not found
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo $login_username; ?>">
    Password: <input type="password" name="password" value="<?php echo $login_password; ?>">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual details)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Successful login
      session_start(); // Start the session to store user data

      // Set session variables
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];

      // Redirect to a secure page (e.g., dashboard)
      header("Location: dashboard.php"); // Replace with your secure page
      exit(); 

    } else {
      // Login failed
      return false;
    }

  } else {
    // Login failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();

}

// Example usage (from a login form - this is just an example, you'll need a form to submit the username and password)
// $username = $_POST['username'];
// $password = $_POST['password'];

// if (isset($username) && isset($password)) {
//   if (loginUser($username, $password)) {
//     echo "Login successful! <a href='dashboard.php'>Go to Dashboard</a>";
//   } else {
//     echo "Invalid username or password.";
//   }
// }


?>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);  // "ss" means two strings

    // Execute the query
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Successful login
        session_start(); // Start the session
        $_SESSION['username'] = $username; // Store username in session
        $_SESSION['user_id'] = $row['id']; // Store user ID if available
        return true;
      } else {
        return false;  // No matching user found
      }
    } else {
      // Error executing the query
      return false;
    }

    $stmt->close();
  } else {
    // Error preparing the statement
    return false;
  }
}

// Example usage (Login Form - HTML)
//  You would have an HTML form with a username and password input fields.
//  When the form is submitted, you would call the login function.

// Example usage (Login Form - PHP processing)
/*
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    // Login successful
    echo "Login successful!  Redirecting...";
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}
*/

?>


<?php

// Database Credentials (Replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get input values
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Database connection
  $conn = new mysqli($servername, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, verify password
    $row = $result->fetch_assoc();
    if (password_verify($password, $row["password"])) {
      // Password verification successful, login user
      // Set session variables to store user information
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];

      // Redirect to a secure page or display a success message
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit();

    } else {
      // Password mismatch
      echo "<p style='color: red;'>Incorrect password.</p>";
    }
  } else {
    // User not found
    echo "<p style='color: red;'>User not found.</p>";
  }

  $conn->close();
}

// HTML form for login
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details - Replace with your actual credentials
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password must be filled.";
  } else {
    // Hash the password for security (Never store passwords in plain text!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Attempt to authenticate the user
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $user = $result->fetch_assoc();
      if (password_verify($password, $user["password"])) {
        // Authentication successful - set session variables
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $username;
        echo "Login successful! <a href='home.php'>Go to Home</a>";
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Invalid username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!preg_match("/^[a-zA-Z0-9._-]+$/", $username)) {
    $error = "Invalid username.  Only letters, numbers, periods, and underscores are allowed.";
  } elseif (!preg_match("/^[a-zA-Z0-9]+$/", $password)) {
    $error = "Invalid password.  Only letters and numbers are allowed.";
  }
  else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Bind parameters to prevent SQL injection
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if ($stmt->execute() === TRUE) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found - now you can redirect or display the user's information
        $row = $result->fetch_assoc();
        session_start(); // Start a session to store user data

        // Store the user's data in the session
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        // You might store other user data here, like roles, etc.

        // Redirect to a secure page or display a welcome message
        header("Location: welcome.php"); // Replace welcome.php with your landing page
        exit();
      } else {
        $error = "Incorrect username or password.";
      }
    } else {
      $error = "Query execution error.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register here</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user based on username
  $sql = "SELECT * FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // Fetch the user data
    $user = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $user['password'])) {
      // Login successful!
      // Create a session to store the user's information
      session_start();
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      // You can store more user data in the session if needed

      return true; // Indicate successful login
    } else {
      return false; // Indicate incorrect password
    }
  } else {
    return false; // Indicate user not found
  }

  $conn->close();
}

// Example usage (Demonstration - Replace with form input from your HTML)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a secure page or display a success message
    header("Location: secure_page.php"); // Replace with your secure page
    exit();
  } else {
    // Handle login failure (e.g., display an error message)
    echo "<p>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);

  if ($stmt === false) {
    die("Query preparation failed");
  }

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the query
  if (!$stmt->execute()) {
    die("Query execution failed: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Authentication successful
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Redirect the user
    header("Location: user_dashboard.php"); // Replace with your desired destination
    exit();
  } else {
    // Authentication failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (from a login form):
// if ($_SERVER["REQUEST_METHOD"] == "POST") {
//   $username = $_POST["username"];
//   $password = $_POST["password"];
//   loginUser($username, $password);
// }

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="login.php" method="post">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User found - get the user data
            $row = $result->fetch_assoc();
            // Set session variables
            $_SESSION['user_id'] = $row['id']; // Assuming you have an 'id' column in your users table
            $_SESSION['username'] = $row['username'];

            // Optionally redirect the user to a protected page
            // header("Location: protected_page.php");
            // exit();

            return true; // Login successful
        } else {
            return false; // User not found or credentials incorrect
        }

    } else {
        return false; // Query execution error
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example usage:
// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        $error = "Username and password must be filled.";
    } else {
        $loginResult = loginUser($username, $password);

        if ($loginResult) {
            if (!isset($_SESSION['user_id'])) {
                echo "Login successful!  You are now logged in.";
                // Redirect to a secure page
            } else {
              echo "Login successful! You are now logged in.";
            }
        } else {
            $error = "Invalid username or password.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
        <br><br>
        Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
        <br><br>
        <button type="submit">Login</button>
    </form>

    <br><br>
    <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate the input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } elseif (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username' AND password = '$password'")) {
        // User exists, so you can redirect them to the main page or a secure area.
        session_start();
        $_SESSION["username"] = $username; // Store the username in the session
        header("Location: welcome.php"); // Redirect to a welcome page
        exit(); // Stop further execution
    } else {
        $error = "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php
if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_username = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database_name';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        // User found, set session variables
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        return true; // Login successful
      } else {
        return false; // User not found
      }
    } else {
      return false; // Query execution error
    }
  } else {
    return false; // Prepare statement error
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (Demonstration - Replace with actual form handling)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual database details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, set session variables
        //  This is a basic implementation. For security,
        //  you should consider storing user information
        //  in a more secure way, like a session cookie.

        $user_data = $result->fetch_assoc();
        $_SESSION['user_id'] = $user_data['id']; // Assuming you have an 'id' column
        $_SESSION['username'] = $user_data['username'];

        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example Usage (Demonstration -  This should be part of a form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a protected page or display a success message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
    } else {
        // Display error message
        echo "<p>Invalid username or password.</p>";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database connection details (replace with your actual details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to check login credentials
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, return user data
    $user = $result->fetch_assoc();
    return $user;
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example Usage (Handle Form Submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $user = login($username, $password);

  if ($user) {
    // Login successful
    session_start();  // Start a session to store user data
    $_SESSION["username"] = $user["username"]; // Store username in session
    header("Location: welcome.php"); // Redirect to a welcome page
    exit(); // Stop further execution
  } else {
    // Login failed
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

</body>
</html>


// Don't use this directly in production.  Use a proper library like `password_hash()`

// Example (Conceptual) - DO NOT USE DIRECTLY
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$hashedPassword'";


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare and execute the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
    $stmt->execute();

    // 3. Get the result
    $result = $stmt->get_result();

    // 4. Check if the user exists and the password matches
    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Success!  You can now store the user's ID or other user data
      // in a session or other storage mechanism.
      // Example:  setSessionVariable($row['id']);

      // Return success information
      return [
        "success" => true,
        "userId" => $row['id'], // Assuming 'id' is the user ID column
        "username" => $row['username']
      ];
    } else {
      // User not found or password incorrect
      return [
        "success" => false,
        "error" => "Invalid username or password."
      ];
    }
  } else {
    // Something went wrong preparing the statement
    return [
      "success" => false,
      "error" => "Error preparing statement."
    ];
  }

  // Close the statement and connection (important for security)
  $stmt->close();
  $conn->close();
}


// Example Usage (for demonstration purposes - DON'T include this in a live website)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $loginResult = loginUser($username, $password);

  if ($loginResult["success"] == true) {
    // User logged in successfully
    echo "Login successful!  User ID: " . $loginResult["userId"];
    // You would typically redirect to a protected area or store the user's ID
    // in a session.  For this example, we'll just print the ID.
  } else {
    // Login failed
    echo "Login failed: " . $loginResult["error"];
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

</body>
</html>


// ... (database connection code) ...

// Example using a hypothetical secure password hashing function
function hashPassword($password) {
  // This is just a placeholder - REPLACE with a real secure hashing library
  return password_hash($password, PASSWORD_BCRYPT); // or Argon2, etc.
}

// ... inside loginUser function, before storing the password ...
$hashedPassword = hashPassword($password);
$sql = "INSERT INTO users (username, password, ... ) VALUES (?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("sss", $username, $hashedPassword, ...); // "sss" indicates 3 string parameters
$stmt->execute();
$stmt->close();
$conn->close();


<?php

// Database connection details
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_username";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user data
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, return user data
    $user = $result->fetch_assoc();
    return $user;
  } else {
    // User not found
    return false;
  }

  $conn->close();
}


// Example usage (This will be in a form submission handler)
// Assuming the form contains fields: username and password
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $loggedInUser = loginUser($username, $password);

  if ($loggedInUser) {
    // User is logged in
    // Store session data (important for maintaining login state)
    session_start(); // Start the session if it's not already running
    $_SESSION["username"] = $loggedInUser["username"];
    $_SESSION["id"] = $loggedInUser["id"];  // Or other user ID fields

    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Change /protected_page.php to the correct path
    exit();

  } else {
    // Login failed
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>

    <button type="submit">Login</button>
  </form>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

</body>
</html>


<?php

// ... (Database connection details as before)

// Function to handle user login using prepared statements
function loginUser($username, $password) {
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query with placeholders
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings

  // Execute the statement
  $result = $stmt->execute();

  if ($result) {
    $user = $stmt->fetch_assoc();
    return $user;
  } else {
    return false;
  }

  $stmt->close();
  $conn->close();
}


<?php

// ... (Database connection details as before)

// Function to register a new user (includes password hashing)
function registerUser($username, $password, $db) {

  $hashedPassword = password_hash($password, PASSWORD_BCRYPT);  // Using bcrypt
  // or use: password_hash($password, PASSWORD_ARGON2)

  $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashedPassword')";
  if (!$db->query($sql)) {
    return false;
  }
  return true;
}

// Example usage:
// $success = registerUser("testuser", "MySecretPassword", $conn); // Use $conn instead of $db
?>


<?php

// Database configuration (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $user = $result->fetch_assoc();
      // Authentication successful
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true; // Indicate successful login
    } else {
      // No user found
      return false;
    }
  } else {
    // Query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (in your form or other logic)
// Assuming you have a form with input fields 'username' and 'password'

// Check if the user is already logged in
if (isset($_SESSION['user_id'])) {
  echo "User is already logged in as " . $_SESSION['username'] . "<br>";
} else {
  // Check if the login form has been submitted
  if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
    $username = $_POST['login_username'];
    $password = $_POST['login_password'];

    // Call the loginUser function
    if (loginUser($username, $password)) {
      echo "Login successful!";
      // Redirect to a protected page or display a welcome message
    } else {
      echo "Invalid username or password.";
    }
  }
}

?>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_username = "your_db_username";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Authentication successful
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example Usage (Demonstration - Replace with your form handling)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to the user's page or desired location
    header("Location: user_page.php"); // Replace with your user page
    exit();
  } else {
    // Login failed - Display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and Password must be filled.";
  } else {
    // Database query
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query (using prepared statements - very important!)
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      // Bind the parameters
      $stmt->bind_param("ss", $username, $password);

      // Execute the query
      $stmt->execute();

      // Get the result
      $result = $stmt->get_result();

      // Check if a user was found
      if ($result->num_rows == 1) {
        // User found, set session variables
        session_start();
        $user_data = $result->fetch_assoc();
        $_SESSION["user_id"] = $user_data["id"];
        $_SESSION["username"] = $user_data["username"];

        // Redirect the user
        header("Location: welcome.php"); // Assuming a welcome page
        exit();

      } else {
        $error = "Invalid username or password.";
      }
    } else {
      $error = "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php
  if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // **IMPORTANT: HASH THE PASSWORD!**
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Database connection details (same as login.php)
    $host = "localhost";
    $username = "your_username";
    $password = "your_password";
    $database = "your_database";

    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "INSERT INTO users (username, password) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
        $stmt->bind_param("ss", $username, $hashed_password);
        $stmt->execute();

        // Success message
        $success = "Registration successful.  Please login.";

        $stmt->close();
        $conn->close();

    } else {
        $success = "Error preparing statement.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Register</title>
</head>
<body>

  <h2>Register</h2>

  <?php if (isset($success)) { echo $success; } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Register</button>
  </form>

  <p>Already have an account? <a href="login.php">Login</a></p>

</body>
</html>


<?php

// Database connection details (replace with your actual details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind the parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            // Successful login
            session_start(); // Start a session to store user information
            $_SESSION['username'] = $row['username'];  // Store username in session
            $_SESSION['user_id'] = $row['id']; //  Optionally, store the user ID.
            return true; // Indicate successful login
        } else {
            return false; // Indicate login failed (no user found)
        }
    } else {
        // Error executing query
        return false;
    }

    // Close the statement
    $stmt->close();

    // Close the connection
    $conn->close();
}

// Example usage:  (This is just for testing - you wouldn't usually include this in a production environment)
// $username = "testuser";
// $password = "password123";

// if (loginUser($username, $password)) {
//     echo "Login successful!";
//     // Redirect to a protected page or do something else
// } else {
//     echo "Login failed. Please check your credentials.";
// }

?>


<?php

// Database configuration (Replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to authenticate users
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT id, username, password FROM users WHERE username = ?";

  // Prepare the statement
  $stmt = $conn->prepare($query);

  // Bind the parameter
  $stmt->bind_param("s", $username); 

  // Execute the query
  if ($stmt->execute()) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Verify password (using password_verify function)
      if (password_verify($password, $row["password"])) {
        // Authentication successful
        session_start(); 

        // Store user ID and username in session
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        return true; // Authentication successful
      } else {
        // Password mismatch
        return false;
      }
    } else {
      // No user found
      return false;
    }
  } else {
    // Query execution failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (for testing - don't put this in your public facing code)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or do something else
    header("Location: /protected_page.php");  // Replace with your protected page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <br><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (IMPORTANT: Sanitize and validate user input!)
    $username = filter_var($username, FILTER_SANITIZE_STRING); // Sanitize
    $password = filter_var($password, FILTER_SANITIZE_STRING); // Sanitize

    // Validate username is not empty
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Hash the password (Important for security!)
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Connect to the database
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare and execute the query
        $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $username, $hashed_password); // "ss" indicates two string parameters
        $stmt->execute();

        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User found, set session variables
            session_start();
            $user = $result->fetch_assoc();
            $_SESSION["user_id"] = $user["id"];
            $_SESSION["username"] = $user["username"];
            echo "Login successful!  Redirecting...";
            // Redirect to a secure page or show a success message
            header("Location: secure_page.php"); // Example: Redirect to a secure page
            exit();
        } else {
            $error_message = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
<?php } ?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database Configuration (Replace with your actual database details)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security -  see below)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } else {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check the connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query to authenticate the user
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = $conn->query($sql);

      if ($result->num_rows == 1) {
        // User found - Set session variables
        session_start();
        $_SESSION["username"] = $username;
        $_SESSION["user_id"] = $result->fetch_assoc()["id"]; // Assuming you have an 'id' column
        $error = "Login successful!";
        // Redirect to a secure page (e.g., dashboard)
        header("Location: dashboard.php"); // Or your desired secure page
        exit();
      } else {
        $error = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
session_start();

/**
 * Logs a user into the application.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login was successful, false otherwise.
 */
function loginUser(string $username, string $password)
{
  // In a real application, you would fetch this from a database.
  // For this example, we'll use a hardcoded user and password.
  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'secretpass',
  ];

  // Check if the username exists
  if (isset($validUsers[$username])) {
    // Verify the password
    if (password_verify($password, $validUsers[$username])) {
      // Password is correct, set session variables
      $_SESSION['user_id'] = $username; // Store username as user_id (more secure)
      $_SESSION['is_logged_in'] = true;
      return true;
    } else {
      return false; // Password mismatch
    }
  } else {
    return false; // Username doesn't exist
  }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page or display a welcome message.
    header("Location: /protected_page.php"); // Replace with the actual URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check connection
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser($username, $password) {
    // SQL query to retrieve user information
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return false; // User not found
    }

    $user_data = $result->fetch_assoc();
    $hashed_password = $user_data['password'];

    // Verify the password using password_verify
    if (password_verify($password, $hashed_password)) {
        // Password matches, authenticate the user
        // You can store user session data here (e.g., user ID)
        // For this example, we'll just return true.
        return true;
    } else {
        return false; // Incorrect password
    }
}

// Example Usage (Simulating a login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // User is logged in
        echo "Login successful!";
        // Start a session to track the logged-in user
        session_start();
        $_SESSION["user_id"] = $user_data['id']; // Store the user's ID in the session
        // You can redirect the user to a secure page here.
    } else {
        echo "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">
        <br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password must be filled.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format.";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare and execute the query
        $sql = "SELECT username, password FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        } else {
            $row = $result->fetch_assoc();
            // Verify password (important!)
            if (password_verify($password, $row["password"])) {
                // Successful login - store the username in a session
                session_start();
                $_SESSION["username"] = $username;
                echo "Login successful!";
                // Redirect to a secure page (e.g., dashboard)
                header("Location: dashboard.php");
                die();
            } else {
                $error = "Invalid username or password.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h2>User Login</h2>

<?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database connection details - Replace with your actual values
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check connection
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle login
function login($username, $password) {
    // Sanitize inputs to prevent SQL injection
    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);

    // SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Login successful
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (login($username, $password)) {
        // Redirect to a welcome page or desired location
        header("Location: welcome.php"); // Replace with your welcome page URL
        exit();
    } else {
        $error = "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <button type="submit">Login</button>
    </form>

    <br>
    <a href="register.php">Don't have an account? Register here.</a>


</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Database query
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check the credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        }

        if ($result->num_rows > 0) {
            // Successful login -  Set a session variable to track the user
            session_start();
            $_SESSION["username"] = $username; // Store username in session
            // You could also store other user data if needed.
            echo "Login successful!  You are now logged in.";
            header("Location: welcome.php"); // Redirect to a welcome page
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) {
        echo "<p style='color:red;'>$error_message</p>";
    }
?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
        Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (very important!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error_message = "Invalid email format.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query to check credentials
    $sql = "SELECT * FROM users WHERE email = '$username'"; // Using email for security
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      // If the query returns a row, user exists
      $row = $result->fetch_assoc();
      // Password verification (IMPORTANT!)
      if (password_verify($password, $row["password"])) {
        // Session creation (to keep user logged in)
        session_start();
        $_SESSION["user_id"] = $row["id"];  // Assuming you have an 'id' column in your table
        $_SESSION["username"] = $row["email"]; // Store the username for convenience

        // Redirect to a welcome page or secure area
        header("Location: welcome.php"); // Replace with your welcome page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to a registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, create a session variable to store the user's ID
    $row = $result->fetch_assoc();
    $_SESSION['user_id'] = $row['id']; // Assuming 'id' column represents the user ID
    $_SESSION['username'] = $row['username']; 
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example Usage:
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to a secure page or homepage
    header("Location: /secure_page.php"); // Replace with your secure page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="login_username">Username:</label>
    <input type="text" id="login_username" name="login_username">
    <br><br>

    <label for="login_password">Password:</label>
    <input type="password" id="login_password" name="login_password">
    <br><br>

    <button type="submit" name="login_submit">Login</button>
  </form>

</body>
</html>


<?php

// ... (Database connection code) ...

  // SQL query with placeholders
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

  // Execute the query
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // ... (Rest of the login logic) ...

  $stmt->close();
?>


<?php

// Database configuration (replace with your actual database details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match('/^[a-zA-Z0-9_]+$/', $username)) {
    $error_message = "Invalid username.  Please use a valid email address or alphanumeric username.";
  }  else {
    // Hash the password for security (using password_hash)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check the connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query to check the credentials
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    // Check if the query returned any results
    if ($result->num_rows > 0) {
      // Get the user data
      $user = $result->fetch_assoc();

      // Verify the password
      if (password_verify($password, $user["password"])) {
        // Login successful
        // Session handling (to keep the user logged in)
        session_start();
        $_SESSION["username"] = $username;
        header("Location: welcome.php"); // Redirect to a welcome page or dashboard
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to a registration page -->

</body>
</html>


<?php
session_start();

/**
 * User Login Function
 *
 * Handles user login and session management.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True on successful login, false otherwise.
 */
function loginUser(string $username, string $password) {
    // *** IMPORTANT: Replace this with your actual database connection and credentials ***
    $dbHost = "localhost";
    $dbUsername = "your_db_username";
    $dbPassword = "your_db_password";
    $dbName = "your_db_name";

    // Establish database connection
    $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check username and password
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();

        // Verify password (using password_hash if you're storing hashed passwords)
        if (password_verify($password, $row['password'])) { // Using password_verify
            // Login successful
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $row['id']; // Store the user ID
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }

    $conn->close();
}


/**
 * Logout Function
 *
 * Clears the session and redirects to a login page or the homepage.
 */
function logoutUser() {
    session_destroy();
    // Redirect to login page or homepage
    header("Location: login.php"); // Or your desired destination
    exit();
}

// Example Usage (Illustrative - you'll need to integrate this into your form submission)
//  Assume you've handled form submission and obtained $username and $password
//  $username = $_POST['username'];
//  $password = $_POST['password'];

// if (loginUser($username, $password)) {
//     // Successful login - redirect to homepage or protected area
//     header("Location: homepage.php");
//     exit();
// } else {
//     // Login failed - display error message
//     echo "<p style='color:red;'>Invalid username or password.</p>";
// }

?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_pass = 'your_db_password';

/**
 * Logs in a user based on username and password.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return int|false The user ID if successful, false if not.
 */
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check the connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $query = "SELECT id FROM users WHERE username = ? AND password = ? ";  // Use prepared statement to prevent SQL injection

    // Bind parameters
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute() === TRUE) {
        $result = $stmt->get_result();
        $row = $result->fetch_assoc();

        if ($row) {
            // User found, return the user ID
            return $row['id'];
        } else {
            // User not found
            $stmt->close();
            return false;
        }
    } else {
        // Query execution failed
        $stmt->close();
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}



// Example usage:
// Get username and password from form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security)
    if (empty($username) || empty($password)) {
        echo "Username and password cannot be empty.";
    } else {
        // Call the login function
        $userId = loginUser($username, $password);

        if ($userId) {
            // User logged in successfully
            session_start();
            $_SESSION['userId'] = $userId;  // Store user ID in session
            echo "Login successful!  User ID: " . $userId;
            // Redirect to a protected page or display a welcome message
            header("Location: /protected_page.php"); // Example
            exit();
        } else {
            // Login failed
            echo "Invalid username or password.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Crucial for security)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Hash the password (Important for security)
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Query the database to check credentials
        $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
        $result = mysqli_query($db_host, $sql);

        if (mysqli_num_rows($result) > 0) {
            $row = mysqli_fetch_assoc($result);
            // Verify the password
            if (password_verify($password, $row["password"])) {
                // Successful login
                // Set a session variable to store the user's ID
                session_start();
                $_SESSION["user_id"] = $row["id"];
                $_SESSION["username"] = $username; // Optionally store username
                
                // Redirect the user to a protected page
                header("Location: protected_page.php"); // Replace with your protected page
                exit(); // Important to stop further script execution
            } else {
                $error_message = "Incorrect password.";
            }
        } else {
            $error_message = "Username not found.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" <?php if (isset($error_message) && $error_message == "Username not found.") { echo "required"; } ?>><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="registration.php">Register</a></p>
</body>
</html>


<?php

// Database connection details (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (very important!)
  if (empty($username) || empty($password)) {
    $error[] = "Username and Password are required.";
  }

  // Database query (use prepared statements to prevent SQL injection)
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username); // 's' indicates a string
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    $error[] = "Invalid username or password.";
  } else {
    // Fetch the user data
    $user = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $user["password"])) {
      // Successful login
      // You can set session variables here to store the user's ID or username.
      // For example:
      session_start();
      $_SESSION["user_id"] = $user["id"];
      $_SESSION["username"] = $username;

      // Redirect to a secure page or display a welcome message
      header("Location: secure_page.php"); // Replace 'secure_page.php' with your secure page
      exit();
    } else {
      $error[] = "Incorrect password.";
    }
  }
}

// Start the session (if not already started)
session_start();


// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (!empty($error)) { ?>
    <div style="color: red;">
      <?php foreach ($error as $err) { echo $err . "<br>"; } ?>
    </div>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php if (isset($username)) echo $username; ?>" /><br><br>
    Password: <input type="password" name="password" value="<?php if (isset($password)) echo $password; ?>" /><br><br>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (Replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Set session variables
    $_SESSION['user_id'] = $user['id']; // Assuming you have an 'id' column in your users table
    $_SESSION['username'] = $user['username'];

    // Redirect to a protected page or display a success message
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (This is just for demonstration, you'll need to integrate this with a form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // User is logged in
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page here.  Example:
    // header("Location: protected_page.php");
    // exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password hash
  $query = "SELECT password_hash, user_id FROM users WHERE username = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("s", $username); // 's' indicates a string parameter
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found
    return false;
  } else {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password_hash'];
    $user_id = $row['user_id'];
    $stmt->close();

    // Verify the password
    if (password_verify($password, $hashed_password)) {
      // Password is correct
      // You can store the user_id in a session or cookie for later use
      $_SESSION['user_id'] = $user_id;  // Store user ID in session
      return true;
    } else {
      // Password is incorrect
      return false;
    }
  }
}


// Example Usage (for demonstration - you'll integrate this into your form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to your protected page or dashboard
    header("Location: /protected_page.php"); // Replace with the URL of your protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="Your Username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$login_username = $_POST['username'] ?? ''; // Use null coalescing operator for safety
$login_password = $_POST['password'] ?? '';

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Sanitize input (Important for security!)
  $login_username = filter_var($login_username, FILTER_SANITIZE_STRING);
  $login_password = filter_var($login_password, FILTER_SANITIZE_STRING);

  // Validate inputs (basic example - customize as needed)
  if (empty($login_username) || empty($login_password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // SQL Query (use prepared statements for security - demonstrated below)
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $login_username, $login_password);
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, set session variables
      $user = $result->fetch_assoc();
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];

      // Redirect to a protected page (e.g., user dashboard)
      header("Location: user_dashboard.php");
      exit(); // Important to stop further execution
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($login_username) ? htmlspecialchars($login_username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($login_password) ? htmlspecialchars($login_password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Credentials - Replace with your actual credentials
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the inputs (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email address.";
  } else {
    // SQL Query (Using prepared statements for security)
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $user = $result->fetch_assoc();
      // Verify password (Important!) - compare the hashed password
      if (password_verify($password, $user["password"])) {
        // Login successful - Set session variables
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["username"];
        echo "Login successful! <a href='welcome.php'>Welcome, " . htmlspecialchars($user["username"]) . "</a>";
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "Incorrect username.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

/**
 * Handles user login.
 *
 * @param string $username The username entered by the user.
 * @param string $password The password entered by the user.
 * @return int|false 1 on success, 0 on error, false on failure.
 */
function loginUser($username, $password)
{
    // 1. Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        // Handle connection error
        error_log("Connection failed: " . $conn->connect_error); // Log for debugging
        return 0; // Indicate an error
    }

    // 2. Prepare and execute the SQL query
    $query = "SELECT id, username, password FROM users WHERE username = ?";
    $stmt = $conn->prepare($query);

    if ($stmt === false) {
        // Handle query preparation error
        error_log("Query preparation failed: " . $conn->error);
        $conn->close();
        return 0;
    }

    $stmt->bind_param("s", $username); // 's' indicates a string parameter

    if (!$stmt->execute()) {
        // Handle execution error
        error_log("Query execution failed: " . $stmt->error);
        $stmt->close();
        $conn->close();
        return 0;
    }

    // 3. Get the result
    $result = $stmt->get_result();

    // 4. Check if a user was found
    if ($result->num_rows == 0) {
        $stmt->close();
        $conn->close();
        return false; // User not found
    }

    $user = $result->fetch_assoc(); // Fetch the user data as an associative array
    $stmt->close();
    $conn->close();

    // 5. Verify the password
    if (password_verify($password, $user['password'])) {
        return 1; // Login successful
    } else {
        return false; // Incorrect password
    }
}



// Example usage:  (This part is just for demonstration and testing)
//  This will not be executed in a typical web application

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        echo "Login successful!  You are now logged in.";
        // Redirect to a protected page or display a welcome message
    } else {
        echo "Invalid username or password.";
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

<h2>Login</h2>

<form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the username and password
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, verify the password
    $row = $result->fetch_assoc();
    if (password_verify($password, $row["password"])) {
      // Password matches, login successful
      // Set session variables to identify the user
      session_start();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $username;

      // Redirect the user to a secure page (e.g., their dashboard)
      header("Location: dashboard.php"); // Replace dashboard.php with your login success page
      exit(); // Important to stop further execution
    } else {
      // Password does not match
      echo "<p>Incorrect password.</p>";
    }
  } else {
    // User not found
    echo "<p>User not found.</p>";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="login.php" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>
    Don't have an account? <a href="register.php">Register</a>
  </p>

</body>
</html>


    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);  // "s" indicates a string
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      // ...
    }
    $stmt->close();
    

*   **Password Hashing (Never Store Passwords in Plain Text):**  As mentioned above, *never* store passwords in plain text. Use `password_hash()` to create a secure hash of the password before storing it in the database.

    
    $password = $_POST["password"];
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Then, when verifying the password:
    if (password_verify($password, $row["password"])) {
        // ...
    }
    

*   **Rate Limiting:** Implement rate limiting to prevent brute-force attacks. Limit the number of login attempts from a single IP address within a certain time period.

*   **Input Validation and Sanitization:**  Validate and sanitize all user input on the server-side to prevent cross-site scripting (XSS) and other vulnerabilities.

*   **HTTPS:**  Always use HTTPS to encrypt communication between the browser and the server, protecting user credentials during transmission.

*   **Error Handling:** Implement robust error handling to prevent sensitive information from being exposed to the user.  Don't display detailed error messages to the user in a production environment.  Log errors for debugging purposes.

*   **Secure Session Management:**  Use secure session cookies (set the `secure` flag to `true`) and regenerate the session ID after login to prevent session fixation attacks.

**Register.php (Example for User Registration):**



<?php

// Database configuration (Replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the login details from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Crucial for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) == 1) {
      // User found, set session variables
      $user_info = mysqli_fetch_assoc($result);
      $_SESSION["username"] = $username;
      $_SESSION["user_id"] = $user_info["id"]; // Assuming 'id' is the primary key

      // Redirect to a secure page or the homepage
      header("Location: /home.php"); // Change to your desired URL
      exit();
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}

// Start the session
session_start();

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here!</a>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (basic example - enhance for security in a real application)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } elseif (filter_var($username, FILTER_VALIDATE_EMAIL) === false) {
        $error = "Invalid email format.";
    } else {
        // Attempt to connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check username and password
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            // User found, set session variables
            session_start();
            $_SESSION["username"] = $username;  // Store the username in the session
            $result->fetch_assoc(); // Fetch the user data for better security
            echo "Login successful!";
            // Redirect to a secure page or display a welcome message
            header("Location: welcome.php"); // Replace welcome.php with your desired page
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php
// (Previous code for form and database connection)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
       // Use prepared statement to prevent SQL injection
       $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
       $stmt = $conn->prepare($sql);
       $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
       $stmt->execute();
       $result = $stmt->get_result();

       if ($result->num_rows == 1) {
           session_start();
           $_SESSION["username"] = $username;
           $result->fetch_assoc();
           echo "Login successful!";
           header("Location: welcome.php");
           exit();
       } else {
           $error = "Invalid username or password.";
       }
       $stmt->close();
    }
}
?>


<?php

// Database credentials - REPLACE with your actual credentials
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { // Validate email format
    $error = "Invalid email address.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL Query (adjust for your table structure)
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // User found, verify password
      $user_data = $result->fetch_assoc();
      if (password_verify($password, $user_data["password"])) { // Use password_verify
        // Successful login, set session variables
        session_start();
        $_SESSION["user_id"] = $user_data["id"];
        $_SESSION["username"] = $user_data["username"];
        echo "Login successful! <a href='welcome.php'>Welcome, " . $_SESSION["username"] . "</a>";
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input (basic)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    }
    // TODO: Add more robust input validation here

    if (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email address.";
    }

    if (empty($error)) {
        // Hash the password using password_hash()
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Database connection (same as login.php)
        $host = "localhost";
        $username = "your_db_username";
        $password = "your_db_password";
        $database = "your_db_name";

        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL Query
        $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
        $result = $conn->query($sql);

        if ($result) {
            $success = "Registration successful! Please log in.";
        } else {
            $error = "Registration failed: " . $conn->error;
        }

        $conn->close();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Register</title>
</head>
<body>

  <h2>Register</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <?php if (isset($success)) { ?>
    <p style="color: green;"><?php echo $success; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Register</button>
  </form>

  <br>
  <a href="login.php">Already have an account? Log in here.</a>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Crucial for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL Query to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      // User found, set session variables
      session_start(); // Start a session (important for maintaining user info)
      $user_row = $result->fetch_assoc();
      $_SESSION["username"] = $user_row["username"];
      $_SESSION["id"] = $user_row["id"]; // Assuming you have an ID column in your users table

      // Redirect to a protected page or display a success message
      header("Location: protected_page.php"); // Replace with your protected page
      exit();

    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>New user? <a href="register.php">Register here</a></p>

</body>
</html>


   <?php
   // ... (Database connection code)

   if ($result->num_rows == 1) {
     $user_row = $result->fetch_assoc();
     $hashed_password = $user_row["password"];  // Get the hashed password from the database
     if (password_verify($password, $hashed_password)) {
       // Password matches, proceed with login
       // ... (Set session variables)
     } else {
       $error_message = "Invalid password.";
     }
   }
   ?>
   

   * **`password_hash($password, PASSWORD_BCRYPT)`**:  This function generates a secure, salted hash of the user's password before storing it in the database.

4. **Register Form (register.php):** Create a `register.php` file to allow new users to create accounts.  Use `password_hash()` to hash their passwords before storing them in the database.

5. **Protected Page (protected_page.php):**  Create a `protected_page.php` (or whatever you choose) to display content only for logged-in users.  Check if `$_SESSION["username"]` is set before allowing access.

Example `register.php` (Very basic - expand for real-world use):



<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, extract data
      $row = $result->fetch_assoc();
      $user_id = $row['id'];
      $user_name = $row['username'];

      // Session management (important for security)
      session_start();
      $_SESSION['user_id'] = $user_id;
      $_SESSION['username'] = $user_name;

      // Redirect to a protected page or display a success message
      header("Location: protected_page.php"); // Replace with your protected page
      exit(); // Important to stop further execution

    } else {
      // User not found
      return false;
    }
  } else {
    // Error executing the query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (Simplified - usually this would be from a form submission)
//  You would get the username and password from a form, then call the function
//  like this:
//  if (isset($_POST['username']) && isset($_POST['password'])) {
//    $username = $_POST['username'];
//    $password = $_POST['password'];
//    loginUser($username, $password);
//  }

?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to check login credentials
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check login
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, return user data (you might want to return more data)
    $user = $result->fetch_assoc();
    return $user;
  } else {
    // User not found
    return null;
  }

  // Close the connection
  $conn->close();
}

// Example usage (handling form submission - adjust as needed for your application)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $user = loginUser($username, $password);

  if ($user) {
    // Login successful
    session_start();
    $_SESSION["username"] = $user["username"]; // Store username in session
    echo "Login successful!  You are logged in as " . $user["username"];
    // Redirect to a protected page or display a welcome message.
    header("Location: protected_page.php"); // Replace with your protected page
    exit();
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


// ... (Database connection code from above) ...

// SQL query with placeholders
$sql = "SELECT * FROM users WHERE username = ? AND password = ?";

// Prepare the statement
$stmt = $conn->prepare($sql);

// Bind the parameters (important!)
$stmt->bind_param("ss", $username, $password); // "ss" means two strings

// Execute the statement
$stmt->execute();

// Get the result
$result = $stmt->get_result();

// Check the result
if ($result->num_rows > 0) {
    // ... (Process the result) ...
} else {
    // ... (User not found) ...
}

// Close the statement
$stmt->close();


<?php

// Database credentials (Replace with your actual database details)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_pass = 'your_password';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows == 0) {
    // User not found
    return false;
  } else {
    // User found - Set session variables to indicate login
    session_start();
    $_SESSION['username'] = $username;
    return true;
  }

  // Close the connection
  $conn->close();
}

// Example Usage:
// 1. Form Submission (Simplified example - replace with your HTML form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Successful login - Redirect to a protected page or display a welcome message
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    // Login failed - Display error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

</body>
</html>


function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query with placeholders
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  $result = $stmt->execute();

  if ($result) {
    $row = $stmt->fetch_assoc();
    if ($row) {
      // User found - Set session variables to indicate login
      session_start();
      $_SESSION['username'] = $username;
      return true;
    }
  }

  // Close the connection
  $conn->close();
  return false;
}


<?php
session_start();

/**
 * Handles user login.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login was successful, false otherwise.
 */
function loginUser($username, $password) {
  // In a real application, you'd likely store passwords hashed, 
  // not plain text.  This example is for demonstration only.

  // Check username and password against stored values.
  // Replace these with your actual database query.
  $storedUsers = [
    ['username' => 'john.doe', 'password' => 'securePassword123'],
    ['username' => 'jane.smith', 'password' => 'anotherSecurePass'],
  ];

  foreach ($storedUsers as $user) {
    if ($user['username'] === $username && password_verify($password, $user['password'])) {
      // Authentication successful.  Set session variables.
      $_SESSION['username'] = $username;
      return true;
    }
  }

  return false;
}

/**
 * Handles user logout.
 */
function logoutUser() {
  unset($_SESSION['username']);
  // Optionally, destroy the session completely:
  // session_destroy();
}


// --- Example Usage (Illustrative) ---
// You'll typically get the username and password from a form.

//  Example form handling (Simplified)
//  if ($_SERVER["REQUEST_METHOD"] == "POST") {
//    $username = $_POST["username"];
//    $password = $_POST["password"];
//    if (loginUser($username, $password)) {
//      echo "Login successful!";
//      // Redirect to a protected page or display a welcome message.
//    } else {
//      echo "Invalid username or password.";
//    }
//  }
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <br><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="logout.php">Logout</a> (This would be a separate file)

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Function to handle login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      // User found, you can now return user information
      $user_data = $result->fetch_assoc();
      //  You can now do something with the $user_data, like setting a session
      //  or redirecting the user to a different page.
      return $user_data;
    } else {
      return null; // User not found
    }

  } else {
    // Error executing the query
    return null;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (This part is for testing - it's not part of the login function)
// This is a sample form, you'd typically handle this in your HTML form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the login function
  $user = loginUser($username, $password);

  if ($user) {
    // User logged in successfully
    echo "Welcome, " . $user["username"] . "!";
    // Set a session to keep the user logged in (example)
    session_start();
    $_SESSION["user_id"] = $user["user_id"]; // Assuming user_id is in the user data
    // You could redirect the user to a secure area
    // header("Location: secure_area.php");
    // exit;

  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login authentication.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false $user_id if login successful, false otherwise.
 */
function loginUser(string $username, string $password) {
    // **IMPORTANT: In a real application, you would NEVER store passwords directly in the database.**
    // This is a simplified example for demonstration purposes only.
    // Use password hashing functions like password_hash() and password_verify() for security.

    // Simulate a simple database (replace with your actual database connection)
    $users = [
        ['username' => 'john.doe', 'password' => 'securepassword123'],
        ['username' => 'jane.smith', 'password' => 'anotherpassword'],
        ['username' => 'admin', 'password' => 'adminpass'],
    ];

    // Loop through the user data and compare the provided username and password
    foreach ($users as $user) {
        if ($user['username'] === $username && password_verify($password, $user['password'])) { // Use password_verify!
            // User found and password matches!
            return $user['id']; // Assuming you have an 'id' field in your users
        }
    }

    // User not found or password does not match
    return false;
}



/**
 *  Example Usage (for demonstration only - do not use in production without proper security)
 */

// Get username and password from form input (in a real application, this would come from a form)
$username = $_POST['username'];
$password = $_POST['password'];

// Check if the login form was submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $user_id = loginUser($username, $password);

    if ($user_id !== false) {
        // Login successful!
        echo "Login successful! User ID: " . $user_id;

        // Store the user ID (e.g., in a session, cookie, or database)
        // Example:
        session_start();
        $_SESSION['user_id'] = $user_id;
        // ... other session setup ...
        
    } else {
        // Login failed
        echo "Invalid username or password.";
    }
}
?>


<?php

/**
 * Handles user login functionality.
 *
 * This function takes username and password as input and checks
 * against a simple (and insecure!) database.  In a production
 * environment, you *MUST* use a robust authentication system
 * with hashing and salting for security.
 */

function loginUser($username, $password) {
    // **WARNING:  This is a VERY insecure example for demonstration only!**
    // In a real application, never store passwords in plain text.
    // Use password_hash() and password_verify() for secure password handling.

    // Simulate a database (replace with your actual database connection)
    $users = [
        ['username' => 'john_doe', 'password' => 'securepassword123'],
        ['username' => 'jane_smith', 'password' => 'anothersecurepass'],
        ['username' => 'admin', 'password' => 'supersecret'] // For demonstration
    ];

    foreach ($users as $user) {
        if ($user['username'] === $username && password_verify($password, $user['password'])) {
            // Login successful
            session_start(); // Start a session to store user information
            $_SESSION['username'] = $username;
            return true; // Return true to indicate success
        }
    }

    // Login failed
    return false;
}

// **Example Usage (in an HTML form)**
//
// <form method="post" action="login.php">
//   Username: <input type="text" name="username">
//   Password: <input type="password" name="password">
//   <button type="submit">Login</button>
// </form>
//
// **PHP Code to handle the form submission:**
//
// $username = $_POST['username'];
// $password = $_POST['password'];
//
// if (loginUser($username, $password)) {
//   echo "Login successful!  You are now logged in.";
//   // Redirect to a protected page or display a welcome message
//   header("Location: protected_page.php"); // Example: Redirect
//   exit();
// } else {
//   echo "Invalid username or password.";
// }

?>


<?php

// Database credentials (replace with your actual details)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for the username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables for authentication
    $user = $result->fetch_assoc();
    $_SESSION['user_id'] = $user['id']; // Assuming you have an 'id' column in your users table
    $_SESSION['username'] = $user['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example Usage (assuming you have a form to submit username and password)
//  (This section is for demonstration only.  In a real application, you would
//   process the form data and call the loginUser() function.)

//  Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important to prevent SQL injection and other issues)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Call the loginUser function
    $login_result = loginUser($username, $password);

    if ($login_result) {
      // Login successful, redirect to a protected page
      header("Location: /protected_page.php"); //  Replace with your protected page URL
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

// Display any error messages
if (isset($error)) {
  echo "<p style='color:red;'>$error</p>";
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the password hash for the given username
  $sql = "SELECT password_hash, salt FROM users WHERE username = ?";
  $stmt = $conn->prepare($sql); // Use prepared statement for security
  $stmt->bind_param("s", $username); // "s" indicates a string parameter

  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    return false; // User not found
  }

  $row = $result->fetch_assoc();

  // Verify the password
  $hashed_password = $row['password_hash'];
  $salt = $row['salt'];

  if (password_verify($password, $hashed_password)) {
    // Password is correct.  You can store session information here, 
    // such as user ID or username, to identify the logged-in user.
    // Example:
    session_start();
    $_SESSION['user_id'] = $row['id']; // Assuming 'id' is the user ID column
    $_SESSION['username'] = $username; 
    return true;
  } else {
    return false; // Password incorrect
  }

  $stmt->close();
  $conn->close();
}

// Example Usage (to demonstrate)
// This is just an example - you'll need to integrate this into your login form.
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    echo "Login successful!";
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_database_user';
$db_password = 'your_database_password';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password hash
  $sql = "SELECT password_hash, user_id FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password_hash'];
    $userId = $row['user_id'];  // Store the user ID for later use

    // Verify the password
    if (password_verify($password, $hashed_password)) {
      // Password is correct!

      // You can store session information here (e.g., user ID)
      // In a real application, you'd typically use a session management system
      // to store user data securely.  This example uses a simple session variable
      session_start();
      $_SESSION['userId'] = $userId; // Store the user ID in the session

      return true; // Login successful
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // User not found
  }

  $conn->close();
}


// Example Usage (This part would typically be in a form submission handler)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a different page or display a welcome message
    echo "Login successful!  You are now logged in.";
    // Redirect to a secure page
    header("Location: /your_secure_page.php"); // Replace with your secure page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}


?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login using a simple username/password scheme.
 * **Important:**  This is a basic example for demonstration purposes.  
 *  For production environments, you should use a secure authentication method 
 *  like hashing passwords and using sessions or tokens.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // **IMPORTANT:  In a real application, you should NEVER store passwords in plain text.**
  // This example uses a hardcoded database for simplicity.
  // You should hash passwords using a strong hashing algorithm like bcrypt.

  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'securePass456',
  ];

  // Check if the username exists
  if (isset($validUsers[$username])) {
    // Verify the password
    if ($validUsers[$username] === $password) {
      // Login successful - set a session variable to indicate logged-in status
      session_start();
      $_SESSION['user_id'] = $username; // Use username as identifier
      $_SESSION['logged_in'] = true;
      return true;
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // Username not found
  }
}

// Example usage:
// Simulate a login attempt
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo '<p>Login successful! You are now logged in.</p>';
    // Redirect to a protected page or display a welcome message
    header("Location: welcome.php"); // Redirect to welcome page
    exit();
  } else {
    echo '<p>Invalid username or password.</p>';
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual values
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user's password from the database
  $sql = "SELECT password FROM users WHERE username = '$username'";

  // Execute the query
  $result = $conn->query($sql);

  // Check if a user with the given username exists
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $stored_password = $row['password'];

    // Verify the password
    if (password_verify($password, $stored_password)) {
      // Authentication successful, set session variables
      session_start();
      $_SESSION['username'] = $username;
      return true;
    } else {
      return false;
    }
  } else {
    return false; // User not found
  }

  // Close the connection
  $conn->close();
}

// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the loginUser function
  if (loginUser($username, $password)) {
    // Login successful, redirect to a secure page or display a welcome message
    header("Location: /secure_page.php"); // Replace /secure_page.php with your desired secure page
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL statement
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username);

  // Execute the statement
  if ($stmt->execute() === false) {
    die("Error executing query: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    return false; // User not found
  }

  $user = $result->fetch_assoc();

  // Verify the password
  if (password_verify($password, $user['password'])) {
    // Password is correct
    $stmt->close();
    return $user; // Return user data
  } else {
    // Password is incorrect
    $stmt->close();
    return false; // Return false to indicate incorrect password
  }
}

// Example usage (Handle login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $user = loginUser($username, $password);

  if ($user) {
    // Login successful
    session_start();
    $_SESSION["user_id"] = $user["id"];
    $_SESSION["username"] = $user["username"];
    echo "Login successful!  Welcome, " . $user["username"];
    // Redirect to a protected page or display content
    header("Location: /protected_page.php"); // Change this to your desired URL
    exit();
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}

// Form for login
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration
$host = "localhost";
$username = "your_username"; // Replace with your database username
$password = "your_password"; // Replace with your database password
$database = "your_database"; // Replace with your database name

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check login credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, set session variables
        $user = $result->fetch_assoc();
        $_SESSION['username'] = $user['username'];
        $_SESSION['userid'] = $user['id']; // Assuming you have an 'id' column in your users table
        return true; // Login successful
    } else {
        return false; // Login failed
    }

    $conn->close();
}

// Example usage (handling form submission):
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Login successful, redirect to a protected page
        header("Location: /protected_page.php"); // Replace with the URL of your protected page
        exit();
    } else {
        // Login failed, display an error message
        echo "<p style='color: red;'>Invalid username or password.</p>";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">
        <br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>

        <button type="submit">Login</button>
    </form>

    <br><br>
    <a href="register.php">Not a user? Register here.</a>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (important for security)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password must be filled.";
    } else {
        //  **IMPORTANT SECURITY NOTE:**  NEVER store passwords directly in your code or database.
        //  Always hash the password before storing it in the database.
        //  This example uses a simple comparison for demonstration purposes ONLY.

        // Attempt to connect to the database
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check the connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Query to check for the username
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error_message = "Invalid username or password.";
        } else {
            // If the query executes successfully, check the password
            $row = $result->fetch_assoc();
            if (password_verify($password, $row["password"])) { // Secure password comparison using password_verify
                // Login successful!  Session management is crucial here.
                session_start();
                $_SESSION["username"] = $username;  // Store the username in the session
                $error_message = "Login successful!";
                // Redirect to a secure page or display a welcome message
                header("Location: welcome.php"); // Assuming you have a welcome.php page
                exit();
            } else {
                $error_message = "Invalid username or password.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (!empty($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @param array $users An associative array of users and their passwords.
 *                      Example: ['user1' => 'password1', 'user2' => 'password2']
 *
 * @return int|false The user ID if login is successful, false otherwise.
 */
function loginUser(string $username, string $password, array $users) {
  // Sanitize input (basic - consider more robust sanitization in production)
  $username = trim($username);
  $password = trim($password);

  // Check if the user exists
  if (isset($users[$username])) {
    // Verify the password
    if (password_verify($password, $users[$username])) {
      // User exists and password matches - return the user ID
      return $username; // Or, you could return the user's ID from a database
    } else {
      // Password mismatch
      return false;
    }
  } else {
    // User not found
    return false;
  }
}

// Example Usage:

// Sample user data (in a real application, this would come from a database)
$users = [
  'user1' => '$2y$11$e9i6a8o7s9n5k3m2j1l8o3p4q2r1t5u3v4x9z2a8x8x7y6z5p4w3a2b1c', // Password Hashed
  'user2' => '$2y$11$d9i6a8o7s9n5k3m2j1l8o3p4q2r1t5u3v4x9z2a8x8x7y6z5p4w3a2b1c',
];

// Get username and password from the user (e.g., from a form)
$username = $_POST['username'];
$password = $_POST['password'];

// Perform the login
$userId = loginUser($username, $password, $users);

// Handle the result
if ($userId) {
  // Login successful
  echo "Welcome, " . $userId . "!";
  // You can now redirect the user to a different page, etc.
} else {
  // Login failed
  echo "Invalid username or password.";
}

?>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  // Always use prepared statements in a real application!

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found - Create a session
    session_start();  // Start the session (must be done before any output)

    $user = $result->fetch_assoc(); // Fetch the user data as an associative array
    $_SESSION['username'] = $user['username'];
    $_SESSION['id'] = $user['id']; // Assuming you have an 'id' column in your table
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example Usage: (This would typically be on a form submission)
// $username = $_POST['username'];
// $password = $_POST['password'];
// if (loginUser($username, $password)) {
//   // Redirect to a secure page after successful login
//   header("Location: /protected_page.php"); // Replace with your secure page URL
//   exit();
// } else {
//   echo "Invalid username or password.";
// }


?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare statement
  $stmt = $conn->prepare($sql);

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Session variables for user data
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      return true; // Login successful
    } else {
      return false; // Login failed (wrong credentials)
    }
  } else {
    return false; // Login failed (SQL error)
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (in a form submission)

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - added below)
  if (empty($username) || empty($password)) {
      echo "Username and Password must be filled.";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Redirect to a secure page (e.g., the dashboard)
      header("Location: dashboard.php"); // Replace dashboard.php with your desired page
      exit();
    } else {
      echo "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (basic, can be expanded)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        }

        if ($result->num_rows > 0) {
            // User found, set session variables
            $_SESSION["username"] = $username;
            // You might want to redirect after login
            header("Location: welcome.php");
            exit();
        }
    }
}


// Start the session
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form action="" method="post">
        Username: <input type="text" name="username" required>
        <br><br>
        Password: <input type="password" name="password" required>
        <br><br>
        <button type="submit">Login</button>
    </form>

    <br><br>
    <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (basic)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepared statement
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
        $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        }

        if ($result->num_rows > 0) {
            // User found, set session variables
            $_SESSION["username"] = $username;
            header("Location: welcome.php");
            exit();
        }

        $stmt->close(); // Close the statement
    }
}

session_start();

?>


<?php

// Database credentials - Replace with your actual credentials
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (IMPORTANT -  DO NOT use this simple validation in a production environment!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Query the database to authenticate the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($host, $sql);

    if (mysqli_num_rows($result) > 0) {
      // User found - set session variables and redirect
      session_start();
      $_SESSION["username"] = $username;
      // You might want to store other user data in the session as well
      //  (e.g., user_id, role, etc.)
      //  Example:  $_SESSION["user_id"] = $result[0]["id"];
      //  Redirect the user to the protected page
      header("Location: /protected_page.php"); // Replace with the URL of your protected page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php
  if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Username"><br><br>
    Password: <input type="password" name="password" placeholder="Password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; 
    $stmt = $conn->prepare($sql);

    if ($stmt) {
        // Bind the parameters
        $stmt->bind_param("ss", $username, $password);

        // Execute the query
        if ($stmt->execute()) {
            // Get the result
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found, fetch the data
                $user = $result->fetch_assoc();

                // Session handling
                session_start();  // Start the session

                // Store user data in session (optional, but recommended)
                $_SESSION['user_id'] = $user['user_id'];
                $_SESSION['username'] = $user['username'];

                // Redirect to a protected page (e.g., dashboard)
                header("Location: dashboard.php");
                exit(); // Important: Exit after redirecting

            } else {
                // User not found or incorrect password
                echo "Invalid username or password.";
            }
        } else {
            echo "Query execution failed: " . $conn->error;
        }
    } else {
        echo "Error preparing statement: " . $conn->error;
    }

    $stmt->close();
    $conn->close();
}

// Example usage (assuming this is called from a form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    loginUser($username, $password);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. SQL Query to verify credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // 3. Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found - Get the data
    $user = $result->fetch_assoc();
    // 4. Store user session information
    $_SESSION['user_id'] = $user['id']; // Assuming 'id' is the user's ID
    $_SESSION['username'] = $user['username'];

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  // Close connection
  $conn->close();
}


// Example Usage (Demonstration - Not for Production)
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    // Redirect to a protected page or display a success message
    header("Location: protected_page.php"); // Replace with your protected page
    exit(); // Important: Stop further script execution
  } else {
    // Display error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="login_username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="login_password" placeholder="Enter your password"><br><br>
    <input type="submit" name="login_submit" value="Login">
  </form>

</body>
</html>


<?php

// Example using prepared statements for secure SQL queries
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare the SQL query using prepared statements
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

  // Execute the query
  $result = $stmt->execute();

  if ($result) {
    $user = $stmt->fetch_assoc();
    // 4. Store user session information
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    return true;
  } else {
    return false;
  }

  // Close connection
  $conn->close();
}

// Example usage (same as before)
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    header("Location: protected_page.php");
    exit();
  } else {
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();
    $row = $result->fetch_assoc(); // Fetch the result as an associative array

    // Check if a user was found
    if ($row) {
      // User found, set session variables
      $_SESSION['user_id'] = $row['id'];  // Assuming you have an 'id' column in your users table
      $_SESSION['username'] = $row['username'];
      return true; // Login successful
    } else {
      return false; // User not found
    }
  } else {
    // Handle query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (for demonstration - you'll need a form to submit these)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // User logged in successfully
    echo "Login successful!  Redirecting...";
    header("Location: user_dashboard.php"); // Redirect to a user dashboard
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual values
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get input values from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Query to verify credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, set session variables
        $_SESSION["username"] = $username;  // Store username in session
        echo "Login successful!";
        // Redirect the user to a protected page or dashboard
        header("Location: dashboard.php"); // Replace 'dashboard.php' with your desired page
        exit();
    } else {
        echo "Invalid username or password.";
    }

    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

<h2>Login</h2>

<form action="" method="post">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database';

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind parameters
    $stmt->bind_param("ss", $username, $password);  // "ss" means two strings

    // Execute the statement
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // Successful login
        $_SESSION['user_id'] = $row['id']; // Store user ID in session
        $_SESSION['username'] = $row['username']; // Store username

        // Redirect to a protected page or display a success message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit(); // Important: Stop further execution after redirecting

      } else {
        // Login failed (no user found or wrong password)
        return false;
      }
    } else {
      // Query execution failed
      return false;
    }
  } else {
    // Error preparing the statement
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();

  return true; // Indicate successful login
}


// Example usage (in your login form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Bind parameters to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // 'ss' means two strings

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Successful login - set session variables
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];

      // Redirect the user to a protected page
      header("Location: protected_page.php"); // Replace with your protected page URL
      exit();  // Important to stop further script execution
    } else {
      // Incorrect credentials
      return false;
    }
  } else {
    // Query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Handle login request (e.g., from a form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic example - add more robust validation)
  if (empty($username) || empty($password)) {
    echo "<p style='color:red;'>Username and password cannot be empty.</p>";
  } else {
    // Call the login function
    if (loginUser($username, $password)) {
      // Login successful -  you can redirect here if needed.
    } else {
      // Login failed - show an error message
      echo "<p style='color:red;'>Invalid username or password.</p>";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user data
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - redirect to the home page or another secure page
    header("Location: home.php"); // Replace 'home.php' with your desired destination
    exit();
  } else {
    // Login failed - display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $user = $result->fetch_assoc();
    $_SESSION['username'] = $user['username'];
    $_SESSION['id'] = $user['id']; // Assuming you have an 'id' column in your users table
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example Usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the loginUser function
  if (loginUser($username, $password)) {
    // Redirect to a secure page after successful login
    header("Location: secure_page.php");
    exit();
  } else {
    // Display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}
?>

<!-- HTML Form for Login -->
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
  Username: <input type="text" name="username" required>
  Password: <input type="password" name="password" required>
  <button type="submit">Login</button>
</form>


<?php

// Database credentials (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // User found, store session variables
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true; // Login successful
    } else {
      return false; // User not found
    }

  } else {
    // Error executing query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (for demonstration - replace with actual form handling)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Example:  Replace with your desired URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Important for security - prevent SQL injection)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Hash the password (for security)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check for the username and password
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
      // User found - set session variables
      session_start();
      $_SESSION["username"] = $username;
      $result->fetch_assoc(); // Get the user data
      $user_data = $result->fetch_assoc();
      $_SESSION["user_id"] = $user_data["id"]; // Assuming you have a user_id field
      
      // Redirect to a secure page (e.g., dashboard)
      header("Location: dashboard.php");
      exit(); 

    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color:red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query (important: use prepared statements for security)
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      // Bind parameters
      $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

      // Execute the query
      if ($stmt->execute()) {
        // Get result
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
          // User found, set session variables
          session_start();
          $_SESSION["username"] = $username;
          $stmt->close();  // Close the statement
          header("Location: welcome.php"); // Redirect to a welcome page
          exit();
        } else {
          $error_message = "Invalid username or password.";
        }
      } else {
        $error_message = "Error executing query.";
      }
    } else {
      $error_message = "Error preparing query.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" <?php if (isset($error_message) && $error_message == "Username and password cannot be empty.") { echo "required"; } ?>><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";  // Use prepared statements for security

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      //  Store user data (e.g., session variables)
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];

      // You might redirect the user here:
      // header("Location: welcome.php");
      // exit();

      return true; // Login successful
    } else {
      return false; // User not found
    }

  } else {
    // Handle query errors
    echo "Query error: " . $conn->error;
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}



// --- Example Usage (Demonstration) ---

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security) -  Add more validation as needed
  if (empty($username) || empty($password)) {
    echo "<p style='color: red;'>Username and password cannot be empty.</p>";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      echo "<p style='color: green;'>Login successful!</p>";
      // Redirect to a welcome page or display a welcome message
      // header("Location: welcome.php");
      // exit();
    } else {
      echo "<p style='color: red;'>Invalid username or password.</p>";
    }
  }
}


?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the inputs (Basic example - enhance this for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match("/^[a-zA-Z0-9]+$/", $username)) {
    $error = "Invalid username.  Please enter a valid email or alphanumeric username.";
  } else {
    // SQL query to check the credentials
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($db_host, $query);

    if (mysqli_num_rows($result) > 0) {
      // User found, verify the password
      $row = mysqli_fetch_assoc($result);
      if (password_verify($password, $row["password"])) {
        // Password matches, login successful
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        // Redirect to a welcome page or desired location
        header("Location: welcome.php"); // Replace with your welcome page URL
        exit(); // Stop further execution
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="your_email@example.com" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>
</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database_name';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security - see explanation below)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // Hash the password (BEST PRACTICE - DO NOT STORE PLAINTEXT PASSWORDS!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $pdo = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_password);

    try {
      $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");
      $stmt->execute([$username]);
      $user = $stmt->fetch(PDO::FETCH_ASSOC);

      if ($user) {
        // Password verification
        if (password_verify($password, $user["password"])) {
          // Login successful
          session_start();
          $_SESSION["user_id"] = $user["id"];
          $_SESSION["username"] = $username;
          header("Location: welcome.php"); // Redirect to a welcome page
          exit();
        } else {
          $error_message = "Incorrect password.";
        }
      } else {
        $error_message = "Username not found.";
      }
    } catch (PDOException $e) {
      $error_message = "Database error: " . $e->getMessage();
    }
  }
} else {
  // If the form hasn't been submitted, clear any previous errors
  $error_message = "";
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
// Similar database connection (replace with your details)
$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database_name';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);
    $confirm_password = trim($_POST["confirm_password"]);

    if (empty($username) || empty($password) || empty($confirm_password)) {
        $error_message = "All fields are required.";
    } elseif ($password != $confirm_password) {
        $error_message = "Passwords do not match.";
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        try {
            $pdo = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_password);

            $stmt = $pdo->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
            $stmt->execute([$username, $hashed_password]);

            $error_message = "Registration successful.  Please check your email for verification instructions."; // Good practice to send verification email here

        } catch (PDOException $e) {
            $error_message = "Database error: " . $e->getMessage();
        }
    }
} else {
    $error_message = "";
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Register</title>
</head>
<body>

  <h1>Register</h1>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    Confirm Password: <input type="password" name="confirm_password">
    <button type="submit">Register</button>
  </form>

  <a href="login.php">Already have an account? Login here.</a>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Form data
$username = $_POST['username'];
$password = $_POST['password'];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// Prepare the SQL statement
$sql = "SELECT * FROM users WHERE username = ? AND password = ?";

// Bind parameters
$stmt = $conn->prepare($sql);
$stmt->bind_param("ss", $username, $password);

// Execute the statement
if ($stmt->execute()) {
  $result = $stmt->get_result();

  if ($result->num_rows == 1) {
    // User found - Fetch the user data
    $user = $result->fetch_assoc();
    // Set session variables
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Redirect to a protected page (e.g., dashboard)
    header("Location: dashboard.php");
    exit();  // Important to stop further script execution
  } else {
    // User not found
    echo "Invalid username or password.";
  }
} else {
  // Something went wrong with the query
  echo "Query error: " . $conn->error;
}

// Close the statement and connection
$stmt->close();
$conn->close();

?>


<?php

// Database configuration (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to check user credentials
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, retrieve user data
      $user = $result->fetch_assoc();
      // Set session variables
      $_SESSION['username'] = $user['username'];
      $_SESSION['user_id'] = $user['id']; // Assuming you have an 'id' column
      return true;
    } else {
      return false; // User not found
    }
  } else {
    // Error executing query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (for demonstration - handle this in your actual web form)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a secure page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your secure page URL
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data (from the login form)
$username = $_POST['username'];
$password = $_POST['password'];

// Create connection
$conn = new mysqli($servername, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to check credentials
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User exists, set session variables and redirect
    session_start(); // Start the session (important!)

    // Get user data
    $user_data = $result->fetch_assoc();

    // Store user data in session (for easier access)
    $_SESSION['user_id'] = $user_data['user_id'];
    $_SESSION['username'] = $user_data['username'];

    // Redirect to a protected page (e.g., home page)
    header("Location: home.php"); // Replace 'home.php' with your protected page
    exit(); // Crucial: Exit the script after redirecting
} else {
    // User doesn't exist
    echo "Invalid username or password.";
}

$conn->close();

?>


<?php
session_start(); // Start the session to manage user logins

/**
 * Handles user login.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // **Important:  This is a VERY basic example for demonstration.  Never use this in a production environment!**
  // **Security Considerations:**  This example is extremely vulnerable to attacks.
  //  - It does not properly hash or salt passwords.
  //  - It's easy to brute-force.
  //  - It doesn't use any input validation.

  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'secure_password'
  ];

  // Basic username check
  if (isset($validUsers[$username])) {
    // Basic password check (VERY INSECURE)
    if ($validUsers[$username] === $password) {
      // Login successful
      $_SESSION['username'] = $username; // Store the username in the session
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // Username not found
    return false;
  }
}

// --- Example Usage (in your PHP script - e.g., index.php) ---

// Check if the user is already logged in
if (isset($_POST['login'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - redirect to a different page, show a success message, etc.
    echo '<p>Login successful! You are now logged in as ' . htmlspecialchars($username) . '</p>';
    header('Location: user_dashboard.php'); // Redirect to a protected page
    exit(); // Important to stop further script execution
  } else {
    // Login failed
    echo '<p style="color: red;">Invalid username or password.</p>';
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="login.php">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc(); // Fetch the user data as an associative array

    // Verify the password
    if (password_verify($password, $user['password'])) {
      // Password is correct, login successful
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];

      return true; // Login successful
    } else {
      // Password mismatch
      return false; // Login failed
    }
  } else {
    // User not found
    return false; // Login failed
  }

  // If any of the above steps fail, disconnect
  $conn->close();
  return false;
}


// --- Example Usage (for testing) ---
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the loginUser function
  if (loginUser($username, $password)) {
    // Login successful, redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login functionality, including:
 * - Checking username and password against a database.
 * - Setting session variables for successful login.
 * - Returning true for successful login, false for failure.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) : bool
{
    // Database connection details - REPLACE WITH YOUR ACTUAL VALUES
    $dbHost = 'localhost';
    $dbName = 'your_database_name';
    $dbUser = 'your_database_user';
    $dbPass = 'your_database_password';


    // Connect to the database
    $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);

    // Check connection
    if ($conn->connect_error) {
        // Handle connection error - Log the error or display a user-friendly message
        error_log("Failed to connect to database: " . $conn->connect_error);
        return false;
    }


    // SQL Query - Adjust this query based on your database schema
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

    // Prepare the statement (using prepared statements is crucial for security)
    $stmt = $conn->prepare($sql);

    if ($stmt === false) {
        // Handle statement preparation error - Log the error or display a user-friendly message
        error_log("Error preparing statement: " . $conn->error);
        return false;
    }

    // Bind parameters
    $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters

    // Execute the statement
    if (!$stmt->execute()) {
        // Handle execution error - Log the error or display a user-friendly message
        error_log("Error executing statement: " . $stmt->error);
        return false;
    }


    // Get the result
    $result = $stmt->get_result();

    if ($result === false) {
       error_log("Error getting result: " . $stmt->error);
       return false;
    }

    // Check if any rows were returned
    if ($result->num_rows > 0) {
        // User found - Set session variables
        $row = $result->fetch_assoc();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        // You might want to add other user data to the session, like roles, etc.

        // Close the statement and connection
        $stmt->close();
        $conn->close();
        return true;
    } else {
        // User not found
        $stmt->close();
        $conn->close();
        return false;
    }
}



// Example Usage (Illustrative - Replace with your form handling)
// You'll typically get username and password from a form.

// $username = $_POST['username'];
// $password = $_POST['password'];

// if (loginUser($username, $password)) {
//     echo "Login successful!  Redirecting...";
//     header("Location: /dashboard.php"); // Replace with your dashboard URL
//     exit;
// } else {
//     echo "Invalid username or password.";
// }

?>


<?php

// Database credentials (replace with your actual credentials)
$username = "your_username";
$password = "your_password";
$db_host = "localhost";
$db_name = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error_message = "Invalid username. Please enter a valid email address.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $username, $password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $password); // "ss" for two strings
    $stmt->execute();
    $result = $stmt->get_result();

    // Check if the user exists
    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      // User found, set session variables
      session_start();
      $_SESSION["username"] = $username;
      $user_id = $result->fetch_assoc()["id"]; //Get user id.
      $_SESSION["user_id"] = $user_id;
      $error_message = "Login successful!";
      //Redirect to a protected page
      header("Location: /protected_page.php"); //Replace with your protected page URL
      exit();
    }

    $stmt->close();
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="email" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Replace with your register page -->

</body>
</html>


<?php
// Example of securely hashing the password
$password = $_POST["password"];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// Store $hashed_password in the 'password' column of the 'users' table.
// NEVER store passwords in plain text!
?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password hash
  $sql = "SELECT password_hash, user_id FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $hashed_password = $row['password_hash'];
    $user_id = $row['user_id'];

    // Verify the password
    if (password_verify($password, $hashed_password)) {
      // Authentication successful
      $_SESSION['user_id'] = $user_id; // Store user ID in session
      return true; // Indicate successful login
    } else {
      // Authentication failed
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}


// Example usage (Demonstration - do not use in a production environment like this)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful
    echo "Login successful!  Redirecting...";
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (basic validation - improve as needed)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Database query
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query
        $sql = "SELECT id, username, password FROM users WHERE username = '$username' AND password = '$password'";

        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // User found, set session variables
            session_start();
            $_SESSION["username"] = $username; // Store username in session
            // Optionally store other user data in the session

            // Redirect to a secure page or display a success message
            header("Location: welcome.php"); // Replace welcome.php with your desired redirect
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h2>User Login</h2>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" <?php if (isset($username)) echo "value=\"$username\""; ?> >
        <br><br>
        Password: <input type="password" name="password" <?php if (isset($password)) echo "value=\"$password\""; ?> >
        <br><br>
        <button type="submit">Login</button>
    </form>

    <br><br>
    <a href="register.php">Don't have an account? Register here.</a> <!-- Link to registration page -->

</body>
</html>


     <?php
     // Database connection details (replace with your actual credentials)
     $host = "localhost";
     $username = "your_db_username";
     $password = "your_db_password";
     $database = "your_db_name";

     // Check if the form has been submitted
     if ($_SERVER["REQUEST_METHOD"] == "POST") {
         // Get the username and password from the form
         $username = $_POST["username"];
         $password = $_POST["password"];

         // Validate the input (basic validation - improve as needed)
         if (empty($username) || empty($password)) {
             $error = "Username and password cannot be empty.";
         } else {
             // Database query - Use prepared statements
             $conn = new mysqli($host, $username, $password, $database);

             if ($conn->connect_error) {
                 die("Connection failed: " . $conn->connect_error);
             }

             // Prepare the statement
             $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ? AND password = ?");

             // Bind the parameters
             $stmt->bind_param("ss", $username, $password); // "ss" means two strings

             // Execute the statement
             $stmt->execute();

             $result = $stmt->get_result();

             if ($result->num_rows > 0) {
                 // User found, set session variables
                 session_start();
                 $_SESSION["username"] = $username;

                 // Redirect to a secure page or display a success message
                 header("Location: welcome.php");
                 exit();
             } else {
                 $error = "Invalid username or password.";
             }
         }
     }
     ?>
     

     - `prepare()`:  Prepares the SQL statement, separating the query structure from the data.
     - `bind_param()`:  Binds the variables to the prepared statement, using the correct data types ("s" for string, "i" for integer, etc.).  This prevents SQL injection.
     - `execute()`: Executes the prepared statement with the bound parameters.
     - `get_result()`: Retrieves the result set from the prepared statement.
     - This approach is *much* more secure than directly embedding user input into the SQL query string.

   - **Password Hashing:**  *Never* store passwords in plain text in your database.  Instead, you *must* hash them using a strong hashing algorithm (like bcrypt or Argon2) *before* storing them.  This is crucial for security.

   - **HTTPS:**  Always use HTTPS to encrypt the connection between the user's browser and your server, protecting usernames and passwords in transit.

   - **Rate Limiting:** Implement rate limiting to prevent brute-force attacks.

   - **Regular Security Audits:** Regularly review your code and security practices.

**File Structure (Suggested):**



<?php

/**
 * User Login Function
 *
 * This function handles user login based on provided credentials.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false  The user ID if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // **Database Connection (Replace with your actual connection details)**
  // This is a placeholder.  You *must* replace this with your database connection.
  $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');

  // **Authentication Logic**
  //  This is where you'd perform the actual authentication.
  //  This example uses a hardcoded user and password for demonstration only.
  //  You should *never* do this in a real application.  Use a secure hashing method.

  $hashedPassword = "hashed_password_here"; //Replace with the hashed password from your database.  This is just a placeholder.

  if ($username == 'admin' && $password == 'password') {
    // Login successful!
    $stmt = $db->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
      // Store the user's session ID
      session_start(); // Make sure session is started!
      $_SESSION['userId'] = $user['id'];
      return $user['id'];
    } else {
      return false; // User not found
    }
  } else {
    return false; // Invalid credentials
  }
}

// **Example Usage (for testing)**
//This code is just to demonstrate how to use the function
// in a test environment or during development.

// Simulate a login attempt
$username = 'testuser';
$password = 'testpassword';

$userId = loginUser($username, $password);

if ($userId) {
  echo "Login successful! User ID: " . $userId . "<br>";
  // Redirect to a protected page or perform other actions here.
  // For example:
  // header("Location: protected_page.php");
  // exit();

} else {
  echo "Login failed.  Invalid username or password.<br>";
}

?>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } elseif (filter_var($username, FILTER_VALIDATE_EMAIL) === false) {
        $error_message = "Invalid email address.";
    } else {
        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check the credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            // User found!  Set session variables.  This is crucial.
            session_start(); // Start the session
            $_SESSION["username"] = $username; // Store the username in the session
            header("Location: welcome.php"); // Redirect to a welcome page
            exit(); // Stop further script execution
        } else {
            $error_message = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h1>User Login</h1>

<?php
if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? $username : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? $password : ''; ?>">
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials - **IMPORTANT:  Change these to your actual values!**
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $errors = ["Username and Password fields cannot be empty."];
  } elseif (!preg_match("/^[a-zA-Z0-9._-]+$/", $username)) {
    $errors = ["Username must contain only letters, numbers, periods, underscores, and hyphens."];
  } elseif (!preg_match("/^[a-zA-Z0-9]{8,}$/", $password)) {
    $errors = ["Password must be at least 8 characters long and contain only letters and numbers."];
  } else {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind the parameters
    $stmt->bind_param("s", $username, $password);

    // Execute the statement
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if a user was found
    if ($result->num_rows == 1) {
      // User found, set session variables
      session_start();
      $_SESSION["username"] = $username;  // Store username in session
      $_SESSION["user_id"] = $result->fetch_assoc()["id"]; // Assuming you have an 'id' column in your users table.  Adjust if different.

      // Redirect to a protected page
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit();
    } else {
      $error = ["Invalid username or password."];
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
  <style>
    .error {
      color: red;
    }
  </style>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" placeholder="Enter your username" value="<?php if (isset($username)) echo htmlspecialchars($username); ?>">
    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" placeholder="Enter your password">
    <br><br>

    <button type="submit">Login</button>
  </form>

  <?php
  if (isset($errors)) {
    echo "<div class='error'>";
    foreach ($errors as $error) {
      echo $error . "<br>";
    }
    echo "</div>";
  }
  ?>

</body>
</html>


<?php

// Database credentials (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

/**
 * Logs in a user based on username and password.
 *
 * @param string $username The username to log in with.
 * @param string $password The password to log in with.
 * @return int|false The user ID if login is successful, false otherwise.
 */
function loginUser($username, $password)
{
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check the connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $query = "SELECT id FROM users WHERE username = ? AND password = ? ";
    $stmt = $conn->prepare($query);

    if ($stmt === false) {
        die("Error preparing statement: " . $conn->error);
    }

    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if (!$stmt->execute()) {
        die("Query failed: " . $stmt->error);
    }

    // Get the result
    $result = $stmt->get_result();

    // Check if a user was found
    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        $userId = $user['id'];
        $stmt->close();  // Close the statement
        $conn->close(); // Close the connection
        return $userId;
    } else {
        $stmt->close();
        $conn->close();
        return false;
    }
}

// Example Usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (basic example, you should implement more robust validation)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        $userId = loginUser($username, $password);
        if ($userId) {
            echo "Login successful! User ID: " . $userId;
            // Redirect to a secure page or set a session variable
            // For example:
            // session_start();
            // $_SESSION['user_id'] = $userId;
            // header("Location: secure_page.php");
            // exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    } ?>

    <form method="post" action="">
        Username: <input type="text" name="username" value="<?php if (isset($username)) echo $username; ?>"><br><br>
        Password: <input type="password" name="password" value="<?php if (isset($password)) echo $password; ?>"><br><br>
        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format.";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL query
        $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

        // Use prepared statement to prevent SQL injection
        $stmt = $conn->prepare($sql);

        if ($stmt) {
            $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found, set session variables
                session_start();
                $user_data = $result->fetch_assoc();
                $_SESSION["user_id"] = $user_data["id"];
                $_SESSION["username"] = $user_data["username"];
                // You could also store other user data here if needed
                echo "Login successful! <a href='welcome.php'>Welcome, " . $_SESSION["username"] . "</a>";
                $stmt->close();
            } else {
                $error = "Invalid username or password.";
            }
        } else {
            $error = "Error preparing statement.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" placeholder="your_email@example.com" required>
        Password: <input type="password" name="password" required>
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>
</body>
</html>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Database connection
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found, set session variables to keep them logged in
    session_start(); // Important: Start the session
    $_SESSION["username"] = $username;  // Store the username in the session
    // Optionally, store other user data in the session too
    // $_SESSION["user_id"] = $row["user_id"];

    // Redirect the user to a protected page
    header("Location: protected_page.php"); // Replace with your protected page URL
    exit(); // Important: Stop further script execution
  } else {
    // User not found
    echo "Invalid username or password.";
  }

  // Close the database connection
  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify password (using password_verify for security)
    if (password_verify($password, $row['password'])) {
      // Login successful - Set session variables
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true; // Indicate successful login
    } else {
      return false; // Indicate incorrect password
    }
  } else {
    return false; // Indicate user not found
  }

  $conn->close();
}


// Example usage (Demonstration - not a complete form)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (!filter_var($username, FILTER_SANITIZE_STRING)) {
    $error = "Invalid username.  Please use alphanumeric characters.";
  } elseif (!filter_var($password, FILTER_SANITIZE_STRING)) {
    $error = "Invalid password. Please use alphanumeric characters.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query to check credentials
      $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
      $result = $conn->query($sql);

      if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // Verify password (using password_hash or similar)
        if (password_verify($password, $row["password"])) {
          // Login successful!
          session_start();
          $_SESSION["user_id"] = $row["id"];
          $_SESSION["username"] = $row["username"];
          $error = "Login successful!";  // Optional: Redirect or display success message
          header("Location: welcome.php");  // Redirect to a welcome page
          exit();
        } else {
          $error = "Incorrect password.";
        }
      } else {
        $error = "Incorrect username.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
  <style>
    .error {
      color: red;
    }
  </style>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p class="error"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user data
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $user_data = $result->fetch_assoc();
    $hashed_password = $user_data['password']; // Get the stored password

    // Verify the password
    if (password_verify($password, $hashed_password)) {
      // Authentication successful
      $_SESSION['user_id'] = $user_data['id'];
      $_SESSION['username'] = $user_data['username'];
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // If we reach here, something went wrong (e.g., connection issue)
  $conn->close();
  return false;
}

// Example Usage (in your login form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Successful login - redirect to a protected page, etc.
    header("Location: /protected_page.php"); // Replace with your desired redirect URL
    exit();
  } else {
    // Login failed - display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Configuration (Replace with your actual database details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the form data
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Sanitize the input (important for security!)
  $username = filter_var($username, FILTER_SANITIZE_STRING);
  $password = filter_var($password, FILTER_SANITIZE_STRING);

  // Validate the input (basic example - you should add more robust validation)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL Query -  **IMPORTANT:  Use prepared statements to prevent SQL injection!**
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the statement
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found - Set session variables
        session_start();
        $row = $result->fetch_assoc();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];

        // Redirect to a secure page (e.g., dashboard)
        header("Location: dashboard.php");
        exit(); // Stop further execution
      } else {
        $error_message = "Invalid username or password.";
      }
    } else {
      $error_message = "Error executing query.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual details)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { // Example: Validate email format
        $error = "Invalid username (please enter a valid email)";
    } else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Query to check username and password
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            // User found, set session variables
            session_start();
            $_SESSION["username"] = $username;
            echo "Login successful!  Redirecting...";
            // Redirect to a protected page or the homepage
            header("Location: protected_page.php"); // Replace with your protected page
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

    <br>
    <a href="register.php">Don't have an account? Register here.</a>
</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Login Form Handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate Input (Important for security)
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password cannot be empty.";
    } else {
        // Query to Check User Credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = mysqli_query($db_host, $sql);

        if (mysqli_num_rows($result) > 0) {
            // User found, set session variables
            $_SESSION["username"] = $username;
            $redirect_url = "welcome.php"; // Or your desired page after login
            header("Location: $redirect_url");
            exit(); // Stop further script execution
        } else {
            $error_message = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    } ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">
        <br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>

        <button type="submit">Login</button>
    </form>

    <br>
    <a href="register.php">Don't have an account? Register here.</a>
</body>
</html>


   // During registration:
   $password = $_POST["password"];
   $hashed_password = password_hash($password, PASSWORD_DEFAULT);
   $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
   

* **Prepared Statements:**  For even better security, use prepared statements (using `mysqli_prepare()` and `mysqli_stmt_execute()`) to prevent SQL injection attacks.  This is especially important if you're taking user input and inserting it into a query.

* **Session Management:**  This example uses sessions to keep the user logged in. Ensure that your session handling is properly configured and that sessions are destroyed when the user logs out.  Consider using `session_start()` at the beginning of your script.

* **CSRF Protection:** Implement CSRF (Cross-Site Request Forgery) protection to prevent malicious websites from submitting forms on behalf of a logged-in user.

* **Rate Limiting:**  Implement rate limiting to prevent brute-force attacks.

* **HTTPS:**  Always use HTTPS to encrypt all traffic between the user's browser and your server.

**How to Use:**

1. **Create a Database:** Create a MySQL database and a `users` table with at least `username` and `password` columns.
2. **Database Credentials:** Replace the placeholder values for `$db_host`, `$db_name`, `$db_user`, and `$db_password` with your actual database credentials.
3. **Create `register.php`:** Create a file named `register.php` to handle user registration. This will include form fields for username and password, and will insert the user's data into the `users` table.
4. **Save the Login Script:** Save the login script (the code above) as a `.php` file (e.g., `login.php`).
5. **Run the Login Script:** Access the login script in your web browser (e.g., `http://localhost/login.php`).

**Example `register.php` (Basic):**



<?php

// Database credentials - IMPORTANT: Replace with your actual credentials!
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";


// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query - Using prepared statements for security
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind parameters to the SQL query - IMPORTANT for security
  $stmt->bind_param("ss", $username, $password);

  // Execute the query
  if (!$stmt->execute()) {
    die("Error executing query: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Successful login
    $_SESSION['user_id'] = $row['id']; // Store user ID in session
    $_SESSION['username'] = $username;
    return true;
  } else {
    // Login failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage:

// Check if the user is already logged in
if (isset($_SESSION['user_id'])) {
  echo "Welcome, " . $_SESSION['username'] . "!";
} else {
  // Check if the form has been submitted
  if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate input (VERY IMPORTANT - Add more validation here)
    if (empty($username) || empty($password)) {
      echo "Username and password cannot be empty.";
    } else {
      // Attempt to login
      if (loginUser($username, $password)) {
        echo "Login successful!";
        // Redirect to a protected page, or display a welcome message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
      } else {
        echo "Invalid username or password.";
      }
    }
  } else {
    // Display the login form
    echo "<h2>Login</h2>";
    echo "<form method='post'>";
    echo "<label for='username'>Username:</label><br>";
    echo "<input type='text' id='username' name='username'><br>";
    echo "<label for='password'>Password:</label><br>";
    echo "<input type='password' id='password' name='password'><br>";
    echo "<button type='submit'>Login</button>";
    echo "</form>";
  }
}

?>


<?php

// Database connection details (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("ss", $username, $password); // 's' denotes string

    // Execute the statement
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // User found, set session variables
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        return true; // Login successful
      } else {
        return false; // User not found
      }
    } else {
      return false; // Execute failed
    }
  } else {
    return false; // Prepare failed
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
  return false;
}

// Example usage:
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a protected page or display a welcome message
    echo "<h1>Welcome, " . $_SESSION['username'] . "</h1>";
    // Redirect if needed
    // header("Location: protected_page.php");
    // exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="login_username" required><br><br>
    Password: <input type="password" name="login_password" required><br><br>
    <input type="submit" name="login_submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the login form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any rows
  if ($result->num_rows > 0) {
    // User found, set a session variable to indicate login
    $_SESSION["username"] = $username;
    echo "Login successful!  You are now logged in as " . $username;
    // Redirect to a secure page or home page
    header("Location: /home.php"); // Replace /home.php with your login success page
    exit();

  } else {
    echo "Incorrect username or password.";
  }

  $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the login form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL statement
  $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" means two string parameters

  // Execute the statement
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if the query returned any rows
  if ($result->num_rows > 0) {
    // User found, set a session variable
    $_SESSION["username"] = $username;
    echo "Login successful!  You are now logged in as " . $username;
    header("Location: /home.php");
    exit();

  } else {
    echo "Incorrect username or password.";
  }

  $stmt->close();
  $conn->close();
}
?>


<?php

// Database connection details (replace with your actual values)
$servername = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$dbname = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password are required.";
  } else {
    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // User found, check the password
      $row = $result->fetch_assoc();
      if (password_verify($password, $row["password"])) {
        // Password is correct, set session variables
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        echo "Login successful!";
        // Redirect to a secure page or home page
        header("Location: /protected_page.php"); //  Change to your protected page's URL
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <?php
  if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
  ?>

  <form action="" method="post">
    Username: <input type="text" name="username">
    <br><br>
    Password: <input type="password" name="password">
    <br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration
$db_host = 'localhost';
$db_user = 'your_db_user';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { // Example: Email validation
    $error = "Invalid username (Please enter a valid email address).";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $sql = "SELECT * FROM users WHERE email = '$username'"; // Use email for security
    $result = $conn->query($sql);

    // Check if the query executed successfully
    if ($result->num_rows > 0) {
      // User found
      $row = $result->fetch_assoc();

      // Verify password
      if (password_verify($password, $row['password'])) {
        // Login successful
        // Set session variables to track the user
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['email']; // Or username if you use it
        
        // Redirect to a welcome page or another area
        header("Location: welcome.php");
        exit();
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check the username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  //IMPORTANT: Escape user input properly.  Consider prepared statements for production.

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, fetch the user data
    $user = $result->fetch_assoc();
    // Set session variables to store user information
    $_SESSION['user_id'] = $user['id']; // Assuming you have an 'id' column in your users table
    $_SESSION['username'] = $user['username'];
    // You can also fetch other user details here, like email, etc.

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example usage (Illustrative - Not a complete form handler)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = mysqli_real_escape_string($conn, $_POST['username']); // IMPORTANT: Escape user input
  $password = mysqli_real_escape_string($conn, $_POST['password']);  // IMPORTANT: Escape user input

  if (loginUser($username, $password)) {
    // Redirect to a protected page, or display a welcome message
    header("Location: protected_page.php"); // Example: Redirect to a protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query to authenticate the user
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = $conn->query($sql);

      if ($result->num_rows == 1) {
        // User found - set session variables to keep user logged in
        $row = $result->fetch_assoc();
        $_SESSION["user_id"] = $row["id"]; // Assuming 'id' is the user ID column
        $_SESSION["username"] = $username;

        // Redirect to a protected page
        header("Location: protected_page.php"); // Replace with your protected page
        exit(); // Important to prevent further execution
      } else {
        $error_message = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic example - improve for production)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to select the user
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    // Check if a user was found
    if ($result->num_rows > 0) {
      // User found - set session variables for authentication
      session_start();
      $_SESSION["username"] = $username;
      $_SESSION["user_id"] = $result->fetch_assoc()["id"]; // Assuming your users table has an 'id' column

      // Redirect to a secure area or home page
      header("Location: secure_page.php"); // Replace with your secure page
      exit();
    } else {
      $error_message = "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="login.php">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form handling -  This is crucial to prevent vulnerabilities!
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Sanitize input -  VERY IMPORTANT to prevent SQL injection
  $username = filter_input(INPUT_POST, "username", FILTER_SANITIZE_STRING);
  $password = filter_input(INPUT_POST, "password", FILTER_SANITIZE_STRING);

  // Validate input -  Important for security and good user experience
  if (empty($username) || empty($password)) {
    $error = "Username and password are required.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) { //  Check if the username is a valid email format (you can adjust this)
    $error = "Invalid username (must be a valid email address).";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Query -  Use prepared statements to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username); // "s" indicates a string, assuming username is a string
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    } else {
      $user = $result->fetch_assoc();
      $id = $user['id'];
      $hashed_password = $user['password']; // Store the hashed password securely

      // Password verification -  HASHED comparison
      if (password_verify($password, $hashed_password)) {
        // Login successful -  Set session variables
        session_start();
        $_SESSION["user_id"] = $id;
        $_SESSION["username"] = $username;
        header("Location: /welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="/register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the password hash
  $sql = "SELECT password_hash, salt FROM users WHERE username = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameter
  $stmt->bind_param("s", $username);

  // Execute the statement
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows == 0) {
    return false; // User not found
  }

  $user = $result->fetch_assoc();

  // Verify the password
  if (password_verify($password, $user['password_hash'])) {
    // Password matches, authenticate the user
    // You can now set a session, redirect, or perform other actions
    // Here, we simply return true
    return true;
  } else {
    // Password does not match
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// --- Example Usage (Illustrative - Not for Production) ---

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important - Add more robust validation here!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Attempt to log in
    $login_result = loginUser($username, $password);

    if ($login_result) {
      // Login successful, redirect to a protected page or set a session
      echo "Login successful!  Redirecting...";
      // You might redirect here:
      // header("Location: /protected_page.php"); // Example
      // exit;
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="">
    Username: <input type="text" name="username" value="<?php if (isset($username)) echo $username; ?>">
    <br><br>
    Password: <input type="password" name="password">
    <br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input (Important for security)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error_message = "Invalid username. Please enter a valid email address.";
    } else {
        // Database connection
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL Query (Replace with your actual table and column names)
        $sql = "SELECT * FROM users WHERE email = '$username'"; // Assuming email is the username
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // User found, verify password
            $row = $result->fetch_assoc();
            if (password_verify($password, $row["password"])) {
                // Password correct, login successful
                $_SESSION["user_id"] = $row["id"]; // Store user ID in session
                $_SESSION["username"] = $row["email"]; // Store username in session
                header("Location: welcome.php"); // Redirect to a welcome page
                exit();
            } else {
                $error_message = "Incorrect password.";
            }
        } else {
            $error_message = "User not found.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="email" name="username" required>
        <br><br>
        Password: <input type="password" name="password" required>
        <br><br>
        <button type="submit">Login</button>
    </form>

    <br><br>
    <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database connection details (replace with your actual details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format for username.";
  } else {
    // Database query
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = '" . $conn->real_escape_string($username) . "' AND password = '" . $conn->real_escape_string($password) . "'";

    // Execute the query
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    } else {
      // If the query is successful, set a session variable
      session_start();
      $_SESSION["username"] = $username;
      $error = "Login successful!";
      // Redirect to a secure page (e.g., dashboard)
      header("Location: dashboard.php");  // Replace dashboard.php with your secure page
      exit();
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
session_start();

// Database credentials (replace with your actual credentials)
$username = "your_username";
$password = "your_password";
$db_host = "localhost";
$db_name = "your_database_name";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the username and password from the form
    $user_username = $_POST["username"];
    $user_password = $_POST["password"];

    // Validate input (important for security)
    if (empty($user_username) || empty($user_password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Hash the password (essential for security)
        $hashed_password = password_hash($user_password, PASSWORD_DEFAULT);

        // Query the database
        $conn = new mysqli($db_host, $username, $password, $db_name);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL Query
        $sql = "SELECT id, username, password FROM users WHERE username = '$user_username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();

            // Compare the hashed password with the submitted password
            if (password_verify($user_password, $row["password"])) {
                // Login successful
                $_SESSION["user_id"] = $row["id"];
                $_SESSION["username"] = $row["username"];
                echo "Login successful!";
                header("Location: welcome.php"); // Redirect to a welcome page
                exit();
            } else {
                $error_message = "Incorrect password.";
            }
        } else {
            $error_message = "Username not found.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    $stmt->bind_param("s", $username, $password); // "s" indicates a string
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      //  You could add more checks here, like validating user roles.

      // Set session variables for the logged-in user
      $_SESSION['user_id'] = $row['id'];  // Assuming 'id' is the primary key
      $_SESSION['username'] = $username;
      return true; // Login successful
    } else {
      return false; // Login failed (incorrect username or password)
    }
    $stmt->close();
  } else {
    return false; // Failed to prepare the statement
  }
}

// Example Usage (for testing)
// This should be called from a form submission.  Don't do this directly in the code.
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to a protected page or display a welcome message
    header("Location: protected_page.php");
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password must be filled.";
  } else {
    // Hash the password (Strongly recommended!)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);

      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Login successful!
        // Set session variables to maintain the user's login status
        session_start();
        $_SESSION["username"] = $username;
        $_SESSION["user_id"] = $row["id"]; // Or any other unique identifier
        
        // Redirect the user to a welcome page or the main page
        header("Location: welcome.php");
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Username not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (important for security - never trust user input!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!preg_match("/^[a-zA-Z0-9_]+$/", $username)) {
    $error_message = "Username must contain only letters, numbers, and underscores.";
  } elseif (!preg_match("/^[a-zA-Z0-9]+$/", $password)) {
    $error_message = "Password must contain only letters and numbers.";
  } else {
    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      // Login successful - set a session variable
      session_start();
      $_SESSION["username"] = $username;
      $error_message = "Login successful!";
      // Redirect to a secure page (e.g., the homepage)
      header("Location: home.php"); // Replace 'home.php' with your secure page
      exit;
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password must be filled.";
  } elseif (
    $username == "admin" && $password == "password" // Example: Hardcoded credentials - **DO NOT USE THIS IN PRODUCTION!**
  ) {
    // Successful login
    session_start();
    $_SESSION["username"] = $username;
    header("Location: welcome.php"); // Redirect to a welcome page
    exit(); // Stop further execution
  } else {
    // Incorrect credentials
    $error_message = "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL Query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Password is correct, set session variables
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true; // Login successful
    } else {
      // Password mismatch
      return false;
    }
  } else {
    // User not found
    return false;
  }

  $conn->close(); // Close the connection
}

// Example usage (Handle form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to the welcome page or desired location
    header("Location: welcome.php"); // Replace welcome.php with your welcome page
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php
session_start();

// Database credentials - **IMPORTANT:  Never store these directly in your code.**
// Use environment variables or a configuration file.
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

/**
 * Logs in a user based on their credentials.
 *
 * @param string $username The username to log in.
 * @param string $password The password for the user.
 * @return bool True if login was successful, false otherwise.
 */
function loginUser(string $username, string $password)
{
    global $db_host, $db_name, $db_user, $db_password;

    // Attempt to connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check the connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?;";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

    // Execute the statement
    if ($stmt->execute() === TRUE) {
        $result = $stmt->get_result();
        if ($result->num_rows > 0) {
            $user_data = $result->fetch_assoc();
            // Set session variables for the logged-in user
            $_SESSION["user_id"] = $user_data["id"];
            $_SESSION["username"] = $user_data["username"];

            return true;
        } else {
            return false; // User not found
        }
    } else {
        return false; // SQL error
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}


/**
 * Handles the login form submission.
 */
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Login successful, redirect to a protected page or display a success message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit();
    } else {
        // Login failed, display an error message
        echo "<p style='color: red;'>Invalid username or password.</p>";
    }
}

// Example Login Form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php
session_start(); // Start the session to track user login status

/**
 * Handles user login functionality.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password)
{
    // Database connection details (Replace with your actual credentials)
    $dbHost = "localhost";
    $dbUsername = "your_db_username";
    $dbPassword = "your_db_password";
    $dbName = "your_db_name";

    // Check if credentials are valid
    $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to retrieve user information
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Successful login
            $_SESSION['username'] = $username;  // Store username in session
            $_SESSION['user_id'] = $row['id']; // Also store user ID (recommended)
            return true;
        } else {
            return false; // Incorrect password
        }
    } else {
        return false; // User not found
    }

    $conn->close();
}

/**
 * Handles user logout functionality.
 */
function logoutUser() {
    unset($_SESSION['username']);
    unset($_SESSION['user_id']);
    session_destroy();
}

// Example Usage (Demonstration)

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Call the loginUser function
    if (loginUser($username, $password)) {
        // Login successful
        echo "Login successful! You are now logged in.";
        // Redirect to a protected page, or display a welcome message.
        // For example:
        // header("Location: protected_page.php");
        // exit;
    } else {
        echo "Invalid username or password.";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

    <br>
    <a href="logout.php">Logout</a>  <!-- Link to logout.php -->
</body>
</html>


<?php
session_start();

// Destroy the session
session_destroy();

// Redirect to the login page (or homepage)
header("Location: login.php");
exit;
?>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

/**
 * Logs in a user based on their username and password.
 *
 * @param string $username The username.
 * @param string $password The password.
 * @return int|false The user ID if login is successful, or false if login fails.
 */
function loginUser(string $username, string $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username FROM users WHERE username = ? AND password = ?";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    if ($stmt === false) {
        die("Error preparing statement: " . $conn->error);
    }

    // Bind parameters
    $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

    // Execute the statement
    if (!$stmt->execute()) {
        $errorInfo = $stmt->errorInfo();
        die("Error executing query: " . $errorInfo[2]);
    }

    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        return $userId;
    } else {
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (empty($username) || empty($password)) {
        echo "Username and password cannot be empty.";
    } else {
        $userId = loginUser($username, $password);

        if ($userId) {
            echo "Login successful! User ID: " . $userId;
            // You can redirect the user to a different page or perform other actions here.
            // Example: header("Location: welcome.php?userId=" . $userId); // Redirect to a welcome page
        } else {
            echo "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the login details from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to retrieve the user's password
    $sql = "SELECT password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "<p style='color: red;'>Invalid username or password.</p>";
    } else {
        $row = $result->fetch_assoc();
        $stored_password = $row["password"];

        // Verify the password
        if (password_verify($password, $stored_password)) {
            // Login successful
            echo "<p style='color: green;'>Login successful!</p>";

            // You can redirect the user to another page or display a welcome message here
            // Example:
            // header("Location: welcome.php");
            // die();
        } else {
            echo "<p style='color: red;'>Invalid username or password.</p>";
        }
    }

    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <form action="" method="post">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_username = "your_db_username";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password hash
  $query = "SELECT password_hash, user_id FROM users WHERE username = '$username'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $hashedPassword = $row['password_hash'];
    $userId = $row['user_id'];

    // Verify the password
    if (password_verify($password, $hashedPassword)) {
      // Authentication successful
      session_start(); // Start a session to store user information

      // Store user information in the session
      $_SESSION['user_id'] = $userId;
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example Usage (in your login form HTML)
//  <form method="post" action="login.php">
//   Username: <input type="text" name="username">
//   Password: <input type="password" name="password">
//   <button type="submit">Login</button>
// </form>

// PHP code to handle the form submission
//  <?php
//  if ($_SERVER["REQUEST_METHOD"] == "POST") {
//    $username = $_POST["username"];
//    $password = $_POST["password"];

//    if (loginUser($username, $password)) {
//      // Login successful, redirect to your homepage or desired page
//      header("Location: homepage.php"); // Replace with your homepage URL
//      exit();
//    } else {
//      // Login failed
//      $error = "Invalid username or password.";
//    }
//  }
//?>
// ... (HTML for displaying error message if needed)


// Example of using password_hash() and password_verify() - IMPORTANT!
// Before using this code, you MUST hash the user's password before storing it in the database.
// This example demonstrates the correct way to handle password storage.
// In a real application, you should use a strong hashing algorithm like bcrypt or argon2.

//  $hashedPassword = password_hash("your_password", PASSWORD_DEFAULT);
//  // Store $hashedPassword in the users table.

?>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (Crucial for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Query the database to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = mysqli_query($db_host, $sql);

        if (mysqli_num_rows($result) > 0) {
            // Login successful
            // Set session variables to track the user
            session_start();
            $_SESSION["username"] = $username;
            $_SESSION["user_id"] = mysqli_fetch_assoc($result)['id']; // Get user ID
            header("Location: welcome.php"); // Redirect to a welcome page
            exit(); // Important: Stop further script execution
        } else {
            // Login failed
            $error_message = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form action="login.php" method="post">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>

        <button type="submit">Login</button>
    </form>

    <p>New user? <a href="register.php">Register</a></p>

</body>
</html>


   $stmt = mysqli_prepare($db_host, "SELECT * FROM users WHERE username = ? AND password = ?");
   mysqli_stmt_bind_param($stmt, "ss", $username, $password); // "ss" means two string parameters
   mysqli_stmt_execute($stmt);
   $result = mysqli_stmt_get_result($stmt);
   mysqli_stmt_close($stmt);
   
   Prepared statements separate the SQL code from the user data, preventing attackers from injecting malicious code.

* **Password Hashing:** **Never store passwords in plain text.**  Always hash them using a strong hashing algorithm (e.g., bcrypt, Argon2) before storing them in the database.  PHP's `password_hash()` and `password_verify()` functions are designed for this.

   
   // During registration:
   $hashed_password = password_hash($password, PASSWORD_DEFAULT);
   mysqli_query($db_host, "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')");

   // During login:
   $hashed_password = mysqli_fetch_assoc($result)['password'];
   if (password_verify($password, $hashed_password)) {
       // Login successful
   }
   

* **Input Validation (Beyond Empty Checks):**  Validate that the username and password meet certain criteria (e.g., minimum length, allowed characters).

* **Session Management:**  Secure your sessions.  Use HTTPS (SSL/TLS) to encrypt communication between the browser and the server.  Consider using a more robust session management system than PHP's built-in session.

* **Error Handling and Logging:**  Implement proper error handling and logging to help you troubleshoot problems and detect potential security breaches.

* **HTTPS:**  Always use HTTPS to encrypt all communication between the browser and your server.  This protects user credentials and other sensitive data.

* **Rate Limiting:**  Implement rate limiting to prevent brute-force attacks (where an attacker tries to guess passwords repeatedly).

**`welcome.php` (Example):**



<?php

// Database credentials (Replace with your actual database details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format.";
  } else {
    // SQL query to select the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($host, $sql);

    if ($result) {
      // Check if a user was found
      if (mysqli_num_rows($result) > 0) {
        // Fetch the user data
        $user = mysqli_fetch_assoc($result);

        // Verify the password
        if (password_verify($password, $user["password"])) {
          // Successful login - Set a session variable
          session_start();
          $_SESSION["user_id"] = $user["id"];
          $_SESSION["username"] = $user["username"];
          echo "Login successful!";
          header("Location: welcome.php"); // Redirect to a welcome page
          exit();
        } else {
          $error = "Incorrect password.";
        }
      } else {
        $error = "User not found.";
      }
    } else {
      $error = "Database error.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" for string types
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Session management
    $_SESSION["user_id"] = $user["id"]; // Assuming you have an 'id' column in your users table
    $_SESSION["username"] = $user["username"];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (for demonstration - in a real application, this would be from a form submission)
if (isset($_POST["username"]) && isset($_POST["password"])) {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message
    header("Location: protected_page.php");  // Replace with your desired page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data from the login form
$username = $_POST['username'];
$password = $_POST['password'];

// Create connection
$conn = new mysqli($servername, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// SQL query to authenticate
$sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
  // User found, set session variables for authentication
  $row = $result->fetch_assoc();
  $_SESSION['user_id'] = $row['id'];
  $_SESSION['username'] = $row['username'];
  // You might want to add more user data to the session as needed
  echo "Login successful! You are now logged in as " . $_SESSION['username'];
  // Redirect to a protected page or display a welcome message
  header("Location: /protected_page.php"); // Replace with your protected page
  exit();
} else {
  // User not found
  echo "Invalid username or password.";
}

$conn->close();

?>


   $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
   $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
   $stmt->execute();
   $result = $stmt->get_result();

   if ($result->num_rows > 0) {
       // ...
   } else {
       // ...
   }

   $stmt->close();
   

   - `prepare()`:  Prepares the SQL query for execution.
   - `bind_param()`:  Binds the variables `$username` and `$password` to the query placeholders (`?`).  The type of each variable (e.g., "s" for string, "i" for integer) is specified.
   - `execute()`:  Executes the prepared statement.
   - `get_result()`:  Retrieves the result set.
   - `close()`: Closes the statement.

* **Password Hashing:** **Never** store passwords in plain text in your database.  Instead, hash them using a strong hashing algorithm like bcrypt or Argon2.  bcrypt is a good choice because it's computationally expensive, making brute-force attacks much slower.

   
   // Example (using password_hash - you need to set salt)
   $password = password_hash($password, PASSWORD_DEFAULT);
   // ... insert $password into the database
   

   When a user tries to log in, you'll compare the hashed password from the database with the hashed password entered by the user:

   
   if (password_verify($password, $hashed_password_from_db)) {
       // Login successful
   } else {
       // Login failed
   }
   

* **Input Validation and Sanitization:**  Validate and sanitize all user input (including username and password) on the server-side to prevent unexpected behavior and potential security vulnerabilities.  At a minimum, ensure that the username and password meet certain length requirements and character restrictions.

* **Rate Limiting:** Implement rate limiting to prevent brute-force attacks.  This limits the number of login attempts allowed within a certain time period.

* **HTTPS:** Always use HTTPS (SSL/TLS) to encrypt the communication between the user's browser and your server, protecting user credentials during transmission.

* **Error Handling:** Implement robust error handling to gracefully handle potential errors (e.g., database connection errors, invalid input).  Don't display detailed error messages to users in a production environment, as they can reveal sensitive information.

* **Session Management:**  Use secure session management techniques.  Set the `session.cookie_secure` option in your `php.ini` to ensure that session cookies are only transmitted over HTTPS.  Use the `session_regenerate_id()` function to generate a new session ID after a user logs in, mitigating the risk of session fixation attacks.

This improved code provides a better starting point for a secure login function.  Remember to carefully implement all the security recommendations and adapt the code to your specific application requirements.  Consult the official PHP documentation and security resources for more information.


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  // Use prepared statements for security!

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, create a session
    session_start();
    $user = $result->fetch_assoc(); // Fetch the user data as an associative array

    // Store user data in session
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    // You might want to store other user data here as needed

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example Usage (This part is just for demonstrating how to call the function)

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (VERY IMPORTANT for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!loginUser($username, $password)) {
    $error = "Invalid username or password.";
  }
}

// Display error message (if any)
if (isset($error)) {
  echo "<p style='color: red;'>$error</p>";
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


// Example of hashing the password before storing it in the database
$password = $_POST["password"];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// Now, store $hashed_password in your database instead of $password


<?php

// Database connection details (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Form data handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'") === false) {
    $error_message = "Invalid username or password.";
  } else {
    // Check if password matches
    if (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username' AND password = '$password'") === false) {
      $error_message = "Invalid username or password.";
    } else {
      // Successful login
      session_start();
      $_SESSION["username"] = $username;
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
// ... (Database connection details)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // SQL query
    $result = mysqli_query($conn, "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'");

    if (mysqli_num_rows($result) > 0) {
      // Successful login
      session_start();
      $_SESSION["username"] = $username;
      header("Location: welcome.php");
      exit();
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>


<?php
session_start(); // Start the session

/**
 * Logs in a user.
 *
 * @param string $username The username.
 * @param string $password The password.
 * @return bool True if login successful, false otherwise.
 */
function login(string $username, string $password) {
  // Database credentials -  **IMPORTANT: NEVER HARDCODE REAL CREDENTIALS IN PRODUCTION!**
  $db_host = 'localhost';
  $db_name = 'your_database_name'; // Replace with your database name
  $db_user = 'your_db_user';     // Replace with your database username
  $db_password = 'your_db_password'; // Replace with your database password

  // Simulate a database query (replace with your actual database code)
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Sanitize and validate input (VERY IMPORTANT!)
  $username = trim($username); // Remove leading/trailing whitespace
  $password = trim($password);

  // Basic password validation (replace with a more robust hashing scheme)
  $hashed_password = "hashed_password_from_db"; // Simulate a hashed password.  In a real app, hash the password!
  if ($username === 'testuser' && $password === 'password') {
    // Login successful
    $_SESSION['username'] = $username;
    return true;
  } else {
    // Login failed
    return false;
  }

  $conn->close();
}

// Example usage (form handling - this is just a placeholder)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    // Redirect to a secure page
    header("Location: /secure_page.php"); // Replace with your secure page
    exit();
  } else {
    // Display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle login
function login($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare and execute the query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";  // Use prepared statements for security
  $stmt = $conn->prepare($query);

  if ($stmt) {
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings
    $stmt->execute();
    $result = $stmt->get_result();

    // 3. Process the result
    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Set session variables (Important!)
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true;  // Login successful
    } else {
      return false; // Login failed
    }
  } else {
    return false; // Failed to prepare the statement
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (This part demonstrates how to call the function)
// To actually use this, you'll need a form to submit the username and password.

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    // User logged in successfully
    header("Location: welcome.php"); // Redirect to a welcome page
    exit(); // Stop further execution
  } else {
    // Login failed
    $error = "Invalid username or password.";
    // You could display the error message here, for example, in a form error message.
    // For example:
    // echo "<p style='color:red;'>$error</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows == 0) {
    // User not found
    return false;
  } else {
    // User found, set session variables for login
    session_start();
    $_SESSION['username'] = $username;
    return true;
  }

  // Close the connection
  $conn->close();
}


// Example Usage (Login Form)
// Assuming you have a form with fields 'username' and 'password'
// and a button that calls this function.

// Example: User input from a form

// if (isset($_POST['login_submit'])) {
//   $username = $_POST['username'];
//   $password = $_POST['password'];

//   if (loginUser($username, $password)) {
//     // Login successful
//     header("Location: welcome.php"); // Redirect to a welcome page
//     exit(); // Stop further execution
//   } else {
//     // Login failed
//     echo "<p style='color:red;'>Invalid username or password.</p>";
//   }
// }
// else {
//     // Form submission wasn't for the login form - handle accordingly
// }



// Example: Simple Test (For demonstration only - don't use in production)
// You can uncomment this to test the function.
// $username_test = "testuser";
// $password_test = "password123";
// if (loginUser($username_test, $password_test)) {
//   echo "<p>Login successful!  User: " . $_SESSION['username'] . "</p>";
// } else {
//   echo "<p>Login failed.</p>";
// }


?>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to validate username and password
function validate_credentials($username, $password) {
  // Sanitize inputs to prevent SQL injection
  $username = trim($username);
  $password = trim($password);

  // Check if username and password are not empty
  if (empty($username) || empty($password)) {
    return false;
  }

  //  In a real application, you would hash the password here
  //  for security reasons.  This example uses plain text
  //  for simplicity.  Never store passwords in plain text in a production environment.
  //  Consider using a password hashing library like password_hash()
  //  and password_verify().

  //  For this example, we'll compare the password directly.
  return ($password == "your_password"); // Replace "your_password" with the actual password
}


// Function to handle user login
function login($username, $password) {
  if (validate_credentials($username, $password)) {
    // User credentials are valid.  You can store a session ID here.
    session_start();
    $_SESSION['username'] = $username;
    return true;
  } else {
    return false;
  }
}

// Example usage -  This section would typically be in a separate HTML form
//  and handled by the form submission.  This is just for demonstration.

if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (login($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database Credentials - Replace with your actual credentials!
$db_host = 'localhost';
$db_user = 'your_username';
$db_password = 'your_password';
$db_name = 'your_database_name';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input - Basic validation (Stronger validation is recommended in production)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (strlen($username) < 3) {
    $error_message = "Username must be at least 3 characters long.";
  } 
  // Add more validation rules here, like checking for valid characters, password strength, etc.


  // Database connection
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; // Use prepared statements for security

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found, set session variables
      session_start();
      $_SESSION["username"] = $username;  // Store the username
      $user_data = $result->fetch_assoc(); // Get user data
      $_SESSION['user_id'] = $user_data['id']; // Store the user ID (optional but recommended)

      // Redirect to a protected page or display a success message
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit; 
    } else {
      $error_message = "Invalid username or password.";
    }
  } else {
    $error_message = "Error executing query. " . $conn->error;
  }
} else {
  // If the form hasn't been submitted, display the login form
  // This is usually handled by your HTML template.  The code below is just to
  // show what's happening on the server side when the page is first loaded.
  $error_message = ""; 
}

// Close the connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Form data
$username = $_POST['username'];
$password = $_POST['password'];

// Connect to the database
$conn = new mysqli($db_host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare the SQL query
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify password
    if (password_verify($password, $row['password'])) {
        // Login successful
        // Set session variables
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $username;

        // Redirect to a welcome page or your desired location
        header("Location: welcome.php"); // Replace welcome.php with your welcome page
        exit();

    } else {
        // Incorrect password
        echo "Incorrect password.";
    }
} else {
    // User not found
    echo "User not found.";
}

$conn->close();

?>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$dbname = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get input values
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    // Check if the user exists
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row["password"])) {
            // Authentication successful - Set a session variable
            session_start();
            $_SESSION["user_id"] = $row["id"];
            $_SESSION["username"] = $row["username"];

            // Redirect to a secure page (e.g., dashboard)
            header("Location: dashboard.php"); // Replace with your secure page
            exit();
        } else {
            // Password mismatch
            echo "<p>Incorrect password.</p>";
        }
    } else {
        // User not found
        echo "<p>User not found.</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<form action="" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Basic - can be improved for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check the connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to select the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      // Check the password
      $row = $result->fetch_assoc();
      if (password_verify($password, $row["password"])) {
        // Login successful
        // You can store the user ID in a session or cookie
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        echo "Login successful!";
        // Redirect to a protected page or display a welcome message
        header("Location: /protected_page.php"); // Replace with your protected page URL
        exit;
      } else {
        $error_message = "Incorrect password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user information
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['username'] = $username;
      return true;
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // User not found
  }

  $conn->close();
}


// Example Usage (Handle login form submission)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details - REPLACE WITH YOUR ACTUAL VALUES
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check login
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $user = $result->fetch_assoc();
    $_SESSION['user_id'] = $user['id']; // Assuming 'id' is a user ID column
    $_SESSION['username'] = $user['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example Usage (Handling login form submission)

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and Password must be filled.";
  } else {
    // Call the loginUser function
    $loginResult = loginUser($username, $password);

    if ($loginResult) {
      // Redirect to a protected page or display a welcome message
      header("Location: protected_page.php"); // Redirect to a protected page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";  // Use prepared statement for security

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    // Check if any user was found
    if ($result->num_rows > 0) {
      // User found, store the data in a session variable
      $row = $result->fetch_assoc();
      $_SESSION['user_id'] = $row['id']; // Assuming you have an 'id' column
      $_SESSION['username'] = $row['username'];

      return true; // Login successful
    } else {
      return false; // No user found
    }
  } else {
    return false; // Error executing the query
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage:  (This is just an example - you'll need to integrate this into your form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Redirect to a protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select user from the 'users' table
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";  //Sanitize input, use prepared statements for better security in real applications

  // Execute the query
  $result = $conn->query($sql);

  // Check if a user with the given username exists
  if ($result->num_rows > 0) {
    // Get the user data
    $user = $result->fetch_assoc();

    // Verify the password
    if (password_verify($password, $user['password'])) { // Use password_verify
      // Login successful
      // Set session variables
      session_start();
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage (login form handling)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a welcome page or perform other actions
    header("Location: welcome.php"); // Assuming a welcome.php page exists
    exit();
  } else {
    // Login failed
    $error = "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Username"><br><br>
    Password: <input type="password" name="password" placeholder="Password"><br><br>
    <input type="submit" value="Login">
  </form>

  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the password hash
  $sql = "SELECT password_hash, salt FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $password_hash = $row['password_hash'];
    $salt = $row['salt'];

    // Verify password
    if (password_verify($password, $password_hash . " " . $salt)) {
      // Login successful
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the loginUser function
  if (loginUser($username, $password)) {
    // Redirect to a protected page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Login failed
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$username = $_POST['username'];
$password = $_POST['password'];

// Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to fetch user data
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User found, verify password
    $user_data = $result->fetch_assoc();
    if (password_verify($password, $user_data['password'])) {
        // Password verified, set session variables
        session_start();
        $_SESSION['user_id'] = $user_data['id'];
        $_SESSION['username'] = $user_data['username'];

        // Redirect to a protected page
        header("Location: /protected_page.php"); // Replace with your protected page
        exit();
    } else {
        // Password does not match
        echo "Incorrect password.";
    }
} else {
    // User not found
    echo "User not found.";
}

$conn->close();

?>


<?php

// Database connection details - Replace with your actual values
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // 1. Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // 2. Prepare and execute the query
  $query = "SELECT * FROM users WHERE username = '" . $conn->real_escape_string($username) . "' AND password = '" . $conn->real_escape_string($password) . "'";
  $result = $conn->query($query);

  // 3. Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found, so return their data (or user ID, etc.)
    $user_data = $result->fetch_assoc();
    // You can also store a session variable here for authentication:
    // $_SESSION['user_id'] = $user_data['id']; // Assuming 'id' is the user ID column
    return $user_data; // Return user data for further processing
  } else {
    // User not found
    return false;
  }

  // 4. Close the connection
  $conn->close();
}

// Example Usage:  (This would typically be in your login form's processing code)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security - discussed below)
  if (empty($username) || empty($password)) {
    echo "Username and Password cannot be empty!";
  } else {
    $login_result = loginUser($username, $password);

    if ($login_result) {
      // User logged in successfully
      // Redirect to a protected page or display a welcome message
      // echo "Welcome, " . $login_result['username']; // Display username
      // $_SESSION['user_id'] = $login_result['id']; // Store user ID in session
      header("Location: welcome.php"); // Redirect to welcome page
      exit();
    } else {
      // User login failed
      echo "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["REQUEST_URI"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login with username and password verification.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|string Returns the user ID if login is successful, 
 *                   or an error message string if login fails.
 */
function loginUser(string $username, string $password) {
  // **IMPORTANT:  Replace this with your actual database connection and user data.**
  // This is a simplified example and won't work without a database.
  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'securePass42',
  ];

  // Sanitize input (important for security)
  $username = strtolower($username); // Convert to lowercase for consistency

  if (isset($validUsers[$username])) {
    // Verify password
    if ($validUsers[$username] === $password) {
      // Login successful
      // Generate a session ID (for security - you'd normally use a more robust method)
      $sessionId = bin2hex(random_bytes(32)); // Generate a secure session ID

      // Store session ID in session variable (for simplicity, but proper session management is crucial)
      session_start();
      $_SESSION['userId'] = $username; // Store the username, not the password!
      $_SESSION['sessionId'] = $sessionId; 

      return $username; // Return the username (or user ID if you have one)
    } else {
      return "Incorrect password.";
    }
  } else {
    return "User not found.";
  }
}


// **Example Usage:**

// Get username and password from form submission (example)
// $username = $_POST['username'];
// $password = $_POST['password'];

// if (isset($username) && isset($password)) {
//   $loginResult = loginUser($username, $password);
//   if ($loginResult === 'Incorrect password.') {
//     echo "<p style='color:red;'>Incorrect password.</p>";
//   } elseif ($loginResult === 'User not found.') {
//     echo "<p style='color:red;'>User not found.</p>";
//   } else {
//     echo "<p>Login successful!  User ID: " . $loginResult . "</p>";
//     // Redirect to a secure page after login
//   }
// } else {
//   echo "<p>Please fill in the form.</p>";
// }


?>


<?php

// Database credentials (Replace with your actual credentials!)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";


// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (filter_var($username, FILTER_VALIDATE_EMAIL) === false) {
    $error = "Invalid email format.";
  } else {
    // Hash the password (using password_hash)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Attempt to connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // Query to check for the username
      $sql = "SELECT * FROM users WHERE username = '$username'"; // Use single quotes for username
      $result = $conn->query($sql);

      if ($result->num_rows == 0) {
        $error = "Invalid username or password.";
      } else {
        // If the username exists, attempt to verify the password
        $row = $result->fetch_assoc();
        if (password_verify($password, $row["password"])) {
          // If the password matches, set a session variable
          $_SESSION["username"] = $username;
          $error = "Login successful!";
        } else {
          $error = "Invalid username or password.";
        }
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the user's password
  $query = "SELECT password FROM users WHERE username = '$username'";
  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $stored_password = $row['password'];

    // Verify the password
    if (password_verify($password, $stored_password)) {
      // Authentication successful
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Authentication failed
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}


// Example usage (from a form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - redirect to a protected page or display a success message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();

  } else {
    // Login failed - display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual details)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Function to handle login
function login($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to fetch user data
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $row = $result->fetch_assoc();
    $_SESSION["user_id"] = $row["id"]; // Assuming you have an 'id' column in your users table
    $_SESSION["username"] = $row["username"];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example Usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (IMPORTANT - Never trust user input directly)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (login($username, $password) === true) {
    // Login successful, redirect to a protected page or display a welcome message
    echo "Login successful!  Redirecting...";
    header("Location: protected_page.php"); // Redirect to your protected page
    exit();
  } else {
    // Login failed, display an error message
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php
//... (Database connection code)

function login($username, $password) {
  $conn = new mysqli($servername, $username, $password, $dbname);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Using a prepared statement
  $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $_SESSION["user_id"] = $row["id"];
    $_SESSION["username"] = $row["username"];
    return true;
  } else {
    return false;
  }

  $stmt->close();
  $conn->close();
}
?>


<?php
session_start();

// Database credentials (replace with your actual values)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_username';
$db_password = 'your_db_password';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings
  $stmt->execute();

  $result = $stmt->get_result();

  // Check if user found
  if ($result->num_rows == 1) {
    $user = $result->fetch_assoc();
    $_SESSION['username'] = $user['username'];
    $_SESSION['userid'] = $user['id']; // Store user ID for easier access
    return true;
  } else {
    return false;
  }

  $stmt->close();
  $conn->close();
}

// --- Example Usage (Handle Login Request) ---

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    header("Location: /welcome.php"); // Redirect to welcome page after successful login
    exit();
  } else {
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check login
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");

  // Bind parameters securely
  $stmt->bind_param("s", $username);

  // Execute the query
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if the user exists
  if ($result->num_rows == 0) {
    return false; // User doesn't exist
  }

  // Fetch the user data
  $user = $result->fetch_assoc();

  // Verify the password (Important: Use password_hash for secure password storage)
  if (password_verify($password, $user['password'])) {
    // Password is correct, set session variables
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    return true; // Login successful
  } else {
    return false; // Incorrect password
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (in your login form's submission handler)

// Assuming the username and password are submitted from the form
// Get username and password from the form
// $username = $_POST['username'];
// $password = $_POST['password'];

// Check if the login is successful
// if (loginUser($username, $password)) {
//   // Redirect to a protected page or display a success message
//   header("Location: /protected_page.php");
//   exit();
// } else {
//   // Display an error message
//   echo "<p>Invalid username or password.</p>";
// }

?>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Form data
$login_username = $_POST['username'];
$login_password = $_POST['password'];

// 1. Validate input (important for security)
if (empty($login_username) || empty($login_password)) {
    $error = "Username and password cannot be empty.";
}

// 2. Database Query (using prepared statements for security)
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Prepare the query
$sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

// Bind parameters to prevent SQL injection
$stmt = $conn->prepare($sql);
$stmt->bind_param("ss", $login_username, $login_password);

// Execute the query
if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // User found, set session variables
        $row = $result->fetch_assoc();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        // Redirect the user
        header("Location: welcome.php"); // Replace with your welcome page
        exit;
    } else {
        $error = "Invalid username or password.";
    }
} else {
    $error = "Query error: " . $stmt->error;
}

// Close the statement and connection
$stmt->close();
$conn->close();

// Display error message (if any) - This is crucial for debugging
if ($error != "") {
    echo "<p style='color: red;'>Error: " . $error . "</p>";
}

?>

<!-- HTML Form for Login -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>


<?php

// Database configuration (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found, get user data
    $user = $result->fetch_assoc();
    // Authentication successful
    // You can store session variables or redirect to a secure area
    $_SESSION['username'] = $user['username']; //  Store username in session
    $_SESSION['user_id'] = $user['id']; // Assuming you have an 'id' column in users table
    return true;
  } else {
    // User not found
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful
    echo "Login successful! You are now logged in.";
    // Redirect to a protected page or dashboard
    header("Location: dashboard.php"); // Replace dashboard.php with your desired page
    exit();
  } else {
    // Login failed
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Query the database to check credentials
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query (using prepared statements - BEST PRACTICE)
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      // Bind the parameters
      $stmt->bind_param("ss", $username, $password);

      // Execute the query
      if ($stmt->execute()) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
          // User found - set session variables
          session_start(); // Start session if it doesn't exist
          $_SESSION["username"] = $username;
          // You can also store other user data here (e.g., user ID, role)
          echo "Login successful! You are now logged in as " . $username;
          // Redirect to a protected page or the homepage
          header("Location: /protected_page.php"); // Replace with your desired redirect URL
          exit();
        } else {
          $error = "Incorrect username or password.";
        }
      } else {
        $error = "Query error";
      }
    } else {
      $error = "Query preparation error";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>New user? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the SQL query
  $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

  if ($stmt->execute()) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // User found, set session variables
      $_SESSION['username'] = $row['username'];
      $_SESSION['user_id'] = $row['id']; // Assuming you have a user_id column
      return true; // Login successful
    } else {
      // No user found or multiple users with the same username
      return false;
    }
  } else {
    // Query execution failed
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (for demonstration - this should be in a form submission)
// if ($_SERVER["REQUEST_METHOD"] == "POST") {
//   $username = $_POST["username"];
//   $password = $_POST["password"];

//   if (loginUser($username, $password)) {
//     header("Location: user_dashboard.php"); // Redirect to a success page
//     exit();
//   } else {
//     echo "Invalid username or password.";
//   }
// }

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to select user based on username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, retrieve data
    $user = $result->fetch_assoc();
    // Set session variables to store user information
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // You might want to add more session variables here, like user role etc.
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage:
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a different page or display a welcome message
    echo "Login successful!  Redirecting...";
    header("Location: welcome.php");  // Redirect to a welcome page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!-- HTML Form for Login -->
<form method="post" action="">
  Username: <input type="text" name="login_username" required>
  Password: <input type="password" name="login_password" required>
  <button type="submit" name="login_button">Login</button>
</form>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  // Execute the query
  $result = $conn->query($sql);

  // Check if a user was found
  if ($result->num_rows > 0) {
    // User found, you can now process their session or redirect them to a protected area
    // Example:  Store user data in a session
    session_start();
    $user_data = $result->fetch_assoc(); // Fetch the user data as an associative array
    $_SESSION['user_id'] = $user_data['id']; // Assuming 'id' is the user ID column
    $_SESSION['username'] = $user_data['username'];

    // Redirect to a protected page (e.g., the dashboard)
    header("Location: dashboard.php"); // Replace dashboard.php with your protected page
    exit(); // Important to stop further execution

  } else {
    // User not found
    echo "<p>Invalid username or password.</p>";
  }

  $conn->close();
}

// Example usage (Handle the login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security!)
  if (empty($username) || empty($password)) {
    echo "<p>Username and password fields cannot be empty.</p>";
  } else {
    // Call the loginUser function
    loginUser($username, $password);
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" required>
    <br><br>
    Password: <input type="password" name="password" placeholder="Enter your password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?"; 

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind parameters
    $stmt->bind_param("ss", $username, $password); // "ss" means two strings

    // Execute the query
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // Session setup
        session_start(); 
        $_SESSION['username'] = $username;  // Store username in session
        $_SESSION['user_id'] = $row['id']; //Optionally store user ID

        // Redirect to a protected page or show a success message
        header("Location: protected_page.php"); // Replace with your protected page
        exit(); // Stop further execution
      } else {
        return "Invalid username or password.";
      }
    } else {
      return "Query error.";
    }
    $stmt->close();
  } else {
    return "Statement preparation error.";
  }
  $conn->close();
}


// Example usage (handling form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  $login_result = loginUser($username, $password);

  if ($login_result == "Invalid username or password.") {
    echo "<p style='color:red;'>$login_result</p>";
  } else if ($login_result == "Invalid username or password.") {
    echo "<p style='color:red;'>$login_result</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    <br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Query to check for the username and password
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) > 0) {
      // User found, set session variables
      $_SESSION["username"] = $username;
      // You can also store other user details here if needed
      // e.g., $_SESSION["user_id"] = $result[0]["id"]; 

      // Redirect to a secure page
      header("Location: secure_page.php"); // Replace with your desired secure page
      exit(); // Important to prevent further script execution
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Replace with your registration page -->


</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Incorrect username or password.";
    }

    if ($result->num_rows > 0) {
      // User found, set session variables
      session_start(); // Start the session (if not already started)
      $_SESSION["username"] = $username; // Store username in session
      header("Location: welcome.php"); // Redirect to a welcome page
      exit(); // Important: Stop further script execution
    }
  }
}

// Display login form if not posting data
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Not have an account? <a href="register.php">Register here</a></p>

</body>
</html>


<?php
// This is a simplified example.  A real registration system would be more complex.
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // **VERY IMPORTANT:**  In a real application, you would hash the password
  // using password_hash() and store the hash in the database.
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // **Simulated Database Insertion (Replace with actual database code)**
  $conn = new mysqli($host, $username, $password, $database);
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }
  $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
  if ($conn->query($sql) === TRUE) {
    echo "New record created successfully";
    // Redirect to login page
    header("Location: login.php");
    exit();
  } else {
    echo "Error: " . $sql . "<br>" . $conn->error;
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Register</title>
</head>
<body>

  <h2>Register</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Register</button>
  </form>

  <p>Already have an account? <a href="login.php">Login here</a></p>

</body>
</html>


<?php

// Database connection details (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the form data (IMPORTANT - Add more robust validation in a real application)
  if (empty($username) || empty($password)) {
    $error[] = "Username and Password cannot be empty.";
  }

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  // Execute the query
  $result = $conn->query($sql);

  // Check if a user was found
  if ($result->num_rows > 0) {
    // User found, set session variables
    $_SESSION["username"] = $username;
    echo "Login successful!";
    // Redirect the user to the desired page
    header("Location: /welcome.php");  // Replace /welcome.php with your welcome page
    exit();
  } else {
    echo "Invalid username or password.";
  }

  // Close the connection
  $conn->close();

}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


   $password = password_hash($_POST["password"], PASSWORD_DEFAULT);
   $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
   

* **Session Management:**
   - Consider using a more robust session management system (e.g., `session_start()` and `session_destroy()`) to handle session creation, destruction, and management securely.
   - **Set the `session.cookie_secure` option to 1 in your PHP configuration** to ensure that session cookies are only transmitted over HTTPS.
   - **Set an expiration time for your session.**

* **Input Validation:** Implement thorough input validation to prevent users from submitting malicious data.  Use regular expressions to enforce expected formats.

* **Error Handling:**  Add more robust error handling to gracefully handle database errors and other potential issues.  Don't display sensitive error messages to the user.

* **HTTPS:**  Always serve your website over HTTPS to encrypt communication between the user's browser and your server.  This protects sensitive information, including login credentials.

**Example with Prepared Statements (Recommended):**



<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the password hash
  $sql = "SELECT password_hash, user_id FROM users WHERE username = ?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("s", $username); // "s" indicates a string parameter
  $stmt->execute();
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found
    $stmt->close();
    return false;
  } else {
    $row = $result->fetch_assoc();
    $password_hash = $row['password_hash'];
    $user_id = $row['user_id'];

    // Verify password
    if (password_verify($password, $password_hash)) {
      // Password is correct, login successful
      // Set session variables (example)
      session_start();
      $_SESSION['user_id'] = $user_id;
      $_SESSION['username'] = $username;
      $stmt->close();
      return true;
    } else {
      // Password is incorrect
      $stmt->close();
      return false;
    }
  }
}


// Example usage (This should be in your login form's processing)

// Get username and password from the form
$username = $_POST['username'];
$password = $_POST['password'];

// Call the login function
if (loginUser($username, $password)) {
  // Login successful, redirect to a protected page or display a welcome message
  echo "Login successful!  Redirecting...";
  header("Location: /protected_page.php"); // Replace with your protected page URL
  exit();
} else {
  // Login failed, display an error message
  echo "Invalid username or password.";
}

?>


<?php
session_start(); // Start the session to store user data

/**
 * User Login Function
 *
 * This function handles user login.
 *
 * @param string $username The username for login.
 * @param string $password The password for login.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser($username, $password)
{
    // **IMPORTANT SECURITY NOTE:**
    // This example uses a simple hardcoded password.
    // **NEVER** store passwords in plain text in a real application.
    // Use a strong hashing algorithm like bcrypt or Argon2.
    //  You should also use password_verify() to compare the hashed password.

    $validUsers = [
        'john.doe' => 'password123',
        'jane.smith' => 'securePass123',
    ];

    // Check if the username exists and the password matches
    if (isset($validUsers[$username])) {
        if (password_verify($password, $validUsers[$username])) { // Use password_verify()
            // Login successful
            $_SESSION['username'] = $username; // Store the username in the session
            return true;
        } else {
            // Password mismatch
            return false;
        }
    } else {
        // Username doesn't exist
        return false;
    }
}

// Example Usage (Demonstration - don't use this in a real web application)
// Simulate a login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        echo "<p>Login successful! You are now logged in as " . $username . "</p>";
        // Redirect to a protected page or display a welcome message
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
    } else {
        echo "<p>Invalid username or password.</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h2>User Login</h2>

    <form method="post" action="">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php
session_start(); // Start the session

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Login function
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $row = $result->fetch_assoc();
    $_SESSION['username'] = $row['username'];
    $_SESSION['user_id'] = $row['id']; // Assuming you have an 'id' column in your users table
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security -  never directly use user input in SQL without sanitization!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    $login_result = login($username, $password);

    if ($login_result) {
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
// ... (Previous code) ...

// Login function (with parameterized query)
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query with a placeholder
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings

  // Execute the statement
  $result = $stmt->execute();

  if ($result) {
    $row = $stmt->fetch_assoc();
    $_SESSION['username'] = $row['username'];
    $_SESSION['user_id'] = $row['id'];
    return true;
  } else {
    return false;
  }

  $stmt->close(); // Close the statement
  $conn->close();
}
?>


// In the user registration function (or when updating the user's password)

$hashed_password = password_hash($password, PASSWORD_DEFAULT);
$sql = "INSERT INTO users (username, password, ...) VALUES ('$username', '$hashed_password', ...)";


<?php

// Database Credentials (Replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate Input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_SANITIZE_STRING)) { // Sanitize username
      $error = "Invalid username format.";
  } elseif (!filter_var($password, FILTER_SANITIZE_STRING)) { // Sanitize password
      $error = "Invalid password format.";
  } else {
    // SQL Query (Use prepared statements to prevent SQL injection)
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql); // Assuming $conn is your database connection
    $stmt->bind_param("ss", $username, $password); // "ss" means two strings
    $result = $stmt->execute();

    // Check if the query was successful
    if ($result) {
      $row = $stmt->fetch_assoc();
      if ($row["id"]) { // Assuming 'id' is the primary key
        // Successful login!  Set session variables
        $_SESSION["username"] = $username;
        $_SESSION["id"] = $row["id"]; // Store the user ID
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error = "Incorrect username or password.";
      }
    } else {
      $error = "Database error.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (mysqli_num_rows(mysqli_query(mysqli_connect($db_host, $db_user, $db_password), "SELECT * FROM users WHERE username = '$username'")) > 0) {
    // User exists, check the password
    $stmt = mysqli_prepare(mysqli_connect($db_host, $db_user, $db_password), "SELECT password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);  // 's' indicates a string
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);

    if (password_verify($password, $row["password"])) {
      // Password matches, login successful
      session_start(); // Start a session to store user data
      $_SESSION["username"] = $username;
      $error_message = ""; // Clear any previous errors
      header("Location: welcome.php"); // Redirect to a welcome page
      exit();  // Important to stop further script execution
    } else {
      // Password does not match
      $error_message = "Incorrect password.";
    }
  } else {
    // User does not exist
    $error_message = "Incorrect username.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form action="" method="post">
    Username:
    <input type="text" name="username" value="<?php echo isset($_POST['username']) ? htmlspecialchars($_POST['username']) : ''; ?>">
    <br><br>
    Password:
    <input type="password" name="password">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get user input
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (IMPORTANT:  Add more validation here!)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query (Use prepared statements for security - see explanation below)
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";

    // Execute the query
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    } else {
      // Authentication successful
      $row = $result->fetch_assoc();

      // Password verification (VERY IMPORTANT: Use password_verify)
      if (password_verify($password, $row["password"])) {
        // Set session variables
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        
        // Redirect to a secure page or home page
        header("Location: secure_page.php"); // Replace with your secure page
        exit();
      } else {
        $error = "Incorrect password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" <?php if (isset($username)) echo 'value="' . htmlspecialchars($username) . '"'; ?>/>
    <br><br>
    Password: <input type="password" name="password" />
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Not have an account? Register here.</a>

</body>
</html>


// Example of password hashing during registration (from register.php)
$password = $_POST["password"];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// Then, when inserting into the database, use $hashed_password instead of $password.


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Input validation (again, expand this!)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } else {
        // Database connection (same as login.php)
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query
        $sql = "INSERT INTO users (username, password) VALUES ('$username', '$password')";

        if ($conn->query($sql) === TRUE) {
            $success = true;
        } else {
            $error = "Error inserting user. " . $conn->error;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>

    <h2>Register</h2>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" />
        <br><br>
        Password: <input type="password" name="password" />
        <br><br>
        <button type="submit">Register</button>
    </form>

    <br><br>
    <a href="login.php">Already have an account? Login here.</a>
</body>
</html>


<?php

// Database credentials - Replace with your actual values
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameter
  $stmt->bind_param("s", $username);

  // Execute the statement
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Login successful
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        return true;
      } else {
        // Password mismatch
        return false;
      }
    } else {
      // User not found
      return false;
    }
  } else {
    // Error executing the query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (Demonstration -  This is for testing and should be replaced with your form input)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a protected page
    header("Location: /protected_page.php"); // Replace with your protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details - Replace with your actual details!
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the login data from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (basic - you should enhance this!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match("/^[_a-z0-9]+$/i", $username)) {
        $error = "Invalid username.  Must be a valid email address or contain only alphanumeric characters.";
    } else {
        // SQL query to check for the username and password
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = mysqli_query($servername, $sql);

        if (mysqli_num_rows($result) > 0) {
            // User found, set session variables
            $_SESSION["username"] = $username;
            // Redirect to a secure page (e.g., homepage)
            header("Location: homepage.php");
            exit(); // Important: Stop further script execution
        } else {
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h1>User Login</h1>

<?php
if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database credentials - **IMPORTANT: NEVER HARDCODE THIS IN A REAL APPLICATION!**
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// --- Authentication Logic ---

// Function to check if the login is successful
function isLoggedIn($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($query);
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters
  $stmt->execute();

  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Set session variables
    $_SESSION['user_id'] = $user['id']; // Assuming 'id' is a primary key in the users table
    $_SESSION['username'] = $user['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// --- Login Form Handling ---

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Basic example - improve this for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password are required.";
  } else {
    // Attempt to login
    if (isLoggedIn($username, $password)) {
      // Redirect to a secure page
      header("Location: /secure_page.php"); // Replace with your secure page URL
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Not a user? Register here</a>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to check if the login is successful
function is_login_successful($result) {
  return $result->rowCount() > 0;
}

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  try {
    $pdo = new PDO("mysql:host=$db_host;dbname=$db_name;charset=utf8", $db_user, $db_pass);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);  // For error handling
  } catch (PDOException $e) {
    // Handle database connection errors
    echo "Database connection failed: " . $e->getMessage();
    return false;
  }

  // Prepare the SQL query
  $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");

  // Bind the username parameter
  $stmt->bindParam(1, $username);

  // Execute the query
  $stmt->execute();

  // Get the result
  $result = $stmt->fetch(PDO::FETCH_ASSOC);  // Fetch as an associative array

  // Check if a user with the given username exists
  if ($result) {
    // Verify the password
    if (password_verify($password, $result['password'])) {
      // Login successful - set session variables
      session_start();
      $_SESSION['user_id'] = $result['id'];
      $_SESSION['username'] = $result['username'];
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }
}


// Example Usage (Demonstration -  Use with a form in a real application)
// Assuming you have a form with fields 'username' and 'password'

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a secure page or display a success message
    header("Location: welcome.php"); // Replace with your welcome page
    exit();
  } else {
    // Display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}


?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials - **IMPORTANT: Replace with your actual credentials**
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Sanitize the username and password inputs
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate the inputs (basic validation -  stronger validation recommended)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // Query the database to check for the username and password
    $query = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = mysqli_query($db_host, $query);

    if (mysqli_num_rows($result) > 0) {
      // User found - set session variables
      $_SESSION["username"] = $username;  // Store username in session
      // You could also store other user data here if needed.
      // For example: $_SESSION["user_id"] = $result[0]["id"];

      // Redirect to a protected page
      header("Location: protected_page.php"); // Replace with your protected page URL
      exit(); // Terminate the script execution
    } else {
      $error_message = "Incorrect username or password.";
    }
  }
}

// Function to display the login form
function displayLoginForm() {
  ?>
  <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" placeholder="Enter your username">
    <br><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" placeholder="Enter your password">
    <br><br>
    <button type="submit">Login</button>
  </form>
  <?php
}

// Start the session
session_start();

// Display the login form
displayLoginForm();

// If a user is logged in (session variable exists), you can display other content
if (isset($_SESSION["username"])) {
    echo "<p>Welcome, " . $_SESSION["username"] . "!</p>";
}
?>


<?php
// Example using a placeholder approach (less secure, but easier to understand)

// Assuming you're using a database extension like mysqli or PDO

// ... (connection code and session start) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Build the query with placeholders
    $query = "SELECT * FROM users WHERE username = ? AND password = ?";

    // Prepare the statement
    $stmt = mysqli_prepare($db_host, $query);

    if ($stmt) {
        // Bind the parameters
        mysqli_stmt_bind_param($stmt, "ss", $username, $password); // "ss" means two strings

        // Execute the statement
        mysqli_stmt_execute($stmt);

        // Get the result
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) > 0) {
            // User found - set session variables
            $_SESSION["username"] = $username;

            // Redirect to a protected page
            header("Location: protected_page.php");
            exit();
        } else {
            $error_message = "Incorrect username or password.";
        }

        // Close the statement
        mysqli_stmt_close($stmt);
    } else {
        // Handle the error preparing the statement
        echo "Error preparing statement: " . mysqli_error($db_host);
    }
}
?>


<?php

// Database credentials (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve user data
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify password
    if (password_verify($password, $row['password'])) {
      // Login successful
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection (important!)
  $conn->close();
}

// Example Usage (for testing - replace with your form input)
// This is just an example; you'll likely use a form to submit the credentials.
// $username = $_POST['username'];
// $password = $_POST['password'];

// If you uncomment the above lines and use a form, you'll need to
// also include HTML form elements to capture the username and password.
//  For example:

//  <form method="post" action="">
//   Username: <input type="text" name="username">
//   Password: <input type="password" name="password">
//   <button type="submit">Login</button>
// </form>


// Example: Testing the function directly (for demonstration)
// $username = "testuser";
// $password = "password123";
// if (loginUser($username, $password)) {
//   echo "Login successful!";
// } else {
//   echo "Login failed.";
// }
?>


<?php

// Database credentials (replace with your actual values)
$db_host = 'localhost';
$db_user = 'your_db_user';
$db_pass = 'your_db_password';
$db_name = 'your_db_name';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT id, username, password FROM users WHERE username = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($query);

  if ($stmt) {
    $stmt->bind_param("s", $username);  // 's' indicates a string parameter
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $user = $result->fetch_assoc();
      // Verify password
      if (password_verify($password, $user['password'])) {
        // Successful login
        session_start();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        return true;
      } else {
        $stmt->close();
        return false; // Incorrect password
      }
    } else {
      $stmt->close();
      return false; // User not found
    }
  } else {
    $stmt = null; // Make sure the statement is closed if it fails to prepare
    return false;
  }

  $stmt->close();
}


// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Perform login
  if (loginUser($username, $password)) {
    // Login successful - redirect to a different page, or display a welcome message
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();

  } else {
    // Login failed - display an error message
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Replace register.php with your registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input (important for security)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Hash the password (VERY IMPORTANT for security)
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Query the database
        $pdo = new PDO("mysql:host=$host;dbname=$database", $username, $password);
        $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = :username");
        $stmt->bindParam(':username', $username);
        $stmt->execute();

        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        // Check if the user exists
        if ($user) {
            // Verify the password
            if (password_verify($password, $user["password"])) {
                // User login successful
                session_start();
                $_SESSION["user_id"] = $user["id"];
                $_SESSION["username"] = $user["username"];
                echo "Login successful!";
                // Redirect to a secure page or home page
                header("Location: secure_page.php"); // Replace with your secure page
                exit();
            } else {
                // Password mismatch
                $error = "Incorrect password.";
            }
        } else {
            // User does not exist
            $error = "User not found.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <?php
    // Display any error messages
    if (isset($error)) {
        echo "<p style='color: red;'>$error</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username">

        <label for="password">Password:</label>
        <input type="password" id="password" name="password">

        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Function to handle user login
function loginUser($username, $password)
{
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to retrieve user data
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";  // Adjust column names if different
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Successful login
            session_start();
            // Store user information in session (important for tracking user)
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            return true; // Login successful
        } else {
            return false; // Password incorrect
        }
    } else {
        return false; // User not found
    }

    $conn->close();
}

// Example usage (handling the login form)

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        // Redirect to a protected page or display a success message
        header("Location: protected_page.php"); // Replace with your protected page URL
        exit();
    } else {
        $error = "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
<?php } ?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login with basic authentication.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false  Returns the user ID if login is successful, 
 *                    false if login fails.
 */
function loginUser(string $username, string $password) {
    // ** IMPORTANT SECURITY NOTE:  This is a VERY basic example.
    //   In a real-world application, NEVER store passwords in plain text.
    //   Always use a strong hashing algorithm like bcrypt or Argon2.
    //   This example is for demonstration purposes ONLY.
    
    //  Check if the username and password match our (fake) stored credentials.
    //  In a real application, this would involve querying a database.
    
    //  This uses a simple, insecure dictionary-like approach for demonstration only.
    $credentials = [
        'john_doe' => 'secret_password123',
        'jane_smith' => 'another_secret',
    ];

    if (isset($credentials[$username])) {
        $storedPassword = $credentials[$username];

        // Basic password verification (DO NOT USE IN PRODUCTION)
        if (password_verify($password, $storedPassword)) {
            // Login successful - Get the user ID (for demonstration)
            return $username;  // Or, you would typically return the user ID from your database
        } else {
            // Password mismatch
            return false;
        }
    } else {
        // Username not found
        return false;
    }
}

// ** Example Usage (for testing) **
// Simulate a login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        echo "Login successful!  Welcome, " . $username . "!";
    } else {
        echo "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

<h2>User Login</h2>

<form method="post" action="">
    Username: <input type="text" name="username" placeholder="Enter username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter password"><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values!)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Session handling
session_start();

// Function to handle user login
function loginUser($username, $password) {
  // Database connection
  $conn = new mysqli($host, $username, $password, $database);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Bind parameters to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true; // Login successful
    } else {
      return false; // No user found or multiple users with the same username
    }

    $stmt->close();
  } else {
    // Error in query execution
    echo "Query execution failed: " . $conn->error;
    return false;
  }
  $conn->close();
}


// Example Usage (Demonstration -  Do NOT use this directly in production)
if (isset($_POST['login_username']) && isset($_POST['login_password'])) {
  $username = $_POST['login_username'];
  $password = $_POST['login_password'];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Login failed - Display error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (preg_match("/^[a-zA-Z0-9_]+$/", $username) == 0) {
    $error_message = "Username must contain only letters, numbers, and underscores.";
  } else {
    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query (use prepared statements for security!)
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      // Bind the parameters (for security)
      $stmt->bind_param("s", $username, $password);

      // Execute the query
      if ($stmt->execute()) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
          // User found, set session variables
          session_start();
          $_SESSION["username"] = $username;
          $result->fetch_assoc(); // Get the user data
          $stmt->close();

          // Redirect to a secure page or display a success message
          header("Location: secure_page.php"); // Replace with your secure page
          exit();
        } else {
          $error_message = "Incorrect username or password.";
          $stmt->close();
        }
      } else {
        $error_message = "Query execution failed.";
        $stmt->close();
      }
    } else {
      $error_message = "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      $error = "Connection failed: " . $conn->connect_error;
    } else {
      // Prepare and execute the query
      $stmt = $conn->prepare("SELECT username, password FROM users WHERE username = ?");
      $stmt->bind_param("s", $username); // "s" indicates a string
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 0) {
        $error = "Invalid username or password.";
      } else {
        $row = $result->fetch_assoc();
        if (password_verify($password, $row["password"])) {
          // Password matches!  Set session variables
          session_start();
          $_SESSION["username"] = $username;
          $error = "Login successful!";
        } else {
          $error = "Incorrect password.";
        }
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - see explanation below)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";  // Use prepared statements (see below)
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      $user_data = $result->fetch_assoc();

      // Verify the password (very important - don't store passwords in plain text!)
      if (password_verify($password, $user_data["password"])) {
        // Login successful - store session data (example)
        session_start();
        $_SESSION["user_id"] = $user_data["id"];
        $_SESSION["username"] = $user_data["username"];
        echo "Login successful! <a href='welcome.php'>Welcome, " . $user_data["username"] . "</a>";
      } else {
        $error_message = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
session_start();

// Check if the registration form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user data from the form
    $username = $_POST["username"];
    $password = $_POST["password"];
    $confirm_password = $_POST["confirm_password"];

    // Validate input
    if (empty($username) || empty($password) || empty($confirm_password)) {
        $error_message = "All fields are required.";
    } else if ($password != $confirm_password) {
        $error_message = "Passwords do not match.";
    } else {
        // Hash the password using password_hash()
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Insert the new user into the database
        $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";

        if ($conn->query($sql) === TRUE) {
            echo "New user created successfully";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Register</title>
</head>
<body>

  <h2>Register</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    Confirm Password: <input type="password" name="confirm_password" required><br><br>
    <input type="submit" value="Register">
  </form>

  <p>Already have an account? <a href="login.php">Login</a></p>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_pass = "your_db_password";
$db_name = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (
    $username == "admin" && $password == "password" // Hardcoded credentials - **NEVER DO THIS IN PRODUCTION!**
  ) {
    // Successful login
    session_start();
    $_SESSION["username"] = $username;
    $error = ""; // Clear any previous errors
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)): ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php endif; ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Username" value="<?php echo htmlspecialchars($_POST['username'] ?? ''); ?>">
    Password: <input type="password" name="password" placeholder="Your Password">
    <button type="submit">Login</button>
  </form>

  <p>Not have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security!)
  if (empty($username) || empty($password)) {
    $error[] = "Username and Password must be filled.";
  }

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query with prepared statements (HIGHLY RECOMMENDED)
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind parameters to the statement
  $stmt->bind_param("ss", $username, $password);  // "ss" means two strings

  // Execute the statement
  if (!$stmt->execute()) {
    echo "Error: " . $stmt->error;
    $stmt->close();
    $conn->close();
    exit();
  }

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found!
    // You can now redirect to a different page or display a welcome message
    $row = $result->fetch_assoc();
    //Set session variables.  This is generally the best way to manage user data.
    session_start();
    $_SESSION["user_id"] = $row["id"];
    $_SESSION["username"] = $row["username"];

    echo "Login successful!  Redirecting...";
    header("Location: welcome.php"); // Redirect to a welcome page or a secure area
    $stmt->close();
    $conn->close();
    exit();
  } else {
    // User not found
    echo "Invalid username or password.";
    $stmt->close();
    $conn->close();
    exit();
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - REPLACE THESE WITH YOUR ACTUAL VALUES
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

/**
 * User Login Function
 *
 * This function handles user login verification and session management.
 *
 * @param string $username The username entered by the user.
 * @param string $password The password entered by the user.
 * @return bool True on successful login, false otherwise.
 */
function loginUser($username, $password) {
    // 1. Validate Input (Important for security - prevent SQL injection)
    $username = trim($username); // Remove leading/trailing whitespace
    $password = trim($password);

    if (empty($username) || empty($password)) {
        return false; // Require both username and password
    }

    // 2. Database Query
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Use prepared statements to prevent SQL injection (HIGHLY RECOMMENDED)
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username); // "s" indicates a string parameter

    if ($stmt->execute() === false) {
        die("Query failed: " . $stmt->error);
    }

    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        $stmt->close();
        $conn->close();
        return false; // User not found
    }

    $user = $result->fetch_assoc();
    $stmt->close();
    $conn->close();

    // 3. Password Verification
    if (password_verify($password, $user['password'])) {
        // 4. Session Management
        session_start();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        return true;
    } else {
        return false; // Password incorrect
    }
}

// Example Usage (Demonstration - NOT recommended for direct use in a web app)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    if (loginUser($username, $password)) {
        echo "Login successful! You are now logged in.";
        // Redirect to a protected page or display a welcome message.
    } else {
        echo "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

<h2>Login</h2>

<form method="post" action="">
    Username: <input type="text" name="username" required><br>
    Password: <input type="password" name="password" required><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database configuration
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_username";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !filter_var($username, FILTER_VALIDATE_REGULAR)) {
    $error_message = "Invalid username.  Please enter a valid email or username.";
  } else {
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to select the user
    $sql = "SELECT id, username, email FROM users WHERE username = '$username' OR email = '$username'";  //Using '$username' and '$username' to handle both email and username
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
      // User found, check the password
      $user_data = $result->fetch_assoc();
      if (password_verify($password, $user_data["password"])) {
        // Password matches, login successful
        // Session management (for security - important!)
        session_start();
        $_SESSION["user_id"] = $user_data["id"];
        $_SESSION["username"] = $user_data["username"];
        $_SESSION["email"] = $user_data["email"];

        // Redirect to a secure page
        header("Location: secure_page.php"); // Replace 'secure_page.php' with your desired secure page
        exit();
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username or Email: <input type="text" name="username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_password = 'your_db_password';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get user input
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (IMPORTANT - This is a basic example, enhance security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } elseif (mysqli_num_rows(mysqli_query(mysqli_connect($db_host, $db_user, $db_password), "SELECT * FROM users WHERE username = '$username'") ) > 0) {
    $error_message = "Invalid username or password.";
  }

  // Hash password (VERY IMPORTANT for security - never store plain text passwords)
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // Attempt to authenticate
  // This example shows how to compare with a hashed password stored in the database.
  //  In a production environment, your code should compare the hashed password
  //  against the one stored in the database.

  // Check if the user exists and password matches
  if (mysqli_num_rows(mysqli_query(mysqli_connect($db_host, $db_user, $db_password), "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'") ) > 0) {
    // User authentication successful!
    session_start();
    $_SESSION["username"] = $username; // Store username in session
    // Redirect to a secure page after successful login
    header("Location: secure_page.php"); // Replace with your secure page URL
    exit(); // Stop further execution
  } else {
    $error_message = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register here</a></p> <!-- Replace with your registration page -->

</body>
</html>


<?php
// ... (database connection setup)

// Example of a prepared statement (replace the string concatenation with this)
$stmt = mysqli_prepare(mysqli_connect($db_host, $db_user, $db_password), "SELECT * FROM users WHERE username = ? AND password = ?");

if ($stmt) {
    mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password); // "ss" means two strings
    mysqli_stmt_execute($stmt);

    // Get the result
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // User authentication successful!
        session_start();
        $_SESSION["username"] = $username;
        header("Location: secure_page.php");
        exit();
    } else {
        $error_message = "Invalid username or password.";
    }

    mysqli_stmt_close($stmt);
} else {
    // Handle the error if the prepared statement could not be prepared.
    $error_message = "Error preparing statement.";
}
?>


<?php

// Database configuration
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_password = 'your_db_password';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password cannot be empty.";
    } else {
        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Attempt to authenticate
        $result = mysqli_query(mysqli_connect($db_host, $db_user, $db_password), "SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'");

        if (mysqli_num_rows($result) > 0) {
            // User authentication successful!
            session_start();
            $_SESSION["username"] = $username;
            header("Location: secure_page.php");
            exit();
        } else {
            $error_message = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" required>
        Password: <input type="password" name="password" required>
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_user = "your_db_user";
$db_password = "your_db_password";
$db_name = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (VERY IMPORTANT - prevent SQL injection)
  $username = mysqli_real_escape_string($conn, $username);
  $password = mysqli_real_escape_string($conn, $password);

  // Query to authenticate the user
  $query = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = mysqli_query($conn, $query);

  if ($result) {
    // Check if the query returned any rows
    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);

      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Authentication successful!
        // Set session variables to track the user
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        // You might want to store other user information here too
        
        // Redirect the user to the protected area
        header("Location: protected_page.php"); // Replace with your protected page URL
        exit(); // Important: Stop further script execution
      } else {
        // Incorrect password
        echo "<p>Incorrect password.</p>";
      }
    } else {
      // User not found
      echo "<p>User not found.</p>";
    }
  } else {
    // Query error
    echo "<p>Error querying the database.</p>";
  }
}

// Start the database connection
$conn = new mysqli($db_host, $db_user, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form action="" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials - Replace with your actual values!
$servername = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty!";
  } elseif (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'")->num_rows == 0) {
    $error = "Invalid username.";
  } elseif (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'")->fetch_assoc()["password"] !== $password) {
    $error = "Invalid password.";
  } else {
    // Successful login - Redirect to a secure page or perform other actions
    session_start();
    $_SESSION["username"] = $username; // Store username in session
    header("Location: welcome.php"); // Redirect to welcome page
    exit(); // Stop further execution
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here</a>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to check user credentials
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Bind the values (using prepared statements to prevent SQL injection)
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" means two strings

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();

    // Check if a user was found
    if ($row) {
      // User found!  You can do things like set a session
      $_SESSION['username'] = $row['username']; // Store username in session
      $_SESSION['user_id'] = $row['id']; // Store user ID
      return true;
    } else {
      return false;
    }
  } else {
    // Error executing query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important!) - Add more validation as needed
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty!";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Login successful - Redirect to a protected page or display a welcome message
      echo "Login successful!  You are now logged in.";
      // Redirect to your main page or protected content
      header("Location: /protected_page.php"); // Replace with your protected page
      exit;
    } else {
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual credentials!
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("s", $username);  // "s" indicates a string parameter

  // Execute the query
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Verify the password
      if (password_verify($password, $row["password"])) {
        // Successful login
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $row["username"];
        return true;
      } else {
        // Incorrect password
        return false;
      }
    } else {
      // User not found
      return false;
    }
  } else {
    // Query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage:

// 1. Form submission (in your HTML form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to your welcome page or desired location
    header("Location: welcome.php"); // Replace with your welcome page
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic example - improve for production)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (
    $username == "admin" && $password == "password" // Replace with your actual admin credentials
  ) {
    // Authentication successful
    session_start();
    $_SESSION["username"] = $username; // Store username in session
    header("Location: /welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>
    Don't have an account? <a href="register.php">Register here</a>.
  </p>

</body>
</html>


<?php
// ... (database connection details)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Prepare the SQL query
  $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = ?");

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $user = $result->fetch_assoc();
      session_start();
      $_SESSION["username"] = $username;
      header("Location: /welcome.php");
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  } else {
    $error = "Database error: " . $stmt->error;
  }
}
?>


<?php

// Database credentials (Replace with your actual values)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_pass = 'your_password';

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      // Fetch the row
      $user = $result->fetch_assoc();

      // Successful login
      // You can store session information here
      // Example:
      // $_SESSION['user_id'] = $user['id'];
      // $_SESSION['username'] = $user['username'];

      // Redirect the user
      header("Location: user_dashboard.php"); // Replace with your desired redirect page
      exit();

    } else {
      // Login failed
      return false;
    }

  } else {
    // Query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (From a login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Crucial for security!)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty!";
  } else {
    // Call the login function
    if (loginUser($username, $password)) {
      // Login successful, redirect here
    } else {
      // Login failed, display an error message
      echo "Invalid username or password!";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form action="" method="post">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query to check for the username and password
      $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
      $result = $conn->query($sql);

      if ($result->num_rows == 0) {
        $error_message = "Invalid username or password.";
      }

      if ($result->num_rows > 0) {
        // User found, set session variables
        session_start();
        $_SESSION["username"] = $username;
        $error_message = "Login successful!";

        // Redirect to a secure page (e.g., dashboard)
        header("Location: dashboard.php");  // Replace with your dashboard page
        exit(); // Stop further script execution
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// ... (Database credentials - same as before) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input
  if (empty($username) || empty($password)) {
    $error_message = "Username and password must be filled.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    } else {
      // Prepare the SQL query (using prepared statement)
      $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
      $stmt = $conn->prepare($sql);

      // Bind parameters
      $stmt->bind_param("ss", $username, $password); // "ss" means two strings

      // Execute the query
      $stmt->execute();

      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 0) {
        $error_message = "Invalid username or password.";
      } else {
        // User found, set session variables
        session_start();
        $_SESSION["username"] = $username;
        $error_message = "Login successful!";

        // Redirect
        header("Location: dashboard.php");
        exit();
      }

      // Close the statement
      $stmt->close();
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Bind parameters to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);

  // Execute the query
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found - fetch the data
    $user = $result->fetch_assoc();

    // Authentication successful
    // Store session information (example)
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Redirect the user to a protected page or home page
    header("Location: home.php"); // Replace 'home.php' with your desired URL
    exit(); // Important to stop further execution

  } else {
    // Authentication failed
    return false; // Indicate failed login
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (inside your login form HTML)
// Assuming you have a form with input fields 'username' and 'password'
// and a submit button.
// After the form is submitted, you would call the function like this:

// if (isset($_POST['login'])) {
//   $username = $_POST['username'];
//   $password = $_POST['password'];
//   loginUser($username, $password);
// }
?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_username";
$db_password = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, start a session
    session_start();
    $row = $result->fetch_assoc();
    $_SESSION['username'] = $row['username'];
    $_SESSION['id'] = $row['id']; // Assuming you have an 'id' column in your users table

    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}

// Example Usage:  (This would typically be part of a form submission handler)

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a protected page
    header("Location: protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  // Sanitize input if needed

  // Execute the query
  $result = $conn->query($sql);

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    // User found, set a session variable to indicate login
    session_start();
    $_SESSION["username"] = $username;
    echo "Login successful!";
    // Redirect to a protected page or home page
    header("Location: /protected_page.php"); // Replace with your desired destination.  For example, a specific page that requires login
    exit();

  } else {
    echo "Incorrect username or password.";
  }

  // Close the connection
  $conn->close();
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php
// ... (rest of the login code)

  // Hash the password
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // ... (rest of the code, using $hashed_password in the SQL query)

?>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password);  // "ss" means two strings

  // Execute the query
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // User found, set session variables
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      return true; // Login successful
    } else {
      return false; // User not found
    }
  } else {
    return false; // Query execution failed
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate username and password (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Attempt to log in
    $login_result = loginUser($username, $password);

    if ($login_result) {
      // Login successful, redirect to a secure page or display a welcome message
      echo "Welcome, " . $_SESSION["username"] . "! You have successfully logged in.";
      // Optionally redirect:
      header("Location: welcome.php"); // Redirect to a welcome page.  Make sure 'welcome.php' exists
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

</body>
</html>


function loginUser($username, $password) {
  // ... (Database connection code) ...

  // Hash the password
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Use prepared statement
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $hashed_password); // Pass the hashed password

  // Execute the query
  if ($stmt->execute()) {
    // ... (rest of the loginUser function) ...
  }

  // ... (close statements and connection) ...
}


<?php

// Database credentials (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate inputs (Important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password must be filled.";
    } elseif (mysqli_stmt_prepare($conn, "SELECT username, password FROM users WHERE username = ?") === false) {
        die("Error preparing statement: " . print_r(mysqli_stmt_error($conn), true));
    }


    // Attempt to authenticate
    if (mysqli_stmt_bind_param($conn, "s", $username) === false) {
        die("Error binding parameter: " . print_r(mysqli_stmt_error($conn), true));
    }
    if (mysqli_stmt_execute($conn) === false) {
        die("Error executing statement: " . print_r(mysqli_stmt_error($conn), true));
    }

    $result = mysqli_stmt_get_result($conn);
    if (mysqli_num_rows($result) == 0) {
        $error = "Invalid username or password.";
    } else {
        mysqli_stmt_close($result);

        // If authentication is successful, set a session variable
        session_start();
        $_SESSION["username"] = $username;
        $error = "";  // Clear any previous errors
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();

    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
<?php } ?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Enter your username" />
    Password: <input type="password" name="password" placeholder="Enter your password" />
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database connection details
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (VERY IMPORTANT - prevents SQL injection)
  if (empty($username) || empty($password)) {
    $error = "Username and Password must be filled.";
  } else {
    // Database query
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query -  IMPORTANT: Use prepared statements for security!
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      $stmt->bind_param("ss", $username, $password); // "ss" specifies string parameters
      $stmt->execute();
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found
        session_start();
        $_SESSION["user_id"] = $result->fetch_assoc()["id"];
        $_SESSION["username"] = $username;
        echo "Login successful!";
        header("Location: /welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error = "Invalid username or password.";
      }
    } else {
      $error = "Error preparing SQL statement.";
    }
  }
}

// Start the form
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php
  // Display error messages
  if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  }
  ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Authentication successful!
      // Store the user's session information.  Important security measure.
      $_SESSION['user_id'] = $row['id']; // Assuming 'id' is the primary key of the users table
      $_SESSION['username'] = $username;
      return true;
    } else {
      return false;
    }
  } else {
    // Query error
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage:  Demonstration - Do not include in production code
// You would normally get this from a form submission.
//echo "Login Attempt";
//if (isset($_POST['username']) && isset($_POST['password'])) {
//  $username = $_POST['username'];
//  $password = $_POST['password'];
//  if (loginUser($username, $password)) {
//    echo "Login successful!  Redirecting...";
//    header("Location: welcome.php"); // Redirect to a welcome page
//    exit;
//  } else {
//    echo "Invalid username or password.";
//  }
//}
//else {
//   echo "Login Form incomplete.";
//}


//Example of user creation - Uncomment for testing purposes.
/*
function createUser($username, $password, $email){
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query
  $sql = "INSERT INTO users (username, password, email) VALUES (?, ?, ?)";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("sss", $username, $password, $email);

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    echo "New record created successfully";
  } else {
    echo "Error: " . $sql . "<br>" . $conn->error;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}
*/



?>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Session handling
session_start();

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Bind the parameters for security (important to prevent SQL injection)
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute()) {
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // Set session variables for the logged-in user
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true; // Login successful
    } else {
      return false; // No user found or incorrect password
    }
  } else {
    return false; // Error executing query
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example Usage (Demonstration -  This would typically be within a form submission)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful! You are now logged in as " . $_SESSION['username'];
    // Redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Replace with your protected page
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for the username and password
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the statement
    if ($stmt->execute()) {
      // Get the result
      $result = $stmt->get_result();

      if ($result->num_rows == 1) {
        // User found, retrieve user data
        $user = $result->fetch_assoc();
        // Set session variables to store the user information
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        return true; // Login successful
      } else {
        // User not found
        return false;
      }
    } else {
      // Error executing statement
      error_log("Query error: " . $conn->error); // Log the error for debugging
      return false;
    }
  } else {
    // Error preparing statement
    error_log("Statement preparation error");
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (Form Handling - Not a complete form, just demonstrating the login function)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a secure page or display a welcome message
    header("Location: /welcome.php"); // Replace with your welcome page URL
    exit();
  } else {
    // Handle login failure (display error message)
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">

    <label for="password">Password:</label>
    <input type="password" id="password" name="password">

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($query);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    // Check if a user was found
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // User found, you can now do something with the user data
      // Example:  Set a session variable
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true;
    } else {
      return false; // User not found
    }
  } else {
    // Error executing the query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage:  (This would typically come from a form submission)
// $username = $_POST['username'];
// $password = $_POST['password'];

// if (loginUser($username, $password)) {
//   echo "Login successful!";
//   // Redirect to a protected page or take other actions
// } else {
//   echo "Invalid username or password.";
// }


?>


<?php

// Database configuration (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $stmt = $conn->prepare($sql);

  // Execute the query
  $stmt->execute();

  // Store the result
  $result = $stmt->get_result();

  // Check if a user was found
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $user['password'])) {
      // Login successful - set session variables
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];

      return true; // Indicate successful login
    } else {
      return false; // Indicate incorrect password
    }
  } else {
    return false; // Indicate user not found
  }

  // Close the database connection
  $stmt->close();
  $conn->close();
}


// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - added basic validation)
  if (empty($username) || empty($password)) {
    echo "<p style='color:red;'>Username and password cannot be empty.</p>";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Login successful - redirect to the user's dashboard or homepage
      header("Location: dashboard.php");
      exit();
    } else {
      echo "<p style='color:red;'>Invalid username or password.</p>";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and Password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email address.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    // Check if the query returned any results
    if ($result->num_rows > 0) {
      // Get the data from the result
      $user_data = $result->fetch_assoc();

      // Verify the password
      if (password_verify($password, $user_data["password"])) {
        // Successful login - set session variables
        session_start();
        $_SESSION["user_id"] = $user_data["id"];
        $_SESSION["username"] = $username;
        echo "Login successful! <a href='welcome.php'>Welcome, " . $username . "</a>"; // Redirect to a welcome page
      } else {
        $error = "Incorrect password.";
      }
    } else {
      $error = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here</a>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to authenticate user credentials
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT id, username, password FROM users WHERE username = ?";
  $stmt = $conn->prepare($query);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind the parameters
  $stmt->bind_param("s", $username);  // "s" indicates a string parameter

  // Execute the query
  if (!$stmt->execute()) {
    die("Error executing query: " . $stmt->error);
  }

  // Get the result
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    $stmt->close();
    return false; // User not found
  }

  $user = $result->fetch_assoc();
  $stmt->close();

  // Verify password
  if (password_verify($password, $user['password'])) {
    // Successful login
    session_start();
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    return true;
  } else {
    // Incorrect password
    return false;
  }
}

// Example usage (in a form submission, for example)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with the URL of your protected page
    exit();
  } else {
    // Login failed - Display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


function insertUser($username, $password) {
  // Hash the password
  $hashed_password = password_hash($password, PASSWORD_DEFAULT);

  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  $query = "INSERT INTO users (username, password) VALUES (?, ?)";
  $stmt = $conn->prepare($query);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  $stmt->bind_param("ss", $username, $hashed_password); // "ss" for string parameters

  if (!$stmt->execute()) {
    die("Error executing query: " . $stmt->error);
  }

  $stmt->close();
  $conn->close();
}


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error_message = "Invalid email address.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check the connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ? LIMIT 1";
    $stmt = $conn->prepare($sql);

    if ($stmt) {
      // Bind the parameters
      $stmt->bind_param("ss", $username, $password);

      // Execute the query
      $stmt->execute();

      // Get the result
      $result = $stmt->get_result();

      // Check if a user was found
      if ($result->num_rows == 1) {
        // User found, set session variables
        session_start();
        $user_id = $result->fetch_assoc()["id"];
        $_SESSION["user_id"] = $user_id;
        $_SESSION["username"] = $username;

        // Redirect to a protected page
        header("Location: protected_page.php"); // Replace with your protected page
        exit(); // Important to stop further execution
      } else {
        $error_message = "Invalid username or password.";
      }
    } else {
      $error_message = "Error preparing statement.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Email Address">
    Password: <input type="password" name="password" placeholder="Your Password">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to registration page -->
</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check for the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found - Fetch data from the result set
    $user = $result->fetch_assoc();

    // Create a session
    session_start();

    // Store user data in the session
    $_SESSION['user_id'] = $user['id'];  // Assuming 'id' is the user's ID column
    $_SESSION['username'] = $user['username']; // Store username as well

    // Redirect to a secure page (e.g., the homepage)
    header("Location: welcome.php");
    exit(); // Important: Stop further script execution
  } else {
    // User not found
    return false;
  }

  $conn->close();
}

// Example Usage (handling login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (very important - see explanation below)
  if (empty($username) || empty($password)) {
    $error = "Username and Password must be filled.";
  } else {
    // Call the loginUser function
    $login_result = loginUser($username, $password);

    if ($login_result === false) {
      $error = "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) {
    echo "<p style='color:red;'>$error</p>";
  } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login using a simple (and potentially insecure) 
 * username/password comparison.
 *
 * **WARNING:** This is a basic example for demonstration purposes only.
 *  For production environments, use a secure authentication system 
 *  like hashing passwords with bcrypt or Argon2, and consider using 
 *  a library or framework for managing user sessions and security.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return bool True if login is successful, false otherwise.
 */
function loginUser(string $username, string $password)
{
    // *** IMPORTANT SECURITY WARNING:  Do NOT store passwords in plain text. ***
    // This is just for demonstration purposes.  A real system would hash the password.

    // ** Replace with your database connection code**
    $db_host = 'localhost';
    $db_name = 'your_database_name';
    $db_user = 'your_database_user';
    $db_password = 'your_database_password';

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Sanitize input -  This is extremely important to prevent SQL injection!
    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);

    // SQL Query -  Be very careful with this.  Validate inputs before constructing queries.
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();

        // Compare passwords -  Again, *never* store passwords in plain text.
        if (password_verify($password, $row['password'])) {
            // Login successful!

            // ***  Set Session (Replace with your preferred session management method) ***
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;

            return true;
        } else {
            // Password mismatch
            return false;
        }
    } else {
        // No user found
        return false;
    }

    // Close connection
    $conn->close();
}


// --- Example Usage ---
// Assuming you have a form that captures the username and password:

// If the login is successful:
// echo "Login successful!  Welcome, " . $_SESSION['username'] . "!";

// If the login fails:
// echo "Login failed. Please check your credentials.";


?>


<?php

// Database credentials (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";

  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, set session variables for authentication
    $row = $result->fetch_assoc();
    $_SESSION["user_id"] = $row["id"];
    $_SESSION["username"] = $row["username"];
    // You might want to store other user information here if needed
    
    // Redirect to a secure page
    header("Location: secure_page.php"); // Replace 'secure_page.php' with the appropriate URL
    exit();
  } else {
    // User not found
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="login.php" method="POST">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle the login process
function login($username, $password) {
  // Connect to the database
  $conn = new mysqli($username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the query
  $stmt = $conn->prepare("SELECT password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username);  // "s" indicates a string parameter
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if a user with the given username exists
  if ($result->num_rows == 0) {
    return false; // User doesn't exist
  }

  $user = $result->fetch_assoc();
  $stored_password = $user['password'];

  // Verify the password
  if (password_verify($password, $stored_password)) {
    // Password is correct, set session variables
    session_start();
    $_SESSION['username'] = $username;
    return true; // Login successful
  } else {
    return false; // Password incorrect
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}


// Example usage (handling login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (login($username, $password)) {
    // Redirect to a secure page or display a success message
    header("Location: secure_page.php"); // Replace with your secure page
    exit();
  } else {
    // Display an error message
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>  <!-- Link to a registration page -->

</body>
</html>


     $hashed_password = password_hash($password, PASSWORD_DEFAULT);
     // Then, insert $hashed_password into the database.
     

3. **Input Validation and Sanitization:**
   - **ALWAYS** validate and sanitize user input *before* using it in any query or operation. This includes:
     - Checking the data type and format (e.g., ensure the username is alphanumeric).
     - Using `filter_var()` to sanitize data (e.g., `filter_var($username, FILTER_SANITIZE_STRING)`).
     - Escaping any output before displaying it to prevent XSS vulnerabilities.

4. **CSRF Protection:** Implement Cross-Site Request Forgery (CSRF) protection. This is a common web security vulnerability that involves attackers tricking a user's browser into submitting malicious requests to your website without their knowledge.

5. **Session Management:**
   -  Set an expiration time for session variables to prevent session hijacking.
   -  Implement session regeneration after login to further enhance security.

6. **Logging:** Implement logging to track login attempts (successful and failed) for security auditing and troubleshooting.

7. **Rate Limiting:**  Implement rate limiting to prevent brute-force attacks (e.g., limiting the number of login attempts from a single IP address).

8. **Testing:** Thoroughly test your login functionality, including:
   - Successful login
   - Failed login (invalid credentials)
   - Brute-force attack attempts
   - CSRF attacks

9. **HTTPS:**  Always use HTTPS to encrypt the communication between the user's browser and your server.

**Example of PDO (for modern development):**



<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_user = "your_username";
$db_password = "your_password";
$db_name = "your_database_name";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $query = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement (important for security - prevents SQL injection)
  $stmt = $conn->prepare($query);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute()) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // User found, set session variables
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];
      return true; // Login successful
    } else {
      return false; // User not found
    }

  } else {
    return false; // Query error
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}



// Example usage:
// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (VERY IMPORTANT - add more robust validation here)
  if (empty($username) || empty($password)) {
    echo "Username and password must be filled.";
  } else {
    // Attempt to login
    if (loginUser($username, $password)) {
      // Redirect to a secure page or display a welcome message
      header("Location: /welcome.php");  // Adjust path as needed
      exit();
    } else {
      echo "Invalid username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

/**
 * Logs in a user based on their username and password.
 *
 * @param string $username The username.
 * @param string $password The password.
 * @return int|false User ID if successful, false if not.
 */
function loginUser(string $username, string $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT id, username FROM users WHERE username = ? AND password = ?;";

  // Use prepared statement to prevent SQL injection
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // 'ss' indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
      $user = $result->fetch_assoc();
      $userId = $user['id'];
      return $userId;
    } else {
      return false; // User not found
    }
  } else {
    // Handle query errors
    echo "Query failed: " . $conn->error;
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// --- Example Usage ---
// Get username and password from the form (or wherever you get them)
$username = $_POST['username'];
$password = $_POST['password'];

// Check if the login form was submitted
if (isset($_POST['login'])) {
  // Call the login function
  $userId = loginUser($username, $password);

  // Check if the login was successful
  if ($userId) {
    // Redirect the user to a logged-in page, or set a session variable
    session_start();
    $_SESSION['userId'] = $userId;
    $_SESSION['username'] = $username;
    echo "Login successful! You are logged in as " . $username;
    // Redirect to a logged-in page
    header("Location: /loggedin.php"); // Replace with your logged-in page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!-- HTML Form (for simplicity, placed here) -->
<form method="post" action="">
  <label for="username">Username:</label>
  <input type="text" id="username" name="username">
  <br>
  <label for="password">Password:</label>
  <input type="password" id="password" name="password">
  <br>
  <button type="submit" name="login">Login</button>
</form>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - discussed below)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password are required.";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    } else {
      // SQL query to check username and password
      $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
      $result = $conn->query($sql);

      if ($result->num_rows == 1) {
        // User found, check password
        $row = $result->fetch_assoc();
        if (password_verify($password, $row["password"])) {
          // Password matches, login successful
          session_start();
          // Store user information in session
          $_SESSION["user_id"] = $row["id"];
          $_SESSION["username"] = $username;

          // Redirect to a protected page (e.g., dashboard)
          header("Location: dashboard.php"); // Replace with your protected page
          exit();
        } else {
          // Password doesn't match
          $error_message = "Incorrect password.";
        }
      } else {
        // User not found
        $error_message = "User not found.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($_POST['username']) ? htmlspecialchars($_POST['username']) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($_POST['password']) ? htmlspecialchars($_POST['password']) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Link to your registration page -->

</body>
</html>


<?php

// Database connection details (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic example - improve this for production)
  if (empty($username) || empty($password)) {
    $error = "Username and Password are required.";
  } else {
    // Database query
    $conn = new mysqli($host, $username, $password, $database);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'"; // Use prepared statements for security!
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    }

    if ($result->num_rows > 0) {
      // User found, set session variables
      session_start();
      $_SESSION["username"] = $username;
      // Redirect to a secure page or display a welcome message
      header("Location: welcome.php"); // Assuming you have a welcome.php page
      exit();
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" />
    Password: <input type="password" name="password" />
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
session_start();

/**
 * Logs in a user based on username and password.
 *
 * @param string $username The user's username.
 * @param string $password The user's password.
 * @return bool True if login successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // Simulate a database or user store.  In a real application,
  // this would connect to a database to retrieve user information.
  $users = [
    'john.doe' => 'password123',
    'jane.smith' => 'securePass',
  ];

  // Check if the username exists
  if (isset($users[$username])) {
    // Verify the password
    if (password_verify($password, $users[$username])) {
      // Login successful
      $_SESSION['username'] = $username;  // Store username in session
      return true;
    } else {
      // Password does not match
      return false;
    }
  } else {
    // Username does not exist
    return false;
  }
}

/**
 *  Demonstration/Testing Function
 *  This function will show the login form and process the login.
 */
function showLogin() {
    // Start the session
    session_start();

    //Check if user is already logged in
    if (isset($_SESSION['username'])) {
        header("Location: /success.php"); // Redirect to a success page
        exit();
    }

    echo "<!DOCTYPE html>";
    echo "<html lang='en'>";
    echo "<head>";
    echo "<meta charset='UTF-8'>";
    echo "<title>Login</title>";
    echo "</head>";
    echo "<body>";
    echo "<h1>Login</h1>";

    // Check if there's an error message
    if (isset($_SESSION['error'])) {
        echo "<p style='color: red;'>" . htmlspecialchars($_SESSION['error']) . "</p>";
        unset($_SESSION['error']); // Clear error message after displaying
    }

    echo "<form method='post' action='" . htmlspecialchars($_SERVER['PHP_SELF']) . "'>";
    echo "<label for='username'>Username:</label><br>";
    echo "<input type='text' id='username' name='username' required><br><br>";
    echo "<label for='password'>Password:</label><br>";
    echo "<input type='password' id='password' name='password' required><br><br>";
    echo "<button type='submit'>Login</button>";
    echo "</form>";
}


//Example Usage (Demonstration)
if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        echo "<p>Login successful!</p>";
        // Redirect to a protected page or homepage
        header("Location: /home.php");
        exit();
    } else {
        // Handle login failure
        $_SESSION['error'] = "Invalid username or password.";
        showLogin();
    }
} else {
    // Show the login form initially
    showLogin();
}
?>


<?php

// Database credentials - REPLACE WITH YOUR ACTUAL CREDENTIALS!
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL Query to check login
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User exists, retrieve data
    $row = $result->fetch_assoc();
    // Set session variables to track the user
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $row['username'];

    // Redirect to a protected page or display a welcome message
    return true; // Indicate successful login
  } else {
    // User does not exist
    return false; // Indicate failed login
  }

  $conn->close();
}

// Example usage (handling the login form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Example: Redirect to a protected page
    exit();
  } else {
    // Login failed, display an error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

//  Example login form (for testing)
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual database details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_username";
$db_password = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Hash the password for security (using password_hash)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check credentials
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($db_host, $sql);

    if (mysqli_num_rows($result) > 0) {
      $row = mysqli_fetch_assoc($result);
      // Verify the password
      if (password_verify($password, $row["password"])) {
        // If passwords match, set session variables
        session_start();
        $_SESSION["user_id"] = $row["id"];
        $_SESSION["username"] = $username;
        echo "Login successful! <a href='welcome.php'>Welcome, " . $username . "</a>"; // Redirect to a welcome page
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "Username not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
  ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

/**
 * Login function to authenticate users.
 *
 * @param string $username The username provided by the user.
 * @param string $password The password provided by the user.
 * @return int|false  The user ID if login is successful, or false if failed.
 */
function login(string $username, string $password) {
  // **IMPORTANT: NEVER STORE PASSWORDS IN PLAIN TEXT!**
  // This example demonstrates the *concept* of authentication.
  // In a real application, you should hash passwords using a secure algorithm
  // like bcrypt or Argon2.

  // **Simulated User Database (Replace with your actual database connection)**
  $users = [
    'john.doe' => 'password123',
    'jane.smith' => 'securepass',
    'admin' => 'adminpassword'
  ];

  // Check if the username exists in the database
  if (isset($users[$username])) {
    // Compare the provided password with the stored hashed password
    if (password_verify($password, $users[$username])) {  // Use password_verify for secure comparison
      // Login successful
      // Generate a session token (for security)
      $session_token = bin2hex(random_bytes(32));

      // Store the session token in a session variable.
      // **This is a simplified example. In a production environment,
      // use a more robust session management system like PHP's built-in
      // session functions or a dedicated session library.**
      $_SESSION['user_id'] = $username; // Store the username as the user_id.  Better to store a unique ID.
      $_SESSION['session_token'] = $session_token;


      return $username; // Return the username (or user ID)
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // Username does not exist
    return false;
  }
}


// **Example Usage (For testing)**
//  1.  Get username and password from form submission (example)

//  if ($_SERVER["REQUEST_METHOD"] == "POST") {
//    $username = $_POST["username"];
//    $password = $_POST["password"];
//    $loginResult = login($username, $password);

//    if ($loginResult) {
//      echo "Login successful! User ID: " . $loginResult;
//    } else {
//      echo "Login failed.  Invalid username or password.";
//    }
//  }

//  2.  A simple example for demonstration:
//  $user_id = login('john.doe', 'password123');
//  if ($user_id) {
//      echo "User login successful. User ID: " . $user_id;
//  } else {
//      echo "Login failed.";
//  }

?>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_user = "your_db_user";
$db_pass = "your_db_password";
$db_name = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_SANITIZE_STRING)) {
    $error_message = "Invalid username. Please use only alphanumeric characters.";
  } elseif (!filter_var($password, FILTER_SANITIZE_STRING)) {
    $error_message = "Invalid password.  Please use only alphanumeric characters.";
  }

  // Database connection
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Query to check username and password
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  // Check if the query returned any results
  if ($result->num_rows > 0) {
    // User found, set session variables
    session_start();
    $_SESSION["username"] = $username; // Store username in session
    $conn->close();

    // Redirect to a protected page or display a success message
    header("Location: secure_page.php"); // Redirect to a secure page.
    exit();

  } else {
    // User not found
    $conn->close();
    $error_message = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p> <!-- Link to registration page -->

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to validate user input
function validateInput($username, $password) {
  // Basic validation - adjust as needed for your security requirements
  return true; // Always true for this example - *NEVER* use this in a production environment!
}

// Function to handle user login
function loginUser($username, $password) {
  // 1. Check if the username and password are provided
  if (empty($username) || empty($password)) {
    return "Username and password are required.";
  }

  // 2. Database connection (using PDO for better security)
  try {
    $pdo = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // Throw exceptions on errors
  } catch (PDOException $e) {
    return "Error connecting to the database: " . $e->getMessage();
  }

  // 3. SQL query (SELECT query - adjust the column names if necessary)
  $sql = "SELECT * FROM users WHERE username = :username AND password = :password";  // Use parameterized query

  // 4. Prepare and execute the query
  try {
    $stmt = $pdo->prepare($sql);
    $stmt->bindParam(':username', $username);
    $stmt->bindParam(':password', $password);
    $stmt->execute();

    // 5. Check if a row was returned (user found)
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
      // User found - set session variables
      $_SESSION['username'] = $username; // Store username in session
      return "Login successful!";
    } else {
      // User not found
      return "Invalid username or password.";
    }
  } catch (PDOException $e) {
    return "Error executing query: " . $e->getMessage();
  }
}


// --- Example Usage (This is just for demonstration) ---

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Call the loginUser function
  $loginResult = loginUser($username, $password);

  // Display the result
  echo "<p>" . $loginResult . "</p>";

  // Redirect to a different page after login
  if ($loginResult == "Login successful!") {
    header("Location: welcome.php"); // Replace 'welcome.php' with your desired page
    exit();
  }
}
?>


<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php
session_start();

/**
 * Handles user login.
 *
 * @param string $username The username to authenticate.
 * @param string $password The password to authenticate.
 * @return bool True if login was successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // In a real application, you would store the password securely (hashed)
  // and compare the hashed password with the provided password.
  // This example demonstrates a simple (and insecure) comparison for demonstration purposes.

  // Hardcoded credentials (FOR DEMO ONLY - NEVER DO THIS IN PRODUCTION!)
  $validUsers = [
    'john.doe' => 'password123',
    'jane.smith' => 'securePass42'
  ];

  if (isset($validUsers[$username])) {
    if ($validUsers[$username] == $password) {
      // Login successful
      $_SESSION['username'] = $username;
      return true;
    } else {
      return false; // Incorrect password
    }
  } else {
    return false; // User not found
  }
}

// --- Example Usage (Demonstration) ---

// Check if the user is already logged in
if (isset($_POST['login'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Redirect to a protected page
    header("Location: /protected_page.php");  // Replace with your actual protected page
    exit(); // Important to stop further execution after redirection
  } else {
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h1>User Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username" placeholder="john.doe" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" name="login" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual values)
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate inputs (Important for security!)
  if (empty($username) || empty($password)) {
    $error = "Username and Password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL) && !preg_match("/^[a-zA-Z0-9]+$/", $username)) {
    $error = "Invalid username. Please use a valid email or alphanumeric characters only.";
  } else {
    // Database connection
    $conn = new mysqli($host, $username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check the login
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    // Check if the query was successful and if a user was found
    if ($result->num_rows > 0) {
      // User found, set session variables and redirect
      session_start();
      $_SESSION["username"] = $username; // Store the username in the session
      // Optionally store other user data here, like roles/permissions
      // if you have a more complex system.

      // Redirect the user to the home page or protected area
      header("Location: home.php"); // Replace 'home.php' with your desired page
      exit();
    } else {
      $error = "Incorrect username or password.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form input
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important to prevent SQL injection and other issues)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Connect to the database
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL query (using prepared statements -  VERY IMPORTANT!)
        $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

        // Bind the values to the query
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

        // Execute the query
        if ($stmt->execute()) {
            // Get the result
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found, set session variables
                session_start(); // Start a session if not already started
                $_SESSION["username"] = $username;
                $result->fetch_assoc(); // Fetch the user data (for consistency)

                // Redirect to a protected page or display a success message
                header("Location: /protected_page.php"); // Replace with your protected page URL
                exit();

            } else {
                $error = "Invalid username or password.";
            }

        } else {
            $error = "Query execution failed: " . $conn->error;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

<h1>Login</h1>

<?php
if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

    // Prepare the statement
    $stmt = $conn->prepare($sql);

    // Bind the parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the statement
    if ($stmt->execute() === TRUE) {
        // Get the result
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $user_data = $result->fetch_assoc();
            // Successful login
            session_start();
            // Store user data in session
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            return true;
        } else {
            // User not found
            return false;
        }
    } else {
        // Error executing the query
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example usage (within a form or other input method)
// $username = $_POST['username'];
// $password = $_POST['password'];
// if (loginUser($username, $password)) {
//     // Login successful, redirect to a secure page
//     header("Location: secure_page.php");
//     exit();
// } else {
//     // Login failed, display an error message
//     echo "Invalid username or password.";
// }

?>


<?php

// Database credentials - Replace with your actual values
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);
  $stmt->bind_param("ss", $username, $password); // 'ss' indicates two string parameters
  $stmt->execute();

  // Get the result
  $result = $stmt->get_result();

  // Check if any rows were returned
  if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();  // Fetch the first row as an associative array
    return $user; // Return user data if login is successful
  } else {
    return false; // Return false if login fails
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (Demonstration)

// Get username and password from form (or wherever you get them)
$username = $_POST['username'];
$password = $_POST['password'];

// Call the login function
$loggedInUser = loginUser($username, $password);

// Check if the login was successful
if ($loggedInUser) {
  // User is logged in - Now you can redirect to a different page,
  // display a welcome message, or access user data.
  echo "Welcome, " . $loggedInUser['username'] . "!";
  // You can also do things like:
  // session_start();
  // $_SESSION['user_id'] = $loggedInUser['id']; // Example: Store user ID in session
} else {
  // Login failed
  echo "Invalid username or password.";
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form action="" method="post">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$database = "your_db_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get the username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate the input (important for security!)
    if (empty($username) || empty($password)) {
        $error_message = "Username and Password must be filled.";
    } else {
        // Query the database
        $conn = new mysqli($host, $username, $password, $database);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query - **IMPORTANT:  Use parameterized queries for security!**
        $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

        // Prepare the statement
        $stmt = $conn->prepare($sql);

        if ($stmt) {
            // Bind the parameters
            $stmt->bind_param("ss", $username, $password);

            // Execute the statement
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found
                $row = $result->fetch_assoc();
                $user_id = $row["id"];
                $username = $row["username"];
                // Set session variables
                session_start();
                $_SESSION["user_id"] = $user_id;
                $_SESSION["username"] = $username;
                echo "Login successful!";
                // Redirect to a protected page (e.g., dashboard)
                header("Location: dashboard.php"); // Replace with your protected page
                exit(); // Important to stop further execution
            } else {
                $error_message = "Invalid username or password.";
            }
        } else {
            $error_message = "Error preparing the statement.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h1>User Login</h1>

    <?php if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <button type="submit">Login</button>
    </form>

</body>
</html>


<?php

// Database credentials - Replace with your actual values
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to fetch user data
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found, create a session
    // Set a session variable to indicate login
    session_start();
    $_SESSION['username'] = $username; // Store username in session
    $_SESSION['user_id'] = $result->fetch_assoc()['id']; // Example: Store user ID as well
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example Usage (from a form submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // User logged in successfully
    header("Location: /welcome.php"); // Redirect to a welcome page (replace with your URL)
    exit();
  } else {
    // Login failed
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

// HTML Form for Login (to be embedded in your HTML page)
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Form handling (POST method)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Basic - should be more robust in a real application)
    if (empty($username) || empty($password)) {
        $error_message = "Username and password cannot be empty.";
    } else {
        // Authenticate against the database
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL Query (Using prepared statements for security!)
        $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
        $stmt = $conn->prepare($sql);

        if ($stmt) {
            $stmt->bind_param("ss", $username, $password);  // "ss" indicates two string parameters
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                // User found, set session variables
                session_start();
                $_SESSION["username"] = $username;
                $stmt->close();
                $conn->close();
                header("Location: welcome.php"); // Redirect to welcome page
                exit();
            } else {
                $error_message = "Invalid username or password.";
                $stmt->close();
                $conn->close();
            }
        } else {
            $error_message = "Error preparing statement.";
            $conn->close();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h1>Login</h1>

    <?php
    if (isset($error_message)) {
        echo "<p style='color: red;'>$error_message</p>";
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" />
        Password: <input type="password" name="password" />
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>
</body>
</html>


<?php

// Database Configuration (Replace with your actual database details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to check login credentials
function login($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare the SQL query
    $query = "SELECT id, username, password FROM users WHERE username = ?";

    // Use prepared statement to prevent SQL injection
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $username); // "s" indicates a string parameter

    // Execute the query
    if ($stmt->execute() === TRUE) {
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            // Verify the password
            if (password_verify($password, $row['password'])) {
                // Successful Login
                $_SESSION["user_id"] = $row["id"];
                $_SESSION["username"] = $row["username"];
                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // No user found
            return false;
        }
    } else {
        // Query error
        return false;
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}

// Example Usage (Form handling - this is simplified)

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (VERY IMPORTANT for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Call the login function
        $login_result = login($username, $password);

        if ($login_result) {
            // Redirect to a protected page
            header("Location: protected_page.php"); // Replace with your protected page URL
            exit();
        } else {
            $error = "Incorrect username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
        Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php
session_start();

// Database credentials (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_password = "your_database_password";

/**
 * Logs in a user.
 *
 * @param string $username The username to log in.
 * @param string $password The password.
 * @return bool True if login successful, false otherwise.
 */
function loginUser($username, $password)
{
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to check the credentials
    $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User found, set session variables
        $user = $result->fetch_assoc();
        $_SESSION['username'] = $user['username'];
        $_SESSION['user_id'] = $user['id']; // Assuming you have a user ID
        return true;
    } else {
        return false;
    }

    $conn->close();
}

/**
 * Logs out the current user.
 */
function logoutUser() {
    // Destroy the session
    session_unset();
    session_destroy();
}

// Example usage:

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security - see explanation below)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Attempt to log in
        if (loginUser($username, $password)) {
            // Login successful, redirect to a different page
            header("Location: user_dashboard.php"); // Redirect to a secure page
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>User Login</title>
</head>
<body>

    <h2>User Login</h2>

    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" <?php if (isset($username)) echo 'value="' . htmlspecialchars($username) . '"'; ?> />
        <br/>
        Password: <input type="password" name="password" />
        <br/>
        <button type="submit">Login</button>
    </form>

    <br/>
    <a href="logout.php">Logout</a>

</body>
</html>


<?php
session_start();

// Database connection details (replace with your actual details)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Login form handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (IMPORTANT:  Always sanitize/validate user input!)
    $username = trim($username); // Remove leading/trailing whitespace
    $password = trim($password);


    // Connect to the database
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and execute the query
    $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);  // Use prepared statements for security!
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    if ($stmt->execute()) {
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User found - set session variables
            $row = $result->fetch_assoc();
            $_SESSION["user_id"] = $row["id"];
            $_SESSION["username"] = $row["username"];

            // Redirect to a protected page or display a success message
            header("Location: protected_page.php"); // Or any other appropriate page
            exit();

        } else {
            // User not found
            $error = "Invalid username or password.";
        }
    } else {
        $error = "Error executing query.";
    }
}

// Display the login form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<?php
if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" placeholder="Your Username"><br><br>
    Password: <input type="password" name="password" placeholder="Your Password"><br><br>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database Credentials (Replace with your actual credentials!)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (mysqli_stmt_prepare($conn, "SELECT username, password FROM users WHERE username = ?")) {
    if (mysqli_stmt_bind_param($conn, "s", $username)) {
      mysqli_stmt_execute($conn);
      $result = mysqli_stmt_get_result($conn);
      if ($row = mysqli_fetch_assoc($result)) {
        if (password_verify($password, $row["password"])) {
          // Password matches!  Set session variables.
          session_start(); // Start the session if it's not already
          $_SESSION["username"] = $username;
          $error_message = "";  // Clear any previous errors
          header("Location: welcome.php"); // Redirect to a welcome page
          exit(); // Stop further execution
        } else {
          $error_message = "Incorrect password.";
        }
        mysqli_stmt_close($conn); // Close the statement
      } else {
        $error_message = "Incorrect username.";
      }
      mysqli_stmt_close($conn);
    } else {
        $error_message = "Error preparing statement.";
    }
  } else {
    $error_message = "Error preparing statement.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
  <style>
    .error {
      color: red;
    }
  </style>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p class="error"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($_POST['username']) ? htmlspecialchars($_POST['username']) : ''; ?>" />
    <br />
    Password: <input type="password" name="password" value="<?php echo isset($_POST['password']) ? htmlspecialchars($_POST['password']) : ''; ?>" />
    <br />
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } else {
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // SQL Query
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    if (mysqli_stmt_prepare($conn, "INSERT INTO users (username, password) VALUES (?, ?)")) {
      if (mysqli_stmt_bind_param($conn, "ss", $username, $hashed_password)) {
        mysqli_stmt_execute($conn);
        mysqli_stmt_close($conn);

        // Login successful - redirect to login.php
        header("Location: login.php");
        exit();
      } else {
        $error_message = "Error preparing statement.";
      }
    } else {
      $error_message = "Error preparing statement.";
    }
  }
}
?>


<?php

// Database connection details (Replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare statement
  $stmt = $conn->prepare($sql);

  // Bind parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the query
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      $row = $result->fetch_assoc();
      // If the user exists, you can now access their data
      // You might want to set a session or other authentication mechanism here
      session_start(); // Start the session (important for storing user information)
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      // You can add more data from the row here if needed, like $row['email']
      return true; // Login successful
    } else {
      return false; // Login failed (username or password incorrect)
    }

  } else {
    // Error executing query
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();

  return false; //Should not reach here if everything is done correctly
}

// Example usage (This is just an example - implement appropriate form handling)
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    echo "Login successful!  Redirecting...";
    // Redirect to a protected page or home page
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!-- HTML form (Example - adapt to your design) -->
<form method="post" action="">
  Username: <input type="text" name="username">
  Password: <input type="password" name="password">
  <input type="submit" value="Login">
</form>


<?php

// Database connection details - Replace with your actual credentials
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to retrieve the password hash from the database
  $sql = "SELECT password_hash, user_id FROM users WHERE username = '$username'";  // Assuming 'username' is the user's login identifier
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $hashedPassword = $row['password_hash'];
    $userId = $row['user_id'];

    // Verify the password
    if (password_verify($password, $hashedPassword)) {
      // Authentication successful
      session_start(); // Start the session for user tracking
      $_SESSION['user_id'] = $userId; // Store the user's ID in the session
      return true;
    } else {
      // Incorrect password
      return false;
    }
  } else {
    // User not found
    return false;
  }

  // Close the connection
  $conn->close();
}

// Example usage (Illustrative - Replace with your form handling logic)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a secure page, show a welcome message, etc.
    header("Location: welcome.php"); // Redirect to a welcome page
    exit();
  } else {
    // Login failed - Display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

</body>
</html>


<?php

// Database credentials - **IMPORTANT:  Never hardcode these in a production environment!**
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

/**
 * Logs in a user based on their username and password.
 *
 * @param string $username The username to log in.
 * @param string $password The password for the username.
 * @return int|false The user ID if login is successful, false otherwise.
 */
function loginUser(string $username, string $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare and execute the SQL query
  $stmt = $conn->prepare("SELECT id FROM users WHERE username = ? AND password = ?");
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

  if ($stmt->execute() === false) {
    // Handle execution errors
    echo "Query execution failed: " . $stmt->error;
    $stmt->close();
    $conn->close();
    return false;
  }

  // Get the result
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found
    $stmt->close();
    $conn->close();
    return false;
  }

  $user = $result->fetch_assoc();
  $userId = $user['id'];

  $stmt->close();
  $conn->close();

  return $userId;
}


// Example usage:

// Get username and password from form input (in a real application, validate this input!)
$username = $_POST['username'];
$password = $_POST['password'];

// Perform the login
$userId = loginUser($username, $password);

if ($userId) {
  // Login successful
  echo "Login successful! User ID: " . $userId;

  // You would typically redirect the user to a protected area of the website here.
} else {
  // Login failed
  echo "Login failed.  Please check your username and password.";
}

?>


$password = $_POST['password'];  // Get the password
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);

// ... (Insert $username and $hashedPassword into the database)


$password = $_POST['password'];
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);

// ... (Query for the hashed password from the database)

if (password_verify($password, $hashedPasswordFromDatabase)) {
  // Login successful!
} else {
  // Login failed - incorrect password
}


<?php

// Database credentials (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Form handling (for simplicity, we'll directly process the form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get input values from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate the input (basic example - you should add more robust validation)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } elseif (strlen($username) < 3) {
        $error = "Username must be at least 3 characters long.";
    } elseif (strlen($password) < 6) {
        $error = "Password must be at least 6 characters long.";
    }
    
    else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Query to select the user from the database
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // User found!
            // Session management (important for security - see explanation below)
            session_start();
            $_SESSION["username"] = $username; // Store the username in the session
            echo "Login successful! You are now logged in.";
            // Redirect to a protected page or display a welcome message
            // header("Location: /protected_page.php"); // Example
            //exit();

        } else {
            // User not found
            $error = "Invalid username or password.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

<h1>Login</h1>

<?php if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// ... (Your login function code) ...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // ... (Get input values) ...

    if (empty($username) || empty($password)) {
        // ... (Error handling) ...
    } else {
        // Connect to the database (as before)
        $conn = new mysqli($servername, $username, $password, $dbname);
        // ... (Check connection) ...

        // Hash the password
        $password = password_hash($password, PASSWORD_DEFAULT); // Use password_hash()

        // Query to select the user from the database
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // User found!
            session_start();
            $_SESSION["username"] = $username;
            // ... (Redirect, welcome message, etc.) ...

        } else {
            $error = "Invalid username or password.";
        }
    }
}

?>


<?php
// ... (Your login function code) ...

if ($result->num_rows > 0) {
    // User found!
    $user = $result->fetch_assoc();
    $hashed_password = $user['password'];

    if (password_verify($password, $hashed_password)) {
        // Password matches!
        session_start();
        $_SESSION["username"] = $username;
        // ... (Redirect, welcome message, etc.) ...
    } else {
        $error = "Invalid username or password.";
    }
}
?>


<?php

// Database credentials (replace with your actual values)
$db_host = "localhost";
$db_username = "your_username";
$db_password = "your_password";
$db_name = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $query = "SELECT * FROM users WHERE username = '" . $conn->real_escape_string($username) . "' AND password = '" . $conn->real_escape_string($password) . "'";

  $result = $conn->query($query);

  if ($result->num_rows > 0) {
    // User found, set session variables
    $user = $result->fetch_assoc();
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }
}


// Example Usage:

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security - add more robust validation here)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } else {
    // Call the login function
    $loginResult = loginUser($username, $password);

    if ($loginResult == true) {
      // Redirect to a protected page or display a welcome message
      header("Location: /protected_page.php"); // Change to your protected page URL
      exit();
    } else {
      $error = "Invalid username or password.";
    }
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
    Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
    <button type="submit">Login</button>
  </form>

  <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database connection details (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate the input (VERY IMPORTANT - prevent SQL injection)
  $username = trim($username); // Remove leading/trailing whitespace
  $password = trim($password);

  // Sanitize the input (more robust than just trim)
  $username = filter_var($username, FILTER_SANITIZE_STRING);
  $password = filter_var($password, FILTER_SANITIZE_STRING);


  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check the connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query with prepared statements (MOST IMPORTANT - prevents SQL injection)
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
      // User found - set session variables
      session_start();
      $row = $result->fetch_assoc();
      $_SESSION["user_id"] = $row["id"];
      $_SESSION["username"] = $row["username"];

      // Redirect to a protected page
      header("Location: /protected_page.php"); // Replace with your protected page
      exit();

    } else {
      echo "Invalid username or password.";
    }

  } else {
    echo "Error executing query: " . $conn->error;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();

} else {
  // If the form hasn't been submitted, display the login form
  // This is crucial for the initial page load
  ?>
  <!DOCTYPE html>
  <html>
  <head>
    <title>Login</title>
  </head>
  <body>
    <h1>Login</h1>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
      Username: <input type="text" name="username" required>
      Password: <input type="password" name="password" required>
      <button type="submit">Login</button>
    </form>
  </body>
  </html>
  <?php
}
?>


<?php

// Database credentials (replace with your actual details)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement (important for security - prevents SQL injection)
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    if ($stmt->execute()) {
      // Fetch the result
      $result = $stmt->fetch_assoc();

      // Check if the query returned any results
      if ($result) {
        // User found, set session variables
        session_start();
        $_SESSION['user_id'] = $result['id']; // Assuming you have an 'id' column in your users table
        $_SESSION['username'] = $username;
        return true; // Login successful
      } else {
        return false; // User not found
      }
    } else {
      // Error executing query
      return false;
    }
  } else {
    // Error preparing the statement
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (in your login form)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful, redirect to a secure page
    header("Location: /secure_page.php"); // Replace with your desired secure page
    exit();
  } else {
    // Login failed, display an error message
    echo "Invalid username or password.";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login Form</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database connection details - Replace with your actual credentials
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database_name";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Connect to the database
  $conn = new mysqli($servername, $username, $password, $dbname);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to authenticate the user
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";  //Use prepared statements for security

  $result = $conn->query($sql);

  if ($result->num_rows == 1) {
    // User found, set session variables for authentication
    session_start();
    $row = $result->fetch_assoc();
    $_SESSION["user_id"] = $row["user_id"];
    $_SESSION["username"] = $row["username"];

    // Redirect to a secure page or display a welcome message
    header("Location: /welcome.php"); // Replace /welcome.php with your protected page's URL
    exit();

  } else {
    // User not found
    $error = "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form action="login.php" method="POST">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br><br>

    <input type="submit" value="Login">
  </form>

  <?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_username';
$db_password = 'your_password';

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check username and password
  $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    // Verify the password
    if (password_verify($password, $row['password'])) {
      // Login successful - Set session variables
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $username;
      return true; // Indicate successful login
    } else {
      return false; // Indicate incorrect password
    }
  } else {
    return false; // Indicate username not found
  }

  $conn->close();
}

// Example usage:
// Assume the user has entered their username and password in form fields
if (isset($_POST['username']) && isset($_POST['password'])) {
  $username = $_POST['username'];
  $password = $_POST['password'];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page
    exit();
  } else {
    // Login failed - Display an error message
    echo "<p style='color:red;'>Invalid username or password.</p>";
  }
}

?>


<?php

// Database connection details (replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Create connection
  $conn = new mysqli($servername, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL statement
  $sql = "SELECT id, username, password FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt === false) {
    die("Error preparing statement: " . $conn->error);
  }

  // Bind parameters
  $stmt->bind_param("ss", $username, $password);

  // Execute the statement
  if (!$stmt->execute()) {
    echo "Error: " . $stmt->error;
    return false;
  }

  // Get the result
  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // No user found with those credentials
    return false;
  }

  // Fetch the user data
  $user = $result->fetch_assoc();

  // Close the statement and connection
  $stmt->close();
  $conn->close();

  // Successful login - return user data
  return $user;
}

// --- Example Usage ---

// Get username and password from form (example)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (add more robust validation here - e.g., password strength, input length)
  if (empty($username) || empty($password)) {
    echo "<p>Username and password fields cannot be empty.</p>";
  } else {
    // Call the login function
    $loginResult = loginUser($username, $password);

    if ($loginResult) {
      // User is logged in - redirect or display user info
      echo "<h2>Welcome, " . $loginResult["username"] . "</h2>";
      // You can store the user ID in a session, cookie, or local storage for later use.
      // Example:
      // $_SESSION['user_id'] = $loginResult['id'];  // Requires session_start()
    } else {
      // Login failed
      echo "<p>Invalid username or password.</p>";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database configuration (Replace with your actual credentials)
$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (Important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty!";
    }
    elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format";
    }
    else {
        // Connect to the database
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL query (Prevent SQL Injection!)
        $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
        $stmt = $conn->prepare($sql);

        if ($stmt) {
            // Bind parameters (Crucial for security!)
            $stmt->bind_param("ss", $username, $password);

            // Execute the query
            $stmt->execute();
            $result = $stmt->get_result();

            // Check if any rows were returned
            if ($result->num_rows > 0) {
                // User found!  Start a session.
                session_start();
                $_SESSION["username"] = $username; // Store username in session
                $result->fetch_assoc(); // Get user details (optional, for further processing)
                $error = ""; // Clear any previous errors
                echo "Login successful!  You are now logged in.";
                header("Location: /welcome.php"); // Redirect to a welcome page
                exit();

            } else {
                $error = "Invalid username or password.";
            }

        } else {
            $error = "Error preparing statement.";
        }

        $stmt->close();
        $conn->close();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

    <h2>Login</h2>

    <?php if (!empty($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" value="<?php echo isset($username) ? htmlspecialchars($username) : ''; ?>">
        Password: <input type="password" name="password" value="<?php echo isset($password) ? htmlspecialchars($password) : ''; ?>">
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register</a></p>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'your_db_user';
$db_password = 'your_db_password';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important for security!)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        // Database connection
        $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // SQL query to check credentials
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            $error = "Invalid username or password.";
        }

        if ($result->num_rows > 0) {
            // Login successful - set session variables
            session_start();
            $_SESSION["username"] = $username; // Store username in session
            $conn->close();
            header("Location: welcome.php"); // Redirect to a welcome page (or your home page)
            exit();
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h1>Login</h1>

<?php
if (isset($error)) {
    echo "<p style='color: red;'>$error</p>";
}
?>

<form method="post" action="<?php echo $_SERVER["SCRIPT_NAME"]; ?>">
    Username: <input type="text" name="username" placeholder="Enter username"><br><br>
    Password: <input type="password" name="password" placeholder="Enter password"><br><br>
    <input type="submit" value="Login">
</form>

</body>
</html>


<?php

// Database connection details - **IMPORTANT: Replace with your actual details**
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = trim($_POST["username"]);
    $password = trim($_POST["password"]);

    // Validate input (VERY IMPORTANT - prevent SQL injection)
    if (empty($username) || empty($password)) {
        $error = "Username and Password cannot be empty.";
    } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid Email format.";
    } else {
        // Database query (using prepared statements for security)
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username); // "s" indicates a string parameter
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            // Verify password (using password_hash for secure comparison)
            if (password_verify($password, $row["password"])) {
                // Login successful - set session variables
                session_start();
                $_SESSION["user_id"] = $row["id"];
                $_SESSION["username"] = $username;
                echo "Login successful! <a href='dashboard.php'>Go to Dashboard</a>"; // Redirect after successful login
            } else {
                $error = "Incorrect password.";
            }
        } else {
            $error = "Incorrect username.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>

<h2>Login</h2>

<?php if (isset($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
<?php } ?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
</form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = 'localhost';
$db_user = 'your_db_user';
$db_password = 'your_db_password';
$db_name = 'your_db_name';

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (important for security)
  if (empty($username) || empty($password)) {
    $error = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid username (must be a valid email address).";
  } else {
    // Database connection
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to select the user based on username
    $sql = "SELECT id, username, password FROM users WHERE username = '" . $username . "'";  // Escape username for SQL injection. Use prepared statements for better security.

    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error = "Invalid username or password.";
    } else {
      // User found, verify password
      $row = $result->fetch_assoc();
      if (password_verify($password, $row["password"])) {
        // Login successful
        session_start();
        // Store user ID in session for later access
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $username;
        echo "Login successful!  Redirecting...";
        header("Location: welcome.php"); // Redirect to a welcome page or your application's homepage
        exit();
      } else {
        $error = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (!empty($error)) { ?>
    <p style="color: red;"><?php echo $error; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <button type="submit">Login</button>
  </form>

  <br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


<?php

/**
 * User Login Function
 *
 * This function handles user login validation and returns user data if successful,
 * or an error message if login fails.
 *
 * @param string $username  The username to log in.
 * @param string $password The password to log in.
 * @param array $users     An associative array of usernames and their passwords.
 *                        Example: ['john.doe' => 'password123', 'jane.smith' => 'securePass']
 *
 * @return array|string  An array containing user data (id, username, etc.) on success,
 *                       or an error message string on failure.
 */
function login(string $username, string $password, array $users) {
    // Sanitize input -  Crucial for security!
    $username = trim($username);
    $password = trim($password);

    // Check if the user exists
    if (isset($users[$username])) {
        // Verify the password
        if (password_verify($password, $users[$username])) {  // Uses password_verify
            // User found and password matches - Create user data array
            $userData = [
                'id' => $username, // Using username as ID - can change to a real ID field
                'username' => $username,
            ];

            return $userData;
        } else {
            return "Incorrect password for " . $username;
        }
    } else {
        return "User " . $username . " not found";
    }
}

// Example Usage (for testing - REMOVE OR COMMENT OUT IN A REAL APPLICATION)
//  In a real application, you'd get these values from a form submission.

// Sample user data (in a real application, this would come from a database)
$users = [
    'john.doe' => '$2y$11$K3c2V1o8tG0wS16J8Xy1Z.w17xQ7fJ5p77789Qk9fV33333', // Hashed password
    'jane.smith' => '$2y$11$rGj2H9uL9oT6z953zY2c7.u41xQ7fJ5p77789Qk9fV33333', // Another hashed password
];


// Test login attempts
$loginResult1 = login('john.doe', 'password123', $users);
if ($loginResult1 === 'Incorrect password for john.doe') {
    echo "Login Failed: Incorrect password.
";
} elseif ($loginResult1 !== null) {
    echo "Login Successful!
";
    print_r($loginResult1);
} else {
    echo "Login Failed: User not found.
";
}

$loginResult2 = login('nonexistent.user', 'anypassword', $users);
if ($loginResult2 === 'Incorrect password for nonexistent.user') {
    echo "Login Failed: Incorrect password.
";
} elseif ($loginResult2 !== null) {
    echo "Login Successful!
";
    print_r($loginResult2);
} else {
    echo "Login Failed: User not found.
";
}

$loginResult3 = login('john.doe', 'wrongpassword', $users);
if ($loginResult3 === 'Incorrect password for john.doe') {
    echo "Login Failed: Incorrect password.
";
} elseif ($loginResult3 !== null) {
    echo "Login Successful!
";
    print_r($loginResult3);
} else {
    echo "Login Failed: User not found.
";
}
?>


<?php

// Database credentials (replace with your actual credentials)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database_name";

// Form data
$username = $_POST['username'];
$password = $_POST['password'];

// 1. Connect to the database
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// 2. Prepare the SQL query
$sql = "SELECT * FROM users WHERE username = ? AND password = ?";

// Prepare the statement
$stmt = $conn->prepare($sql);

// Bind the parameters
$stmt->bind_param("ss", $username, $password); // "ss" indicates two strings

// Execute the query
$stmt->execute();

// 3. Get the result
$result = $stmt->get_result();

// 4. Process the result
$row = $result->fetch_assoc();

if($row) {
  // User exists
  // Set session variables
  session_start(); // Important: Start the session
  $_SESSION['username'] = $username;
  $_SESSION['user_id'] = $row['id']; // Assuming you have an 'id' column in your users table

  // Redirect the user to a protected page
  header("Location: /protected_page.php"); // Replace with your protected page URL
  exit(); // Important: Stop further execution
} else {
  // User doesn't exist
  echo "Invalid username or password.";
}

// 5. Close the connection
$stmt->close();
$conn->close();

?>


<?php

// Database connection details
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Form data
$username = $_POST['username'];
$password = $_POST['password'];

// SQL query to fetch the user
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = mysqli_query($host, $sql);

if ($result) {
    while ($row = mysqli_fetch_assoc($result)) {
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Password is correct, set session variables
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;

            // Redirect to a protected page or display a success message
            header("Location: protected_page.php"); // Replace with your protected page
            exit();
        } else {
            // Incorrect password
            echo "<p style='color:red;'>Incorrect username or password.</p>";
        }
    }
} else {
    // Error querying the database
    echo "<p style='color:red;'>Database error: " . mysqli_error($host) . "</p>";
}

?>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = trim($_POST["username"]);
  $password = trim($_POST["password"]);

  // Validate input (Crucial for security!)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (mysqli_query($conn, "SELECT * FROM users WHERE username = '$username'") === false) {
    $error_message = "Invalid username or password.";
  } else {
    // Password verification (Important!  Never store passwords in plain text)
    $hashed_password = "your_hashed_password"; // Replace with the actual hashed password from your database

    if (password_verify($password, $hashed_password)) {
      // Login successful!
      session_start();
      $_SESSION["username"] = $username;
      header("Location: welcome.php"); // Redirect to a welcome page
      exit;
    } else {
      $error_message = "Invalid username or password.";
    }
  }
}

// Database connection
$conn = mysqli_connect($db_host, $db_user, $db_password, $db_name);

// Check connection
if (!$conn) {
  die("Connection failed: " . mysqli_connect_error());
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <?php if (isset($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    <br><br>
    Password: <input type="password" name="password" required>
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>

</body>
</html>


// Registering a new user (example)
$hashed_password = password_hash("your_password", PASSWORD_DEFAULT);

// Storing the hashed password in the database (in the INSERT query)
// ...

// Logging in a user:
$password = $_POST["password"];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// ... your SQL query ...


<?php

// Database Configuration (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_password = "your_password";

// Function to handle user login
function loginUser($username, $password) {
    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to select the user
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";  // Use prepared statements for security

    // Prepare the statement (important for security)
    $stmt = $conn->prepare($sql);

    // Bind parameters
    $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

    // Execute the query
    if ($stmt->execute()) {
        $result = $stmt->get_result();
        $row = $result->fetch_assoc();

        if ($row) {
            // User found, set session variables
            session_start();  // Start session management
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];

            // Redirect to a protected page or display a success message
            header("Location: /protected_page.php"); // Replace with your protected page URL
            exit(); // Important to stop further execution
        } else {
            // User not found
            return false;
        }
    } else {
        // Query error
        return false;
    }

    // Close the statement
    $stmt->close();
    $conn->close();

    return true;
}


// Example Usage (Demonstration - DO NOT directly use this in your application)
// Assuming you have a form to collect username and password

// Check if the login form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST["username"];
    $password = $_POST["password"];

    // Validate input (important to prevent SQL injection)
    if (empty($username) || empty($password)) {
        $error = "Username and password cannot be empty.";
    } else {
        $login_result = loginUser($username, $password);

        if ($login_result) {
            echo "Login successful!  Redirecting...";
        } else {
            echo "Login failed.  Invalid credentials.";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h1>Login</h1>

    <?php if (isset($error)) { echo "<p style='color:red;'>$error</p>"; } ?>

    <form method="post" action="">
        Username: <input type="text" name="username" />
        Password: <input type="password" name="password" />
        <input type="submit" value="Login" />
    </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_pass = "your_db_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";

  // Prepare the statement
  $stmt = $conn->prepare($sql);

  // Bind the parameters
  $stmt->bind_param("ss", $username, $password); // "ss" indicates two string parameters

  // Execute the statement
  if ($stmt->execute() === TRUE) {
    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Session management:  Store user information in session
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      return true; // Login successful
    } else {
      return false; // No user found with those credentials
    }
  } else {
    // Handle the error
    echo "Error executing query: " . $conn->error;
    return false;
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example Usage (Handle Login Form Submission)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get form data
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security - more robust validation is recommended)
  if (empty($username) || empty($password)) {
    echo "Username and password cannot be empty.";
  } else {
    // Call the loginUser function
    if (loginUser($username, $password)) {
      // Redirect to a protected page or display a welcome message
      header("Location: /protected_page.php"); // Replace with your protected page URL
      exit();
    } else {
      echo "Invalid username or password.";
    }
  }
}

//  Display login form (only displayed on the initial page)
?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h1>Login</h1>

  <form method="post" action="">
    Username: <input type="text" name="username">
    Password: <input type="password" name="password">
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (Replace with your actual database details)
$host = "localhost";
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($host, $username, $password, $database);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
  $stmt->bind_param("s", $username); // 's' indicates a string parameter
  $stmt->execute();

  $result = $stmt->get_result();

  if ($result->num_rows == 0) {
    // User not found
    return false;
  } else {
    // User found, verify password
    $user = $result->fetch_assoc();
    if (password_verify($password, $user['password'])) {
      // Password matches, login successful
      // You can store user session data here (e.g., set session variables)
      // Example:
      session_start();
      $_SESSION['user_id'] = $user['id'];
      $_SESSION['username'] = $user['username'];
      return true;
    } else {
      // Password mismatch
      return false;
    }
  }

  // Close the statement and connection
  $stmt->close();
  $conn->close();
}

// Example usage (for demonstration - NOT for production!)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Login successful - Redirect to a protected page or display a welcome message
    header("Location: /protected_page.php"); // Replace with your protected page URL
    exit();
  } else {
    // Login failed - Display error message
    echo "<p style='color: red;'>Invalid username or password.</p>";
  }
}

?>

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>

  <h2>Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required><br><br>
    Password: <input type="password" name="password" required><br><br>
    <input type="submit" value="Login">
  </form>

  <p>If you don't have an account, <a href="register.php">register</a>.</p>

</body>
</html>


<?php

// Database configuration (replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_username";
$db_pass = "your_password";

// Function to handle user login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // SQL query to check credentials
  $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
  $result = $conn->query($sql);

  if ($result->num_rows > 0) {
    // User found - store the user's data in a session
    $user_data = $result->fetch_assoc();
    $_SESSION['user_id'] = $user_data['id']; // Assuming 'id' is the primary key
    $_SESSION['username'] = $user_data['username'];
    return true; // Login successful
  } else {
    return false; // Login failed
  }

  $conn->close();
}


// Example usage:  This is for demonstration - don't directly use this in your web app.
//  This shows how to call the function and handle the result.

if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    echo "Login successful!  You are now logged in.";
    // Redirect to a secure page or display a welcome message.
    header("Location: /welcome.php"); // Replace with your secure page URL.  Important to redirect.
    exit();
  } else {
    echo "Invalid username or password.";
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Username: <input type="text" name="username" required>
    Password: <input type="password" name="password" required>
    <input type="submit" value="Login">
  </form>

</body>
</html>


<?php

// Database credentials (replace with your actual credentials)
$username = "your_username";
$password = "your_password";
$database = "your_database";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (basic validation - improve this for a production environment)
  if (empty($username) || empty($password)) {
    $error_message = "Username and password cannot be empty.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error_message = "Invalid username (please enter a valid email address)";
  } else {
    // Database connection
    $conn = new mysqli($username, $password, $database);

    // Check connection
    if ($conn->connect_error) {
      die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to authenticate the user
    $sql = "SELECT * FROM users WHERE email = '$username'"; // Use email for security
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
      $error_message = "Invalid username or password.";
    } else {
      // User found, check the password
      $user = $result->fetch_assoc();
      if (password_verify($password, $user["password"])) {
        // Authentication successful - set session variables
        session_start();
        $_SESSION["user_id"] = $user["id"];
        $_SESSION["username"] = $user["email"]; // Or username, depending on your database
        header("Location: welcome.php"); // Redirect to a welcome page
        exit();
      } else {
        $error_message = "Invalid username or password.";
      }
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>Login</h2>

  <?php if (isset($error_message)) {
    echo "<p style='color: red;'>$error_message</p>";
  }
?>

  <form method="post" action="<?php echo $_SERVER["SCRIPT_NAME"]; ?>">
    Username: <input type="text" name="username" placeholder="your_email@example.com">
    <br><br>
    Password: <input type="password" name="password">
    <br><br>
    <input type="submit" value="Login">
  </form>

</body>
</html>


// ... (Database connection code) ...

// Get the username and password from the form
$username = $_POST["username"];
$password = $_POST["password"];

// Hash the password using password_hash()
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// SQL query to insert the user
$sql = "INSERT INTO users (email, password) VALUES ('$username', '$hashed_password')";

// Execute the query
if ($conn->query($sql) === TRUE) {
  echo "New record created successfully";
} else {
  echo "Error: " . $conn->error;
}

// ... (Close database connection) ...


<?php

// Database credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_db_user";
$db_password = "your_db_password";

// Function to handle login
function loginUser($username, $password) {
  // Connect to the database
  $conn = new mysqli($db_host, $db_user, $db_password, $db_name);

  // Check connection
  if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
  }

  // Prepare the SQL query
  $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
  $stmt = $conn->prepare($sql);

  if ($stmt) {
    // Bind the parameters
    $stmt->bind_param("ss", $username, $password);

    // Execute the query
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();

    // Check if any rows were returned
    if ($result->num_rows > 0) {
      $row = $result->fetch_assoc();
      // Successful login
      session_start();
      $_SESSION['user_id'] = $row['id'];
      $_SESSION['username'] = $row['username'];
      $stmt->close();
      $conn->close();
      return true; // Indicate successful login
    } else {
      // Login failed
      $stmt->close();
      $conn->close();
      return false; // Indicate failed login
    }
  } else {
    // Prepare failed
    $stmt->close();
    $conn->close();
    return false; // Indicate prepare failed.
  }
}


// Example usage:  (This part would be in your HTML form processing)
/*
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  $username = $_POST["username"];
  $password = $_POST["password"];

  if (loginUser($username, $password)) {
    // Redirect to a protected page or display a welcome message
    header("Location: protected_page.php"); // Replace with your protected page
    exit();
  } else {
    // Display an error message
    echo "<p>Invalid username or password.</p>";
  }
}
*/


?>


<?php

// Database Credentials (Replace with your actual credentials)
$db_host = "localhost";
$db_name = "your_database_name";
$db_user = "your_database_user";
$db_pass = "your_database_password";

// Check if the form has been submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // Get the username and password from the form
  $username = $_POST["username"];
  $password = $_POST["password"];

  // Validate input (Important for security)
  if (empty($username) || empty($password)) {
    $error_message = "Username and Password must be filled.";
  } elseif (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
    $error_message = "Invalid Username (Please enter a valid email address).";
  } else {
    // SQL Query (Use prepared statements for security - see explanation below)
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";

    // Connect to the database
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

    // Check connection
    if ($conn->connect_error) {
      $error_message = "Connection failed: " . $conn->connect_error;
    }

    // Execute the query
    $result = $conn->query($sql);

    // Check if the query returned any results
    if ($result->num_rows > 0) {
      // User exists, now verify the password
      $row = $result->fetch_assoc();
      if (password_verify($password, $row["password"])) {
        // Password is correct, set session variables
        $_SESSION["username"] = $username;
        $_SESSION["user_id"] = $row["id"]; // Store user ID for better security
        header("Location: welcome.php"); // Redirect to a welcome page
        exit;
      } else {
        $error_message = "Incorrect password.";
      }
    } else {
      $error_message = "User not found.";
    }
  }
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>User Login</title>
</head>
<body>

  <h2>User Login</h2>

  <?php if (!empty($error_message)) { ?>
    <p style="color: red;"><?php echo $error_message; ?></p>
  <?php } ?>

  <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
    Username: <input type="text" name="username" placeholder="Enter your email">
    <br><br>
    Password: <input type="password" name="password">
    <br><br>
    <button type="submit">Login</button>
  </form>

  <br><br>
  <a href="register.php">Don't have an account? Register here.</a>
  <br><br>
  <a href="forgot_password.php">Forgot Password?</a>  <!-- You'll need to implement forgot password functionality -->

</body>
</html>

