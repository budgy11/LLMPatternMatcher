{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis is an example of a basic user login function using PHP, including password hashing and verification. This code should be used as a starting point for your own application.\n\n### **login.php**\n\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash password\nfunction hashPassword($password) {\n    return password_hash($password, PASSWORD_DEFAULT);\n}\n\n// Function to verify user credentials\nfunction verifyCredentials($username, $password) {\n    global $conn;\n\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->bind_param(\"s\", $username);\n\n    // Execute query\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // Fetch user data\n    if ($row = $result->fetch_assoc()) {\n        // Compare hashed password with provided password\n        if (password_verify($password, $row['password'])) {\n            return array(\n                'success' => true,\n                'username' => $row['username'],\n                'email' => $row['email']\n            );\n        } else {\n            return array('error' => 'Invalid password');\n        }\n    }\n\n    // If user not found\n    return array('error' => 'User not found');\n}\n\n// Function to login user\nfunction loginUser($data) {\n    global $conn;\n\n    $username = $data['username'];\n    $password = $data['password'];\n\n    // Verify credentials\n    $credentials = verifyCredentials($username, $password);\n\n    if (isset($credentials['success'])) {\n        return array('success' => true);\n    } else {\n        return array('error' => $credentials['error']);\n    }\n}\n\n// Example usage\n$data = array(\n    'username' => 'your_username',\n    'password' => 'your_password'\n);\n\n$result = loginUser($data);\n\nif ($result['success']) {\n    echo \"Logged in successfully!\";\n} else {\n    echo \"Error: \" . $result['error'];\n}\n```\n\n**Note:** This code assumes you have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(255) |\n| email | varchar(255) |\n| password | varchar(255) |\n\nMake sure to replace the placeholders in the configuration settings with your actual database credentials and table structure.\n\nAlso, consider implementing a more secure way of storing passwords using a library like `password_hash` or an encryption algorithm. This example uses plain text for simplicity.\n\n**Commit Message:**\n\n`Added user login function using PHP, including password hashing and verification`\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash password\nfunction hashPassword($password) {\n    return password_hash($password, PASSWORD_DEFAULT);\n}\n\n// Function to verify user credentials\nfunction verifyCredentials($username, $password) {\n    global $conn;\n\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->bind_param(\"s\", $username);\n\n    // Execute query\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // Fetch user data\n    if ($row = $result->fetch_assoc()) {\n        // Compare hashed password with provided password\n        if (password_verify($password, $row['password'])) {\n            return array(\n                'success' => true,\n                'username' => $row['username'],\n                'email' => $row['email']\n            );\n        } else {\n            return array('error' => 'Invalid password');\n        }\n    }\n\n    // If user not found\n    return array('error' => 'User not found');\n}\n\n// Function to login user\nfunction loginUser($data) {\n    global $conn;\n\n    $username = $data['username'];\n    $password = $data['password'];\n\n    // Verify credentials\n    $credentials = verifyCredentials($username, $password);\n\n    if (isset($credentials['success'])) {\n        return array('success' => true);\n    } else {\n        return array('error' => $credentials['error']);\n    }\n}\n\n// Example usage\n$data = array(\n    'username' => 'your_username',\n    'password' => 'your_password'\n);\n\n$result = loginUser($data);\n\nif ($result['success']) {\n    echo \"Logged in successfully!\";\n} else {\n    echo \"Error: \" . $result['error'];\n}\n```"]}
