{"prompt": "Create a user login function using php", "llm_output": "Here's an example of how you can create a simple user login function in PHP:\n\n**login.php**\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\n// Connect to database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\nfunction login($username, $password) {\n  global $conn;\n\n  // Prepare SQL query\n  $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n\n  // Get result from database\n  $result = $stmt->fetch(PDO::FETCH_ASSOC);\n\n  if ($result && password_verify($password, $result['password'])) {\n    // User found and password correct\n    $_SESSION['username'] = $username;\n    $_SESSION['logged_in'] = true;\n\n    return true; // Login successful\n\n  } else {\n    // User not found or incorrect password\n    return false; // Login failed\n  }\n}\n\nif (isset($_POST['login'])) {\n  // Get user input from form submission\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Call login function\n  if (login($username, $password)) {\n    header('Location: dashboard.php');\n    exit();\n  } else {\n    echo 'Invalid username or password';\n  }\n}\n\n?>\n```\n**index.html**\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Login Page</title>\n</head>\n<body>\n\n  <form action=\"login.php\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\" name=\"login\">Login</button>\n  </form>\n\n</body>\n</html>\n```\nIn this example, we have a `login.php` file that contains the login function and a simple HTML form in an `index.html` file. The user submits their username and password to the `login.php` page, which checks their credentials against the database using PDO.\n\nThe login function uses the `password_verify()` function to check if the submitted password matches the stored hash in the database.\n\nNote that this is a basic example and you should consider implementing additional security measures such as:\n\n* Using a secure password hashing algorithm like Argon2\n* Storing passwords securely (e.g., using a hashed salted storage)\n* Validating user input for SQL injection vulnerabilities\n* Implementing rate limiting or IP blocking to prevent brute-force attacks\n\nYou can also add more features like email verification, forgot password functionality etc.\n\nAlso note that you need to have a database set up with the following table structure:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\nAnd insert some sample data into it:\n```sql\nINSERT INTO users (username, password) VALUES ('user1', 'password123');\nINSERT INTO users (username, password) VALUES ('user2', 'password456');\n```", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\n// Connect to database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\nfunction login($username, $password) {\n  global $conn;\n\n  // Prepare SQL query\n  $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n\n  // Get result from database\n  $result = $stmt->fetch(PDO::FETCH_ASSOC);\n\n  if ($result && password_verify($password, $result['password'])) {\n    // User found and password correct\n    $_SESSION['username'] = $username;\n    $_SESSION['logged_in'] = true;\n\n    return true; // Login successful\n\n  } else {\n    // User not found or incorrect password\n    return false; // Login failed\n  }\n}\n\nif (isset($_POST['login'])) {\n  // Get user input from form submission\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Call login function\n  if (login($username, $password)) {\n    header('Location: dashboard.php');\n    exit();\n  } else {\n    echo 'Invalid username or password';\n  }\n}\n\n?>\n```", null, null, null]}
