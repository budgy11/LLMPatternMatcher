{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function in PHP:\n\n**login.php**\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'users');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login($username, $password) {\n    // Prepare and execute query to verify username and password\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $password);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        // User found, retrieve user data\n        $user_data = $result->fetch_assoc();\n        return array('success' => true, 'user_id' => $user_data['id'], 'username' => $user_data['username']);\n    } else {\n        return array('success' => false);\n    }\n}\n\nfunction authenticate_user() {\n    if (isset($_POST['username']) && isset($_POST['password'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        // Hash password for comparison\n        $hashed_password = hash('sha256', $password);\n\n        // Call login function with hashed password\n        $login_result = login($username, $hashed_password);\n        return $login_result;\n    }\n}\n\nif (isset($_POST['submit'])) {\n    $authenticate_user();\n} else {\n    echo 'Error: No form data submitted';\n}\n```\n**Explanation**\n\nThis script defines a `login` function that takes in a username and password as parameters. It prepares and executes a SQL query to verify the user credentials against the database. If the credentials are valid, it retrieves the user's data from the database and returns an array with success status and user details.\n\nThe `authenticate_user` function checks if form data has been submitted and calls the `login` function with the hashed password (using SHA-256). The result is then returned to the calling script.\n\n**Usage**\n\nTo use this script, you'll need to:\n\n1. Create a database table named \"users\" with columns for id, username, and password.\n2. Update the database connection settings at the top of the script to match your environment.\n3. Submit form data with username and password fields (e.g., using a HTML form).\n4. Call the `authenticate_user` function on the server-side to verify user credentials.\n\n**Note**\n\nThis is a simplified example and does not include any error handling or security measures that you should consider in a production environment, such as:\n\n* Salting and hashing passwords securely\n* Using prepared statements with parameterized queries\n* Validating form data\n* Implementing session management for user authentication\n\nRemember to modify the script according to your specific requirements and best practices.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'users');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login($username, $password) {\n    // Prepare and execute query to verify username and password\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $password);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        // User found, retrieve user data\n        $user_data = $result->fetch_assoc();\n        return array('success' => true, 'user_id' => $user_data['id'], 'username' => $user_data['username']);\n    } else {\n        return array('success' => false);\n    }\n}\n\nfunction authenticate_user() {\n    if (isset($_POST['username']) && isset($_POST['password'])) {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        // Hash password for comparison\n        $hashed_password = hash('sha256', $password);\n\n        // Call login function with hashed password\n        $login_result = login($username, $hashed_password);\n        return $login_result;\n    }\n}\n\nif (isset($_POST['submit'])) {\n    $authenticate_user();\n} else {\n    echo 'Error: No form data submitted';\n}\n```"]}
