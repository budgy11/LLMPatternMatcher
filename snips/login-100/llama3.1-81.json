{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a simple user login function written in PHP. This example uses a basic authentication system where users are stored in a database table called `users`.\n\n**Database Setup**\n\nFirst, create the `users` table in your database using the following SQL query:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255),\n    password VARCHAR(255)\n);\n```\n\n**User Login Function**\n-------------------------\n\n```php\nfunction user_login($username, $password) {\n    // Connect to database\n    require 'db_config.php'; // Your database configuration file\n    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Prepare query\n    $stmt = $conn->prepare(\"SELECT id, username, password FROM users WHERE username = ?\");\n\n    // Bind parameters\n    $stmt->bind_param(\"s\", $username);\n\n    // Execute query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n\n        // Fetch user data\n        $user_data = $result->fetch_assoc();\n\n        // Check password\n        if (password_verify($password, $user_data['password'])) {\n            return array(\n                'id' => $user_data['id'],\n                'username' => $user_data['username']\n            );\n        } else {\n            echo \"Incorrect password\";\n            return false;\n        }\n    } else {\n        echo \"Query failed\";\n        return false;\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $conn->close();\n\n    return false;\n}\n```\n\n**Usage**\n---------\n\nTo use the `user_login` function, call it with the username and password as arguments:\n\n```php\n$username = 'your_username';\n$password = 'your_password';\n\n$user_data = user_login($username, $password);\n\nif ($user_data) {\n    echo \"User logged in successfully\";\n} else {\n    echo \"Login failed\";\n}\n```\n\n**Security Notes**\n------------------\n\n* Always store passwords securely using a library like `password_hash` or `bcrypt`.\n* Never store plain text passwords.\n* Use prepared statements to prevent SQL injection attacks.\n\nRemember to replace the placeholders (`DB_HOST`, `DB_USER`, etc.) in your database configuration file with your actual database credentials.", "code_blocks": [null, "```php\nfunction user_login($username, $password) {\n    // Connect to database\n    require 'db_config.php'; // Your database configuration file\n    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Prepare query\n    $stmt = $conn->prepare(\"SELECT id, username, password FROM users WHERE username = ?\");\n\n    // Bind parameters\n    $stmt->bind_param(\"s\", $username);\n\n    // Execute query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n\n        // Fetch user data\n        $user_data = $result->fetch_assoc();\n\n        // Check password\n        if (password_verify($password, $user_data['password'])) {\n            return array(\n                'id' => $user_data['id'],\n                'username' => $user_data['username']\n            );\n        } else {\n            echo \"Incorrect password\";\n            return false;\n        }\n    } else {\n        echo \"Query failed\";\n        return false;\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $conn->close();\n\n    return false;\n}\n```", "```php\n$username = 'your_username';\n$password = 'your_password';\n\n$user_data = user_login($username, $password);\n\nif ($user_data) {\n    echo \"User logged in successfully\";\n} else {\n    echo \"Login failed\";\n}\n```"]}
