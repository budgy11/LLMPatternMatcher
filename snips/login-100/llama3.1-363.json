{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a simple user login function in PHP. This example uses a MySQL database to store usernames and hashed passwords.\n\n**Database Setup**\n-------------------\n\nFirst, create a MySQL table to store user credentials:\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL,\n  PRIMARY KEY (id)\n);\n```\n\n**Login Function**\n------------------\n\nCreate a PHP file named `login.php` with the following code:\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Function to hash password using password_hash()\n    function hashPassword($password) {\n        return password_hash($password, PASSWORD_DEFAULT);\n    }\n\n    // Function to check user credentials\n    function login($username, $password) {\n        global $conn;\n\n        // Query database for username and hashed password\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        if ($row = $stmt->fetch()) {\n            // Check if provided password matches the stored hash\n            if (password_verify($password, $row['password'])) {\n                return true; // Login successful\n            } else {\n                echo \"Invalid username or password\";\n                return false;\n            }\n        } else {\n            echo \"User not found\";\n            return false;\n        }\n    }\n\n    // Example usage:\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        if (login($username, $password)) {\n            echo \"Login successful!\";\n        }\n    }\n} catch (PDOException $e) {\n    echo \"Database connection failed: \" . $e->getMessage();\n}\n?>\n```\n\n**Security Notes**\n\n* Always use prepared statements to prevent SQL injection attacks.\n* Use password_hash() and password_verify() functions to securely store and compare passwords.\n* Never store plain text passwords in the database.\n\n**Usage**\n\n1. Create a new PHP file (e.g., `login.php`) and copy the code above into it.\n2. Update the `$host`, `$dbname`, `$username`, and `$password` variables with your MySQL connection settings.\n3. Open a web browser and navigate to the URL where you saved `login.php`.\n4. Submit the form with a valid username and password.\n\nRemember to replace placeholders (e.g., `$your_database_name`) with actual values specific to your environment.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Function to hash password using password_hash()\n    function hashPassword($password) {\n        return password_hash($password, PASSWORD_DEFAULT);\n    }\n\n    // Function to check user credentials\n    function login($username, $password) {\n        global $conn;\n\n        // Query database for username and hashed password\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        if ($row = $stmt->fetch()) {\n            // Check if provided password matches the stored hash\n            if (password_verify($password, $row['password'])) {\n                return true; // Login successful\n            } else {\n                echo \"Invalid username or password\";\n                return false;\n            }\n        } else {\n            echo \"User not found\";\n            return false;\n        }\n    }\n\n    // Example usage:\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n\n        if (login($username, $password)) {\n            echo \"Login successful!\";\n        }\n    }\n} catch (PDOException $e) {\n    echo \"Database connection failed: \" . $e->getMessage();\n}\n?>\n```"]}
