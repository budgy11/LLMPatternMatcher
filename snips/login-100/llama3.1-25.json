{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function in PHP:\n```php\n<?php\n\n// Configuration settings\n$databaseHost = 'localhost';\n$databaseName = 'your_database_name';\n$databaseUsername = 'your_database_username';\n$databasePassword = 'your_database_password';\n\n// Function to connect to database and validate user credentials\nfunction loginUser($username, $password) {\n  // Connect to the database\n  try {\n    $conn = new PDO(\"mysql:host=$databaseHost;dbname=$databaseName\", $databaseUsername, $databasePassword);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare and execute query to check if username exists and password is correct\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Check if user record was found\n    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n      // Hashed password stored in database is compared with provided password\n      if (password_verify($password, $row['password'])) {\n        // Login successful, return user data\n        return array(\n          'success' => true,\n          'username' => $row['username'],\n          'email' => $row['email']\n        );\n      } else {\n        // Incorrect password\n        return array('error' => 'Invalid username or password');\n      }\n    } else {\n      // User record not found\n      return array('error' => 'Invalid username or password');\n    }\n\n  } catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n  } finally {\n    // Close connection to database\n    if ($conn) {\n      $conn = null;\n    }\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (isset($_POST['login'])) {\n  $result = loginUser($username, $password);\n  if (isset($result['success'])) {\n    echo 'Login successful!';\n  } else {\n    echo $result['error'];\n  }\n}\n?>\n```\n**Note:**\n\n* This example uses the `PDO` extension for database connection.\n* Passwords are stored in the database as hashed using `password_hash()`, which is recommended for secure password storage. The `password_verify()` function is used to compare the provided password with the hashed one.\n* You should replace the placeholders (`your_database_name`, `your_database_username`, etc.) with your actual database credentials.\n\nThis code assumes that you have a table named \"users\" in your database with columns \"username\", \"email\", and \"password\". The password column stores the hashed passwords. When the user submits their username and password, this function is called to verify their credentials and return the result as an array.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$databaseHost = 'localhost';\n$databaseName = 'your_database_name';\n$databaseUsername = 'your_database_username';\n$databasePassword = 'your_database_password';\n\n// Function to connect to database and validate user credentials\nfunction loginUser($username, $password) {\n  // Connect to the database\n  try {\n    $conn = new PDO(\"mysql:host=$databaseHost;dbname=$databaseName\", $databaseUsername, $databasePassword);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare and execute query to check if username exists and password is correct\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Check if user record was found\n    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n      // Hashed password stored in database is compared with provided password\n      if (password_verify($password, $row['password'])) {\n        // Login successful, return user data\n        return array(\n          'success' => true,\n          'username' => $row['username'],\n          'email' => $row['email']\n        );\n      } else {\n        // Incorrect password\n        return array('error' => 'Invalid username or password');\n      }\n    } else {\n      // User record not found\n      return array('error' => 'Invalid username or password');\n    }\n\n  } catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n  } finally {\n    // Close connection to database\n    if ($conn) {\n      $conn = null;\n    }\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (isset($_POST['login'])) {\n  $result = loginUser($username, $password);\n  if (isset($result['success'])) {\n    echo 'Login successful!';\n  } else {\n    echo $result['error'];\n  }\n}\n?>\n```"]}
