{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n================================\n\nBelow is an example of a simple user login function in PHP. This code uses prepared statements to prevent SQL injection attacks and securely store passwords.\n\n### Database Setup\n\nBefore running this code, create a database with the following table structure:\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT,\n    username VARCHAR(50) NOT NULL UNIQUE,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(100) NOT NULL UNIQUE,\n    PRIMARY KEY (id)\n);\n```\n### PHP Code\n\nCreate a new file called `login.php` and add the following code:\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\n// Connect to database\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\nfunction login($username, $password) {\n    global $pdo;\n\n    // Prepare and execute query\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch user data\n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user) {\n        // Verify password using hash comparison (recommended)\n        if (password_verify($password, $user['password'])) {\n            return array(\n                'success' => true,\n                'username' => $username,\n                'email' => $user['email']\n            );\n        } else {\n            return array('success' => false);\n        }\n    } else {\n        return array('success' => false);\n    }\n}\n\nif (isset($_POST['submit'])) {\n    // Handle form submission\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $result = login($username, $password);\n\n    if ($result['success']) {\n        echo 'Login successful!';\n        session_start();\n        $_SESSION['username'] = $username;\n        $_SESSION['email'] = $result['email'];\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n```\n### HTML Form\n\nCreate an HTML form to collect user input:\n```html\n<form action=\"login.php\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\" name=\"submit\">Login</button>\n</form>\n```\n### Usage\n\n1. Visit `login.php` in your web browser.\n2. Fill out the form with a valid username and password.\n3. Click the \"Login\" button.\n\n**Note:** This is a basic example, and you should consider implementing additional security measures, such as:\n\n* Hashing passwords securely using a library like bcrypt or Argon2\n* Salting passwords to prevent rainbow table attacks\n* Implementing a remember me feature with secure token storage\n\nRemember to adapt this code to your specific needs and follow best practices for PHP development.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\n// Connect to database\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\nfunction login($username, $password) {\n    global $pdo;\n\n    // Prepare and execute query\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch user data\n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user) {\n        // Verify password using hash comparison (recommended)\n        if (password_verify($password, $user['password'])) {\n            return array(\n                'success' => true,\n                'username' => $username,\n                'email' => $user['email']\n            );\n        } else {\n            return array('success' => false);\n        }\n    } else {\n        return array('success' => false);\n    }\n}\n\nif (isset($_POST['submit'])) {\n    // Handle form submission\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $result = login($username, $password);\n\n    if ($result['success']) {\n        echo 'Login successful!';\n        session_start();\n        $_SESSION['username'] = $username;\n        $_SESSION['email'] = $result['email'];\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n```", null]}
